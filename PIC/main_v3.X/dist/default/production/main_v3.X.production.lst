

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Apr 07 04:48:08 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1,inline
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1,inline
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    72                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    79                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    80                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    81  0000                     
    82                           ; Version 2.05
    83                           ; Generated 20/12/2018 GMT
    84                           ; 
    85                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    86                           ; All rights reserved.
    87                           ; 
    88                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    89                           ; 
    90                           ; Redistribution and use in source and binary forms, with or without modification, are
    91                           ; permitted provided that the following conditions are met:
    92                           ; 
    93                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    94                           ;        conditions and the following disclaimer.
    95                           ; 
    96                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    97                           ;        of conditions and the following disclaimer in the documentation and/or other
    98                           ;        materials provided with the distribution.
    99                           ; 
   100                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   101                           ;        software without specific prior written permission.
   102                           ; 
   103                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   104                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   105                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   106                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   107                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   108                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   109                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   110                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   111                           ; 
   112                           ; 
   113                           ; Code-generator required, PIC18F4620 Definitions
   114                           ; 
   115                           ; SFR Addresses
   116  0000                     
   117                           	psect	idataCOMRAM
   118  003B36                     __pidataCOMRAM:
   119                           	opt callstack 0
   120                           
   121                           ;initializer for _dists
   122  003B36  0000               	dw	0
   123  003B38  FFFF               	dw	65535
   124                           
   125                           ;initializer for _send
   126  003B3A  01                 	db	1
   127                           
   128                           	psect	mediumconst
   129  00FDBA                     __pmediumconst:
   130                           	opt callstack 0
   131  00FDBA  00                 	db	0
   132  00FDBB                     _keys:
   133                           	opt callstack 0
   134  00FDBB  31                 	db	49
   135  00FDBC  32                 	db	50
   136  00FDBD  33                 	db	51
   137  00FDBE  41                 	db	65
   138  00FDBF  34                 	db	52
   139  00FDC0  35                 	db	53
   140  00FDC1  36                 	db	54
   141  00FDC2  42                 	db	66
   142  00FDC3  37                 	db	55
   143  00FDC4  38                 	db	56
   144  00FDC5  39                 	db	57
   145  00FDC6  43                 	db	67
   146  00FDC7  2A                 	db	42
   147  00FDC8  30                 	db	48
   148  00FDC9  23                 	db	35
   149  00FDCA  44                 	db	68
   150  00FDCB  00                 	db	0
   151  00FDCC                     __end_of_keys:
   152                           	opt callstack 0
   153  00FDCC  50                 	db	80
   154  00FDCD                     __end_of_LCD_LINE4_ADDR:
   155                           	opt callstack 0
   156  00FDCD  10                 	db	16
   157  00FDCE                     __end_of_LCD_LINE3_ADDR:
   158                           	opt callstack 0
   159  00FDCE                     _LCD_LINE1_ADDR:
   160                           	opt callstack 0
   161  00FDCE  00                 	db	0
   162  00FDCF                     __end_of_LCD_LINE1_ADDR:
   163                           	opt callstack 0
   164  00FDCF                     _LCD_SIZE_VERT:
   165                           	opt callstack 0
   166  00FDCF  04                 	db	4
   167  00FDD0                     __end_of_LCD_SIZE_VERT:
   168                           	opt callstack 0
   169  00FDD0                     _LCD_SIZE_HORZ:
   170                           	opt callstack 0
   171  00FDD0  10                 	db	16
   172  00FDD1                     __end_of_LCD_SIZE_HORZ:
   173                           	opt callstack 0
   174  00FDD1  40                 	db	64
   175  00FDD2                     __end_of_LCD_LINE2_ADDR:
   176                           	opt callstack 0
   177  0000                     _PORTAbits	set	3968
   178  0000                     _TRISAbits	set	3986
   179  0000                     _T1CON	set	4045
   180  0000                     _PORTB	set	3969
   181  0000                     _LATBbits	set	3978
   182  0000                     _TRISBbits	set	3987
   183  0000                     _TMR1H	set	4047
   184  0000                     _TMR1L	set	4046
   185  0000                     _LATDbits	set	3980
   186  0000                     _INTCONbits	set	4082
   187  0000                     _LATE	set	3981
   188  0000                     _TRISE	set	3990
   189  0000                     _LATC	set	3979
   190  0000                     _TRISC	set	3988
   191  0000                     _ADCON1	set	4033
   192  0000                     _TRISD	set	3989
   193  0000                     _LATD	set	3980
   194  0000                     _TRISA	set	3986
   195  0000                     _LATB	set	3978
   196  0000                     _TRISB	set	3987
   197  0000                     _LATAbits	set	3977
   198  0000                     _LATEbits	set	3981
   199  0000                     _LATCbits	set	3979
   200  0000                     _LATA	set	3977
   201  0000                     _SSPBUF	set	4041
   202  0000                     _SSPCON2bits	set	4037
   203  0000                     _SSPCON1	set	4038
   204  0000                     _SSPADD	set	4040
   205  0000                     _TRISCbits	set	3988
   206  0000                     _SSPCON1bits	set	4038
   207  0000                     _SSPCON2	set	4037
   208  0000                     _SSPSTAT	set	4039
   209  0000                     _GIE	set	32663
   210  0000                     _INT1IE	set	32643
   211  0000                     _RB2	set	31754
   212  0000                     _RB3	set	31755
   213  0000                     _RD0	set	31768
   214  0000                     _RD1	set	31769
   215  0000                     _RB4	set	31756
   216  0000                     _RB5	set	31757
   217  0000                     _RB6	set	31758
   218  0000                     _TMR1ON	set	32360
   219  0000                     _RB7	set	31759
   220  0000                     _INT1IF	set	32640
   221  0000                     _RBIE	set	32659
   222  0000                     _RBIF	set	32656
   223  0000                     _RC2	set	31762
   224  0000                     _RC1	set	31761
   225  00FDD2                     STR_41:
   226  00FDD2  50                 	db	80	;'P'
   227  00FDD3  25                 	db	37
   228  00FDD4  64                 	db	100	;'d'
   229  00FDD5  20                 	db	32
   230  00FDD6  44                 	db	68	;'D'
   231  00FDD7  65                 	db	101	;'e'
   232  00FDD8  70                 	db	112	;'p'
   233  00FDD9  3A                 	db	58	;':'
   234  00FDDA  25                 	db	37
   235  00FDDB  64                 	db	100	;'d'
   236  00FDDC  2C                 	db	44
   237  00FDDD  54                 	db	84	;'T'
   238  00FDDE  6F                 	db	111	;'o'
   239  00FDDF  74                 	db	116	;'t'
   240  00FDE0  3A                 	db	58	;':'
   241  00FDE1  25                 	db	37
   242  00FDE2  64                 	db	100	;'d'
   243  00FDE3  00                 	db	0
   244  00FDE4                     STR_31:
   245  00FDE4  20                 	db	32
   246  00FDE5  20                 	db	32
   247  00FDE6  20                 	db	32
   248  00FDE7  20                 	db	32
   249  00FDE8  20                 	db	32
   250  00FDE9  30                 	db	48	;'0'
   251  00FDEA  2D                 	db	45
   252  00FDEB  4D                 	db	77	;'M'
   253  00FDEC  65                 	db	101	;'e'
   254  00FDED  6E                 	db	110	;'n'
   255  00FDEE  75                 	db	117	;'u'
   256  00FDEF  20                 	db	32
   257  00FDF0  20                 	db	32
   258  00FDF1  20                 	db	32
   259  00FDF2  20                 	db	32
   260  00FDF3  20                 	db	32
   261  00FDF4  00                 	db	0
   262  00FDF5                     STR_48:
   263  00FDF5  3C                 	db	60	;'<'
   264  00FDF6  2A                 	db	42
   265  00FDF7  20                 	db	32
   266  00FDF8  20                 	db	32
   267  00FDF9  20                 	db	32
   268  00FDFA  30                 	db	48	;'0'
   269  00FDFB  2D                 	db	45
   270  00FDFC  4D                 	db	77	;'M'
   271  00FDFD  65                 	db	101	;'e'
   272  00FDFE  6E                 	db	110	;'n'
   273  00FDFF  75                 	db	117	;'u'
   274  00FE00  20                 	db	32
   275  00FE01  20                 	db	32
   276  00FE02  20                 	db	32
   277  00FE03  20                 	db	32
   278  00FE04  20                 	db	32
   279  00FE05  00                 	db	0
   280  00FE06                     STR_10:
   281  00FE06  44                 	db	68	;'D'
   282  00FE07  69                 	db	105	;'i'
   283  00FE08  73                 	db	115	;'s'
   284  00FE09  74                 	db	116	;'t'
   285  00FE0A  31                 	db	49	;'1'
   286  00FE0B  3D                 	db	61	;'='
   287  00FE0C  25                 	db	37
   288  00FE0D  64                 	db	100	;'d'
   289  00FE0E  2C                 	db	44
   290  00FE0F  41                 	db	65	;'A'
   291  00FE10  76                 	db	118	;'v'
   292  00FE11  67                 	db	103	;'g'
   293  00FE12  3D                 	db	61	;'='
   294  00FE13  25                 	db	37
   295  00FE14  64                 	db	100	;'d'
   296  00FE15  20                 	db	32
   297  00FE16  00                 	db	0
   298  00FE17                     STR_16:
   299  00FE17  44                 	db	68	;'D'
   300  00FE18  69                 	db	105	;'i'
   301  00FE19  73                 	db	115	;'s'
   302  00FE1A  74                 	db	116	;'t'
   303  00FE1B  34                 	db	52	;'4'
   304  00FE1C  3D                 	db	61	;'='
   305  00FE1D  25                 	db	37
   306  00FE1E  64                 	db	100	;'d'
   307  00FE1F  2C                 	db	44
   308  00FE20  41                 	db	65	;'A'
   309  00FE21  76                 	db	118	;'v'
   310  00FE22  67                 	db	103	;'g'
   311  00FE23  3D                 	db	61	;'='
   312  00FE24  25                 	db	37
   313  00FE25  64                 	db	100	;'d'
   314  00FE26  20                 	db	32
   315  00FE27  00                 	db	0
   316  00FE28                     STR_37:
   317  00FE28  20                 	db	32
   318  00FE29  20                 	db	32
   319  00FE2A  20                 	db	32
   320  00FE2B  20                 	db	32
   321  00FE2C  20                 	db	32
   322  00FE2D  30                 	db	48	;'0'
   323  00FE2E  2D                 	db	45
   324  00FE2F  4D                 	db	77	;'M'
   325  00FE30  65                 	db	101	;'e'
   326  00FE31  6E                 	db	110	;'n'
   327  00FE32  75                 	db	117	;'u'
   328  00FE33  20                 	db	32
   329  00FE34  20                 	db	32
   330  00FE35  20                 	db	32
   331  00FE36  23                 	db	35
   332  00FE37  3E                 	db	62	;'>'
   333  00FE38  00                 	db	0
   334  00FE39                     STR_40:
   335  00FE39  3C                 	db	60	;'<'
   336  00FE3A  2A                 	db	42
   337  00FE3B  20                 	db	32
   338  00FE3C  20                 	db	32
   339  00FE3D  20                 	db	32
   340  00FE3E  30                 	db	48	;'0'
   341  00FE3F  2D                 	db	45
   342  00FE40  4D                 	db	77	;'M'
   343  00FE41  65                 	db	101	;'e'
   344  00FE42  6E                 	db	110	;'n'
   345  00FE43  75                 	db	117	;'u'
   346  00FE44  20                 	db	32
   347  00FE45  20                 	db	32
   348  00FE46  20                 	db	32
   349  00FE47  23                 	db	35
   350  00FE48  3E                 	db	62	;'>'
   351  00FE49  00                 	db	0
   352  00FE4A                     STR_23:
   353  00FE4A  64                 	db	100	;'d'
   354  00FE4B  65                 	db	101	;'e'
   355  00FE4C  74                 	db	116	;'t'
   356  00FE4D  2C                 	db	44
   357  00FE4E  25                 	db	37
   358  00FE4F  64                 	db	100	;'d'
   359  00FE50  2C                 	db	44
   360  00FE51  20                 	db	32
   361  00FE52  74                 	db	116	;'t'
   362  00FE53  63                 	db	99	;'c'
   363  00FE54  6E                 	db	110	;'n'
   364  00FE55  74                 	db	116	;'t'
   365  00FE56  20                 	db	32
   366  00FE57  25                 	db	37
   367  00FE58  64                 	db	100	;'d'
   368  00FE59  00                 	db	0
   369  00FE5A                     STR_12:
   370  00FE5A  44                 	db	68	;'D'
   371  00FE5B  69                 	db	105	;'i'
   372  00FE5C  73                 	db	115	;'s'
   373  00FE5D  74                 	db	116	;'t'
   374  00FE5E  32                 	db	50	;'2'
   375  00FE5F  3D                 	db	61	;'='
   376  00FE60  25                 	db	37
   377  00FE61  64                 	db	100	;'d'
   378  00FE62  2C                 	db	44
   379  00FE63  41                 	db	65	;'A'
   380  00FE64  76                 	db	118	;'v'
   381  00FE65  67                 	db	103	;'g'
   382  00FE66  3D                 	db	61	;'='
   383  00FE67  25                 	db	37
   384  00FE68  64                 	db	100	;'d'
   385  00FE69  00                 	db	0
   386  00FE6A                     STR_14:
   387  00FE6A  44                 	db	68	;'D'
   388  00FE6B  69                 	db	105	;'i'
   389  00FE6C  73                 	db	115	;'s'
   390  00FE6D  74                 	db	116	;'t'
   391  00FE6E  33                 	db	51	;'3'
   392  00FE6F  3D                 	db	61	;'='
   393  00FE70  25                 	db	37
   394  00FE71  64                 	db	100	;'d'
   395  00FE72  2C                 	db	44
   396  00FE73  41                 	db	65	;'A'
   397  00FE74  76                 	db	118	;'v'
   398  00FE75  67                 	db	103	;'g'
   399  00FE76  3D                 	db	61	;'='
   400  00FE77  25                 	db	37
   401  00FE78  64                 	db	100	;'d'
   402  00FE79  00                 	db	0
   403  00FE7A                     STR_26:
   404  00FE7A  33                 	db	51	;'3'
   405  00FE7B  20                 	db	32
   406  00FE7C  2D                 	db	45
   407  00FE7D  20                 	db	32
   408  00FE7E  44                 	db	68	;'D'
   409  00FE7F  61                 	db	97	;'a'
   410  00FE80  74                 	db	116	;'t'
   411  00FE81  65                 	db	101	;'e'
   412  00FE82  26                 	db	38
   413  00FE83  54                 	db	84	;'T'
   414  00FE84  69                 	db	105	;'i'
   415  00FE85  6D                 	db	109	;'m'
   416  00FE86  65                 	db	101	;'e'
   417  00FE87  20                 	db	32
   418  00FE88  00                 	db	0
   419  00FE89                     STR_42:
   420  00FE89  44                 	db	68	;'D'
   421  00FE8A  69                 	db	105	;'i'
   422  00FE8B  73                 	db	115	;'s'
   423  00FE8C  74                 	db	116	;'t'
   424  00FE8D  54                 	db	84	;'T'
   425  00FE8E  6F                 	db	111	;'o'
   426  00FE8F  53                 	db	83	;'S'
   427  00FE90  74                 	db	116	;'t'
   428  00FE91  61                 	db	97	;'a'
   429  00FE92  72                 	db	114	;'r'
   430  00FE93  74                 	db	116	;'t'
   431  00FE94  3A                 	db	58	;':'
   432  00FE95  25                 	db	37
   433  00FE96  64                 	db	100	;'d'
   434  00FE97  00                 	db	0
   435  00FE98                     STR_30:
   436  00FE98  4D                 	db	77	;'M'
   437  00FE99  61                 	db	97	;'a'
   438  00FE9A  63                 	db	99	;'c'
   439  00FE9B  68                 	db	104	;'h'
   440  00FE9C  69                 	db	105	;'i'
   441  00FE9D  6E                 	db	110	;'n'
   442  00FE9E  65                 	db	101	;'e'
   443  00FE9F  20                 	db	32
   444  00FEA0  49                 	db	73	;'I'
   445  00FEA1  6E                 	db	110	;'n'
   446  00FEA2  20                 	db	32
   447  00FEA3  55                 	db	85	;'U'
   448  00FEA4  73                 	db	115	;'s'
   449  00FEA5  65                 	db	101	;'e'
   450  00FEA6  00                 	db	0
   451  00FEA7                     STR_50:
   452  00FEA7  25                 	db	37
   453  00FEA8  30                 	db	48	;'0'
   454  00FEA9  32                 	db	50	;'2'
   455  00FEAA  78                 	db	120	;'x'
   456  00FEAB  2F                 	db	47
   457  00FEAC  25                 	db	37
   458  00FEAD  30                 	db	48	;'0'
   459  00FEAE  32                 	db	50	;'2'
   460  00FEAF  78                 	db	120	;'x'
   461  00FEB0  2F                 	db	47
   462  00FEB1  25                 	db	37
   463  00FEB2  30                 	db	48	;'0'
   464  00FEB3  32                 	db	50	;'2'
   465  00FEB4  78                 	db	120	;'x'
   466  00FEB5  00                 	db	0
   467  00FEB6                     STR_51:
   468  00FEB6  25                 	db	37
   469  00FEB7  30                 	db	48	;'0'
   470  00FEB8  32                 	db	50	;'2'
   471  00FEB9  78                 	db	120	;'x'
   472  00FEBA  3A                 	db	58	;':'
   473  00FEBB  25                 	db	37
   474  00FEBC  30                 	db	48	;'0'
   475  00FEBD  32                 	db	50	;'2'
   476  00FEBE  78                 	db	120	;'x'
   477  00FEBF  3A                 	db	58	;':'
   478  00FEC0  25                 	db	37
   479  00FEC1  30                 	db	48	;'0'
   480  00FEC2  32                 	db	50	;'2'
   481  00FEC3  78                 	db	120	;'x'
   482  00FEC4  00                 	db	0
   483  00FEC5                     STR_39:
   484  00FEC5  4E                 	db	78	;'N'
   485  00FEC6  6F                 	db	111	;'o'
   486  00FEC7  2E                 	db	46
   487  00FEC8  20                 	db	32
   488  00FEC9  50                 	db	80	;'P'
   489  00FECA  6F                 	db	111	;'o'
   490  00FECB  6C                 	db	108	;'l'
   491  00FECC  65                 	db	101	;'e'
   492  00FECD  73                 	db	115	;'s'
   493  00FECE  3A                 	db	58	;':'
   494  00FECF  20                 	db	32
   495  00FED0  25                 	db	37
   496  00FED1  64                 	db	100	;'d'
   497  00FED2  00                 	db	0
   498  00FED3                     STR_38:
   499  00FED3  4E                 	db	78	;'N'
   500  00FED4  6F                 	db	111	;'o'
   501  00FED5  2E                 	db	46
   502  00FED6  20                 	db	32
   503  00FED7  54                 	db	84	;'T'
   504  00FED8  69                 	db	105	;'i'
   505  00FED9  72                 	db	114	;'r'
   506  00FEDA  65                 	db	101	;'e'
   507  00FEDB  73                 	db	115	;'s'
   508  00FEDC  3A                 	db	58	;':'
   509  00FEDD  20                 	db	32
   510  00FEDE  25                 	db	37
   511  00FEDF  64                 	db	100	;'d'
   512  00FEE0  00                 	db	0
   513  00FEE1                     STR_7:
   514  00FEE1  53                 	db	83	;'S'
   515  00FEE2  74                 	db	116	;'t'
   516  00FEE3  65                 	db	101	;'e'
   517  00FEE4  70                 	db	112	;'p'
   518  00FEE5  20                 	db	32
   519  00FEE6  73                 	db	115	;'s'
   520  00FEE7  70                 	db	112	;'p'
   521  00FEE8  65                 	db	101	;'e'
   522  00FEE9  65                 	db	101	;'e'
   523  00FEEA  64                 	db	100	;'d'
   524  00FEEB  20                 	db	32
   525  00FEEC  25                 	db	37
   526  00FEED  64                 	db	100	;'d'
   527  00FEEE  00                 	db	0
   528  00FEEF                     STR_19:
   529  00FEEF  62                 	db	98	;'b'
   530  00FEF0  72                 	db	114	;'r'
   531  00FEF1  65                 	db	101	;'e'
   532  00FEF2  61                 	db	97	;'a'
   533  00FEF3  6B                 	db	107	;'k'
   534  00FEF4  20                 	db	32
   535  00FEF5  68                 	db	104	;'h'
   536  00FEF6  65                 	db	101	;'e'
   537  00FEF7  72                 	db	114	;'r'
   538  00FEF8  65                 	db	101	;'e'
   539  00FEF9  65                 	db	101	;'e'
   540  00FEFA  3F                 	db	63	;'?'
   541  00FEFB  00                 	db	0
   542  00FEFC                     STR_54:
   543  00FEFC  6D                 	db	109	;'m'
   544  00FEFD  6F                 	db	111	;'o'
   545  00FEFE  72                 	db	114	;'r'
   546  00FEFF  65                 	db	101	;'e'
   547  00FF00  20                 	db	32
   548  00FF01  77                 	db	119	;'w'
   549  00FF02  61                 	db	97	;'a'
   550  00FF03  69                 	db	105	;'i'
   551  00FF04  74                 	db	116	;'t'
   552  00FF05  69                 	db	105	;'i'
   553  00FF06  6E                 	db	110	;'n'
   554  00FF07  67                 	db	103	;'g'
   555  00FF08  00                 	db	0
   556  00FF09                     STR_2:
   557  00FF09  53                 	db	83	;'S'
   558  00FF0A  74                 	db	116	;'t'
   559  00FF0B  65                 	db	101	;'e'
   560  00FF0C  70                 	db	112	;'p'
   561  00FF0D  70                 	db	112	;'p'
   562  00FF0E  65                 	db	101	;'e'
   563  00FF0F  72                 	db	114	;'r'
   564  00FF10  20                 	db	32
   565  00FF11  64                 	db	100	;'d'
   566  00FF12  6F                 	db	111	;'o'
   567  00FF13  6E                 	db	110	;'n'
   568  00FF14  65                 	db	101	;'e'
   569  00FF15  00                 	db	0
   570  00FF16                     STR_49:
   571  00FF16  44                 	db	68	;'D'
   572  00FF17  41                 	db	65	;'A'
   573  00FF18  54                 	db	84	;'T'
   574  00FF19  45                 	db	69	;'E'
   575  00FF1A  20                 	db	32
   576  00FF1B  26                 	db	38
   577  00FF1C  20                 	db	32
   578  00FF1D  54                 	db	84	;'T'
   579  00FF1E  49                 	db	73	;'I'
   580  00FF1F  4D                 	db	77	;'M'
   581  00FF20  45                 	db	69	;'E'
   582  00FF21  00                 	db	0
   583  00FF22                     STR_22:
   584  00FF22  73                 	db	115	;'s'
   585  00FF23  74                 	db	116	;'t'
   586  00FF24  65                 	db	101	;'e'
   587  00FF25  70                 	db	112	;'p'
   588  00FF26  73                 	db	115	;'s'
   589  00FF27  61                 	db	97	;'a'
   590  00FF28  64                 	db	100	;'d'
   591  00FF29  6A                 	db	106	;'j'
   592  00FF2A  20                 	db	32
   593  00FF2B  25                 	db	37
   594  00FF2C  64                 	db	100	;'d'
   595  00FF2D  00                 	db	0
   596  00FF2E                     STR_58:
   597  00FF2E  61                 	db	97	;'a'
   598  00FF2F  76                 	db	118	;'v'
   599  00FF30  67                 	db	103	;'g'
   600  00FF31  20                 	db	32
   601  00FF32  64                 	db	100	;'d'
   602  00FF33  69                 	db	105	;'i'
   603  00FF34  73                 	db	115	;'s'
   604  00FF35  74                 	db	116	;'t'
   605  00FF36  20                 	db	32
   606  00FF37  25                 	db	37
   607  00FF38  64                 	db	100	;'d'
   608  00FF39  00                 	db	0
   609  00FF3A                     STR_43:
   610  00FF3A  44                 	db	68	;'D'
   611  00FF3B  69                 	db	105	;'i'
   612  00FF3C  73                 	db	115	;'s'
   613  00FF3D  74                 	db	116	;'t'
   614  00FF3E  54                 	db	84	;'T'
   615  00FF3F  6F                 	db	111	;'o'
   616  00FF40  43                 	db	67	;'C'
   617  00FF41  4C                 	db	76	;'L'
   618  00FF42  3A                 	db	58	;':'
   619  00FF43  25                 	db	37
   620  00FF44  64                 	db	100	;'d'
   621  00FF45  00                 	db	0
   622  00FF46                     STR_25:
   623  00FF46  32                 	db	50	;'2'
   624  00FF47  20                 	db	32
   625  00FF48  2D                 	db	45
   626  00FF49  20                 	db	32
   627  00FF4A  53                 	db	83	;'S'
   628  00FF4B  75                 	db	117	;'u'
   629  00FF4C  6D                 	db	109	;'m'
   630  00FF4D  6D                 	db	109	;'m'
   631  00FF4E  61                 	db	97	;'a'
   632  00FF4F  72                 	db	114	;'r'
   633  00FF50  79                 	db	121	;'y'
   634  00FF51  00                 	db	0
   635  00FF52                     STR_59:
   636  00FF52  70                 	db	112	;'p'
   637  00FF53  6F                 	db	111	;'o'
   638  00FF54  6C                 	db	108	;'l'
   639  00FF55  65                 	db	101	;'e'
   640  00FF56  73                 	db	115	;'s'
   641  00FF57  20                 	db	32
   642  00FF58  64                 	db	100	;'d'
   643  00FF59  20                 	db	32
   644  00FF5A  25                 	db	37
   645  00FF5B  64                 	db	100	;'d'
   646  00FF5C  00                 	db	0
   647  00FF5D                     STR_20:
   648  00FF5D  6D                 	db	109	;'m'
   649  00FF5E  69                 	db	105	;'i'
   650  00FF5F  6E                 	db	110	;'n'
   651  00FF60  69                 	db	105	;'i'
   652  00FF61  6D                 	db	109	;'m'
   653  00FF62  75                 	db	117	;'u'
   654  00FF63  6D                 	db	109	;'m'
   655  00FF64  20                 	db	32
   656  00FF65  25                 	db	37
   657  00FF66  64                 	db	100	;'d'
   658  00FF67  00                 	db	0
   659  00FF68                     STR_60:
   660  00FF68  70                 	db	112	;'p'
   661  00FF69  6F                 	db	111	;'o'
   662  00FF6A  6C                 	db	108	;'l'
   663  00FF6B  65                 	db	101	;'e'
   664  00FF6C  73                 	db	115	;'s'
   665  00FF6D  20                 	db	32
   666  00FF6E  64                 	db	100	;'d'
   667  00FF6F  6F                 	db	111	;'o'
   668  00FF70  6E                 	db	110	;'n'
   669  00FF71  65                 	db	101	;'e'
   670  00FF72  00                 	db	0
   671  00FF73                     STR_3:
   672  00FF73  53                 	db	83	;'S'
   673  00FF74  65                 	db	101	;'e'
   674  00FF75  72                 	db	114	;'r'
   675  00FF76  76                 	db	118	;'v'
   676  00FF77  6F                 	db	111	;'o'
   677  00FF78  20                 	db	32
   678  00FF79  64                 	db	100	;'d'
   679  00FF7A  6F                 	db	111	;'o'
   680  00FF7B  6E                 	db	110	;'n'
   681  00FF7C  65                 	db	101	;'e'
   682  00FF7D  00                 	db	0
   683  00FF7E                     STR_11:
   684  00FF7E  44                 	db	68	;'D'
   685  00FF7F  69                 	db	105	;'i'
   686  00FF80  73                 	db	115	;'s'
   687  00FF81  74                 	db	116	;'t'
   688  00FF82  31                 	db	49	;'1'
   689  00FF83  20                 	db	32
   690  00FF84  3D                 	db	61	;'='
   691  00FF85  20                 	db	32
   692  00FF86  58                 	db	88	;'X'
   693  00FF87  00                 	db	0
   694  00FF88                     STR_13:
   695  00FF88  44                 	db	68	;'D'
   696  00FF89  69                 	db	105	;'i'
   697  00FF8A  73                 	db	115	;'s'
   698  00FF8B  74                 	db	116	;'t'
   699  00FF8C  32                 	db	50	;'2'
   700  00FF8D  20                 	db	32
   701  00FF8E  3D                 	db	61	;'='
   702  00FF8F  20                 	db	32
   703  00FF90  58                 	db	88	;'X'
   704  00FF91  00                 	db	0
   705  00FF92                     STR_15:
   706  00FF92  44                 	db	68	;'D'
   707  00FF93  69                 	db	105	;'i'
   708  00FF94  73                 	db	115	;'s'
   709  00FF95  74                 	db	116	;'t'
   710  00FF96  33                 	db	51	;'3'
   711  00FF97  20                 	db	32
   712  00FF98  3D                 	db	61	;'='
   713  00FF99  20                 	db	32
   714  00FF9A  58                 	db	88	;'X'
   715  00FF9B  00                 	db	0
   716  00FF9C                     STR_17:
   717  00FF9C  44                 	db	68	;'D'
   718  00FF9D  69                 	db	105	;'i'
   719  00FF9E  73                 	db	115	;'s'
   720  00FF9F  74                 	db	116	;'t'
   721  00FFA0  34                 	db	52	;'4'
   722  00FFA1  20                 	db	32
   723  00FFA2  3D                 	db	61	;'='
   724  00FFA3  20                 	db	32
   725  00FFA4  58                 	db	88	;'X'
   726  00FFA5  00                 	db	0
   727  00FFA6                     STR_56:
   728  00FFA6  64                 	db	100	;'d'
   729  00FFA7  75                 	db	117	;'u'
   730  00FFA8  6E                 	db	110	;'n'
   731  00FFA9  20                 	db	32
   732  00FFAA  62                 	db	98	;'b'
   733  00FFAB  72                 	db	114	;'r'
   734  00FFAC  65                 	db	101	;'e'
   735  00FFAD  61                 	db	97	;'a'
   736  00FFAE  6B                 	db	107	;'k'
   737  00FFAF  00                 	db	0
   738  00FFB0                     STR_61:
   739  00FFB0  62                 	db	98	;'b'
   740  00FFB1  61                 	db	97	;'a'
   741  00FFB2  63                 	db	99	;'c'
   742  00FFB3  6B                 	db	107	;'k'
   743  00FFB4  77                 	db	119	;'w'
   744  00FFB5  61                 	db	97	;'a'
   745  00FFB6  72                 	db	114	;'r'
   746  00FFB7  64                 	db	100	;'d'
   747  00FFB8  73                 	db	115	;'s'
   748  00FFB9  00                 	db	0
   749  00FFBA                     STR_55:
   750  00FFBA  64                 	db	100	;'d'
   751  00FFBB  6F                 	db	111	;'o'
   752  00FFBC  6E                 	db	110	;'n'
   753  00FFBD  65                 	db	101	;'e'
   754  00FFBE  20                 	db	32
   755  00FFBF  77                 	db	119	;'w'
   756  00FFC0  61                 	db	97	;'a'
   757  00FFC1  69                 	db	105	;'i'
   758  00FFC2  74                 	db	116	;'t'
   759  00FFC3  00                 	db	0
   760  00FFC4                     STR_24:
   761  00FFC4  31                 	db	49	;'1'
   762  00FFC5  20                 	db	32
   763  00FFC6  2D                 	db	45
   764  00FFC7  20                 	db	32
   765  00FFC8  53                 	db	83	;'S'
   766  00FFC9  74                 	db	116	;'t'
   767  00FFCA  61                 	db	97	;'a'
   768  00FFCB  72                 	db	114	;'r'
   769  00FFCC  74                 	db	116	;'t'
   770  00FFCD  00                 	db	0
   771  00FFCE                     STR_5:
   772  00FFCE  73                 	db	115	;'s'
   773  00FFCF  74                 	db	116	;'t'
   774  00FFD0  65                 	db	101	;'e'
   775  00FFD1  70                 	db	112	;'p'
   776  00FFD2  70                 	db	112	;'p'
   777  00FFD3  70                 	db	112	;'p'
   778  00FFD4  20                 	db	32
   779  00FFD5  25                 	db	37
   780  00FFD6  64                 	db	100	;'d'
   781  00FFD7  00                 	db	0
   782  00FFD8                     STR_1:
   783  00FFD8  63                 	db	99	;'c'
   784  00FFD9  6E                 	db	110	;'n'
   785  00FFDA  74                 	db	116	;'t'
   786  00FFDB  20                 	db	32
   787  00FFDC  69                 	db	105	;'i'
   788  00FFDD  73                 	db	115	;'s'
   789  00FFDE  20                 	db	32
   790  00FFDF  25                 	db	37
   791  00FFE0  64                 	db	100	;'d'
   792  00FFE1  00                 	db	0
   793  00FFE2                     STR_32:
   794  00FFE2  4F                 	db	79	;'O'
   795  00FFE3  70                 	db	112	;'p'
   796  00FFE4  20                 	db	32
   797  00FFE5  54                 	db	84	;'T'
   798  00FFE6  69                 	db	105	;'i'
   799  00FFE7  6D                 	db	109	;'m'
   800  00FFE8  65                 	db	101	;'e'
   801  00FFE9  3A                 	db	58	;':'
   802  00FFEA  00                 	db	0
   803  00FFEB                     STR_18:
   804  00FFEB  6F                 	db	111	;'o'
   805  00FFEC  72                 	db	114	;'r'
   806  00FFED  20                 	db	32
   807  00FFEE  68                 	db	104	;'h'
   808  00FFEF  65                 	db	101	;'e'
   809  00FFF0  72                 	db	114	;'r'
   810  00FFF1  65                 	db	101	;'e'
   811  00FFF2  00                 	db	0
   812  00FFF3                     STR_6:
   813  00FFF3  73                 	db	115	;'s'
   814  00FFF4  74                 	db	116	;'t'
   815  00FFF5  65                 	db	101	;'e'
   816  00FFF6  70                 	db	112	;'p'
   817  00FFF7  31                 	db	49	;'1'
   818  00FFF8  00                 	db	0
   819  00FFF9                     STR_9:
   820  00FFF9  77                 	db	119	;'w'
   821  00FFFA  68                 	db	104	;'h'
   822  00FFFB  61                 	db	97	;'a'
   823  00FFFC  74                 	db	116	;'t'
   824  00FFFD  00                 	db	0
   825  0000                     
   826                           ; #config settings
   827  00FFFE  00                 	db	0	; dummy byte at the end
   828  0000                     
   829                           	psect	cinit
   830  00358C                     __pcinit:
   831                           	opt callstack 0
   832  00358C                     start_initialization:
   833                           	opt callstack 0
   834  00358C                     __initialization:
   835                           	opt callstack 0
   836                           
   837                           ; Initialize objects allocated to COMRAM (5 bytes)
   838                           ; load TBLPTR registers with __pidataCOMRAM
   839  00358C  0E36               	movlw	low __pidataCOMRAM
   840  00358E  6EF6               	movwf	tblptrl,c
   841  003590  0E3B               	movlw	high __pidataCOMRAM
   842  003592  6EF7               	movwf	tblptrh,c
   843  003594  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   844  003596  6EF8               	movwf	tblptru,c
   845  003598  EE00  F069         	lfsr	0,__pdataCOMRAM
   846  00359C  EE10 F005          	lfsr	1,5
   847  0035A0                     copy_data0:
   848  0035A0  0009               	tblrd		*+
   849  0035A2  CFF5 FFEE          	movff	tablat,postinc0
   850  0035A6  50E5               	movf	postdec1,w,c
   851  0035A8  50E1               	movf	fsr1l,w,c
   852  0035AA  E1FA               	bnz	copy_data0
   853                           
   854                           ; Clear objects allocated to BANK2 (128 bytes)
   855  0035AC  EE02  F000         	lfsr	0,__pbssBANK2
   856  0035B0  0E80               	movlw	128
   857  0035B2                     clear_0:
   858  0035B2  6AEE               	clrf	postinc0,c
   859  0035B4  06E8               	decf	wreg,f,c
   860  0035B6  E1FD               	bnz	clear_0
   861                           
   862                           ; Clear objects allocated to BANK1 (60 bytes)
   863  0035B8  EE01  F05C         	lfsr	0,__pbssBANK1
   864  0035BC  0E3C               	movlw	60
   865  0035BE                     clear_1:
   866  0035BE  6AEE               	clrf	postinc0,c
   867  0035C0  06E8               	decf	wreg,f,c
   868  0035C2  E1FD               	bnz	clear_1
   869                           
   870                           ; Clear objects allocated to BANK0 (1 bytes)
   871  0035C4  0100               	movlb	0
   872  0035C6  6BFF               	clrf	__pbssBANK0& (0+255),b
   873                           
   874                           ; Clear objects allocated to COMRAM (49 bytes)
   875  0035C8  EE00  F038         	lfsr	0,__pbssCOMRAM
   876  0035CC  0E31               	movlw	49
   877  0035CE                     clear_2:
   878  0035CE  6AEE               	clrf	postinc0,c
   879  0035D0  06E8               	decf	wreg,f,c
   880  0035D2  E1FD               	bnz	clear_2
   881  0035D4                     end_of_initialization:
   882                           	opt callstack 0
   883  0035D4                     __end_of__initialization:
   884                           	opt callstack 0
   885  0035D4  906E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   886  0035D6  926E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   887  0035D8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   888  0035DA  6EF8               	movwf	tblptru,c
   889  0035DC  0100               	movlb	0
   890  0035DE  EFB5  F006         	goto	_main	;jump to C main() function
   891                           
   892                           	psect	bssCOMRAM
   893  000038                     __pbssCOMRAM:
   894                           	opt callstack 0
   895  000038                     _sum:
   896                           	opt callstack 0
   897  000038                     	ds	8
   898  000040                     _sumf:
   899                           	opt callstack 0
   900  000040                     	ds	4
   901  000044                     _avg_dist:
   902                           	opt callstack 0
   903  000044                     	ds	4
   904  000048                     _nout:
   905                           	opt callstack 0
   906  000048                     	ds	2
   907  00004A                     _width:
   908                           	opt callstack 0
   909  00004A                     	ds	2
   910  00004C                     _prec:
   911                           	opt callstack 0
   912  00004C                     	ds	2
   913  00004E                     _flags:
   914                           	opt callstack 0
   915  00004E                     	ds	2
   916  000050                     _meas:
   917                           	opt callstack 0
   918  000050                     	ds	2
   919  000052                     _poles_detected:
   920                           	opt callstack 0
   921  000052                     	ds	2
   922  000054                     _tires_deployed:
   923                           	opt callstack 0
   924  000054                     	ds	2
   925  000056                     _tick:
   926                           	opt callstack 0
   927  000056                     	ds	2
   928  000058                     _sens:
   929                           	opt callstack 0
   930  000058                     	ds	2
   931  00005A                     _b:
   932                           	opt callstack 0
   933  00005A                     	ds	2
   934  00005C                     _timer_count:
   935                           	opt callstack 0
   936  00005C                     	ds	2
   937  00005E                     _data:
   938                           	opt callstack 0
   939  00005E                     	ds	1
   940  00005F                     _keypress:
   941                           	opt callstack 0
   942  00005F                     	ds	1
   943  000060                     _counter:
   944                           	opt callstack 0
   945  000060                     	ds	1
   946  000061                     _a:
   947                           	opt callstack 0
   948  000061                     	ds	8
   949                           
   950                           	psect	dataCOMRAM
   951  000069                     __pdataCOMRAM:
   952                           	opt callstack 0
   953  000069                     _dists:
   954                           	opt callstack 0
   955  000069                     	ds	4
   956  00006D                     _send:
   957                           	opt callstack 0
   958  00006D                     	ds	1
   959                           
   960                           	psect	bssBANK0
   961  0000FF                     __pbssBANK0:
   962                           	opt callstack 0
   963  0000FF                     _temp:
   964                           	opt callstack 0
   965  0000FF                     	ds	1
   966                           
   967                           	psect	bssBANK1
   968  00015C                     __pbssBANK1:
   969                           	opt callstack 0
   970  00015C                     _prev_dist_final:
   971                           	opt callstack 0
   972  00015C                     	ds	8
   973  000164                     _time:
   974                           	opt callstack 0
   975  000164                     	ds	7
   976  00016B                     _pressed:
   977                           	opt callstack 0
   978  00016B                     	ds	2
   979  00016D                     _i:
   980                           	opt callstack 0
   981  00016D                     	ds	2
   982  00016F                     _disp:
   983                           	opt callstack 0
   984  00016F                     	ds	2
   985  000171                     _state:
   986                           	opt callstack 0
   987  000171                     	ds	2
   988  000173                     _temp_int:
   989                           	opt callstack 0
   990  000173                     	ds	2
   991  000175                     _cnt:
   992                           	opt callstack 0
   993  000175                     	ds	2
   994  000177                     _key_was_pressed:
   995                           	opt callstack 0
   996  000177                     	ds	1
   997  000178                     _dbuf:
   998                           	opt callstack 0
   999  000178                     	ds	32
  1000                           
  1001                           	psect	bssBANK2
  1002  000200                     __pbssBANK2:
  1003                           	opt callstack 0
  1004  000200                     _Pole:
  1005                           	opt callstack 0
  1006  000200                     	ds	80
  1007  000250                     _dist_final:
  1008                           	opt callstack 0
  1009  000250                     	ds	48
  1010                           
  1011                           	psect	cstackBANK2
  1012  000280                     __pcstackBANK2:
  1013                           	opt callstack 0
  1014  000280                     main@Pole:
  1015                           	opt callstack 0
  1016                           
  1017                           ; 80 bytes @ 0x0
  1018  000280                     	ds	82
  1019  0002D2                     main@pole_cl_dist:
  1020                           	opt callstack 0
  1021                           
  1022                           ; 2 bytes @ 0x52
  1023  0002D2                     	ds	2
  1024  0002D4                     main@steps2_adj:
  1025                           	opt callstack 0
  1026                           
  1027                           ; 2 bytes @ 0x54
  1028  0002D4                     	ds	2
  1029  0002D6                     main@i:
  1030                           	opt callstack 0
  1031                           
  1032                           ; 2 bytes @ 0x56
  1033  0002D6                     	ds	2
  1034  0002D8                     main@i_1018:
  1035                           	opt callstack 0
  1036                           
  1037                           ; 2 bytes @ 0x58
  1038  0002D8                     	ds	2
  1039  0002DA                     main@act_done:
  1040                           	opt callstack 0
  1041                           
  1042                           ; 1 bytes @ 0x5A
  1043  0002DA                     	ds	1
  1044  0002DB                     main@arduino_stopped:
  1045                           	opt callstack 0
  1046                           
  1047                           ; 1 bytes @ 0x5B
  1048  0002DB                     	ds	1
  1049  0002DC                     main@stack:
  1050                           	opt callstack 0
  1051                           
  1052                           ; 2 bytes @ 0x5C
  1053  0002DC                     	ds	2
  1054  0002DE                     main@k:
  1055                           	opt callstack 0
  1056                           
  1057                           ; 2 bytes @ 0x5E
  1058  0002DE                     	ds	2
  1059  0002E0                     main@t_count:
  1060                           	opt callstack 0
  1061                           
  1062                           ; 2 bytes @ 0x60
  1063  0002E0                     	ds	2
  1064  0002E2                     main@t_dep:
  1065                           	opt callstack 0
  1066                           
  1067                           ; 2 bytes @ 0x62
  1068  0002E2                     	ds	2
  1069  0002E4                     main@i_1026:
  1070                           	opt callstack 0
  1071                           
  1072                           ; 2 bytes @ 0x64
  1073  0002E4                     	ds	2
  1074  0002E6                     main@poles_detected:
  1075                           	opt callstack 0
  1076                           
  1077                           ; 2 bytes @ 0x66
  1078  0002E6                     	ds	2
  1079  0002E8                     main@prev_avg_dist:
  1080                           	opt callstack 0
  1081                           
  1082                           ; 4 bytes @ 0x68
  1083  0002E8                     	ds	4
  1084                           
  1085                           	psect	cstackBANK1
  1086  000100                     __pcstackBANK1:
  1087                           	opt callstack 0
  1088  000100                     ??_stepper2:
  1089  000100                     ??_stepper2_back:
  1090  000100                     ??_UI_main:
  1091  000100                     stepper@count_stepper:
  1092                           	opt callstack 0
  1093  000100                     number_deploy@tires_t:
  1094                           	opt callstack 0
  1095                           
  1096                           ; 2 bytes @ 0x0
  1097  000100                     	ds	1
  1098  000101                     stepper2_back@direction:
  1099                           	opt callstack 0
  1100                           
  1101                           ; 1 bytes @ 0x1
  1102  000101                     	ds	1
  1103  000102                     stepper@i:
  1104                           	opt callstack 0
  1105  000102                     stepper2_back@count_stepper:
  1106                           	opt callstack 0
  1107  000102                     ultrasonic_main@sensed:
  1108                           	opt callstack 0
  1109  000102                     number_deploy@tires_detected:
  1110                           	opt callstack 0
  1111                           
  1112                           ; 2 bytes @ 0x2
  1113  000102                     	ds	2
  1114  000104                     stepper@i_376:
  1115                           	opt callstack 0
  1116  000104                     stepper2_back@i:
  1117                           	opt callstack 0
  1118  000104                     ultrasonic_main@step2_offset:
  1119                           	opt callstack 0
  1120  000104                     number_deploy@t_count:
  1121                           	opt callstack 0
  1122  000104                     UI_main@Pole:
  1123                           	opt callstack 0
  1124                           
  1125                           ; 80 bytes @ 0x4
  1126  000104                     	ds	1
  1127  000105                     stepper2@i:
  1128                           	opt callstack 0
  1129                           
  1130                           ; 2 bytes @ 0x5
  1131  000105                     	ds	1
  1132  000106                     ultrasonic_main@steps2_adj:
  1133                           	opt callstack 0
  1134                           
  1135                           ; 2 bytes @ 0x6
  1136  000106                     	ds	1
  1137  000107                     stepper2@i_384:
  1138                           	opt callstack 0
  1139                           
  1140                           ; 2 bytes @ 0x7
  1141  000107                     	ds	1
  1142  000108                     ultrasonic_main@min_us_dist_914:
  1143                           	opt callstack 0
  1144                           
  1145                           ; 2 bytes @ 0x8
  1146  000108                     	ds	1
  1147  000109                     stepper2@count_stepper:
  1148                           	opt callstack 0
  1149                           
  1150                           ; 2 bytes @ 0x9
  1151  000109                     	ds	2
  1152  00010B                     stepper2@direction:
  1153                           	opt callstack 0
  1154                           
  1155                           ; 1 bytes @ 0xB
  1156  00010B                     	ds	1
  1157  00010C                     actuators_main@stack:
  1158                           	opt callstack 0
  1159                           
  1160                           ; 2 bytes @ 0xC
  1161  00010C                     	ds	2
  1162  00010E                     actuators_main@steps2_adj:
  1163                           	opt callstack 0
  1164                           
  1165                           ; 2 bytes @ 0xE
  1166  00010E                     	ds	2
  1167  000110                     ??_actuators_main:
  1168                           
  1169                           ; 1 bytes @ 0x10
  1170  000110                     	ds	2
  1171  000112                     actuators_main@act_cnt:
  1172                           	opt callstack 0
  1173                           
  1174                           ; 2 bytes @ 0x12
  1175  000112                     	ds	66
  1176  000154                     UI_main@keypress:
  1177                           	opt callstack 0
  1178                           
  1179                           ; 1 bytes @ 0x54
  1180  000154                     	ds	1
  1181  000155                     UI_main@tick:
  1182                           	opt callstack 0
  1183                           
  1184                           ; 4 bytes @ 0x55
  1185  000155                     	ds	4
  1186  000159                     UI_main@i:
  1187                           	opt callstack 0
  1188                           
  1189                           ; 1 bytes @ 0x59
  1190  000159                     	ds	1
  1191  00015A                     ??_main:
  1192                           
  1193                           ; 1 bytes @ 0x5A
  1194  00015A                     	ds	2
  1195                           
  1196                           	psect	cstackBANK0
  1197  000080                     __pcstackBANK0:
  1198                           	opt callstack 0
  1199  000080                     ??_I2C_Master_Wait:
  1200  000080                     ??_servoRotate0:
  1201  000080                     ??_servoRotate180:
  1202  000080                     ??_trig:
  1203  000080                     ?_strlen:
  1204                           	opt callstack 0
  1205  000080                     ?_isupper:
  1206                           	opt callstack 0
  1207  000080                     ?_isalpha:
  1208                           	opt callstack 0
  1209  000080                     ?_isdigit:
  1210                           	opt callstack 0
  1211  000080                     ?_isspace:
  1212                           	opt callstack 0
  1213  000080                     ?_islower:
  1214                           	opt callstack 0
  1215  000080                     ?_min:
  1216                           	opt callstack 0
  1217  000080                     ?___wmul:
  1218                           	opt callstack 0
  1219  000080                     ?___awdiv:
  1220                           	opt callstack 0
  1221  000080                     ?___lldiv:
  1222                           	opt callstack 0
  1223  000080                     ?___llmod:
  1224                           	opt callstack 0
  1225  000080                     ?___aodiv:
  1226                           	opt callstack 0
  1227  000080                     ?___aomod:
  1228                           	opt callstack 0
  1229  000080                     pulse_e@interruptState:
  1230                           	opt callstack 0
  1231  000080                     min@array:
  1232                           	opt callstack 0
  1233  000080                     ___wmul@multiplier:
  1234                           	opt callstack 0
  1235  000080                     ___awdiv@dividend:
  1236                           	opt callstack 0
  1237  000080                     isalpha@c:
  1238                           	opt callstack 0
  1239  000080                     isdigit@c:
  1240                           	opt callstack 0
  1241  000080                     isspace@c:
  1242                           	opt callstack 0
  1243  000080                     isupper@c:
  1244                           	opt callstack 0
  1245  000080                     strlen@s:
  1246                           	opt callstack 0
  1247  000080                     islower@c:
  1248                           	opt callstack 0
  1249  000080                     ___lldiv@dividend:
  1250                           	opt callstack 0
  1251  000080                     ___llmod@dividend:
  1252                           	opt callstack 0
  1253  000080                     ___aodiv@dividend:
  1254                           	opt callstack 0
  1255  000080                     ___aomod@dividend:
  1256                           	opt callstack 0
  1257                           
  1258                           ; 8 bytes @ 0x0
  1259  000080                     	ds	1
  1260  000081                     I2C_Master_Read@ackBit:
  1261                           	opt callstack 0
  1262  000081                     send_nibble@data:
  1263                           	opt callstack 0
  1264  000081                     I2C_Master_Write@byteToWrite:
  1265                           	opt callstack 0
  1266  000081                     servoRotate0@i:
  1267                           	opt callstack 0
  1268  000081                     servoRotate180@i:
  1269                           	opt callstack 0
  1270                           
  1271                           ; 2 bytes @ 0x1
  1272  000081                     	ds	1
  1273  000082                     ??_isupper:
  1274  000082                     ??_isalpha:
  1275  000082                     ??_isdigit:
  1276  000082                     ??_isspace:
  1277  000082                     ??_islower:
  1278  000082                     I2C_Master_Read@receivedByte:
  1279                           	opt callstack 0
  1280  000082                     send_byte@data:
  1281                           	opt callstack 0
  1282  000082                     min@size:
  1283                           	opt callstack 0
  1284  000082                     ___wmul@multiplicand:
  1285                           	opt callstack 0
  1286  000082                     ___awdiv@divisor:
  1287                           	opt callstack 0
  1288  000082                     strlen@a:
  1289                           	opt callstack 0
  1290                           
  1291                           ; 2 bytes @ 0x2
  1292  000082                     	ds	1
  1293  000083                     ??_servo:
  1294  000083                     lcdInst@data:
  1295                           	opt callstack 0
  1296  000083                     putch@data:
  1297                           	opt callstack 0
  1298                           
  1299                           ; 1 bytes @ 0x3
  1300  000083                     	ds	1
  1301  000084                     ??_initLCD:
  1302  000084                     ??_min:
  1303  000084                     ___awdiv@counter:
  1304                           	opt callstack 0
  1305  000084                     ___wmul@product:
  1306                           	opt callstack 0
  1307  000084                     fputc@c:
  1308                           	opt callstack 0
  1309  000084                     ___lldiv@divisor:
  1310                           	opt callstack 0
  1311  000084                     ___llmod@divisor:
  1312                           	opt callstack 0
  1313                           
  1314                           ; 4 bytes @ 0x4
  1315  000084                     	ds	1
  1316  000085                     ___awdiv@sign:
  1317                           	opt callstack 0
  1318                           
  1319                           ; 1 bytes @ 0x5
  1320  000085                     	ds	1
  1321  000086                     ?_toupper:
  1322                           	opt callstack 0
  1323  000086                     _isspace$1610:
  1324                           	opt callstack 0
  1325  000086                     ___awdiv@quotient:
  1326                           	opt callstack 0
  1327  000086                     fputc@fp:
  1328                           	opt callstack 0
  1329  000086                     toupper@c:
  1330                           	opt callstack 0
  1331                           
  1332                           ; 2 bytes @ 0x6
  1333  000086                     	ds	1
  1334  000087                     ?_atoi:
  1335                           	opt callstack 0
  1336  000087                     min@minimum:
  1337                           	opt callstack 0
  1338  000087                     atoi@s:
  1339                           	opt callstack 0
  1340                           
  1341                           ; 2 bytes @ 0x7
  1342  000087                     	ds	1
  1343  000088                     ??_fputc:
  1344  000088                     ??_toupper:
  1345  000088                     ___llmod@counter:
  1346                           	opt callstack 0
  1347  000088                     ___lldiv@quotient:
  1348                           	opt callstack 0
  1349  000088                     ___aodiv@divisor:
  1350                           	opt callstack 0
  1351  000088                     ___aomod@divisor:
  1352                           	opt callstack 0
  1353                           
  1354                           ; 8 bytes @ 0x8
  1355  000088                     	ds	1
  1356  000089                     ??_atoi:
  1357  000089                     min@i:
  1358                           	opt callstack 0
  1359                           
  1360                           ; 2 bytes @ 0x9
  1361  000089                     	ds	3
  1362  00008C                     ___lldiv@counter:
  1363                           	opt callstack 0
  1364  00008C                     _toupper$1675:
  1365                           	opt callstack 0
  1366                           
  1367                           ; 2 bytes @ 0xC
  1368  00008C                     	ds	1
  1369  00008D                     atoi@neg:
  1370                           	opt callstack 0
  1371  00008D                     fputs@s:
  1372                           	opt callstack 0
  1373  00008D                     I2C_Master_Init@clockFreq:
  1374                           	opt callstack 0
  1375                           
  1376                           ; 4 bytes @ 0xD
  1377  00008D                     	ds	2
  1378  00008F                     _atoi$1583:
  1379                           	opt callstack 0
  1380  00008F                     fputs@fp:
  1381                           	opt callstack 0
  1382                           
  1383                           ; 2 bytes @ 0xF
  1384  00008F                     	ds	1
  1385  000090                     ___aodiv@counter:
  1386                           	opt callstack 0
  1387  000090                     ___aomod@counter:
  1388                           	opt callstack 0
  1389                           
  1390                           ; 1 bytes @ 0x10
  1391  000090                     	ds	1
  1392  000091                     ??_I2C_Master_Init:
  1393  000091                     ___aodiv@sign:
  1394                           	opt callstack 0
  1395  000091                     ___aomod@sign:
  1396                           	opt callstack 0
  1397  000091                     fputs@c:
  1398                           	opt callstack 0
  1399  000091                     _atoi$1585:
  1400                           	opt callstack 0
  1401                           
  1402                           ; 2 bytes @ 0x11
  1403  000091                     	ds	1
  1404  000092                     ?_abs:
  1405                           	opt callstack 0
  1406  000092                     abs@a:
  1407                           	opt callstack 0
  1408  000092                     fputs@i:
  1409                           	opt callstack 0
  1410  000092                     ___aodiv@quotient:
  1411                           	opt callstack 0
  1412                           
  1413                           ; 8 bytes @ 0x12
  1414  000092                     	ds	1
  1415  000093                     _atoi$1584:
  1416                           	opt callstack 0
  1417                           
  1418                           ; 1 bytes @ 0x13
  1419  000093                     	ds	1
  1420  000094                     ??_abs:
  1421  000094                     ?_pad:
  1422                           	opt callstack 0
  1423  000094                     pad@fp:
  1424                           	opt callstack 0
  1425  000094                     atoi@n:
  1426                           	opt callstack 0
  1427                           
  1428                           ; 2 bytes @ 0x14
  1429  000094                     	ds	1
  1430  000095                     
  1431                           ; 1 bytes @ 0x15
  1432  000095                     	ds	1
  1433  000096                     pad@buf:
  1434                           	opt callstack 0
  1435                           
  1436                           ; 2 bytes @ 0x16
  1437  000096                     	ds	2
  1438  000098                     pad@p:
  1439                           	opt callstack 0
  1440                           
  1441                           ; 2 bytes @ 0x18
  1442  000098                     	ds	2
  1443  00009A                     ??_pad:
  1444                           
  1445                           ; 1 bytes @ 0x1A
  1446  00009A                     	ds	1
  1447  00009B                     pad@i:
  1448                           	opt callstack 0
  1449                           
  1450                           ; 2 bytes @ 0x1B
  1451  00009B                     	ds	2
  1452  00009D                     pad@w:
  1453                           	opt callstack 0
  1454                           
  1455                           ; 2 bytes @ 0x1D
  1456  00009D                     	ds	2
  1457  00009F                     ?_dtoa:
  1458                           	opt callstack 0
  1459  00009F                     ?_xtoa:
  1460                           	opt callstack 0
  1461  00009F                     dtoa@fp:
  1462                           	opt callstack 0
  1463  00009F                     xtoa@fp:
  1464                           	opt callstack 0
  1465                           
  1466                           ; 2 bytes @ 0x1F
  1467  00009F                     	ds	2
  1468  0000A1                     dtoa@d:
  1469                           	opt callstack 0
  1470  0000A1                     xtoa@d:
  1471                           	opt callstack 0
  1472                           
  1473                           ; 8 bytes @ 0x21
  1474  0000A1                     	ds	8
  1475  0000A9                     ??_dtoa:
  1476  0000A9                     xtoa@x:
  1477                           	opt callstack 0
  1478                           
  1479                           ; 1 bytes @ 0x29
  1480  0000A9                     	ds	1
  1481  0000AA                     ??_xtoa:
  1482                           
  1483                           ; 1 bytes @ 0x2A
  1484  0000AA                     	ds	7
  1485  0000B1                     _dtoa$1099:
  1486                           	opt callstack 0
  1487                           
  1488                           ; 2 bytes @ 0x31
  1489  0000B1                     	ds	1
  1490  0000B2                     _xtoa$1110:
  1491                           	opt callstack 0
  1492                           
  1493                           ; 2 bytes @ 0x32
  1494  0000B2                     	ds	1
  1495  0000B3                     dtoa@p:
  1496                           	opt callstack 0
  1497                           
  1498                           ; 2 bytes @ 0x33
  1499  0000B3                     	ds	1
  1500  0000B4                     _xtoa$1111:
  1501                           	opt callstack 0
  1502                           
  1503                           ; 2 bytes @ 0x34
  1504  0000B4                     	ds	1
  1505  0000B5                     dtoa@w:
  1506                           	opt callstack 0
  1507                           
  1508                           ; 2 bytes @ 0x35
  1509  0000B5                     	ds	1
  1510  0000B6                     xtoa@p:
  1511                           	opt callstack 0
  1512                           
  1513                           ; 2 bytes @ 0x36
  1514  0000B6                     	ds	1
  1515  0000B7                     dtoa@s:
  1516                           	opt callstack 0
  1517                           
  1518                           ; 2 bytes @ 0x37
  1519  0000B7                     	ds	1
  1520  0000B8                     xtoa@w:
  1521                           	opt callstack 0
  1522                           
  1523                           ; 2 bytes @ 0x38
  1524  0000B8                     	ds	1
  1525  0000B9                     dtoa@n:
  1526                           	opt callstack 0
  1527                           
  1528                           ; 8 bytes @ 0x39
  1529  0000B9                     	ds	1
  1530  0000BA                     xtoa@n:
  1531                           	opt callstack 0
  1532                           
  1533                           ; 8 bytes @ 0x3A
  1534  0000BA                     	ds	7
  1535  0000C1                     dtoa@i:
  1536                           	opt callstack 0
  1537                           
  1538                           ; 2 bytes @ 0x41
  1539  0000C1                     	ds	1
  1540  0000C2                     xtoa@i:
  1541                           	opt callstack 0
  1542                           
  1543                           ; 2 bytes @ 0x42
  1544  0000C2                     	ds	2
  1545  0000C4                     xtoa@c:
  1546                           	opt callstack 0
  1547                           
  1548                           ; 2 bytes @ 0x44
  1549  0000C4                     	ds	2
  1550  0000C6                     ?_vfpfcnvrt:
  1551                           	opt callstack 0
  1552  0000C6                     vfpfcnvrt@fp:
  1553                           	opt callstack 0
  1554                           
  1555                           ; 2 bytes @ 0x46
  1556  0000C6                     	ds	2
  1557  0000C8                     vfpfcnvrt@fmt:
  1558                           	opt callstack 0
  1559                           
  1560                           ; 2 bytes @ 0x48
  1561  0000C8                     	ds	2
  1562  0000CA                     vfpfcnvrt@ap:
  1563                           	opt callstack 0
  1564                           
  1565                           ; 2 bytes @ 0x4A
  1566  0000CA                     	ds	2
  1567  0000CC                     ??_vfpfcnvrt:
  1568                           
  1569                           ; 1 bytes @ 0x4C
  1570  0000CC                     	ds	4
  1571  0000D0                     vfpfcnvrt@ll:
  1572                           	opt callstack 0
  1573                           
  1574                           ; 8 bytes @ 0x50
  1575  0000D0                     	ds	8
  1576  0000D8                     vfpfcnvrt@llu:
  1577                           	opt callstack 0
  1578                           
  1579                           ; 8 bytes @ 0x58
  1580  0000D8                     	ds	8
  1581  0000E0                     vfpfcnvrt@c:
  1582                           	opt callstack 0
  1583                           
  1584                           ; 1 bytes @ 0x60
  1585  0000E0                     	ds	1
  1586  0000E1                     vfpfcnvrt@done:
  1587                           	opt callstack 0
  1588                           
  1589                           ; 2 bytes @ 0x61
  1590  0000E1                     	ds	2
  1591  0000E3                     _vfpfcnvrt$1125:
  1592                           	opt callstack 0
  1593                           
  1594                           ; 2 bytes @ 0x63
  1595  0000E3                     	ds	2
  1596  0000E5                     ?_vfprintf:
  1597                           	opt callstack 0
  1598  0000E5                     vfprintf@fp:
  1599                           	opt callstack 0
  1600                           
  1601                           ; 2 bytes @ 0x65
  1602  0000E5                     	ds	2
  1603  0000E7                     vfprintf@fmt:
  1604                           	opt callstack 0
  1605                           
  1606                           ; 2 bytes @ 0x67
  1607  0000E7                     	ds	2
  1608  0000E9                     vfprintf@ap:
  1609                           	opt callstack 0
  1610                           
  1611                           ; 2 bytes @ 0x69
  1612  0000E9                     	ds	2
  1613  0000EB                     vfprintf@cfmt:
  1614                           	opt callstack 0
  1615                           
  1616                           ; 2 bytes @ 0x6B
  1617  0000EB                     	ds	2
  1618  0000ED                     ?_printf:
  1619                           	opt callstack 0
  1620  0000ED                     printf@fmt:
  1621                           	opt callstack 0
  1622                           
  1623                           ; 2 bytes @ 0x6D
  1624  0000ED                     	ds	8
  1625  0000F5                     
  1626                           ; 1 bytes @ 0x75
  1627  0000F5                     	ds	2
  1628  0000F7                     printf@ap:
  1629                           	opt callstack 0
  1630                           
  1631                           ; 2 bytes @ 0x77
  1632  0000F7                     	ds	2
  1633  0000F9                     ??_print_echo:
  1634  0000F9                     ?_number_deploy:
  1635                           	opt callstack 0
  1636  0000F9                     full_drive@stepper_no:
  1637                           	opt callstack 0
  1638  0000F9                     number_deploy@avg_dist:
  1639                           	opt callstack 0
  1640  0000F9                     UI_main@t_dep:
  1641                           	opt callstack 0
  1642                           
  1643                           ; 2 bytes @ 0x79
  1644  0000F9                     	ds	1
  1645  0000FA                     ?_ultrasonic_main:
  1646                           	opt callstack 0
  1647                           
  1648                           ; 2 bytes @ 0x7A
  1649  0000FA                     	ds	1
  1650  0000FB                     ??_full_drive:
  1651  0000FB                     number_deploy@poles_detected:
  1652                           	opt callstack 0
  1653  0000FB                     UI_main@poles_detected:
  1654                           	opt callstack 0
  1655                           
  1656                           ; 2 bytes @ 0x7B
  1657  0000FB                     	ds	1
  1658  0000FC                     ??_ultrasonic_main:
  1659  0000FC                     full_drive@direction:
  1660                           	opt callstack 0
  1661                           
  1662                           ; 1 bytes @ 0x7C
  1663  0000FC                     	ds	1
  1664  0000FD                     ??_number_deploy:
  1665  0000FD                     stepper@stack:
  1666                           	opt callstack 0
  1667  0000FD                     stepper2@steps2_adj:
  1668                           	opt callstack 0
  1669  0000FD                     stepper2_back@steps2_adj:
  1670                           	opt callstack 0
  1671                           
  1672                           ; 2 bytes @ 0x7D
  1673  0000FD                     	ds	2
  1674  0000FF                     
  1675                           ; 1 bytes @ 0x7F
  1676                           
  1677                           	psect	cstackCOMRAM
  1678  000001                     __pcstackCOMRAM:
  1679                           	opt callstack 0
  1680  000001                     ?i2___awdiv:
  1681                           	opt callstack 0
  1682  000001                     ?___xxtofl:
  1683                           	opt callstack 0
  1684  000001                     i2___awdiv@dividend:
  1685                           	opt callstack 0
  1686  000001                     ___xxtofl@val:
  1687                           	opt callstack 0
  1688                           
  1689                           ; 4 bytes @ 0x0
  1690  000001                     	ds	2
  1691  000003                     i2___awdiv@divisor:
  1692                           	opt callstack 0
  1693                           
  1694                           ; 2 bytes @ 0x2
  1695  000003                     	ds	2
  1696  000005                     ??___xxtofl:
  1697  000005                     i2___awdiv@counter:
  1698                           	opt callstack 0
  1699                           
  1700                           ; 1 bytes @ 0x4
  1701  000005                     	ds	1
  1702  000006                     i2___awdiv@sign:
  1703                           	opt callstack 0
  1704                           
  1705                           ; 1 bytes @ 0x5
  1706  000006                     	ds	1
  1707  000007                     i2___awdiv@quotient:
  1708                           	opt callstack 0
  1709                           
  1710                           ; 2 bytes @ 0x6
  1711  000007                     	ds	2
  1712  000009                     ___xxtofl@sign:
  1713                           	opt callstack 0
  1714                           
  1715                           ; 1 bytes @ 0x8
  1716  000009                     	ds	1
  1717  00000A                     ___xxtofl@exp:
  1718                           	opt callstack 0
  1719                           
  1720                           ; 1 bytes @ 0x9
  1721  00000A                     	ds	1
  1722  00000B                     ___xxtofl@arg:
  1723                           	opt callstack 0
  1724                           
  1725                           ; 4 bytes @ 0xA
  1726  00000B                     	ds	4
  1727  00000F                     ?___fldiv:
  1728                           	opt callstack 0
  1729  00000F                     ___fldiv@b:
  1730                           	opt callstack 0
  1731                           
  1732                           ; 4 bytes @ 0xE
  1733  00000F                     	ds	4
  1734  000013                     ___fldiv@a:
  1735                           	opt callstack 0
  1736                           
  1737                           ; 4 bytes @ 0x12
  1738  000013                     	ds	4
  1739  000017                     ??___fldiv:
  1740                           
  1741                           ; 1 bytes @ 0x16
  1742  000017                     	ds	4
  1743  00001B                     ___fldiv@rem:
  1744                           	opt callstack 0
  1745                           
  1746                           ; 4 bytes @ 0x1A
  1747  00001B                     	ds	4
  1748  00001F                     ___fldiv@sign:
  1749                           	opt callstack 0
  1750                           
  1751                           ; 1 bytes @ 0x1E
  1752  00001F                     	ds	1
  1753  000020                     ___fldiv@new_exp:
  1754                           	opt callstack 0
  1755                           
  1756                           ; 2 bytes @ 0x1F
  1757  000020                     	ds	2
  1758  000022                     ___fldiv@grs:
  1759                           	opt callstack 0
  1760                           
  1761                           ; 4 bytes @ 0x21
  1762  000022                     	ds	4
  1763  000026                     ___fldiv@bexp:
  1764                           	opt callstack 0
  1765                           
  1766                           ; 1 bytes @ 0x25
  1767  000026                     	ds	1
  1768  000027                     ___fldiv@aexp:
  1769                           	opt callstack 0
  1770                           
  1771                           ; 1 bytes @ 0x26
  1772  000027                     	ds	1
  1773  000028                     ?___fltol:
  1774                           	opt callstack 0
  1775  000028                     ___fltol@f1:
  1776                           	opt callstack 0
  1777                           
  1778                           ; 4 bytes @ 0x27
  1779  000028                     	ds	4
  1780  00002C                     ??___fltol:
  1781                           
  1782                           ; 1 bytes @ 0x2B
  1783  00002C                     	ds	4
  1784  000030                     ___fltol@sign1:
  1785                           	opt callstack 0
  1786                           
  1787                           ; 1 bytes @ 0x2F
  1788  000030                     	ds	1
  1789  000031                     ___fltol@exp1:
  1790                           	opt callstack 0
  1791                           
  1792                           ; 1 bytes @ 0x30
  1793  000031                     	ds	1
  1794  000032                     ??_echo:
  1795                           
  1796                           ; 1 bytes @ 0x31
  1797  000032                     	ds	4
  1798  000036                     ??_ISR:
  1799                           
  1800                           ; 1 bytes @ 0x35
  1801  000036                     	ds	2
  1802                           
  1803 ;;
  1804 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1805 ;;
  1806 ;; *************** function _main *****************
  1807 ;; Defined at:
  1808 ;;		line 688 in file "main.c"
  1809 ;; Parameters:    Size  Location     Type
  1810 ;;		None
  1811 ;; Auto vars:     Size  Location     Type
  1812 ;;  k               2   94[BANK2 ] int 
  1813 ;;  i               2   88[BANK2 ] int 
  1814 ;;  i               2   86[BANK2 ] int 
  1815 ;;  i               2  100[BANK2 ] int 
  1816 ;;  pole_cl_dist    2   82[BANK2 ] int 
  1817 ;;  Pole           80    0[BANK2 ] struct Poles[10]
  1818 ;;  prev_avg_dis    4  104[BANK2 ] volatile long 
  1819 ;;  poles_detect    2  102[BANK2 ] int 
  1820 ;;  t_dep           2   98[BANK2 ] int 
  1821 ;;  t_count         2   96[BANK2 ] int 
  1822 ;;  stack           2   92[BANK2 ] int 
  1823 ;;  steps2_adj      2   84[BANK2 ] int 
  1824 ;;  read            2    0        int 
  1825 ;;  arduino_stop    1   91[BANK2 ] _Bool 
  1826 ;;  act_done        1   90[BANK2 ] _Bool 
  1827 ;; Return value:  Size  Location     Type
  1828 ;;                  1    wreg      void 
  1829 ;; Registers used:
  1830 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1831 ;; Tracked objects:
  1832 ;;		On entry : 0/0
  1833 ;;		On exit  : 0/0
  1834 ;;		Unchanged: 0/0
  1835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1837 ;;      Locals:         0       0       0     108       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1838 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1839 ;;      Totals:         0       0       2     108       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1840 ;;Total ram usage:      110 bytes
  1841 ;; Hardware stack levels required when called:   17
  1842 ;; This function calls:
  1843 ;;		_UI_main
  1844 ;;		___wmul
  1845 ;;		_actuators_main
  1846 ;;		_backwards
  1847 ;;		_brake
  1848 ;;		_initLCD
  1849 ;;		_lcdInst
  1850 ;;		_number_deploy
  1851 ;;		_printf
  1852 ;;		_start
  1853 ;;		_ultrasonic_main
  1854 ;; This function is called by:
  1855 ;;		Startup code after reset
  1856 ;; This function uses a non-reentrant model
  1857 ;;
  1858                           
  1859                           	psect	text0
  1860  000D6A                     __ptext0:
  1861                           	opt callstack 0
  1862  000D6A                     _main:
  1863                           	opt callstack 14
  1864                           
  1865                           ;main.c: 690:     int t_dep=0;
  1866                           
  1867                           ;incstack = 0
  1868  000D6A  0E00               	movlw	0
  1869  000D6C  0102               	movlb	2	; () banked
  1870  000D6E  6FE3               	movwf	(main@t_dep+1)& (0+255),b
  1871  000D70  0E00               	movlw	0
  1872  000D72  6FE2               	movwf	main@t_dep& (0+255),b
  1873                           
  1874                           ;main.c: 691:     int t_count;;main.c: 692:  TRISD = 0x00;
  1875  000D74  0E00               	movlw	0
  1876  000D76  6E95               	movwf	3989,c	;volatile
  1877                           
  1878                           ; BSR set to: 2
  1879                           ;main.c: 693:  GIE = 1;
  1880  000D78  8EF2               	bsf	4082,7,c	;volatile
  1881                           
  1882                           ;main.c: 695:     ADCON1=0x0F;
  1883  000D7A  0E0F               	movlw	15
  1884  000D7C  6EC1               	movwf	4033,c	;volatile
  1885                           
  1886                           ; BSR set to: 2
  1887                           ;main.c: 697:  initLCD();
  1888  000D7E  ECF3  F019         	call	_initLCD	;wreg free
  1889                           
  1890                           ;main.c: 699:  T1CON = 0x10;
  1891  000D82  0E10               	movlw	16
  1892  000D84  6ECD               	movwf	4045,c	;volatile
  1893                           
  1894                           ;main.c: 700:     int poles_detected=0;
  1895  000D86  0E00               	movlw	0
  1896  000D88  0102               	movlb	2	; () banked
  1897  000D8A  6FE7               	movwf	(main@poles_detected+1)& (0+255),b
  1898  000D8C  0E00               	movlw	0
  1899  000D8E  6FE6               	movwf	main@poles_detected& (0+255),b
  1900                           
  1901                           ; BSR set to: 2
  1902                           ;main.c: 702:     volatile long prev_avg_dist=0;
  1903                           
  1904                           ; BSR set to: 2
  1905  000D90  0E00               	movlw	0
  1906  000D92  6FE8               	movwf	main@prev_avg_dist& (0+255),b	;volatile
  1907  000D94  0E00               	movlw	0
  1908  000D96  6FE9               	movwf	(main@prev_avg_dist+1)& (0+255),b	;volatile
  1909  000D98  0E00               	movlw	0
  1910  000D9A  6FEA               	movwf	(main@prev_avg_dist+2)& (0+255),b	;volatile
  1911  000D9C  0E00               	movlw	0
  1912  000D9E  6FEB               	movwf	(main@prev_avg_dist+3)& (0+255),b	;volatile
  1913                           
  1914                           ; BSR set to: 2
  1915                           ;main.c: 704:     TRISAbits.RA4 = 0;
  1916  000DA0  9892               	bcf	3986,4,c	;volatile
  1917                           
  1918                           ; BSR set to: 2
  1919                           ;main.c: 705:     PORTAbits.RA4 = LATAbits.LATA4;
  1920  000DA2  A889               	btfss	3977,4,c	;volatile
  1921  000DA4  D002               	bra	u8585
  1922  000DA6  8880               	bsf	3968,4,c	;volatile
  1923  000DA8  D001               	bra	u8587
  1924  000DAA                     u8585:
  1925  000DAA  9880               	bcf	3968,4,c	;volatile
  1926  000DAC                     u8587:
  1927                           
  1928                           ;main.c: 708:     _Bool arduino_stopped = 0;
  1929  000DAC  0E00               	movlw	0
  1930  000DAE  0102               	movlb	2	; () banked
  1931  000DB0  6FDB               	movwf	main@arduino_stopped& (0+255),b
  1932                           
  1933                           ; BSR set to: 2
  1934                           ;main.c: 710:     Poles Pole[10];;main.c: 718:     if (~sens){
  1935  000DB2  2858               	incf	_sens,w,c	;volatile
  1936  000DB4  E103               	bnz	u8590
  1937  000DB6  2859               	incf	_sens+1,w,c	;volatile
  1938  000DB8  B4D8               	btfsc	status,2,c
  1939  000DBA  D00B               	goto	l7952
  1940  000DBC                     u8590:
  1941                           
  1942                           ; BSR set to: 2
  1943                           ;main.c: 719:         UI_main( t_dep, poles_detected);
  1944  000DBC  0E00               	movlw	0
  1945  000DBE  0100               	movlb	0	; () banked
  1946  000DC0  6FFA               	movwf	(UI_main@t_dep+1)& (0+255),b
  1947  000DC2  0E00               	movlw	0
  1948  000DC4  6FF9               	movwf	UI_main@t_dep& (0+255),b
  1949  000DC6  0E00               	movlw	0
  1950  000DC8  6FFC               	movwf	(UI_main@poles_detected+1)& (0+255),b
  1951  000DCA  0E00               	movlw	0
  1952  000DCC  6FFB               	movwf	UI_main@poles_detected& (0+255),b
  1953  000DCE  EC09  F000         	call	_UI_main	;wreg free
  1954  000DD2                     l7952:
  1955                           
  1956                           ;main.c: 722:         PORTAbits.RA4 = LATAbits.LATA4;
  1957  000DD2  A889               	btfss	3977,4,c	;volatile
  1958  000DD4  D002               	bra	u8605
  1959  000DD6  8880               	bsf	3968,4,c	;volatile
  1960  000DD8  D001               	bra	u8607
  1961  000DDA                     u8605:
  1962  000DDA  9880               	bcf	3968,4,c	;volatile
  1963  000DDC                     u8607:
  1964                           
  1965                           ;main.c: 727:         if ((poles_detected <10)&&(avg_dist<4000)){
  1966  000DDC  0102               	movlb	2	; () banked
  1967  000DDE  BFE7               	btfsc	(main@poles_detected+1)& (0+255),7,b
  1968  000DE0  D006               	goto	u8610
  1969  000DE2  51E7               	movf	(main@poles_detected+1)& (0+255),w,b
  1970  000DE4  E103               	bnz	u8611
  1971  000DE6  0E0A               	movlw	10
  1972  000DE8  5DE6               	subwf	main@poles_detected& (0+255),w,b
  1973  000DEA  B0D8               	btfsc	status,0,c
  1974  000DEC                     u8611:
  1975  000DEC  D1F8               	goto	l8088
  1976  000DEE                     u8610:
  1977                           
  1978                           ; BSR set to: 2
  1979  000DEE  BE47               	btfsc	_avg_dist+3,7,c	;volatile
  1980  000DF0  D095               	goto	l8004
  1981  000DF2  5047               	movf	_avg_dist+3,w,c	;volatile
  1982  000DF4  1046               	iorwf	_avg_dist+2,w,c	;volatile
  1983  000DF6  E106               	bnz	u8621
  1984  000DF8  0EA0               	movlw	160
  1985  000DFA  5C44               	subwf	_avg_dist,w,c	;volatile
  1986  000DFC  0E0F               	movlw	15
  1987  000DFE  5845               	subwfb	_avg_dist+1,w,c	;volatile
  1988  000E00  A0D8               	btfss	status,0,c
  1989  000E02  D08C               	goto	l8004
  1990  000E04                     u8621:
  1991  000E04  D1EC               	goto	l8088
  1992  000E06                     l7960:
  1993                           
  1994                           ;main.c: 738:                 t_count = 5;
  1995  000E06  0E00               	movlw	0
  1996  000E08  0102               	movlb	2	; () banked
  1997  000E0A  6FE1               	movwf	(main@t_count+1)& (0+255),b
  1998  000E0C  0E05               	movlw	5
  1999  000E0E  6FE0               	movwf	main@t_count& (0+255),b
  2000                           
  2001                           ; BSR set to: 2
  2002                           ;main.c: 739:                     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/
      +                          4000.0)));};
  2003  000E10  0E01               	movlw	1
  2004  000E12  EC86  F01D         	call	_lcdInst
  2005  000E16  0E11               	movlw	17
  2006  000E18  0101               	movlb	1	; () banked
  2007  000E1A  6F5A               	movwf	??_main& (0+255),b
  2008  000E1C  0E3A               	movlw	58
  2009  000E1E                     u8757:
  2010  000E1E  2EE8               	decfsz	wreg,f,c
  2011  000E20  D7FE               	bra	u8757
  2012  000E22  2F5A               	decfsz	??_main& (0+255),f,b
  2013  000E24  D7FC               	bra	u8757
  2014  000E26  F000               	nop	
  2015                           
  2016                           ;main.c: 740:                     printf("waiting");
  2017  000E28  0E01               	movlw	low (STR_54+5)
  2018  000E2A  0100               	movlb	0	; () banked
  2019  000E2C  6FED               	movwf	printf@fmt& (0+255),b
  2020  000E2E  0EFF               	movlw	high (STR_54+5)
  2021  000E30  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2022  000E32  EC0D  F01D         	call	_printf	;wreg free
  2023                           
  2024                           ;main.c: 742:                     if (!PORTAbits.RA4){
  2025  000E36  B880               	btfsc	3968,4,c	;volatile
  2026  000E38  D013               	goto	l7976
  2027                           
  2028                           ;main.c: 743:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  2029  000E3A  0E01               	movlw	1
  2030  000E3C  EC86  F01D         	call	_lcdInst
  2031  000E40  0E11               	movlw	17
  2032  000E42  0101               	movlb	1	; () banked
  2033  000E44  6F5A               	movwf	??_main& (0+255),b
  2034  000E46  0E3A               	movlw	58
  2035  000E48                     u8767:
  2036  000E48  2EE8               	decfsz	wreg,f,c
  2037  000E4A  D7FE               	bra	u8767
  2038  000E4C  2F5A               	decfsz	??_main& (0+255),f,b
  2039  000E4E  D7FC               	bra	u8767
  2040  000E50  F000               	nop	
  2041                           
  2042                           ;main.c: 744:                         printf("more waiting");
  2043  000E52  0EFC               	movlw	low STR_54
  2044  000E54  0100               	movlb	0	; () banked
  2045  000E56  6FED               	movwf	printf@fmt& (0+255),b
  2046  000E58  0EFE               	movlw	high STR_54
  2047  000E5A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2048  000E5C  EC0D  F01D         	call	_printf	;wreg free
  2049  000E60                     l7976:
  2050                           
  2051                           ;main.c: 746:                     if (PORTAbits.RA4){
  2052  000E60  A880               	btfss	3968,4,c	;volatile
  2053  000E62  D016               	goto	l7986
  2054                           
  2055                           ;main.c: 748:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  2056  000E64  0E01               	movlw	1
  2057  000E66  EC86  F01D         	call	_lcdInst
  2058  000E6A  0E11               	movlw	17
  2059  000E6C  0101               	movlb	1	; () banked
  2060  000E6E  6F5A               	movwf	??_main& (0+255),b
  2061  000E70  0E3A               	movlw	58
  2062  000E72                     u8777:
  2063  000E72  2EE8               	decfsz	wreg,f,c
  2064  000E74  D7FE               	bra	u8777
  2065  000E76  2F5A               	decfsz	??_main& (0+255),f,b
  2066  000E78  D7FC               	bra	u8777
  2067  000E7A  F000               	nop	
  2068                           
  2069                           ;main.c: 749:                         printf("done wait");
  2070  000E7C  0EBA               	movlw	low STR_55
  2071  000E7E  0100               	movlb	0	; () banked
  2072  000E80  6FED               	movwf	printf@fmt& (0+255),b
  2073  000E82  0EFF               	movlw	high STR_55
  2074  000E84  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2075  000E86  EC0D  F01D         	call	_printf	;wreg free
  2076                           
  2077                           ;main.c: 750:                         arduino_stopped = 1;
  2078  000E8A  0E01               	movlw	1
  2079  000E8C  0102               	movlb	2	; () banked
  2080  000E8E  6FDB               	movwf	main@arduino_stopped& (0+255),b
  2081  000E90                     l7986:
  2082                           
  2083                           ;main.c: 752:                     if (arduino_stopped){
  2084  000E90  0102               	movlb	2	; () banked
  2085  000E92  51DB               	movf	main@arduino_stopped& (0+255),w,b
  2086  000E94  B4D8               	btfsc	status,2,c
  2087  000E96  D042               	goto	l8004
  2088                           
  2089                           ; BSR set to: 2
  2090                           ;main.c: 753:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  2091  000E98  0E01               	movlw	1
  2092  000E9A  EC86  F01D         	call	_lcdInst
  2093  000E9E  0E11               	movlw	17
  2094  000EA0  0101               	movlb	1	; () banked
  2095  000EA2  6F5A               	movwf	??_main& (0+255),b
  2096  000EA4  0E3A               	movlw	58
  2097  000EA6                     u8787:
  2098  000EA6  2EE8               	decfsz	wreg,f,c
  2099  000EA8  D7FE               	bra	u8787
  2100  000EAA  2F5A               	decfsz	??_main& (0+255),f,b
  2101  000EAC  D7FC               	bra	u8787
  2102  000EAE  F000               	nop	
  2103                           
  2104                           ;main.c: 754:                         printf("dun break");
  2105  000EB0  0EA6               	movlw	low STR_56
  2106  000EB2  0100               	movlb	0	; () banked
  2107  000EB4  6FED               	movwf	printf@fmt& (0+255),b
  2108  000EB6  0EFF               	movlw	high STR_56
  2109  000EB8  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2110  000EBA  EC0D  F01D         	call	_printf	;wreg free
  2111                           
  2112                           ;main.c: 755:                         steps2_adj=ultrasonic_main();
  2113  000EBE  EC33  F010         	call	_ultrasonic_main	;wreg free
  2114  000EC2  C0FA  F2D4         	movff	?_ultrasonic_main,main@steps2_adj
  2115  000EC6  C0FB  F2D5         	movff	?_ultrasonic_main+1,main@steps2_adj+1
  2116                           
  2117                           ;main.c: 756:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  2118  000ECA  0E01               	movlw	1
  2119  000ECC  EC86  F01D         	call	_lcdInst
  2120  000ED0  0E11               	movlw	17
  2121  000ED2  0101               	movlb	1	; () banked
  2122  000ED4  6F5A               	movwf	??_main& (0+255),b
  2123  000ED6  0E3A               	movlw	58
  2124  000ED8                     u8797:
  2125  000ED8  2EE8               	decfsz	wreg,f,c
  2126  000EDA  D7FE               	bra	u8797
  2127  000EDC  2F5A               	decfsz	??_main& (0+255),f,b
  2128  000EDE  D7FC               	bra	u8797
  2129  000EE0  F000               	nop	
  2130                           
  2131                           ;main.c: 757:                         printf("stepsadj %d", steps2_adj);
  2132  000EE2  0E22               	movlw	low STR_22
  2133  000EE4  0100               	movlb	0	; () banked
  2134  000EE6  6FED               	movwf	printf@fmt& (0+255),b
  2135  000EE8  0EFF               	movlw	high STR_22
  2136  000EEA  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2137  000EEC  C2D4  F0EF         	movff	main@steps2_adj,?_printf+2
  2138  000EF0  C2D5  F0F0         	movff	main@steps2_adj+1,?_printf+3
  2139  000EF4  EC0D  F01D         	call	_printf	;wreg free
  2140                           
  2141                           ;main.c: 758:                         t_count = number_deploy(avg_dist, poles_detected);
  2142  000EF8  C044  F0F9         	movff	_avg_dist,number_deploy@avg_dist	;volatile
  2143  000EFC  C045  F0FA         	movff	_avg_dist+1,number_deploy@avg_dist+1	;volatile
  2144  000F00  C2E6  F0FB         	movff	main@poles_detected,number_deploy@poles_detected
  2145  000F04  C2E7  F0FC         	movff	main@poles_detected+1,number_deploy@poles_detected+1
  2146  000F08  EC49  F011         	call	_number_deploy	;wreg free
  2147  000F0C  C0F9  F2E0         	movff	?_number_deploy,main@t_count
  2148  000F10  C0FA  F2E1         	movff	?_number_deploy+1,main@t_count+1
  2149                           
  2150                           ;main.c: 759:                         sens = 0;
  2151  000F14  0E00               	movlw	0
  2152  000F16  6E59               	movwf	_sens+1,c	;volatile
  2153  000F18  0E00               	movlw	0
  2154  000F1A  6E58               	movwf	_sens,c	;volatile
  2155  000F1C                     l8004:
  2156                           
  2157                           ;main.c: 735:             while (sens){
  2158  000F1C  5058               	movf	_sens,w,c	;volatile
  2159  000F1E  1059               	iorwf	_sens+1,w,c	;volatile
  2160  000F20  A4D8               	btfss	status,2,c
  2161  000F22  D771               	goto	l7960
  2162                           
  2163                           ;main.c: 762:             int pole_cl_dist = (avg_dist)-(prev_avg_dist);
  2164  000F24  0102               	movlb	2	; () banked
  2165  000F26  51E8               	movf	main@prev_avg_dist& (0+255),w,b	;volatile
  2166  000F28  5C44               	subwf	_avg_dist,w,c	;volatile
  2167  000F2A  6FD2               	movwf	main@pole_cl_dist& (0+255),b
  2168  000F2C  51E9               	movf	(main@prev_avg_dist+1)& (0+255),w,b	;volatile
  2169  000F2E  5845               	subwfb	_avg_dist+1,w,c	;volatile
  2170  000F30  6FD3               	movwf	(main@pole_cl_dist+1)& (0+255),b
  2171                           
  2172                           ; BSR set to: 2
  2173                           ;main.c: 768:             act_done = 0;
  2174  000F32  0E00               	movlw	0
  2175  000F34  6FDA               	movwf	main@act_done& (0+255),b
  2176                           
  2177                           ; BSR set to: 2
  2178                           ;main.c: 769:             if (t_count<=2){
  2179  000F36  BFE1               	btfsc	(main@t_count+1)& (0+255),7,b
  2180  000F38  D006               	goto	u8670
  2181  000F3A  51E1               	movf	(main@t_count+1)& (0+255),w,b
  2182  000F3C  E165               	bnz	l530
  2183  000F3E  0E03               	movlw	3
  2184  000F40  5DE0               	subwf	main@t_count& (0+255),w,b
  2185  000F42  B0D8               	btfsc	status,0,c
  2186  000F44  D061               	goto	l530
  2187  000F46                     u8670:
  2188                           
  2189                           ; BSR set to: 2
  2190                           ;main.c: 770:                 if (t_dep <8){
  2191  000F46  BFE3               	btfsc	(main@t_dep+1)& (0+255),7,b
  2192  000F48  D006               	goto	u8680
  2193  000F4A  51E3               	movf	(main@t_dep+1)& (0+255),w,b
  2194  000F4C  E12C               	bnz	l8028
  2195  000F4E  0E08               	movlw	8
  2196  000F50  5DE2               	subwf	main@t_dep& (0+255),w,b
  2197  000F52  B0D8               	btfsc	status,0,c
  2198  000F54  D028               	goto	u8690
  2199  000F56                     u8680:
  2200                           
  2201                           ; BSR set to: 2
  2202                           ;main.c: 773:                     stack = 1;
  2203  000F56  0E00               	movlw	0
  2204  000F58  6FDD               	movwf	(main@stack+1)& (0+255),b
  2205  000F5A  0E01               	movlw	1
  2206  000F5C  6FDC               	movwf	main@stack& (0+255),b
  2207                           
  2208                           ; BSR set to: 2
  2209                           ;main.c: 774:                                     brake();
  2210  000F5E  EC35  F01D         	call	_brake	;wreg free
  2211                           
  2212                           ;main.c: 776:                     for(int i=0; i<(t_count); i++){
  2213  000F62  0E00               	movlw	0
  2214  000F64  0102               	movlb	2	; () banked
  2215  000F66  6FD7               	movwf	(main@i+1)& (0+255),b
  2216  000F68  0E00               	movlw	0
  2217  000F6A  6FD6               	movwf	main@i& (0+255),b
  2218  000F6C  D00F               	goto	l8026
  2219  000F6E                     l8020:
  2220                           
  2221                           ; BSR set to: 1
  2222                           ;main.c: 778:                         actuators_main(stack, 110);
  2223  000F6E  C2DC  F10C         	movff	main@stack,actuators_main@stack
  2224  000F72  C2DD  F10D         	movff	main@stack+1,actuators_main@stack+1
  2225  000F76  0E00               	movlw	0
  2226  000F78  6F0F               	movwf	(actuators_main@steps2_adj+1)& (0+255),b
  2227  000F7A  0E6E               	movlw	110
  2228  000F7C  6F0E               	movwf	actuators_main@steps2_adj& (0+255),b
  2229  000F7E  EC38  F015         	call	_actuators_main	;wreg free
  2230                           
  2231                           ;main.c: 779:                         t_dep++;
  2232  000F82  0102               	movlb	2	; () banked
  2233  000F84  4BE2               	infsnz	main@t_dep& (0+255),f,b
  2234  000F86  2BE3               	incf	(main@t_dep+1)& (0+255),f,b
  2235                           
  2236                           ; BSR set to: 2
  2237                           ;main.c: 780:                     }
  2238  000F88  4BD6               	infsnz	main@i& (0+255),f,b
  2239  000F8A  2BD7               	incf	(main@i+1)& (0+255),f,b
  2240  000F8C                     l8026:
  2241                           
  2242                           ; BSR set to: 2
  2243  000F8C  51E0               	movf	main@t_count& (0+255),w,b
  2244  000F8E  5DD6               	subwf	main@i& (0+255),w,b
  2245  000F90  51D7               	movf	(main@i+1)& (0+255),w,b
  2246  000F92  0A80               	xorlw	128
  2247  000F94  0101               	movlb	1	; () banked
  2248  000F96  6F5A               	movwf	??_main& (0+255),b
  2249  000F98  0102               	movlb	2	; () banked
  2250  000F9A  51E1               	movf	(main@t_count+1)& (0+255),w,b
  2251  000F9C  0A80               	xorlw	128
  2252  000F9E  0101               	movlb	1	; () banked
  2253  000FA0  595A               	subwfb	??_main& (0+255),w,b
  2254  000FA2  A0D8               	btfss	status,0,c
  2255  000FA4  D7E4               	goto	l8020
  2256  000FA6                     u8690:
  2257  000FA6                     l8028:
  2258                           
  2259                           ;main.c: 782:                 if (t_dep >= 8){
  2260  000FA6  0102               	movlb	2	; () banked
  2261  000FA8  BFE3               	btfsc	(main@t_dep+1)& (0+255),7,b
  2262  000FAA  D02B               	goto	u8710
  2263  000FAC  51E3               	movf	(main@t_dep+1)& (0+255),w,b
  2264  000FAE  E104               	bnz	u8700
  2265  000FB0  0E08               	movlw	8
  2266  000FB2  5DE2               	subwf	main@t_dep& (0+255),w,b
  2267  000FB4  A0D8               	btfss	status,0,c
  2268  000FB6  D025               	goto	u8710
  2269  000FB8                     u8700:
  2270                           
  2271                           ; BSR set to: 2
  2272                           ;main.c: 783:                     stack = 2;
  2273  000FB8  0E00               	movlw	0
  2274  000FBA  6FDD               	movwf	(main@stack+1)& (0+255),b
  2275  000FBC  0E02               	movlw	2
  2276  000FBE  6FDC               	movwf	main@stack& (0+255),b
  2277                           
  2278                           ;main.c: 784:                     for(int i=0; i<(t_count); i++){
  2279  000FC0  0E00               	movlw	0
  2280  000FC2  6FD9               	movwf	(main@i_1018+1)& (0+255),b
  2281  000FC4  0E00               	movlw	0
  2282  000FC6  6FD8               	movwf	main@i_1018& (0+255),b
  2283  000FC8  D00F               	goto	l8038
  2284  000FCA                     l8032:
  2285                           
  2286                           ; BSR set to: 1
  2287                           ;main.c: 786:                         actuators_main(stack, 110);
  2288  000FCA  C2DC  F10C         	movff	main@stack,actuators_main@stack
  2289  000FCE  C2DD  F10D         	movff	main@stack+1,actuators_main@stack+1
  2290  000FD2  0E00               	movlw	0
  2291  000FD4  6F0F               	movwf	(actuators_main@steps2_adj+1)& (0+255),b
  2292  000FD6  0E6E               	movlw	110
  2293  000FD8  6F0E               	movwf	actuators_main@steps2_adj& (0+255),b
  2294  000FDA  EC38  F015         	call	_actuators_main	;wreg free
  2295                           
  2296                           ;main.c: 787:                         t_dep++;
  2297  000FDE  0102               	movlb	2	; () banked
  2298  000FE0  4BE2               	infsnz	main@t_dep& (0+255),f,b
  2299  000FE2  2BE3               	incf	(main@t_dep+1)& (0+255),f,b
  2300                           
  2301                           ; BSR set to: 2
  2302                           ;main.c: 788:                     }
  2303  000FE4  4BD8               	infsnz	main@i_1018& (0+255),f,b
  2304  000FE6  2BD9               	incf	(main@i_1018+1)& (0+255),f,b
  2305  000FE8                     l8038:
  2306                           
  2307                           ; BSR set to: 2
  2308  000FE8  51E0               	movf	main@t_count& (0+255),w,b
  2309  000FEA  5DD8               	subwf	main@i_1018& (0+255),w,b
  2310  000FEC  51D9               	movf	(main@i_1018+1)& (0+255),w,b
  2311  000FEE  0A80               	xorlw	128
  2312  000FF0  0101               	movlb	1	; () banked
  2313  000FF2  6F5A               	movwf	??_main& (0+255),b
  2314  000FF4  0102               	movlb	2	; () banked
  2315  000FF6  51E1               	movf	(main@t_count+1)& (0+255),w,b
  2316  000FF8  0A80               	xorlw	128
  2317  000FFA  0101               	movlb	1	; () banked
  2318  000FFC  595A               	subwfb	??_main& (0+255),w,b
  2319  000FFE  A0D8               	btfss	status,0,c
  2320  001000  D7E4               	goto	l8032
  2321  001002                     u8710:
  2322                           
  2323                           ;main.c: 790:                 act_done = 1;
  2324  001002  0E01               	movlw	1
  2325  001004  0102               	movlb	2	; () banked
  2326  001006  6FDA               	movwf	main@act_done& (0+255),b
  2327  001008                     l530:
  2328                           
  2329                           ; BSR set to: 2
  2330                           ;main.c: 792:             if (act_done){
  2331  001008  51DA               	movf	main@act_done& (0+255),w,b
  2332  00100A  B4D8               	btfsc	status,2,c
  2333  00100C  D136               	goto	l8104
  2334                           
  2335                           ; BSR set to: 2
  2336                           ;main.c: 794:             Pole[poles_detected].dist_from_cl = pole_cl_dist;
  2337  00100E  C2E6  F15A         	movff	main@poles_detected,??_main
  2338  001012  C2E7  F15B         	movff	main@poles_detected+1,??_main+1
  2339  001016  0101               	movlb	1	; () banked
  2340  001018  90D8               	bcf	status,0,c
  2341  00101A  375A               	rlcf	??_main& (0+255),f,b
  2342  00101C  375B               	rlcf	(??_main+1)& (0+255),f,b
  2343  00101E  90D8               	bcf	status,0,c
  2344  001020  375A               	rlcf	??_main& (0+255),f,b
  2345  001022  375B               	rlcf	(??_main+1)& (0+255),f,b
  2346  001024  90D8               	bcf	status,0,c
  2347  001026  375A               	rlcf	??_main& (0+255),f,b
  2348  001028  375B               	rlcf	(??_main+1)& (0+255),f,b
  2349  00102A  0E06               	movlw	6
  2350  00102C  275A               	addwf	??_main& (0+255),f,b
  2351  00102E  0E00               	movlw	0
  2352  001030  235B               	addwfc	(??_main+1)& (0+255),f,b
  2353  001032  0E80               	movlw	low main@Pole
  2354  001034  255A               	addwf	??_main& (0+255),w,b
  2355  001036  6ED9               	movwf	fsr2l,c
  2356  001038  0E02               	movlw	high main@Pole
  2357  00103A  215B               	addwfc	(??_main+1)& (0+255),w,b
  2358  00103C  6EDA               	movwf	fsr2h,c
  2359  00103E  C2D2  FFDE         	movff	main@pole_cl_dist,postinc2
  2360  001042  C2D3  FFDD         	movff	main@pole_cl_dist+1,postdec2
  2361                           
  2362                           ;main.c: 795:             Pole[poles_detected].dist_from_start = avg_dist;
  2363  001046  C2E6  F15A         	movff	main@poles_detected,??_main
  2364  00104A  C2E7  F15B         	movff	main@poles_detected+1,??_main+1
  2365  00104E  90D8               	bcf	status,0,c
  2366  001050  375A               	rlcf	??_main& (0+255),f,b
  2367  001052  375B               	rlcf	(??_main+1)& (0+255),f,b
  2368  001054  90D8               	bcf	status,0,c
  2369  001056  375A               	rlcf	??_main& (0+255),f,b
  2370  001058  375B               	rlcf	(??_main+1)& (0+255),f,b
  2371  00105A  90D8               	bcf	status,0,c
  2372  00105C  375A               	rlcf	??_main& (0+255),f,b
  2373  00105E  375B               	rlcf	(??_main+1)& (0+255),f,b
  2374  001060  0E04               	movlw	4
  2375  001062  275A               	addwf	??_main& (0+255),f,b
  2376  001064  0E00               	movlw	0
  2377  001066  235B               	addwfc	(??_main+1)& (0+255),f,b
  2378  001068  0E80               	movlw	low main@Pole
  2379  00106A  255A               	addwf	??_main& (0+255),w,b
  2380  00106C  6ED9               	movwf	fsr2l,c
  2381  00106E  0E02               	movlw	high main@Pole
  2382  001070  215B               	addwfc	(??_main+1)& (0+255),w,b
  2383  001072  6EDA               	movwf	fsr2h,c
  2384  001074  C044  FFDE         	movff	_avg_dist,postinc2	;volatile
  2385  001078  C045  FFDD         	movff	_avg_dist+1,postdec2	;volatile
  2386                           
  2387                           ; BSR set to: 1
  2388                           ;main.c: 797:             prev_avg_dist = avg_dist ;
  2389  00107C  C044  F2E8         	movff	_avg_dist,main@prev_avg_dist	;volatile
  2390  001080  C045  F2E9         	movff	_avg_dist+1,main@prev_avg_dist+1	;volatile
  2391  001084  C046  F2EA         	movff	_avg_dist+2,main@prev_avg_dist+2	;volatile
  2392  001088  C047  F2EB         	movff	_avg_dist+3,main@prev_avg_dist+3	;volatile
  2393                           
  2394                           ; BSR set to: 1
  2395                           ;main.c: 798:             poles_detected++;
  2396  00108C  0102               	movlb	2	; () banked
  2397  00108E  4BE6               	infsnz	main@poles_detected& (0+255),f,b
  2398  001090  2BE7               	incf	(main@poles_detected+1)& (0+255),f,b
  2399                           
  2400                           ; BSR set to: 2
  2401                           ;main.c: 800:             start();
  2402  001092  EC47  F01B         	call	_start	;wreg free
  2403                           
  2404                           ;main.c: 801:             arduino_stopped = 0;
  2405  001096  0E00               	movlw	0
  2406  001098  0102               	movlb	2	; () banked
  2407  00109A  6FDB               	movwf	main@arduino_stopped& (0+255),b
  2408                           
  2409                           ; BSR set to: 2
  2410                           ;main.c: 807:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  2411  00109C  0E01               	movlw	1
  2412  00109E  EC86  F01D         	call	_lcdInst
  2413  0010A2  0E11               	movlw	17
  2414  0010A4  0101               	movlb	1	; () banked
  2415  0010A6  6F5A               	movwf	??_main& (0+255),b
  2416  0010A8  0E3A               	movlw	58
  2417  0010AA                     u8807:
  2418  0010AA  2EE8               	decfsz	wreg,f,c
  2419  0010AC  D7FE               	bra	u8807
  2420  0010AE  2F5A               	decfsz	??_main& (0+255),f,b
  2421  0010B0  D7FC               	bra	u8807
  2422  0010B2  F000               	nop	
  2423                           
  2424                           ;main.c: 808:             printf("avg dist %d", avg_dist);
  2425  0010B4  0E2E               	movlw	low STR_58
  2426  0010B6  0100               	movlb	0	; () banked
  2427  0010B8  6FED               	movwf	printf@fmt& (0+255),b
  2428  0010BA  0EFF               	movlw	high STR_58
  2429  0010BC  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2430  0010BE  C044  F0EF         	movff	_avg_dist,?_printf+2	;volatile
  2431  0010C2  C045  F0F0         	movff	_avg_dist+1,?_printf+3	;volatile
  2432  0010C6  C046  F0F1         	movff	_avg_dist+2,?_printf+4	;volatile
  2433  0010CA  C047  F0F2         	movff	_avg_dist+3,?_printf+5	;volatile
  2434  0010CE  EC0D  F01D         	call	_printf	;wreg free
  2435                           
  2436                           ;main.c: 809:             printf("poles d %d", poles_detected);
  2437  0010D2  0E52               	movlw	low STR_59
  2438  0010D4  0100               	movlb	0	; () banked
  2439  0010D6  6FED               	movwf	printf@fmt& (0+255),b
  2440  0010D8  0EFF               	movlw	high STR_59
  2441  0010DA  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2442  0010DC  C2E6  F0EF         	movff	main@poles_detected,?_printf+2
  2443  0010E0  C2E7  F0F0         	movff	main@poles_detected+1,?_printf+3
  2444  0010E4  EC0D  F01D         	call	_printf	;wreg free
  2445                           
  2446                           ;main.c: 810:                                 for (int i=0;i<4;i++){
  2447  0010E8  0E00               	movlw	0
  2448  0010EA  0102               	movlb	2	; () banked
  2449  0010EC  6FE5               	movwf	(main@i_1026+1)& (0+255),b
  2450  0010EE  0E00               	movlw	0
  2451  0010F0  6FE4               	movwf	main@i_1026& (0+255),b
  2452  0010F2                     l8062:
  2453                           
  2454                           ; BSR set to: 2
  2455  0010F2  BFE5               	btfsc	(main@i_1026+1)& (0+255),7,b
  2456  0010F4  D006               	goto	l8066
  2457  0010F6  51E5               	movf	(main@i_1026+1)& (0+255),w,b
  2458  0010F8  E160               	bnz	l8084
  2459  0010FA  0E04               	movlw	4
  2460  0010FC  5DE4               	subwf	main@i_1026& (0+255),w,b
  2461  0010FE  B0D8               	btfsc	status,0,c
  2462  001100  D05C               	goto	l8084
  2463  001102                     l8066:
  2464                           
  2465                           ; BSR set to: 2
  2466                           ;main.c: 811:                         sum[i] = 0 ;
  2467  001102  90D8               	bcf	status,0,c
  2468  001104  35E4               	rlcf	main@i_1026& (0+255),w,b
  2469  001106  6ED9               	movwf	fsr2l,c
  2470  001108  35E5               	rlcf	(main@i_1026+1)& (0+255),w,b
  2471  00110A  6EDA               	movwf	fsr2h,c
  2472  00110C  0E38               	movlw	low _sum
  2473  00110E  26D9               	addwf	fsr2l,f,c
  2474  001110  0E00               	movlw	high _sum
  2475  001112  22DA               	addwfc	fsr2h,f,c
  2476  001114  0E00               	movlw	0
  2477  001116  6EDE               	movwf	postinc2,c
  2478  001118  0E00               	movlw	0
  2479  00111A  6EDD               	movwf	postdec2,c
  2480                           
  2481                           ;main.c: 812:                         a[i] =0 ;
  2482  00111C  90D8               	bcf	status,0,c
  2483  00111E  35E4               	rlcf	main@i_1026& (0+255),w,b
  2484  001120  6ED9               	movwf	fsr2l,c
  2485  001122  35E5               	rlcf	(main@i_1026+1)& (0+255),w,b
  2486  001124  6EDA               	movwf	fsr2h,c
  2487  001126  0E61               	movlw	low _a
  2488  001128  26D9               	addwf	fsr2l,f,c
  2489  00112A  0E00               	movlw	high _a
  2490  00112C  22DA               	addwfc	fsr2h,f,c
  2491  00112E  0E00               	movlw	0
  2492  001130  6EDE               	movwf	postinc2,c
  2493  001132  0E00               	movlw	0
  2494  001134  6EDD               	movwf	postdec2,c
  2495                           
  2496                           ;main.c: 813:                         sumf[i] = 0 ;
  2497  001136  0E40               	movlw	low _sumf
  2498  001138  25E4               	addwf	main@i_1026& (0+255),w,b
  2499  00113A  6ED9               	movwf	fsr2l,c
  2500  00113C  0E00               	movlw	high _sumf
  2501  00113E  21E5               	addwfc	(main@i_1026+1)& (0+255),w,b
  2502  001140  6EDA               	movwf	fsr2h,c
  2503  001142  0E00               	movlw	0
  2504  001144  6EDF               	movwf	indf2,c
  2505                           
  2506                           ; BSR set to: 2
  2507                           ;main.c: 815:                         for (int k=0;k<6;k++){
  2508  001146  0E00               	movlw	0
  2509  001148  6FDF               	movwf	(main@k+1)& (0+255),b
  2510  00114A  0E00               	movlw	0
  2511  00114C  6FDE               	movwf	main@k& (0+255),b
  2512  00114E                     l8070:
  2513                           
  2514                           ; BSR set to: 2
  2515  00114E  BFDF               	btfsc	(main@k+1)& (0+255),7,b
  2516  001150  D006               	goto	l8074
  2517  001152  51DF               	movf	(main@k+1)& (0+255),w,b
  2518  001154  E12F               	bnz	l8080
  2519  001156  0E06               	movlw	6
  2520  001158  5DDE               	subwf	main@k& (0+255),w,b
  2521  00115A  B0D8               	btfsc	status,0,c
  2522  00115C  D02B               	goto	l8080
  2523  00115E                     l8074:
  2524                           
  2525                           ; BSR set to: 2
  2526                           ;main.c: 816:                             dist_final[i][k] = 0;
  2527  00115E  C2E4  F080         	movff	main@i_1026,___wmul@multiplier
  2528  001162  C2E5  F081         	movff	main@i_1026+1,___wmul@multiplier+1
  2529  001166  0E00               	movlw	0
  2530  001168  0100               	movlb	0	; () banked
  2531  00116A  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2532  00116C  0E0C               	movlw	12
  2533  00116E  6F82               	movwf	___wmul@multiplicand& (0+255),b
  2534  001170  EC21  F01D         	call	___wmul	;wreg free
  2535  001174  0E50               	movlw	low _dist_final
  2536  001176  0101               	movlb	1	; () banked
  2537  001178  6F5A               	movwf	??_main& (0+255),b
  2538  00117A  0E02               	movlw	high _dist_final
  2539  00117C  6F5B               	movwf	(??_main+1)& (0+255),b
  2540  00117E  0100               	movlb	0	; () banked
  2541  001180  5180               	movf	?___wmul& (0+255),w,b
  2542  001182  0101               	movlb	1	; () banked
  2543  001184  275A               	addwf	??_main& (0+255),f,b
  2544  001186  0100               	movlb	0	; () banked
  2545  001188  5181               	movf	(?___wmul+1)& (0+255),w,b
  2546  00118A  0101               	movlb	1	; () banked
  2547  00118C  235B               	addwfc	(??_main+1)& (0+255),f,b
  2548  00118E  90D8               	bcf	status,0,c
  2549  001190  0102               	movlb	2	; () banked
  2550  001192  35DE               	rlcf	main@k& (0+255),w,b
  2551  001194  6ED9               	movwf	fsr2l,c
  2552  001196  35DF               	rlcf	(main@k+1)& (0+255),w,b
  2553  001198  6EDA               	movwf	fsr2h,c
  2554  00119A  0101               	movlb	1	; () banked
  2555  00119C  515A               	movf	??_main& (0+255),w,b
  2556  00119E  26D9               	addwf	fsr2l,f,c
  2557  0011A0  515B               	movf	(??_main+1)& (0+255),w,b
  2558  0011A2  22DA               	addwfc	fsr2h,f,c
  2559  0011A4  0E00               	movlw	0
  2560  0011A6  6EDE               	movwf	postinc2,c
  2561  0011A8  0E00               	movlw	0
  2562  0011AA  6EDD               	movwf	postdec2,c
  2563                           
  2564                           ; BSR set to: 1
  2565                           ;main.c: 817:                         }
  2566  0011AC  0102               	movlb	2	; () banked
  2567  0011AE  4BDE               	infsnz	main@k& (0+255),f,b
  2568  0011B0  2BDF               	incf	(main@k+1)& (0+255),f,b
  2569  0011B2  D7CD               	goto	l8070
  2570  0011B4                     l8080:
  2571                           
  2572                           ; BSR set to: 2
  2573                           ;main.c: 818:                     }
  2574  0011B4  4BE4               	infsnz	main@i_1026& (0+255),f,b
  2575  0011B6  2BE5               	incf	(main@i_1026+1)& (0+255),f,b
  2576  0011B8  D79C               	goto	l8062
  2577  0011BA                     l8084:
  2578                           
  2579                           ; BSR set to: 2
  2580                           ;main.c: 819:             _delay((unsigned long)((1000)*(10000000/4000.0)));
  2581  0011BA  0E0D               	movlw	13
  2582  0011BC  0101               	movlb	1	; () banked
  2583  0011BE  6F5B               	movwf	(??_main+1)& (0+255),b
  2584  0011C0  0EAF               	movlw	175
  2585  0011C2  6F5A               	movwf	??_main& (0+255),b
  2586  0011C4  0EB6               	movlw	182
  2587  0011C6                     u8817:
  2588  0011C6  2EE8               	decfsz	wreg,f,c
  2589  0011C8  D7FE               	bra	u8817
  2590  0011CA  2F5A               	decfsz	??_main& (0+255),f,b
  2591  0011CC  D7FC               	bra	u8817
  2592  0011CE  2F5B               	decfsz	(??_main+1)& (0+255),f,b
  2593  0011D0  D7FA               	bra	u8817
  2594  0011D2  F000               	nop	
  2595                           
  2596                           ;main.c: 820:             sens = 1;
  2597  0011D4  0E00               	movlw	0
  2598  0011D6  6E59               	movwf	_sens+1,c	;volatile
  2599  0011D8  0E01               	movlw	1
  2600  0011DA  6E58               	movwf	_sens,c	;volatile
  2601  0011DC  D04E               	goto	l8104
  2602  0011DE                     l8088:
  2603                           
  2604                           ; BSR set to: 2
  2605                           ;main.c: 824:             brake();
  2606  0011DE  EC35  F01D         	call	_brake	;wreg free
  2607                           
  2608                           ;main.c: 825:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  2609  0011E2  0E01               	movlw	1
  2610  0011E4  EC86  F01D         	call	_lcdInst
  2611  0011E8  0E11               	movlw	17
  2612  0011EA  0101               	movlb	1	; () banked
  2613  0011EC  6F5A               	movwf	??_main& (0+255),b
  2614  0011EE  0E3A               	movlw	58
  2615  0011F0                     u8827:
  2616  0011F0  2EE8               	decfsz	wreg,f,c
  2617  0011F2  D7FE               	bra	u8827
  2618  0011F4  2F5A               	decfsz	??_main& (0+255),f,b
  2619  0011F6  D7FC               	bra	u8827
  2620  0011F8  F000               	nop	
  2621                           
  2622                           ;main.c: 826:             printf("poles done");
  2623  0011FA  0E68               	movlw	low STR_60
  2624  0011FC  0100               	movlb	0	; () banked
  2625  0011FE  6FED               	movwf	printf@fmt& (0+255),b
  2626  001200  0EFF               	movlw	high STR_60
  2627  001202  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2628  001204  EC0D  F01D         	call	_printf	;wreg free
  2629                           
  2630                           ;main.c: 827:             _delay((unsigned long)((1000)*(10000000/4000.0)));
  2631  001208  0E0D               	movlw	13
  2632  00120A  0101               	movlb	1	; () banked
  2633  00120C  6F5B               	movwf	(??_main+1)& (0+255),b
  2634  00120E  0EAF               	movlw	175
  2635  001210  6F5A               	movwf	??_main& (0+255),b
  2636  001212  0EB6               	movlw	182
  2637  001214                     u8837:
  2638  001214  2EE8               	decfsz	wreg,f,c
  2639  001216  D7FE               	bra	u8837
  2640  001218  2F5A               	decfsz	??_main& (0+255),f,b
  2641  00121A  D7FC               	bra	u8837
  2642  00121C  2F5B               	decfsz	(??_main+1)& (0+255),f,b
  2643  00121E  D7FA               	bra	u8837
  2644  001220  F000               	nop	
  2645                           
  2646                           ;main.c: 828:             UI_main(t_dep, poles_detected);
  2647  001222  C2E2  F0F9         	movff	main@t_dep,UI_main@t_dep
  2648  001226  C2E3  F0FA         	movff	main@t_dep+1,UI_main@t_dep+1
  2649  00122A  C2E6  F0FB         	movff	main@poles_detected,UI_main@poles_detected
  2650  00122E  C2E7  F0FC         	movff	main@poles_detected+1,UI_main@poles_detected+1
  2651  001232  EC09  F000         	call	_UI_main	;wreg free
  2652                           
  2653                           ;main.c: 829:             backwards();
  2654  001236  EC48  F01D         	call	_backwards	;wreg free
  2655                           
  2656                           ;main.c: 830:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  2657  00123A  0E01               	movlw	1
  2658  00123C  EC86  F01D         	call	_lcdInst
  2659  001240  0E11               	movlw	17
  2660  001242  0101               	movlb	1	; () banked
  2661  001244  6F5A               	movwf	??_main& (0+255),b
  2662  001246  0E3A               	movlw	58
  2663  001248                     u8847:
  2664  001248  2EE8               	decfsz	wreg,f,c
  2665  00124A  D7FE               	bra	u8847
  2666  00124C  2F5A               	decfsz	??_main& (0+255),f,b
  2667  00124E  D7FC               	bra	u8847
  2668  001250  F000               	nop	
  2669                           
  2670                           ;main.c: 831:             printf("backwards");
  2671  001252  0EB0               	movlw	low STR_61
  2672  001254  0100               	movlb	0	; () banked
  2673  001256  6FED               	movwf	printf@fmt& (0+255),b
  2674  001258  0EFF               	movlw	high STR_61
  2675  00125A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2676  00125C  EC0D  F01D         	call	_printf	;wreg free
  2677                           
  2678                           ;main.c: 832:             _delay((unsigned long)((1000)*(10000000/4000.0)));
  2679  001260  0E0D               	movlw	13
  2680  001262  0101               	movlb	1	; () banked
  2681  001264  6F5B               	movwf	(??_main+1)& (0+255),b
  2682  001266  0EAF               	movlw	175
  2683  001268  6F5A               	movwf	??_main& (0+255),b
  2684  00126A  0EB6               	movlw	182
  2685  00126C                     u8857:
  2686  00126C  2EE8               	decfsz	wreg,f,c
  2687  00126E  D7FE               	bra	u8857
  2688  001270  2F5A               	decfsz	??_main& (0+255),f,b
  2689  001272  D7FC               	bra	u8857
  2690  001274  2F5B               	decfsz	(??_main+1)& (0+255),f,b
  2691  001276  D7FA               	bra	u8857
  2692  001278  F000               	nop	
  2693  00127A                     l8104:
  2694                           
  2695                           ;main.c: 834:         t_count = 5;
  2696  00127A  0E00               	movlw	0
  2697  00127C  0102               	movlb	2	; () banked
  2698  00127E  6FE1               	movwf	(main@t_count+1)& (0+255),b
  2699  001280  0E05               	movlw	5
  2700  001282  6FE0               	movwf	main@t_count& (0+255),b
  2701  001284  D5A6               	goto	l7952
  2702  001286                     __end_of_main:
  2703                           	opt callstack 0
  2704                           
  2705 ;; *************** function _ultrasonic_main *****************
  2706 ;; Defined at:
  2707 ;;		line 291 in file "main.c"
  2708 ;; Parameters:    Size  Location     Type
  2709 ;;		None
  2710 ;; Auto vars:     Size  Location     Type
  2711 ;;  min_us_dist     2    8[BANK1 ] int 
  2712 ;;  steps2_adj      2    6[BANK1 ] int 
  2713 ;;  step2_offset    2    4[BANK1 ] int 
  2714 ;;  sensed          2    2[BANK1 ] int 
  2715 ;;  min_us_dist     2    0        int 
  2716 ;; Return value:  Size  Location     Type
  2717 ;;                  2  122[BANK0 ] int 
  2718 ;; Registers used:
  2719 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2720 ;; Tracked objects:
  2721 ;;		On entry : 0/0
  2722 ;;		On exit  : 0/0
  2723 ;;		Unchanged: 0/0
  2724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2725 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2726 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2727 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2728 ;;      Totals:         0       4      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2729 ;;Total ram usage:       14 bytes
  2730 ;; Hardware stack levels used:    1
  2731 ;; Hardware stack levels required when called:   15
  2732 ;; This function calls:
  2733 ;;		_I2C_Master_Read
  2734 ;;		_I2C_Master_Start
  2735 ;;		_I2C_Master_Stop
  2736 ;;		_I2C_Master_Write
  2737 ;;		_abs
  2738 ;;		_lcdInst
  2739 ;;		_min
  2740 ;;		_print_echo
  2741 ;;		_printf
  2742 ;;		_trig
  2743 ;; This function is called by:
  2744 ;;		_main
  2745 ;; This function uses a non-reentrant model
  2746 ;;
  2747                           
  2748                           	psect	text1
  2749  002066                     __ptext1:
  2750                           	opt callstack 0
  2751  002066                     _ultrasonic_main:
  2752                           	opt callstack 15
  2753                           
  2754                           ;main.c: 292:     TRISBbits.RB0 = 0;
  2755                           
  2756                           ; BSR set to: 2
  2757                           ;incstack = 0
  2758  002066  9093               	bcf	3987,0,c	;volatile
  2759                           
  2760                           ;main.c: 293:     LATBbits.LATB0 = 1;
  2761  002068  808A               	bsf	3978,0,c	;volatile
  2762                           
  2763                           ;main.c: 295:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  2764  00206A  0E01               	movlw	1
  2765  00206C  EC86  F01D         	call	_lcdInst
  2766  002070  0E11               	movlw	17
  2767  002072  0100               	movlb	0	; () banked
  2768  002074  6FFC               	movwf	??_ultrasonic_main& (0+255),b
  2769  002076  0E3A               	movlw	58
  2770  002078                     u8867:
  2771  002078  2EE8               	decfsz	wreg,f,c
  2772  00207A  D7FE               	bra	u8867
  2773  00207C  2FFC               	decfsz	??_ultrasonic_main& (0+255),f,b
  2774  00207E  D7FC               	bra	u8867
  2775  002080  F000               	nop	
  2776                           
  2777                           ;main.c: 296:     printf("or here");
  2778  002082  0EEB               	movlw	low STR_18
  2779  002084  0100               	movlb	0	; () banked
  2780  002086  6FED               	movwf	printf@fmt& (0+255),b
  2781  002088  0EFF               	movlw	high STR_18
  2782  00208A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2783  00208C  EC0D  F01D         	call	_printf	;wreg free
  2784                           
  2785                           ;main.c: 297:  TRISB = 0b11110000;
  2786  002090  0EF0               	movlw	240
  2787  002092  6E93               	movwf	3987,c	;volatile
  2788                           
  2789                           ;main.c: 298:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  2790  002094  0E01               	movlw	1
  2791  002096  EC86  F01D         	call	_lcdInst
  2792  00209A  0E11               	movlw	17
  2793  00209C  0100               	movlb	0	; () banked
  2794  00209E  6FFC               	movwf	??_ultrasonic_main& (0+255),b
  2795  0020A0  0E3A               	movlw	58
  2796  0020A2                     u8877:
  2797  0020A2  2EE8               	decfsz	wreg,f,c
  2798  0020A4  D7FE               	bra	u8877
  2799  0020A6  2FFC               	decfsz	??_ultrasonic_main& (0+255),f,b
  2800  0020A8  D7FC               	bra	u8877
  2801  0020AA  F000               	nop	
  2802                           
  2803                           ;main.c: 299:     printf("break heree?");
  2804  0020AC  0EEF               	movlw	low STR_19
  2805  0020AE  0100               	movlb	0	; () banked
  2806  0020B0  6FED               	movwf	printf@fmt& (0+255),b
  2807  0020B2  0EFE               	movlw	high STR_19
  2808  0020B4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2809  0020B6  EC0D  F01D         	call	_printf	;wreg free
  2810                           
  2811                           ;main.c: 300:     RBIF = 0;
  2812  0020BA  90F2               	bcf	4082,0,c	;volatile
  2813                           
  2814                           ;main.c: 301:  RBIE = 1;
  2815  0020BC  86F2               	bsf	4082,3,c	;volatile
  2816                           
  2817                           ;main.c: 303:     int sensed = 0;
  2818  0020BE  0E00               	movlw	0
  2819  0020C0  0101               	movlb	1	; () banked
  2820  0020C2  6F03               	movwf	(ultrasonic_main@sensed+1)& (0+255),b
  2821  0020C4  0E00               	movlw	0
  2822  0020C6  6F02               	movwf	ultrasonic_main@sensed& (0+255),b
  2823                           
  2824                           ;main.c: 305:     int steps2_adj=0;
  2825  0020C8  0E00               	movlw	0
  2826  0020CA  6F07               	movwf	(ultrasonic_main@steps2_adj+1)& (0+255),b
  2827  0020CC  0E00               	movlw	0
  2828  0020CE  6F06               	movwf	ultrasonic_main@steps2_adj& (0+255),b
  2829                           
  2830                           ;main.c: 306:     int step2_offset=0;
  2831  0020D0  0E00               	movlw	0
  2832  0020D2  6F05               	movwf	(ultrasonic_main@step2_offset+1)& (0+255),b
  2833  0020D4  0E00               	movlw	0
  2834  0020D6  6F04               	movwf	ultrasonic_main@step2_offset& (0+255),b
  2835                           
  2836                           ;main.c: 307:     while(send){
  2837  0020D8  D070               	goto	l7522
  2838  0020DA                     l7480:
  2839                           
  2840                           ; BSR set to: 1
  2841                           ;main.c: 308:         for (meas=0; meas<3;meas++){
  2842  0020DA  0E00               	movlw	0
  2843  0020DC  6E51               	movwf	_meas+1,c	;volatile
  2844  0020DE  0E00               	movlw	0
  2845  0020E0  6E50               	movwf	_meas,c	;volatile
  2846  0020E2                     l7482:
  2847                           
  2848                           ; BSR set to: 1
  2849  0020E2  BE51               	btfsc	_meas+1,7,c	;volatile
  2850  0020E4  D006               	goto	l7486
  2851  0020E6  5051               	movf	_meas+1,w,c	;volatile
  2852  0020E8  E160               	bnz	l7518
  2853  0020EA  0E03               	movlw	3
  2854  0020EC  5C50               	subwf	_meas,w,c	;volatile
  2855  0020EE  B0D8               	btfsc	status,0,c
  2856  0020F0  D05C               	goto	l7518
  2857  0020F2                     l7486:
  2858                           
  2859                           ; BSR set to: 1
  2860                           ;main.c: 309:         trig();
  2861  0020F2  ECEE  F016         	call	_trig	;wreg free
  2862                           
  2863                           ;main.c: 310:         RBIE = 0;
  2864  0020F6  96F2               	bcf	4082,3,c	;volatile
  2865                           
  2866                           ;main.c: 311:         print_echo();
  2867  0020F8  EC5A  F012         	call	_print_echo	;wreg free
  2868                           
  2869                           ;main.c: 312:         RBIE = 1;
  2870  0020FC  86F2               	bsf	4082,3,c	;volatile
  2871                           
  2872                           ;main.c: 313:         int min_us_dist = min(a, 4);
  2873  0020FE  0E61               	movlw	low _a
  2874  002100  0100               	movlb	0	; () banked
  2875  002102  6F80               	movwf	min@array& (0+255),b
  2876  002104  0E00               	movlw	high _a
  2877  002106  6F81               	movwf	(min@array+1)& (0+255),b
  2878  002108  0E00               	movlw	0
  2879  00210A  6F83               	movwf	(min@size+1)& (0+255),b
  2880  00210C  0E04               	movlw	4
  2881  00210E  6F82               	movwf	min@size& (0+255),b
  2882  002110  EC66  F016         	call	_min	;wreg free
  2883  002114  C080  F108         	movff	?_min,ultrasonic_main@min_us_dist_914
  2884  002118  C081  F109         	movff	?_min+1,ultrasonic_main@min_us_dist_914+1
  2885                           
  2886                           ;main.c: 314:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  2887  00211C  0E01               	movlw	1
  2888  00211E  EC86  F01D         	call	_lcdInst
  2889  002122  0E11               	movlw	17
  2890  002124  0100               	movlb	0	; () banked
  2891  002126  6FFC               	movwf	??_ultrasonic_main& (0+255),b
  2892  002128  0E3A               	movlw	58
  2893  00212A                     u8887:
  2894  00212A  2EE8               	decfsz	wreg,f,c
  2895  00212C  D7FE               	bra	u8887
  2896  00212E  2FFC               	decfsz	??_ultrasonic_main& (0+255),f,b
  2897  002130  D7FC               	bra	u8887
  2898  002132  F000               	nop	
  2899                           
  2900                           ;main.c: 315:         printf("minimum %d", min_us_dist);
  2901  002134  0E5D               	movlw	low STR_20
  2902  002136  0100               	movlb	0	; () banked
  2903  002138  6FED               	movwf	printf@fmt& (0+255),b
  2904  00213A  0EFF               	movlw	high STR_20
  2905  00213C  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2906  00213E  C108  F0EF         	movff	ultrasonic_main@min_us_dist_914,?_printf+2
  2907  002142  C109  F0F0         	movff	ultrasonic_main@min_us_dist_914+1,?_printf+3
  2908  002146  EC0D  F01D         	call	_printf	;wreg free
  2909                           
  2910                           ;main.c: 317:         if (min_us_dist<14){
  2911  00214A  0101               	movlb	1	; () banked
  2912  00214C  BF09               	btfsc	(ultrasonic_main@min_us_dist_914+1)& (0+255),7,b
  2913  00214E  D006               	goto	u8020
  2914  002150  5109               	movf	(ultrasonic_main@min_us_dist_914+1)& (0+255),w,b
  2915  002152  E108               	bnz	l7506
  2916  002154  0E0E               	movlw	14
  2917  002156  5D08               	subwf	ultrasonic_main@min_us_dist_914& (0+255),w,b
  2918  002158  B0D8               	btfsc	status,0,c
  2919  00215A  D004               	goto	l7506
  2920  00215C                     u8020:
  2921                           
  2922                           ; BSR set to: 1
  2923                           ;main.c: 318:             step2_offset = 0;
  2924  00215C  0E00               	movlw	0
  2925  00215E  6F05               	movwf	(ultrasonic_main@step2_offset+1)& (0+255),b
  2926  002160  0E00               	movlw	0
  2927  002162  6F04               	movwf	ultrasonic_main@step2_offset& (0+255),b
  2928  002164                     l7506:
  2929                           
  2930                           ; BSR set to: 1
  2931                           ;main.c: 320:         if (min_us_dist>=14){
  2932  002164  BF09               	btfsc	(ultrasonic_main@min_us_dist_914+1)& (0+255),7,b
  2933  002166  D015               	goto	l7510
  2934  002168  5109               	movf	(ultrasonic_main@min_us_dist_914+1)& (0+255),w,b
  2935  00216A  E104               	bnz	u8030
  2936  00216C  0E0E               	movlw	14
  2937  00216E  5D08               	subwf	ultrasonic_main@min_us_dist_914& (0+255),w,b
  2938  002170  A0D8               	btfss	status,0,c
  2939  002172  D00F               	goto	l7510
  2940  002174                     u8030:
  2941                           
  2942                           ; BSR set to: 1
  2943                           ;main.c: 321:         step2_offset = abs(min_us_dist - 14);
  2944  002174  0EF2               	movlw	242
  2945  002176  2508               	addwf	ultrasonic_main@min_us_dist_914& (0+255),w,b
  2946  002178  0100               	movlb	0	; () banked
  2947  00217A  6F92               	movwf	abs@a& (0+255),b
  2948  00217C  0EFF               	movlw	255
  2949  00217E  0101               	movlb	1	; () banked
  2950  002180  2109               	addwfc	(ultrasonic_main@min_us_dist_914+1)& (0+255),w,b
  2951  002182  0100               	movlb	0	; () banked
  2952  002184  6F93               	movwf	(abs@a+1)& (0+255),b
  2953  002186  EC36  F01C         	call	_abs	;wreg free
  2954  00218A  C092  F104         	movff	?_abs,ultrasonic_main@step2_offset
  2955  00218E  C093  F105         	movff	?_abs+1,ultrasonic_main@step2_offset+1
  2956  002192                     l7510:
  2957                           
  2958                           ;main.c: 323:         steps2_adj = 110 + step2_offset;
  2959  002192  0E6E               	movlw	110
  2960  002194  0101               	movlb	1	; () banked
  2961  002196  2504               	addwf	ultrasonic_main@step2_offset& (0+255),w,b
  2962  002198  6F06               	movwf	ultrasonic_main@steps2_adj& (0+255),b
  2963  00219A  0E00               	movlw	0
  2964  00219C  2105               	addwfc	(ultrasonic_main@step2_offset+1)& (0+255),w,b
  2965  00219E  6F07               	movwf	(ultrasonic_main@steps2_adj+1)& (0+255),b
  2966                           
  2967                           ; BSR set to: 1
  2968                           ;main.c: 324:         sensed++;
  2969  0021A0  4B02               	infsnz	ultrasonic_main@sensed& (0+255),f,b
  2970  0021A2  2B03               	incf	(ultrasonic_main@sensed+1)& (0+255),f,b
  2971                           
  2972                           ; BSR set to: 1
  2973                           ;main.c: 327:         }
  2974  0021A4  4A50               	infsnz	_meas,f,c	;volatile
  2975  0021A6  2A51               	incf	_meas+1,f,c	;volatile
  2976  0021A8  D79C               	goto	l7482
  2977  0021AA                     l7518:
  2978                           
  2979                           ; BSR set to: 1
  2980                           ;main.c: 328:         if (sensed>2){
  2981  0021AA  BF03               	btfsc	(ultrasonic_main@sensed+1)& (0+255),7,b
  2982  0021AC  D006               	goto	l7522
  2983  0021AE  5103               	movf	(ultrasonic_main@sensed+1)& (0+255),w,b
  2984  0021B0  E144               	bnz	l7538
  2985  0021B2  0E03               	movlw	3
  2986  0021B4  5D02               	subwf	ultrasonic_main@sensed& (0+255),w,b
  2987  0021B6  B0D8               	btfsc	status,0,c
  2988  0021B8  D040               	goto	l7538
  2989  0021BA                     l7522:
  2990                           
  2991                           ; BSR set to: 1
  2992                           ;main.c: 307:     while(send){
  2993  0021BA  506D               	movf	_send,w,c
  2994  0021BC  B4D8               	btfsc	status,2,c
  2995  0021BE  D03D               	goto	l7538
  2996  0021C0  D78C               	goto	l7480
  2997  0021C2                     l7524:
  2998                           
  2999                           ;main.c: 342:         I2C_Master_Start();
  3000  0021C2  EC97  F01D         	call	_I2C_Master_Start	;wreg free
  3001                           
  3002                           ;main.c: 343:         I2C_Master_Write(0b00010001);
  3003  0021C6  0E00               	movlw	0
  3004  0021C8  0100               	movlb	0	; () banked
  3005  0021CA  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  3006  0021CC  0E11               	movlw	17
  3007  0021CE  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  3008  0021D0  EC8E  F01D         	call	_I2C_Master_Write	;wreg free
  3009                           
  3010                           ;main.c: 344:         avg_dist = I2C_Master_Read(1);
  3011  0021D4  0E01               	movlw	1
  3012  0021D6  ECF8  F01C         	call	_I2C_Master_Read
  3013  0021DA  0100               	movlb	0	; () banked
  3014  0021DC  6FFC               	movwf	??_ultrasonic_main& (0+255),b
  3015  0021DE  51FC               	movf	??_ultrasonic_main& (0+255),w,b
  3016  0021E0  6E44               	movwf	_avg_dist,c	;volatile
  3017  0021E2  6A45               	clrf	_avg_dist+1,c	;volatile
  3018  0021E4  6A46               	clrf	_avg_dist+2,c	;volatile
  3019  0021E6  6A47               	clrf	_avg_dist+3,c	;volatile
  3020                           
  3021                           ;main.c: 345:         I2C_Master_Stop();
  3022  0021E8  EC93  F01D         	call	_I2C_Master_Stop	;wreg free
  3023                           
  3024                           ;main.c: 346:         if(avg_dist){
  3025  0021EC  5044               	movf	_avg_dist,w,c	;volatile
  3026  0021EE  1045               	iorwf	_avg_dist+1,w,c	;volatile
  3027  0021F0  1046               	iorwf	_avg_dist+2,w,c	;volatile
  3028  0021F2  1047               	iorwf	_avg_dist+3,w,c	;volatile
  3029  0021F4  B4D8               	btfsc	status,2,c
  3030  0021F6  D01E               	goto	l7536
  3031                           
  3032                           ;main.c: 349:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  3033  0021F8  0E01               	movlw	1
  3034  0021FA  EC86  F01D         	call	_lcdInst
  3035  0021FE  0E11               	movlw	17
  3036  002200  0100               	movlb	0	; () banked
  3037  002202  6FFC               	movwf	??_ultrasonic_main& (0+255),b
  3038  002204  0E3A               	movlw	58
  3039  002206                     u8897:
  3040  002206  2EE8               	decfsz	wreg,f,c
  3041  002208  D7FE               	bra	u8897
  3042  00220A  2FFC               	decfsz	??_ultrasonic_main& (0+255),f,b
  3043  00220C  D7FC               	bra	u8897
  3044  00220E  F000               	nop	
  3045                           
  3046                           ;main.c: 357:             printf("%d",avg_dist);
  3047  002210  0ED0               	movlw	low (STR_39+11)
  3048  002212  0100               	movlb	0	; () banked
  3049  002214  6FED               	movwf	printf@fmt& (0+255),b
  3050  002216  0EFE               	movlw	high (STR_39+11)
  3051  002218  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3052  00221A  C044  F0EF         	movff	_avg_dist,?_printf+2	;volatile
  3053  00221E  C045  F0F0         	movff	_avg_dist+1,?_printf+3	;volatile
  3054  002222  C046  F0F1         	movff	_avg_dist+2,?_printf+4	;volatile
  3055  002226  C047  F0F2         	movff	_avg_dist+3,?_printf+5	;volatile
  3056  00222A  EC0D  F01D         	call	_printf	;wreg free
  3057                           
  3058                           ;main.c: 364:         send = 1;
  3059  00222E  0E01               	movlw	1
  3060  002230  6E6D               	movwf	_send,c
  3061                           
  3062                           ;main.c: 365:         }
  3063  002232  D003               	goto	l7538
  3064  002234                     l7536:
  3065                           
  3066                           ;main.c: 368:             send = 0;
  3067  002234  0E00               	movlw	0
  3068  002236  6E6D               	movwf	_send,c
  3069                           
  3070                           ;main.c: 369:             break;
  3071  002238  D003               	goto	u8070
  3072  00223A                     l7538:
  3073                           
  3074                           ;main.c: 340:     while (~send){
  3075  00223A  046D               	decf	_send,w,c
  3076  00223C  A4D8               	btfss	status,2,c
  3077  00223E  D7C1               	goto	l7524
  3078  002240                     u8070:
  3079                           
  3080                           ;main.c: 372:          { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));}
      +                          ;
  3081  002240  0E01               	movlw	1
  3082  002242  EC86  F01D         	call	_lcdInst
  3083  002246  0E11               	movlw	17
  3084  002248  0100               	movlb	0	; () banked
  3085  00224A  6FFC               	movwf	??_ultrasonic_main& (0+255),b
  3086  00224C  0E3A               	movlw	58
  3087  00224E                     u8907:
  3088  00224E  2EE8               	decfsz	wreg,f,c
  3089  002250  D7FE               	bra	u8907
  3090  002252  2FFC               	decfsz	??_ultrasonic_main& (0+255),f,b
  3091  002254  D7FC               	bra	u8907
  3092  002256  F000               	nop	
  3093                           
  3094                           ;main.c: 373:     printf("stepsadj %d", steps2_adj);
  3095  002258  0E22               	movlw	low STR_22
  3096  00225A  0100               	movlb	0	; () banked
  3097  00225C  6FED               	movwf	printf@fmt& (0+255),b
  3098  00225E  0EFF               	movlw	high STR_22
  3099  002260  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3100  002262  C106  F0EF         	movff	ultrasonic_main@steps2_adj,?_printf+2
  3101  002266  C107  F0F0         	movff	ultrasonic_main@steps2_adj+1,?_printf+3
  3102  00226A  EC0D  F01D         	call	_printf	;wreg free
  3103                           
  3104                           ;main.c: 374:     _delay((unsigned long)((1000)*(10000000/4000.0)));
  3105  00226E  0E0D               	movlw	13
  3106  002270  0100               	movlb	0	; () banked
  3107  002272  6FFD               	movwf	(??_ultrasonic_main+1)& (0+255),b
  3108  002274  0EAF               	movlw	175
  3109  002276  6FFC               	movwf	??_ultrasonic_main& (0+255),b
  3110  002278  0EB6               	movlw	182
  3111  00227A                     u8917:
  3112  00227A  2EE8               	decfsz	wreg,f,c
  3113  00227C  D7FE               	bra	u8917
  3114  00227E  2FFC               	decfsz	??_ultrasonic_main& (0+255),f,b
  3115  002280  D7FC               	bra	u8917
  3116  002282  2FFD               	decfsz	(??_ultrasonic_main+1)& (0+255),f,b
  3117  002284  D7FA               	bra	u8917
  3118  002286  F000               	nop	
  3119                           
  3120                           ;main.c: 375:     return steps2_adj;
  3121  002288  C106  F0FA         	movff	ultrasonic_main@steps2_adj,?_ultrasonic_main
  3122  00228C  C107  F0FB         	movff	ultrasonic_main@steps2_adj+1,?_ultrasonic_main+1
  3123  002290  0012               	return		;funcret
  3124  002292                     __end_of_ultrasonic_main:
  3125                           	opt callstack 0
  3126                           
  3127 ;; *************** function _trig *****************
  3128 ;; Defined at:
  3129 ;;		line 190 in file "main.c"
  3130 ;; Parameters:    Size  Location     Type
  3131 ;;		None
  3132 ;; Auto vars:     Size  Location     Type
  3133 ;;		None
  3134 ;; Return value:  Size  Location     Type
  3135 ;;                  1    wreg      void 
  3136 ;; Registers used:
  3137 ;;		wreg, status,2, status,0
  3138 ;; Tracked objects:
  3139 ;;		On entry : 0/0
  3140 ;;		On exit  : 0/0
  3141 ;;		Unchanged: 0/0
  3142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3145 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3146 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3147 ;;Total ram usage:        2 bytes
  3148 ;; Hardware stack levels used:    1
  3149 ;; Hardware stack levels required when called:    3
  3150 ;; This function calls:
  3151 ;;		Nothing
  3152 ;; This function is called by:
  3153 ;;		_ultrasonic_main
  3154 ;; This function uses a non-reentrant model
  3155 ;;
  3156                           
  3157                           	psect	text2
  3158  002DDC                     __ptext2:
  3159                           	opt callstack 0
  3160  002DDC                     _trig:
  3161                           	opt callstack 26
  3162                           
  3163                           ;main.c: 191:     for(b=1; b<5; b++){
  3164                           
  3165                           ;incstack = 0
  3166  002DDC  0E00               	movlw	0
  3167  002DDE  6E5B               	movwf	_b+1,c
  3168  002DE0  0E01               	movlw	1
  3169  002DE2  6E5A               	movwf	_b,c
  3170  002DE4  BE5B               	btfsc	_b+1,7,c
  3171  002DE6  D004               	goto	l7174
  3172  002DE8  505B               	movf	_b+1,w,c
  3173  002DEA  E101               	bnz	u7610
  3174  002DEC  D072               	goto	L1
  3175  002DEE                     u7610:
  3176  002DEE  0012               	return	
  3177  002DF0                     l7174:
  3178                           
  3179                           ;main.c: 192:         TMR1H = 0;
  3180  002DF0  0E00               	movlw	0
  3181  002DF2  6ECF               	movwf	4047,c	;volatile
  3182                           
  3183                           ;main.c: 193:         TMR1L = 0;
  3184  002DF4  0E00               	movlw	0
  3185  002DF6  6ECE               	movwf	4046,c	;volatile
  3186                           
  3187                           ;main.c: 194:         if(b==1){
  3188  002DF8  045A               	decf	_b,w,c
  3189  002DFA  105B               	iorwf	_b+1,w,c
  3190  002DFC  A4D8               	btfss	status,2,c
  3191  002DFE  D015               	goto	l7186
  3192                           
  3193                           ;main.c: 195:             RBIE = 0;
  3194  002E00  96F2               	bcf	4082,3,c	;volatile
  3195                           
  3196                           ;main.c: 196:             RD1 = 1;
  3197  002E02  8283               	bsf	3971,1,c	;volatile
  3198                           
  3199                           ;main.c: 197:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  3200  002E04  0E08               	movlw	8
  3201  002E06                     u8927:
  3202  002E06  2EE8               	decfsz	wreg,f,c
  3203  002E08  D7FE               	bra	u8927
  3204  002E0A  F000               	nop	
  3205                           
  3206                           ;main.c: 198:             RD1 = 0;
  3207  002E0C  9283               	bcf	3971,1,c	;volatile
  3208                           
  3209                           ;main.c: 200:             RBIE = 1;
  3210  002E0E  86F2               	bsf	4082,3,c	;volatile
  3211                           
  3212                           ;main.c: 201:             _delay((unsigned long)((135)*(10000000/4000.0)));
  3213  002E10  0E02               	movlw	2
  3214  002E12  0100               	movlb	0	; () banked
  3215  002E14  6F81               	movwf	(??_trig+1)& (0+255),b
  3216  002E16  0EB7               	movlw	183
  3217  002E18  6F80               	movwf	??_trig& (0+255),b
  3218  002E1A  0E4C               	movlw	76
  3219  002E1C                     u8937:
  3220  002E1C  2EE8               	decfsz	wreg,f,c
  3221  002E1E  D7FE               	bra	u8937
  3222  002E20  2F80               	decfsz	??_trig& (0+255),f,b
  3223  002E22  D7FC               	bra	u8937
  3224  002E24  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  3225  002E26  D7FA               	bra	u8937
  3226  002E28  F000               	nop	
  3227  002E2A                     l7186:
  3228                           
  3229                           ;main.c: 203:         if(b==2){
  3230  002E2A  0E02               	movlw	2
  3231  002E2C  185A               	xorwf	_b,w,c
  3232  002E2E  105B               	iorwf	_b+1,w,c
  3233  002E30  A4D8               	btfss	status,2,c
  3234  002E32  D015               	goto	l7196
  3235                           
  3236                           ;main.c: 204:             RBIE = 0;
  3237  002E34  96F2               	bcf	4082,3,c	;volatile
  3238                           
  3239                           ;main.c: 205:             RD0 = 1;
  3240  002E36  8083               	bsf	3971,0,c	;volatile
  3241                           
  3242                           ;main.c: 206:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  3243  002E38  0E08               	movlw	8
  3244  002E3A                     u8947:
  3245  002E3A  2EE8               	decfsz	wreg,f,c
  3246  002E3C  D7FE               	bra	u8947
  3247  002E3E  F000               	nop	
  3248                           
  3249                           ;main.c: 207:             RD0 = 0;
  3250  002E40  9083               	bcf	3971,0,c	;volatile
  3251                           
  3252                           ;main.c: 209:             RBIE = 1;
  3253  002E42  86F2               	bsf	4082,3,c	;volatile
  3254                           
  3255                           ;main.c: 210:             _delay((unsigned long)((135)*(10000000/4000.0)));
  3256  002E44  0E02               	movlw	2
  3257  002E46  0100               	movlb	0	; () banked
  3258  002E48  6F81               	movwf	(??_trig+1)& (0+255),b
  3259  002E4A  0EB7               	movlw	183
  3260  002E4C  6F80               	movwf	??_trig& (0+255),b
  3261  002E4E  0E4C               	movlw	76
  3262  002E50                     u8957:
  3263  002E50  2EE8               	decfsz	wreg,f,c
  3264  002E52  D7FE               	bra	u8957
  3265  002E54  2F80               	decfsz	??_trig& (0+255),f,b
  3266  002E56  D7FC               	bra	u8957
  3267  002E58  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  3268  002E5A  D7FA               	bra	u8957
  3269  002E5C  F000               	nop	
  3270  002E5E                     l7196:
  3271                           
  3272                           ;main.c: 212:         if(b==3){
  3273  002E5E  0E03               	movlw	3
  3274  002E60  185A               	xorwf	_b,w,c
  3275  002E62  105B               	iorwf	_b+1,w,c
  3276  002E64  A4D8               	btfss	status,2,c
  3277  002E66  D015               	goto	l7206
  3278                           
  3279                           ;main.c: 213:             RBIE = 0;
  3280  002E68  96F2               	bcf	4082,3,c	;volatile
  3281                           
  3282                           ;main.c: 214:             RB3 = 1;
  3283  002E6A  8681               	bsf	3969,3,c	;volatile
  3284                           
  3285                           ;main.c: 215:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  3286  002E6C  0E08               	movlw	8
  3287  002E6E                     u8967:
  3288  002E6E  2EE8               	decfsz	wreg,f,c
  3289  002E70  D7FE               	bra	u8967
  3290  002E72  F000               	nop	
  3291                           
  3292                           ;main.c: 216:             RB3 = 0;
  3293  002E74  9681               	bcf	3969,3,c	;volatile
  3294                           
  3295                           ;main.c: 218:             RBIE = 1;
  3296  002E76  86F2               	bsf	4082,3,c	;volatile
  3297                           
  3298                           ;main.c: 219:             _delay((unsigned long)((135)*(10000000/4000.0)));
  3299  002E78  0E02               	movlw	2
  3300  002E7A  0100               	movlb	0	; () banked
  3301  002E7C  6F81               	movwf	(??_trig+1)& (0+255),b
  3302  002E7E  0EB7               	movlw	183
  3303  002E80  6F80               	movwf	??_trig& (0+255),b
  3304  002E82  0E4C               	movlw	76
  3305  002E84                     u8977:
  3306  002E84  2EE8               	decfsz	wreg,f,c
  3307  002E86  D7FE               	bra	u8977
  3308  002E88  2F80               	decfsz	??_trig& (0+255),f,b
  3309  002E8A  D7FC               	bra	u8977
  3310  002E8C  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  3311  002E8E  D7FA               	bra	u8977
  3312  002E90  F000               	nop	
  3313  002E92                     l7206:
  3314                           
  3315                           ;main.c: 221:         if(b==4){
  3316  002E92  0E04               	movlw	4
  3317  002E94  185A               	xorwf	_b,w,c
  3318  002E96  105B               	iorwf	_b+1,w,c
  3319  002E98  A4D8               	btfss	status,2,c
  3320  002E9A  D015               	goto	l7216
  3321                           
  3322                           ;main.c: 222:             RBIE = 0;
  3323  002E9C  96F2               	bcf	4082,3,c	;volatile
  3324                           
  3325                           ;main.c: 223:             RB2 = 1;
  3326  002E9E  8481               	bsf	3969,2,c	;volatile
  3327                           
  3328                           ;main.c: 224:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  3329  002EA0  0E08               	movlw	8
  3330  002EA2                     u8987:
  3331  002EA2  2EE8               	decfsz	wreg,f,c
  3332  002EA4  D7FE               	bra	u8987
  3333  002EA6  F000               	nop	
  3334                           
  3335                           ;main.c: 225:             RB2 = 0;
  3336  002EA8  9481               	bcf	3969,2,c	;volatile
  3337                           
  3338                           ;main.c: 227:             RBIE = 1;
  3339  002EAA  86F2               	bsf	4082,3,c	;volatile
  3340                           
  3341                           ;main.c: 228:             _delay((unsigned long)((135)*(10000000/4000.0)));
  3342  002EAC  0E02               	movlw	2
  3343  002EAE  0100               	movlb	0	; () banked
  3344  002EB0  6F81               	movwf	(??_trig+1)& (0+255),b
  3345  002EB2  0EB7               	movlw	183
  3346  002EB4  6F80               	movwf	??_trig& (0+255),b
  3347  002EB6  0E4C               	movlw	76
  3348  002EB8                     u8997:
  3349  002EB8  2EE8               	decfsz	wreg,f,c
  3350  002EBA  D7FE               	bra	u8997
  3351  002EBC  2F80               	decfsz	??_trig& (0+255),f,b
  3352  002EBE  D7FC               	bra	u8997
  3353  002EC0  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  3354  002EC2  D7FA               	bra	u8997
  3355  002EC4  F000               	nop	
  3356  002EC6                     l7216:
  3357                           
  3358                           ;main.c: 230:     }
  3359  002EC6  4A5A               	infsnz	_b,f,c
  3360  002EC8  2A5B               	incf	_b+1,f,c
  3361  002ECA  BE5B               	btfsc	_b+1,7,c
  3362  002ECC  D791               	goto	l7174
  3363  002ECE  505B               	movf	_b+1,w,c
  3364  002ED0  E105               	bnz	u7660
  3365  002ED2                     L1:
  3366  002ED2  0E05               	movlw	5
  3367  002ED4  5C5A               	subwf	_b,w,c
  3368  002ED6  B0D8               	btfsc	status,0,c
  3369  002ED8  0012               	return	
  3370  002EDA  D78A               	goto	l7174
  3371  002EDC                     u7660:
  3372  002EDC  0012               	return		;funcret
  3373  002EDE                     __end_of_trig:
  3374                           	opt callstack 0
  3375                           
  3376 ;; *************** function _print_echo *****************
  3377 ;; Defined at:
  3378 ;;		line 233 in file "main.c"
  3379 ;; Parameters:    Size  Location     Type
  3380 ;;		None
  3381 ;; Auto vars:     Size  Location     Type
  3382 ;;		None
  3383 ;; Return value:  Size  Location     Type
  3384 ;;                  1    wreg      void 
  3385 ;; Registers used:
  3386 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3387 ;; Tracked objects:
  3388 ;;		On entry : 0/0
  3389 ;;		On exit  : 0/0
  3390 ;;		Unchanged: 0/0
  3391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3394 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3395 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3396 ;;Total ram usage:        1 bytes
  3397 ;; Hardware stack levels used:    1
  3398 ;; Hardware stack levels required when called:   14
  3399 ;; This function calls:
  3400 ;;		_lcdInst
  3401 ;;		_printf
  3402 ;; This function is called by:
  3403 ;;		_ultrasonic_main
  3404 ;; This function uses a non-reentrant model
  3405 ;;
  3406                           
  3407                           	psect	text3
  3408  0024B4                     __ptext3:
  3409                           	opt callstack 0
  3410  0024B4                     _print_echo:
  3411                           	opt callstack 15
  3412                           
  3413                           ;main.c: 234:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  3414                           
  3415                           ;incstack = 0
  3416  0024B4  0E01               	movlw	1
  3417  0024B6  EC86  F01D         	call	_lcdInst
  3418  0024BA  0E11               	movlw	17
  3419  0024BC  0100               	movlb	0	; () banked
  3420  0024BE  6FF9               	movwf	??_print_echo& (0+255),b
  3421  0024C0  0E3A               	movlw	58
  3422  0024C2                     u9007:
  3423  0024C2  2EE8               	decfsz	wreg,f,c
  3424  0024C4  D7FE               	bra	u9007
  3425  0024C6  2FF9               	decfsz	??_print_echo& (0+255),f,b
  3426  0024C8  D7FC               	bra	u9007
  3427  0024CA  F000               	nop	
  3428                           
  3429                           ;main.c: 235:     if(a[0]>=2 && a[0]<=400){
  3430  0024CC  BE62               	btfsc	_a+1,7,c
  3431  0024CE  D01D               	goto	l7228
  3432  0024D0  5062               	movf	_a+1,w,c
  3433  0024D2  E104               	bnz	u7670
  3434  0024D4  0E02               	movlw	2
  3435  0024D6  5C61               	subwf	_a,w,c
  3436  0024D8  A0D8               	btfss	status,0,c
  3437  0024DA  D017               	goto	l7228
  3438  0024DC                     u7670:
  3439  0024DC  BE62               	btfsc	_a+1,7,c
  3440  0024DE  D006               	goto	u7680
  3441  0024E0  0E91               	movlw	145
  3442  0024E2  5C61               	subwf	_a,w,c
  3443  0024E4  0E01               	movlw	1
  3444  0024E6  5862               	subwfb	_a+1,w,c
  3445  0024E8  B0D8               	btfsc	status,0,c
  3446  0024EA  D00F               	goto	l7228
  3447  0024EC                     u7680:
  3448                           
  3449                           ;main.c: 236:         printf("Dist1=%d,Avg=%d ",a[0],dist_final[0][5]);
  3450  0024EC  0E06               	movlw	low STR_10
  3451  0024EE  0100               	movlb	0	; () banked
  3452  0024F0  6FED               	movwf	printf@fmt& (0+255),b
  3453  0024F2  0EFE               	movlw	high STR_10
  3454  0024F4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3455  0024F6  C061  F0EF         	movff	_a,?_printf+2
  3456  0024FA  C062  F0F0         	movff	_a+1,?_printf+3
  3457  0024FE  C25A  F0F1         	movff	_dist_final+10,?_printf+4
  3458  002502  C25B  F0F2         	movff	_dist_final+11,?_printf+5
  3459  002506  EC0D  F01D         	call	_printf	;wreg free
  3460  00250A                     l7228:
  3461                           
  3462                           ;main.c: 238:     if(!(a[0]>=2 && a[0]<=400)){
  3463  00250A  BE62               	btfsc	_a+1,7,c
  3464  00250C  D00E               	goto	u7700
  3465  00250E  5062               	movf	_a+1,w,c
  3466  002510  E104               	bnz	u7690
  3467  002512  0E02               	movlw	2
  3468  002514  5C61               	subwf	_a,w,c
  3469  002516  A0D8               	btfss	status,0,c
  3470  002518  D008               	goto	u7700
  3471  00251A                     u7690:
  3472  00251A  BE62               	btfsc	_a+1,7,c
  3473  00251C  D00D               	goto	l7234
  3474  00251E  0E91               	movlw	145
  3475  002520  5C61               	subwf	_a,w,c
  3476  002522  0E01               	movlw	1
  3477  002524  5862               	subwfb	_a+1,w,c
  3478  002526  A0D8               	btfss	status,0,c
  3479  002528  D007               	goto	l7234
  3480  00252A                     u7700:
  3481                           
  3482                           ;main.c: 239:         printf("Dist1 = X");
  3483  00252A  0E7E               	movlw	low STR_11
  3484  00252C  0100               	movlb	0	; () banked
  3485  00252E  6FED               	movwf	printf@fmt& (0+255),b
  3486  002530  0EFF               	movlw	high STR_11
  3487  002532  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3488  002534  EC0D  F01D         	call	_printf	;wreg free
  3489  002538                     l7234:
  3490                           
  3491                           ;main.c: 241:     if(a[1]>=2 && a[1]<=400){
  3492  002538  BE64               	btfsc	_a+3,7,c
  3493  00253A  D020               	goto	l7242
  3494  00253C  5064               	movf	_a+3,w,c
  3495  00253E  E104               	bnz	u7710
  3496  002540  0E02               	movlw	2
  3497  002542  5C63               	subwf	_a+2,w,c
  3498  002544  A0D8               	btfss	status,0,c
  3499  002546  D01A               	goto	l7242
  3500  002548                     u7710:
  3501  002548  BE64               	btfsc	_a+3,7,c
  3502  00254A  D006               	goto	u7720
  3503  00254C  0E91               	movlw	145
  3504  00254E  5C63               	subwf	_a+2,w,c
  3505  002550  0E01               	movlw	1
  3506  002552  5864               	subwfb	_a+3,w,c
  3507  002554  B0D8               	btfsc	status,0,c
  3508  002556  D012               	goto	l7242
  3509  002558                     u7720:
  3510  002558  0EC0               	movlw	192
  3511  00255A  EC86  F01D         	call	_lcdInst
  3512                           
  3513                           ;main.c: 243:         printf("Dist2=%d,Avg=%d",a[1],dist_final[1][5]);
  3514  00255E  0E5A               	movlw	low STR_12
  3515  002560  0100               	movlb	0	; () banked
  3516  002562  6FED               	movwf	printf@fmt& (0+255),b
  3517  002564  0EFE               	movlw	high STR_12
  3518  002566  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3519  002568  C063  F0EF         	movff	_a+2,?_printf+2
  3520  00256C  C064  F0F0         	movff	_a+3,?_printf+3
  3521  002570  C266  F0F1         	movff	_dist_final+22,?_printf+4
  3522  002574  C267  F0F2         	movff	_dist_final+23,?_printf+5
  3523  002578  EC0D  F01D         	call	_printf	;wreg free
  3524  00257C                     l7242:
  3525                           
  3526                           ;main.c: 245:     if(!(a[1]>=2 && a[1]<=400)){
  3527  00257C  BE64               	btfsc	_a+3,7,c
  3528  00257E  D00E               	goto	u7740
  3529  002580  5064               	movf	_a+3,w,c
  3530  002582  E104               	bnz	u7730
  3531  002584  0E02               	movlw	2
  3532  002586  5C63               	subwf	_a+2,w,c
  3533  002588  A0D8               	btfss	status,0,c
  3534  00258A  D008               	goto	u7740
  3535  00258C                     u7730:
  3536  00258C  BE64               	btfsc	_a+3,7,c
  3537  00258E  D010               	goto	l7250
  3538  002590  0E91               	movlw	145
  3539  002592  5C63               	subwf	_a+2,w,c
  3540  002594  0E01               	movlw	1
  3541  002596  5864               	subwfb	_a+3,w,c
  3542  002598  A0D8               	btfss	status,0,c
  3543  00259A  D00A               	goto	l7250
  3544  00259C                     u7740:
  3545  00259C  0EC0               	movlw	192
  3546  00259E  EC86  F01D         	call	_lcdInst
  3547                           
  3548                           ;main.c: 247:         printf("Dist2 = X");
  3549  0025A2  0E88               	movlw	low STR_13
  3550  0025A4  0100               	movlb	0	; () banked
  3551  0025A6  6FED               	movwf	printf@fmt& (0+255),b
  3552  0025A8  0EFF               	movlw	high STR_13
  3553  0025AA  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3554  0025AC  EC0D  F01D         	call	_printf	;wreg free
  3555  0025B0                     l7250:
  3556                           
  3557                           ;main.c: 249:     if(a[2]>=2 && a[2]<=400){
  3558  0025B0  BE66               	btfsc	_a+5,7,c
  3559  0025B2  D020               	goto	l7258
  3560  0025B4  5066               	movf	_a+5,w,c
  3561  0025B6  E104               	bnz	u7750
  3562  0025B8  0E02               	movlw	2
  3563  0025BA  5C65               	subwf	_a+4,w,c
  3564  0025BC  A0D8               	btfss	status,0,c
  3565  0025BE  D01A               	goto	l7258
  3566  0025C0                     u7750:
  3567  0025C0  BE66               	btfsc	_a+5,7,c
  3568  0025C2  D006               	goto	u7760
  3569  0025C4  0E91               	movlw	145
  3570  0025C6  5C65               	subwf	_a+4,w,c
  3571  0025C8  0E01               	movlw	1
  3572  0025CA  5866               	subwfb	_a+5,w,c
  3573  0025CC  B0D8               	btfsc	status,0,c
  3574  0025CE  D012               	goto	l7258
  3575  0025D0                     u7760:
  3576  0025D0  0E90               	movlw	144
  3577  0025D2  EC86  F01D         	call	_lcdInst
  3578                           
  3579                           ;main.c: 251:         printf("Dist3=%d,Avg=%d",a[2],dist_final[2][5]);
  3580  0025D6  0E6A               	movlw	low STR_14
  3581  0025D8  0100               	movlb	0	; () banked
  3582  0025DA  6FED               	movwf	printf@fmt& (0+255),b
  3583  0025DC  0EFE               	movlw	high STR_14
  3584  0025DE  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3585  0025E0  C065  F0EF         	movff	_a+4,?_printf+2
  3586  0025E4  C066  F0F0         	movff	_a+5,?_printf+3
  3587  0025E8  C272  F0F1         	movff	_dist_final+34,?_printf+4
  3588  0025EC  C273  F0F2         	movff	_dist_final+35,?_printf+5
  3589  0025F0  EC0D  F01D         	call	_printf	;wreg free
  3590  0025F4                     l7258:
  3591                           
  3592                           ;main.c: 253:     if(!(a[2]>=2 && a[2]<=400)){
  3593  0025F4  BE66               	btfsc	_a+5,7,c
  3594  0025F6  D00E               	goto	u7780
  3595  0025F8  5066               	movf	_a+5,w,c
  3596  0025FA  E104               	bnz	u7770
  3597  0025FC  0E02               	movlw	2
  3598  0025FE  5C65               	subwf	_a+4,w,c
  3599  002600  A0D8               	btfss	status,0,c
  3600  002602  D008               	goto	u7780
  3601  002604                     u7770:
  3602  002604  BE66               	btfsc	_a+5,7,c
  3603  002606  D010               	goto	l7266
  3604  002608  0E91               	movlw	145
  3605  00260A  5C65               	subwf	_a+4,w,c
  3606  00260C  0E01               	movlw	1
  3607  00260E  5866               	subwfb	_a+5,w,c
  3608  002610  A0D8               	btfss	status,0,c
  3609  002612  D00A               	goto	l7266
  3610  002614                     u7780:
  3611  002614  0E90               	movlw	144
  3612  002616  EC86  F01D         	call	_lcdInst
  3613                           
  3614                           ;main.c: 255:         printf("Dist3 = X");
  3615  00261A  0E92               	movlw	low STR_15
  3616  00261C  0100               	movlb	0	; () banked
  3617  00261E  6FED               	movwf	printf@fmt& (0+255),b
  3618  002620  0EFF               	movlw	high STR_15
  3619  002622  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3620  002624  EC0D  F01D         	call	_printf	;wreg free
  3621  002628                     l7266:
  3622                           
  3623                           ;main.c: 257:     if(a[3]>=2 && a[3]<=400){
  3624  002628  BE68               	btfsc	_a+7,7,c
  3625  00262A  D020               	goto	l7274
  3626  00262C  5068               	movf	_a+7,w,c
  3627  00262E  E104               	bnz	u7790
  3628  002630  0E02               	movlw	2
  3629  002632  5C67               	subwf	_a+6,w,c
  3630  002634  A0D8               	btfss	status,0,c
  3631  002636  D01A               	goto	l7274
  3632  002638                     u7790:
  3633  002638  BE68               	btfsc	_a+7,7,c
  3634  00263A  D006               	goto	u7800
  3635  00263C  0E91               	movlw	145
  3636  00263E  5C67               	subwf	_a+6,w,c
  3637  002640  0E01               	movlw	1
  3638  002642  5868               	subwfb	_a+7,w,c
  3639  002644  B0D8               	btfsc	status,0,c
  3640  002646  D012               	goto	l7274
  3641  002648                     u7800:
  3642  002648  0ED0               	movlw	208
  3643  00264A  EC86  F01D         	call	_lcdInst
  3644                           
  3645                           ;main.c: 259:         printf("Dist4=%d,Avg=%d ",a[3],dist_final[3][5]);
  3646  00264E  0E17               	movlw	low STR_16
  3647  002650  0100               	movlb	0	; () banked
  3648  002652  6FED               	movwf	printf@fmt& (0+255),b
  3649  002654  0EFE               	movlw	high STR_16
  3650  002656  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3651  002658  C067  F0EF         	movff	_a+6,?_printf+2
  3652  00265C  C068  F0F0         	movff	_a+7,?_printf+3
  3653  002660  C27E  F0F1         	movff	_dist_final+46,?_printf+4
  3654  002664  C27F  F0F2         	movff	_dist_final+47,?_printf+5
  3655  002668  EC0D  F01D         	call	_printf	;wreg free
  3656  00266C                     l7274:
  3657                           
  3658                           ;main.c: 262:     if(!(a[3]>=2 && a[3]<=400)){
  3659  00266C  BE68               	btfsc	_a+7,7,c
  3660  00266E  D00E               	goto	u7820
  3661  002670  5068               	movf	_a+7,w,c
  3662  002672  E104               	bnz	u7810
  3663  002674  0E02               	movlw	2
  3664  002676  5C67               	subwf	_a+6,w,c
  3665  002678  A0D8               	btfss	status,0,c
  3666  00267A  D008               	goto	u7820
  3667  00267C                     u7810:
  3668  00267C  BE68               	btfsc	_a+7,7,c
  3669  00267E  0012               	return	
  3670  002680  0E91               	movlw	145
  3671  002682  5C67               	subwf	_a+6,w,c
  3672  002684  0E01               	movlw	1
  3673  002686  5868               	subwfb	_a+7,w,c
  3674  002688  A0D8               	btfss	status,0,c
  3675  00268A  0012               	return	
  3676  00268C                     u7820:
  3677  00268C  0ED0               	movlw	208
  3678  00268E  EC86  F01D         	call	_lcdInst
  3679                           
  3680                           ;main.c: 264:         printf("Dist4 = X");
  3681  002692  0E9C               	movlw	low STR_17
  3682  002694  0100               	movlb	0	; () banked
  3683  002696  6FED               	movwf	printf@fmt& (0+255),b
  3684  002698  0EFF               	movlw	high STR_17
  3685  00269A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3686  00269C  EC0D  F01D         	call	_printf	;wreg free
  3687  0026A0  0012               	return		;funcret
  3688  0026A2                     __end_of_print_echo:
  3689                           	opt callstack 0
  3690                           
  3691 ;; *************** function _min *****************
  3692 ;; Defined at:
  3693 ;;		line 267 in file "main.c"
  3694 ;; Parameters:    Size  Location     Type
  3695 ;;  array           2    0[BANK0 ] PTR int 
  3696 ;;		 -> a(8), 
  3697 ;;  size            2    2[BANK0 ] int 
  3698 ;; Auto vars:     Size  Location     Type
  3699 ;;  i               2    9[BANK0 ] int 
  3700 ;;  minimum         2    7[BANK0 ] int 
  3701 ;; Return value:  Size  Location     Type
  3702 ;;                  2    0[BANK0 ] int 
  3703 ;; Registers used:
  3704 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3705 ;; Tracked objects:
  3706 ;;		On entry : 0/0
  3707 ;;		On exit  : 0/0
  3708 ;;		Unchanged: 0/0
  3709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3710 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3711 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3712 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3713 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3714 ;;Total ram usage:       11 bytes
  3715 ;; Hardware stack levels used:    1
  3716 ;; Hardware stack levels required when called:    3
  3717 ;; This function calls:
  3718 ;;		Nothing
  3719 ;; This function is called by:
  3720 ;;		_ultrasonic_main
  3721 ;; This function uses a non-reentrant model
  3722 ;;
  3723                           
  3724                           	psect	text4
  3725  002CCC                     __ptext4:
  3726                           	opt callstack 0
  3727  002CCC                     _min:
  3728                           	opt callstack 26
  3729                           
  3730                           ;main.c: 268:     int minimum =0 ;
  3731                           
  3732                           ;incstack = 0
  3733  002CCC  0E00               	movlw	0
  3734  002CCE  0100               	movlb	0	; () banked
  3735  002CD0  6F88               	movwf	(min@minimum+1)& (0+255),b
  3736  002CD2  0E00               	movlw	0
  3737  002CD4  6F87               	movwf	min@minimum& (0+255),b
  3738                           
  3739                           ; BSR set to: 0
  3740                           ;main.c: 269:     if (array[0]<=23){
  3741  002CD6  C080  FFD9         	movff	min@array,fsr2l
  3742  002CDA  C081  FFDA         	movff	min@array+1,fsr2h
  3743  002CDE  0E01               	movlw	1
  3744  002CE0  BEDB               	btfsc	plusw2,7,c
  3745  002CE2  D007               	goto	u7830
  3746  002CE4  0E01               	movlw	1
  3747  002CE6  50DB               	movf	plusw2,w,c
  3748  002CE8  E10C               	bnz	l7288
  3749  002CEA  0E18               	movlw	24
  3750  002CEC  5CDE               	subwf	postinc2,w,c
  3751  002CEE  B0D8               	btfsc	status,0,c
  3752  002CF0  D008               	goto	l7288
  3753  002CF2                     u7830:
  3754                           
  3755                           ; BSR set to: 0
  3756                           ;main.c: 270:          minimum = array[0];}
  3757  002CF2  C080  FFD9         	movff	min@array,fsr2l
  3758  002CF6  C081  FFDA         	movff	min@array+1,fsr2h
  3759  002CFA  CFDE F087          	movff	postinc2,min@minimum
  3760  002CFE  CFDD F088          	movff	postdec2,min@minimum+1
  3761  002D02                     l7288:
  3762                           
  3763                           ; BSR set to: 0
  3764                           ;main.c: 274:     for (int i = 0; i<size; i++){
  3765  002D02  0E00               	movlw	0
  3766  002D04  6F8A               	movwf	(min@i+1)& (0+255),b
  3767  002D06  0E00               	movlw	0
  3768  002D08  6F89               	movwf	min@i& (0+255),b
  3769  002D0A  D059               	goto	l7304
  3770  002D0C                     l7290:
  3771                           
  3772                           ; BSR set to: 0
  3773                           ;main.c: 278:         if ((minimum==0)||(minimum>=array[i])&&(array[i]!=0)&&(array[i]>=1
      +                          4)&&(array[i]<=23)){
  3774  002D0C  5187               	movf	min@minimum& (0+255),w,b
  3775  002D0E  1188               	iorwf	(min@minimum+1)& (0+255),w,b
  3776  002D10  B4D8               	btfsc	status,2,c
  3777  002D12  D046               	goto	u7880
  3778                           
  3779                           ; BSR set to: 0
  3780  002D14  90D8               	bcf	status,0,c
  3781  002D16  3589               	rlcf	min@i& (0+255),w,b
  3782  002D18  6ED9               	movwf	fsr2l,c
  3783  002D1A  358A               	rlcf	(min@i+1)& (0+255),w,b
  3784  002D1C  6EDA               	movwf	fsr2h,c
  3785  002D1E  5180               	movf	min@array& (0+255),w,b
  3786  002D20  26D9               	addwf	fsr2l,f,c
  3787  002D22  5181               	movf	(min@array+1)& (0+255),w,b
  3788  002D24  22DA               	addwfc	fsr2h,f,c
  3789  002D26  50DE               	movf	postinc2,w,c
  3790  002D28  5D87               	subwf	min@minimum& (0+255),w,b
  3791  002D2A  5188               	movf	(min@minimum+1)& (0+255),w,b
  3792  002D2C  0A80               	xorlw	128
  3793  002D2E  6F86               	movwf	(??_min+2)& (0+255),b
  3794  002D30  50DE               	movf	postinc2,w,c
  3795  002D32  0A80               	xorlw	128
  3796  002D34  5986               	subwfb	(??_min+2)& (0+255),w,b
  3797  002D36  A0D8               	btfss	status,0,c
  3798  002D38  D040               	goto	l7302
  3799                           
  3800                           ; BSR set to: 0
  3801  002D3A  90D8               	bcf	status,0,c
  3802  002D3C  3589               	rlcf	min@i& (0+255),w,b
  3803  002D3E  6ED9               	movwf	fsr2l,c
  3804  002D40  358A               	rlcf	(min@i+1)& (0+255),w,b
  3805  002D42  6EDA               	movwf	fsr2h,c
  3806  002D44  5180               	movf	min@array& (0+255),w,b
  3807  002D46  26D9               	addwf	fsr2l,f,c
  3808  002D48  5181               	movf	(min@array+1)& (0+255),w,b
  3809  002D4A  22DA               	addwfc	fsr2h,f,c
  3810  002D4C  50DE               	movf	postinc2,w,c
  3811  002D4E  10DE               	iorwf	postinc2,w,c
  3812  002D50  B4D8               	btfsc	status,2,c
  3813  002D52  D033               	goto	l7302
  3814                           
  3815                           ; BSR set to: 0
  3816  002D54  90D8               	bcf	status,0,c
  3817  002D56  3589               	rlcf	min@i& (0+255),w,b
  3818  002D58  6ED9               	movwf	fsr2l,c
  3819  002D5A  358A               	rlcf	(min@i+1)& (0+255),w,b
  3820  002D5C  6EDA               	movwf	fsr2h,c
  3821  002D5E  5180               	movf	min@array& (0+255),w,b
  3822  002D60  26D9               	addwf	fsr2l,f,c
  3823  002D62  5181               	movf	(min@array+1)& (0+255),w,b
  3824  002D64  22DA               	addwfc	fsr2h,f,c
  3825  002D66  0E01               	movlw	1
  3826  002D68  BEDB               	btfsc	plusw2,7,c
  3827  002D6A  D027               	goto	l7302
  3828  002D6C  0E01               	movlw	1
  3829  002D6E  50DB               	movf	plusw2,w,c
  3830  002D70  E104               	bnz	u7870
  3831  002D72  0E0E               	movlw	14
  3832  002D74  5CDE               	subwf	postinc2,w,c
  3833  002D76  A0D8               	btfss	status,0,c
  3834  002D78  D020               	goto	l7302
  3835  002D7A                     u7870:
  3836                           
  3837                           ; BSR set to: 0
  3838  002D7A  90D8               	bcf	status,0,c
  3839  002D7C  3589               	rlcf	min@i& (0+255),w,b
  3840  002D7E  6ED9               	movwf	fsr2l,c
  3841  002D80  358A               	rlcf	(min@i+1)& (0+255),w,b
  3842  002D82  6EDA               	movwf	fsr2h,c
  3843  002D84  5180               	movf	min@array& (0+255),w,b
  3844  002D86  26D9               	addwf	fsr2l,f,c
  3845  002D88  5181               	movf	(min@array+1)& (0+255),w,b
  3846  002D8A  22DA               	addwfc	fsr2h,f,c
  3847  002D8C  0E01               	movlw	1
  3848  002D8E  BEDB               	btfsc	plusw2,7,c
  3849  002D90  D007               	goto	u7880
  3850  002D92  0E01               	movlw	1
  3851  002D94  50DB               	movf	plusw2,w,c
  3852  002D96  E111               	bnz	l7302
  3853  002D98  0E18               	movlw	24
  3854  002D9A  5CDE               	subwf	postinc2,w,c
  3855  002D9C  B0D8               	btfsc	status,0,c
  3856  002D9E  D00D               	goto	l7302
  3857  002DA0                     u7880:
  3858                           
  3859                           ; BSR set to: 0
  3860                           ;main.c: 282:             minimum = array[i];
  3861  002DA0  90D8               	bcf	status,0,c
  3862  002DA2  3589               	rlcf	min@i& (0+255),w,b
  3863  002DA4  6ED9               	movwf	fsr2l,c
  3864  002DA6  358A               	rlcf	(min@i+1)& (0+255),w,b
  3865  002DA8  6EDA               	movwf	fsr2h,c
  3866  002DAA  5180               	movf	min@array& (0+255),w,b
  3867  002DAC  26D9               	addwf	fsr2l,f,c
  3868  002DAE  5181               	movf	(min@array+1)& (0+255),w,b
  3869  002DB0  22DA               	addwfc	fsr2h,f,c
  3870  002DB2  CFDE F087          	movff	postinc2,min@minimum
  3871  002DB6  CFDD F088          	movff	postdec2,min@minimum+1
  3872  002DBA                     l7302:
  3873                           
  3874                           ; BSR set to: 0
  3875                           ;main.c: 287:     }
  3876  002DBA  4B89               	infsnz	min@i& (0+255),f,b
  3877  002DBC  2B8A               	incf	(min@i+1)& (0+255),f,b
  3878  002DBE                     l7304:
  3879                           
  3880                           ; BSR set to: 0
  3881  002DBE  5182               	movf	min@size& (0+255),w,b
  3882  002DC0  5D89               	subwf	min@i& (0+255),w,b
  3883  002DC2  518A               	movf	(min@i+1)& (0+255),w,b
  3884  002DC4  0A80               	xorlw	128
  3885  002DC6  6F84               	movwf	??_min& (0+255),b
  3886  002DC8  5183               	movf	(min@size+1)& (0+255),w,b
  3887  002DCA  0A80               	xorlw	128
  3888  002DCC  5984               	subwfb	??_min& (0+255),w,b
  3889  002DCE  A0D8               	btfss	status,0,c
  3890  002DD0  D79D               	goto	l7290
  3891                           
  3892                           ; BSR set to: 0
  3893                           ;main.c: 288:     return minimum;
  3894  002DD2  C087  F080         	movff	min@minimum,?_min
  3895  002DD6  C088  F081         	movff	min@minimum+1,?_min+1
  3896                           
  3897                           ; BSR set to: 0
  3898  002DDA  0012               	return		;funcret
  3899  002DDC                     __end_of_min:
  3900                           	opt callstack 0
  3901                           
  3902 ;; *************** function _start *****************
  3903 ;; Defined at:
  3904 ;;		line 670 in file "main.c"
  3905 ;; Parameters:    Size  Location     Type
  3906 ;;		None
  3907 ;; Auto vars:     Size  Location     Type
  3908 ;;		None
  3909 ;; Return value:  Size  Location     Type
  3910 ;;                  1    wreg      void 
  3911 ;; Registers used:
  3912 ;;		wreg, status,2, status,0, cstack
  3913 ;; Tracked objects:
  3914 ;;		On entry : 0/0
  3915 ;;		On exit  : 0/0
  3916 ;;		Unchanged: 0/0
  3917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3922 ;;Total ram usage:        0 bytes
  3923 ;; Hardware stack levels used:    1
  3924 ;; Hardware stack levels required when called:    5
  3925 ;; This function calls:
  3926 ;;		_I2C_Master_Init
  3927 ;;		_I2C_Master_Start
  3928 ;;		_I2C_Master_Stop
  3929 ;;		_I2C_Master_Write
  3930 ;; This function is called by:
  3931 ;;		_main
  3932 ;; This function uses a non-reentrant model
  3933 ;;
  3934                           
  3935                           	psect	text5
  3936  00368E                     __ptext5:
  3937                           	opt callstack 0
  3938  00368E                     _start:
  3939                           	opt callstack 25
  3940                           
  3941                           ;main.c: 671:     I2C_Master_Init(100000);
  3942                           
  3943                           ; BSR set to: 0
  3944                           ;incstack = 0
  3945  00368E  0EA0               	movlw	160
  3946  003690  0100               	movlb	0	; () banked
  3947  003692  6F8D               	movwf	I2C_Master_Init@clockFreq& (0+255),b
  3948  003694  0E86               	movlw	134
  3949  003696  6F8E               	movwf	(I2C_Master_Init@clockFreq+1)& (0+255),b
  3950  003698  0E01               	movlw	1
  3951  00369A  6F8F               	movwf	(I2C_Master_Init@clockFreq+2)& (0+255),b
  3952  00369C  0E00               	movlw	0
  3953  00369E  6F90               	movwf	(I2C_Master_Init@clockFreq+3)& (0+255),b
  3954  0036A0  EC96  F01A         	call	_I2C_Master_Init	;wreg free
  3955                           
  3956                           ;main.c: 672:     I2C_Master_Start();
  3957  0036A4  EC97  F01D         	call	_I2C_Master_Start	;wreg free
  3958                           
  3959                           ;main.c: 673:     I2C_Master_Write(0b00010000);
  3960  0036A8  0E00               	movlw	0
  3961  0036AA  0100               	movlb	0	; () banked
  3962  0036AC  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  3963  0036AE  0E10               	movlw	16
  3964  0036B0  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  3965  0036B2  EC8E  F01D         	call	_I2C_Master_Write	;wreg free
  3966                           
  3967                           ;main.c: 674:     I2C_Master_Stop();
  3968  0036B6  EC93  F01D         	call	_I2C_Master_Stop	;wreg free
  3969                           
  3970                           ;main.c: 676:     I2C_Master_Start();
  3971  0036BA  EC97  F01D         	call	_I2C_Master_Start	;wreg free
  3972                           
  3973                           ;main.c: 677:     I2C_Master_Write(0b00010000);
  3974  0036BE  0E00               	movlw	0
  3975  0036C0  0100               	movlb	0	; () banked
  3976  0036C2  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  3977  0036C4  0E10               	movlw	16
  3978  0036C6  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  3979  0036C8  EC8E  F01D         	call	_I2C_Master_Write	;wreg free
  3980                           
  3981                           ;main.c: 678:     I2C_Master_Write('2');
  3982  0036CC  0E00               	movlw	0
  3983  0036CE  0100               	movlb	0	; () banked
  3984  0036D0  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  3985  0036D2  0E32               	movlw	50
  3986  0036D4  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  3987  0036D6  EC8E  F01D         	call	_I2C_Master_Write	;wreg free
  3988                           
  3989                           ;main.c: 679:     I2C_Master_Stop();
  3990  0036DA  EC93  F01D         	call	_I2C_Master_Stop	;wreg free
  3991  0036DE  0012               	return		;funcret
  3992  0036E0                     __end_of_start:
  3993                           	opt callstack 0
  3994                           
  3995 ;; *************** function _number_deploy *****************
  3996 ;; Defined at:
  3997 ;;		line 413 in file "main.c"
  3998 ;; Parameters:    Size  Location     Type
  3999 ;;  avg_dist        2  121[BANK0 ] int 
  4000 ;;  poles_detect    2  123[BANK0 ] int 
  4001 ;; Auto vars:     Size  Location     Type
  4002 ;;  t_count         2    4[BANK1 ] int 
  4003 ;;  tires_detect    2    2[BANK1 ] int 
  4004 ;;  tires_t         2    0[BANK1 ] int 
  4005 ;; Return value:  Size  Location     Type
  4006 ;;                  2  121[BANK0 ] int 
  4007 ;; Registers used:
  4008 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4009 ;; Tracked objects:
  4010 ;;		On entry : 0/0
  4011 ;;		On exit  : 0/0
  4012 ;;		Unchanged: 0/0
  4013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4014 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4015 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4016 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4017 ;;      Totals:         0       6       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4018 ;;Total ram usage:       12 bytes
  4019 ;; Hardware stack levels used:    1
  4020 ;; Hardware stack levels required when called:   14
  4021 ;; This function calls:
  4022 ;;		___awdiv
  4023 ;;		_lcdInst
  4024 ;;		_printf
  4025 ;; This function is called by:
  4026 ;;		_main
  4027 ;; This function uses a non-reentrant model
  4028 ;;
  4029                           
  4030                           	psect	text6
  4031  002292                     __ptext6:
  4032                           	opt callstack 0
  4033  002292                     _number_deploy:
  4034                           	opt callstack 16
  4035                           
  4036                           ;main.c: 414:     int tires_t=0;
  4037                           
  4038                           ;incstack = 0
  4039  002292  0E00               	movlw	0
  4040  002294  0101               	movlb	1	; () banked
  4041  002296  6F01               	movwf	(number_deploy@tires_t+1)& (0+255),b
  4042  002298  0E00               	movlw	0
  4043  00229A  6F00               	movwf	number_deploy@tires_t& (0+255),b
  4044                           
  4045                           ;main.c: 415:     int tires_detected=0;
  4046  00229C  0E00               	movlw	0
  4047  00229E  6F03               	movwf	(number_deploy@tires_detected+1)& (0+255),b
  4048  0022A0  0E00               	movlw	0
  4049  0022A2  6F02               	movwf	number_deploy@tires_detected& (0+255),b
  4050                           
  4051                           ;main.c: 416:     int t_count = 0;
  4052  0022A4  0E00               	movlw	0
  4053  0022A6  6F05               	movwf	(number_deploy@t_count+1)& (0+255),b
  4054  0022A8  0E00               	movlw	0
  4055  0022AA  6F04               	movwf	number_deploy@t_count& (0+255),b
  4056                           
  4057                           ;main.c: 419:     while (t_count<3){
  4058  0022AC  D0F6               	goto	l7612
  4059  0022AE                     l7556:
  4060                           
  4061                           ; BSR set to: 1
  4062                           ;main.c: 420:   if (poles_detected != 0){
  4063  0022AE  0100               	movlb	0	; () banked
  4064  0022B0  51FB               	movf	number_deploy@poles_detected& (0+255),w,b
  4065  0022B2  11FC               	iorwf	(number_deploy@poles_detected+1)& (0+255),w,b
  4066  0022B4  B4D8               	btfsc	status,2,c
  4067  0022B6  D031               	goto	l7566
  4068                           
  4069                           ; BSR set to: 0
  4070                           ;main.c: 421:    if ((avg_dist/1000)<30){
  4071  0022B8  C0F9  F080         	movff	number_deploy@avg_dist,___awdiv@dividend
  4072  0022BC  C0FA  F081         	movff	number_deploy@avg_dist+1,___awdiv@dividend+1
  4073  0022C0  0E03               	movlw	3
  4074  0022C2  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  4075  0022C4  0EE8               	movlw	232
  4076  0022C6  6F82               	movwf	___awdiv@divisor& (0+255),b
  4077  0022C8  EC2C  F019         	call	___awdiv	;wreg free
  4078  0022CC  0100               	movlb	0	; () banked
  4079  0022CE  BF81               	btfsc	(?___awdiv+1)& (0+255),7,b
  4080  0022D0  D006               	goto	u8090
  4081  0022D2  5181               	movf	(?___awdiv+1)& (0+255),w,b
  4082  0022D4  E109               	bnz	l7562
  4083  0022D6  0E1E               	movlw	30
  4084  0022D8  5D80               	subwf	?___awdiv& (0+255),w,b
  4085  0022DA  B0D8               	btfsc	status,0,c
  4086  0022DC  D005               	goto	l7562
  4087  0022DE                     u8090:
  4088                           
  4089                           ; BSR set to: 0
  4090                           ;main.c: 423:     tires_t = 1;
  4091  0022DE  0E00               	movlw	0
  4092  0022E0  0101               	movlb	1	; () banked
  4093  0022E2  6F01               	movwf	(number_deploy@tires_t+1)& (0+255),b
  4094  0022E4  0E01               	movlw	1
  4095  0022E6  6F00               	movwf	number_deploy@tires_t& (0+255),b
  4096  0022E8                     l7562:
  4097                           
  4098                           ;main.c: 425:    if ((avg_dist/1000)>30){
  4099  0022E8  C0F9  F080         	movff	number_deploy@avg_dist,___awdiv@dividend
  4100  0022EC  C0FA  F081         	movff	number_deploy@avg_dist+1,___awdiv@dividend+1
  4101  0022F0  0E03               	movlw	3
  4102  0022F2  0100               	movlb	0	; () banked
  4103  0022F4  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  4104  0022F6  0EE8               	movlw	232
  4105  0022F8  6F82               	movwf	___awdiv@divisor& (0+255),b
  4106  0022FA  EC2C  F019         	call	___awdiv	;wreg free
  4107  0022FE  0100               	movlb	0	; () banked
  4108  002300  BF81               	btfsc	(?___awdiv+1)& (0+255),7,b
  4109  002302  D00B               	goto	l7566
  4110  002304  5181               	movf	(?___awdiv+1)& (0+255),w,b
  4111  002306  E104               	bnz	u8100
  4112  002308  0E1F               	movlw	31
  4113  00230A  5D80               	subwf	?___awdiv& (0+255),w,b
  4114  00230C  A0D8               	btfss	status,0,c
  4115  00230E  D005               	goto	l7566
  4116  002310                     u8100:
  4117                           
  4118                           ; BSR set to: 0
  4119                           ;main.c: 426:     tires_t = 2;
  4120  002310  0E00               	movlw	0
  4121  002312  0101               	movlb	1	; () banked
  4122  002314  6F01               	movwf	(number_deploy@tires_t+1)& (0+255),b
  4123  002316  0E02               	movlw	2
  4124  002318  6F00               	movwf	number_deploy@tires_t& (0+255),b
  4125  00231A                     l7566:
  4126                           
  4127                           ;main.c: 430:   if (poles_detected == 0){
  4128  00231A  0100               	movlb	0	; () banked
  4129  00231C  51FB               	movf	number_deploy@poles_detected& (0+255),w,b
  4130  00231E  11FC               	iorwf	(number_deploy@poles_detected+1)& (0+255),w,b
  4131  002320  A4D8               	btfss	status,2,c
  4132  002322  D005               	goto	l7570
  4133                           
  4134                           ; BSR set to: 0
  4135                           ;main.c: 431:    tires_t = 2;
  4136  002324  0E00               	movlw	0
  4137  002326  0101               	movlb	1	; () banked
  4138  002328  6F01               	movwf	(number_deploy@tires_t+1)& (0+255),b
  4139  00232A  0E02               	movlw	2
  4140  00232C  6F00               	movwf	number_deploy@tires_t& (0+255),b
  4141  00232E                     l7570:
  4142                           
  4143                           ;main.c: 434:   if ((a[0]>=2 && a[0] <= 15)){
  4144  00232E  BE62               	btfsc	_a+1,7,c
  4145  002330  D028               	goto	l7582
  4146  002332  5062               	movf	_a+1,w,c
  4147  002334  E104               	bnz	u8120
  4148  002336  0E02               	movlw	2
  4149  002338  5C61               	subwf	_a,w,c
  4150  00233A  A0D8               	btfss	status,0,c
  4151  00233C  D022               	goto	l7582
  4152  00233E                     u8120:
  4153  00233E  BE62               	btfsc	_a+1,7,c
  4154  002340  D006               	goto	u8130
  4155  002342  5062               	movf	_a+1,w,c
  4156  002344  E11E               	bnz	l7582
  4157  002346  0E10               	movlw	16
  4158  002348  5C61               	subwf	_a,w,c
  4159  00234A  B0D8               	btfsc	status,0,c
  4160  00234C  D01A               	goto	l7582
  4161  00234E                     u8130:
  4162                           
  4163                           ;main.c: 436:             if ((a[1]>=2 && a[1] <= 15)){
  4164  00234E  BE64               	btfsc	_a+3,7,c
  4165  002350  D013               	goto	l7580
  4166  002352  5064               	movf	_a+3,w,c
  4167  002354  E104               	bnz	u8140
  4168  002356  0E02               	movlw	2
  4169  002358  5C63               	subwf	_a+2,w,c
  4170  00235A  A0D8               	btfss	status,0,c
  4171  00235C  D00D               	goto	l7580
  4172  00235E                     u8140:
  4173  00235E  BE64               	btfsc	_a+3,7,c
  4174  002360  D006               	goto	u8150
  4175  002362  5064               	movf	_a+3,w,c
  4176  002364  E109               	bnz	l7580
  4177  002366  0E10               	movlw	16
  4178  002368  5C63               	subwf	_a+2,w,c
  4179  00236A  B0D8               	btfsc	status,0,c
  4180  00236C  D005               	goto	l7580
  4181  00236E                     u8150:
  4182                           
  4183                           ;main.c: 438:                 tires_detected = 1;
  4184  00236E  0E00               	movlw	0
  4185  002370  0101               	movlb	1	; () banked
  4186  002372  6F03               	movwf	(number_deploy@tires_detected+1)& (0+255),b
  4187  002374  0E01               	movlw	1
  4188  002376  D004               	goto	L2
  4189  002378                     l7580:
  4190                           
  4191                           ;main.c: 441:                 tires_detected = 0;
  4192  002378  0E00               	movlw	0
  4193  00237A  0101               	movlb	1	; () banked
  4194  00237C  6F03               	movwf	(number_deploy@tires_detected+1)& (0+255),b
  4195  00237E  0E00               	movlw	0
  4196  002380                     L2:
  4197  002380  6F02               	movwf	number_deploy@tires_detected& (0+255),b
  4198  002382                     l7582:
  4199                           
  4200                           ;main.c: 444:         if ((tires_detected==1)){
  4201  002382  0101               	movlb	1	; () banked
  4202  002384  0502               	decf	number_deploy@tires_detected& (0+255),w,b
  4203  002386  1103               	iorwf	(number_deploy@tires_detected+1)& (0+255),w,b
  4204  002388  B4D8               	btfsc	status,2,c
  4205                           
  4206                           ; BSR set to: 1
  4207                           ;main.c: 445:             if((a[2]>=2 && a[2] <= 15)&&(a[3] >=2 && a[3]<= 15)){
  4208  00238A  BE66               	btfsc	_a+5,7,c
  4209  00238C  D020               	goto	l7594
  4210  00238E  5066               	movf	_a+5,w,c
  4211  002390  E104               	bnz	u8170
  4212  002392  0E02               	movlw	2
  4213  002394  5C65               	subwf	_a+4,w,c
  4214  002396  A0D8               	btfss	status,0,c
  4215  002398  D01A               	goto	l7594
  4216  00239A                     u8170:
  4217                           
  4218                           ; BSR set to: 1
  4219  00239A  BE66               	btfsc	_a+5,7,c
  4220  00239C  D006               	goto	u8180
  4221  00239E  5066               	movf	_a+5,w,c
  4222  0023A0  E116               	bnz	l7594
  4223  0023A2  0E10               	movlw	16
  4224  0023A4  5C65               	subwf	_a+4,w,c
  4225  0023A6  B0D8               	btfsc	status,0,c
  4226  0023A8  D012               	goto	l7594
  4227  0023AA                     u8180:
  4228                           
  4229                           ; BSR set to: 1
  4230  0023AA  BE68               	btfsc	_a+7,7,c
  4231  0023AC  D010               	goto	l7594
  4232  0023AE  5068               	movf	_a+7,w,c
  4233  0023B0  E104               	bnz	u8190
  4234  0023B2  0E02               	movlw	2
  4235  0023B4  5C67               	subwf	_a+6,w,c
  4236  0023B6  A0D8               	btfss	status,0,c
  4237  0023B8  D00A               	goto	l7594
  4238  0023BA                     u8190:
  4239                           
  4240                           ; BSR set to: 1
  4241  0023BA  BE68               	btfsc	_a+7,7,c
  4242  0023BC  D006               	goto	u8200
  4243  0023BE  5068               	movf	_a+7,w,c
  4244  0023C0  E106               	bnz	l7594
  4245  0023C2  0E10               	movlw	16
  4246  0023C4  5C67               	subwf	_a+6,w,c
  4247  0023C6  B0D8               	btfsc	status,0,c
  4248  0023C8  D002               	goto	l7594
  4249  0023CA                     u8200:
  4250                           
  4251                           ; BSR set to: 1
  4252                           ;main.c: 446:                 tires_detected++;
  4253  0023CA  4B02               	infsnz	number_deploy@tires_detected& (0+255),f,b
  4254  0023CC  2B03               	incf	(number_deploy@tires_detected+1)& (0+255),f,b
  4255  0023CE                     l7594:
  4256                           
  4257                           ; BSR set to: 1
  4258                           ;main.c: 450:         t_count = tires_t - tires_detected;
  4259  0023CE  5102               	movf	number_deploy@tires_detected& (0+255),w,b
  4260  0023D0  5D00               	subwf	number_deploy@tires_t& (0+255),w,b
  4261  0023D2  6F04               	movwf	number_deploy@t_count& (0+255),b
  4262  0023D4  5103               	movf	(number_deploy@tires_detected+1)& (0+255),w,b
  4263  0023D6  5901               	subwfb	(number_deploy@tires_t+1)& (0+255),w,b
  4264  0023D8  6F05               	movwf	(number_deploy@t_count+1)& (0+255),b
  4265                           
  4266                           ; BSR set to: 1
  4267                           ;main.c: 451:         Pole[poles_detected].tires_deployed = t_count;
  4268  0023DA  C0FB  F0FD         	movff	number_deploy@poles_detected,??_number_deploy
  4269  0023DE  C0FC  F0FE         	movff	number_deploy@poles_detected+1,??_number_deploy+1
  4270  0023E2  0100               	movlb	0	; () banked
  4271  0023E4  90D8               	bcf	status,0,c
  4272  0023E6  37FD               	rlcf	??_number_deploy& (0+255),f,b
  4273  0023E8  37FE               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4274  0023EA  90D8               	bcf	status,0,c
  4275  0023EC  37FD               	rlcf	??_number_deploy& (0+255),f,b
  4276  0023EE  37FE               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4277  0023F0  90D8               	bcf	status,0,c
  4278  0023F2  37FD               	rlcf	??_number_deploy& (0+255),f,b
  4279  0023F4  37FE               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4280  0023F6  0E00               	movlw	low _Pole
  4281  0023F8  25FD               	addwf	??_number_deploy& (0+255),w,b
  4282  0023FA  6ED9               	movwf	fsr2l,c
  4283  0023FC  0E02               	movlw	high _Pole
  4284  0023FE  21FE               	addwfc	(??_number_deploy+1)& (0+255),w,b
  4285  002400  6EDA               	movwf	fsr2h,c
  4286  002402  C104  FFDE         	movff	number_deploy@t_count,postinc2
  4287  002406  C105  FFDD         	movff	number_deploy@t_count+1,postdec2
  4288                           
  4289                           ; BSR set to: 0
  4290                           ;main.c: 452:         Pole[poles_detected].tires_final = tires_t;
  4291  00240A  C0FB  F0FD         	movff	number_deploy@poles_detected,??_number_deploy
  4292  00240E  C0FC  F0FE         	movff	number_deploy@poles_detected+1,??_number_deploy+1
  4293  002412  90D8               	bcf	status,0,c
  4294  002414  37FD               	rlcf	??_number_deploy& (0+255),f,b
  4295  002416  37FE               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4296  002418  90D8               	bcf	status,0,c
  4297  00241A  37FD               	rlcf	??_number_deploy& (0+255),f,b
  4298  00241C  37FE               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4299  00241E  90D8               	bcf	status,0,c
  4300  002420  37FD               	rlcf	??_number_deploy& (0+255),f,b
  4301  002422  37FE               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4302  002424  0E02               	movlw	low (_Pole+2)
  4303  002426  25FD               	addwf	??_number_deploy& (0+255),w,b
  4304  002428  6ED9               	movwf	fsr2l,c
  4305  00242A  0E02               	movlw	high (_Pole+2)
  4306  00242C  21FE               	addwfc	(??_number_deploy+1)& (0+255),w,b
  4307  00242E  6EDA               	movwf	fsr2h,c
  4308  002430  C100  FFDE         	movff	number_deploy@tires_t,postinc2
  4309  002434  C101  FFDD         	movff	number_deploy@tires_t+1,postdec2
  4310                           
  4311                           ; BSR set to: 0
  4312                           ;main.c: 453:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  4313  002438  0E01               	movlw	1
  4314  00243A  EC86  F01D         	call	_lcdInst
  4315  00243E  0E11               	movlw	17
  4316  002440  0100               	movlb	0	; () banked
  4317  002442  6FFD               	movwf	??_number_deploy& (0+255),b
  4318  002444  0E3A               	movlw	58
  4319  002446                     u9017:
  4320  002446  2EE8               	decfsz	wreg,f,c
  4321  002448  D7FE               	bra	u9017
  4322  00244A  2FFD               	decfsz	??_number_deploy& (0+255),f,b
  4323  00244C  D7FC               	bra	u9017
  4324  00244E  F000               	nop	
  4325                           
  4326                           ;main.c: 454:         printf("det,%d, tcnt %d",tires_detected,t_count);
  4327  002450  0E4A               	movlw	low STR_23
  4328  002452  0100               	movlb	0	; () banked
  4329  002454  6FED               	movwf	printf@fmt& (0+255),b
  4330  002456  0EFE               	movlw	high STR_23
  4331  002458  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4332  00245A  C102  F0EF         	movff	number_deploy@tires_detected,?_printf+2
  4333  00245E  C103  F0F0         	movff	number_deploy@tires_detected+1,?_printf+3
  4334  002462  C104  F0F1         	movff	number_deploy@t_count,?_printf+4
  4335  002466  C105  F0F2         	movff	number_deploy@t_count+1,?_printf+5
  4336  00246A  EC0D  F01D         	call	_printf	;wreg free
  4337                           
  4338                           ;main.c: 455:         _delay((unsigned long)((1000)*(10000000/4000.0)));
  4339  00246E  0E0D               	movlw	13
  4340  002470  0100               	movlb	0	; () banked
  4341  002472  6FFE               	movwf	(??_number_deploy+1)& (0+255),b
  4342  002474  0EAF               	movlw	175
  4343  002476  6FFD               	movwf	??_number_deploy& (0+255),b
  4344  002478  0EB6               	movlw	182
  4345  00247A                     u9027:
  4346  00247A  2EE8               	decfsz	wreg,f,c
  4347  00247C  D7FE               	bra	u9027
  4348  00247E  2FFD               	decfsz	??_number_deploy& (0+255),f,b
  4349  002480  D7FC               	bra	u9027
  4350  002482  2FFE               	decfsz	(??_number_deploy+1)& (0+255),f,b
  4351  002484  D7FA               	bra	u9027
  4352  002486  F000               	nop	
  4353                           
  4354                           ;main.c: 457:         if (t_count<=2){
  4355  002488  0101               	movlb	1	; () banked
  4356  00248A  BF05               	btfsc	(number_deploy@t_count+1)& (0+255),7,b
  4357  00248C  D00E               	goto	u8220
  4358  00248E  5105               	movf	(number_deploy@t_count+1)& (0+255),w,b
  4359  002490  E104               	bnz	l7612
  4360  002492  0E03               	movlw	3
  4361  002494  5D04               	subwf	number_deploy@t_count& (0+255),w,b
  4362  002496  A0D8               	btfss	status,0,c
  4363  002498  D008               	goto	u8220
  4364  00249A                     l7612:
  4365                           
  4366                           ; BSR set to: 1
  4367                           ;main.c: 419:     while (t_count<3){
  4368  00249A  BF05               	btfsc	(number_deploy@t_count+1)& (0+255),7,b
  4369  00249C  D708               	goto	l7556
  4370  00249E  5105               	movf	(number_deploy@t_count+1)& (0+255),w,b
  4371  0024A0  E104               	bnz	u8220
  4372  0024A2  0E03               	movlw	3
  4373  0024A4  5D04               	subwf	number_deploy@t_count& (0+255),w,b
  4374  0024A6  A0D8               	btfss	status,0,c
  4375  0024A8  D702               	goto	l7556
  4376  0024AA                     u8220:
  4377                           
  4378                           ; BSR set to: 1
  4379                           ;main.c: 465:     return (int) t_count;
  4380  0024AA  C104  F0F9         	movff	number_deploy@t_count,?_number_deploy
  4381  0024AE  C105  F0FA         	movff	number_deploy@t_count+1,?_number_deploy+1
  4382                           
  4383                           ; BSR set to: 1
  4384  0024B2  0012               	return		;funcret
  4385  0024B4                     __end_of_number_deploy:
  4386                           	opt callstack 0
  4387                           
  4388 ;; *************** function ___awdiv *****************
  4389 ;; Defined at:
  4390 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  4391 ;; Parameters:    Size  Location     Type
  4392 ;;  dividend        2    0[BANK0 ] int 
  4393 ;;  divisor         2    2[BANK0 ] int 
  4394 ;; Auto vars:     Size  Location     Type
  4395 ;;  quotient        2    6[BANK0 ] int 
  4396 ;;  sign            1    5[BANK0 ] unsigned char 
  4397 ;;  counter         1    4[BANK0 ] unsigned char 
  4398 ;; Return value:  Size  Location     Type
  4399 ;;                  2    0[BANK0 ] int 
  4400 ;; Registers used:
  4401 ;;		wreg, status,2, status,0
  4402 ;; Tracked objects:
  4403 ;;		On entry : 0/0
  4404 ;;		On exit  : 0/0
  4405 ;;		Unchanged: 0/0
  4406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4407 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4408 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4410 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4411 ;;Total ram usage:        8 bytes
  4412 ;; Hardware stack levels used:    1
  4413 ;; Hardware stack levels required when called:    3
  4414 ;; This function calls:
  4415 ;;		Nothing
  4416 ;; This function is called by:
  4417 ;;		_number_deploy
  4418 ;; This function uses a non-reentrant model
  4419 ;;
  4420                           
  4421                           	psect	text7
  4422  003258                     __ptext7:
  4423                           	opt callstack 0
  4424  003258                     ___awdiv:
  4425                           	opt callstack 26
  4426                           
  4427                           ; BSR set to: 1
  4428                           ;incstack = 0
  4429  003258  0E00               	movlw	0
  4430  00325A  0100               	movlb	0	; () banked
  4431  00325C  6F85               	movwf	___awdiv@sign& (0+255),b
  4432                           
  4433                           ; BSR set to: 0
  4434  00325E  AF83               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  4435  003260  D006               	goto	l7314
  4436                           
  4437                           ; BSR set to: 0
  4438  003262  6D82               	negf	___awdiv@divisor& (0+255),b
  4439  003264  1F83               	comf	(___awdiv@divisor+1)& (0+255),f,b
  4440  003266  B0D8               	btfsc	status,0,c
  4441  003268  2B83               	incf	(___awdiv@divisor+1)& (0+255),f,b
  4442                           
  4443                           ; BSR set to: 0
  4444  00326A  0E01               	movlw	1
  4445  00326C  6F85               	movwf	___awdiv@sign& (0+255),b
  4446  00326E                     l7314:
  4447                           
  4448                           ; BSR set to: 0
  4449  00326E  AF81               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  4450  003270  D006               	goto	l7320
  4451                           
  4452                           ; BSR set to: 0
  4453  003272  6D80               	negf	___awdiv@dividend& (0+255),b
  4454  003274  1F81               	comf	(___awdiv@dividend+1)& (0+255),f,b
  4455  003276  B0D8               	btfsc	status,0,c
  4456  003278  2B81               	incf	(___awdiv@dividend+1)& (0+255),f,b
  4457                           
  4458                           ; BSR set to: 0
  4459  00327A  0E01               	movlw	1
  4460  00327C  1B85               	xorwf	___awdiv@sign& (0+255),f,b
  4461  00327E                     l7320:
  4462                           
  4463                           ; BSR set to: 0
  4464  00327E  0E00               	movlw	0
  4465  003280  6F87               	movwf	(___awdiv@quotient+1)& (0+255),b
  4466  003282  0E00               	movlw	0
  4467  003284  6F86               	movwf	___awdiv@quotient& (0+255),b
  4468                           
  4469                           ; BSR set to: 0
  4470  003286  5182               	movf	___awdiv@divisor& (0+255),w,b
  4471  003288  1183               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  4472  00328A  B4D8               	btfsc	status,2,c
  4473  00328C  D01C               	goto	l7342
  4474                           
  4475                           ; BSR set to: 0
  4476  00328E  0E01               	movlw	1
  4477  003290  6F84               	movwf	___awdiv@counter& (0+255),b
  4478  003292  D004               	goto	l7328
  4479  003294                     l7326:
  4480                           
  4481                           ; BSR set to: 0
  4482  003294  90D8               	bcf	status,0,c
  4483  003296  3782               	rlcf	___awdiv@divisor& (0+255),f,b
  4484  003298  3783               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  4485  00329A  2B84               	incf	___awdiv@counter& (0+255),f,b
  4486  00329C                     l7328:
  4487                           
  4488                           ; BSR set to: 0
  4489  00329C  AF83               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  4490  00329E  D7FA               	goto	l7326
  4491  0032A0                     u7930:
  4492                           
  4493                           ; BSR set to: 0
  4494  0032A0  90D8               	bcf	status,0,c
  4495  0032A2  3786               	rlcf	___awdiv@quotient& (0+255),f,b
  4496  0032A4  3787               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  4497                           
  4498                           ; BSR set to: 0
  4499  0032A6  5182               	movf	___awdiv@divisor& (0+255),w,b
  4500  0032A8  5D80               	subwf	___awdiv@dividend& (0+255),w,b
  4501  0032AA  5183               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4502  0032AC  5981               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  4503  0032AE  A0D8               	btfss	status,0,c
  4504  0032B0  D005               	goto	l7338
  4505                           
  4506                           ; BSR set to: 0
  4507  0032B2  5182               	movf	___awdiv@divisor& (0+255),w,b
  4508  0032B4  5F80               	subwf	___awdiv@dividend& (0+255),f,b
  4509  0032B6  5183               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4510  0032B8  5B81               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  4511                           
  4512                           ; BSR set to: 0
  4513  0032BA  8186               	bsf	___awdiv@quotient& (0+255),0,b
  4514  0032BC                     l7338:
  4515                           
  4516                           ; BSR set to: 0
  4517  0032BC  90D8               	bcf	status,0,c
  4518  0032BE  3383               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  4519  0032C0  3382               	rrcf	___awdiv@divisor& (0+255),f,b
  4520                           
  4521                           ; BSR set to: 0
  4522  0032C2  2F84               	decfsz	___awdiv@counter& (0+255),f,b
  4523  0032C4  D7ED               	goto	u7930
  4524  0032C6                     l7342:
  4525                           
  4526                           ; BSR set to: 0
  4527  0032C6  5185               	movf	___awdiv@sign& (0+255),w,b
  4528  0032C8  B4D8               	btfsc	status,2,c
  4529  0032CA  D004               	goto	l7346
  4530                           
  4531                           ; BSR set to: 0
  4532  0032CC  6D86               	negf	___awdiv@quotient& (0+255),b
  4533  0032CE  1F87               	comf	(___awdiv@quotient+1)& (0+255),f,b
  4534  0032D0  B0D8               	btfsc	status,0,c
  4535  0032D2  2B87               	incf	(___awdiv@quotient+1)& (0+255),f,b
  4536  0032D4                     l7346:
  4537                           
  4538                           ; BSR set to: 0
  4539  0032D4  C086  F080         	movff	___awdiv@quotient,?___awdiv
  4540  0032D8  C087  F081         	movff	___awdiv@quotient+1,?___awdiv+1
  4541                           
  4542                           ; BSR set to: 0
  4543  0032DC  0012               	return		;funcret
  4544  0032DE                     __end_of___awdiv:
  4545                           	opt callstack 0
  4546                           
  4547 ;; *************** function _brake *****************
  4548 ;; Defined at:
  4549 ;;		line 663 in file "main.c"
  4550 ;; Parameters:    Size  Location     Type
  4551 ;;		None
  4552 ;; Auto vars:     Size  Location     Type
  4553 ;;		None
  4554 ;; Return value:  Size  Location     Type
  4555 ;;                  1    wreg      void 
  4556 ;; Registers used:
  4557 ;;		wreg, status,2, status,0, cstack
  4558 ;; Tracked objects:
  4559 ;;		On entry : 0/0
  4560 ;;		On exit  : 0/0
  4561 ;;		Unchanged: 0/0
  4562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4567 ;;Total ram usage:        0 bytes
  4568 ;; Hardware stack levels used:    1
  4569 ;; Hardware stack levels required when called:    5
  4570 ;; This function calls:
  4571 ;;		_I2C_Master_Start
  4572 ;;		_I2C_Master_Stop
  4573 ;;		_I2C_Master_Write
  4574 ;; This function is called by:
  4575 ;;		_main
  4576 ;;		_sense_tires
  4577 ;; This function uses a non-reentrant model
  4578 ;;
  4579                           
  4580                           	psect	text8
  4581  003A6A                     __ptext8:
  4582                           	opt callstack 0
  4583  003A6A                     _brake:
  4584                           	opt callstack 25
  4585                           
  4586                           ;main.c: 664:     I2C_Master_Start();
  4587                           
  4588                           ; BSR set to: 0
  4589                           ;incstack = 0
  4590  003A6A  EC97  F01D         	call	_I2C_Master_Start	;wreg free
  4591                           
  4592                           ;main.c: 665:     I2C_Master_Write(0b00010000);
  4593  003A6E  0E00               	movlw	0
  4594  003A70  0100               	movlb	0	; () banked
  4595  003A72  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4596  003A74  0E10               	movlw	16
  4597  003A76  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4598  003A78  EC8E  F01D         	call	_I2C_Master_Write	;wreg free
  4599                           
  4600                           ;main.c: 666:     I2C_Master_Write('9');
  4601  003A7C  0E00               	movlw	0
  4602  003A7E  0100               	movlb	0	; () banked
  4603  003A80  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4604  003A82  0E39               	movlw	57
  4605  003A84  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4606  003A86  EC8E  F01D         	call	_I2C_Master_Write	;wreg free
  4607                           
  4608                           ;main.c: 667:     I2C_Master_Stop();
  4609  003A8A  EC93  F01D         	call	_I2C_Master_Stop	;wreg free
  4610  003A8E  0012               	return		;funcret
  4611  003A90                     __end_of_brake:
  4612                           	opt callstack 0
  4613                           
  4614 ;; *************** function _backwards *****************
  4615 ;; Defined at:
  4616 ;;		line 681 in file "main.c"
  4617 ;; Parameters:    Size  Location     Type
  4618 ;;		None
  4619 ;; Auto vars:     Size  Location     Type
  4620 ;;		None
  4621 ;; Return value:  Size  Location     Type
  4622 ;;                  1    wreg      void 
  4623 ;; Registers used:
  4624 ;;		wreg, status,2, status,0, cstack
  4625 ;; Tracked objects:
  4626 ;;		On entry : 0/0
  4627 ;;		On exit  : 0/0
  4628 ;;		Unchanged: 0/0
  4629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4634 ;;Total ram usage:        0 bytes
  4635 ;; Hardware stack levels used:    1
  4636 ;; Hardware stack levels required when called:    5
  4637 ;; This function calls:
  4638 ;;		_I2C_Master_Start
  4639 ;;		_I2C_Master_Stop
  4640 ;;		_I2C_Master_Write
  4641 ;; This function is called by:
  4642 ;;		_main
  4643 ;; This function uses a non-reentrant model
  4644 ;;
  4645                           
  4646                           	psect	text9
  4647  003A90                     __ptext9:
  4648                           	opt callstack 0
  4649  003A90                     _backwards:
  4650                           	opt callstack 25
  4651                           
  4652                           ;main.c: 682:     I2C_Master_Start();
  4653                           
  4654                           ;incstack = 0
  4655  003A90  EC97  F01D         	call	_I2C_Master_Start	;wreg free
  4656                           
  4657                           ;main.c: 683:     I2C_Master_Write(0b00010000);
  4658  003A94  0E00               	movlw	0
  4659  003A96  0100               	movlb	0	; () banked
  4660  003A98  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4661  003A9A  0E10               	movlw	16
  4662  003A9C  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4663  003A9E  EC8E  F01D         	call	_I2C_Master_Write	;wreg free
  4664                           
  4665                           ;main.c: 684:     I2C_Master_Write('5');
  4666  003AA2  0E00               	movlw	0
  4667  003AA4  0100               	movlb	0	; () banked
  4668  003AA6  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4669  003AA8  0E35               	movlw	53
  4670  003AAA  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4671  003AAC  EC8E  F01D         	call	_I2C_Master_Write	;wreg free
  4672                           
  4673                           ;main.c: 685:     I2C_Master_Stop();
  4674  003AB0  EC93  F01D         	call	_I2C_Master_Stop	;wreg free
  4675  003AB4  0012               	return		;funcret
  4676  003AB6                     __end_of_backwards:
  4677                           	opt callstack 0
  4678                           
  4679 ;; *************** function _actuators_main *****************
  4680 ;; Defined at:
  4681 ;;		line 3 in file "actuators_main.c"
  4682 ;; Parameters:    Size  Location     Type
  4683 ;;  stack           2   12[BANK1 ] int 
  4684 ;;  steps2_adj      2   14[BANK1 ] int 
  4685 ;; Auto vars:     Size  Location     Type
  4686 ;;  act_cnt         2   18[BANK1 ] int 
  4687 ;; Return value:  Size  Location     Type
  4688 ;;                  1    wreg      void 
  4689 ;; Registers used:
  4690 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4691 ;; Tracked objects:
  4692 ;;		On entry : 0/0
  4693 ;;		On exit  : 0/0
  4694 ;;		Unchanged: 0/0
  4695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4696 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4697 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4698 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4699 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4700 ;;Total ram usage:        8 bytes
  4701 ;; Hardware stack levels used:    1
  4702 ;; Hardware stack levels required when called:   16
  4703 ;; This function calls:
  4704 ;;		_initLCD
  4705 ;;		_lcdInst
  4706 ;;		_printf
  4707 ;;		_servo
  4708 ;;		_stepper
  4709 ;;		_stepper2
  4710 ;;		_stepper2_back
  4711 ;;		_system_init
  4712 ;; This function is called by:
  4713 ;;		_main
  4714 ;; This function uses a non-reentrant model
  4715 ;;
  4716                           
  4717                           	psect	text10
  4718  002A70                     __ptext10:
  4719                           	opt callstack 0
  4720  002A70                     _actuators_main:
  4721                           	opt callstack 14
  4722                           
  4723                           ;actuators_main.c: 4:     int act_cnt = 0;
  4724                           
  4725                           ;incstack = 0
  4726  002A70  0E00               	movlw	0
  4727  002A72  0101               	movlb	1	; () banked
  4728  002A74  6F13               	movwf	(actuators_main@act_cnt+1)& (0+255),b
  4729  002A76  0E00               	movlw	0
  4730  002A78  6F12               	movwf	actuators_main@act_cnt& (0+255),b
  4731                           
  4732                           ; BSR set to: 1
  4733                           ;actuators_main.c: 5:     system_init();
  4734  002A7A  EC50  F01C         	call	_system_init	;wreg free
  4735                           
  4736                           ;actuators_main.c: 6:     initLCD();
  4737  002A7E  ECF3  F019         	call	_initLCD	;wreg free
  4738                           
  4739                           ;actuators_main.c: 7:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  4740  002A82  0E01               	movlw	1
  4741  002A84  EC86  F01D         	call	_lcdInst
  4742  002A88  0E11               	movlw	17
  4743  002A8A  0101               	movlb	1	; () banked
  4744  002A8C  6F10               	movwf	??_actuators_main& (0+255),b
  4745  002A8E  0E3A               	movlw	58
  4746  002A90                     u9037:
  4747  002A90  2EE8               	decfsz	wreg,f,c
  4748  002A92  D7FE               	bra	u9037
  4749  002A94  2F10               	decfsz	??_actuators_main& (0+255),f,b
  4750  002A96  D7FC               	bra	u9037
  4751  002A98  F000               	nop	
  4752                           
  4753                           ;actuators_main.c: 8:     printf("cnt is %d",act_cnt);
  4754  002A9A  0ED8               	movlw	low STR_1
  4755  002A9C  0100               	movlb	0	; () banked
  4756  002A9E  6FED               	movwf	printf@fmt& (0+255),b
  4757  002AA0  0EFF               	movlw	high STR_1
  4758  002AA2  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4759  002AA4  0E00               	movlw	0
  4760  002AA6  6FF0               	movwf	(?_printf+3)& (0+255),b
  4761  002AA8  0E00               	movlw	0
  4762  002AAA  6FEF               	movwf	(?_printf+2)& (0+255),b
  4763  002AAC  EC0D  F01D         	call	_printf	;wreg free
  4764                           
  4765                           ;actuators_main.c: 9:     _delay((unsigned long)((200)*(10000000/4000.0)));
  4766  002AB0  0E03               	movlw	3
  4767  002AB2  0101               	movlb	1	; () banked
  4768  002AB4  6F11               	movwf	(??_actuators_main+1)& (0+255),b
  4769  002AB6  0E8A               	movlw	138
  4770  002AB8  6F10               	movwf	??_actuators_main& (0+255),b
  4771  002ABA  0E55               	movlw	85
  4772  002ABC                     u9047:
  4773  002ABC  2EE8               	decfsz	wreg,f,c
  4774  002ABE  D7FE               	bra	u9047
  4775  002AC0  2F10               	decfsz	??_actuators_main& (0+255),f,b
  4776  002AC2  D7FC               	bra	u9047
  4777  002AC4  2F11               	decfsz	(??_actuators_main+1)& (0+255),f,b
  4778  002AC6  D7FA               	bra	u9047
  4779  002AC8  D000               	nop2	
  4780  002ACA                     l7380:
  4781                           
  4782                           ;actuators_main.c: 11:     if (act_cnt==0){
  4783  002ACA  0101               	movlb	1	; () banked
  4784  002ACC  5112               	movf	actuators_main@act_cnt& (0+255),w,b
  4785  002ACE  1113               	iorwf	(actuators_main@act_cnt+1)& (0+255),w,b
  4786  002AD0  A4D8               	btfss	status,2,c
  4787  002AD2  D064               	goto	l7456
  4788                           
  4789                           ; BSR set to: 1
  4790                           ;actuators_main.c: 15:         stepper(stack);
  4791  002AD4  C10C  F0FD         	movff	actuators_main@stack,stepper@stack
  4792  002AD8  C10D  F0FE         	movff	actuators_main@stack+1,stepper@stack+1
  4793  002ADC  ECE8  F018         	call	_stepper	;wreg free
  4794                           
  4795                           ;actuators_main.c: 16:         stepper2(0, steps2_adj);
  4796  002AE0  C10E  F0FD         	movff	actuators_main@steps2_adj,stepper2@steps2_adj
  4797  002AE4  C10F  F0FE         	movff	actuators_main@steps2_adj+1,stepper2@steps2_adj+1
  4798  002AE8  0E00               	movlw	0
  4799  002AEA  EC6F  F017         	call	_stepper2
  4800                           
  4801                           ;actuators_main.c: 17:                 stepper2_back(1, steps2_adj);
  4802  002AEE  C10E  F0FD         	movff	actuators_main@steps2_adj,stepper2_back@steps2_adj
  4803  002AF2  C10F  F0FE         	movff	actuators_main@steps2_adj+1,stepper2_back@steps2_adj+1
  4804  002AF6  0E01               	movlw	1
  4805  002AF8  EC4A  F018         	call	_stepper2_back
  4806                           
  4807                           ;actuators_main.c: 20:                 LATA = 0b00000000;
  4808  002AFC  0E00               	movlw	0
  4809  002AFE  6E89               	movwf	3977,c	;volatile
  4810                           
  4811                           ;actuators_main.c: 21:         LATCbits.LATC0 = 0;
  4812  002B00  908B               	bcf	3979,0,c	;volatile
  4813                           
  4814                           ;actuators_main.c: 22:         LATEbits.LATE0 = 0;
  4815  002B02  908D               	bcf	3981,0,c	;volatile
  4816                           
  4817                           ;actuators_main.c: 23:         LATEbits.LATE1 = 0;
  4818  002B04  928D               	bcf	3981,1,c	;volatile
  4819                           
  4820                           ;actuators_main.c: 24:         LATEbits.LATE2 = 0;
  4821  002B06  948D               	bcf	3981,2,c	;volatile
  4822                           
  4823                           ;actuators_main.c: 25:         LATCbits.LATC5 = 0;
  4824  002B08  9A8B               	bcf	3979,5,c	;volatile
  4825                           
  4826                           ;actuators_main.c: 26:         LATCbits.LATC6 = 0;
  4827  002B0A  9C8B               	bcf	3979,6,c	;volatile
  4828                           
  4829                           ;actuators_main.c: 27:         LATCbits.LATC7 = 0;
  4830  002B0C  9E8B               	bcf	3979,7,c	;volatile
  4831                           
  4832                           ;actuators_main.c: 28:         LATAbits.LATA5 = 0;
  4833  002B0E  9A89               	bcf	3977,5,c	;volatile
  4834                           
  4835                           ;actuators_main.c: 30:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/400
      +                          0.0)));};
  4836  002B10  0E01               	movlw	1
  4837  002B12  EC86  F01D         	call	_lcdInst
  4838  002B16  0E11               	movlw	17
  4839  002B18  0101               	movlb	1	; () banked
  4840  002B1A  6F10               	movwf	??_actuators_main& (0+255),b
  4841  002B1C  0E3A               	movlw	58
  4842  002B1E                     u9057:
  4843  002B1E  2EE8               	decfsz	wreg,f,c
  4844  002B20  D7FE               	bra	u9057
  4845  002B22  2F10               	decfsz	??_actuators_main& (0+255),f,b
  4846  002B24  D7FC               	bra	u9057
  4847  002B26  F000               	nop	
  4848                           
  4849                           ;actuators_main.c: 31:         printf("Stepper done");
  4850  002B28  0E09               	movlw	low STR_2
  4851  002B2A  0100               	movlb	0	; () banked
  4852  002B2C  6FED               	movwf	printf@fmt& (0+255),b
  4853  002B2E  0EFF               	movlw	high STR_2
  4854  002B30  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4855  002B32  EC0D  F01D         	call	_printf	;wreg free
  4856                           
  4857                           ;actuators_main.c: 33:         servo();
  4858  002B36  ECE2  F01C         	call	_servo	;wreg free
  4859                           
  4860                           ;actuators_main.c: 34:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/400
      +                          0.0)));};
  4861  002B3A  0E01               	movlw	1
  4862  002B3C  EC86  F01D         	call	_lcdInst
  4863  002B40  0E11               	movlw	17
  4864  002B42  0101               	movlb	1	; () banked
  4865  002B44  6F10               	movwf	??_actuators_main& (0+255),b
  4866  002B46  0E3A               	movlw	58
  4867  002B48                     u9067:
  4868  002B48  2EE8               	decfsz	wreg,f,c
  4869  002B4A  D7FE               	bra	u9067
  4870  002B4C  2F10               	decfsz	??_actuators_main& (0+255),f,b
  4871  002B4E  D7FC               	bra	u9067
  4872  002B50  F000               	nop	
  4873                           
  4874                           ;actuators_main.c: 35:         printf("Servo done");
  4875  002B52  0E73               	movlw	low STR_3
  4876  002B54  0100               	movlb	0	; () banked
  4877  002B56  6FED               	movwf	printf@fmt& (0+255),b
  4878  002B58  0EFF               	movlw	high STR_3
  4879  002B5A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4880  002B5C  EC0D  F01D         	call	_printf	;wreg free
  4881                           
  4882                           ;actuators_main.c: 36:                 LATA = 0b00000000;
  4883  002B60  0E00               	movlw	0
  4884  002B62  6E89               	movwf	3977,c	;volatile
  4885                           
  4886                           ;actuators_main.c: 37:         LATCbits.LATC0 = 0;
  4887  002B64  908B               	bcf	3979,0,c	;volatile
  4888                           
  4889                           ;actuators_main.c: 38:         LATEbits.LATE0 = 0;
  4890  002B66  908D               	bcf	3981,0,c	;volatile
  4891                           
  4892                           ;actuators_main.c: 39:         LATEbits.LATE1 = 0;
  4893  002B68  928D               	bcf	3981,1,c	;volatile
  4894                           
  4895                           ;actuators_main.c: 40:         LATEbits.LATE2 = 0;
  4896  002B6A  948D               	bcf	3981,2,c	;volatile
  4897                           
  4898                           ;actuators_main.c: 41:         LATCbits.LATC5 = 0;
  4899  002B6C  9A8B               	bcf	3979,5,c	;volatile
  4900                           
  4901                           ;actuators_main.c: 42:         LATCbits.LATC6 = 0;
  4902  002B6E  9C8B               	bcf	3979,6,c	;volatile
  4903                           
  4904                           ;actuators_main.c: 43:         LATCbits.LATC7 = 0;
  4905  002B70  9E8B               	bcf	3979,7,c	;volatile
  4906                           
  4907                           ;actuators_main.c: 44:         LATAbits.LATA5 = 0;
  4908  002B72  9A89               	bcf	3977,5,c	;volatile
  4909                           
  4910                           ;actuators_main.c: 49:         stepper2(1, steps2_adj);
  4911  002B74  C10E  F0FD         	movff	actuators_main@steps2_adj,stepper2@steps2_adj
  4912  002B78  C10F  F0FE         	movff	actuators_main@steps2_adj+1,stepper2@steps2_adj+1
  4913  002B7C  0E01               	movlw	1
  4914  002B7E  EC6F  F017         	call	_stepper2
  4915                           
  4916                           ;actuators_main.c: 50:                         LATA = 0b00000000;
  4917  002B82  0E00               	movlw	0
  4918  002B84  6E89               	movwf	3977,c	;volatile
  4919                           
  4920                           ;actuators_main.c: 51:         LATCbits.LATC0 = 0;
  4921  002B86  908B               	bcf	3979,0,c	;volatile
  4922                           
  4923                           ;actuators_main.c: 52:         LATEbits.LATE0 = 0;
  4924  002B88  908D               	bcf	3981,0,c	;volatile
  4925                           
  4926                           ;actuators_main.c: 53:         LATEbits.LATE1 = 0;
  4927  002B8A  928D               	bcf	3981,1,c	;volatile
  4928                           
  4929                           ;actuators_main.c: 54:         LATEbits.LATE2 = 0;
  4930  002B8C  948D               	bcf	3981,2,c	;volatile
  4931                           
  4932                           ;actuators_main.c: 55:         LATCbits.LATC5 = 0;
  4933  002B8E  9A8B               	bcf	3979,5,c	;volatile
  4934                           
  4935                           ;actuators_main.c: 56:         LATCbits.LATC6 = 0;
  4936  002B90  9C8B               	bcf	3979,6,c	;volatile
  4937                           
  4938                           ;actuators_main.c: 57:         LATCbits.LATC7 = 0;
  4939  002B92  9E8B               	bcf	3979,7,c	;volatile
  4940                           
  4941                           ;actuators_main.c: 58:         LATAbits.LATA5 = 0;
  4942  002B94  9A89               	bcf	3977,5,c	;volatile
  4943                           
  4944                           ;actuators_main.c: 59:         act_cnt++;
  4945  002B96  0101               	movlb	1	; () banked
  4946  002B98  4B12               	infsnz	actuators_main@act_cnt& (0+255),f,b
  4947  002B9A  2B13               	incf	(actuators_main@act_cnt+1)& (0+255),f,b
  4948  002B9C                     l7456:
  4949                           
  4950                           ; BSR set to: 1
  4951                           ;actuators_main.c: 62:     if(act_cnt){
  4952  002B9C  5112               	movf	actuators_main@act_cnt& (0+255),w,b
  4953  002B9E  1113               	iorwf	(actuators_main@act_cnt+1)& (0+255),w,b
  4954  002BA0  A4D8               	btfss	status,2,c
  4955  002BA2  0012               	return	
  4956  002BA4  D792               	goto	l7380
  4957  002BA6                     __end_of_actuators_main:
  4958                           	opt callstack 0
  4959                           
  4960 ;; *************** function _system_init *****************
  4961 ;; Defined at:
  4962 ;;		line 72 in file "actuators_main.c"
  4963 ;; Parameters:    Size  Location     Type
  4964 ;;		None
  4965 ;; Auto vars:     Size  Location     Type
  4966 ;;		None
  4967 ;; Return value:  Size  Location     Type
  4968 ;;                  1    wreg      void 
  4969 ;; Registers used:
  4970 ;;		wreg, status,2
  4971 ;; Tracked objects:
  4972 ;;		On entry : 0/0
  4973 ;;		On exit  : 0/0
  4974 ;;		Unchanged: 0/0
  4975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4980 ;;Total ram usage:        0 bytes
  4981 ;; Hardware stack levels used:    1
  4982 ;; Hardware stack levels required when called:    3
  4983 ;; This function calls:
  4984 ;;		Nothing
  4985 ;; This function is called by:
  4986 ;;		_actuators_main
  4987 ;; This function uses a non-reentrant model
  4988 ;;
  4989                           
  4990                           	psect	text11
  4991  0038A0                     __ptext11:
  4992                           	opt callstack 0
  4993  0038A0                     _system_init:
  4994                           	opt callstack 26
  4995                           
  4996                           ;actuators_main.c: 73:     TRISB = 0x00;
  4997                           
  4998                           ; BSR set to: 1
  4999                           ;incstack = 0
  5000  0038A0  0E00               	movlw	0
  5001  0038A2  6E93               	movwf	3987,c	;volatile
  5002                           
  5003                           ;actuators_main.c: 75:     LATB = 0x0F;
  5004  0038A4  0E0F               	movlw	15
  5005  0038A6  6E8A               	movwf	3978,c	;volatile
  5006                           
  5007                           ;actuators_main.c: 76:     TRISA = 0x00;
  5008  0038A8  0E00               	movlw	0
  5009  0038AA  6E92               	movwf	3986,c	;volatile
  5010                           
  5011                           ;actuators_main.c: 77:     LATA = 0x0F;
  5012  0038AC  0E0F               	movlw	15
  5013  0038AE  6E89               	movwf	3977,c	;volatile
  5014                           
  5015                           ;actuators_main.c: 79:     TRISCbits.TRISC1 = 0;
  5016  0038B0  9294               	bcf	3988,1,c	;volatile
  5017                           
  5018                           ;actuators_main.c: 82:     TRISCbits.TRISC2 = 0;
  5019  0038B2  9494               	bcf	3988,2,c	;volatile
  5020                           
  5021                           ;actuators_main.c: 85:     LATD = 0x00;
  5022  0038B4  0E00               	movlw	0
  5023  0038B6  6E8C               	movwf	3980,c	;volatile
  5024                           
  5025                           ;actuators_main.c: 86:     TRISD = 0x00;
  5026  0038B8  0E00               	movlw	0
  5027  0038BA  6E95               	movwf	3989,c	;volatile
  5028                           
  5029                           ;actuators_main.c: 88:     ADCON1 = 0b00001111;
  5030  0038BC  0E0F               	movlw	15
  5031  0038BE  6EC1               	movwf	4033,c	;volatile
  5032                           
  5033                           ;actuators_main.c: 90:     TRISC = 0x00;
  5034  0038C0  0E00               	movlw	0
  5035  0038C2  6E94               	movwf	3988,c	;volatile
  5036                           
  5037                           ;actuators_main.c: 91:     LATC = 0x00;
  5038  0038C4  0E00               	movlw	0
  5039  0038C6  6E8B               	movwf	3979,c	;volatile
  5040                           
  5041                           ;actuators_main.c: 92:     TRISE = 0x00;
  5042  0038C8  0E00               	movlw	0
  5043  0038CA  6E96               	movwf	3990,c	;volatile
  5044                           
  5045                           ;actuators_main.c: 93:     LATE = 0x00;
  5046  0038CC  0E00               	movlw	0
  5047  0038CE  6E8D               	movwf	3981,c	;volatile
  5048  0038D0  0012               	return		;funcret
  5049  0038D2                     __end_of_system_init:
  5050                           	opt callstack 0
  5051                           
  5052 ;; *************** function _stepper2_back *****************
  5053 ;; Defined at:
  5054 ;;		line 314 in file "actuators_main.c"
  5055 ;; Parameters:    Size  Location     Type
  5056 ;;  direction       1    wreg     unsigned char 
  5057 ;;  steps2_adj      2  125[BANK0 ] int 
  5058 ;; Auto vars:     Size  Location     Type
  5059 ;;  direction       1    1[BANK1 ] unsigned char 
  5060 ;;  i               2    4[BANK1 ] int 
  5061 ;;  count_steppe    2    2[BANK1 ] int 
  5062 ;; Return value:  Size  Location     Type
  5063 ;;                  1    wreg      void 
  5064 ;; Registers used:
  5065 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5066 ;; Tracked objects:
  5067 ;;		On entry : 0/0
  5068 ;;		On exit  : 0/0
  5069 ;;		Unchanged: 0/0
  5070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5071 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5072 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5073 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5074 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5075 ;;Total ram usage:        8 bytes
  5076 ;; Hardware stack levels used:    1
  5077 ;; Hardware stack levels required when called:   15
  5078 ;; This function calls:
  5079 ;;		_full_drive
  5080 ;;		_lcdInst
  5081 ;;		_printf
  5082 ;; This function is called by:
  5083 ;;		_actuators_main
  5084 ;; This function uses a non-reentrant model
  5085 ;;
  5086                           
  5087                           	psect	text12
  5088  003094                     __ptext12:
  5089                           	opt callstack 0
  5090  003094                     _stepper2_back:
  5091                           	opt callstack 14
  5092                           
  5093                           ;incstack = 0
  5094                           ;stepper2_back@direction stored from wreg
  5095  003094  0101               	movlb	1	; () banked
  5096  003096  6F01               	movwf	stepper2_back@direction& (0+255),b
  5097                           
  5098                           ;actuators_main.c: 332:     int count_stepper = 0;
  5099  003098  0E00               	movlw	0
  5100  00309A  0101               	movlb	1	; () banked
  5101  00309C  6F03               	movwf	(stepper2_back@count_stepper+1)& (0+255),b
  5102  00309E  0E00               	movlw	0
  5103  0030A0  6F02               	movwf	stepper2_back@count_stepper& (0+255),b
  5104                           
  5105                           ; BSR set to: 1
  5106                           ;actuators_main.c: 335:             { lcdInst(0x01); _delay((unsigned long)((5)*(1000000
      +                          0/4000.0)));};
  5107                           
  5108                           ; BSR set to: 1
  5109                           ;actuators_main.c: 334:         if (count_stepper<1){
  5110  0030A2  0E01               	movlw	1
  5111  0030A4  EC86  F01D         	call	_lcdInst
  5112  0030A8  0E11               	movlw	17
  5113  0030AA  0101               	movlb	1	; () banked
  5114  0030AC  6F00               	movwf	??_stepper2_back& (0+255),b
  5115  0030AE  0E3A               	movlw	58
  5116  0030B0                     u9077:
  5117  0030B0  2EE8               	decfsz	wreg,f,c
  5118  0030B2  D7FE               	bra	u9077
  5119  0030B4  2F00               	decfsz	??_stepper2_back& (0+255),f,b
  5120  0030B6  D7FC               	bra	u9077
  5121  0030B8  F000               	nop	
  5122                           
  5123                           ;actuators_main.c: 336:             printf("step1");
  5124  0030BA  0EF3               	movlw	low STR_6
  5125  0030BC  0100               	movlb	0	; () banked
  5126  0030BE  6FED               	movwf	printf@fmt& (0+255),b
  5127  0030C0  0EFF               	movlw	high STR_6
  5128  0030C2  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5129  0030C4  EC0D  F01D         	call	_printf	;wreg free
  5130  0030C8  0EC0               	movlw	192
  5131  0030CA  EC86  F01D         	call	_lcdInst
  5132                           
  5133                           ;actuators_main.c: 338:             printf("Step speed %d",4);
  5134  0030CE  0EE1               	movlw	low STR_7
  5135  0030D0  0100               	movlb	0	; () banked
  5136  0030D2  6FED               	movwf	printf@fmt& (0+255),b
  5137  0030D4  0EFE               	movlw	high STR_7
  5138  0030D6  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5139  0030D8  0E00               	movlw	0
  5140  0030DA  6FF0               	movwf	(?_printf+3)& (0+255),b
  5141  0030DC  0E04               	movlw	4
  5142  0030DE  6FEF               	movwf	(?_printf+2)& (0+255),b
  5143  0030E0  EC0D  F01D         	call	_printf	;wreg free
  5144                           
  5145                           ;actuators_main.c: 339:             for(int i=0;i<5;i++){
  5146  0030E4  0E00               	movlw	0
  5147  0030E6  0101               	movlb	1	; () banked
  5148  0030E8  6F05               	movwf	(stepper2_back@i+1)& (0+255),b
  5149  0030EA  0E00               	movlw	0
  5150  0030EC  6F04               	movwf	stepper2_back@i& (0+255),b
  5151  0030EE                     l7148:
  5152                           
  5153                           ; BSR set to: 1
  5154                           ;actuators_main.c: 341:                 full_drive(direction, 2);
  5155  0030EE  0E00               	movlw	0
  5156  0030F0  0100               	movlb	0	; () banked
  5157  0030F2  6FFA               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5158  0030F4  0E02               	movlw	2
  5159  0030F6  6FF9               	movwf	full_drive@stepper_no& (0+255),b
  5160  0030F8  0101               	movlb	1	; () banked
  5161  0030FA  5101               	movf	stepper2_back@direction& (0+255),w,b
  5162  0030FC  EC18  F00B         	call	_full_drive
  5163                           
  5164                           ;actuators_main.c: 343:             }
  5165  003100  0101               	movlb	1	; () banked
  5166  003102  4B04               	infsnz	stepper2_back@i& (0+255),f,b
  5167  003104  2B05               	incf	(stepper2_back@i+1)& (0+255),f,b
  5168                           
  5169                           ; BSR set to: 1
  5170  003106  BF05               	btfsc	(stepper2_back@i+1)& (0+255),7,b
  5171  003108  D7F2               	goto	l7148
  5172  00310A  5105               	movf	(stepper2_back@i+1)& (0+255),w,b
  5173  00310C  E104               	bnz	u7600
  5174  00310E  0E05               	movlw	5
  5175  003110  5D04               	subwf	stepper2_back@i& (0+255),w,b
  5176  003112  A0D8               	btfss	status,0,c
  5177  003114  D7EC               	goto	l7148
  5178  003116                     u7600:
  5179                           
  5180                           ; BSR set to: 1
  5181                           ;actuators_main.c: 344:             printf("cnt is %d", count_stepper);
  5182  003116  0ED8               	movlw	low STR_1
  5183  003118  0100               	movlb	0	; () banked
  5184  00311A  6FED               	movwf	printf@fmt& (0+255),b
  5185  00311C  0EFF               	movlw	high STR_1
  5186  00311E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5187  003120  C102  F0EF         	movff	stepper2_back@count_stepper,?_printf+2
  5188  003124  C103  F0F0         	movff	stepper2_back@count_stepper+1,?_printf+3
  5189  003128  EC0D  F01D         	call	_printf	;wreg free
  5190                           
  5191                           ;actuators_main.c: 345:             count_stepper++;
  5192  00312C  0101               	movlb	1	; () banked
  5193  00312E  4B02               	infsnz	stepper2_back@count_stepper& (0+255),f,b
  5194  003130  2B03               	incf	(stepper2_back@count_stepper+1)& (0+255),f,b
  5195                           
  5196                           ; BSR set to: 1
  5197  003132  0012               	return		;funcret
  5198  003134                     __end_of_stepper2_back:
  5199                           	opt callstack 0
  5200                           
  5201 ;; *************** function _stepper2 *****************
  5202 ;; Defined at:
  5203 ;;		line 229 in file "actuators_main.c"
  5204 ;; Parameters:    Size  Location     Type
  5205 ;;  direction       1    wreg     unsigned char 
  5206 ;;  steps2_adj      2  125[BANK0 ] int 
  5207 ;; Auto vars:     Size  Location     Type
  5208 ;;  direction       1   11[BANK1 ] unsigned char 
  5209 ;;  i               2    7[BANK1 ] int 
  5210 ;;  i               2    5[BANK1 ] int 
  5211 ;;  count_steppe    2    9[BANK1 ] int 
  5212 ;; Return value:  Size  Location     Type
  5213 ;;                  1    wreg      void 
  5214 ;; Registers used:
  5215 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5216 ;; Tracked objects:
  5217 ;;		On entry : 0/0
  5218 ;;		On exit  : 0/0
  5219 ;;		Unchanged: 0/0
  5220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5221 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5222 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5223 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5224 ;;      Totals:         0       2      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5225 ;;Total ram usage:       14 bytes
  5226 ;; Hardware stack levels used:    1
  5227 ;; Hardware stack levels required when called:   15
  5228 ;; This function calls:
  5229 ;;		_full_drive
  5230 ;;		_lcdInst
  5231 ;;		_printf
  5232 ;; This function is called by:
  5233 ;;		_actuators_main
  5234 ;; This function uses a non-reentrant model
  5235 ;;
  5236                           
  5237                           	psect	text13
  5238  002EDE                     __ptext13:
  5239                           	opt callstack 0
  5240  002EDE                     _stepper2:
  5241                           	opt callstack 14
  5242                           
  5243                           ; BSR set to: 1
  5244                           ;incstack = 0
  5245                           ;stepper2@direction stored from wreg
  5246  002EDE  0101               	movlb	1	; () banked
  5247  002EE0  6F0B               	movwf	stepper2@direction& (0+255),b
  5248                           
  5249                           ;actuators_main.c: 247:     int count_stepper = 0;
  5250  002EE2  0E00               	movlw	0
  5251  002EE4  0101               	movlb	1	; () banked
  5252  002EE6  6F0A               	movwf	(stepper2@count_stepper+1)& (0+255),b
  5253  002EE8  0E00               	movlw	0
  5254  002EEA  6F09               	movwf	stepper2@count_stepper& (0+255),b
  5255                           
  5256                           ; BSR set to: 1
  5257                           ;actuators_main.c: 250:     if (direction == 0){
  5258                           
  5259                           ; BSR set to: 1
  5260                           ;actuators_main.c: 249:         if (count_stepper<1){
  5261  002EEC  510B               	movf	stepper2@direction& (0+255),w,b
  5262  002EEE  A4D8               	btfss	status,2,c
  5263  002EF0  D02D               	goto	l7110
  5264                           
  5265                           ; BSR set to: 1
  5266                           ;actuators_main.c: 255:             for(int i=0;i<steps2_adj;i++){
  5267  002EF2  0E00               	movlw	0
  5268  002EF4  6F06               	movwf	(stepper2@i+1)& (0+255),b
  5269  002EF6  0E00               	movlw	0
  5270  002EF8  6F05               	movwf	stepper2@i& (0+255),b
  5271  002EFA  D00C               	goto	l7104
  5272  002EFC                     l7100:
  5273                           
  5274                           ; BSR set to: 1
  5275                           ;actuators_main.c: 257:                 full_drive(direction, 2);
  5276  002EFC  0E00               	movlw	0
  5277  002EFE  0100               	movlb	0	; () banked
  5278  002F00  6FFA               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5279  002F02  0E02               	movlw	2
  5280  002F04  6FF9               	movwf	full_drive@stepper_no& (0+255),b
  5281  002F06  0101               	movlb	1	; () banked
  5282  002F08  510B               	movf	stepper2@direction& (0+255),w,b
  5283  002F0A  EC18  F00B         	call	_full_drive
  5284                           
  5285                           ;actuators_main.c: 259:             }
  5286  002F0E  0101               	movlb	1	; () banked
  5287  002F10  4B05               	infsnz	stepper2@i& (0+255),f,b
  5288  002F12  2B06               	incf	(stepper2@i+1)& (0+255),f,b
  5289  002F14                     l7104:
  5290                           
  5291                           ; BSR set to: 1
  5292  002F14  0100               	movlb	0	; () banked
  5293  002F16  51FD               	movf	stepper2@steps2_adj& (0+255),w,b
  5294  002F18  0101               	movlb	1	; () banked
  5295  002F1A  5D05               	subwf	stepper2@i& (0+255),w,b
  5296  002F1C  5106               	movf	(stepper2@i+1)& (0+255),w,b
  5297  002F1E  0A80               	xorlw	128
  5298  002F20  6F00               	movwf	??_stepper2& (0+255),b
  5299  002F22  0100               	movlb	0	; () banked
  5300  002F24  51FE               	movf	(stepper2@steps2_adj+1)& (0+255),w,b
  5301  002F26  0A80               	xorlw	128
  5302  002F28  0101               	movlb	1	; () banked
  5303  002F2A  5900               	subwfb	??_stepper2& (0+255),w,b
  5304  002F2C  A0D8               	btfss	status,0,c
  5305  002F2E  D7E6               	goto	l7100
  5306                           
  5307                           ; BSR set to: 1
  5308                           ;actuators_main.c: 260:             printf("cnt is %d", count_stepper);
  5309  002F30  0ED8               	movlw	low STR_1
  5310  002F32  0100               	movlb	0	; () banked
  5311  002F34  6FED               	movwf	printf@fmt& (0+255),b
  5312  002F36  0EFF               	movlw	high STR_1
  5313  002F38  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5314  002F3A  C109  F0EF         	movff	stepper2@count_stepper,?_printf+2
  5315  002F3E  C10A  F0F0         	movff	stepper2@count_stepper+1,?_printf+3
  5316  002F42  EC0D  F01D         	call	_printf	;wreg free
  5317                           
  5318                           ;actuators_main.c: 261:             count_stepper++;
  5319  002F46  0101               	movlb	1	; () banked
  5320  002F48  4B09               	infsnz	stepper2@count_stepper& (0+255),f,b
  5321  002F4A  2B0A               	incf	(stepper2@count_stepper+1)& (0+255),f,b
  5322  002F4C                     l7110:
  5323                           
  5324                           ; BSR set to: 1
  5325                           ;actuators_main.c: 263:     if (direction == 1){
  5326  002F4C  050B               	decf	stepper2@direction& (0+255),w,b
  5327  002F4E  A4D8               	btfss	status,2,c
  5328  002F50  0012               	return	
  5329                           
  5330                           ; BSR set to: 1
  5331                           ;actuators_main.c: 264:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/40
      +                          00.0)));};
  5332  002F52  0E01               	movlw	1
  5333  002F54  EC86  F01D         	call	_lcdInst
  5334  002F58  0E11               	movlw	17
  5335  002F5A  0101               	movlb	1	; () banked
  5336  002F5C  6F00               	movwf	??_stepper2& (0+255),b
  5337  002F5E  0E3A               	movlw	58
  5338  002F60                     u9087:
  5339  002F60  2EE8               	decfsz	wreg,f,c
  5340  002F62  D7FE               	bra	u9087
  5341  002F64  2F00               	decfsz	??_stepper2& (0+255),f,b
  5342  002F66  D7FC               	bra	u9087
  5343  002F68  F000               	nop	
  5344                           
  5345                           ;actuators_main.c: 265:                         printf("steppp %d", steps2_adj-(5));
  5346  002F6A  0ECE               	movlw	low STR_5
  5347  002F6C  0100               	movlb	0	; () banked
  5348  002F6E  6FED               	movwf	printf@fmt& (0+255),b
  5349  002F70  0EFF               	movlw	high STR_5
  5350  002F72  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5351  002F74  0EFB               	movlw	251
  5352  002F76  25FD               	addwf	stepper2@steps2_adj& (0+255),w,b
  5353  002F78  6FEF               	movwf	(?_printf+2)& (0+255),b
  5354  002F7A  0EFF               	movlw	255
  5355  002F7C  21FE               	addwfc	(stepper2@steps2_adj+1)& (0+255),w,b
  5356  002F7E  6FF0               	movwf	(?_printf+3)& (0+255),b
  5357  002F80  EC0D  F01D         	call	_printf	;wreg free
  5358                           
  5359                           ;actuators_main.c: 267:                 for(int i=0;i<(steps2_adj-(5));i++){
  5360  002F84  0E00               	movlw	0
  5361  002F86  0101               	movlb	1	; () banked
  5362  002F88  6F08               	movwf	(stepper2@i_384+1)& (0+255),b
  5363  002F8A  0E00               	movlw	0
  5364  002F8C  6F07               	movwf	stepper2@i_384& (0+255),b
  5365  002F8E  D00C               	goto	l7124
  5366  002F90                     l7120:
  5367                           
  5368                           ; BSR set to: 1
  5369                           ;actuators_main.c: 269:                     full_drive(direction, 2);
  5370  002F90  0E00               	movlw	0
  5371  002F92  0100               	movlb	0	; () banked
  5372  002F94  6FFA               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5373  002F96  0E02               	movlw	2
  5374  002F98  6FF9               	movwf	full_drive@stepper_no& (0+255),b
  5375  002F9A  0101               	movlb	1	; () banked
  5376  002F9C  510B               	movf	stepper2@direction& (0+255),w,b
  5377  002F9E  EC18  F00B         	call	_full_drive
  5378                           
  5379                           ;actuators_main.c: 271:                 }
  5380  002FA2  0101               	movlb	1	; () banked
  5381  002FA4  4B07               	infsnz	stepper2@i_384& (0+255),f,b
  5382  002FA6  2B08               	incf	(stepper2@i_384+1)& (0+255),f,b
  5383  002FA8                     l7124:
  5384                           
  5385                           ; BSR set to: 1
  5386  002FA8  0EFB               	movlw	251
  5387  002FAA  6F00               	movwf	??_stepper2& (0+255),b
  5388  002FAC  0EFF               	movlw	255
  5389  002FAE  6F01               	movwf	(??_stepper2+1)& (0+255),b
  5390  002FB0  C0FD  F102         	movff	stepper2@steps2_adj,??_stepper2+2
  5391  002FB4  C0FE  F103         	movff	stepper2@steps2_adj+1,??_stepper2+3
  5392  002FB8  5100               	movf	??_stepper2& (0+255),w,b
  5393  002FBA  2702               	addwf	(??_stepper2+2)& (0+255),f,b
  5394  002FBC  5101               	movf	(??_stepper2+1)& (0+255),w,b
  5395  002FBE  2303               	addwfc	(??_stepper2+3)& (0+255),f,b
  5396  002FC0  5102               	movf	(??_stepper2+2)& (0+255),w,b
  5397  002FC2  5D07               	subwf	stepper2@i_384& (0+255),w,b
  5398  002FC4  5108               	movf	(stepper2@i_384+1)& (0+255),w,b
  5399  002FC6  0A80               	xorlw	128
  5400  002FC8  6F04               	movwf	(??_stepper2+4)& (0+255),b
  5401  002FCA  5103               	movf	(??_stepper2+3)& (0+255),w,b
  5402  002FCC  0A80               	xorlw	128
  5403  002FCE  5904               	subwfb	(??_stepper2+4)& (0+255),w,b
  5404  002FD0  A0D8               	btfss	status,0,c
  5405  002FD2  D7DE               	goto	l7120
  5406                           
  5407                           ; BSR set to: 1
  5408                           ;actuators_main.c: 272:                 count_stepper++;
  5409  002FD4  4B09               	infsnz	stepper2@count_stepper& (0+255),f,b
  5410  002FD6  2B0A               	incf	(stepper2@count_stepper+1)& (0+255),f,b
  5411                           
  5412                           ; BSR set to: 1
  5413  002FD8  0012               	return		;funcret
  5414  002FDA                     __end_of_stepper2:
  5415                           	opt callstack 0
  5416                           
  5417 ;; *************** function _stepper *****************
  5418 ;; Defined at:
  5419 ;;		line 182 in file "actuators_main.c"
  5420 ;; Parameters:    Size  Location     Type
  5421 ;;  stack           2  125[BANK0 ] int 
  5422 ;; Auto vars:     Size  Location     Type
  5423 ;;  i               2    4[BANK1 ] int 
  5424 ;;  i               2    2[BANK1 ] int 
  5425 ;;  count_steppe    2    0[BANK1 ] int 
  5426 ;; Return value:  Size  Location     Type
  5427 ;;                  1    wreg      void 
  5428 ;; Registers used:
  5429 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5430 ;; Tracked objects:
  5431 ;;		On entry : 0/0
  5432 ;;		On exit  : 0/0
  5433 ;;		Unchanged: 0/0
  5434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5435 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5436 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5438 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5439 ;;Total ram usage:        8 bytes
  5440 ;; Hardware stack levels used:    1
  5441 ;; Hardware stack levels required when called:   15
  5442 ;; This function calls:
  5443 ;;		_full_drive
  5444 ;; This function is called by:
  5445 ;;		_actuators_main
  5446 ;; This function uses a non-reentrant model
  5447 ;;
  5448                           
  5449                           	psect	text14
  5450  0031D0                     __ptext14:
  5451                           	opt callstack 0
  5452  0031D0                     _stepper:
  5453                           	opt callstack 14
  5454                           
  5455                           ;actuators_main.c: 183:     int count_stepper = 0;
  5456                           
  5457                           ; BSR set to: 1
  5458                           ;incstack = 0
  5459  0031D0  0E00               	movlw	0
  5460  0031D2  0101               	movlb	1	; () banked
  5461  0031D4  6F01               	movwf	(stepper@count_stepper+1)& (0+255),b
  5462  0031D6  0E00               	movlw	0
  5463  0031D8  6F00               	movwf	stepper@count_stepper& (0+255),b
  5464                           
  5465                           ; BSR set to: 1
  5466                           ;actuators_main.c: 192:             if (stack == 1){
  5467                           
  5468                           ; BSR set to: 1
  5469                           ;actuators_main.c: 186:         if (count_stepper<1){
  5470  0031DA  0100               	movlb	0	; () banked
  5471  0031DC  05FD               	decf	stepper@stack& (0+255),w,b
  5472  0031DE  11FE               	iorwf	(stepper@stack+1)& (0+255),w,b
  5473  0031E0  A4D8               	btfss	status,2,c
  5474  0031E2  D018               	goto	u7530
  5475                           
  5476                           ; BSR set to: 0
  5477                           ;actuators_main.c: 193:                 for(int i=0;i<14;i++){
  5478  0031E4  0E00               	movlw	0
  5479  0031E6  0101               	movlb	1	; () banked
  5480  0031E8  6F03               	movwf	(stepper@i+1)& (0+255),b
  5481  0031EA  0E00               	movlw	0
  5482  0031EC  6F02               	movwf	stepper@i& (0+255),b
  5483  0031EE                     l7070:
  5484                           
  5485                           ; BSR set to: 1
  5486                           ;actuators_main.c: 195:                     full_drive(0, 1);
  5487  0031EE  0E00               	movlw	0
  5488  0031F0  0100               	movlb	0	; () banked
  5489  0031F2  6FFA               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5490  0031F4  0E01               	movlw	1
  5491  0031F6  6FF9               	movwf	full_drive@stepper_no& (0+255),b
  5492  0031F8  0E00               	movlw	0
  5493  0031FA  EC18  F00B         	call	_full_drive
  5494                           
  5495                           ;actuators_main.c: 197:                 }
  5496  0031FE  0101               	movlb	1	; () banked
  5497  003200  4B02               	infsnz	stepper@i& (0+255),f,b
  5498  003202  2B03               	incf	(stepper@i+1)& (0+255),f,b
  5499                           
  5500                           ; BSR set to: 1
  5501  003204  BF03               	btfsc	(stepper@i+1)& (0+255),7,b
  5502  003206  D7F3               	goto	l7070
  5503  003208  5103               	movf	(stepper@i+1)& (0+255),w,b
  5504  00320A  E104               	bnz	u7530
  5505  00320C  0E0E               	movlw	14
  5506  00320E  5D02               	subwf	stepper@i& (0+255),w,b
  5507  003210  A0D8               	btfss	status,0,c
  5508  003212  D7ED               	goto	l7070
  5509  003214                     u7530:
  5510                           
  5511                           ;actuators_main.c: 199:             if (stack == 2){
  5512  003214  0E02               	movlw	2
  5513  003216  0100               	movlb	0	; () banked
  5514  003218  19FD               	xorwf	stepper@stack& (0+255),w,b
  5515  00321A  11FE               	iorwf	(stepper@stack+1)& (0+255),w,b
  5516  00321C  A4D8               	btfss	status,2,c
  5517  00321E  D018               	goto	u7550
  5518                           
  5519                           ; BSR set to: 0
  5520                           ;actuators_main.c: 200:                 for(int i=0;i<14;i++){
  5521  003220  0E00               	movlw	0
  5522  003222  0101               	movlb	1	; () banked
  5523  003224  6F05               	movwf	(stepper@i_376+1)& (0+255),b
  5524  003226  0E00               	movlw	0
  5525  003228  6F04               	movwf	stepper@i_376& (0+255),b
  5526  00322A                     l7084:
  5527                           
  5528                           ; BSR set to: 1
  5529                           ;actuators_main.c: 201:                     full_drive(0, 3);
  5530  00322A  0E00               	movlw	0
  5531  00322C  0100               	movlb	0	; () banked
  5532  00322E  6FFA               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5533  003230  0E03               	movlw	3
  5534  003232  6FF9               	movwf	full_drive@stepper_no& (0+255),b
  5535  003234  0E00               	movlw	0
  5536  003236  EC18  F00B         	call	_full_drive
  5537                           
  5538                           ;actuators_main.c: 204:                 }
  5539  00323A  0101               	movlb	1	; () banked
  5540  00323C  4B04               	infsnz	stepper@i_376& (0+255),f,b
  5541  00323E  2B05               	incf	(stepper@i_376+1)& (0+255),f,b
  5542                           
  5543                           ; BSR set to: 1
  5544  003240  BF05               	btfsc	(stepper@i_376+1)& (0+255),7,b
  5545  003242  D7F3               	goto	l7084
  5546  003244  5105               	movf	(stepper@i_376+1)& (0+255),w,b
  5547  003246  E104               	bnz	u7550
  5548  003248  0E0E               	movlw	14
  5549  00324A  5D04               	subwf	stepper@i_376& (0+255),w,b
  5550  00324C  A0D8               	btfss	status,0,c
  5551  00324E  D7ED               	goto	l7084
  5552  003250                     u7550:
  5553                           
  5554                           ;actuators_main.c: 207:             count_stepper++;
  5555  003250  0101               	movlb	1	; () banked
  5556  003252  4B00               	infsnz	stepper@count_stepper& (0+255),f,b
  5557  003254  2B01               	incf	(stepper@count_stepper+1)& (0+255),f,b
  5558                           
  5559                           ; BSR set to: 1
  5560                           
  5561                           ;actuators_main.c: 208:         }
  5562  003256  0012               	return		;funcret
  5563  003258                     __end_of_stepper:
  5564                           	opt callstack 0
  5565                           
  5566 ;; *************** function _full_drive *****************
  5567 ;; Defined at:
  5568 ;;		line 363 in file "actuators_main.c"
  5569 ;; Parameters:    Size  Location     Type
  5570 ;;  direction       1    wreg     unsigned char 
  5571 ;;  stepper_no      2  121[BANK0 ] int 
  5572 ;; Auto vars:     Size  Location     Type
  5573 ;;  direction       1  124[BANK0 ] unsigned char 
  5574 ;; Return value:  Size  Location     Type
  5575 ;;                  1    wreg      void 
  5576 ;; Registers used:
  5577 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5578 ;; Tracked objects:
  5579 ;;		On entry : 0/0
  5580 ;;		On exit  : 0/0
  5581 ;;		Unchanged: 0/0
  5582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5583 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5584 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5585 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5586 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5587 ;;Total ram usage:        4 bytes
  5588 ;; Hardware stack levels used:    1
  5589 ;; Hardware stack levels required when called:   14
  5590 ;; This function calls:
  5591 ;;		_printf
  5592 ;; This function is called by:
  5593 ;;		_stepper
  5594 ;;		_stepper2
  5595 ;;		_stepper2_back
  5596 ;; This function uses a non-reentrant model
  5597 ;;
  5598                           
  5599                           	psect	text15
  5600  001630                     __ptext15:
  5601                           	opt callstack 0
  5602  001630                     _full_drive:
  5603                           	opt callstack 14
  5604                           
  5605                           ; BSR set to: 1
  5606                           ;incstack = 0
  5607                           ;full_drive@direction stored from wreg
  5608  001630  0100               	movlb	0	; () banked
  5609  001632  6FFC               	movwf	full_drive@direction& (0+255),b
  5610                           
  5611                           ;actuators_main.c: 364:     if (stepper_no == 1){
  5612  001634  0100               	movlb	0	; () banked
  5613  001636  05F9               	decf	full_drive@stepper_no& (0+255),w,b
  5614  001638  11FA               	iorwf	(full_drive@stepper_no+1)& (0+255),w,b
  5615  00163A  A4D8               	btfss	status,2,c
  5616  00163C  D06B               	goto	l6798
  5617                           
  5618                           ; BSR set to: 0
  5619                           ;actuators_main.c: 365:         if (direction == 1){
  5620  00163E  05FC               	decf	full_drive@direction& (0+255),w,b
  5621  001640  A4D8               	btfss	status,2,c
  5622  001642  D032               	goto	l6782
  5623                           
  5624                           ; BSR set to: 0
  5625                           ;actuators_main.c: 366:             LATA = 0b00000011;
  5626  001644  0E03               	movlw	3
  5627  001646  6E89               	movwf	3977,c	;volatile
  5628                           
  5629                           ; BSR set to: 0
  5630                           ;actuators_main.c: 367:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5631  001648  0E1E               	movlw	30
  5632  00164A  0100               	movlb	0	; () banked
  5633  00164C  6FFB               	movwf	??_full_drive& (0+255),b
  5634  00164E  0E37               	movlw	55
  5635  001650                     u9097:
  5636  001650  2EE8               	decfsz	wreg,f,c
  5637  001652  D7FE               	bra	u9097
  5638  001654  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5639  001656  D7FC               	bra	u9097
  5640                           
  5641                           ;actuators_main.c: 368:             LATA = 0b00000110;
  5642  001658  0E06               	movlw	6
  5643  00165A  6E89               	movwf	3977,c	;volatile
  5644                           
  5645                           ;actuators_main.c: 369:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5646  00165C  0E1E               	movlw	30
  5647  00165E  0100               	movlb	0	; () banked
  5648  001660  6FFB               	movwf	??_full_drive& (0+255),b
  5649  001662  0E37               	movlw	55
  5650  001664                     u9107:
  5651  001664  2EE8               	decfsz	wreg,f,c
  5652  001666  D7FE               	bra	u9107
  5653  001668  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5654  00166A  D7FC               	bra	u9107
  5655                           
  5656                           ;actuators_main.c: 370:             LATA = 0b00001100;
  5657  00166C  0E0C               	movlw	12
  5658  00166E  6E89               	movwf	3977,c	;volatile
  5659                           
  5660                           ;actuators_main.c: 371:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5661  001670  0E1E               	movlw	30
  5662  001672  0100               	movlb	0	; () banked
  5663  001674  6FFB               	movwf	??_full_drive& (0+255),b
  5664  001676  0E37               	movlw	55
  5665  001678                     u9117:
  5666  001678  2EE8               	decfsz	wreg,f,c
  5667  00167A  D7FE               	bra	u9117
  5668  00167C  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5669  00167E  D7FC               	bra	u9117
  5670                           
  5671                           ;actuators_main.c: 372:             LATA = 0b00001001;
  5672  001680  0E09               	movlw	9
  5673  001682  6E89               	movwf	3977,c	;volatile
  5674                           
  5675                           ;actuators_main.c: 373:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5676  001684  0E1E               	movlw	30
  5677  001686  0100               	movlb	0	; () banked
  5678  001688  6FFB               	movwf	??_full_drive& (0+255),b
  5679  00168A  0E37               	movlw	55
  5680  00168C                     u9127:
  5681  00168C  2EE8               	decfsz	wreg,f,c
  5682  00168E  D7FE               	bra	u9127
  5683  001690  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5684  001692  D7FC               	bra	u9127
  5685                           
  5686                           ;actuators_main.c: 374:             LATA = 0b00000011;
  5687  001694  0E03               	movlw	3
  5688  001696  6E89               	movwf	3977,c	;volatile
  5689                           
  5690                           ;actuators_main.c: 375:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5691  001698  0E1E               	movlw	30
  5692  00169A  0100               	movlb	0	; () banked
  5693  00169C  6FFB               	movwf	??_full_drive& (0+255),b
  5694  00169E  0E37               	movlw	55
  5695  0016A0                     u9137:
  5696  0016A0  2EE8               	decfsz	wreg,f,c
  5697  0016A2  D7FE               	bra	u9137
  5698  0016A4  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5699  0016A6  D7FC               	bra	u9137
  5700  0016A8                     l6782:
  5701                           
  5702                           ;actuators_main.c: 377:         if (direction == 0){
  5703  0016A8  0100               	movlb	0	; () banked
  5704  0016AA  51FC               	movf	full_drive@direction& (0+255),w,b
  5705  0016AC  A4D8               	btfss	status,2,c
  5706  0016AE  D032               	goto	l6798
  5707                           
  5708                           ; BSR set to: 0
  5709                           ;actuators_main.c: 378:             LATA = 0b00001001;
  5710  0016B0  0E09               	movlw	9
  5711  0016B2  6E89               	movwf	3977,c	;volatile
  5712                           
  5713                           ; BSR set to: 0
  5714                           ;actuators_main.c: 379:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5715  0016B4  0E1E               	movlw	30
  5716  0016B6  0100               	movlb	0	; () banked
  5717  0016B8  6FFB               	movwf	??_full_drive& (0+255),b
  5718  0016BA  0E37               	movlw	55
  5719  0016BC                     u9147:
  5720  0016BC  2EE8               	decfsz	wreg,f,c
  5721  0016BE  D7FE               	bra	u9147
  5722  0016C0  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5723  0016C2  D7FC               	bra	u9147
  5724                           
  5725                           ;actuators_main.c: 380:             LATA = 0b00001100;
  5726  0016C4  0E0C               	movlw	12
  5727  0016C6  6E89               	movwf	3977,c	;volatile
  5728                           
  5729                           ;actuators_main.c: 381:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5730  0016C8  0E1E               	movlw	30
  5731  0016CA  0100               	movlb	0	; () banked
  5732  0016CC  6FFB               	movwf	??_full_drive& (0+255),b
  5733  0016CE  0E37               	movlw	55
  5734  0016D0                     u9157:
  5735  0016D0  2EE8               	decfsz	wreg,f,c
  5736  0016D2  D7FE               	bra	u9157
  5737  0016D4  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5738  0016D6  D7FC               	bra	u9157
  5739                           
  5740                           ;actuators_main.c: 382:             LATA = 0b00000110;
  5741  0016D8  0E06               	movlw	6
  5742  0016DA  6E89               	movwf	3977,c	;volatile
  5743                           
  5744                           ;actuators_main.c: 383:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5745  0016DC  0E1E               	movlw	30
  5746  0016DE  0100               	movlb	0	; () banked
  5747  0016E0  6FFB               	movwf	??_full_drive& (0+255),b
  5748  0016E2  0E37               	movlw	55
  5749  0016E4                     u9167:
  5750  0016E4  2EE8               	decfsz	wreg,f,c
  5751  0016E6  D7FE               	bra	u9167
  5752  0016E8  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5753  0016EA  D7FC               	bra	u9167
  5754                           
  5755                           ;actuators_main.c: 384:             LATA = 0b00000011;
  5756  0016EC  0E03               	movlw	3
  5757  0016EE  6E89               	movwf	3977,c	;volatile
  5758                           
  5759                           ;actuators_main.c: 385:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5760  0016F0  0E1E               	movlw	30
  5761  0016F2  0100               	movlb	0	; () banked
  5762  0016F4  6FFB               	movwf	??_full_drive& (0+255),b
  5763  0016F6  0E37               	movlw	55
  5764  0016F8                     u9177:
  5765  0016F8  2EE8               	decfsz	wreg,f,c
  5766  0016FA  D7FE               	bra	u9177
  5767  0016FC  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5768  0016FE  D7FC               	bra	u9177
  5769                           
  5770                           ;actuators_main.c: 386:             LATA = 0b00001001;
  5771  001700  0E09               	movlw	9
  5772  001702  6E89               	movwf	3977,c	;volatile
  5773                           
  5774                           ;actuators_main.c: 387:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5775  001704  0E1E               	movlw	30
  5776  001706  0100               	movlb	0	; () banked
  5777  001708  6FFB               	movwf	??_full_drive& (0+255),b
  5778  00170A  0E37               	movlw	55
  5779  00170C                     u9187:
  5780  00170C  2EE8               	decfsz	wreg,f,c
  5781  00170E  D7FE               	bra	u9187
  5782  001710  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5783  001712  D7FC               	bra	u9187
  5784  001714                     l6798:
  5785                           
  5786                           ;actuators_main.c: 390:     if (stepper_no == 2){
  5787  001714  0E02               	movlw	2
  5788  001716  0100               	movlb	0	; () banked
  5789  001718  19F9               	xorwf	full_drive@stepper_no& (0+255),w,b
  5790  00171A  11FA               	iorwf	(full_drive@stepper_no+1)& (0+255),w,b
  5791  00171C  A4D8               	btfss	status,2,c
  5792  00171E  D089               	goto	l6876
  5793                           
  5794                           ; BSR set to: 0
  5795                           ;actuators_main.c: 391:         if (direction == 1){
  5796  001720  05FC               	decf	full_drive@direction& (0+255),w,b
  5797  001722  A4D8               	btfss	status,2,c
  5798  001724  D041               	goto	l6838
  5799                           
  5800                           ; BSR set to: 0
  5801                           ;actuators_main.c: 392:             LATCbits.LATC0 = 1;
  5802  001726  808B               	bsf	3979,0,c	;volatile
  5803                           
  5804                           ;actuators_main.c: 393:             LATEbits.LATE0 = 1;
  5805  001728  808D               	bsf	3981,0,c	;volatile
  5806                           
  5807                           ;actuators_main.c: 394:             LATEbits.LATE1 = 0;
  5808  00172A  928D               	bcf	3981,1,c	;volatile
  5809                           
  5810                           ;actuators_main.c: 395:             LATEbits.LATE2 = 0;
  5811  00172C  948D               	bcf	3981,2,c	;volatile
  5812                           
  5813                           ; BSR set to: 0
  5814                           ;actuators_main.c: 396:             _delay((unsigned long)((4)*(10000000/4000.0)));
  5815  00172E  0E0D               	movlw	13
  5816  001730  0100               	movlb	0	; () banked
  5817  001732  6FFB               	movwf	??_full_drive& (0+255),b
  5818  001734  0EFB               	movlw	251
  5819  001736                     u9197:
  5820  001736  2EE8               	decfsz	wreg,f,c
  5821  001738  D7FE               	bra	u9197
  5822  00173A  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5823  00173C  D7FC               	bra	u9197
  5824  00173E  D000               	nop2	
  5825                           
  5826                           ;actuators_main.c: 397:             LATCbits.LATC0 = 0;
  5827  001740  908B               	bcf	3979,0,c	;volatile
  5828                           
  5829                           ;actuators_main.c: 398:             LATEbits.LATE0 = 1;
  5830  001742  808D               	bsf	3981,0,c	;volatile
  5831                           
  5832                           ;actuators_main.c: 399:             LATEbits.LATE1 = 1;
  5833  001744  828D               	bsf	3981,1,c	;volatile
  5834                           
  5835                           ;actuators_main.c: 400:             LATEbits.LATE2 = 0;
  5836  001746  948D               	bcf	3981,2,c	;volatile
  5837                           
  5838                           ;actuators_main.c: 401:             _delay((unsigned long)((4)*(10000000/4000.0)));
  5839  001748  0E0D               	movlw	13
  5840  00174A  0100               	movlb	0	; () banked
  5841  00174C  6FFB               	movwf	??_full_drive& (0+255),b
  5842  00174E  0EFB               	movlw	251
  5843  001750                     u9207:
  5844  001750  2EE8               	decfsz	wreg,f,c
  5845  001752  D7FE               	bra	u9207
  5846  001754  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5847  001756  D7FC               	bra	u9207
  5848  001758  D000               	nop2	
  5849                           
  5850                           ;actuators_main.c: 402:             LATCbits.LATC0 = 0;
  5851  00175A  908B               	bcf	3979,0,c	;volatile
  5852                           
  5853                           ;actuators_main.c: 403:             LATEbits.LATE0 = 0;
  5854  00175C  908D               	bcf	3981,0,c	;volatile
  5855                           
  5856                           ;actuators_main.c: 404:             LATEbits.LATE1 = 1;
  5857  00175E  828D               	bsf	3981,1,c	;volatile
  5858                           
  5859                           ;actuators_main.c: 405:             LATEbits.LATE2 = 1;
  5860  001760  848D               	bsf	3981,2,c	;volatile
  5861                           
  5862                           ;actuators_main.c: 406:             _delay((unsigned long)((4)*(10000000/4000.0)));
  5863  001762  0E0D               	movlw	13
  5864  001764  0100               	movlb	0	; () banked
  5865  001766  6FFB               	movwf	??_full_drive& (0+255),b
  5866  001768  0EFB               	movlw	251
  5867  00176A                     u9217:
  5868  00176A  2EE8               	decfsz	wreg,f,c
  5869  00176C  D7FE               	bra	u9217
  5870  00176E  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5871  001770  D7FC               	bra	u9217
  5872  001772  D000               	nop2	
  5873                           
  5874                           ;actuators_main.c: 407:             LATCbits.LATC0 = 1;
  5875  001774  808B               	bsf	3979,0,c	;volatile
  5876                           
  5877                           ;actuators_main.c: 408:             LATEbits.LATE0 = 0;
  5878  001776  908D               	bcf	3981,0,c	;volatile
  5879                           
  5880                           ;actuators_main.c: 409:             LATEbits.LATE1 = 0;
  5881  001778  928D               	bcf	3981,1,c	;volatile
  5882                           
  5883                           ;actuators_main.c: 410:             LATEbits.LATE2 = 1;
  5884  00177A  848D               	bsf	3981,2,c	;volatile
  5885                           
  5886                           ;actuators_main.c: 411:             _delay((unsigned long)((4)*(10000000/4000.0)));
  5887  00177C  0E0D               	movlw	13
  5888  00177E  0100               	movlb	0	; () banked
  5889  001780  6FFB               	movwf	??_full_drive& (0+255),b
  5890  001782  0EFB               	movlw	251
  5891  001784                     u9227:
  5892  001784  2EE8               	decfsz	wreg,f,c
  5893  001786  D7FE               	bra	u9227
  5894  001788  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5895  00178A  D7FC               	bra	u9227
  5896  00178C  D000               	nop2	
  5897                           
  5898                           ;actuators_main.c: 412:             LATCbits.LATC0 = 1;
  5899  00178E  808B               	bsf	3979,0,c	;volatile
  5900                           
  5901                           ;actuators_main.c: 413:             LATEbits.LATE0 = 1;
  5902  001790  808D               	bsf	3981,0,c	;volatile
  5903                           
  5904                           ;actuators_main.c: 414:             LATEbits.LATE1 = 0;
  5905  001792  928D               	bcf	3981,1,c	;volatile
  5906                           
  5907                           ;actuators_main.c: 415:             LATEbits.LATE2 = 0;
  5908  001794  948D               	bcf	3981,2,c	;volatile
  5909                           
  5910                           ;actuators_main.c: 416:             _delay((unsigned long)((4)*(10000000/4000.0)));
  5911  001796  0E0D               	movlw	13
  5912  001798  0100               	movlb	0	; () banked
  5913  00179A  6FFB               	movwf	??_full_drive& (0+255),b
  5914  00179C  0EFB               	movlw	251
  5915  00179E                     u9237:
  5916  00179E  2EE8               	decfsz	wreg,f,c
  5917  0017A0  D7FE               	bra	u9237
  5918  0017A2  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5919  0017A4  D7FC               	bra	u9237
  5920  0017A6  D000               	nop2	
  5921  0017A8                     l6838:
  5922                           
  5923                           ;actuators_main.c: 418:         if (direction == 0){
  5924  0017A8  0100               	movlb	0	; () banked
  5925  0017AA  51FC               	movf	full_drive@direction& (0+255),w,b
  5926  0017AC  A4D8               	btfss	status,2,c
  5927  0017AE  D041               	goto	l6876
  5928                           
  5929                           ; BSR set to: 0
  5930                           ;actuators_main.c: 419:             LATCbits.LATC0 = 1;
  5931  0017B0  808B               	bsf	3979,0,c	;volatile
  5932                           
  5933                           ;actuators_main.c: 420:             LATEbits.LATE0 = 0;
  5934  0017B2  908D               	bcf	3981,0,c	;volatile
  5935                           
  5936                           ;actuators_main.c: 421:             LATEbits.LATE1 = 0;
  5937  0017B4  928D               	bcf	3981,1,c	;volatile
  5938                           
  5939                           ;actuators_main.c: 422:             LATEbits.LATE2 = 1;
  5940  0017B6  848D               	bsf	3981,2,c	;volatile
  5941                           
  5942                           ; BSR set to: 0
  5943                           ;actuators_main.c: 423:             _delay((unsigned long)((4)*(10000000/4000.0)));
  5944  0017B8  0E0D               	movlw	13
  5945  0017BA  0100               	movlb	0	; () banked
  5946  0017BC  6FFB               	movwf	??_full_drive& (0+255),b
  5947  0017BE  0EFB               	movlw	251
  5948  0017C0                     u9247:
  5949  0017C0  2EE8               	decfsz	wreg,f,c
  5950  0017C2  D7FE               	bra	u9247
  5951  0017C4  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5952  0017C6  D7FC               	bra	u9247
  5953  0017C8  D000               	nop2	
  5954                           
  5955                           ;actuators_main.c: 424:             LATCbits.LATC0 = 0;
  5956  0017CA  908B               	bcf	3979,0,c	;volatile
  5957                           
  5958                           ;actuators_main.c: 425:             LATEbits.LATE0 = 0;
  5959  0017CC  908D               	bcf	3981,0,c	;volatile
  5960                           
  5961                           ;actuators_main.c: 426:             LATEbits.LATE1 = 1;
  5962  0017CE  828D               	bsf	3981,1,c	;volatile
  5963                           
  5964                           ;actuators_main.c: 427:             LATEbits.LATE2 = 1;
  5965  0017D0  848D               	bsf	3981,2,c	;volatile
  5966                           
  5967                           ;actuators_main.c: 428:             _delay((unsigned long)((4)*(10000000/4000.0)));
  5968  0017D2  0E0D               	movlw	13
  5969  0017D4  0100               	movlb	0	; () banked
  5970  0017D6  6FFB               	movwf	??_full_drive& (0+255),b
  5971  0017D8  0EFB               	movlw	251
  5972  0017DA                     u9257:
  5973  0017DA  2EE8               	decfsz	wreg,f,c
  5974  0017DC  D7FE               	bra	u9257
  5975  0017DE  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5976  0017E0  D7FC               	bra	u9257
  5977  0017E2  D000               	nop2	
  5978                           
  5979                           ;actuators_main.c: 429:             LATCbits.LATC0 = 0;
  5980  0017E4  908B               	bcf	3979,0,c	;volatile
  5981                           
  5982                           ;actuators_main.c: 430:             LATEbits.LATE0 = 1;
  5983  0017E6  808D               	bsf	3981,0,c	;volatile
  5984                           
  5985                           ;actuators_main.c: 431:             LATEbits.LATE1 = 1;
  5986  0017E8  828D               	bsf	3981,1,c	;volatile
  5987                           
  5988                           ;actuators_main.c: 432:             LATEbits.LATE2 = 0;
  5989  0017EA  948D               	bcf	3981,2,c	;volatile
  5990                           
  5991                           ;actuators_main.c: 433:             _delay((unsigned long)((4)*(10000000/4000.0)));
  5992  0017EC  0E0D               	movlw	13
  5993  0017EE  0100               	movlb	0	; () banked
  5994  0017F0  6FFB               	movwf	??_full_drive& (0+255),b
  5995  0017F2  0EFB               	movlw	251
  5996  0017F4                     u9267:
  5997  0017F4  2EE8               	decfsz	wreg,f,c
  5998  0017F6  D7FE               	bra	u9267
  5999  0017F8  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6000  0017FA  D7FC               	bra	u9267
  6001  0017FC  D000               	nop2	
  6002                           
  6003                           ;actuators_main.c: 434:             LATCbits.LATC0 = 1;
  6004  0017FE  808B               	bsf	3979,0,c	;volatile
  6005                           
  6006                           ;actuators_main.c: 435:             LATEbits.LATE0 = 1;
  6007  001800  808D               	bsf	3981,0,c	;volatile
  6008                           
  6009                           ;actuators_main.c: 436:             LATEbits.LATE1 = 0;
  6010  001802  928D               	bcf	3981,1,c	;volatile
  6011                           
  6012                           ;actuators_main.c: 437:             LATEbits.LATE2 = 0;
  6013  001804  948D               	bcf	3981,2,c	;volatile
  6014                           
  6015                           ;actuators_main.c: 438:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6016  001806  0E0D               	movlw	13
  6017  001808  0100               	movlb	0	; () banked
  6018  00180A  6FFB               	movwf	??_full_drive& (0+255),b
  6019  00180C  0EFB               	movlw	251
  6020  00180E                     u9277:
  6021  00180E  2EE8               	decfsz	wreg,f,c
  6022  001810  D7FE               	bra	u9277
  6023  001812  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6024  001814  D7FC               	bra	u9277
  6025  001816  D000               	nop2	
  6026                           
  6027                           ;actuators_main.c: 439:             LATCbits.LATC0 = 1;
  6028  001818  808B               	bsf	3979,0,c	;volatile
  6029                           
  6030                           ;actuators_main.c: 440:             LATEbits.LATE0 = 0;
  6031  00181A  908D               	bcf	3981,0,c	;volatile
  6032                           
  6033                           ;actuators_main.c: 441:             LATEbits.LATE1 = 0;
  6034  00181C  928D               	bcf	3981,1,c	;volatile
  6035                           
  6036                           ;actuators_main.c: 442:             LATEbits.LATE2 = 1;
  6037  00181E  848D               	bsf	3981,2,c	;volatile
  6038                           
  6039                           ;actuators_main.c: 443:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6040  001820  0E0D               	movlw	13
  6041  001822  0100               	movlb	0	; () banked
  6042  001824  6FFB               	movwf	??_full_drive& (0+255),b
  6043  001826  0EFB               	movlw	251
  6044  001828                     u9287:
  6045  001828  2EE8               	decfsz	wreg,f,c
  6046  00182A  D7FE               	bra	u9287
  6047  00182C  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6048  00182E  D7FC               	bra	u9287
  6049  001830  D000               	nop2	
  6050  001832                     l6876:
  6051                           
  6052                           ;actuators_main.c: 446:     if (stepper_no == 3){
  6053  001832  0E03               	movlw	3
  6054  001834  0100               	movlb	0	; () banked
  6055  001836  19F9               	xorwf	full_drive@stepper_no& (0+255),w,b
  6056  001838  11FA               	iorwf	(full_drive@stepper_no+1)& (0+255),w,b
  6057  00183A  A4D8               	btfss	status,2,c
  6058  00183C  D086               	goto	l6956
  6059                           
  6060                           ; BSR set to: 0
  6061                           ;actuators_main.c: 447:         printf("what");
  6062  00183E  0EF9               	movlw	low STR_9
  6063  001840  6FED               	movwf	printf@fmt& (0+255),b
  6064  001842  0EFF               	movlw	high STR_9
  6065  001844  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6066  001846  EC0D  F01D         	call	_printf	;wreg free
  6067                           
  6068                           ;actuators_main.c: 448:         if (direction == 0){
  6069  00184A  0100               	movlb	0	; () banked
  6070  00184C  51FC               	movf	full_drive@direction& (0+255),w,b
  6071  00184E  A4D8               	btfss	status,2,c
  6072  001850  D03C               	goto	l6918
  6073                           
  6074                           ; BSR set to: 0
  6075                           ;actuators_main.c: 449:             LATCbits.LATC5 = 1;
  6076  001852  8A8B               	bsf	3979,5,c	;volatile
  6077                           
  6078                           ;actuators_main.c: 450:             LATCbits.LATC6 = 0;
  6079  001854  9C8B               	bcf	3979,6,c	;volatile
  6080                           
  6081                           ;actuators_main.c: 451:             LATCbits.LATC7 = 0;
  6082  001856  9E8B               	bcf	3979,7,c	;volatile
  6083                           
  6084                           ;actuators_main.c: 452:             LATAbits.LATA5 = 1;
  6085  001858  8A89               	bsf	3977,5,c	;volatile
  6086                           
  6087                           ; BSR set to: 0
  6088                           ;actuators_main.c: 453:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6089  00185A  0E1E               	movlw	30
  6090  00185C  0100               	movlb	0	; () banked
  6091  00185E  6FFB               	movwf	??_full_drive& (0+255),b
  6092  001860  0E37               	movlw	55
  6093  001862                     u9297:
  6094  001862  2EE8               	decfsz	wreg,f,c
  6095  001864  D7FE               	bra	u9297
  6096  001866  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6097  001868  D7FC               	bra	u9297
  6098                           
  6099                           ;actuators_main.c: 454:             LATCbits.LATC5 = 1;
  6100  00186A  8A8B               	bsf	3979,5,c	;volatile
  6101                           
  6102                           ;actuators_main.c: 455:             LATCbits.LATC6 = 1;
  6103  00186C  8C8B               	bsf	3979,6,c	;volatile
  6104                           
  6105                           ;actuators_main.c: 456:             LATCbits.LATC7 = 0;
  6106  00186E  9E8B               	bcf	3979,7,c	;volatile
  6107                           
  6108                           ;actuators_main.c: 457:             LATAbits.LATA5 = 0;
  6109  001870  9A89               	bcf	3977,5,c	;volatile
  6110                           
  6111                           ;actuators_main.c: 458:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6112  001872  0E1E               	movlw	30
  6113  001874  0100               	movlb	0	; () banked
  6114  001876  6FFB               	movwf	??_full_drive& (0+255),b
  6115  001878  0E37               	movlw	55
  6116  00187A                     u9307:
  6117  00187A  2EE8               	decfsz	wreg,f,c
  6118  00187C  D7FE               	bra	u9307
  6119  00187E  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6120  001880  D7FC               	bra	u9307
  6121                           
  6122                           ;actuators_main.c: 459:             LATCbits.LATC5 = 0;
  6123  001882  9A8B               	bcf	3979,5,c	;volatile
  6124                           
  6125                           ;actuators_main.c: 460:             LATCbits.LATC6 = 1;
  6126  001884  8C8B               	bsf	3979,6,c	;volatile
  6127                           
  6128                           ;actuators_main.c: 461:             LATCbits.LATC7 = 1;
  6129  001886  8E8B               	bsf	3979,7,c	;volatile
  6130                           
  6131                           ;actuators_main.c: 462:             LATAbits.LATA5 = 0;
  6132  001888  9A89               	bcf	3977,5,c	;volatile
  6133                           
  6134                           ;actuators_main.c: 463:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6135  00188A  0E1E               	movlw	30
  6136  00188C  0100               	movlb	0	; () banked
  6137  00188E  6FFB               	movwf	??_full_drive& (0+255),b
  6138  001890  0E37               	movlw	55
  6139  001892                     u9317:
  6140  001892  2EE8               	decfsz	wreg,f,c
  6141  001894  D7FE               	bra	u9317
  6142  001896  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6143  001898  D7FC               	bra	u9317
  6144                           
  6145                           ;actuators_main.c: 464:             LATCbits.LATC5 = 0;
  6146  00189A  9A8B               	bcf	3979,5,c	;volatile
  6147                           
  6148                           ;actuators_main.c: 465:             LATCbits.LATC6 = 0;
  6149  00189C  9C8B               	bcf	3979,6,c	;volatile
  6150                           
  6151                           ;actuators_main.c: 466:             LATCbits.LATC7 = 1;
  6152  00189E  8E8B               	bsf	3979,7,c	;volatile
  6153                           
  6154                           ;actuators_main.c: 467:             LATAbits.LATA5 = 1;
  6155  0018A0  8A89               	bsf	3977,5,c	;volatile
  6156                           
  6157                           ;actuators_main.c: 468:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6158  0018A2  0E1E               	movlw	30
  6159  0018A4  0100               	movlb	0	; () banked
  6160  0018A6  6FFB               	movwf	??_full_drive& (0+255),b
  6161  0018A8  0E37               	movlw	55
  6162  0018AA                     u9327:
  6163  0018AA  2EE8               	decfsz	wreg,f,c
  6164  0018AC  D7FE               	bra	u9327
  6165  0018AE  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6166  0018B0  D7FC               	bra	u9327
  6167                           
  6168                           ;actuators_main.c: 469:             LATCbits.LATC5 = 1;
  6169  0018B2  8A8B               	bsf	3979,5,c	;volatile
  6170                           
  6171                           ;actuators_main.c: 470:             LATCbits.LATC6 = 0;
  6172  0018B4  9C8B               	bcf	3979,6,c	;volatile
  6173                           
  6174                           ;actuators_main.c: 471:             LATCbits.LATC7 = 0;
  6175  0018B6  9E8B               	bcf	3979,7,c	;volatile
  6176                           
  6177                           ;actuators_main.c: 472:             LATAbits.LATA5 = 1;
  6178  0018B8  8A89               	bsf	3977,5,c	;volatile
  6179                           
  6180                           ;actuators_main.c: 473:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6181  0018BA  0E1E               	movlw	30
  6182  0018BC  0100               	movlb	0	; () banked
  6183  0018BE  6FFB               	movwf	??_full_drive& (0+255),b
  6184  0018C0  0E37               	movlw	55
  6185  0018C2                     u9337:
  6186  0018C2  2EE8               	decfsz	wreg,f,c
  6187  0018C4  D7FE               	bra	u9337
  6188  0018C6  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6189  0018C8  D7FC               	bra	u9337
  6190  0018CA                     l6918:
  6191                           
  6192                           ;actuators_main.c: 475:         if (direction == 1){
  6193  0018CA  0100               	movlb	0	; () banked
  6194  0018CC  05FC               	decf	full_drive@direction& (0+255),w,b
  6195  0018CE  A4D8               	btfss	status,2,c
  6196  0018D0  D03C               	goto	l6956
  6197                           
  6198                           ; BSR set to: 0
  6199                           ;actuators_main.c: 476:             LATCbits.LATC5 = 1;
  6200  0018D2  8A8B               	bsf	3979,5,c	;volatile
  6201                           
  6202                           ;actuators_main.c: 477:             LATCbits.LATC6 = 1;
  6203  0018D4  8C8B               	bsf	3979,6,c	;volatile
  6204                           
  6205                           ;actuators_main.c: 478:             LATCbits.LATC7 = 0;
  6206  0018D6  9E8B               	bcf	3979,7,c	;volatile
  6207                           
  6208                           ;actuators_main.c: 479:             LATAbits.LATA5 = 0;
  6209  0018D8  9A89               	bcf	3977,5,c	;volatile
  6210                           
  6211                           ; BSR set to: 0
  6212                           ;actuators_main.c: 480:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6213  0018DA  0E1E               	movlw	30
  6214  0018DC  0100               	movlb	0	; () banked
  6215  0018DE  6FFB               	movwf	??_full_drive& (0+255),b
  6216  0018E0  0E37               	movlw	55
  6217  0018E2                     u9347:
  6218  0018E2  2EE8               	decfsz	wreg,f,c
  6219  0018E4  D7FE               	bra	u9347
  6220  0018E6  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6221  0018E8  D7FC               	bra	u9347
  6222                           
  6223                           ;actuators_main.c: 481:             LATCbits.LATC5 = 0;
  6224  0018EA  9A8B               	bcf	3979,5,c	;volatile
  6225                           
  6226                           ;actuators_main.c: 482:             LATCbits.LATC6 = 1;
  6227  0018EC  8C8B               	bsf	3979,6,c	;volatile
  6228                           
  6229                           ;actuators_main.c: 483:             LATCbits.LATC7 = 1;
  6230  0018EE  8E8B               	bsf	3979,7,c	;volatile
  6231                           
  6232                           ;actuators_main.c: 484:             LATAbits.LATA5 = 0;
  6233  0018F0  9A89               	bcf	3977,5,c	;volatile
  6234                           
  6235                           ;actuators_main.c: 485:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6236  0018F2  0E1E               	movlw	30
  6237  0018F4  0100               	movlb	0	; () banked
  6238  0018F6  6FFB               	movwf	??_full_drive& (0+255),b
  6239  0018F8  0E37               	movlw	55
  6240  0018FA                     u9357:
  6241  0018FA  2EE8               	decfsz	wreg,f,c
  6242  0018FC  D7FE               	bra	u9357
  6243  0018FE  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6244  001900  D7FC               	bra	u9357
  6245                           
  6246                           ;actuators_main.c: 486:             LATCbits.LATC5 = 0;
  6247  001902  9A8B               	bcf	3979,5,c	;volatile
  6248                           
  6249                           ;actuators_main.c: 487:             LATCbits.LATC6 = 0;
  6250  001904  9C8B               	bcf	3979,6,c	;volatile
  6251                           
  6252                           ;actuators_main.c: 488:             LATCbits.LATC7 = 1;
  6253  001906  8E8B               	bsf	3979,7,c	;volatile
  6254                           
  6255                           ;actuators_main.c: 489:             LATAbits.LATA5 = 1;
  6256  001908  8A89               	bsf	3977,5,c	;volatile
  6257                           
  6258                           ;actuators_main.c: 490:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6259  00190A  0E1E               	movlw	30
  6260  00190C  0100               	movlb	0	; () banked
  6261  00190E  6FFB               	movwf	??_full_drive& (0+255),b
  6262  001910  0E37               	movlw	55
  6263  001912                     u9367:
  6264  001912  2EE8               	decfsz	wreg,f,c
  6265  001914  D7FE               	bra	u9367
  6266  001916  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6267  001918  D7FC               	bra	u9367
  6268                           
  6269                           ;actuators_main.c: 491:             LATCbits.LATC5 = 1;
  6270  00191A  8A8B               	bsf	3979,5,c	;volatile
  6271                           
  6272                           ;actuators_main.c: 492:             LATCbits.LATC6 = 0;
  6273  00191C  9C8B               	bcf	3979,6,c	;volatile
  6274                           
  6275                           ;actuators_main.c: 493:             LATCbits.LATC7 = 0;
  6276  00191E  9E8B               	bcf	3979,7,c	;volatile
  6277                           
  6278                           ;actuators_main.c: 494:             LATAbits.LATA5 = 1;
  6279  001920  8A89               	bsf	3977,5,c	;volatile
  6280                           
  6281                           ;actuators_main.c: 495:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6282  001922  0E1E               	movlw	30
  6283  001924  0100               	movlb	0	; () banked
  6284  001926  6FFB               	movwf	??_full_drive& (0+255),b
  6285  001928  0E37               	movlw	55
  6286  00192A                     u9377:
  6287  00192A  2EE8               	decfsz	wreg,f,c
  6288  00192C  D7FE               	bra	u9377
  6289  00192E  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6290  001930  D7FC               	bra	u9377
  6291                           
  6292                           ;actuators_main.c: 496:             LATCbits.LATC5 = 1;
  6293  001932  8A8B               	bsf	3979,5,c	;volatile
  6294                           
  6295                           ;actuators_main.c: 497:             LATCbits.LATC6 = 1;
  6296  001934  8C8B               	bsf	3979,6,c	;volatile
  6297                           
  6298                           ;actuators_main.c: 498:             LATCbits.LATC7 = 0;
  6299  001936  9E8B               	bcf	3979,7,c	;volatile
  6300                           
  6301                           ;actuators_main.c: 499:             LATAbits.LATA5 = 0;
  6302  001938  9A89               	bcf	3977,5,c	;volatile
  6303                           
  6304                           ;actuators_main.c: 500:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6305  00193A  0E1E               	movlw	30
  6306  00193C  0100               	movlb	0	; () banked
  6307  00193E  6FFB               	movwf	??_full_drive& (0+255),b
  6308  001940  0E37               	movlw	55
  6309  001942                     u9387:
  6310  001942  2EE8               	decfsz	wreg,f,c
  6311  001944  D7FE               	bra	u9387
  6312  001946  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6313  001948  D7FC               	bra	u9387
  6314  00194A                     l6956:
  6315                           
  6316                           ;actuators_main.c: 503:                     LATA = 0b00000000;
  6317  00194A  0E00               	movlw	0
  6318  00194C  6E89               	movwf	3977,c	;volatile
  6319                           
  6320                           ;actuators_main.c: 504:         LATCbits.LATC0 = 0;
  6321  00194E  908B               	bcf	3979,0,c	;volatile
  6322                           
  6323                           ;actuators_main.c: 505:         LATEbits.LATE0 = 0;
  6324  001950  908D               	bcf	3981,0,c	;volatile
  6325                           
  6326                           ;actuators_main.c: 506:         LATEbits.LATE1 = 0;
  6327  001952  928D               	bcf	3981,1,c	;volatile
  6328                           
  6329                           ;actuators_main.c: 507:         LATEbits.LATE2 = 0;
  6330  001954  948D               	bcf	3981,2,c	;volatile
  6331                           
  6332                           ;actuators_main.c: 508:         LATCbits.LATC5 = 0;
  6333  001956  9A8B               	bcf	3979,5,c	;volatile
  6334                           
  6335                           ;actuators_main.c: 509:         LATCbits.LATC6 = 0;
  6336  001958  9C8B               	bcf	3979,6,c	;volatile
  6337                           
  6338                           ;actuators_main.c: 510:         LATCbits.LATC7 = 0;
  6339  00195A  9E8B               	bcf	3979,7,c	;volatile
  6340                           
  6341                           ;actuators_main.c: 511:         LATAbits.LATA5 = 0;
  6342  00195C  9A89               	bcf	3977,5,c	;volatile
  6343  00195E  0012               	return		;funcret
  6344  001960                     __end_of_full_drive:
  6345                           	opt callstack 0
  6346                           
  6347 ;; *************** function _servo *****************
  6348 ;; Defined at:
  6349 ;;		line 165 in file "actuators_main.c"
  6350 ;; Parameters:    Size  Location     Type
  6351 ;;		None
  6352 ;; Auto vars:     Size  Location     Type
  6353 ;;		None
  6354 ;; Return value:  Size  Location     Type
  6355 ;;                  1    wreg      void 
  6356 ;; Registers used:
  6357 ;;		wreg, status,2, status,0, cstack
  6358 ;; Tracked objects:
  6359 ;;		On entry : 0/0
  6360 ;;		On exit  : 0/0
  6361 ;;		Unchanged: 0/0
  6362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6365 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6366 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6367 ;;Total ram usage:        2 bytes
  6368 ;; Hardware stack levels used:    1
  6369 ;; Hardware stack levels required when called:    4
  6370 ;; This function calls:
  6371 ;;		_servoRotate0
  6372 ;;		_servoRotate180
  6373 ;; This function is called by:
  6374 ;;		_actuators_main
  6375 ;; This function uses a non-reentrant model
  6376 ;;
  6377                           
  6378                           	psect	text16
  6379  0039C4                     __ptext16:
  6380                           	opt callstack 0
  6381  0039C4                     _servo:
  6382                           	opt callstack 25
  6383                           
  6384                           ;actuators_main.c: 167:   TRISC = 0;
  6385                           
  6386                           ;incstack = 0
  6387  0039C4  0E00               	movlw	0
  6388  0039C6  6E94               	movwf	3988,c	;volatile
  6389                           
  6390                           ;actuators_main.c: 168:   {;actuators_main.c: 170:     servoRotate0();
  6391  0039C8  EC70  F01B         	call	_servoRotate0	;wreg free
  6392                           
  6393                           ;actuators_main.c: 174:     servoRotate180();
  6394  0039CC  ECF1  F01A         	call	_servoRotate180	;wreg free
  6395                           
  6396                           ;actuators_main.c: 176:     _delay((unsigned long)((500)*(10000000/4000.0)));
  6397  0039D0  0E07               	movlw	7
  6398  0039D2  0100               	movlb	0	; () banked
  6399  0039D4  6F84               	movwf	(??_servo+1)& (0+255),b
  6400  0039D6  0E58               	movlw	88
  6401  0039D8  6F83               	movwf	??_servo& (0+255),b
  6402  0039DA  0E59               	movlw	89
  6403  0039DC                     u9397:
  6404  0039DC  2EE8               	decfsz	wreg,f,c
  6405  0039DE  D7FE               	bra	u9397
  6406  0039E0  2F83               	decfsz	??_servo& (0+255),f,b
  6407  0039E2  D7FC               	bra	u9397
  6408  0039E4  2F84               	decfsz	(??_servo+1)& (0+255),f,b
  6409  0039E6  D7FA               	bra	u9397
  6410  0039E8  D000               	nop2	
  6411                           
  6412                           ;actuators_main.c: 177:     servoRotate0();
  6413  0039EA  EC70  F01B         	call	_servoRotate0	;wreg free
  6414  0039EE  0012               	return		;funcret
  6415  0039F0                     __end_of_servo:
  6416                           	opt callstack 0
  6417                           
  6418 ;; *************** function _servoRotate180 *****************
  6419 ;; Defined at:
  6420 ;;		line 136 in file "actuators_main.c"
  6421 ;; Parameters:    Size  Location     Type
  6422 ;;		None
  6423 ;; Auto vars:     Size  Location     Type
  6424 ;;  i               2    1[BANK0 ] unsigned int 
  6425 ;; Return value:  Size  Location     Type
  6426 ;;                  1    wreg      void 
  6427 ;; Registers used:
  6428 ;;		wreg, status,2, status,0
  6429 ;; Tracked objects:
  6430 ;;		On entry : 0/0
  6431 ;;		On exit  : 0/0
  6432 ;;		Unchanged: 0/0
  6433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6435 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6436 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6437 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6438 ;;Total ram usage:        3 bytes
  6439 ;; Hardware stack levels used:    1
  6440 ;; Hardware stack levels required when called:    3
  6441 ;; This function calls:
  6442 ;;		Nothing
  6443 ;; This function is called by:
  6444 ;;		_servo
  6445 ;; This function uses a non-reentrant model
  6446 ;;
  6447                           
  6448                           	psect	text17
  6449  0035E2                     __ptext17:
  6450                           	opt callstack 0
  6451  0035E2                     _servoRotate180:
  6452                           	opt callstack 25
  6453                           
  6454                           ;actuators_main.c: 138:   unsigned int i;;actuators_main.c: 141: for(i=0;i<15;i++){
  6455                           
  6456                           ;incstack = 0
  6457  0035E2  0E00               	movlw	0
  6458  0035E4  0100               	movlb	0	; () banked
  6459  0035E6  6F82               	movwf	(servoRotate180@i+1)& (0+255),b
  6460  0035E8  0E00               	movlw	0
  6461  0035EA  6F81               	movwf	servoRotate180@i& (0+255),b
  6462  0035EC                     l117:
  6463                           
  6464                           ; BSR set to: 0
  6465                           ;actuators_main.c: 143:         {;actuators_main.c: 144:           RC1 = 1;
  6466  0035EC  8282               	bsf	3970,1,c	;volatile
  6467                           
  6468                           ;actuators_main.c: 145:           RC2 = 1;
  6469  0035EE  8482               	bsf	3970,2,c	;volatile
  6470                           
  6471                           ; BSR set to: 0
  6472                           ;actuators_main.c: 147:           _delay((unsigned long)((475)*(10000000/4000000.0)));
  6473  0035F0  0EED               	movlw	237
  6474  0035F2                     u9407:
  6475  0035F2  D000               	nop2	
  6476  0035F4  2EE8               	decfsz	wreg,f,c
  6477  0035F6  D7FD               	bra	u9407
  6478  0035F8  D000               	nop2	
  6479                           
  6480                           ;actuators_main.c: 148:           RC2 =0;
  6481  0035FA  9482               	bcf	3970,2,c	;volatile
  6482                           
  6483                           ;actuators_main.c: 149:           _delay((unsigned long)((2100)*(10000000/4000000.0)));
  6484  0035FC  0E07               	movlw	7
  6485  0035FE  0100               	movlb	0	; () banked
  6486  003600  6F80               	movwf	??_servoRotate180& (0+255),b
  6487  003602  0ED0               	movlw	208
  6488  003604                     u9417:
  6489  003604  2EE8               	decfsz	wreg,f,c
  6490  003606  D7FE               	bra	u9417
  6491  003608  2F80               	decfsz	??_servoRotate180& (0+255),f,b
  6492  00360A  D7FC               	bra	u9417
  6493  00360C  F000               	nop	
  6494                           
  6495                           ;actuators_main.c: 150:           RC1 = 0;
  6496  00360E  9282               	bcf	3970,1,c	;volatile
  6497                           
  6498                           ;actuators_main.c: 151:           _delay((unsigned long)((13525)*(10000000/4000000.0)));
  6499  003610  0E2C               	movlw	44
  6500  003612  0100               	movlb	0	; () banked
  6501  003614  6F80               	movwf	??_servoRotate180& (0+255),b
  6502  003616  0EE8               	movlw	232
  6503  003618                     u9427:
  6504  003618  2EE8               	decfsz	wreg,f,c
  6505  00361A  D7FE               	bra	u9427
  6506  00361C  2F80               	decfsz	??_servoRotate180& (0+255),f,b
  6507  00361E  D7FC               	bra	u9427
  6508  003620  F000               	nop	
  6509                           
  6510                           ;actuators_main.c: 152:         };actuators_main.c: 163: }
  6511  003622  0100               	movlb	0	; () banked
  6512  003624  4B81               	infsnz	servoRotate180@i& (0+255),f,b
  6513  003626  2B82               	incf	(servoRotate180@i+1)& (0+255),f,b
  6514  003628  5182               	movf	(servoRotate180@i+1)& (0+255),w,b
  6515  00362A  E105               	bnz	u7370
  6516  00362C  0E0F               	movlw	15
  6517  00362E  5D81               	subwf	servoRotate180@i& (0+255),w,b
  6518  003630  B0D8               	btfsc	status,0,c
  6519  003632  0012               	return	
  6520  003634  D7DB               	goto	l117
  6521  003636                     u7370:
  6522                           
  6523                           ; BSR set to: 0
  6524  003636  0012               	return		;funcret
  6525  003638                     __end_of_servoRotate180:
  6526                           	opt callstack 0
  6527                           
  6528 ;; *************** function _servoRotate0 *****************
  6529 ;; Defined at:
  6530 ;;		line 97 in file "actuators_main.c"
  6531 ;; Parameters:    Size  Location     Type
  6532 ;;		None
  6533 ;; Auto vars:     Size  Location     Type
  6534 ;;  i               2    1[BANK0 ] unsigned int 
  6535 ;; Return value:  Size  Location     Type
  6536 ;;                  1    wreg      void 
  6537 ;; Registers used:
  6538 ;;		wreg, status,2, status,0
  6539 ;; Tracked objects:
  6540 ;;		On entry : 0/0
  6541 ;;		On exit  : 0/0
  6542 ;;		Unchanged: 0/0
  6543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6545 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6546 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6547 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6548 ;;Total ram usage:        3 bytes
  6549 ;; Hardware stack levels used:    1
  6550 ;; Hardware stack levels required when called:    3
  6551 ;; This function calls:
  6552 ;;		Nothing
  6553 ;; This function is called by:
  6554 ;;		_servo
  6555 ;; This function uses a non-reentrant model
  6556 ;;
  6557                           
  6558                           	psect	text18
  6559  0036E0                     __ptext18:
  6560                           	opt callstack 0
  6561  0036E0                     _servoRotate0:
  6562                           	opt callstack 25
  6563                           
  6564                           ;actuators_main.c: 99:     unsigned int i;;actuators_main.c: 102:       for(i=0;i<15;i++
      +                          )
  6565                           
  6566                           ; BSR set to: 0
  6567                           ;incstack = 0
  6568  0036E0  0E00               	movlw	0
  6569  0036E2  0100               	movlb	0	; () banked
  6570  0036E4  6F82               	movwf	(servoRotate0@i+1)& (0+255),b
  6571  0036E6  0E00               	movlw	0
  6572  0036E8  6F81               	movwf	servoRotate0@i& (0+255),b
  6573  0036EA                     l112:
  6574                           
  6575                           ; BSR set to: 0
  6576                           ;actuators_main.c: 103:           {;actuators_main.c: 105:             RC1 = 1;
  6577  0036EA  8282               	bsf	3970,1,c	;volatile
  6578                           
  6579                           ;actuators_main.c: 106:             RC2 = 1;
  6580  0036EC  8482               	bsf	3970,2,c	;volatile
  6581                           
  6582                           ; BSR set to: 0
  6583                           ;actuators_main.c: 107:             _delay((unsigned long)((1100)*(10000000/4000000.0)))
      +                          ;
  6584  0036EE  0E04               	movlw	4
  6585  0036F0  0100               	movlb	0	; () banked
  6586  0036F2  6F80               	movwf	??_servoRotate0& (0+255),b
  6587  0036F4  0E91               	movlw	145
  6588  0036F6                     u9437:
  6589  0036F6  2EE8               	decfsz	wreg,f,c
  6590  0036F8  D7FE               	bra	u9437
  6591  0036FA  2F80               	decfsz	??_servoRotate0& (0+255),f,b
  6592  0036FC  D7FC               	bra	u9437
  6593                           
  6594                           ;actuators_main.c: 108:             RC2 = 0;
  6595  0036FE  9482               	bcf	3970,2,c	;volatile
  6596                           
  6597                           ;actuators_main.c: 109:             _delay((unsigned long)((300)*(10000000/4000000.0)));
  6598  003700  0EFA               	movlw	250
  6599  003702                     u9447:
  6600  003702  2EE8               	decfsz	wreg,f,c
  6601  003704  D7FE               	bra	u9447
  6602                           
  6603                           ;actuators_main.c: 110:             RC1 = 0;
  6604  003706  9282               	bcf	3970,1,c	;volatile
  6605                           
  6606                           ;actuators_main.c: 114:             _delay((unsigned long)((18600)*(10000000/4000000.0))
      +                          );
  6607  003708  0E3D               	movlw	61
  6608  00370A  0100               	movlb	0	; () banked
  6609  00370C  6F80               	movwf	??_servoRotate0& (0+255),b
  6610  00370E  0E62               	movlw	98
  6611  003710                     u9457:
  6612  003710  2EE8               	decfsz	wreg,f,c
  6613  003712  D7FE               	bra	u9457
  6614  003714  2F80               	decfsz	??_servoRotate0& (0+255),f,b
  6615  003716  D7FC               	bra	u9457
  6616  003718  F000               	nop	
  6617                           
  6618                           ;actuators_main.c: 124:           }
  6619  00371A  0100               	movlb	0	; () banked
  6620  00371C  4B81               	infsnz	servoRotate0@i& (0+255),f,b
  6621  00371E  2B82               	incf	(servoRotate0@i+1)& (0+255),f,b
  6622  003720  5182               	movf	(servoRotate0@i+1)& (0+255),w,b
  6623  003722  E105               	bnz	u7360
  6624  003724  0E0F               	movlw	15
  6625  003726  5D81               	subwf	servoRotate0@i& (0+255),w,b
  6626  003728  B0D8               	btfsc	status,0,c
  6627  00372A  0012               	return	
  6628  00372C  D7DE               	goto	l112
  6629  00372E                     u7360:
  6630                           
  6631                           ; BSR set to: 0
  6632  00372E  0012               	return		;funcret
  6633  003730                     __end_of_servoRotate0:
  6634                           	opt callstack 0
  6635                           
  6636 ;; *************** function _UI_main *****************
  6637 ;; Defined at:
  6638 ;;		line 479 in file "main.c"
  6639 ;; Parameters:    Size  Location     Type
  6640 ;;  t_dep           2  121[BANK0 ] int 
  6641 ;;  poles_detect    2  123[BANK0 ] int 
  6642 ;; Auto vars:     Size  Location     Type
  6643 ;;  i               1   89[BANK1 ] unsigned char 
  6644 ;;  keypress        1   84[BANK1 ] unsigned char 
  6645 ;;  Pole           80    4[BANK1 ] struct Poles[10]
  6646 ;;  tick            4   85[BANK1 ] unsigned long 
  6647 ;; Return value:  Size  Location     Type
  6648 ;;                  1    wreg      void 
  6649 ;; Registers used:
  6650 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6651 ;; Tracked objects:
  6652 ;;		On entry : 0/0
  6653 ;;		On exit  : 0/0
  6654 ;;		Unchanged: 0/0
  6655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6656 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6657 ;;      Locals:         0       0      86       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6658 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6659 ;;      Totals:         0       4      90       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6660 ;;Total ram usage:       94 bytes
  6661 ;; Hardware stack levels used:    1
  6662 ;; Hardware stack levels required when called:   14
  6663 ;; This function calls:
  6664 ;;		_I2C_Master_Init
  6665 ;;		_I2C_Master_Read
  6666 ;;		_I2C_Master_Start
  6667 ;;		_I2C_Master_Stop
  6668 ;;		_I2C_Master_Write
  6669 ;;		___llmod
  6670 ;;		_initLCD
  6671 ;;		_lcdInst
  6672 ;;		_printf
  6673 ;; This function is called by:
  6674 ;;		_main
  6675 ;; This function uses a non-reentrant model
  6676 ;;
  6677                           
  6678                           	psect	text19
  6679  000012                     __ptext19:
  6680                           	opt callstack 0
  6681  000012                     _UI_main:
  6682                           	opt callstack 16
  6683                           
  6684                           ;main.c: 480:     sens = 0;
  6685                           
  6686                           ; BSR set to: 0
  6687                           ;incstack = 0
  6688  000012  0E00               	movlw	0
  6689  000014  6E59               	movwf	_sens+1,c	;volatile
  6690  000016  0E00               	movlw	0
  6691  000018  6E58               	movwf	_sens,c	;volatile
  6692                           
  6693                           ;main.c: 485:     LATD = 0x00;
  6694  00001A  0E00               	movlw	0
  6695  00001C  6E8C               	movwf	3980,c	;volatile
  6696                           
  6697                           ;main.c: 486:     TRISD = 0x00;
  6698  00001E  0E00               	movlw	0
  6699  000020  6E95               	movwf	3989,c	;volatile
  6700                           
  6701                           ;main.c: 489:     TRISD = 0x00;
  6702  000022  0E00               	movlw	0
  6703  000024  6E95               	movwf	3989,c	;volatile
  6704                           
  6705                           ;main.c: 492:     INT1IE = 1;
  6706  000026  86F0               	bsf	4080,3,c	;volatile
  6707                           
  6708                           ;main.c: 495:     initLCD();
  6709  000028  ECF3  F019         	call	_initLCD	;wreg free
  6710                           
  6711                           ;main.c: 498:     (INTCONbits.GIE = 1);
  6712  00002C  8EF2               	bsf	4082,7,c	;volatile
  6713                           
  6714                           ;main.c: 500:     I2C_Master_Init(100000);
  6715  00002E  0EA0               	movlw	160
  6716  000030  0100               	movlb	0	; () banked
  6717  000032  6F8D               	movwf	I2C_Master_Init@clockFreq& (0+255),b
  6718  000034  0E86               	movlw	134
  6719  000036  6F8E               	movwf	(I2C_Master_Init@clockFreq+1)& (0+255),b
  6720  000038  0E01               	movlw	1
  6721  00003A  6F8F               	movwf	(I2C_Master_Init@clockFreq+2)& (0+255),b
  6722  00003C  0E00               	movlw	0
  6723  00003E  6F90               	movwf	(I2C_Master_Init@clockFreq+3)& (0+255),b
  6724  000040  EC96  F01A         	call	_I2C_Master_Init	;wreg free
  6725                           
  6726                           ;main.c: 501:     I2C_Master_Start();
  6727  000044  EC97  F01D         	call	_I2C_Master_Start	;wreg free
  6728                           
  6729                           ;main.c: 502:     I2C_Master_Write(0b00010000);
  6730  000048  0E00               	movlw	0
  6731  00004A  0100               	movlb	0	; () banked
  6732  00004C  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  6733  00004E  0E10               	movlw	16
  6734  000050  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  6735  000052  EC8E  F01D         	call	_I2C_Master_Write	;wreg free
  6736                           
  6737                           ;main.c: 503:     I2C_Master_Stop();
  6738  000056  EC93  F01D         	call	_I2C_Master_Stop	;wreg free
  6739                           
  6740                           ;main.c: 513:     if((pressed == 0)&&(sens==0)){
  6741  00005A  0101               	movlb	1	; () banked
  6742  00005C  516B               	movf	_pressed& (0+255),w,b
  6743  00005E  116C               	iorwf	(_pressed+1)& (0+255),w,b
  6744  000060  A4D8               	btfss	status,2,c
  6745  000062  D3DC               	goto	u8460
  6746                           
  6747                           ; BSR set to: 1
  6748  000064  5058               	movf	_sens,w,c	;volatile
  6749  000066  1059               	iorwf	_sens+1,w,c	;volatile
  6750  000068  A4D8               	btfss	status,2,c
  6751  00006A  D3D8               	goto	u8460
  6752                           
  6753                           ; BSR set to: 1
  6754                           ;main.c: 514:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  6755  00006C  0E01               	movlw	1
  6756  00006E  EC86  F01D         	call	_lcdInst
  6757  000072  0E11               	movlw	17
  6758  000074  0101               	movlb	1	; () banked
  6759  000076  6F00               	movwf	??_UI_main& (0+255),b
  6760  000078  0E3A               	movlw	58
  6761  00007A                     u9467:
  6762  00007A  2EE8               	decfsz	wreg,f,c
  6763  00007C  D7FE               	bra	u9467
  6764  00007E  2F00               	decfsz	??_UI_main& (0+255),f,b
  6765  000080  D7FC               	bra	u9467
  6766  000082  F000               	nop	
  6767                           
  6768                           ;main.c: 515:         printf("1 - Start");
  6769  000084  0EC4               	movlw	low STR_24
  6770  000086  0100               	movlb	0	; () banked
  6771  000088  6FED               	movwf	printf@fmt& (0+255),b
  6772  00008A  0EFF               	movlw	high STR_24
  6773  00008C  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6774  00008E  EC0D  F01D         	call	_printf	;wreg free
  6775  000092  0EC0               	movlw	192
  6776  000094  EC86  F01D         	call	_lcdInst
  6777                           
  6778                           ;main.c: 517:         printf("2 - Summary");
  6779  000098  0E46               	movlw	low STR_25
  6780  00009A  0100               	movlb	0	; () banked
  6781  00009C  6FED               	movwf	printf@fmt& (0+255),b
  6782  00009E  0EFF               	movlw	high STR_25
  6783  0000A0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6784  0000A2  EC0D  F01D         	call	_printf	;wreg free
  6785  0000A6  0E90               	movlw	144
  6786  0000A8  EC86  F01D         	call	_lcdInst
  6787                           
  6788                           ;main.c: 519:         printf("3 - Date&Time ");
  6789  0000AC  0E7A               	movlw	low STR_26
  6790  0000AE  0100               	movlb	0	; () banked
  6791  0000B0  6FED               	movwf	printf@fmt& (0+255),b
  6792  0000B2  0EFE               	movlw	high STR_26
  6793  0000B4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6794  0000B6  EC0D  F01D         	call	_printf	;wreg free
  6795  0000BA  D3B0               	goto	u8460
  6796  0000BC                     l7650:
  6797                           
  6798                           ;main.c: 530:         if (send){
  6799  0000BC  506D               	movf	_send,w,c
  6800  0000BE  B4D8               	btfsc	status,2,c
  6801  0000C0  D3AD               	goto	u8460
  6802                           
  6803                           ;main.c: 531:         if(key_was_pressed){
  6804  0000C2  0101               	movlb	1	; () banked
  6805  0000C4  5177               	movf	_key_was_pressed& (0+255),w,b	;volatile
  6806  0000C6  B4D8               	btfsc	status,2,c
  6807  0000C8  D3A9               	goto	u8460
  6808                           
  6809                           ; BSR set to: 1
  6810                           ;main.c: 532:             pressed = 1;
  6811  0000CA  0E00               	movlw	0
  6812  0000CC  6F6C               	movwf	(_pressed+1)& (0+255),b
  6813  0000CE  0E01               	movlw	1
  6814  0000D0  6F6B               	movwf	_pressed& (0+255),b
  6815                           
  6816                           ;main.c: 533:             key_was_pressed = 0;
  6817  0000D2  0E00               	movlw	0
  6818  0000D4  6F77               	movwf	_key_was_pressed& (0+255),b	;volatile
  6819                           
  6820                           ; BSR set to: 1
  6821                           ;main.c: 534:             unsigned char keypress = (PORTB & 0xF0) >> 4;
  6822  0000D6  3881               	swapf	3969,w,c	;volatile
  6823  0000D8  0B0F               	andlw	15
  6824  0000DA  0B0F               	andlw	15
  6825  0000DC  6F54               	movwf	UI_main@keypress& (0+255),b
  6826                           
  6827                           ; BSR set to: 1
  6828                           ;main.c: 535:             temp = keys[keypress];
  6829  0000DE  0EBB               	movlw	low _keys
  6830  0000E0  2554               	addwf	UI_main@keypress& (0+255),w,b
  6831  0000E2  6EF6               	movwf	tblptrl,c
  6832  0000E4  6AF7               	clrf	tblptrh,c
  6833  0000E6  0EFD               	movlw	high _keys
  6834  0000E8  22F7               	addwfc	tblptrh,f,c
  6835  0000EA                     	if	0	;There are less than 3 active tblptr bytes
  6836  0000EA                     	endif
  6837  0000EA  0008               	tblrd		*
  6838  0000EC  CFF5 F0FF          	movff	tablat,_temp
  6839                           
  6840                           ; BSR set to: 1
  6841                           ;main.c: 536:             temp_int = (temp-'0');
  6842  0000F0  0ED0               	movlw	208
  6843  0000F2  0100               	movlb	0	; () banked
  6844  0000F4  25FF               	addwf	_temp& (0+255),w,b
  6845  0000F6  0101               	movlb	1	; () banked
  6846  0000F8  6F73               	movwf	_temp_int& (0+255),b
  6847  0000FA  6B74               	clrf	(_temp_int+1)& (0+255),b
  6848  0000FC  0EFF               	movlw	255
  6849  0000FE  2374               	addwfc	(_temp_int+1)& (0+255),f,b
  6850                           
  6851                           ; BSR set to: 1
  6852                           ;main.c: 538:             if (temp_int == 0){
  6853  000100  5173               	movf	_temp_int& (0+255),w,b
  6854  000102  1174               	iorwf	(_temp_int+1)& (0+255),w,b
  6855  000104  A4D8               	btfss	status,2,c
  6856  000106  D02B               	goto	l7680
  6857                           
  6858                           ; BSR set to: 1
  6859                           ;main.c: 539:                 state = 0;
  6860  000108  0E00               	movlw	0
  6861  00010A  6F72               	movwf	(_state+1)& (0+255),b
  6862  00010C  0E00               	movlw	0
  6863  00010E  6F71               	movwf	_state& (0+255),b
  6864                           
  6865                           ; BSR set to: 1
  6866                           ;main.c: 540:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  6867  000110  0E01               	movlw	1
  6868  000112  EC86  F01D         	call	_lcdInst
  6869  000116  0E11               	movlw	17
  6870  000118  0101               	movlb	1	; () banked
  6871  00011A  6F00               	movwf	??_UI_main& (0+255),b
  6872  00011C  0E3A               	movlw	58
  6873  00011E                     u9477:
  6874  00011E  2EE8               	decfsz	wreg,f,c
  6875  000120  D7FE               	bra	u9477
  6876  000122  2F00               	decfsz	??_UI_main& (0+255),f,b
  6877  000124  D7FC               	bra	u9477
  6878  000126  F000               	nop	
  6879                           
  6880                           ;main.c: 541:                 printf("1 - Start");
  6881  000128  0EC4               	movlw	low STR_24
  6882  00012A  0100               	movlb	0	; () banked
  6883  00012C  6FED               	movwf	printf@fmt& (0+255),b
  6884  00012E  0EFF               	movlw	high STR_24
  6885  000130  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6886  000132  EC0D  F01D         	call	_printf	;wreg free
  6887  000136  0EC0               	movlw	192
  6888  000138  EC86  F01D         	call	_lcdInst
  6889                           
  6890                           ;main.c: 543:                 printf("2 - Summary");
  6891  00013C  0E46               	movlw	low STR_25
  6892  00013E  0100               	movlb	0	; () banked
  6893  000140  6FED               	movwf	printf@fmt& (0+255),b
  6894  000142  0EFF               	movlw	high STR_25
  6895  000144  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6896  000146  EC0D  F01D         	call	_printf	;wreg free
  6897  00014A  0E90               	movlw	144
  6898  00014C  EC86  F01D         	call	_lcdInst
  6899                           
  6900                           ;main.c: 545:                 printf("3 - Date&Time ");
  6901  000150  0E7A               	movlw	low STR_26
  6902  000152  0100               	movlb	0	; () banked
  6903  000154  6FED               	movwf	printf@fmt& (0+255),b
  6904  000156  0EFE               	movlw	high STR_26
  6905  000158  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6906  00015A  EC0D  F01D         	call	_printf	;wreg free
  6907  00015E                     l7680:
  6908                           
  6909                           ;main.c: 548:             if ((temp_int == 1)&&(temp!= '*')&&(temp!= '#')){
  6910  00015E  0101               	movlb	1	; () banked
  6911  000160  0573               	decf	_temp_int& (0+255),w,b
  6912  000162  1174               	iorwf	(_temp_int+1)& (0+255),w,b
  6913  000164  A4D8               	btfss	status,2,c
  6914  000166  D041               	goto	l7708
  6915                           
  6916                           ; BSR set to: 1
  6917  000168  0E2A               	movlw	42
  6918  00016A  0100               	movlb	0	; () banked
  6919  00016C  19FF               	xorwf	_temp& (0+255),w,b
  6920  00016E  B4D8               	btfsc	status,2,c
  6921  000170  D03C               	goto	l7708
  6922                           
  6923                           ; BSR set to: 0
  6924  000172  0E23               	movlw	35
  6925  000174  19FF               	xorwf	_temp& (0+255),w,b
  6926  000176  B4D8               	btfsc	status,2,c
  6927  000178  D038               	goto	l7708
  6928                           
  6929                           ; BSR set to: 0
  6930                           ;main.c: 549:                 state = 0;
  6931  00017A  0E00               	movlw	0
  6932  00017C  0101               	movlb	1	; () banked
  6933  00017E  6F72               	movwf	(_state+1)& (0+255),b
  6934  000180  0E00               	movlw	0
  6935  000182  6F71               	movwf	_state& (0+255),b
  6936                           
  6937                           ; BSR set to: 1
  6938                           ;main.c: 550:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  6939  000184  0E01               	movlw	1
  6940  000186  EC86  F01D         	call	_lcdInst
  6941  00018A  0E11               	movlw	17
  6942  00018C  0101               	movlb	1	; () banked
  6943  00018E  6F00               	movwf	??_UI_main& (0+255),b
  6944  000190  0E3A               	movlw	58
  6945  000192                     u9487:
  6946  000192  2EE8               	decfsz	wreg,f,c
  6947  000194  D7FE               	bra	u9487
  6948  000196  2F00               	decfsz	??_UI_main& (0+255),f,b
  6949  000198  D7FC               	bra	u9487
  6950  00019A  F000               	nop	
  6951                           
  6952                           ;main.c: 551:                 printf("Machine In Use");
  6953  00019C  0E98               	movlw	low STR_30
  6954  00019E  0100               	movlb	0	; () banked
  6955  0001A0  6FED               	movwf	printf@fmt& (0+255),b
  6956  0001A2  0EFE               	movlw	high STR_30
  6957  0001A4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6958  0001A6  EC0D  F01D         	call	_printf	;wreg free
  6959  0001AA  0ED0               	movlw	208
  6960  0001AC  EC86  F01D         	call	_lcdInst
  6961                           
  6962                           ;main.c: 553:                 printf("     0-Menu     ");
  6963  0001B0  0EE4               	movlw	low STR_31
  6964  0001B2  0100               	movlb	0	; () banked
  6965  0001B4  6FED               	movwf	printf@fmt& (0+255),b
  6966  0001B6  0EFD               	movlw	high STR_31
  6967  0001B8  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6968  0001BA  EC0D  F01D         	call	_printf	;wreg free
  6969                           
  6970                           ;main.c: 557:                 I2C_Master_Start();
  6971  0001BE  EC97  F01D         	call	_I2C_Master_Start	;wreg free
  6972                           
  6973                           ;main.c: 558:                 I2C_Master_Write(0b00010000);
  6974  0001C2  0E00               	movlw	0
  6975  0001C4  0100               	movlb	0	; () banked
  6976  0001C6  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  6977  0001C8  0E10               	movlw	16
  6978  0001CA  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  6979  0001CC  EC8E  F01D         	call	_I2C_Master_Write	;wreg free
  6980                           
  6981                           ;main.c: 559:                 I2C_Master_Write('1');
  6982  0001D0  0E00               	movlw	0
  6983  0001D2  0100               	movlb	0	; () banked
  6984  0001D4  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  6985  0001D6  0E31               	movlw	49
  6986  0001D8  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  6987  0001DA  EC8E  F01D         	call	_I2C_Master_Write	;wreg free
  6988                           
  6989                           ;main.c: 560:                 I2C_Master_Stop();
  6990  0001DE  EC93  F01D         	call	_I2C_Master_Stop	;wreg free
  6991                           
  6992                           ;main.c: 562:                 sens = 1;
  6993  0001E2  0E00               	movlw	0
  6994  0001E4  6E59               	movwf	_sens+1,c	;volatile
  6995  0001E6  0E01               	movlw	1
  6996  0001E8  6E58               	movwf	_sens,c	;volatile
  6997  0001EA                     l7708:
  6998                           
  6999                           ;main.c: 565:                 if ((temp_int == 2)||(state == 2)){
  7000  0001EA  0E02               	movlw	2
  7001  0001EC  0101               	movlb	1	; () banked
  7002  0001EE  1973               	xorwf	_temp_int& (0+255),w,b
  7003  0001F0  1174               	iorwf	(_temp_int+1)& (0+255),w,b
  7004  0001F2  B4D8               	btfsc	status,2,c
  7005  0001F4  D005               	goto	u8320
  7006                           
  7007                           ; BSR set to: 1
  7008  0001F6  0E02               	movlw	2
  7009  0001F8  1971               	xorwf	_state& (0+255),w,b
  7010  0001FA  1172               	iorwf	(_state+1)& (0+255),w,b
  7011  0001FC  A4D8               	btfss	status,2,c
  7012  0001FE  D253               	goto	l7818
  7013  000200                     u8320:
  7014                           
  7015                           ; BSR set to: 1
  7016                           ;main.c: 566:                     if ((temp_int == 2)){
  7017  000200  0E02               	movlw	2
  7018  000202  1973               	xorwf	_temp_int& (0+255),w,b
  7019  000204  1174               	iorwf	(_temp_int+1)& (0+255),w,b
  7020  000206  A4D8               	btfss	status,2,c
  7021  000208  D033               	goto	l7730
  7022                           
  7023                           ; BSR set to: 1
  7024                           ;main.c: 567:                         state = 2;
  7025  00020A  0E00               	movlw	0
  7026  00020C  6F72               	movwf	(_state+1)& (0+255),b
  7027  00020E  0E02               	movlw	2
  7028  000210  6F71               	movwf	_state& (0+255),b
  7029                           
  7030                           ;main.c: 568:                         disp = 0;
  7031  000212  0E00               	movlw	0
  7032  000214  6F70               	movwf	(_disp+1)& (0+255),b
  7033  000216  0E00               	movlw	0
  7034  000218  6F6F               	movwf	_disp& (0+255),b
  7035                           
  7036                           ; BSR set to: 1
  7037                           ;main.c: 569:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  7038  00021A  0E01               	movlw	1
  7039  00021C  EC86  F01D         	call	_lcdInst
  7040  000220  0E11               	movlw	17
  7041  000222  0101               	movlb	1	; () banked
  7042  000224  6F00               	movwf	??_UI_main& (0+255),b
  7043  000226  0E3A               	movlw	58
  7044  000228                     u9497:
  7045  000228  2EE8               	decfsz	wreg,f,c
  7046  00022A  D7FE               	bra	u9497
  7047  00022C  2F00               	decfsz	??_UI_main& (0+255),f,b
  7048  00022E  D7FC               	bra	u9497
  7049  000230  F000               	nop	
  7050                           
  7051                           ;main.c: 570:                         printf("Op Time:");
  7052  000232  0EE2               	movlw	low STR_32
  7053  000234  0100               	movlb	0	; () banked
  7054  000236  6FED               	movwf	printf@fmt& (0+255),b
  7055  000238  0EFF               	movlw	high STR_32
  7056  00023A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7057  00023C  EC0D  F01D         	call	_printf	;wreg free
  7058  000240  0EC0               	movlw	192
  7059  000242  EC86  F01D         	call	_lcdInst
  7060                           
  7061                           ;main.c: 572:                         printf("%d", cnt);
  7062  000246  0ED0               	movlw	low (STR_39+11)
  7063  000248  0100               	movlb	0	; () banked
  7064  00024A  6FED               	movwf	printf@fmt& (0+255),b
  7065  00024C  0EFE               	movlw	high (STR_39+11)
  7066  00024E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7067  000250  0E00               	movlw	0
  7068  000252  6FF0               	movwf	(?_printf+3)& (0+255),b
  7069  000254  0E00               	movlw	0
  7070  000256  6FEF               	movwf	(?_printf+2)& (0+255),b
  7071  000258  EC0D  F01D         	call	_printf	;wreg free
  7072  00025C  0ED0               	movlw	208
  7073  00025E  EC86  F01D         	call	_lcdInst
  7074                           
  7075                           ;main.c: 574:                         printf("    0-Menu   #>");
  7076  000262  0E29               	movlw	low (STR_37+1)
  7077  000264  0100               	movlb	0	; () banked
  7078  000266  6FED               	movwf	printf@fmt& (0+255),b
  7079  000268  0EFE               	movlw	high (STR_37+1)
  7080  00026A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7081  00026C  EC0D  F01D         	call	_printf	;wreg free
  7082  000270                     l7730:
  7083                           
  7084                           ;main.c: 576:                     if ((temp == '*') && (disp != 0)){
  7085  000270  0E2A               	movlw	42
  7086  000272  0100               	movlb	0	; () banked
  7087  000274  19FF               	xorwf	_temp& (0+255),w,b
  7088  000276  A4D8               	btfss	status,2,c
  7089  000278  D00B               	goto	l493
  7090                           
  7091                           ; BSR set to: 0
  7092  00027A  0101               	movlb	1	; () banked
  7093  00027C  516F               	movf	_disp& (0+255),w,b
  7094  00027E  1170               	iorwf	(_disp+1)& (0+255),w,b
  7095  000280  B4D8               	btfsc	status,2,c
  7096  000282  D006               	goto	l493
  7097                           
  7098                           ; BSR set to: 1
  7099                           ;main.c: 577:                         disp = disp - 1;
  7100  000284  0EFF               	movlw	255
  7101  000286  256F               	addwf	_disp& (0+255),w,b
  7102  000288  6F6F               	movwf	_disp& (0+255),b
  7103  00028A  0EFF               	movlw	255
  7104  00028C  2170               	addwfc	(_disp+1)& (0+255),w,b
  7105  00028E  6F70               	movwf	(_disp+1)& (0+255),b
  7106  000290                     l493:
  7107                           
  7108                           ;main.c: 579:                     if ((temp == '#')&& (disp <12)){
  7109  000290  0E23               	movlw	35
  7110  000292  0100               	movlb	0	; () banked
  7111  000294  19FF               	xorwf	_temp& (0+255),w,b
  7112  000296  A4D8               	btfss	status,2,c
  7113  000298  D00B               	goto	l7740
  7114                           
  7115                           ; BSR set to: 0
  7116  00029A  0101               	movlb	1	; () banked
  7117  00029C  BF70               	btfsc	(_disp+1)& (0+255),7,b
  7118  00029E  D006               	goto	u8370
  7119  0002A0  5170               	movf	(_disp+1)& (0+255),w,b
  7120  0002A2  E106               	bnz	l7740
  7121  0002A4  0E0C               	movlw	12
  7122  0002A6  5D6F               	subwf	_disp& (0+255),w,b
  7123  0002A8  B0D8               	btfsc	status,0,c
  7124  0002AA  D002               	goto	l7740
  7125  0002AC                     u8370:
  7126                           
  7127                           ; BSR set to: 1
  7128                           ;main.c: 580:                         disp++;
  7129  0002AC  4B6F               	infsnz	_disp& (0+255),f,b
  7130  0002AE  2B70               	incf	(_disp+1)& (0+255),f,b
  7131  0002B0                     l7740:
  7132                           
  7133                           ;main.c: 582:                     if (disp == 0){
  7134  0002B0  0101               	movlb	1	; () banked
  7135  0002B2  516F               	movf	_disp& (0+255),w,b
  7136  0002B4  1170               	iorwf	(_disp+1)& (0+255),w,b
  7137  0002B6  A4D8               	btfss	status,2,c
  7138  0002B8  D02B               	goto	l7756
  7139                           
  7140                           ; BSR set to: 1
  7141                           ;main.c: 583:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  7142  0002BA  0E01               	movlw	1
  7143  0002BC  EC86  F01D         	call	_lcdInst
  7144  0002C0  0E11               	movlw	17
  7145  0002C2  0101               	movlb	1	; () banked
  7146  0002C4  6F00               	movwf	??_UI_main& (0+255),b
  7147  0002C6  0E3A               	movlw	58
  7148  0002C8                     u9507:
  7149  0002C8  2EE8               	decfsz	wreg,f,c
  7150  0002CA  D7FE               	bra	u9507
  7151  0002CC  2F00               	decfsz	??_UI_main& (0+255),f,b
  7152  0002CE  D7FC               	bra	u9507
  7153  0002D0  F000               	nop	
  7154                           
  7155                           ;main.c: 584:                         printf("Op Time:");
  7156  0002D2  0EE2               	movlw	low STR_32
  7157  0002D4  0100               	movlb	0	; () banked
  7158  0002D6  6FED               	movwf	printf@fmt& (0+255),b
  7159  0002D8  0EFF               	movlw	high STR_32
  7160  0002DA  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7161  0002DC  EC0D  F01D         	call	_printf	;wreg free
  7162  0002E0  0EC0               	movlw	192
  7163  0002E2  EC86  F01D         	call	_lcdInst
  7164                           
  7165                           ;main.c: 586:                         printf("%d", cnt);
  7166  0002E6  0ED0               	movlw	low (STR_39+11)
  7167  0002E8  0100               	movlb	0	; () banked
  7168  0002EA  6FED               	movwf	printf@fmt& (0+255),b
  7169  0002EC  0EFE               	movlw	high (STR_39+11)
  7170  0002EE  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7171  0002F0  0E00               	movlw	0
  7172  0002F2  6FF0               	movwf	(?_printf+3)& (0+255),b
  7173  0002F4  0E00               	movlw	0
  7174  0002F6  6FEF               	movwf	(?_printf+2)& (0+255),b
  7175  0002F8  EC0D  F01D         	call	_printf	;wreg free
  7176  0002FC  0ED0               	movlw	208
  7177  0002FE  EC86  F01D         	call	_lcdInst
  7178                           
  7179                           ;main.c: 588:                         printf("     0-Menu   #>");
  7180  000302  0E28               	movlw	low STR_37
  7181  000304  0100               	movlb	0	; () banked
  7182  000306  6FED               	movwf	printf@fmt& (0+255),b
  7183  000308  0EFE               	movlw	high STR_37
  7184  00030A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7185  00030C  EC0D  F01D         	call	_printf	;wreg free
  7186  000310                     l7756:
  7187                           
  7188                           ;main.c: 591:                     if (disp == 1){
  7189  000310  0101               	movlb	1	; () banked
  7190  000312  056F               	decf	_disp& (0+255),w,b
  7191  000314  1170               	iorwf	(_disp+1)& (0+255),w,b
  7192  000316  A4D8               	btfss	status,2,c
  7193  000318  D02F               	goto	l7772
  7194                           
  7195                           ; BSR set to: 1
  7196                           ;main.c: 592:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  7197  00031A  0E01               	movlw	1
  7198  00031C  EC86  F01D         	call	_lcdInst
  7199  000320  0E11               	movlw	17
  7200  000322  0101               	movlb	1	; () banked
  7201  000324  6F00               	movwf	??_UI_main& (0+255),b
  7202  000326  0E3A               	movlw	58
  7203  000328                     u9517:
  7204  000328  2EE8               	decfsz	wreg,f,c
  7205  00032A  D7FE               	bra	u9517
  7206  00032C  2F00               	decfsz	??_UI_main& (0+255),f,b
  7207  00032E  D7FC               	bra	u9517
  7208  000330  F000               	nop	
  7209                           
  7210                           ;main.c: 593:                         printf("No. Tires: %d",t_dep);
  7211  000332  0ED3               	movlw	low STR_38
  7212  000334  0100               	movlb	0	; () banked
  7213  000336  6FED               	movwf	printf@fmt& (0+255),b
  7214  000338  0EFE               	movlw	high STR_38
  7215  00033A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7216  00033C  C0F9  F0EF         	movff	UI_main@t_dep,?_printf+2
  7217  000340  C0FA  F0F0         	movff	UI_main@t_dep+1,?_printf+3
  7218  000344  EC0D  F01D         	call	_printf	;wreg free
  7219  000348  0EC0               	movlw	192
  7220  00034A  EC86  F01D         	call	_lcdInst
  7221                           
  7222                           ;main.c: 595:                         printf("No. Poles: %d", poles_detected);
  7223  00034E  0EC5               	movlw	low STR_39
  7224  000350  0100               	movlb	0	; () banked
  7225  000352  6FED               	movwf	printf@fmt& (0+255),b
  7226  000354  0EFE               	movlw	high STR_39
  7227  000356  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7228  000358  C0FB  F0EF         	movff	UI_main@poles_detected,?_printf+2
  7229  00035C  C0FC  F0F0         	movff	UI_main@poles_detected+1,?_printf+3
  7230  000360  EC0D  F01D         	call	_printf	;wreg free
  7231  000364  0ED0               	movlw	208
  7232  000366  EC86  F01D         	call	_lcdInst
  7233                           
  7234                           ;main.c: 597:                         printf("<*   0-Menu   #>");
  7235  00036A  0E39               	movlw	low STR_40
  7236  00036C  0100               	movlb	0	; () banked
  7237  00036E  6FED               	movwf	printf@fmt& (0+255),b
  7238  000370  0EFE               	movlw	high STR_40
  7239  000372  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7240  000374  EC0D  F01D         	call	_printf	;wreg free
  7241  000378                     l7772:
  7242                           
  7243                           ;main.c: 600:                     if (disp > 1 && disp <11){
  7244  000378  0101               	movlb	1	; () banked
  7245  00037A  BF70               	btfsc	(_disp+1)& (0+255),7,b
  7246  00037C  D0CE               	goto	l7796
  7247  00037E  5170               	movf	(_disp+1)& (0+255),w,b
  7248  000380  E104               	bnz	u8400
  7249  000382  0E02               	movlw	2
  7250  000384  5D6F               	subwf	_disp& (0+255),w,b
  7251  000386  A0D8               	btfss	status,0,c
  7252  000388  D0C8               	goto	l7796
  7253  00038A                     u8400:
  7254                           
  7255                           ; BSR set to: 1
  7256  00038A  BF70               	btfsc	(_disp+1)& (0+255),7,b
  7257  00038C  D006               	goto	u8410
  7258  00038E  5170               	movf	(_disp+1)& (0+255),w,b
  7259  000390  E103               	bnz	u8411
  7260  000392  0E0B               	movlw	11
  7261  000394  5D6F               	subwf	_disp& (0+255),w,b
  7262  000396  B0D8               	btfsc	status,0,c
  7263  000398                     u8411:
  7264  000398  D0C0               	goto	l7796
  7265  00039A                     u8410:
  7266                           
  7267                           ; BSR set to: 1
  7268                           ;main.c: 601:                         i = disp - 2;
  7269  00039A  0EFE               	movlw	254
  7270  00039C  256F               	addwf	_disp& (0+255),w,b
  7271  00039E  6F6D               	movwf	_i& (0+255),b
  7272  0003A0  0EFF               	movlw	255
  7273  0003A2  2170               	addwfc	(_disp+1)& (0+255),w,b
  7274  0003A4  6F6E               	movwf	(_i+1)& (0+255),b
  7275                           
  7276                           ; BSR set to: 1
  7277                           ;main.c: 602:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  7278  0003A6  0E01               	movlw	1
  7279  0003A8  EC86  F01D         	call	_lcdInst
  7280  0003AC  0E11               	movlw	17
  7281  0003AE  0101               	movlb	1	; () banked
  7282  0003B0  6F00               	movwf	??_UI_main& (0+255),b
  7283  0003B2  0E3A               	movlw	58
  7284  0003B4                     u9527:
  7285  0003B4  2EE8               	decfsz	wreg,f,c
  7286  0003B6  D7FE               	bra	u9527
  7287  0003B8  2F00               	decfsz	??_UI_main& (0+255),f,b
  7288  0003BA  D7FC               	bra	u9527
  7289  0003BC  F000               	nop	
  7290                           
  7291                           ;main.c: 603:                         printf("P%d Dep:%d,Tot:%d", i+1 , Pole[i].tires_de
      +                          ployed,Pole[i].tires_final);
  7292  0003BE  0ED2               	movlw	low STR_41
  7293  0003C0  0100               	movlb	0	; () banked
  7294  0003C2  6FED               	movwf	printf@fmt& (0+255),b
  7295  0003C4  0EFD               	movlw	high STR_41
  7296  0003C6  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7297  0003C8  0E01               	movlw	1
  7298  0003CA  0101               	movlb	1	; () banked
  7299  0003CC  256D               	addwf	_i& (0+255),w,b
  7300  0003CE  0100               	movlb	0	; () banked
  7301  0003D0  6FEF               	movwf	(?_printf+2)& (0+255),b
  7302  0003D2  0E00               	movlw	0
  7303  0003D4  0101               	movlb	1	; () banked
  7304  0003D6  216E               	addwfc	(_i+1)& (0+255),w,b
  7305  0003D8  0100               	movlb	0	; () banked
  7306  0003DA  6FF0               	movwf	(?_printf+3)& (0+255),b
  7307  0003DC  C16D  F100         	movff	_i,??_UI_main
  7308  0003E0  C16E  F101         	movff	_i+1,??_UI_main+1
  7309  0003E4  0101               	movlb	1	; () banked
  7310  0003E6  90D8               	bcf	status,0,c
  7311  0003E8  3700               	rlcf	??_UI_main& (0+255),f,b
  7312  0003EA  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7313  0003EC  90D8               	bcf	status,0,c
  7314  0003EE  3700               	rlcf	??_UI_main& (0+255),f,b
  7315  0003F0  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7316  0003F2  90D8               	bcf	status,0,c
  7317  0003F4  3700               	rlcf	??_UI_main& (0+255),f,b
  7318  0003F6  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7319  0003F8  0E04               	movlw	low UI_main@Pole
  7320  0003FA  2500               	addwf	??_UI_main& (0+255),w,b
  7321  0003FC  6ED9               	movwf	fsr2l,c
  7322  0003FE  0E01               	movlw	high UI_main@Pole
  7323  000400  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  7324  000402  6EDA               	movwf	fsr2h,c
  7325  000404  CFDE F0F1          	movff	postinc2,?_printf+4
  7326  000408  CFDD F0F2          	movff	postdec2,?_printf+5
  7327  00040C  C16D  F102         	movff	_i,??_UI_main+2
  7328  000410  C16E  F103         	movff	_i+1,??_UI_main+3
  7329  000414  90D8               	bcf	status,0,c
  7330  000416  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  7331  000418  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  7332  00041A  90D8               	bcf	status,0,c
  7333  00041C  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  7334  00041E  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  7335  000420  90D8               	bcf	status,0,c
  7336  000422  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  7337  000424  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  7338  000426  0E02               	movlw	2
  7339  000428  2702               	addwf	(??_UI_main+2)& (0+255),f,b
  7340  00042A  0E00               	movlw	0
  7341  00042C  2303               	addwfc	(??_UI_main+3)& (0+255),f,b
  7342  00042E  0E04               	movlw	low UI_main@Pole
  7343  000430  2502               	addwf	(??_UI_main+2)& (0+255),w,b
  7344  000432  6ED9               	movwf	fsr2l,c
  7345  000434  0E01               	movlw	high UI_main@Pole
  7346  000436  2103               	addwfc	(??_UI_main+3)& (0+255),w,b
  7347  000438  6EDA               	movwf	fsr2h,c
  7348  00043A  CFDE F0F3          	movff	postinc2,?_printf+6
  7349  00043E  CFDD F0F4          	movff	postdec2,?_printf+7
  7350  000442  EC0D  F01D         	call	_printf	;wreg free
  7351  000446  0EC0               	movlw	192
  7352  000448  EC86  F01D         	call	_lcdInst
  7353                           
  7354                           ;main.c: 605:                         printf("DistToStart:%d",i+1 , Pole[i].dist_from_st
      +                          art);
  7355  00044C  0E89               	movlw	low STR_42
  7356  00044E  0100               	movlb	0	; () banked
  7357  000450  6FED               	movwf	printf@fmt& (0+255),b
  7358  000452  0EFE               	movlw	high STR_42
  7359  000454  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7360  000456  0E01               	movlw	1
  7361  000458  0101               	movlb	1	; () banked
  7362  00045A  256D               	addwf	_i& (0+255),w,b
  7363  00045C  0100               	movlb	0	; () banked
  7364  00045E  6FEF               	movwf	(?_printf+2)& (0+255),b
  7365  000460  0E00               	movlw	0
  7366  000462  0101               	movlb	1	; () banked
  7367  000464  216E               	addwfc	(_i+1)& (0+255),w,b
  7368  000466  0100               	movlb	0	; () banked
  7369  000468  6FF0               	movwf	(?_printf+3)& (0+255),b
  7370  00046A  C16D  F100         	movff	_i,??_UI_main
  7371  00046E  C16E  F101         	movff	_i+1,??_UI_main+1
  7372  000472  0101               	movlb	1	; () banked
  7373  000474  90D8               	bcf	status,0,c
  7374  000476  3700               	rlcf	??_UI_main& (0+255),f,b
  7375  000478  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7376  00047A  90D8               	bcf	status,0,c
  7377  00047C  3700               	rlcf	??_UI_main& (0+255),f,b
  7378  00047E  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7379  000480  90D8               	bcf	status,0,c
  7380  000482  3700               	rlcf	??_UI_main& (0+255),f,b
  7381  000484  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7382  000486  0E04               	movlw	4
  7383  000488  2700               	addwf	??_UI_main& (0+255),f,b
  7384  00048A  0E00               	movlw	0
  7385  00048C  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  7386  00048E  0E04               	movlw	low UI_main@Pole
  7387  000490  2500               	addwf	??_UI_main& (0+255),w,b
  7388  000492  6ED9               	movwf	fsr2l,c
  7389  000494  0E01               	movlw	high UI_main@Pole
  7390  000496  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  7391  000498  6EDA               	movwf	fsr2h,c
  7392  00049A  CFDE F0F1          	movff	postinc2,?_printf+4
  7393  00049E  CFDD F0F2          	movff	postdec2,?_printf+5
  7394  0004A2  EC0D  F01D         	call	_printf	;wreg free
  7395  0004A6  0E90               	movlw	144
  7396  0004A8  EC86  F01D         	call	_lcdInst
  7397                           
  7398                           ;main.c: 607:                         printf("DistToCL:%d",i+1 , Pole[i].dist_from_cl);
  7399  0004AC  0E3A               	movlw	low STR_43
  7400  0004AE  0100               	movlb	0	; () banked
  7401  0004B0  6FED               	movwf	printf@fmt& (0+255),b
  7402  0004B2  0EFF               	movlw	high STR_43
  7403  0004B4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7404  0004B6  0E01               	movlw	1
  7405  0004B8  0101               	movlb	1	; () banked
  7406  0004BA  256D               	addwf	_i& (0+255),w,b
  7407  0004BC  0100               	movlb	0	; () banked
  7408  0004BE  6FEF               	movwf	(?_printf+2)& (0+255),b
  7409  0004C0  0E00               	movlw	0
  7410  0004C2  0101               	movlb	1	; () banked
  7411  0004C4  216E               	addwfc	(_i+1)& (0+255),w,b
  7412  0004C6  0100               	movlb	0	; () banked
  7413  0004C8  6FF0               	movwf	(?_printf+3)& (0+255),b
  7414  0004CA  C16D  F100         	movff	_i,??_UI_main
  7415  0004CE  C16E  F101         	movff	_i+1,??_UI_main+1
  7416  0004D2  0101               	movlb	1	; () banked
  7417  0004D4  90D8               	bcf	status,0,c
  7418  0004D6  3700               	rlcf	??_UI_main& (0+255),f,b
  7419  0004D8  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7420  0004DA  90D8               	bcf	status,0,c
  7421  0004DC  3700               	rlcf	??_UI_main& (0+255),f,b
  7422  0004DE  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7423  0004E0  90D8               	bcf	status,0,c
  7424  0004E2  3700               	rlcf	??_UI_main& (0+255),f,b
  7425  0004E4  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7426  0004E6  0E06               	movlw	6
  7427  0004E8  2700               	addwf	??_UI_main& (0+255),f,b
  7428  0004EA  0E00               	movlw	0
  7429  0004EC  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  7430  0004EE  0E04               	movlw	low UI_main@Pole
  7431  0004F0  2500               	addwf	??_UI_main& (0+255),w,b
  7432  0004F2  6ED9               	movwf	fsr2l,c
  7433  0004F4  0E01               	movlw	high UI_main@Pole
  7434  0004F6  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  7435  0004F8  6EDA               	movwf	fsr2h,c
  7436  0004FA  CFDE F0F1          	movff	postinc2,?_printf+4
  7437  0004FE  CFDD F0F2          	movff	postdec2,?_printf+5
  7438  000502  EC0D  F01D         	call	_printf	;wreg free
  7439  000506  0ED0               	movlw	208
  7440  000508  EC86  F01D         	call	_lcdInst
  7441                           
  7442                           ;main.c: 609:                         printf("<*   0-Menu   #>");
  7443  00050C  0E39               	movlw	low STR_40
  7444  00050E  0100               	movlb	0	; () banked
  7445  000510  6FED               	movwf	printf@fmt& (0+255),b
  7446  000512  0EFE               	movlw	high STR_40
  7447  000514  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7448  000516  EC0D  F01D         	call	_printf	;wreg free
  7449  00051A                     l7796:
  7450                           
  7451                           ;main.c: 611:                     if (disp == 11){
  7452  00051A  0E0B               	movlw	11
  7453  00051C  0101               	movlb	1	; () banked
  7454  00051E  196F               	xorwf	_disp& (0+255),w,b
  7455  000520  1170               	iorwf	(_disp+1)& (0+255),w,b
  7456  000522  A4D8               	btfss	status,2,c
  7457  000524  D0C0               	goto	l7818
  7458                           
  7459                           ; BSR set to: 1
  7460                           ;main.c: 612:                         i = disp - 2;
  7461  000526  0EFE               	movlw	254
  7462  000528  256F               	addwf	_disp& (0+255),w,b
  7463  00052A  6F6D               	movwf	_i& (0+255),b
  7464  00052C  0EFF               	movlw	255
  7465  00052E  2170               	addwfc	(_disp+1)& (0+255),w,b
  7466  000530  6F6E               	movwf	(_i+1)& (0+255),b
  7467                           
  7468                           ; BSR set to: 1
  7469                           ;main.c: 613:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  7470  000532  0E01               	movlw	1
  7471  000534  EC86  F01D         	call	_lcdInst
  7472  000538  0E11               	movlw	17
  7473  00053A  0101               	movlb	1	; () banked
  7474  00053C  6F00               	movwf	??_UI_main& (0+255),b
  7475  00053E  0E3A               	movlw	58
  7476  000540                     u9537:
  7477  000540  2EE8               	decfsz	wreg,f,c
  7478  000542  D7FE               	bra	u9537
  7479  000544  2F00               	decfsz	??_UI_main& (0+255),f,b
  7480  000546  D7FC               	bra	u9537
  7481  000548  F000               	nop	
  7482                           
  7483                           ;main.c: 614:                         printf("P%d Dep:%d,Tot:%d", i+1 , Pole[i].tires_de
      +                          ployed,Pole[i].tires_final);
  7484  00054A  0ED2               	movlw	low STR_41
  7485  00054C  0100               	movlb	0	; () banked
  7486  00054E  6FED               	movwf	printf@fmt& (0+255),b
  7487  000550  0EFD               	movlw	high STR_41
  7488  000552  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7489  000554  0E01               	movlw	1
  7490  000556  0101               	movlb	1	; () banked
  7491  000558  256D               	addwf	_i& (0+255),w,b
  7492  00055A  0100               	movlb	0	; () banked
  7493  00055C  6FEF               	movwf	(?_printf+2)& (0+255),b
  7494  00055E  0E00               	movlw	0
  7495  000560  0101               	movlb	1	; () banked
  7496  000562  216E               	addwfc	(_i+1)& (0+255),w,b
  7497  000564  0100               	movlb	0	; () banked
  7498  000566  6FF0               	movwf	(?_printf+3)& (0+255),b
  7499  000568  C16D  F100         	movff	_i,??_UI_main
  7500  00056C  C16E  F101         	movff	_i+1,??_UI_main+1
  7501  000570  0101               	movlb	1	; () banked
  7502  000572  90D8               	bcf	status,0,c
  7503  000574  3700               	rlcf	??_UI_main& (0+255),f,b
  7504  000576  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7505  000578  90D8               	bcf	status,0,c
  7506  00057A  3700               	rlcf	??_UI_main& (0+255),f,b
  7507  00057C  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7508  00057E  90D8               	bcf	status,0,c
  7509  000580  3700               	rlcf	??_UI_main& (0+255),f,b
  7510  000582  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7511  000584  0E04               	movlw	low UI_main@Pole
  7512  000586  2500               	addwf	??_UI_main& (0+255),w,b
  7513  000588  6ED9               	movwf	fsr2l,c
  7514  00058A  0E01               	movlw	high UI_main@Pole
  7515  00058C  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  7516  00058E  6EDA               	movwf	fsr2h,c
  7517  000590  CFDE F0F1          	movff	postinc2,?_printf+4
  7518  000594  CFDD F0F2          	movff	postdec2,?_printf+5
  7519  000598  C16D  F102         	movff	_i,??_UI_main+2
  7520  00059C  C16E  F103         	movff	_i+1,??_UI_main+3
  7521  0005A0  90D8               	bcf	status,0,c
  7522  0005A2  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  7523  0005A4  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  7524  0005A6  90D8               	bcf	status,0,c
  7525  0005A8  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  7526  0005AA  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  7527  0005AC  90D8               	bcf	status,0,c
  7528  0005AE  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  7529  0005B0  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  7530  0005B2  0E02               	movlw	2
  7531  0005B4  2702               	addwf	(??_UI_main+2)& (0+255),f,b
  7532  0005B6  0E00               	movlw	0
  7533  0005B8  2303               	addwfc	(??_UI_main+3)& (0+255),f,b
  7534  0005BA  0E04               	movlw	low UI_main@Pole
  7535  0005BC  2502               	addwf	(??_UI_main+2)& (0+255),w,b
  7536  0005BE  6ED9               	movwf	fsr2l,c
  7537  0005C0  0E01               	movlw	high UI_main@Pole
  7538  0005C2  2103               	addwfc	(??_UI_main+3)& (0+255),w,b
  7539  0005C4  6EDA               	movwf	fsr2h,c
  7540  0005C6  CFDE F0F3          	movff	postinc2,?_printf+6
  7541  0005CA  CFDD F0F4          	movff	postdec2,?_printf+7
  7542  0005CE  EC0D  F01D         	call	_printf	;wreg free
  7543  0005D2  0EC0               	movlw	192
  7544  0005D4  EC86  F01D         	call	_lcdInst
  7545                           
  7546                           ;main.c: 616:                         printf("DistToStart:%d",i+1 , Pole[i].dist_from_st
      +                          art);
  7547  0005D8  0E89               	movlw	low STR_42
  7548  0005DA  0100               	movlb	0	; () banked
  7549  0005DC  6FED               	movwf	printf@fmt& (0+255),b
  7550  0005DE  0EFE               	movlw	high STR_42
  7551  0005E0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7552  0005E2  0E01               	movlw	1
  7553  0005E4  0101               	movlb	1	; () banked
  7554  0005E6  256D               	addwf	_i& (0+255),w,b
  7555  0005E8  0100               	movlb	0	; () banked
  7556  0005EA  6FEF               	movwf	(?_printf+2)& (0+255),b
  7557  0005EC  0E00               	movlw	0
  7558  0005EE  0101               	movlb	1	; () banked
  7559  0005F0  216E               	addwfc	(_i+1)& (0+255),w,b
  7560  0005F2  0100               	movlb	0	; () banked
  7561  0005F4  6FF0               	movwf	(?_printf+3)& (0+255),b
  7562  0005F6  C16D  F100         	movff	_i,??_UI_main
  7563  0005FA  C16E  F101         	movff	_i+1,??_UI_main+1
  7564  0005FE  0101               	movlb	1	; () banked
  7565  000600  90D8               	bcf	status,0,c
  7566  000602  3700               	rlcf	??_UI_main& (0+255),f,b
  7567  000604  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7568  000606  90D8               	bcf	status,0,c
  7569  000608  3700               	rlcf	??_UI_main& (0+255),f,b
  7570  00060A  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7571  00060C  90D8               	bcf	status,0,c
  7572  00060E  3700               	rlcf	??_UI_main& (0+255),f,b
  7573  000610  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7574  000612  0E04               	movlw	4
  7575  000614  2700               	addwf	??_UI_main& (0+255),f,b
  7576  000616  0E00               	movlw	0
  7577  000618  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  7578  00061A  0E04               	movlw	low UI_main@Pole
  7579  00061C  2500               	addwf	??_UI_main& (0+255),w,b
  7580  00061E  6ED9               	movwf	fsr2l,c
  7581  000620  0E01               	movlw	high UI_main@Pole
  7582  000622  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  7583  000624  6EDA               	movwf	fsr2h,c
  7584  000626  CFDE F0F1          	movff	postinc2,?_printf+4
  7585  00062A  CFDD F0F2          	movff	postdec2,?_printf+5
  7586  00062E  EC0D  F01D         	call	_printf	;wreg free
  7587  000632  0E90               	movlw	144
  7588  000634  EC86  F01D         	call	_lcdInst
  7589                           
  7590                           ;main.c: 618:                         printf("DistToCL:%d",i+1 , Pole[i].dist_from_cl);
  7591  000638  0E3A               	movlw	low STR_43
  7592  00063A  0100               	movlb	0	; () banked
  7593  00063C  6FED               	movwf	printf@fmt& (0+255),b
  7594  00063E  0EFF               	movlw	high STR_43
  7595  000640  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7596  000642  0E01               	movlw	1
  7597  000644  0101               	movlb	1	; () banked
  7598  000646  256D               	addwf	_i& (0+255),w,b
  7599  000648  0100               	movlb	0	; () banked
  7600  00064A  6FEF               	movwf	(?_printf+2)& (0+255),b
  7601  00064C  0E00               	movlw	0
  7602  00064E  0101               	movlb	1	; () banked
  7603  000650  216E               	addwfc	(_i+1)& (0+255),w,b
  7604  000652  0100               	movlb	0	; () banked
  7605  000654  6FF0               	movwf	(?_printf+3)& (0+255),b
  7606  000656  C16D  F100         	movff	_i,??_UI_main
  7607  00065A  C16E  F101         	movff	_i+1,??_UI_main+1
  7608  00065E  0101               	movlb	1	; () banked
  7609  000660  90D8               	bcf	status,0,c
  7610  000662  3700               	rlcf	??_UI_main& (0+255),f,b
  7611  000664  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7612  000666  90D8               	bcf	status,0,c
  7613  000668  3700               	rlcf	??_UI_main& (0+255),f,b
  7614  00066A  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7615  00066C  90D8               	bcf	status,0,c
  7616  00066E  3700               	rlcf	??_UI_main& (0+255),f,b
  7617  000670  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7618  000672  0E06               	movlw	6
  7619  000674  2700               	addwf	??_UI_main& (0+255),f,b
  7620  000676  0E00               	movlw	0
  7621  000678  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  7622  00067A  0E04               	movlw	low UI_main@Pole
  7623  00067C  2500               	addwf	??_UI_main& (0+255),w,b
  7624  00067E  6ED9               	movwf	fsr2l,c
  7625  000680  0E01               	movlw	high UI_main@Pole
  7626  000682  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  7627  000684  6EDA               	movwf	fsr2h,c
  7628  000686  CFDE F0F1          	movff	postinc2,?_printf+4
  7629  00068A  CFDD F0F2          	movff	postdec2,?_printf+5
  7630  00068E  EC0D  F01D         	call	_printf	;wreg free
  7631  000692  0ED0               	movlw	208
  7632  000694  EC86  F01D         	call	_lcdInst
  7633                           
  7634                           ;main.c: 620:                         printf("<*   0-Menu     ");
  7635  000698  0EF5               	movlw	low STR_48
  7636  00069A  0100               	movlb	0	; () banked
  7637  00069C  6FED               	movwf	printf@fmt& (0+255),b
  7638  00069E  0EFD               	movlw	high STR_48
  7639  0006A0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7640  0006A2  EC0D  F01D         	call	_printf	;wreg free
  7641  0006A6                     l7818:
  7642                           
  7643                           ;main.c: 623:             if (temp_int == 3){
  7644  0006A6  0E03               	movlw	3
  7645  0006A8  0101               	movlb	1	; () banked
  7646  0006AA  1973               	xorwf	_temp_int& (0+255),w,b
  7647  0006AC  1174               	iorwf	(_temp_int+1)& (0+255),w,b
  7648  0006AE  A4D8               	btfss	status,2,c
  7649  0006B0  D0B5               	goto	u8460
  7650                           
  7651                           ; BSR set to: 1
  7652                           ;main.c: 624:                 state = 0;
  7653  0006B2  0E00               	movlw	0
  7654  0006B4  6F72               	movwf	(_state+1)& (0+255),b
  7655  0006B6  0E00               	movlw	0
  7656  0006B8  6F71               	movwf	_state& (0+255),b
  7657                           
  7658                           ;main.c: 625:                 tick = 0;
  7659  0006BA  0E00               	movlw	0
  7660  0006BC  6F55               	movwf	UI_main@tick& (0+255),b
  7661  0006BE  0E00               	movlw	0
  7662  0006C0  6F56               	movwf	(UI_main@tick+1)& (0+255),b
  7663  0006C2  0E00               	movlw	0
  7664  0006C4  6F57               	movwf	(UI_main@tick+2)& (0+255),b
  7665  0006C6  0E00               	movlw	0
  7666  0006C8  6F58               	movwf	(UI_main@tick+3)& (0+255),b
  7667                           
  7668                           ;main.c: 626:                 while(~key_was_pressed){
  7669  0006CA  D0A5               	goto	l7868
  7670  0006CC                     l7822:
  7671                           
  7672                           ; BSR set to: 1
  7673                           ;main.c: 627:                     if(tick % 1000 == 0){
  7674  0006CC  C155  F080         	movff	UI_main@tick,___llmod@dividend
  7675  0006D0  C156  F081         	movff	UI_main@tick+1,___llmod@dividend+1
  7676  0006D4  C157  F082         	movff	UI_main@tick+2,___llmod@dividend+2
  7677  0006D8  C158  F083         	movff	UI_main@tick+3,___llmod@dividend+3
  7678  0006DC  0EE8               	movlw	232
  7679  0006DE  0100               	movlb	0	; () banked
  7680  0006E0  6F84               	movwf	___llmod@divisor& (0+255),b
  7681  0006E2  0E03               	movlw	3
  7682  0006E4  6F85               	movwf	(___llmod@divisor+1)& (0+255),b
  7683  0006E6  0E00               	movlw	0
  7684  0006E8  6F86               	movwf	(___llmod@divisor+2)& (0+255),b
  7685  0006EA  0E00               	movlw	0
  7686  0006EC  6F87               	movwf	(___llmod@divisor+3)& (0+255),b
  7687  0006EE  EC62  F01A         	call	___llmod	;wreg free
  7688  0006F2  0100               	movlb	0	; () banked
  7689  0006F4  5180               	movf	?___llmod& (0+255),w,b
  7690  0006F6  1181               	iorwf	(?___llmod+1)& (0+255),w,b
  7691  0006F8  1182               	iorwf	(?___llmod+2)& (0+255),w,b
  7692  0006FA  1183               	iorwf	(?___llmod+3)& (0+255),w,b
  7693  0006FC  A4D8               	btfss	status,2,c
  7694  0006FE  D084               	goto	l7866
  7695                           
  7696                           ; BSR set to: 0
  7697                           ;main.c: 628:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  7698  000700  0E01               	movlw	1
  7699  000702  EC86  F01D         	call	_lcdInst
  7700  000706  0E11               	movlw	17
  7701  000708  0101               	movlb	1	; () banked
  7702  00070A  6F00               	movwf	??_UI_main& (0+255),b
  7703  00070C  0E3A               	movlw	58
  7704  00070E                     u9547:
  7705  00070E  2EE8               	decfsz	wreg,f,c
  7706  000710  D7FE               	bra	u9547
  7707  000712  2F00               	decfsz	??_UI_main& (0+255),f,b
  7708  000714  D7FC               	bra	u9547
  7709  000716  F000               	nop	
  7710                           
  7711                           ;main.c: 629:                         printf("DATE & TIME");
  7712  000718  0E16               	movlw	low STR_49
  7713  00071A  0100               	movlb	0	; () banked
  7714  00071C  6FED               	movwf	printf@fmt& (0+255),b
  7715  00071E  0EFF               	movlw	high STR_49
  7716  000720  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7717  000722  EC0D  F01D         	call	_printf	;wreg free
  7718                           
  7719                           ;main.c: 630:                         I2C_Master_Init(100000);
  7720  000726  0EA0               	movlw	160
  7721  000728  0100               	movlb	0	; () banked
  7722  00072A  6F8D               	movwf	I2C_Master_Init@clockFreq& (0+255),b
  7723  00072C  0E86               	movlw	134
  7724  00072E  6F8E               	movwf	(I2C_Master_Init@clockFreq+1)& (0+255),b
  7725  000730  0E01               	movlw	1
  7726  000732  6F8F               	movwf	(I2C_Master_Init@clockFreq+2)& (0+255),b
  7727  000734  0E00               	movlw	0
  7728  000736  6F90               	movwf	(I2C_Master_Init@clockFreq+3)& (0+255),b
  7729  000738  EC96  F01A         	call	_I2C_Master_Init	;wreg free
  7730                           
  7731                           ;main.c: 631:                         I2C_Master_Start();
  7732  00073C  EC97  F01D         	call	_I2C_Master_Start	;wreg free
  7733                           
  7734                           ;main.c: 632:                         I2C_Master_Write(0b11010000);
  7735  000740  0E00               	movlw	0
  7736  000742  0100               	movlb	0	; () banked
  7737  000744  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  7738  000746  0ED0               	movlw	208
  7739  000748  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  7740  00074A  EC8E  F01D         	call	_I2C_Master_Write	;wreg free
  7741                           
  7742                           ;main.c: 633:                         I2C_Master_Write(0x00);
  7743  00074E  0E00               	movlw	0
  7744  000750  0100               	movlb	0	; () banked
  7745  000752  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  7746  000754  0E00               	movlw	0
  7747  000756  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  7748  000758  EC8E  F01D         	call	_I2C_Master_Write	;wreg free
  7749                           
  7750                           ;main.c: 634:                         I2C_Master_Stop();
  7751  00075C  EC93  F01D         	call	_I2C_Master_Stop	;wreg free
  7752                           
  7753                           ;main.c: 636:                         I2C_Master_Start();
  7754  000760  EC97  F01D         	call	_I2C_Master_Start	;wreg free
  7755                           
  7756                           ;main.c: 637:                         I2C_Master_Write(0b11010001);
  7757  000764  0E00               	movlw	0
  7758  000766  0100               	movlb	0	; () banked
  7759  000768  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  7760  00076A  0ED1               	movlw	209
  7761  00076C  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  7762  00076E  EC8E  F01D         	call	_I2C_Master_Write	;wreg free
  7763                           
  7764                           ;main.c: 638:                         for(unsigned char i = 0; i < 6; i++){
  7765  000772  0E00               	movlw	0
  7766  000774  0101               	movlb	1	; () banked
  7767  000776  6F59               	movwf	UI_main@i& (0+255),b
  7768  000778                     l7846:
  7769                           
  7770                           ; BSR set to: 1
  7771  000778  0E05               	movlw	5
  7772  00077A  6559               	cpfsgt	UI_main@i& (0+255),b
  7773  00077C  D001               	goto	l7850
  7774  00077E  D00D               	goto	l7856
  7775  000780                     l7850:
  7776                           
  7777                           ; BSR set to: 1
  7778                           ;main.c: 639:                             time[i] = I2C_Master_Read(0);
  7779  000780  0E64               	movlw	low _time
  7780  000782  2559               	addwf	UI_main@i& (0+255),w,b
  7781  000784  6ED9               	movwf	fsr2l,c
  7782  000786  6ADA               	clrf	fsr2h,c
  7783  000788  0E01               	movlw	high _time
  7784  00078A  22DA               	addwfc	fsr2h,f,c
  7785  00078C  0E00               	movlw	0
  7786  00078E  ECF8  F01C         	call	_I2C_Master_Read
  7787  000792  6EDF               	movwf	indf2,c
  7788                           
  7789                           ;main.c: 640:                         }
  7790  000794  0101               	movlb	1	; () banked
  7791  000796  2B59               	incf	UI_main@i& (0+255),f,b
  7792  000798  D7EF               	goto	l7846
  7793  00079A                     l7856:
  7794                           
  7795                           ; BSR set to: 1
  7796                           ;main.c: 641:                         time[6] = I2C_Master_Read(1);
  7797  00079A  0E01               	movlw	1
  7798  00079C  ECF8  F01C         	call	_I2C_Master_Read
  7799  0007A0  0101               	movlb	1	; () banked
  7800  0007A2  6F6A               	movwf	(_time+6)& (0+255),b
  7801                           
  7802                           ;main.c: 642:                         I2C_Master_Stop();
  7803  0007A4  EC93  F01D         	call	_I2C_Master_Stop	;wreg free
  7804  0007A8  0EC0               	movlw	192
  7805  0007AA  EC86  F01D         	call	_lcdInst
  7806                           
  7807                           ;main.c: 646:                         printf("%02x/%02x/%02x", time[6],time[5],time[4]);
  7808  0007AE  0EA7               	movlw	low STR_50
  7809  0007B0  0100               	movlb	0	; () banked
  7810  0007B2  6FED               	movwf	printf@fmt& (0+255),b
  7811  0007B4  0EFE               	movlw	high STR_50
  7812  0007B6  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7813  0007B8  C16A  F0EF         	movff	_time+6,?_printf+2
  7814  0007BC  6BF0               	clrf	(?_printf+3)& (0+255),b
  7815  0007BE  C169  F0F1         	movff	_time+5,?_printf+4
  7816  0007C2  6BF2               	clrf	(?_printf+5)& (0+255),b
  7817  0007C4  C168  F0F3         	movff	_time+4,?_printf+6
  7818  0007C8  6BF4               	clrf	(?_printf+7)& (0+255),b
  7819  0007CA  EC0D  F01D         	call	_printf	;wreg free
  7820  0007CE  0E90               	movlw	144
  7821  0007D0  EC86  F01D         	call	_lcdInst
  7822                           
  7823                           ;main.c: 648:                         printf("%02x:%02x:%02x", time[2],time[1],time[0]);
  7824  0007D4  0EB6               	movlw	low STR_51
  7825  0007D6  0100               	movlb	0	; () banked
  7826  0007D8  6FED               	movwf	printf@fmt& (0+255),b
  7827  0007DA  0EFE               	movlw	high STR_51
  7828  0007DC  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7829  0007DE  C166  F0EF         	movff	_time+2,?_printf+2
  7830  0007E2  6BF0               	clrf	(?_printf+3)& (0+255),b
  7831  0007E4  C165  F0F1         	movff	_time+1,?_printf+4
  7832  0007E8  6BF2               	clrf	(?_printf+5)& (0+255),b
  7833  0007EA  C164  F0F3         	movff	_time,?_printf+6
  7834  0007EE  6BF4               	clrf	(?_printf+7)& (0+255),b
  7835  0007F0  EC0D  F01D         	call	_printf	;wreg free
  7836  0007F4  0ED0               	movlw	208
  7837  0007F6  EC86  F01D         	call	_lcdInst
  7838                           
  7839                           ;main.c: 650:                         printf("     0-Menu     ");
  7840  0007FA  0EE4               	movlw	low STR_31
  7841  0007FC  0100               	movlb	0	; () banked
  7842  0007FE  6FED               	movwf	printf@fmt& (0+255),b
  7843  000800  0EFD               	movlw	high STR_31
  7844  000802  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7845  000804  EC0D  F01D         	call	_printf	;wreg free
  7846  000808                     l7866:
  7847                           
  7848                           ;main.c: 653:                     tick++;
  7849  000808  0E01               	movlw	1
  7850  00080A  0101               	movlb	1	; () banked
  7851  00080C  2755               	addwf	UI_main@tick& (0+255),f,b
  7852  00080E  0E00               	movlw	0
  7853  000810  2356               	addwfc	(UI_main@tick+1)& (0+255),f,b
  7854  000812  2357               	addwfc	(UI_main@tick+2)& (0+255),f,b
  7855  000814  2358               	addwfc	(UI_main@tick+3)& (0+255),f,b
  7856  000816                     l7868:
  7857                           
  7858                           ; BSR set to: 1
  7859                           ;main.c: 626:                 while(~key_was_pressed){
  7860  000816  0577               	decf	_key_was_pressed& (0+255),w,b	;volatile
  7861  000818  A4D8               	btfss	status,2,c
  7862  00081A  D758               	goto	l7822
  7863  00081C                     u8460:
  7864                           
  7865                           ;main.c: 521:     while(sens==0){
  7866  00081C  5058               	movf	_sens,w,c	;volatile
  7867  00081E  1059               	iorwf	_sens+1,w,c	;volatile
  7868  000820  A4D8               	btfss	status,2,c
  7869  000822  0012               	return	
  7870  000824  D44B               	goto	l7650
  7871  000826                     __end_of_UI_main:
  7872                           	opt callstack 0
  7873                           
  7874 ;; *************** function _printf *****************
  7875 ;; Defined at:
  7876 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  7877 ;; Parameters:    Size  Location     Type
  7878 ;;  fmt             2  109[BANK0 ] PTR const unsigned char 
  7879 ;;		 -> STR_61(10), STR_60(11), STR_59(11), STR_58(12), 
  7880 ;;		 -> STR_57(12), STR_56(10), STR_55(10), STR_54(13), 
  7881 ;;		 -> STR_53(8), STR_52(17), STR_51(15), STR_50(15), 
  7882 ;;		 -> STR_49(12), STR_48(17), STR_47(12), STR_46(15), 
  7883 ;;		 -> STR_45(18), STR_44(17), STR_43(12), STR_42(15), 
  7884 ;;		 -> STR_41(18), STR_40(17), STR_39(14), STR_38(14), 
  7885 ;;		 -> STR_37(17), STR_36(3), STR_35(9), STR_34(16), 
  7886 ;;		 -> STR_33(3), STR_32(9), STR_31(17), STR_30(15), 
  7887 ;;		 -> STR_29(15), STR_28(12), STR_27(10), STR_26(15), 
  7888 ;;		 -> STR_25(12), STR_24(10), STR_23(16), STR_22(12), 
  7889 ;;		 -> STR_21(3), STR_20(11), STR_19(13), STR_18(8), 
  7890 ;;		 -> STR_17(10), STR_16(17), STR_15(10), STR_14(16), 
  7891 ;;		 -> STR_13(10), STR_12(16), STR_11(10), STR_10(17), 
  7892 ;;		 -> STR_9(5), STR_8(10), STR_7(14), STR_6(6), 
  7893 ;;		 -> STR_5(10), STR_4(10), STR_3(11), STR_2(13), 
  7894 ;;		 -> STR_1(10), 
  7895 ;; Auto vars:     Size  Location     Type
  7896 ;;  ap              2  119[BANK0 ] PTR void [1]
  7897 ;;		 -> ?_printf(2), 
  7898 ;;  ret             2    0        int 
  7899 ;; Return value:  Size  Location     Type
  7900 ;;                  2  109[BANK0 ] int 
  7901 ;; Registers used:
  7902 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7903 ;; Tracked objects:
  7904 ;;		On entry : 0/0
  7905 ;;		On exit  : 0/0
  7906 ;;		Unchanged: 0/0
  7907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7908 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7909 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7911 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7912 ;;Total ram usage:       12 bytes
  7913 ;; Hardware stack levels used:    1
  7914 ;; Hardware stack levels required when called:   13
  7915 ;; This function calls:
  7916 ;;		_vfprintf
  7917 ;; This function is called by:
  7918 ;;		_actuators_main
  7919 ;;		_stepper2
  7920 ;;		_stepper2_back
  7921 ;;		_full_drive
  7922 ;;		_print_echo
  7923 ;;		_ultrasonic_main
  7924 ;;		_number_deploy
  7925 ;;		_UI_main
  7926 ;;		_main
  7927 ;; This function uses a non-reentrant model
  7928 ;;
  7929                           
  7930                           	psect	text20
  7931  003A1A                     __ptext20:
  7932                           	opt callstack 0
  7933  003A1A                     _printf:
  7934                           	opt callstack 16
  7935                           
  7936                           ;incstack = 0
  7937  003A1A  0EEF               	movlw	low (?_printf+2)
  7938  003A1C  0100               	movlb	0	; () banked
  7939  003A1E  6FF7               	movwf	printf@ap& (0+255),b
  7940  003A20  0E00               	movlw	high (?_printf+2)
  7941  003A22  6FF8               	movwf	(printf@ap+1)& (0+255),b
  7942                           
  7943                           ; BSR set to: 0
  7944  003A24  0E00               	movlw	0
  7945  003A26  6FE5               	movwf	vfprintf@fp& (0+255),b
  7946  003A28  0E00               	movlw	0
  7947  003A2A  6FE6               	movwf	(vfprintf@fp+1)& (0+255),b
  7948  003A2C  C0ED  F0E7         	movff	printf@fmt,vfprintf@fmt
  7949  003A30  C0EE  F0E8         	movff	printf@fmt+1,vfprintf@fmt+1
  7950  003A34  0EF7               	movlw	low printf@ap
  7951  003A36  6FE9               	movwf	vfprintf@ap& (0+255),b
  7952  003A38  0E00               	movlw	high printf@ap
  7953  003A3A  6FEA               	movwf	(vfprintf@ap+1)& (0+255),b
  7954  003A3C  EC1C  F01B         	call	_vfprintf	;wreg free
  7955  003A40  0012               	return		;funcret
  7956  003A42                     __end_of_printf:
  7957                           	opt callstack 0
  7958                           
  7959 ;; *************** function _vfprintf *****************
  7960 ;; Defined at:
  7961 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7962 ;; Parameters:    Size  Location     Type
  7963 ;;  fp              2  101[BANK0 ] PTR struct _IO_FILE
  7964 ;;		 -> NULL(0), 
  7965 ;;  fmt             2  103[BANK0 ] PTR const unsigned char 
  7966 ;;		 -> STR_61(10), STR_60(11), STR_59(11), STR_58(12), 
  7967 ;;		 -> STR_57(12), STR_56(10), STR_55(10), STR_54(13), 
  7968 ;;		 -> STR_53(8), STR_52(17), STR_51(15), STR_50(15), 
  7969 ;;		 -> STR_49(12), STR_48(17), STR_47(12), STR_46(15), 
  7970 ;;		 -> STR_45(18), STR_44(17), STR_43(12), STR_42(15), 
  7971 ;;		 -> STR_41(18), STR_40(17), STR_39(14), STR_38(14), 
  7972 ;;		 -> STR_37(17), STR_36(3), STR_35(9), STR_34(16), 
  7973 ;;		 -> STR_33(3), STR_32(9), STR_31(17), STR_30(15), 
  7974 ;;		 -> STR_29(15), STR_28(12), STR_27(10), STR_26(15), 
  7975 ;;		 -> STR_25(12), STR_24(10), STR_23(16), STR_22(12), 
  7976 ;;		 -> STR_21(3), STR_20(11), STR_19(13), STR_18(8), 
  7977 ;;		 -> STR_17(10), STR_16(17), STR_15(10), STR_14(16), 
  7978 ;;		 -> STR_13(10), STR_12(16), STR_11(10), STR_10(17), 
  7979 ;;		 -> STR_9(5), STR_8(10), STR_7(14), STR_6(6), 
  7980 ;;		 -> STR_5(10), STR_4(10), STR_3(11), STR_2(13), 
  7981 ;;		 -> STR_1(10), 
  7982 ;;  ap              2  105[BANK0 ] PTR PTR void 
  7983 ;;		 -> printf@ap(2), 
  7984 ;; Auto vars:     Size  Location     Type
  7985 ;;  cfmt            2  107[BANK0 ] PTR unsigned char 
  7986 ;;		 -> STR_61(10), STR_60(11), STR_59(11), STR_58(12), 
  7987 ;;		 -> STR_57(12), STR_56(10), STR_55(10), STR_54(13), 
  7988 ;;		 -> STR_53(8), STR_52(17), STR_51(15), STR_50(15), 
  7989 ;;		 -> STR_49(12), STR_48(17), STR_47(12), STR_46(15), 
  7990 ;;		 -> STR_45(18), STR_44(17), STR_43(12), STR_42(15), 
  7991 ;;		 -> STR_41(18), STR_40(17), STR_39(14), STR_38(14), 
  7992 ;;		 -> STR_37(17), STR_36(3), STR_35(9), STR_34(16), 
  7993 ;;		 -> STR_33(3), STR_32(9), STR_31(17), STR_30(15), 
  7994 ;;		 -> STR_29(15), STR_28(12), STR_27(10), STR_26(15), 
  7995 ;;		 -> STR_25(12), STR_24(10), STR_23(16), STR_22(12), 
  7996 ;;		 -> STR_21(3), STR_20(11), STR_19(13), STR_18(8), 
  7997 ;;		 -> STR_17(10), STR_16(17), STR_15(10), STR_14(16), 
  7998 ;;		 -> STR_13(10), STR_12(16), STR_11(10), STR_10(17), 
  7999 ;;		 -> STR_9(5), STR_8(10), STR_7(14), STR_6(6), 
  8000 ;;		 -> STR_5(10), STR_4(10), STR_3(11), STR_2(13), 
  8001 ;;		 -> STR_1(10), 
  8002 ;; Return value:  Size  Location     Type
  8003 ;;                  2  101[BANK0 ] int 
  8004 ;; Registers used:
  8005 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8006 ;; Tracked objects:
  8007 ;;		On entry : 0/0
  8008 ;;		On exit  : 0/0
  8009 ;;		Unchanged: 0/0
  8010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8011 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8012 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8014 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8015 ;;Total ram usage:        8 bytes
  8016 ;; Hardware stack levels used:    1
  8017 ;; Hardware stack levels required when called:   12
  8018 ;; This function calls:
  8019 ;;		_vfpfcnvrt
  8020 ;; This function is called by:
  8021 ;;		_printf
  8022 ;; This function uses a non-reentrant model
  8023 ;;
  8024                           
  8025                           	psect	text21
  8026  003638                     __ptext21:
  8027                           	opt callstack 0
  8028  003638                     _vfprintf:
  8029                           	opt callstack 16
  8030                           
  8031                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  8032                           
  8033                           ;incstack = 0
  8034  003638  C0E7  F0EB         	movff	vfprintf@fmt,vfprintf@cfmt
  8035  00363C  C0E8  F0EC         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  8036                           
  8037                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  8038  003640  0E00               	movlw	0
  8039  003642  6E49               	movwf	_nout+1,c
  8040  003644  0E00               	movlw	0
  8041  003646  6E48               	movwf	_nout,c
  8042                           
  8043                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  8044  003648  D014               	goto	l6720
  8045  00364A                     l6718:
  8046                           
  8047                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  8048  00364A  C0E5  F0C6         	movff	vfprintf@fp,vfpfcnvrt@fp
  8049  00364E  C0E6  F0C7         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  8050  003652  0EEB               	movlw	low vfprintf@cfmt
  8051  003654  0100               	movlb	0	; () banked
  8052  003656  6FC8               	movwf	vfpfcnvrt@fmt& (0+255),b
  8053  003658  0E00               	movlw	high vfprintf@cfmt
  8054  00365A  6FC9               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  8055  00365C  C0E9  F0CA         	movff	vfprintf@ap,vfpfcnvrt@ap
  8056  003660  C0EA  F0CB         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  8057  003664  EC43  F009         	call	_vfpfcnvrt	;wreg free
  8058  003668  0100               	movlb	0	; () banked
  8059  00366A  51C6               	movf	?_vfpfcnvrt& (0+255),w,b
  8060  00366C  2648               	addwf	_nout,f,c
  8061  00366E  51C7               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  8062  003670  2249               	addwfc	_nout+1,f,c
  8063  003672                     l6720:
  8064                           
  8065                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  8066  003672  C0EB  FFF6         	movff	vfprintf@cfmt,tblptrl
  8067  003676  C0EC  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  8068  00367A                     	if	0	;tblptru may be non-zero
  8069  00367A                     	endif
  8070  00367A                     	if	0	;tblptru may be non-zero
  8071  00367A                     	endif
  8072  00367A  0008               	tblrd		*
  8073  00367C  50F5               	movf	tablat,w,c
  8074  00367E  0900               	iorlw	0
  8075  003680  A4D8               	btfss	status,2,c
  8076  003682  D7E3               	goto	l6718
  8077                           
  8078                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  8079  003684  C048  F0E5         	movff	_nout,?_vfprintf
  8080  003688  C049  F0E6         	movff	_nout+1,?_vfprintf+1
  8081  00368C  0012               	return		;funcret
  8082  00368E                     __end_of_vfprintf:
  8083                           	opt callstack 0
  8084                           
  8085 ;; *************** function _vfpfcnvrt *****************
  8086 ;; Defined at:
  8087 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8088 ;; Parameters:    Size  Location     Type
  8089 ;;  fp              2   70[BANK0 ] PTR struct _IO_FILE
  8090 ;;		 -> NULL(0), 
  8091 ;;  fmt             2   72[BANK0 ] PTR PTR unsigned char 
  8092 ;;		 -> vfprintf@cfmt(2), 
  8093 ;;  ap              2   74[BANK0 ] PTR PTR void 
  8094 ;;		 -> printf@ap(2), 
  8095 ;; Auto vars:     Size  Location     Type
  8096 ;;  llu             8   88[BANK0 ] unsigned long long 
  8097 ;;  ll              8   80[BANK0 ] long long 
  8098 ;;  f               4    0        long long 
  8099 ;;  vp              3    0        PTR void 
  8100 ;;  ct              3    0        unsigned char [3]
  8101 ;;  cp              3    0        PTR unsigned char 
  8102 ;;  done            2   97[BANK0 ] int 
  8103 ;;  i               2    0        int 
  8104 ;;  c               1   96[BANK0 ] unsigned char 
  8105 ;; Return value:  Size  Location     Type
  8106 ;;                  2   70[BANK0 ] int 
  8107 ;; Registers used:
  8108 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8109 ;; Tracked objects:
  8110 ;;		On entry : 0/0
  8111 ;;		On exit  : 0/0
  8112 ;;		Unchanged: 0/0
  8113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8114 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8115 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8116 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8117 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8118 ;;Total ram usage:       31 bytes
  8119 ;; Hardware stack levels used:    1
  8120 ;; Hardware stack levels required when called:   11
  8121 ;; This function calls:
  8122 ;;		_atoi
  8123 ;;		_dtoa
  8124 ;;		_fputc
  8125 ;;		_isdigit
  8126 ;;		_xtoa
  8127 ;; This function is called by:
  8128 ;;		_vfprintf
  8129 ;; This function uses a non-reentrant model
  8130 ;;
  8131                           
  8132                           	psect	text22
  8133  001286                     __ptext22:
  8134                           	opt callstack 0
  8135  001286                     _vfpfcnvrt:
  8136                           	opt callstack 16
  8137                           
  8138                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  8139                           
  8140                           ;incstack = 0
  8141  001286  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8142  00128A  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8143  00128E  CFDE FFF6          	movff	postinc2,tblptrl
  8144  001292  CFDD FFF7          	movff	postdec2,tblptrh
  8145  001296                     	if	0	;tblptru may be non-zero
  8146  001296                     	endif
  8147  001296                     	if	0	;tblptru may be non-zero
  8148  001296                     	endif
  8149  001296  0008               	tblrd		*
  8150  001298  50F5               	movf	tablat,w,c
  8151  00129A  0A25               	xorlw	37
  8152  00129C  A4D8               	btfss	status,2,c
  8153  00129E  D1AD               	goto	l6698
  8154                           
  8155                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  8156  0012A0  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8157  0012A4  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8158  0012A8  2ADE               	incf	postinc2,f,c
  8159  0012AA  0E00               	movlw	0
  8160  0012AC  22DD               	addwfc	postdec2,f,c
  8161                           
  8162                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  8163  0012AE  0E00               	movlw	0
  8164  0012B0  6E4B               	movwf	_width+1,c
  8165  0012B2  0E00               	movlw	0
  8166  0012B4  6E4A               	movwf	_width,c
  8167  0012B6  C04A  F04E         	movff	_width,_flags
  8168  0012BA  C04B  F04F         	movff	_width+1,_flags+1
  8169                           
  8170                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  8171  0012BE  684C               	setf	_prec,c
  8172  0012C0  684D               	setf	_prec+1,c
  8173                           
  8174                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  8175  0012C2  0E00               	movlw	0
  8176  0012C4  0100               	movlb	0	; () banked
  8177  0012C6  6FE2               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  8178  0012C8  0E00               	movlw	0
  8179  0012CA  D014               	goto	L3
  8180  0012CC                     l6610:
  8181                           
  8182                           ; BSR set to: 0
  8183                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  8184  0012CC  804E               	bsf	_flags,0,c
  8185  0012CE                     l6612:
  8186                           
  8187                           ; BSR set to: 0
  8188                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  8189  0012CE  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8190  0012D2  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8191  0012D6  2ADE               	incf	postinc2,f,c
  8192  0012D8  0E00               	movlw	0
  8193  0012DA  22DD               	addwfc	postdec2,f,c
  8194                           
  8195                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  8196  0012DC  D02E               	goto	l6636
  8197  0012DE                     l6614:
  8198                           
  8199                           ; BSR set to: 0
  8200                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  8201  0012DE  824E               	bsf	_flags,1,c
  8202  0012E0  D7F6               	goto	l6612
  8203  0012E2                     l6618:
  8204                           
  8205                           ; BSR set to: 0
  8206                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  8207  0012E2  844E               	bsf	_flags,2,c
  8208  0012E4  D7F4               	goto	l6612
  8209  0012E6                     l6622:
  8210                           
  8211                           ; BSR set to: 0
  8212                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  8213  0012E6  864E               	bsf	_flags,3,c
  8214  0012E8  D7F2               	goto	l6612
  8215  0012EA                     l6626:
  8216                           
  8217                           ; BSR set to: 0
  8218                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  8219  0012EA  884E               	bsf	_flags,4,c
  8220  0012EC  D7F0               	goto	l6612
  8221  0012EE                     l6630:
  8222                           
  8223                           ; BSR set to: 0
  8224                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  8225  0012EE  0E00               	movlw	0
  8226  0012F0  6FE2               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  8227  0012F2  0E01               	movlw	1
  8228  0012F4                     L3:
  8229  0012F4  6FE1               	movwf	vfpfcnvrt@done& (0+255),b
  8230                           
  8231                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  8232  0012F6  D021               	goto	l6636
  8233  0012F8                     l6634:
  8234                           
  8235                           ; BSR set to: 0
  8236  0012F8  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8237  0012FC  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8238  001300  CFDE FFF6          	movff	postinc2,tblptrl
  8239  001304  CFDD FFF7          	movff	postdec2,tblptrh
  8240  001308                     	if	0	;tblptru may be non-zero
  8241  001308                     	endif
  8242  001308                     	if	0	;tblptru may be non-zero
  8243  001308                     	endif
  8244  001308  0008               	tblrd		*
  8245  00130A  50F5               	movf	tablat,w,c
  8246  00130C  6FCC               	movwf	??_vfpfcnvrt& (0+255),b
  8247  00130E  6BCD               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  8248                           
  8249                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8250                           ; Switch size 1, requested type "simple"
  8251                           ; Number of cases is 1, Range of values is 0 to 0
  8252                           ; switch strategies available:
  8253                           ; Name         Instructions Cycles
  8254                           ; simple_byte            4     3 (average)
  8255                           ;	Chosen strategy is simple_byte
  8256  001310  51CD               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  8257  001312  0A00               	xorlw	0	; case 0
  8258  001314  A4D8               	btfss	status,2,c
  8259  001316  D7EB               	goto	l6630
  8260                           
  8261                           ; BSR set to: 0
  8262                           ; Switch size 1, requested type "simple"
  8263                           ; Number of cases is 5, Range of values is 32 to 48
  8264                           ; switch strategies available:
  8265                           ; Name         Instructions Cycles
  8266                           ; simple_byte           16     9 (average)
  8267                           ;	Chosen strategy is simple_byte
  8268  001318  51CC               	movf	??_vfpfcnvrt& (0+255),w,b
  8269  00131A  0A20               	xorlw	32	; case 32
  8270  00131C  B4D8               	btfsc	status,2,c
  8271  00131E  D7E3               	goto	l6622
  8272  001320  0A03               	xorlw	3	; case 35
  8273  001322  B4D8               	btfsc	status,2,c
  8274  001324  D7E2               	goto	l6626
  8275  001326  0A08               	xorlw	8	; case 43
  8276  001328  B4D8               	btfsc	status,2,c
  8277  00132A  D7DB               	goto	l6618
  8278  00132C  0A06               	xorlw	6	; case 45
  8279  00132E  B4D8               	btfsc	status,2,c
  8280  001330  D7CD               	goto	l6610
  8281  001332  0A1D               	xorlw	29	; case 48
  8282  001334  B4D8               	btfsc	status,2,c
  8283  001336  D7D3               	goto	l6614
  8284  001338  D7DA               	goto	l6630
  8285  00133A                     l6636:
  8286                           
  8287                           ; BSR set to: 0
  8288                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  8289  00133A  51E1               	movf	vfpfcnvrt@done& (0+255),w,b
  8290  00133C  11E2               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  8291  00133E  B4D8               	btfsc	status,2,c
  8292  001340  D7DB               	goto	l6634
  8293                           
  8294                           ; BSR set to: 0
  8295                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  8296  001342  B04E               	btfsc	_flags,0,c
  8297                           
  8298                           ; BSR set to: 0
  8299                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  8300  001344  924E               	bcf	_flags,1,c
  8301                           
  8302                           ; BSR set to: 0
  8303                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  8304  001346  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8305  00134A  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8306  00134E  CFDE FFF6          	movff	postinc2,tblptrl
  8307  001352  CFDD FFF7          	movff	postdec2,tblptrh
  8308  001356                     	if	0	;tblptru may be non-zero
  8309  001356                     	endif
  8310  001356                     	if	0	;tblptru may be non-zero
  8311  001356                     	endif
  8312  001356  0008               	tblrd		*
  8313  001358  50F5               	movf	tablat,w,c
  8314  00135A  0A2A               	xorlw	42
  8315  00135C  A4D8               	btfss	status,2,c
  8316  00135E  D023               	goto	l6648
  8317                           
  8318                           ; BSR set to: 0
  8319                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  8320  001360  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8321  001364  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8322  001368  2ADE               	incf	postinc2,f,c
  8323  00136A  0E00               	movlw	0
  8324  00136C  22DD               	addwfc	postdec2,f,c
  8325                           
  8326                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  8327  00136E  C0CA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8328  001372  C0CB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8329  001376  CFDF F0CC          	movff	indf2,??_vfpfcnvrt
  8330  00137A  0E02               	movlw	2
  8331  00137C  26DE               	addwf	postinc2,f,c
  8332  00137E  CFDF F0CD          	movff	indf2,??_vfpfcnvrt+1
  8333  001382  0E00               	movlw	0
  8334  001384  22DD               	addwfc	postdec2,f,c
  8335  001386  C0CC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8336  00138A  C0CD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8337  00138E  CFDE F04A          	movff	postinc2,_width
  8338  001392  CFDD F04B          	movff	postdec2,_width+1
  8339                           
  8340                           ; BSR set to: 0
  8341                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  8342  001396  AE4B               	btfss	_width+1,7,c
  8343  001398  D040               	goto	u7270
  8344                           
  8345                           ; BSR set to: 0
  8346                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  8347  00139A  804E               	bsf	_flags,0,c
  8348                           
  8349                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  8350  00139C  6C4A               	negf	_width,c
  8351  00139E  1E4B               	comf	_width+1,f,c
  8352  0013A0  B0D8               	btfsc	status,0,c
  8353  0013A2  2A4B               	incf	_width+1,f,c
  8354  0013A4  D03A               	goto	u7270
  8355  0013A6                     l6648:
  8356                           
  8357                           ; BSR set to: 0
  8358                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  8359  0013A6  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8360  0013AA  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8361  0013AE  CFDE F087          	movff	postinc2,atoi@s
  8362  0013B2  CFDD F088          	movff	postdec2,atoi@s+1
  8363  0013B6  ECF6  F013         	call	_atoi	;wreg free
  8364  0013BA  C087  F04A         	movff	?_atoi,_width
  8365  0013BE  C088  F04B         	movff	?_atoi+1,_width+1
  8366                           
  8367                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  8368  0013C2  D007               	goto	l6652
  8369  0013C4                     l6650:
  8370                           
  8371                           ; BSR set to: 0
  8372                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  8373  0013C4  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8374  0013C8  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8375  0013CC  2ADE               	incf	postinc2,f,c
  8376  0013CE  0E00               	movlw	0
  8377  0013D0  22DD               	addwfc	postdec2,f,c
  8378  0013D2                     l6652:
  8379  0013D2  0ED0               	movlw	208
  8380  0013D4  0100               	movlb	0	; () banked
  8381  0013D6  6FCC               	movwf	??_vfpfcnvrt& (0+255),b
  8382  0013D8  0EFF               	movlw	255
  8383  0013DA  6FCD               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  8384  0013DC  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8385  0013E0  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8386  0013E4  CFDE FFF6          	movff	postinc2,tblptrl
  8387  0013E8  CFDD FFF7          	movff	postdec2,tblptrh
  8388  0013EC                     	if	0	;tblptru may be non-zero
  8389  0013EC                     	endif
  8390  0013EC                     	if	0	;tblptru may be non-zero
  8391  0013EC                     	endif
  8392  0013EC  0008               	tblrd		*
  8393  0013EE  50F5               	movf	tablat,w,c
  8394  0013F0  6FCE               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  8395  0013F2  6BCF               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  8396  0013F4  51CC               	movf	??_vfpfcnvrt& (0+255),w,b
  8397  0013F6  27CE               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  8398  0013F8  51CD               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  8399  0013FA  23CF               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  8400  0013FC  51CF               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  8401  0013FE  E106               	bnz	u7250
  8402  001400  0E0A               	movlw	10
  8403  001402  5DCE               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  8404  001404  B0D8               	btfsc	status,0,c
  8405  001406  D002               	goto	u7250
  8406  001408  0E01               	movlw	1
  8407  00140A  D001               	goto	u7260
  8408  00140C                     u7250:
  8409  00140C  0E00               	movlw	0
  8410  00140E                     u7260:
  8411  00140E  6FE3               	movwf	_vfpfcnvrt$1125& (0+255),b
  8412  001410  6BE4               	clrf	(_vfpfcnvrt$1125+1)& (0+255),b
  8413                           
  8414                           ; BSR set to: 0
  8415  001412  51E3               	movf	_vfpfcnvrt$1125& (0+255),w,b
  8416  001414  11E4               	iorwf	(_vfpfcnvrt$1125+1)& (0+255),w,b
  8417  001416  A4D8               	btfss	status,2,c
  8418  001418  D7D5               	goto	l6650
  8419  00141A                     u7270:
  8420                           
  8421                           ; BSR set to: 0
  8422                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  8423  00141A  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8424  00141E  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8425  001422  CFDE FFF6          	movff	postinc2,tblptrl
  8426  001426  CFDD FFF7          	movff	postdec2,tblptrh
  8427  00142A                     	if	0	;tblptru may be non-zero
  8428  00142A                     	endif
  8429  00142A                     	if	0	;tblptru may be non-zero
  8430  00142A                     	endif
  8431  00142A  0008               	tblrd		*
  8432  00142C  50F5               	movf	tablat,w,c
  8433  00142E  0A64               	xorlw	100
  8434  001430  B4D8               	btfsc	status,2,c
  8435  001432  D00D               	goto	u7290
  8436                           
  8437                           ; BSR set to: 0
  8438  001434  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8439  001438  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8440  00143C  CFDE FFF6          	movff	postinc2,tblptrl
  8441  001440  CFDD FFF7          	movff	postdec2,tblptrh
  8442  001444                     	if	0	;tblptru may be non-zero
  8443  001444                     	endif
  8444  001444                     	if	0	;tblptru may be non-zero
  8445  001444                     	endif
  8446  001444  0008               	tblrd		*
  8447  001446  50F5               	movf	tablat,w,c
  8448  001448  0A69               	xorlw	105
  8449  00144A  A4D8               	btfss	status,2,c
  8450  00144C  D03F               	goto	l6668
  8451  00144E                     u7290:
  8452                           
  8453                           ; BSR set to: 0
  8454                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  8455  00144E  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8456  001452  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8457  001456  2ADE               	incf	postinc2,f,c
  8458  001458  0E00               	movlw	0
  8459  00145A  22DD               	addwfc	postdec2,f,c
  8460                           
  8461                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  8462  00145C  C0CA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8463  001460  C0CB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8464  001464  CFDF F0CC          	movff	indf2,??_vfpfcnvrt
  8465  001468  0E02               	movlw	2
  8466  00146A  26DE               	addwf	postinc2,f,c
  8467  00146C  CFDF F0CD          	movff	indf2,??_vfpfcnvrt+1
  8468  001470  0E00               	movlw	0
  8469  001472  22DD               	addwfc	postdec2,f,c
  8470  001474  C0CC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8471  001478  C0CD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8472  00147C  CFDE F0D0          	movff	postinc2,vfpfcnvrt@ll
  8473  001480  CFDD F0D1          	movff	postdec2,vfpfcnvrt@ll+1
  8474  001484  0E00               	movlw	0
  8475  001486  BFD1               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  8476  001488  0EFF               	movlw	-1
  8477  00148A  6FD2               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  8478  00148C  6FD3               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  8479  00148E  6FD4               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  8480  001490  6FD5               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  8481  001492  6FD6               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  8482  001494  6FD7               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  8483                           
  8484                           ; BSR set to: 0
  8485                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  8486  001496  C0C6  F09F         	movff	vfpfcnvrt@fp,dtoa@fp
  8487  00149A  C0C7  F0A0         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  8488  00149E  C0D0  F0A1         	movff	vfpfcnvrt@ll,dtoa@d
  8489  0014A2  C0D1  F0A2         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  8490  0014A6  C0D2  F0A3         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  8491  0014AA  C0D3  F0A4         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  8492  0014AE  C0D4  F0A5         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  8493  0014B2  C0D5  F0A6         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  8494  0014B6  C0D6  F0A7         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  8495  0014BA  C0D7  F0A8         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  8496  0014BE  ECF4  F00D         	call	_dtoa	;wreg free
  8497  0014C2  C09F  F0C6         	movff	?_dtoa,?_vfpfcnvrt
  8498  0014C6  C0A0  F0C7         	movff	?_dtoa+1,?_vfpfcnvrt+1
  8499  0014CA  0012               	return	
  8500  0014CC                     l6668:
  8501                           
  8502                           ; BSR set to: 0
  8503                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  8504  0014CC  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8505  0014D0  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8506  0014D4  CFDE FFF6          	movff	postinc2,tblptrl
  8507  0014D8  CFDD FFF7          	movff	postdec2,tblptrh
  8508  0014DC                     	if	0	;tblptru may be non-zero
  8509  0014DC                     	endif
  8510  0014DC                     	if	0	;tblptru may be non-zero
  8511  0014DC                     	endif
  8512  0014DC  0008               	tblrd		*
  8513  0014DE  50F5               	movf	tablat,w,c
  8514  0014E0  0A78               	xorlw	120
  8515  0014E2  B4D8               	btfsc	status,2,c
  8516  0014E4  D00D               	goto	u7310
  8517                           
  8518                           ; BSR set to: 0
  8519  0014E6  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8520  0014EA  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8521  0014EE  CFDE FFF6          	movff	postinc2,tblptrl
  8522  0014F2  CFDD FFF7          	movff	postdec2,tblptrh
  8523  0014F6                     	if	0	;tblptru may be non-zero
  8524  0014F6                     	endif
  8525  0014F6                     	if	0	;tblptru may be non-zero
  8526  0014F6                     	endif
  8527  0014F6  0008               	tblrd		*
  8528  0014F8  50F5               	movf	tablat,w,c
  8529  0014FA  0A58               	xorlw	88
  8530  0014FC  A4D8               	btfss	status,2,c
  8531  0014FE  D04D               	goto	l6682
  8532  001500                     u7310:
  8533                           
  8534                           ; BSR set to: 0
  8535                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  8536  001500  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8537  001504  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8538  001508  CFDE FFF6          	movff	postinc2,tblptrl
  8539  00150C  CFDD FFF7          	movff	postdec2,tblptrh
  8540  001510                     	if	0	;tblptru may be non-zero
  8541  001510                     	endif
  8542  001510                     	if	0	;tblptru may be non-zero
  8543  001510                     	endif
  8544  001510  0008               	tblrd		*
  8545  001512  CFF5 F0E0          	movff	tablat,vfpfcnvrt@c
  8546                           
  8547                           ; BSR set to: 0
  8548                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  8549  001516  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8550  00151A  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8551  00151E  2ADE               	incf	postinc2,f,c
  8552  001520  0E00               	movlw	0
  8553  001522  22DD               	addwfc	postdec2,f,c
  8554                           
  8555                           ; BSR set to: 0
  8556                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  8557  001524  C0CA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8558  001528  C0CB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8559  00152C  CFDF F0CC          	movff	indf2,??_vfpfcnvrt
  8560  001530  0E02               	movlw	2
  8561  001532  26DE               	addwf	postinc2,f,c
  8562  001534  CFDF F0CD          	movff	indf2,??_vfpfcnvrt+1
  8563  001538  0E00               	movlw	0
  8564  00153A  22DD               	addwfc	postdec2,f,c
  8565  00153C  C0CC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8566  001540  C0CD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8567  001544  CFDE F0CE          	movff	postinc2,??_vfpfcnvrt+2
  8568  001548  CFDD F0CF          	movff	postdec2,??_vfpfcnvrt+3
  8569  00154C  C0CE  F0D8         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  8570  001550  C0CF  F0D9         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  8571  001554  6BDA               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  8572  001556  6BDB               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  8573  001558  6BDC               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  8574  00155A  6BDD               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  8575  00155C  6BDE               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  8576  00155E  6BDF               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  8577                           
  8578                           ; BSR set to: 0
  8579                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
  8580  001560  C0C6  F09F         	movff	vfpfcnvrt@fp,xtoa@fp
  8581  001564  C0C7  F0A0         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  8582  001568  C0D8  F0A1         	movff	vfpfcnvrt@llu,xtoa@d
  8583  00156C  C0D9  F0A2         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  8584  001570  C0DA  F0A3         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  8585  001574  C0DB  F0A4         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  8586  001578  C0DC  F0A5         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  8587  00157C  C0DD  F0A6         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  8588  001580  C0DE  F0A7         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  8589  001584  C0DF  F0A8         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  8590  001588  C0E0  F0A9         	movff	vfpfcnvrt@c,xtoa@x
  8591  00158C  EC18  F00F         	call	_xtoa	;wreg free
  8592  001590  C09F  F0C6         	movff	?_xtoa,?_vfpfcnvrt
  8593  001594  C0A0  F0C7         	movff	?_xtoa+1,?_vfpfcnvrt+1
  8594  001598  0012               	return	
  8595  00159A                     l6682:
  8596                           
  8597                           ; BSR set to: 0
  8598                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  8599  00159A  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8600  00159E  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8601  0015A2  CFDE FFF6          	movff	postinc2,tblptrl
  8602  0015A6  CFDD FFF7          	movff	postdec2,tblptrh
  8603  0015AA                     	if	0	;tblptru may be non-zero
  8604  0015AA                     	endif
  8605  0015AA                     	if	0	;tblptru may be non-zero
  8606  0015AA                     	endif
  8607  0015AA  0008               	tblrd		*
  8608  0015AC  50F5               	movf	tablat,w,c
  8609  0015AE  0A25               	xorlw	37
  8610  0015B0  A4D8               	btfss	status,2,c
  8611  0015B2  D017               	goto	l6692
  8612                           
  8613                           ; BSR set to: 0
  8614                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  8615  0015B4  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8616  0015B8  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8617  0015BC  2ADE               	incf	postinc2,f,c
  8618  0015BE  0E00               	movlw	0
  8619  0015C0  22DD               	addwfc	postdec2,f,c
  8620                           
  8621                           ; BSR set to: 0
  8622                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  8623  0015C2  0E00               	movlw	0
  8624  0015C4  6F85               	movwf	(fputc@c+1)& (0+255),b
  8625  0015C6  0E25               	movlw	37
  8626  0015C8  6F84               	movwf	fputc@c& (0+255),b
  8627  0015CA  C0C6  F086         	movff	vfpfcnvrt@fp,fputc@fp
  8628  0015CE  C0C7  F087         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  8629  0015D2  EC2B  F01A         	call	_fputc	;wreg free
  8630  0015D6                     l6688:
  8631                           
  8632                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  8633  0015D6  0E00               	movlw	0
  8634  0015D8  0100               	movlb	0	; () banked
  8635  0015DA  6FC7               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  8636  0015DC  0E01               	movlw	1
  8637  0015DE  6FC6               	movwf	?_vfpfcnvrt& (0+255),b
  8638  0015E0  0012               	return	
  8639  0015E2                     l6692:
  8640                           
  8641                           ; BSR set to: 0
  8642                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  8643  0015E2  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8644  0015E6  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8645  0015EA  2ADE               	incf	postinc2,f,c
  8646  0015EC  0E00               	movlw	0
  8647  0015EE  22DD               	addwfc	postdec2,f,c
  8648                           
  8649                           ; BSR set to: 0
  8650                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  8651  0015F0  0E00               	movlw	0
  8652  0015F2  6FC7               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  8653  0015F4  0E00               	movlw	0
  8654  0015F6  6FC6               	movwf	?_vfpfcnvrt& (0+255),b
  8655  0015F8  0012               	return	
  8656  0015FA                     l6698:
  8657                           
  8658                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  8659  0015FA  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8660  0015FE  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8661  001602  CFDE FFF6          	movff	postinc2,tblptrl
  8662  001606  CFDD FFF7          	movff	postdec2,tblptrh
  8663  00160A                     	if	0	;tblptru may be non-zero
  8664  00160A                     	endif
  8665  00160A                     	if	0	;tblptru may be non-zero
  8666  00160A                     	endif
  8667  00160A  0008               	tblrd		*
  8668  00160C  50F5               	movf	tablat,w,c
  8669  00160E  0100               	movlb	0	; () banked
  8670  001610  6F84               	movwf	fputc@c& (0+255),b
  8671  001612  6B85               	clrf	(fputc@c+1)& (0+255),b
  8672  001614  C0C6  F086         	movff	vfpfcnvrt@fp,fputc@fp
  8673  001618  C0C7  F087         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  8674  00161C  EC2B  F01A         	call	_fputc	;wreg free
  8675                           
  8676                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  8677  001620  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8678  001624  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8679  001628  2ADE               	incf	postinc2,f,c
  8680  00162A  0E00               	movlw	0
  8681  00162C  22DD               	addwfc	postdec2,f,c
  8682  00162E  D7D3               	goto	l6688
  8683  001630                     __end_of_vfpfcnvrt:
  8684                           	opt callstack 0
  8685                           
  8686 ;; *************** function _xtoa *****************
  8687 ;; Defined at:
  8688 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8689 ;; Parameters:    Size  Location     Type
  8690 ;;  fp              2   31[BANK0 ] PTR struct _IO_FILE
  8691 ;;		 -> NULL(0), 
  8692 ;;  d               8   33[BANK0 ] unsigned long long 
  8693 ;;  x               1   41[BANK0 ] unsigned char 
  8694 ;; Auto vars:     Size  Location     Type
  8695 ;;  n               8   58[BANK0 ] unsigned long long 
  8696 ;;  c               2   68[BANK0 ] int 
  8697 ;;  i               2   66[BANK0 ] int 
  8698 ;;  w               2   56[BANK0 ] int 
  8699 ;;  p               2   54[BANK0 ] int 
  8700 ;; Return value:  Size  Location     Type
  8701 ;;                  2   31[BANK0 ] int 
  8702 ;; Registers used:
  8703 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8704 ;; Tracked objects:
  8705 ;;		On entry : 0/0
  8706 ;;		On exit  : 0/0
  8707 ;;		Unchanged: 0/0
  8708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8709 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8710 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8711 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8712 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8713 ;;Total ram usage:       39 bytes
  8714 ;; Hardware stack levels used:    1
  8715 ;; Hardware stack levels required when called:   10
  8716 ;; This function calls:
  8717 ;;		_isalpha
  8718 ;;		_isupper
  8719 ;;		_pad
  8720 ;;		_toupper
  8721 ;; This function is called by:
  8722 ;;		_vfpfcnvrt
  8723 ;; This function uses a non-reentrant model
  8724 ;;
  8725                           
  8726                           	psect	text23
  8727  001E30                     __ptext23:
  8728                           	opt callstack 0
  8729  001E30                     _xtoa:
  8730                           	opt callstack 16
  8731                           
  8732                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  8733                           
  8734                           ;incstack = 0
  8735  001E30  AE4D               	btfss	_prec+1,7,c
  8736                           
  8737                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  8738  001E32  924E               	bcf	_flags,1,c
  8739                           
  8740                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  8741  001E34  BE4D               	btfsc	_prec+1,7,c
  8742  001E36  D005               	goto	u6970
  8743  001E38  504D               	movf	_prec+1,w,c
  8744  001E3A  E109               	bnz	l620
  8745  001E3C  044C               	decf	_prec,w,c
  8746  001E3E  B0D8               	btfsc	status,0,c
  8747  001E40  D006               	goto	l620
  8748  001E42                     u6970:
  8749  001E42  0E00               	movlw	0
  8750  001E44  0100               	movlb	0	; () banked
  8751  001E46  6FB7               	movwf	(xtoa@p+1)& (0+255),b
  8752  001E48  0E01               	movlw	1
  8753  001E4A  6FB6               	movwf	xtoa@p& (0+255),b
  8754  001E4C  D004               	goto	l622
  8755  001E4E                     l620:
  8756  001E4E  C04C  F0B6         	movff	_prec,xtoa@p
  8757  001E52  C04D  F0B7         	movff	_prec+1,xtoa@p+1
  8758  001E56                     l622:
  8759                           
  8760                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  8761  001E56  C04A  F0B8         	movff	_width,xtoa@w
  8762  001E5A  C04B  F0B9         	movff	_width+1,xtoa@w+1
  8763                           
  8764                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  8765  001E5E  A84E               	btfss	_flags,4,c
  8766  001E60  D005               	goto	l6502
  8767                           
  8768                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  8769  001E62  0100               	movlb	0	; () banked
  8770  001E64  0EFE               	movlw	254
  8771  001E66  27B8               	addwf	xtoa@w& (0+255),f,b
  8772  001E68  0EFF               	movlw	255
  8773  001E6A  23B9               	addwfc	(xtoa@w+1)& (0+255),f,b
  8774  001E6C                     l6502:
  8775                           
  8776                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  8777  001E6C  C0A1  F0BA         	movff	xtoa@d,xtoa@n
  8778  001E70  C0A2  F0BB         	movff	xtoa@d+1,xtoa@n+1
  8779  001E74  C0A3  F0BC         	movff	xtoa@d+2,xtoa@n+2
  8780  001E78  C0A4  F0BD         	movff	xtoa@d+3,xtoa@n+3
  8781  001E7C  C0A5  F0BE         	movff	xtoa@d+4,xtoa@n+4
  8782  001E80  C0A6  F0BF         	movff	xtoa@d+5,xtoa@n+5
  8783  001E84  C0A7  F0C0         	movff	xtoa@d+6,xtoa@n+6
  8784  001E88  C0A8  F0C1         	movff	xtoa@d+7,xtoa@n+7
  8785                           
  8786                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  8787  001E8C  0E00               	movlw	0
  8788  001E8E  0100               	movlb	0	; () banked
  8789  001E90  6FC3               	movwf	(xtoa@i+1)& (0+255),b
  8790  001E92  0E1F               	movlw	31
  8791  001E94  6FC2               	movwf	xtoa@i& (0+255),b
  8792                           
  8793                           ; BSR set to: 0
  8794                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  8795  001E96  0E00               	movlw	0
  8796  001E98  0101               	movlb	1	; () banked
  8797  001E9A  6F97               	movwf	(_dbuf+31)& (0+255),b
  8798                           
  8799                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8800  001E9C  D094               	goto	l6538
  8801  001E9E                     l6508:
  8802                           
  8803                           ; BSR set to: 0
  8804                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  8805  001E9E  07C2               	decf	xtoa@i& (0+255),f,b
  8806  001EA0  A0D8               	btfss	status,0,c
  8807  001EA2  07C3               	decf	(xtoa@i+1)& (0+255),f,b
  8808                           
  8809                           ; BSR set to: 0
  8810                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  8811  001EA4  0E0F               	movlw	15
  8812  001EA6  15BA               	andwf	xtoa@n& (0+255),w,b
  8813  001EA8  6FC4               	movwf	xtoa@c& (0+255),b
  8814  001EAA  6BC5               	clrf	(xtoa@c+1)& (0+255),b
  8815                           
  8816                           ; BSR set to: 0
  8817                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  8818  001EAC  BFC5               	btfsc	(xtoa@c+1)& (0+255),7,b
  8819  001EAE  D008               	goto	l6516
  8820  001EB0  51C5               	movf	(xtoa@c+1)& (0+255),w,b
  8821  001EB2  E104               	bnz	u6990
  8822  001EB4  0E0A               	movlw	10
  8823  001EB6  5DC4               	subwf	xtoa@c& (0+255),w,b
  8824  001EB8  A0D8               	btfss	status,0,c
  8825  001EBA  D002               	goto	l6516
  8826  001EBC                     u6990:
  8827                           
  8828                           ; BSR set to: 0
  8829  001EBC  0E57               	movlw	87
  8830  001EBE  D001               	goto	L4
  8831  001EC0                     l6516:
  8832                           
  8833                           ; BSR set to: 0
  8834  001EC0  0E30               	movlw	48
  8835  001EC2                     L4:
  8836  001EC2  25C4               	addwf	xtoa@c& (0+255),w,b
  8837  001EC4  6FC4               	movwf	xtoa@c& (0+255),b
  8838  001EC6  0E00               	movlw	0
  8839  001EC8  21C5               	addwfc	(xtoa@c+1)& (0+255),w,b
  8840  001ECA  6FC5               	movwf	(xtoa@c+1)& (0+255),b
  8841                           
  8842                           ; BSR set to: 0
  8843                           
  8844                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 646:       
      +                            if ((0 ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsi
      +                          gned)(c)|32)-'a') < 26)) {
  8845  001ECC  0EBF               	movlw	191
  8846  001ECE  6FAA               	movwf	??_xtoa& (0+255),b
  8847  001ED0  0EFF               	movlw	255
  8848  001ED2  6FAB               	movwf	(??_xtoa+1)& (0+255),b
  8849  001ED4  51A9               	movf	xtoa@x& (0+255),w,b
  8850  001ED6  6FAC               	movwf	(??_xtoa+2)& (0+255),b
  8851  001ED8  6BAD               	clrf	(??_xtoa+3)& (0+255),b
  8852  001EDA  51AA               	movf	??_xtoa& (0+255),w,b
  8853  001EDC  27AC               	addwf	(??_xtoa+2)& (0+255),f,b
  8854  001EDE  51AB               	movf	(??_xtoa+1)& (0+255),w,b
  8855  001EE0  23AD               	addwfc	(??_xtoa+3)& (0+255),f,b
  8856  001EE2  51AD               	movf	(??_xtoa+3)& (0+255),w,b
  8857  001EE4  E106               	bnz	u7000
  8858  001EE6  0E1A               	movlw	26
  8859  001EE8  5DAC               	subwf	(??_xtoa+2)& (0+255),w,b
  8860  001EEA  B0D8               	btfsc	status,0,c
  8861  001EEC  D002               	goto	u7000
  8862  001EEE  0E01               	movlw	1
  8863  001EF0  D001               	goto	u7010
  8864  001EF2                     u7000:
  8865  001EF2  0E00               	movlw	0
  8866  001EF4                     u7010:
  8867  001EF4  6FB2               	movwf	_xtoa$1110& (0+255),b
  8868  001EF6  6BB3               	clrf	(_xtoa$1110+1)& (0+255),b
  8869                           
  8870                           ; BSR set to: 0
  8871  001EF8  51B2               	movf	_xtoa$1110& (0+255),w,b
  8872  001EFA  11B3               	iorwf	(_xtoa$1110+1)& (0+255),w,b
  8873  001EFC  B4D8               	btfsc	status,2,c
  8874  001EFE  D027               	goto	l6530
  8875                           
  8876                           ; BSR set to: 0
  8877  001F00  0E9F               	movlw	159
  8878  001F02  6FAA               	movwf	??_xtoa& (0+255),b
  8879  001F04  0EFF               	movlw	255
  8880  001F06  6FAB               	movwf	(??_xtoa+1)& (0+255),b
  8881  001F08  0E20               	movlw	32
  8882  001F0A  11C4               	iorwf	xtoa@c& (0+255),w,b
  8883  001F0C  6FAC               	movwf	(??_xtoa+2)& (0+255),b
  8884  001F0E  0E00               	movlw	0
  8885  001F10  11C5               	iorwf	(xtoa@c+1)& (0+255),w,b
  8886  001F12  6FAD               	movwf	(??_xtoa+3)& (0+255),b
  8887  001F14  51AA               	movf	??_xtoa& (0+255),w,b
  8888  001F16  27AC               	addwf	(??_xtoa+2)& (0+255),f,b
  8889  001F18  51AB               	movf	(??_xtoa+1)& (0+255),w,b
  8890  001F1A  23AD               	addwfc	(??_xtoa+3)& (0+255),f,b
  8891  001F1C  51AD               	movf	(??_xtoa+3)& (0+255),w,b
  8892  001F1E  E106               	bnz	u7030
  8893  001F20  0E1A               	movlw	26
  8894  001F22  5DAC               	subwf	(??_xtoa+2)& (0+255),w,b
  8895  001F24  B0D8               	btfsc	status,0,c
  8896  001F26  D002               	goto	u7030
  8897  001F28  0E01               	movlw	1
  8898  001F2A  D001               	goto	u7040
  8899  001F2C                     u7030:
  8900  001F2C  0E00               	movlw	0
  8901  001F2E                     u7040:
  8902  001F2E  6FB4               	movwf	_xtoa$1111& (0+255),b
  8903  001F30  6BB5               	clrf	(_xtoa$1111+1)& (0+255),b
  8904                           
  8905                           ; BSR set to: 0
  8906  001F32  51B4               	movf	_xtoa$1111& (0+255),w,b
  8907  001F34  11B5               	iorwf	(_xtoa$1111+1)& (0+255),w,b
  8908  001F36  B4D8               	btfsc	status,2,c
  8909  001F38  D00A               	goto	l6530
  8910                           
  8911                           ; BSR set to: 0
  8912                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  8913  001F3A  C0C4  F086         	movff	xtoa@c,toupper@c
  8914  001F3E  C0C5  F087         	movff	xtoa@c+1,toupper@c+1
  8915  001F42  EC98  F01B         	call	_toupper	;wreg free
  8916  001F46  C086  F0C4         	movff	?_toupper,xtoa@c
  8917  001F4A  C087  F0C5         	movff	?_toupper+1,xtoa@c+1
  8918  001F4E                     l6530:
  8919                           
  8920                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  8921  001F4E  0E78               	movlw	low _dbuf
  8922  001F50  0100               	movlb	0	; () banked
  8923  001F52  25C2               	addwf	xtoa@i& (0+255),w,b
  8924  001F54  6ED9               	movwf	fsr2l,c
  8925  001F56  0E01               	movlw	high _dbuf
  8926  001F58  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
  8927  001F5A  6EDA               	movwf	fsr2h,c
  8928  001F5C  C0C4  FFDF         	movff	xtoa@c,indf2
  8929                           
  8930                           ; BSR set to: 0
  8931                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  8932  001F60  07B6               	decf	xtoa@p& (0+255),f,b
  8933  001F62  A0D8               	btfss	status,0,c
  8934  001F64  07B7               	decf	(xtoa@p+1)& (0+255),f,b
  8935                           
  8936                           ; BSR set to: 0
  8937                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  8938  001F66  07B8               	decf	xtoa@w& (0+255),f,b
  8939  001F68  A0D8               	btfss	status,0,c
  8940  001F6A  07B9               	decf	(xtoa@w+1)& (0+255),f,b
  8941                           
  8942                           ; BSR set to: 0
  8943                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  8944  001F6C  C0BA  F0AA         	movff	xtoa@n,??_xtoa
  8945  001F70  C0BB  F0AB         	movff	xtoa@n+1,??_xtoa+1
  8946  001F74  C0BC  F0AC         	movff	xtoa@n+2,??_xtoa+2
  8947  001F78  C0BD  F0AD         	movff	xtoa@n+3,??_xtoa+3
  8948  001F7C  C0BE  F0AE         	movff	xtoa@n+4,??_xtoa+4
  8949  001F80  C0BF  F0AF         	movff	xtoa@n+5,??_xtoa+5
  8950  001F84  C0C0  F0B0         	movff	xtoa@n+6,??_xtoa+6
  8951  001F88  C0C1  F0B1         	movff	xtoa@n+7,??_xtoa+7
  8952  001F8C  0E05               	movlw	5
  8953  001F8E  D009               	goto	u7060
  8954  001F90                     u7065:
  8955  001F90  90D8               	bcf	status,0,c
  8956  001F92  33B1               	rrcf	(??_xtoa+7)& (0+255),f,b
  8957  001F94  33B0               	rrcf	(??_xtoa+6)& (0+255),f,b
  8958  001F96  33AF               	rrcf	(??_xtoa+5)& (0+255),f,b
  8959  001F98  33AE               	rrcf	(??_xtoa+4)& (0+255),f,b
  8960  001F9A  33AD               	rrcf	(??_xtoa+3)& (0+255),f,b
  8961  001F9C  33AC               	rrcf	(??_xtoa+2)& (0+255),f,b
  8962  001F9E  33AB               	rrcf	(??_xtoa+1)& (0+255),f,b
  8963  001FA0  33AA               	rrcf	??_xtoa& (0+255),f,b
  8964  001FA2                     u7060:
  8965  001FA2  2EE8               	decfsz	wreg,f,c
  8966  001FA4  D7F5               	goto	u7065
  8967  001FA6  C0AA  F0BA         	movff	??_xtoa,xtoa@n
  8968  001FAA  C0AB  F0BB         	movff	??_xtoa+1,xtoa@n+1
  8969  001FAE  C0AC  F0BC         	movff	??_xtoa+2,xtoa@n+2
  8970  001FB2  C0AD  F0BD         	movff	??_xtoa+3,xtoa@n+3
  8971  001FB6  C0AE  F0BE         	movff	??_xtoa+4,xtoa@n+4
  8972  001FBA  C0AF  F0BF         	movff	??_xtoa+5,xtoa@n+5
  8973  001FBE  C0B0  F0C0         	movff	??_xtoa+6,xtoa@n+6
  8974  001FC2  C0B1  F0C1         	movff	??_xtoa+7,xtoa@n+7
  8975  001FC6                     l6538:
  8976                           
  8977                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8978  001FC6  0100               	movlb	0	; () banked
  8979  001FC8  BFC3               	btfsc	(xtoa@i+1)& (0+255),7,b
  8980  001FCA  D020               	goto	u7110
  8981  001FCC  51C3               	movf	(xtoa@i+1)& (0+255),w,b
  8982  001FCE  E104               	bnz	u7070
  8983  001FD0  0E02               	movlw	2
  8984  001FD2  5DC2               	subwf	xtoa@i& (0+255),w,b
  8985  001FD4  A0D8               	btfss	status,0,c
  8986  001FD6  D01A               	goto	u7110
  8987  001FD8                     u7070:
  8988                           
  8989                           ; BSR set to: 0
  8990  001FD8  51BA               	movf	xtoa@n& (0+255),w,b
  8991  001FDA  11BB               	iorwf	(xtoa@n+1)& (0+255),w,b
  8992  001FDC  11BC               	iorwf	(xtoa@n+2)& (0+255),w,b
  8993  001FDE  11BD               	iorwf	(xtoa@n+3)& (0+255),w,b
  8994  001FE0  11BE               	iorwf	(xtoa@n+4)& (0+255),w,b
  8995  001FE2  11BF               	iorwf	(xtoa@n+5)& (0+255),w,b
  8996  001FE4  11C0               	iorwf	(xtoa@n+6)& (0+255),w,b
  8997  001FE6  11C1               	iorwf	(xtoa@n+7)& (0+255),w,b
  8998  001FE8  A4D8               	btfss	status,2,c
  8999  001FEA  D759               	goto	l6508
  9000                           
  9001                           ; BSR set to: 0
  9002  001FEC  BFB7               	btfsc	(xtoa@p+1)& (0+255),7,b
  9003  001FEE  D005               	goto	u7090
  9004  001FF0  51B7               	movf	(xtoa@p+1)& (0+255),w,b
  9005  001FF2  E102               	bnz	u7091
  9006  001FF4  05B6               	decf	xtoa@p& (0+255),w,b
  9007  001FF6  B0D8               	btfsc	status,0,c
  9008  001FF8                     u7091:
  9009  001FF8  D752               	goto	l6508
  9010  001FFA                     u7090:
  9011                           
  9012                           ; BSR set to: 0
  9013  001FFA  BFB9               	btfsc	(xtoa@w+1)& (0+255),7,b
  9014  001FFC  D007               	goto	u7110
  9015  001FFE  51B9               	movf	(xtoa@w+1)& (0+255),w,b
  9016  002000  E103               	bnz	u7100
  9017  002002  05B8               	decf	xtoa@w& (0+255),w,b
  9018  002004  A0D8               	btfss	status,0,c
  9019  002006  D002               	goto	u7110
  9020  002008                     u7100:
  9021                           
  9022                           ; BSR set to: 0
  9023  002008  B24E               	btfsc	_flags,1,c
  9024  00200A  D749               	goto	l6508
  9025  00200C                     u7110:
  9026                           
  9027                           ; BSR set to: 0
  9028                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  9029  00200C  A84E               	btfss	_flags,4,c
  9030  00200E  D016               	goto	l6554
  9031                           
  9032                           ; BSR set to: 0
  9033                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  9034  002010  07C2               	decf	xtoa@i& (0+255),f,b
  9035  002012  A0D8               	btfss	status,0,c
  9036  002014  07C3               	decf	(xtoa@i+1)& (0+255),f,b
  9037                           
  9038                           ; BSR set to: 0
  9039                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  9040  002016  0E78               	movlw	low _dbuf
  9041  002018  25C2               	addwf	xtoa@i& (0+255),w,b
  9042  00201A  6ED9               	movwf	fsr2l,c
  9043  00201C  0E01               	movlw	high _dbuf
  9044  00201E  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
  9045  002020  6EDA               	movwf	fsr2h,c
  9046  002022  C0A9  FFDF         	movff	xtoa@x,indf2
  9047                           
  9048                           ; BSR set to: 0
  9049                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  9050  002026  07C2               	decf	xtoa@i& (0+255),f,b
  9051  002028  A0D8               	btfss	status,0,c
  9052  00202A  07C3               	decf	(xtoa@i+1)& (0+255),f,b
  9053                           
  9054                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  9055  00202C  0E78               	movlw	low _dbuf
  9056  00202E  25C2               	addwf	xtoa@i& (0+255),w,b
  9057  002030  6ED9               	movwf	fsr2l,c
  9058  002032  0E01               	movlw	high _dbuf
  9059  002034  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
  9060  002036  6EDA               	movwf	fsr2h,c
  9061  002038  0E30               	movlw	48
  9062  00203A  6EDF               	movwf	indf2,c
  9063  00203C                     l6554:
  9064                           
  9065                           ; BSR set to: 0
  9066                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  9067  00203C  C09F  F094         	movff	xtoa@fp,pad@fp
  9068  002040  C0A0  F095         	movff	xtoa@fp+1,pad@fp+1
  9069  002044  0E78               	movlw	low _dbuf
  9070  002046  25C2               	addwf	xtoa@i& (0+255),w,b
  9071  002048  6F96               	movwf	pad@buf& (0+255),b
  9072  00204A  0E01               	movlw	high _dbuf
  9073  00204C  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
  9074  00204E  6F97               	movwf	(pad@buf+1)& (0+255),b
  9075  002050  C0B8  F098         	movff	xtoa@w,pad@p
  9076  002054  C0B9  F099         	movff	xtoa@w+1,pad@p+1
  9077  002058  EC9A  F018         	call	_pad	;wreg free
  9078  00205C  C094  F09F         	movff	?_pad,?_xtoa
  9079  002060  C095  F0A0         	movff	?_pad+1,?_xtoa+1
  9080  002064  0012               	return		;funcret
  9081  002066                     __end_of_xtoa:
  9082                           	opt callstack 0
  9083                           
  9084 ;; *************** function _toupper *****************
  9085 ;; Defined at:
  9086 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  9087 ;; Parameters:    Size  Location     Type
  9088 ;;  c               2    6[BANK0 ] int 
  9089 ;; Auto vars:     Size  Location     Type
  9090 ;;		None
  9091 ;; Return value:  Size  Location     Type
  9092 ;;                  2    6[BANK0 ] int 
  9093 ;; Registers used:
  9094 ;;		wreg, status,2, status,0
  9095 ;; Tracked objects:
  9096 ;;		On entry : 0/0
  9097 ;;		On exit  : 0/0
  9098 ;;		Unchanged: 0/0
  9099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9100 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9101 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9102 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9103 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9104 ;;Total ram usage:        8 bytes
  9105 ;; Hardware stack levels used:    1
  9106 ;; Hardware stack levels required when called:    4
  9107 ;; This function calls:
  9108 ;;		_islower
  9109 ;; This function is called by:
  9110 ;;		_xtoa
  9111 ;; This function uses a non-reentrant model
  9112 ;;
  9113                           
  9114                           	psect	text24
  9115  003730                     __ptext24:
  9116                           	opt callstack 0
  9117  003730                     _toupper:
  9118                           	opt callstack 21
  9119                           
  9120                           ;incstack = 0
  9121  003730  0E9F               	movlw	159
  9122  003732  0100               	movlb	0	; () banked
  9123  003734  6F88               	movwf	??_toupper& (0+255),b
  9124  003736  0EFF               	movlw	255
  9125  003738  6F89               	movwf	(??_toupper+1)& (0+255),b
  9126  00373A  C086  F08A         	movff	toupper@c,??_toupper+2
  9127  00373E  C087  F08B         	movff	toupper@c+1,??_toupper+3
  9128  003742  5188               	movf	??_toupper& (0+255),w,b
  9129  003744  278A               	addwf	(??_toupper+2)& (0+255),f,b
  9130  003746  5189               	movf	(??_toupper+1)& (0+255),w,b
  9131  003748  238B               	addwfc	(??_toupper+3)& (0+255),f,b
  9132  00374A  518B               	movf	(??_toupper+3)& (0+255),w,b
  9133  00374C  E106               	bnz	u6610
  9134  00374E  0E1A               	movlw	26
  9135  003750  5D8A               	subwf	(??_toupper+2)& (0+255),w,b
  9136  003752  B0D8               	btfsc	status,0,c
  9137  003754  D002               	goto	u6610
  9138  003756  0E01               	movlw	1
  9139  003758  D001               	goto	u6620
  9140  00375A                     u6610:
  9141  00375A  0E00               	movlw	0
  9142  00375C                     u6620:
  9143  00375C  6F8C               	movwf	_toupper$1675& (0+255),b
  9144  00375E  6B8D               	clrf	(_toupper$1675+1)& (0+255),b
  9145                           
  9146                           ; BSR set to: 0
  9147  003760  518C               	movf	_toupper$1675& (0+255),w,b
  9148  003762  118D               	iorwf	(_toupper$1675+1)& (0+255),w,b
  9149  003764  B4D8               	btfsc	status,2,c
  9150  003766  D005               	goto	l1460
  9151                           
  9152                           ; BSR set to: 0
  9153  003768  0E5F               	movlw	95
  9154  00376A  1586               	andwf	toupper@c& (0+255),w,b
  9155  00376C  6F86               	movwf	?_toupper& (0+255),b
  9156  00376E  6B87               	clrf	(?_toupper+1)& (0+255),b
  9157  003770  0012               	return	
  9158  003772                     l1460:
  9159                           
  9160                           ; BSR set to: 0
  9161  003772  C086  F086         	movff	toupper@c,?_toupper
  9162  003776  C087  F087         	movff	toupper@c+1,?_toupper+1
  9163                           
  9164                           ; BSR set to: 0
  9165  00377A  0012               	return		;funcret
  9166  00377C                     __end_of_toupper:
  9167                           	opt callstack 0
  9168                           
  9169 ;; *************** function _islower *****************
  9170 ;; Defined at:
  9171 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  9172 ;; Parameters:    Size  Location     Type
  9173 ;;  c               2    0[BANK0 ] int 
  9174 ;; Auto vars:     Size  Location     Type
  9175 ;;		None
  9176 ;; Return value:  Size  Location     Type
  9177 ;;                  2    0[BANK0 ] int 
  9178 ;; Registers used:
  9179 ;;		wreg, status,2, status,0
  9180 ;; Tracked objects:
  9181 ;;		On entry : 0/0
  9182 ;;		On exit  : 0/0
  9183 ;;		Unchanged: 0/0
  9184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9185 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9187 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9188 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9189 ;;Total ram usage:        6 bytes
  9190 ;; Hardware stack levels used:    1
  9191 ;; Hardware stack levels required when called:    3
  9192 ;; This function calls:
  9193 ;;		Nothing
  9194 ;; This function is called by:
  9195 ;;		_toupper
  9196 ;; This function uses a non-reentrant model
  9197 ;;
  9198                           
  9199                           	psect	text25
  9200  0038D2                     __ptext25:
  9201                           	opt callstack 0
  9202  0038D2                     _islower:
  9203                           	opt callstack 21
  9204                           
  9205                           ; BSR set to: 0
  9206                           ;incstack = 0
  9207  0038D2  0E9F               	movlw	159
  9208  0038D4  0100               	movlb	0	; () banked
  9209  0038D6  6F82               	movwf	??_islower& (0+255),b
  9210  0038D8  0EFF               	movlw	255
  9211  0038DA  6F83               	movwf	(??_islower+1)& (0+255),b
  9212  0038DC  C080  F084         	movff	islower@c,??_islower+2
  9213  0038E0  C081  F085         	movff	islower@c+1,??_islower+3
  9214  0038E4  5182               	movf	??_islower& (0+255),w,b
  9215  0038E6  2784               	addwf	(??_islower+2)& (0+255),f,b
  9216  0038E8  5183               	movf	(??_islower+1)& (0+255),w,b
  9217  0038EA  2385               	addwfc	(??_islower+3)& (0+255),f,b
  9218  0038EC  5185               	movf	(??_islower+3)& (0+255),w,b
  9219  0038EE  E106               	bnz	u6500
  9220  0038F0  0E1A               	movlw	26
  9221  0038F2  5D84               	subwf	(??_islower+2)& (0+255),w,b
  9222  0038F4  B0D8               	btfsc	status,0,c
  9223  0038F6  D002               	goto	u6500
  9224  0038F8  0E01               	movlw	1
  9225  0038FA  D001               	goto	u6510
  9226  0038FC                     u6500:
  9227  0038FC  0E00               	movlw	0
  9228  0038FE                     u6510:
  9229  0038FE  6F80               	movwf	?_islower& (0+255),b
  9230  003900  6B81               	clrf	(?_islower+1)& (0+255),b
  9231                           
  9232                           ; BSR set to: 0
  9233  003902  0012               	return		;funcret
  9234  003904                     __end_of_islower:
  9235                           	opt callstack 0
  9236                           
  9237 ;; *************** function _isupper *****************
  9238 ;; Defined at:
  9239 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  9240 ;; Parameters:    Size  Location     Type
  9241 ;;  c               2    0[BANK0 ] int 
  9242 ;; Auto vars:     Size  Location     Type
  9243 ;;		None
  9244 ;; Return value:  Size  Location     Type
  9245 ;;                  2    0[BANK0 ] int 
  9246 ;; Registers used:
  9247 ;;		wreg, status,2, status,0
  9248 ;; Tracked objects:
  9249 ;;		On entry : 0/0
  9250 ;;		On exit  : 0/0
  9251 ;;		Unchanged: 0/0
  9252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9253 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9255 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9256 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9257 ;;Total ram usage:        6 bytes
  9258 ;; Hardware stack levels used:    1
  9259 ;; Hardware stack levels required when called:    3
  9260 ;; This function calls:
  9261 ;;		Nothing
  9262 ;; This function is called by:
  9263 ;;		_xtoa
  9264 ;; This function uses a non-reentrant model
  9265 ;;
  9266                           
  9267                           	psect	text26
  9268  003904                     __ptext26:
  9269                           	opt callstack 0
  9270  003904                     _isupper:
  9271                           	opt callstack 22
  9272                           
  9273                           ; BSR set to: 0
  9274                           ;incstack = 0
  9275  003904  0EBF               	movlw	191
  9276  003906  0100               	movlb	0	; () banked
  9277  003908  6F82               	movwf	??_isupper& (0+255),b
  9278  00390A  0EFF               	movlw	255
  9279  00390C  6F83               	movwf	(??_isupper+1)& (0+255),b
  9280  00390E  C080  F084         	movff	isupper@c,??_isupper+2
  9281  003912  C081  F085         	movff	isupper@c+1,??_isupper+3
  9282  003916  5182               	movf	??_isupper& (0+255),w,b
  9283  003918  2784               	addwf	(??_isupper+2)& (0+255),f,b
  9284  00391A  5183               	movf	(??_isupper+1)& (0+255),w,b
  9285  00391C  2385               	addwfc	(??_isupper+3)& (0+255),f,b
  9286  00391E  5185               	movf	(??_isupper+3)& (0+255),w,b
  9287  003920  E106               	bnz	u6570
  9288  003922  0E1A               	movlw	26
  9289  003924  5D84               	subwf	(??_isupper+2)& (0+255),w,b
  9290  003926  B0D8               	btfsc	status,0,c
  9291  003928  D002               	goto	u6570
  9292  00392A  0E01               	movlw	1
  9293  00392C  D001               	goto	u6580
  9294  00392E                     u6570:
  9295  00392E  0E00               	movlw	0
  9296  003930                     u6580:
  9297  003930  6F80               	movwf	?_isupper& (0+255),b
  9298  003932  6B81               	clrf	(?_isupper+1)& (0+255),b
  9299                           
  9300                           ; BSR set to: 0
  9301  003934  0012               	return		;funcret
  9302  003936                     __end_of_isupper:
  9303                           	opt callstack 0
  9304                           
  9305 ;; *************** function _isalpha *****************
  9306 ;; Defined at:
  9307 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  9308 ;; Parameters:    Size  Location     Type
  9309 ;;  c               2    0[BANK0 ] int 
  9310 ;; Auto vars:     Size  Location     Type
  9311 ;;		None
  9312 ;; Return value:  Size  Location     Type
  9313 ;;                  2    0[BANK0 ] int 
  9314 ;; Registers used:
  9315 ;;		wreg, status,2, status,0
  9316 ;; Tracked objects:
  9317 ;;		On entry : 0/0
  9318 ;;		On exit  : 0/0
  9319 ;;		Unchanged: 0/0
  9320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9321 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9323 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9324 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9325 ;;Total ram usage:        6 bytes
  9326 ;; Hardware stack levels used:    1
  9327 ;; Hardware stack levels required when called:    3
  9328 ;; This function calls:
  9329 ;;		Nothing
  9330 ;; This function is called by:
  9331 ;;		_xtoa
  9332 ;; This function uses a non-reentrant model
  9333 ;;
  9334                           
  9335                           	psect	text27
  9336  003836                     __ptext27:
  9337                           	opt callstack 0
  9338  003836                     _isalpha:
  9339                           	opt callstack 22
  9340                           
  9341                           ; BSR set to: 0
  9342                           ;incstack = 0
  9343  003836  0E9F               	movlw	159
  9344  003838  0100               	movlb	0	; () banked
  9345  00383A  6F82               	movwf	??_isalpha& (0+255),b
  9346  00383C  0EFF               	movlw	255
  9347  00383E  6F83               	movwf	(??_isalpha+1)& (0+255),b
  9348  003840  0E20               	movlw	32
  9349  003842  1180               	iorwf	isalpha@c& (0+255),w,b
  9350  003844  6F84               	movwf	(??_isalpha+2)& (0+255),b
  9351  003846  0E00               	movlw	0
  9352  003848  1181               	iorwf	(isalpha@c+1)& (0+255),w,b
  9353  00384A  6F85               	movwf	(??_isalpha+3)& (0+255),b
  9354  00384C  5182               	movf	??_isalpha& (0+255),w,b
  9355  00384E  2784               	addwf	(??_isalpha+2)& (0+255),f,b
  9356  003850  5183               	movf	(??_isalpha+1)& (0+255),w,b
  9357  003852  2385               	addwfc	(??_isalpha+3)& (0+255),f,b
  9358  003854  5185               	movf	(??_isalpha+3)& (0+255),w,b
  9359  003856  E106               	bnz	u6590
  9360  003858  0E1A               	movlw	26
  9361  00385A  5D84               	subwf	(??_isalpha+2)& (0+255),w,b
  9362  00385C  B0D8               	btfsc	status,0,c
  9363  00385E  D002               	goto	u6590
  9364  003860  0E01               	movlw	1
  9365  003862  D001               	goto	u6600
  9366  003864                     u6590:
  9367  003864  0E00               	movlw	0
  9368  003866                     u6600:
  9369  003866  6F80               	movwf	?_isalpha& (0+255),b
  9370  003868  6B81               	clrf	(?_isalpha+1)& (0+255),b
  9371                           
  9372                           ; BSR set to: 0
  9373  00386A  0012               	return		;funcret
  9374  00386C                     __end_of_isalpha:
  9375                           	opt callstack 0
  9376                           
  9377 ;; *************** function _dtoa *****************
  9378 ;; Defined at:
  9379 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9380 ;; Parameters:    Size  Location     Type
  9381 ;;  fp              2   31[BANK0 ] PTR struct _IO_FILE
  9382 ;;		 -> NULL(0), 
  9383 ;;  d               8   33[BANK0 ] long long 
  9384 ;; Auto vars:     Size  Location     Type
  9385 ;;  n               8   57[BANK0 ] long long 
  9386 ;;  i               2   65[BANK0 ] int 
  9387 ;;  s               2   55[BANK0 ] int 
  9388 ;;  w               2   53[BANK0 ] int 
  9389 ;;  p               2   51[BANK0 ] int 
  9390 ;; Return value:  Size  Location     Type
  9391 ;;                  2   31[BANK0 ] int 
  9392 ;; Registers used:
  9393 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9394 ;; Tracked objects:
  9395 ;;		On entry : 0/0
  9396 ;;		On exit  : 0/0
  9397 ;;		Unchanged: 0/0
  9398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9399 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9400 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9401 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9402 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9403 ;;Total ram usage:       36 bytes
  9404 ;; Hardware stack levels used:    1
  9405 ;; Hardware stack levels required when called:   10
  9406 ;; This function calls:
  9407 ;;		___aodiv
  9408 ;;		___aomod
  9409 ;;		_abs
  9410 ;;		_pad
  9411 ;; This function is called by:
  9412 ;;		_vfpfcnvrt
  9413 ;; This function uses a non-reentrant model
  9414 ;;
  9415                           
  9416                           	psect	text28
  9417  001BE8                     __ptext28:
  9418                           	opt callstack 0
  9419  001BE8                     _dtoa:
  9420                           	opt callstack 16
  9421                           
  9422                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  9423                           
  9424                           ; BSR set to: 0
  9425                           ;incstack = 0
  9426  001BE8  C0A1  F0B9         	movff	dtoa@d,dtoa@n
  9427  001BEC  C0A2  F0BA         	movff	dtoa@d+1,dtoa@n+1
  9428  001BF0  C0A3  F0BB         	movff	dtoa@d+2,dtoa@n+2
  9429  001BF4  C0A4  F0BC         	movff	dtoa@d+3,dtoa@n+3
  9430  001BF8  C0A5  F0BD         	movff	dtoa@d+4,dtoa@n+4
  9431  001BFC  C0A6  F0BE         	movff	dtoa@d+5,dtoa@n+5
  9432  001C00  C0A7  F0BF         	movff	dtoa@d+6,dtoa@n+6
  9433  001C04  C0A8  F0C0         	movff	dtoa@d+7,dtoa@n+7
  9434                           
  9435                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  9436  001C08  0100               	movlb	0	; () banked
  9437  001C0A  AFC0               	btfss	(dtoa@n+7)& (0+255),7,b
  9438  001C0C  D002               	goto	u6810
  9439  001C0E  0E01               	movlw	1
  9440  001C10  D001               	goto	u6820
  9441  001C12                     u6810:
  9442  001C12  0E00               	movlw	0
  9443  001C14                     u6820:
  9444  001C14  6FB7               	movwf	dtoa@s& (0+255),b
  9445  001C16  6BB8               	clrf	(dtoa@s+1)& (0+255),b
  9446                           
  9447                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  9448  001C18  51B7               	movf	dtoa@s& (0+255),w,b
  9449  001C1A  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
  9450  001C1C  B4D8               	btfsc	status,2,c
  9451  001C1E  D010               	goto	l6436
  9452                           
  9453                           ; BSR set to: 0
  9454                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  9455  001C20  1FC0               	comf	(dtoa@n+7)& (0+255),f,b
  9456  001C22  1FBF               	comf	(dtoa@n+6)& (0+255),f,b
  9457  001C24  1FBE               	comf	(dtoa@n+5)& (0+255),f,b
  9458  001C26  1FBD               	comf	(dtoa@n+4)& (0+255),f,b
  9459  001C28  1FBC               	comf	(dtoa@n+3)& (0+255),f,b
  9460  001C2A  1FBB               	comf	(dtoa@n+2)& (0+255),f,b
  9461  001C2C  1FBA               	comf	(dtoa@n+1)& (0+255),f,b
  9462  001C2E  6DB9               	negf	dtoa@n& (0+255),b
  9463  001C30  0E00               	movlw	0
  9464  001C32  23BA               	addwfc	(dtoa@n+1)& (0+255),f,b
  9465  001C34  23BB               	addwfc	(dtoa@n+2)& (0+255),f,b
  9466  001C36  23BC               	addwfc	(dtoa@n+3)& (0+255),f,b
  9467  001C38  23BD               	addwfc	(dtoa@n+4)& (0+255),f,b
  9468  001C3A  23BE               	addwfc	(dtoa@n+5)& (0+255),f,b
  9469  001C3C  23BF               	addwfc	(dtoa@n+6)& (0+255),f,b
  9470  001C3E  23C0               	addwfc	(dtoa@n+7)& (0+255),f,b
  9471  001C40                     l6436:
  9472                           
  9473                           ; BSR set to: 0
  9474                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  9475  001C40  AE4D               	btfss	_prec+1,7,c
  9476                           
  9477                           ; BSR set to: 0
  9478                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  9479  001C42  924E               	bcf	_flags,1,c
  9480                           
  9481                           ; BSR set to: 0
  9482                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  9483  001C44  BE4D               	btfsc	_prec+1,7,c
  9484  001C46  D005               	goto	u6850
  9485  001C48  504D               	movf	_prec+1,w,c
  9486  001C4A  E108               	bnz	l595
  9487  001C4C  044C               	decf	_prec,w,c
  9488  001C4E  B0D8               	btfsc	status,0,c
  9489  001C50  D005               	goto	l595
  9490  001C52                     u6850:
  9491                           
  9492                           ; BSR set to: 0
  9493  001C52  0E00               	movlw	0
  9494  001C54  6FB4               	movwf	(dtoa@p+1)& (0+255),b
  9495  001C56  0E01               	movlw	1
  9496  001C58  6FB3               	movwf	dtoa@p& (0+255),b
  9497  001C5A  D004               	goto	l597
  9498  001C5C                     l595:
  9499                           
  9500                           ; BSR set to: 0
  9501  001C5C  C04C  F0B3         	movff	_prec,dtoa@p
  9502  001C60  C04D  F0B4         	movff	_prec+1,dtoa@p+1
  9503  001C64                     l597:
  9504                           
  9505                           ; BSR set to: 0
  9506                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  9507  001C64  C04A  F0B5         	movff	_width,dtoa@w
  9508  001C68  C04B  F0B6         	movff	_width+1,dtoa@w+1
  9509                           
  9510                           ; BSR set to: 0
  9511                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  9512  001C6C  51B7               	movf	dtoa@s& (0+255),w,b
  9513  001C6E  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
  9514  001C70  A4D8               	btfss	status,2,c
  9515  001C72  D002               	goto	u6870
  9516                           
  9517                           ; BSR set to: 0
  9518  001C74  A44E               	btfss	_flags,2,c
  9519  001C76  D003               	goto	l6450
  9520  001C78                     u6870:
  9521                           
  9522                           ; BSR set to: 0
  9523                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  9524  001C78  07B5               	decf	dtoa@w& (0+255),f,b
  9525  001C7A  A0D8               	btfss	status,0,c
  9526  001C7C  07B6               	decf	(dtoa@w+1)& (0+255),f,b
  9527  001C7E                     l6450:
  9528                           
  9529                           ; BSR set to: 0
  9530                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  9531  001C7E  0E00               	movlw	0
  9532  001C80  6FC2               	movwf	(dtoa@i+1)& (0+255),b
  9533  001C82  0E1F               	movlw	31
  9534  001C84  6FC1               	movwf	dtoa@i& (0+255),b
  9535                           
  9536                           ; BSR set to: 0
  9537                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  9538  001C86  0E00               	movlw	0
  9539  001C88  0101               	movlb	1	; () banked
  9540  001C8A  6F97               	movwf	(_dbuf+31)& (0+255),b
  9541                           
  9542                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9543  001C8C  D07D               	goto	l6464
  9544  001C8E                     l6454:
  9545                           
  9546                           ; BSR set to: 0
  9547                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  9548  001C8E  07C1               	decf	dtoa@i& (0+255),f,b
  9549  001C90  A0D8               	btfss	status,0,c
  9550  001C92  07C2               	decf	(dtoa@i+1)& (0+255),f,b
  9551                           
  9552                           ; BSR set to: 0
  9553                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  9554  001C94  0E78               	movlw	low _dbuf
  9555  001C96  25C1               	addwf	dtoa@i& (0+255),w,b
  9556  001C98  6ED9               	movwf	fsr2l,c
  9557  001C9A  0E01               	movlw	high _dbuf
  9558  001C9C  21C2               	addwfc	(dtoa@i+1)& (0+255),w,b
  9559  001C9E  6EDA               	movwf	fsr2h,c
  9560  001CA0  C0B9  F080         	movff	dtoa@n,___aomod@dividend
  9561  001CA4  C0BA  F081         	movff	dtoa@n+1,___aomod@dividend+1
  9562  001CA8  C0BB  F082         	movff	dtoa@n+2,___aomod@dividend+2
  9563  001CAC  C0BC  F083         	movff	dtoa@n+3,___aomod@dividend+3
  9564  001CB0  C0BD  F084         	movff	dtoa@n+4,___aomod@dividend+4
  9565  001CB4  C0BE  F085         	movff	dtoa@n+5,___aomod@dividend+5
  9566  001CB8  C0BF  F086         	movff	dtoa@n+6,___aomod@dividend+6
  9567  001CBC  C0C0  F087         	movff	dtoa@n+7,___aomod@dividend+7
  9568  001CC0  0E0A               	movlw	10
  9569  001CC2  6F88               	movwf	___aomod@divisor& (0+255),b
  9570  001CC4  0E00               	movlw	0
  9571  001CC6  6F89               	movwf	(___aomod@divisor+1)& (0+255),b
  9572  001CC8  0E00               	movlw	0
  9573  001CCA  6F8A               	movwf	(___aomod@divisor+2)& (0+255),b
  9574  001CCC  0E00               	movlw	0
  9575  001CCE  6F8B               	movwf	(___aomod@divisor+3)& (0+255),b
  9576  001CD0  0E00               	movlw	0
  9577  001CD2  6F8C               	movwf	(___aomod@divisor+4)& (0+255),b
  9578  001CD4  0E00               	movlw	0
  9579  001CD6  6F8D               	movwf	(___aomod@divisor+5)& (0+255),b
  9580  001CD8  0E00               	movlw	0
  9581  001CDA  6F8E               	movwf	(___aomod@divisor+6)& (0+255),b
  9582  001CDC  0E00               	movlw	0
  9583  001CDE  6F8F               	movwf	(___aomod@divisor+7)& (0+255),b
  9584  001CE0  ECD3  F015         	call	___aomod	;wreg free
  9585  001CE4  C080  F0A9         	movff	?___aomod,??_dtoa
  9586  001CE8  C081  F0AA         	movff	?___aomod+1,??_dtoa+1
  9587  001CEC  C082  F0AB         	movff	?___aomod+2,??_dtoa+2
  9588  001CF0  C083  F0AC         	movff	?___aomod+3,??_dtoa+3
  9589  001CF4  C084  F0AD         	movff	?___aomod+4,??_dtoa+4
  9590  001CF8  C085  F0AE         	movff	?___aomod+5,??_dtoa+5
  9591  001CFC  C086  F0AF         	movff	?___aomod+6,??_dtoa+6
  9592  001D00  C087  F0B0         	movff	?___aomod+7,??_dtoa+7
  9593  001D04  C0A9  F092         	movff	??_dtoa,abs@a
  9594  001D08  C0AB  F093         	movff	??_dtoa+2,abs@a+1
  9595  001D0C  EC36  F01C         	call	_abs	;wreg free
  9596  001D10  0100               	movlb	0	; () banked
  9597  001D12  5192               	movf	?_abs& (0+255),w,b
  9598  001D14  0F30               	addlw	48
  9599  001D16  6EDF               	movwf	indf2,c
  9600                           
  9601                           ; BSR set to: 0
  9602                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  9603  001D18  07B3               	decf	dtoa@p& (0+255),f,b
  9604  001D1A  A0D8               	btfss	status,0,c
  9605  001D1C  07B4               	decf	(dtoa@p+1)& (0+255),f,b
  9606                           
  9607                           ; BSR set to: 0
  9608                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  9609  001D1E  07B5               	decf	dtoa@w& (0+255),f,b
  9610  001D20  A0D8               	btfss	status,0,c
  9611  001D22  07B6               	decf	(dtoa@w+1)& (0+255),f,b
  9612                           
  9613                           ; BSR set to: 0
  9614                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  9615  001D24  C0B9  F080         	movff	dtoa@n,___aodiv@dividend
  9616  001D28  C0BA  F081         	movff	dtoa@n+1,___aodiv@dividend+1
  9617  001D2C  C0BB  F082         	movff	dtoa@n+2,___aodiv@dividend+2
  9618  001D30  C0BC  F083         	movff	dtoa@n+3,___aodiv@dividend+3
  9619  001D34  C0BD  F084         	movff	dtoa@n+4,___aodiv@dividend+4
  9620  001D38  C0BE  F085         	movff	dtoa@n+5,___aodiv@dividend+5
  9621  001D3C  C0BF  F086         	movff	dtoa@n+6,___aodiv@dividend+6
  9622  001D40  C0C0  F087         	movff	dtoa@n+7,___aodiv@dividend+7
  9623  001D44  0E0A               	movlw	10
  9624  001D46  6F88               	movwf	___aodiv@divisor& (0+255),b
  9625  001D48  0E00               	movlw	0
  9626  001D4A  6F89               	movwf	(___aodiv@divisor+1)& (0+255),b
  9627  001D4C  0E00               	movlw	0
  9628  001D4E  6F8A               	movwf	(___aodiv@divisor+2)& (0+255),b
  9629  001D50  0E00               	movlw	0
  9630  001D52  6F8B               	movwf	(___aodiv@divisor+3)& (0+255),b
  9631  001D54  0E00               	movlw	0
  9632  001D56  6F8C               	movwf	(___aodiv@divisor+4)& (0+255),b
  9633  001D58  0E00               	movlw	0
  9634  001D5A  6F8D               	movwf	(___aodiv@divisor+5)& (0+255),b
  9635  001D5C  0E00               	movlw	0
  9636  001D5E  6F8E               	movwf	(___aodiv@divisor+6)& (0+255),b
  9637  001D60  0E00               	movlw	0
  9638  001D62  6F8F               	movwf	(___aodiv@divisor+7)& (0+255),b
  9639  001D64  EC51  F013         	call	___aodiv	;wreg free
  9640  001D68  C080  F0B9         	movff	?___aodiv,dtoa@n
  9641  001D6C  C081  F0BA         	movff	?___aodiv+1,dtoa@n+1
  9642  001D70  C082  F0BB         	movff	?___aodiv+2,dtoa@n+2
  9643  001D74  C083  F0BC         	movff	?___aodiv+3,dtoa@n+3
  9644  001D78  C084  F0BD         	movff	?___aodiv+4,dtoa@n+4
  9645  001D7C  C085  F0BE         	movff	?___aodiv+5,dtoa@n+5
  9646  001D80  C086  F0BF         	movff	?___aodiv+6,dtoa@n+6
  9647  001D84  C087  F0C0         	movff	?___aodiv+7,dtoa@n+7
  9648  001D88                     l6464:
  9649                           
  9650                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9651  001D88  0100               	movlb	0	; () banked
  9652  001D8A  BFC2               	btfsc	(dtoa@i+1)& (0+255),7,b
  9653  001D8C  D01F               	goto	u6920
  9654  001D8E  51C2               	movf	(dtoa@i+1)& (0+255),w,b
  9655  001D90  E103               	bnz	u6880
  9656  001D92  05C1               	decf	dtoa@i& (0+255),w,b
  9657  001D94  A0D8               	btfss	status,0,c
  9658  001D96  D01A               	goto	u6920
  9659  001D98                     u6880:
  9660                           
  9661                           ; BSR set to: 0
  9662  001D98  51B9               	movf	dtoa@n& (0+255),w,b
  9663  001D9A  11BA               	iorwf	(dtoa@n+1)& (0+255),w,b
  9664  001D9C  11BB               	iorwf	(dtoa@n+2)& (0+255),w,b
  9665  001D9E  11BC               	iorwf	(dtoa@n+3)& (0+255),w,b
  9666  001DA0  11BD               	iorwf	(dtoa@n+4)& (0+255),w,b
  9667  001DA2  11BE               	iorwf	(dtoa@n+5)& (0+255),w,b
  9668  001DA4  11BF               	iorwf	(dtoa@n+6)& (0+255),w,b
  9669  001DA6  11C0               	iorwf	(dtoa@n+7)& (0+255),w,b
  9670  001DA8  A4D8               	btfss	status,2,c
  9671  001DAA  D771               	goto	l6454
  9672                           
  9673                           ; BSR set to: 0
  9674  001DAC  BFB4               	btfsc	(dtoa@p+1)& (0+255),7,b
  9675  001DAE  D005               	goto	u6900
  9676  001DB0  51B4               	movf	(dtoa@p+1)& (0+255),w,b
  9677  001DB2  E102               	bnz	u6901
  9678  001DB4  05B3               	decf	dtoa@p& (0+255),w,b
  9679  001DB6  B0D8               	btfsc	status,0,c
  9680  001DB8                     u6901:
  9681  001DB8  D76A               	goto	l6454
  9682  001DBA                     u6900:
  9683                           
  9684                           ; BSR set to: 0
  9685  001DBA  BFB6               	btfsc	(dtoa@w+1)& (0+255),7,b
  9686  001DBC  D007               	goto	u6920
  9687  001DBE  51B6               	movf	(dtoa@w+1)& (0+255),w,b
  9688  001DC0  E103               	bnz	u6910
  9689  001DC2  05B5               	decf	dtoa@w& (0+255),w,b
  9690  001DC4  A0D8               	btfss	status,0,c
  9691  001DC6  D002               	goto	u6920
  9692  001DC8                     u6910:
  9693                           
  9694                           ; BSR set to: 0
  9695  001DC8  B24E               	btfsc	_flags,1,c
  9696  001DCA  D761               	goto	l6454
  9697  001DCC                     u6920:
  9698                           
  9699                           ; BSR set to: 0
  9700                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  9701  001DCC  51B7               	movf	dtoa@s& (0+255),w,b
  9702  001DCE  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
  9703  001DD0  A4D8               	btfss	status,2,c
  9704  001DD2  D002               	goto	u6940
  9705                           
  9706                           ; BSR set to: 0
  9707  001DD4  A44E               	btfss	_flags,2,c
  9708  001DD6  D017               	goto	l6488
  9709  001DD8                     u6940:
  9710                           
  9711                           ; BSR set to: 0
  9712                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  9713  001DD8  07C1               	decf	dtoa@i& (0+255),f,b
  9714  001DDA  A0D8               	btfss	status,0,c
  9715  001DDC  07C2               	decf	(dtoa@i+1)& (0+255),f,b
  9716                           
  9717                           ; BSR set to: 0
  9718                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  9719  001DDE  51B7               	movf	dtoa@s& (0+255),w,b
  9720  001DE0  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
  9721  001DE2  A4D8               	btfss	status,2,c
  9722  001DE4  D004               	goto	l6484
  9723                           
  9724                           ; BSR set to: 0
  9725  001DE6  0E00               	movlw	0
  9726  001DE8  6FB2               	movwf	(_dtoa$1099+1)& (0+255),b
  9727  001DEA  0E2B               	movlw	43
  9728  001DEC  D003               	goto	L5
  9729  001DEE                     l6484:
  9730                           
  9731                           ; BSR set to: 0
  9732  001DEE  0E00               	movlw	0
  9733  001DF0  6FB2               	movwf	(_dtoa$1099+1)& (0+255),b
  9734  001DF2  0E2D               	movlw	45
  9735  001DF4                     L5:
  9736  001DF4  6FB1               	movwf	_dtoa$1099& (0+255),b
  9737                           
  9738                           ; BSR set to: 0
  9739  001DF6  0E78               	movlw	low _dbuf
  9740  001DF8  25C1               	addwf	dtoa@i& (0+255),w,b
  9741  001DFA  6ED9               	movwf	fsr2l,c
  9742  001DFC  0E01               	movlw	high _dbuf
  9743  001DFE  21C2               	addwfc	(dtoa@i+1)& (0+255),w,b
  9744  001E00  6EDA               	movwf	fsr2h,c
  9745  001E02  C0B1  FFDF         	movff	_dtoa$1099,indf2
  9746  001E06                     l6488:
  9747                           
  9748                           ; BSR set to: 0
  9749                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  9750  001E06  C09F  F094         	movff	dtoa@fp,pad@fp
  9751  001E0A  C0A0  F095         	movff	dtoa@fp+1,pad@fp+1
  9752  001E0E  0E78               	movlw	low _dbuf
  9753  001E10  25C1               	addwf	dtoa@i& (0+255),w,b
  9754  001E12  6F96               	movwf	pad@buf& (0+255),b
  9755  001E14  0E01               	movlw	high _dbuf
  9756  001E16  21C2               	addwfc	(dtoa@i+1)& (0+255),w,b
  9757  001E18  6F97               	movwf	(pad@buf+1)& (0+255),b
  9758  001E1A  C0B5  F098         	movff	dtoa@w,pad@p
  9759  001E1E  C0B6  F099         	movff	dtoa@w+1,pad@p+1
  9760  001E22  EC9A  F018         	call	_pad	;wreg free
  9761  001E26  C094  F09F         	movff	?_pad,?_dtoa
  9762  001E2A  C095  F0A0         	movff	?_pad+1,?_dtoa+1
  9763  001E2E  0012               	return		;funcret
  9764  001E30                     __end_of_dtoa:
  9765                           	opt callstack 0
  9766                           
  9767 ;; *************** function _pad *****************
  9768 ;; Defined at:
  9769 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9770 ;; Parameters:    Size  Location     Type
  9771 ;;  fp              2   20[BANK0 ] PTR struct _IO_FILE
  9772 ;;		 -> NULL(0), 
  9773 ;;  buf             2   22[BANK0 ] PTR unsigned char 
  9774 ;;		 -> dbuf(32), 
  9775 ;;  p               2   24[BANK0 ] int 
  9776 ;; Auto vars:     Size  Location     Type
  9777 ;;  w               2   29[BANK0 ] int 
  9778 ;;  i               2   27[BANK0 ] int 
  9779 ;; Return value:  Size  Location     Type
  9780 ;;                  2   20[BANK0 ] int 
  9781 ;; Registers used:
  9782 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9783 ;; Tracked objects:
  9784 ;;		On entry : 0/0
  9785 ;;		On exit  : 0/0
  9786 ;;		Unchanged: 0/0
  9787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9788 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9789 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9790 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9791 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9792 ;;Total ram usage:       11 bytes
  9793 ;; Hardware stack levels used:    1
  9794 ;; Hardware stack levels required when called:    9
  9795 ;; This function calls:
  9796 ;;		_fputc
  9797 ;;		_fputs
  9798 ;;		_strlen
  9799 ;; This function is called by:
  9800 ;;		_dtoa
  9801 ;;		_xtoa
  9802 ;; This function uses a non-reentrant model
  9803 ;;
  9804                           
  9805                           	psect	text29
  9806  003134                     __ptext29:
  9807                           	opt callstack 0
  9808  003134                     _pad:
  9809                           	opt callstack 16
  9810                           
  9811                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  9812                           
  9813                           ;incstack = 0
  9814  003134  A04E               	btfss	_flags,0,c
  9815  003136  D00A               	goto	l6292
  9816                           
  9817                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  9818  003138  C096  F08D         	movff	pad@buf,fputs@s
  9819  00313C  C097  F08E         	movff	pad@buf+1,fputs@s+1
  9820  003140  C094  F08F         	movff	pad@fp,fputs@fp
  9821  003144  C095  F090         	movff	pad@fp+1,fputs@fp+1
  9822  003148  ECFD  F01B         	call	_fputs	;wreg free
  9823  00314C                     l6292:
  9824                           
  9825                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  9826  00314C  0100               	movlb	0	; () banked
  9827  00314E  BF99               	btfsc	(pad@p+1)& (0+255),7,b
  9828  003150  D005               	goto	l6296
  9829                           
  9830                           ; BSR set to: 0
  9831  003152  C098  F09D         	movff	pad@p,pad@w
  9832  003156  C099  F09E         	movff	pad@p+1,pad@w+1
  9833  00315A  D004               	goto	l584
  9834  00315C                     l6296:
  9835                           
  9836                           ; BSR set to: 0
  9837  00315C  0E00               	movlw	0
  9838  00315E  6F9E               	movwf	(pad@w+1)& (0+255),b
  9839  003160  0E00               	movlw	0
  9840  003162  6F9D               	movwf	pad@w& (0+255),b
  9841  003164                     l584:
  9842                           
  9843                           ; BSR set to: 0
  9844                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  9845  003164  0E00               	movlw	0
  9846  003166  6F9C               	movwf	(pad@i+1)& (0+255),b
  9847  003168  0E00               	movlw	0
  9848  00316A  6F9B               	movwf	pad@i& (0+255),b
  9849                           
  9850                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  9851  00316C  D00D               	goto	l6302
  9852  00316E                     l6298:
  9853                           
  9854                           ; BSR set to: 0
  9855                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  9856  00316E  0E00               	movlw	0
  9857  003170  6F85               	movwf	(fputc@c+1)& (0+255),b
  9858  003172  0E20               	movlw	32
  9859  003174  6F84               	movwf	fputc@c& (0+255),b
  9860  003176  C094  F086         	movff	pad@fp,fputc@fp
  9861  00317A  C095  F087         	movff	pad@fp+1,fputc@fp+1
  9862  00317E  EC2B  F01A         	call	_fputc	;wreg free
  9863                           
  9864                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  9865  003182  0100               	movlb	0	; () banked
  9866  003184  4B9B               	infsnz	pad@i& (0+255),f,b
  9867  003186  2B9C               	incf	(pad@i+1)& (0+255),f,b
  9868  003188                     l6302:
  9869                           
  9870                           ; BSR set to: 0
  9871                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  9872  003188  519D               	movf	pad@w& (0+255),w,b
  9873  00318A  5D9B               	subwf	pad@i& (0+255),w,b
  9874  00318C  519C               	movf	(pad@i+1)& (0+255),w,b
  9875  00318E  0A80               	xorlw	128
  9876  003190  6F9A               	movwf	??_pad& (0+255),b
  9877  003192  519E               	movf	(pad@w+1)& (0+255),w,b
  9878  003194  0A80               	xorlw	128
  9879  003196  599A               	subwfb	??_pad& (0+255),w,b
  9880  003198  A0D8               	btfss	status,0,c
  9881  00319A  D7E9               	goto	l6298
  9882                           
  9883                           ; BSR set to: 0
  9884                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  9885  00319C  B04E               	btfsc	_flags,0,c
  9886  00319E  D00A               	goto	l6306
  9887                           
  9888                           ; BSR set to: 0
  9889                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  9890  0031A0  C096  F08D         	movff	pad@buf,fputs@s
  9891  0031A4  C097  F08E         	movff	pad@buf+1,fputs@s+1
  9892  0031A8  C094  F08F         	movff	pad@fp,fputs@fp
  9893  0031AC  C095  F090         	movff	pad@fp+1,fputs@fp+1
  9894  0031B0  ECFD  F01B         	call	_fputs	;wreg free
  9895  0031B4                     l6306:
  9896                           
  9897                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  9898  0031B4  C096  F080         	movff	pad@buf,strlen@s
  9899  0031B8  C097  F081         	movff	pad@buf+1,strlen@s+1
  9900  0031BC  ECB4  F01C         	call	_strlen	;wreg free
  9901  0031C0  0100               	movlb	0	; () banked
  9902  0031C2  519D               	movf	pad@w& (0+255),w,b
  9903  0031C4  2580               	addwf	?_strlen& (0+255),w,b
  9904  0031C6  6F94               	movwf	?_pad& (0+255),b
  9905  0031C8  519E               	movf	(pad@w+1)& (0+255),w,b
  9906  0031CA  2181               	addwfc	(?_strlen+1)& (0+255),w,b
  9907  0031CC  6F95               	movwf	(?_pad+1)& (0+255),b
  9908                           
  9909                           ; BSR set to: 0
  9910  0031CE  0012               	return		;funcret
  9911  0031D0                     __end_of_pad:
  9912                           	opt callstack 0
  9913                           
  9914 ;; *************** function _strlen *****************
  9915 ;; Defined at:
  9916 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  9917 ;; Parameters:    Size  Location     Type
  9918 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  9919 ;;		 -> dbuf(32), 
  9920 ;; Auto vars:     Size  Location     Type
  9921 ;;  a               2    2[BANK0 ] PTR const unsigned char 
  9922 ;;		 -> dbuf(32), 
  9923 ;; Return value:  Size  Location     Type
  9924 ;;                  2    0[BANK0 ] unsigned int 
  9925 ;; Registers used:
  9926 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9927 ;; Tracked objects:
  9928 ;;		On entry : 0/0
  9929 ;;		On exit  : 0/0
  9930 ;;		Unchanged: 0/0
  9931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9932 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9933 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9935 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9936 ;;Total ram usage:        4 bytes
  9937 ;; Hardware stack levels used:    1
  9938 ;; Hardware stack levels required when called:    3
  9939 ;; This function calls:
  9940 ;;		Nothing
  9941 ;; This function is called by:
  9942 ;;		_pad
  9943 ;; This function uses a non-reentrant model
  9944 ;;
  9945                           
  9946                           	psect	text30
  9947  003968                     __ptext30:
  9948                           	opt callstack 0
  9949  003968                     _strlen:
  9950                           	opt callstack 21
  9951                           
  9952                           ; BSR set to: 0
  9953                           ;incstack = 0
  9954  003968  C080  F082         	movff	strlen@s,strlen@a
  9955  00396C  C081  F083         	movff	strlen@s+1,strlen@a+1
  9956  003970  D003               	goto	l6274
  9957  003972                     l6272:
  9958  003972  0100               	movlb	0	; () banked
  9959  003974  4B80               	infsnz	strlen@s& (0+255),f,b
  9960  003976  2B81               	incf	(strlen@s+1)& (0+255),f,b
  9961  003978                     l6274:
  9962  003978  C080  FFD9         	movff	strlen@s,fsr2l
  9963  00397C  C081  FFDA         	movff	strlen@s+1,fsr2h
  9964  003980  50DF               	movf	indf2,w,c
  9965  003982  A4D8               	btfss	status,2,c
  9966  003984  D7F6               	goto	l6272
  9967  003986  0100               	movlb	0	; () banked
  9968  003988  5182               	movf	strlen@a& (0+255),w,b
  9969  00398A  5D80               	subwf	strlen@s& (0+255),w,b
  9970  00398C  6F80               	movwf	?_strlen& (0+255),b
  9971  00398E  5183               	movf	(strlen@a+1)& (0+255),w,b
  9972  003990  5981               	subwfb	(strlen@s+1)& (0+255),w,b
  9973  003992  6F81               	movwf	(?_strlen+1)& (0+255),b
  9974                           
  9975                           ; BSR set to: 0
  9976  003994  0012               	return		;funcret
  9977  003996                     __end_of_strlen:
  9978                           	opt callstack 0
  9979                           
  9980 ;; *************** function _fputs *****************
  9981 ;; Defined at:
  9982 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  9983 ;; Parameters:    Size  Location     Type
  9984 ;;  s               2   13[BANK0 ] PTR const unsigned char 
  9985 ;;		 -> dbuf(32), 
  9986 ;;  fp              2   15[BANK0 ] PTR struct _IO_FILE
  9987 ;;		 -> NULL(0), 
  9988 ;; Auto vars:     Size  Location     Type
  9989 ;;  i               2   18[BANK0 ] int 
  9990 ;;  c               1   17[BANK0 ] unsigned char 
  9991 ;; Return value:  Size  Location     Type
  9992 ;;                  2   13[BANK0 ] int 
  9993 ;; Registers used:
  9994 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9995 ;; Tracked objects:
  9996 ;;		On entry : 0/0
  9997 ;;		On exit  : 0/0
  9998 ;;		Unchanged: 0/0
  9999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10000 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10001 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10003 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10004 ;;Total ram usage:        7 bytes
 10005 ;; Hardware stack levels used:    1
 10006 ;; Hardware stack levels required when called:    8
 10007 ;; This function calls:
 10008 ;;		_fputc
 10009 ;; This function is called by:
 10010 ;;		_pad
 10011 ;; This function uses a non-reentrant model
 10012 ;;
 10013                           
 10014                           	psect	text31
 10015  0037FA                     __ptext31:
 10016                           	opt callstack 0
 10017  0037FA                     _fputs:
 10018                           	opt callstack 16
 10019                           
 10020                           ; BSR set to: 0
 10021                           ;incstack = 0
 10022  0037FA  0E00               	movlw	0
 10023  0037FC  0100               	movlb	0	; () banked
 10024  0037FE  6F93               	movwf	(fputs@i+1)& (0+255),b
 10025  003800  0E00               	movlw	0
 10026  003802  6F92               	movwf	fputs@i& (0+255),b
 10027  003804  D00C               	goto	l6268
 10028  003806                     l6264:
 10029                           
 10030                           ; BSR set to: 0
 10031  003806  C091  F084         	movff	fputs@c,fputc@c
 10032  00380A  6B85               	clrf	(fputc@c+1)& (0+255),b
 10033  00380C  C08F  F086         	movff	fputs@fp,fputc@fp
 10034  003810  C090  F087         	movff	fputs@fp+1,fputc@fp+1
 10035  003814  EC2B  F01A         	call	_fputc	;wreg free
 10036  003818  0100               	movlb	0	; () banked
 10037  00381A  4B92               	infsnz	fputs@i& (0+255),f,b
 10038  00381C  2B93               	incf	(fputs@i+1)& (0+255),f,b
 10039  00381E                     l6268:
 10040                           
 10041                           ; BSR set to: 0
 10042  00381E  5192               	movf	fputs@i& (0+255),w,b
 10043  003820  258D               	addwf	fputs@s& (0+255),w,b
 10044  003822  6ED9               	movwf	fsr2l,c
 10045  003824  5193               	movf	(fputs@i+1)& (0+255),w,b
 10046  003826  218E               	addwfc	(fputs@s+1)& (0+255),w,b
 10047  003828  6EDA               	movwf	fsr2h,c
 10048  00382A  50DF               	movf	indf2,w,c
 10049  00382C  6F91               	movwf	fputs@c& (0+255),b
 10050  00382E  5191               	movf	fputs@c& (0+255),w,b
 10051  003830  B4D8               	btfsc	status,2,c
 10052  003832  0012               	return	
 10053  003834  D7E8               	goto	l6264
 10054  003836                     __end_of_fputs:
 10055                           	opt callstack 0
 10056                           
 10057 ;; *************** function _fputc *****************
 10058 ;; Defined at:
 10059 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
 10060 ;; Parameters:    Size  Location     Type
 10061 ;;  c               2    4[BANK0 ] int 
 10062 ;;  fp              2    6[BANK0 ] PTR struct _IO_FILE
 10063 ;;		 -> NULL(0), 
 10064 ;; Auto vars:     Size  Location     Type
 10065 ;;		None
 10066 ;; Return value:  Size  Location     Type
 10067 ;;                  2    4[BANK0 ] int 
 10068 ;; Registers used:
 10069 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10070 ;; Tracked objects:
 10071 ;;		On entry : 0/0
 10072 ;;		On exit  : 0/0
 10073 ;;		Unchanged: 0/0
 10074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10075 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10077 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10078 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10079 ;;Total ram usage:        9 bytes
 10080 ;; Hardware stack levels used:    1
 10081 ;; Hardware stack levels required when called:    7
 10082 ;; This function calls:
 10083 ;;		_putch
 10084 ;; This function is called by:
 10085 ;;		_pad
 10086 ;;		_vfpfcnvrt
 10087 ;;		_fputs
 10088 ;; This function uses a non-reentrant model
 10089 ;;
 10090                           
 10091                           	psect	text32
 10092  003456                     __ptext32:
 10093                           	opt callstack 0
 10094  003456                     _fputc:
 10095                           	opt callstack 16
 10096                           
 10097                           ; BSR set to: 0
 10098                           ;incstack = 0
 10099  003456  0100               	movlb	0	; () banked
 10100  003458  5186               	movf	fputc@fp& (0+255),w,b
 10101  00345A  1187               	iorwf	(fputc@fp+1)& (0+255),w,b
 10102  00345C  B4D8               	btfsc	status,2,c
 10103  00345E  D004               	goto	u6450
 10104                           
 10105                           ; BSR set to: 0
 10106  003460  5186               	movf	fputc@fp& (0+255),w,b
 10107  003462  1187               	iorwf	(fputc@fp+1)& (0+255),w,b
 10108  003464  A4D8               	btfss	status,2,c
 10109  003466  D004               	goto	l6254
 10110  003468                     u6450:
 10111                           
 10112                           ; BSR set to: 0
 10113  003468  5184               	movf	fputc@c& (0+255),w,b
 10114  00346A  EC7E  F01D         	call	_putch
 10115  00346E  0012               	return	
 10116  003470                     l6254:
 10117                           
 10118                           ; BSR set to: 0
 10119  003470  EE20 F004          	lfsr	2,4
 10120  003474  5186               	movf	fputc@fp& (0+255),w,b
 10121  003476  26D9               	addwf	fsr2l,f,c
 10122  003478  5187               	movf	(fputc@fp+1)& (0+255),w,b
 10123  00347A  22DA               	addwfc	fsr2h,f,c
 10124  00347C  50DE               	movf	postinc2,w,c
 10125  00347E  10DE               	iorwf	postinc2,w,c
 10126  003480  B4D8               	btfsc	status,2,c
 10127  003482  D016               	goto	u6470
 10128                           
 10129                           ; BSR set to: 0
 10130  003484  EE20 F004          	lfsr	2,4
 10131  003488  5186               	movf	fputc@fp& (0+255),w,b
 10132  00348A  26D9               	addwf	fsr2l,f,c
 10133  00348C  5187               	movf	(fputc@fp+1)& (0+255),w,b
 10134  00348E  22DA               	addwfc	fsr2h,f,c
 10135  003490  EE10 F002          	lfsr	1,2
 10136  003494  5186               	movf	fputc@fp& (0+255),w,b
 10137  003496  26E1               	addwf	fsr1l,f,c
 10138  003498  5187               	movf	(fputc@fp+1)& (0+255),w,b
 10139  00349A  22E2               	addwfc	fsr1h,f,c
 10140  00349C  50DE               	movf	postinc2,w,c
 10141  00349E  5CE6               	subwf	postinc1,w,c
 10142  0034A0  50E6               	movf	postinc1,w,c
 10143  0034A2  0A80               	xorlw	128
 10144  0034A4  6F8C               	movwf	(??_fputc+4)& (0+255),b
 10145  0034A6  50DE               	movf	postinc2,w,c
 10146  0034A8  0A80               	xorlw	128
 10147  0034AA  598C               	subwfb	(??_fputc+4)& (0+255),w,b
 10148  0034AC  B0D8               	btfsc	status,0,c
 10149  0034AE  0012               	return	
 10150  0034B0                     u6470:
 10151                           
 10152                           ; BSR set to: 0
 10153  0034B0  EE20 F002          	lfsr	2,2
 10154  0034B4  5186               	movf	fputc@fp& (0+255),w,b
 10155  0034B6  26D9               	addwf	fsr2l,f,c
 10156  0034B8  5187               	movf	(fputc@fp+1)& (0+255),w,b
 10157  0034BA  22DA               	addwfc	fsr2h,f,c
 10158  0034BC  2ADE               	incf	postinc2,f,c
 10159  0034BE  0E00               	movlw	0
 10160  0034C0  22DD               	addwfc	postdec2,f,c
 10161  0034C2  0012               	return		;funcret
 10162  0034C4                     __end_of_fputc:
 10163                           	opt callstack 0
 10164                           
 10165 ;; *************** function _putch *****************
 10166 ;; Defined at:
 10167 ;;		line 102 in file "lcd.c"
 10168 ;; Parameters:    Size  Location     Type
 10169 ;;  data            1    wreg     unsigned char 
 10170 ;; Auto vars:     Size  Location     Type
 10171 ;;  data            1    3[BANK0 ] unsigned char 
 10172 ;; Return value:  Size  Location     Type
 10173 ;;                  1    wreg      void 
 10174 ;; Registers used:
 10175 ;;		wreg, status,2, status,0, cstack
 10176 ;; Tracked objects:
 10177 ;;		On entry : 0/0
 10178 ;;		On exit  : 0/0
 10179 ;;		Unchanged: 0/0
 10180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10182 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10184 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10185 ;;Total ram usage:        1 bytes
 10186 ;; Hardware stack levels used:    1
 10187 ;; Hardware stack levels required when called:    6
 10188 ;; This function calls:
 10189 ;;		_send_byte
 10190 ;; This function is called by:
 10191 ;;		_fputc
 10192 ;; This function uses a non-reentrant model
 10193 ;;
 10194                           
 10195                           	psect	text33
 10196  003AFC                     __ptext33:
 10197                           	opt callstack 0
 10198  003AFC                     _putch:
 10199                           	opt callstack 16
 10200                           
 10201                           ;incstack = 0
 10202                           ;putch@data stored from wreg
 10203  003AFC  0100               	movlb	0	; () banked
 10204  003AFE  6F83               	movwf	putch@data& (0+255),b
 10205                           
 10206                           ;lcd.c: 103:     LATDbits.LATD2 = 1;
 10207  003B00  848C               	bsf	3980,2,c	;volatile
 10208                           
 10209                           ;lcd.c: 104:     send_byte((unsigned char)data);
 10210  003B02  0100               	movlb	0	; () banked
 10211  003B04  5183               	movf	putch@data& (0+255),w,b
 10212  003B06  EC68  F01D         	call	_send_byte
 10213  003B0A  0012               	return		;funcret
 10214  003B0C                     __end_of_putch:
 10215                           	opt callstack 0
 10216                           
 10217 ;; *************** function _abs *****************
 10218 ;; Defined at:
 10219 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
 10220 ;; Parameters:    Size  Location     Type
 10221 ;;  a               2   18[BANK0 ] int 
 10222 ;; Auto vars:     Size  Location     Type
 10223 ;;		None
 10224 ;; Return value:  Size  Location     Type
 10225 ;;                  2   18[BANK0 ] int 
 10226 ;; Registers used:
 10227 ;;		wreg, status,2, status,0
 10228 ;; Tracked objects:
 10229 ;;		On entry : 0/0
 10230 ;;		On exit  : 0/0
 10231 ;;		Unchanged: 0/0
 10232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10233 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10235 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10236 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10237 ;;Total ram usage:        4 bytes
 10238 ;; Hardware stack levels used:    1
 10239 ;; Hardware stack levels required when called:    3
 10240 ;; This function calls:
 10241 ;;		Nothing
 10242 ;; This function is called by:
 10243 ;;		_ultrasonic_main
 10244 ;;		_dtoa
 10245 ;; This function uses a non-reentrant model
 10246 ;;
 10247                           
 10248                           	psect	text34
 10249  00386C                     __ptext34:
 10250                           	opt callstack 0
 10251  00386C                     _abs:
 10252                           	opt callstack 22
 10253                           
 10254                           ;incstack = 0
 10255  00386C  0100               	movlb	0	; () banked
 10256  00386E  BF93               	btfsc	(abs@a+1)& (0+255),7,b
 10257  003870  D005               	goto	u6520
 10258  003872  5193               	movf	(abs@a+1)& (0+255),w,b
 10259  003874  E110               	bnz	l1362
 10260  003876  0592               	decf	abs@a& (0+255),w,b
 10261  003878  B0D8               	btfsc	status,0,c
 10262  00387A  D00D               	goto	l1362
 10263  00387C                     u6520:
 10264                           
 10265                           ; BSR set to: 0
 10266  00387C  C092  F094         	movff	abs@a,??_abs
 10267  003880  C093  F095         	movff	abs@a+1,??_abs+1
 10268  003884  1F94               	comf	??_abs& (0+255),f,b
 10269  003886  1F95               	comf	(??_abs+1)& (0+255),f,b
 10270  003888  4B94               	infsnz	??_abs& (0+255),f,b
 10271  00388A  2B95               	incf	(??_abs+1)& (0+255),f,b
 10272  00388C  C094  F092         	movff	??_abs,?_abs
 10273  003890  C095  F093         	movff	??_abs+1,?_abs+1
 10274  003894  0012               	return	
 10275  003896                     l1362:
 10276                           
 10277                           ; BSR set to: 0
 10278  003896  C092  F092         	movff	abs@a,?_abs
 10279  00389A  C093  F093         	movff	abs@a+1,?_abs+1
 10280                           
 10281                           ; BSR set to: 0
 10282  00389E  0012               	return		;funcret
 10283  0038A0                     __end_of_abs:
 10284                           	opt callstack 0
 10285                           
 10286 ;; *************** function ___aomod *****************
 10287 ;; Defined at:
 10288 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
 10289 ;; Parameters:    Size  Location     Type
 10290 ;;  dividend        8    0[BANK0 ] long long 
 10291 ;;  divisor         8    8[BANK0 ] long long 
 10292 ;; Auto vars:     Size  Location     Type
 10293 ;;  sign            1   17[BANK0 ] unsigned char 
 10294 ;;  counter         1   16[BANK0 ] unsigned char 
 10295 ;; Return value:  Size  Location     Type
 10296 ;;                  8    0[BANK0 ] long long 
 10297 ;; Registers used:
 10298 ;;		wreg, status,2, status,0
 10299 ;; Tracked objects:
 10300 ;;		On entry : 0/0
 10301 ;;		On exit  : 0/0
 10302 ;;		Unchanged: 0/0
 10303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10304 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10305 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10307 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10308 ;;Total ram usage:       18 bytes
 10309 ;; Hardware stack levels used:    1
 10310 ;; Hardware stack levels required when called:    3
 10311 ;; This function calls:
 10312 ;;		Nothing
 10313 ;; This function is called by:
 10314 ;;		_dtoa
 10315 ;; This function uses a non-reentrant model
 10316 ;;
 10317                           
 10318                           	psect	text35
 10319  002BA6                     __ptext35:
 10320                           	opt callstack 0
 10321  002BA6                     ___aomod:
 10322                           	opt callstack 22
 10323                           
 10324                           ; BSR set to: 0
 10325                           ;incstack = 0
 10326  002BA6  0E00               	movlw	0
 10327  002BA8  0100               	movlb	0	; () banked
 10328  002BAA  6F91               	movwf	___aomod@sign& (0+255),b
 10329                           
 10330                           ; BSR set to: 0
 10331  002BAC  AF87               	btfss	(___aomod@dividend+7)& (0+255),7,b
 10332  002BAE  D012               	goto	l6390
 10333                           
 10334                           ; BSR set to: 0
 10335  002BB0  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
 10336  002BB2  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
 10337  002BB4  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
 10338  002BB6  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
 10339  002BB8  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
 10340  002BBA  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
 10341  002BBC  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
 10342  002BBE  6D80               	negf	___aomod@dividend& (0+255),b
 10343  002BC0  0E00               	movlw	0
 10344  002BC2  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 10345  002BC4  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 10346  002BC6  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 10347  002BC8  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 10348  002BCA  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 10349  002BCC  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 10350  002BCE  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 10351                           
 10352                           ; BSR set to: 0
 10353  002BD0  0E01               	movlw	1
 10354  002BD2  6F91               	movwf	___aomod@sign& (0+255),b
 10355  002BD4                     l6390:
 10356                           
 10357                           ; BSR set to: 0
 10358  002BD4  AF8F               	btfss	(___aomod@divisor+7)& (0+255),7,b
 10359  002BD6  D010               	goto	l6394
 10360                           
 10361                           ; BSR set to: 0
 10362  002BD8  1F8F               	comf	(___aomod@divisor+7)& (0+255),f,b
 10363  002BDA  1F8E               	comf	(___aomod@divisor+6)& (0+255),f,b
 10364  002BDC  1F8D               	comf	(___aomod@divisor+5)& (0+255),f,b
 10365  002BDE  1F8C               	comf	(___aomod@divisor+4)& (0+255),f,b
 10366  002BE0  1F8B               	comf	(___aomod@divisor+3)& (0+255),f,b
 10367  002BE2  1F8A               	comf	(___aomod@divisor+2)& (0+255),f,b
 10368  002BE4  1F89               	comf	(___aomod@divisor+1)& (0+255),f,b
 10369  002BE6  6D88               	negf	___aomod@divisor& (0+255),b
 10370  002BE8  0E00               	movlw	0
 10371  002BEA  2389               	addwfc	(___aomod@divisor+1)& (0+255),f,b
 10372  002BEC  238A               	addwfc	(___aomod@divisor+2)& (0+255),f,b
 10373  002BEE  238B               	addwfc	(___aomod@divisor+3)& (0+255),f,b
 10374  002BF0  238C               	addwfc	(___aomod@divisor+4)& (0+255),f,b
 10375  002BF2  238D               	addwfc	(___aomod@divisor+5)& (0+255),f,b
 10376  002BF4  238E               	addwfc	(___aomod@divisor+6)& (0+255),f,b
 10377  002BF6  238F               	addwfc	(___aomod@divisor+7)& (0+255),f,b
 10378  002BF8                     l6394:
 10379                           
 10380                           ; BSR set to: 0
 10381  002BF8  5188               	movf	___aomod@divisor& (0+255),w,b
 10382  002BFA  1189               	iorwf	(___aomod@divisor+1)& (0+255),w,b
 10383  002BFC  118A               	iorwf	(___aomod@divisor+2)& (0+255),w,b
 10384  002BFE  118B               	iorwf	(___aomod@divisor+3)& (0+255),w,b
 10385  002C00  118C               	iorwf	(___aomod@divisor+4)& (0+255),w,b
 10386  002C02  118D               	iorwf	(___aomod@divisor+5)& (0+255),w,b
 10387  002C04  118E               	iorwf	(___aomod@divisor+6)& (0+255),w,b
 10388  002C06  118F               	iorwf	(___aomod@divisor+7)& (0+255),w,b
 10389  002C08  B4D8               	btfsc	status,2,c
 10390  002C0A  D03C               	goto	l6410
 10391                           
 10392                           ; BSR set to: 0
 10393  002C0C  0E01               	movlw	1
 10394  002C0E  6F90               	movwf	___aomod@counter& (0+255),b
 10395  002C10  D00A               	goto	l6400
 10396  002C12                     l6398:
 10397                           
 10398                           ; BSR set to: 0
 10399  002C12  90D8               	bcf	status,0,c
 10400  002C14  3788               	rlcf	___aomod@divisor& (0+255),f,b
 10401  002C16  3789               	rlcf	(___aomod@divisor+1)& (0+255),f,b
 10402  002C18  378A               	rlcf	(___aomod@divisor+2)& (0+255),f,b
 10403  002C1A  378B               	rlcf	(___aomod@divisor+3)& (0+255),f,b
 10404  002C1C  378C               	rlcf	(___aomod@divisor+4)& (0+255),f,b
 10405  002C1E  378D               	rlcf	(___aomod@divisor+5)& (0+255),f,b
 10406  002C20  378E               	rlcf	(___aomod@divisor+6)& (0+255),f,b
 10407  002C22  378F               	rlcf	(___aomod@divisor+7)& (0+255),f,b
 10408  002C24  2B90               	incf	___aomod@counter& (0+255),f,b
 10409  002C26                     l6400:
 10410                           
 10411                           ; BSR set to: 0
 10412  002C26  AF8F               	btfss	(___aomod@divisor+7)& (0+255),7,b
 10413  002C28  D7F4               	goto	l6398
 10414  002C2A                     u6760:
 10415                           
 10416                           ; BSR set to: 0
 10417  002C2A  5188               	movf	___aomod@divisor& (0+255),w,b
 10418  002C2C  5D80               	subwf	___aomod@dividend& (0+255),w,b
 10419  002C2E  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
 10420  002C30  5981               	subwfb	(___aomod@dividend+1)& (0+255),w,b
 10421  002C32  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
 10422  002C34  5982               	subwfb	(___aomod@dividend+2)& (0+255),w,b
 10423  002C36  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
 10424  002C38  5983               	subwfb	(___aomod@dividend+3)& (0+255),w,b
 10425  002C3A  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
 10426  002C3C  5984               	subwfb	(___aomod@dividend+4)& (0+255),w,b
 10427  002C3E  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
 10428  002C40  5985               	subwfb	(___aomod@dividend+5)& (0+255),w,b
 10429  002C42  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
 10430  002C44  5986               	subwfb	(___aomod@dividend+6)& (0+255),w,b
 10431  002C46  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
 10432  002C48  5987               	subwfb	(___aomod@dividend+7)& (0+255),w,b
 10433  002C4A  A0D8               	btfss	status,0,c
 10434  002C4C  D010               	goto	l6406
 10435                           
 10436                           ; BSR set to: 0
 10437  002C4E  5188               	movf	___aomod@divisor& (0+255),w,b
 10438  002C50  5F80               	subwf	___aomod@dividend& (0+255),f,b
 10439  002C52  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
 10440  002C54  5B81               	subwfb	(___aomod@dividend+1)& (0+255),f,b
 10441  002C56  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
 10442  002C58  5B82               	subwfb	(___aomod@dividend+2)& (0+255),f,b
 10443  002C5A  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
 10444  002C5C  5B83               	subwfb	(___aomod@dividend+3)& (0+255),f,b
 10445  002C5E  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
 10446  002C60  5B84               	subwfb	(___aomod@dividend+4)& (0+255),f,b
 10447  002C62  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
 10448  002C64  5B85               	subwfb	(___aomod@dividend+5)& (0+255),f,b
 10449  002C66  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
 10450  002C68  5B86               	subwfb	(___aomod@dividend+6)& (0+255),f,b
 10451  002C6A  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
 10452  002C6C  5B87               	subwfb	(___aomod@dividend+7)& (0+255),f,b
 10453  002C6E                     l6406:
 10454                           
 10455                           ; BSR set to: 0
 10456  002C6E  90D8               	bcf	status,0,c
 10457  002C70  338F               	rrcf	(___aomod@divisor+7)& (0+255),f,b
 10458  002C72  338E               	rrcf	(___aomod@divisor+6)& (0+255),f,b
 10459  002C74  338D               	rrcf	(___aomod@divisor+5)& (0+255),f,b
 10460  002C76  338C               	rrcf	(___aomod@divisor+4)& (0+255),f,b
 10461  002C78  338B               	rrcf	(___aomod@divisor+3)& (0+255),f,b
 10462  002C7A  338A               	rrcf	(___aomod@divisor+2)& (0+255),f,b
 10463  002C7C  3389               	rrcf	(___aomod@divisor+1)& (0+255),f,b
 10464  002C7E  3388               	rrcf	___aomod@divisor& (0+255),f,b
 10465                           
 10466                           ; BSR set to: 0
 10467  002C80  2F90               	decfsz	___aomod@counter& (0+255),f,b
 10468  002C82  D7D3               	goto	u6760
 10469  002C84                     l6410:
 10470                           
 10471                           ; BSR set to: 0
 10472  002C84  5191               	movf	___aomod@sign& (0+255),w,b
 10473  002C86  B4D8               	btfsc	status,2,c
 10474  002C88  D010               	goto	l6414
 10475                           
 10476                           ; BSR set to: 0
 10477  002C8A  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
 10478  002C8C  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
 10479  002C8E  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
 10480  002C90  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
 10481  002C92  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
 10482  002C94  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
 10483  002C96  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
 10484  002C98  6D80               	negf	___aomod@dividend& (0+255),b
 10485  002C9A  0E00               	movlw	0
 10486  002C9C  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 10487  002C9E  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 10488  002CA0  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 10489  002CA2  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 10490  002CA4  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 10491  002CA6  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 10492  002CA8  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 10493  002CAA                     l6414:
 10494                           
 10495                           ; BSR set to: 0
 10496  002CAA  C080  F080         	movff	___aomod@dividend,?___aomod
 10497  002CAE  C081  F081         	movff	___aomod@dividend+1,?___aomod+1
 10498  002CB2  C082  F082         	movff	___aomod@dividend+2,?___aomod+2
 10499  002CB6  C083  F083         	movff	___aomod@dividend+3,?___aomod+3
 10500  002CBA  C084  F084         	movff	___aomod@dividend+4,?___aomod+4
 10501  002CBE  C085  F085         	movff	___aomod@dividend+5,?___aomod+5
 10502  002CC2  C086  F086         	movff	___aomod@dividend+6,?___aomod+6
 10503  002CC6  C087  F087         	movff	___aomod@dividend+7,?___aomod+7
 10504                           
 10505                           ; BSR set to: 0
 10506  002CCA  0012               	return		;funcret
 10507  002CCC                     __end_of___aomod:
 10508                           	opt callstack 0
 10509                           
 10510 ;; *************** function ___aodiv *****************
 10511 ;; Defined at:
 10512 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
 10513 ;; Parameters:    Size  Location     Type
 10514 ;;  dividend        8    0[BANK0 ] long long 
 10515 ;;  divisor         8    8[BANK0 ] long long 
 10516 ;; Auto vars:     Size  Location     Type
 10517 ;;  quotient        8   18[BANK0 ] long long 
 10518 ;;  sign            1   17[BANK0 ] unsigned char 
 10519 ;;  counter         1   16[BANK0 ] unsigned char 
 10520 ;; Return value:  Size  Location     Type
 10521 ;;                  8    0[BANK0 ] long long 
 10522 ;; Registers used:
 10523 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10524 ;; Tracked objects:
 10525 ;;		On entry : 0/0
 10526 ;;		On exit  : 0/0
 10527 ;;		Unchanged: 0/0
 10528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10529 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10530 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10532 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10533 ;;Total ram usage:       26 bytes
 10534 ;; Hardware stack levels used:    1
 10535 ;; Hardware stack levels required when called:    3
 10536 ;; This function calls:
 10537 ;;		Nothing
 10538 ;; This function is called by:
 10539 ;;		_dtoa
 10540 ;; This function uses a non-reentrant model
 10541 ;;
 10542                           
 10543                           	psect	text36
 10544  0026A2                     __ptext36:
 10545                           	opt callstack 0
 10546  0026A2                     ___aodiv:
 10547                           	opt callstack 22
 10548                           
 10549                           ; BSR set to: 0
 10550                           ;incstack = 0
 10551  0026A2  0E00               	movlw	0
 10552  0026A4  0100               	movlb	0	; () banked
 10553  0026A6  6F91               	movwf	___aodiv@sign& (0+255),b
 10554                           
 10555                           ; BSR set to: 0
 10556  0026A8  AF8F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 10557  0026AA  D012               	goto	l6346
 10558                           
 10559                           ; BSR set to: 0
 10560  0026AC  1F8F               	comf	(___aodiv@divisor+7)& (0+255),f,b
 10561  0026AE  1F8E               	comf	(___aodiv@divisor+6)& (0+255),f,b
 10562  0026B0  1F8D               	comf	(___aodiv@divisor+5)& (0+255),f,b
 10563  0026B2  1F8C               	comf	(___aodiv@divisor+4)& (0+255),f,b
 10564  0026B4  1F8B               	comf	(___aodiv@divisor+3)& (0+255),f,b
 10565  0026B6  1F8A               	comf	(___aodiv@divisor+2)& (0+255),f,b
 10566  0026B8  1F89               	comf	(___aodiv@divisor+1)& (0+255),f,b
 10567  0026BA  6D88               	negf	___aodiv@divisor& (0+255),b
 10568  0026BC  0E00               	movlw	0
 10569  0026BE  2389               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
 10570  0026C0  238A               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
 10571  0026C2  238B               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
 10572  0026C4  238C               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
 10573  0026C6  238D               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
 10574  0026C8  238E               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
 10575  0026CA  238F               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
 10576                           
 10577                           ; BSR set to: 0
 10578  0026CC  0E01               	movlw	1
 10579  0026CE  6F91               	movwf	___aodiv@sign& (0+255),b
 10580  0026D0                     l6346:
 10581                           
 10582                           ; BSR set to: 0
 10583  0026D0  AF87               	btfss	(___aodiv@dividend+7)& (0+255),7,b
 10584  0026D2  D012               	goto	l6352
 10585                           
 10586                           ; BSR set to: 0
 10587  0026D4  1F87               	comf	(___aodiv@dividend+7)& (0+255),f,b
 10588  0026D6  1F86               	comf	(___aodiv@dividend+6)& (0+255),f,b
 10589  0026D8  1F85               	comf	(___aodiv@dividend+5)& (0+255),f,b
 10590  0026DA  1F84               	comf	(___aodiv@dividend+4)& (0+255),f,b
 10591  0026DC  1F83               	comf	(___aodiv@dividend+3)& (0+255),f,b
 10592  0026DE  1F82               	comf	(___aodiv@dividend+2)& (0+255),f,b
 10593  0026E0  1F81               	comf	(___aodiv@dividend+1)& (0+255),f,b
 10594  0026E2  6D80               	negf	___aodiv@dividend& (0+255),b
 10595  0026E4  0E00               	movlw	0
 10596  0026E6  2381               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
 10597  0026E8  2382               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
 10598  0026EA  2383               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
 10599  0026EC  2384               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
 10600  0026EE  2385               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
 10601  0026F0  2386               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
 10602  0026F2  2387               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
 10603                           
 10604                           ; BSR set to: 0
 10605  0026F4  0E01               	movlw	1
 10606  0026F6  1B91               	xorwf	___aodiv@sign& (0+255),f,b
 10607  0026F8                     l6352:
 10608                           
 10609                           ; BSR set to: 0
 10610  0026F8  EE20  F092         	lfsr	2,___aodiv@quotient
 10611  0026FC  0E07               	movlw	7
 10612  0026FE                     u6681:
 10613  0026FE  6ADE               	clrf	postinc2,c
 10614  002700  06E8               	decf	wreg,f,c
 10615  002702  E2FD               	bc	u6681
 10616                           
 10617                           ; BSR set to: 0
 10618  002704  5188               	movf	___aodiv@divisor& (0+255),w,b
 10619  002706  1189               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
 10620  002708  118A               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
 10621  00270A  118B               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
 10622  00270C  118C               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
 10623  00270E  118D               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
 10624  002710  118E               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
 10625  002712  118F               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
 10626  002714  B4D8               	btfsc	status,2,c
 10627  002716  D046               	goto	l6374
 10628                           
 10629                           ; BSR set to: 0
 10630  002718  0E01               	movlw	1
 10631  00271A  6F90               	movwf	___aodiv@counter& (0+255),b
 10632  00271C  D00A               	goto	l6360
 10633  00271E                     l6358:
 10634                           
 10635                           ; BSR set to: 0
 10636  00271E  90D8               	bcf	status,0,c
 10637  002720  3788               	rlcf	___aodiv@divisor& (0+255),f,b
 10638  002722  3789               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
 10639  002724  378A               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
 10640  002726  378B               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
 10641  002728  378C               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
 10642  00272A  378D               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
 10643  00272C  378E               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
 10644  00272E  378F               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
 10645  002730  2B90               	incf	___aodiv@counter& (0+255),f,b
 10646  002732                     l6360:
 10647                           
 10648                           ; BSR set to: 0
 10649  002732  AF8F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 10650  002734  D7F4               	goto	l6358
 10651  002736                     u6700:
 10652                           
 10653                           ; BSR set to: 0
 10654  002736  90D8               	bcf	status,0,c
 10655  002738  3792               	rlcf	___aodiv@quotient& (0+255),f,b
 10656  00273A  3793               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
 10657  00273C  3794               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
 10658  00273E  3795               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
 10659  002740  3796               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
 10660  002742  3797               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
 10661  002744  3798               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
 10662  002746  3799               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
 10663                           
 10664                           ; BSR set to: 0
 10665  002748  5188               	movf	___aodiv@divisor& (0+255),w,b
 10666  00274A  5D80               	subwf	___aodiv@dividend& (0+255),w,b
 10667  00274C  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
 10668  00274E  5981               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
 10669  002750  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
 10670  002752  5982               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
 10671  002754  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
 10672  002756  5983               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
 10673  002758  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
 10674  00275A  5984               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
 10675  00275C  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
 10676  00275E  5985               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
 10677  002760  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
 10678  002762  5986               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
 10679  002764  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
 10680  002766  5987               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
 10681  002768  A0D8               	btfss	status,0,c
 10682  00276A  D011               	goto	l6370
 10683                           
 10684                           ; BSR set to: 0
 10685  00276C  5188               	movf	___aodiv@divisor& (0+255),w,b
 10686  00276E  5F80               	subwf	___aodiv@dividend& (0+255),f,b
 10687  002770  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
 10688  002772  5B81               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
 10689  002774  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
 10690  002776  5B82               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
 10691  002778  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
 10692  00277A  5B83               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
 10693  00277C  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
 10694  00277E  5B84               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
 10695  002780  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
 10696  002782  5B85               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
 10697  002784  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
 10698  002786  5B86               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
 10699  002788  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
 10700  00278A  5B87               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
 10701                           
 10702                           ; BSR set to: 0
 10703  00278C  8192               	bsf	___aodiv@quotient& (0+255),0,b
 10704  00278E                     l6370:
 10705                           
 10706                           ; BSR set to: 0
 10707  00278E  90D8               	bcf	status,0,c
 10708  002790  338F               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
 10709  002792  338E               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
 10710  002794  338D               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
 10711  002796  338C               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
 10712  002798  338B               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
 10713  00279A  338A               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
 10714  00279C  3389               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
 10715  00279E  3388               	rrcf	___aodiv@divisor& (0+255),f,b
 10716                           
 10717                           ; BSR set to: 0
 10718  0027A0  2F90               	decfsz	___aodiv@counter& (0+255),f,b
 10719  0027A2  D7C9               	goto	u6700
 10720  0027A4                     l6374:
 10721                           
 10722                           ; BSR set to: 0
 10723  0027A4  5191               	movf	___aodiv@sign& (0+255),w,b
 10724  0027A6  B4D8               	btfsc	status,2,c
 10725  0027A8  D010               	goto	l6378
 10726                           
 10727                           ; BSR set to: 0
 10728  0027AA  1F99               	comf	(___aodiv@quotient+7)& (0+255),f,b
 10729  0027AC  1F98               	comf	(___aodiv@quotient+6)& (0+255),f,b
 10730  0027AE  1F97               	comf	(___aodiv@quotient+5)& (0+255),f,b
 10731  0027B0  1F96               	comf	(___aodiv@quotient+4)& (0+255),f,b
 10732  0027B2  1F95               	comf	(___aodiv@quotient+3)& (0+255),f,b
 10733  0027B4  1F94               	comf	(___aodiv@quotient+2)& (0+255),f,b
 10734  0027B6  1F93               	comf	(___aodiv@quotient+1)& (0+255),f,b
 10735  0027B8  6D92               	negf	___aodiv@quotient& (0+255),b
 10736  0027BA  0E00               	movlw	0
 10737  0027BC  2393               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
 10738  0027BE  2394               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
 10739  0027C0  2395               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
 10740  0027C2  2396               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
 10741  0027C4  2397               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
 10742  0027C6  2398               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
 10743  0027C8  2399               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
 10744  0027CA                     l6378:
 10745                           
 10746                           ; BSR set to: 0
 10747  0027CA  C092  F080         	movff	___aodiv@quotient,?___aodiv
 10748  0027CE  C093  F081         	movff	___aodiv@quotient+1,?___aodiv+1
 10749  0027D2  C094  F082         	movff	___aodiv@quotient+2,?___aodiv+2
 10750  0027D6  C095  F083         	movff	___aodiv@quotient+3,?___aodiv+3
 10751  0027DA  C096  F084         	movff	___aodiv@quotient+4,?___aodiv+4
 10752  0027DE  C097  F085         	movff	___aodiv@quotient+5,?___aodiv+5
 10753  0027E2  C098  F086         	movff	___aodiv@quotient+6,?___aodiv+6
 10754  0027E6  C099  F087         	movff	___aodiv@quotient+7,?___aodiv+7
 10755                           
 10756                           ; BSR set to: 0
 10757  0027EA  0012               	return		;funcret
 10758  0027EC                     __end_of___aodiv:
 10759                           	opt callstack 0
 10760                           
 10761 ;; *************** function _atoi *****************
 10762 ;; Defined at:
 10763 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
 10764 ;; Parameters:    Size  Location     Type
 10765 ;;  s               2    7[BANK0 ] PTR const unsigned char 
 10766 ;;		 -> STR_61(10), STR_60(11), STR_59(11), STR_58(12), 
 10767 ;;		 -> STR_57(12), STR_56(10), STR_55(10), STR_54(13), 
 10768 ;;		 -> STR_53(8), STR_52(17), STR_51(15), STR_50(15), 
 10769 ;;		 -> STR_49(12), STR_48(17), STR_47(12), STR_46(15), 
 10770 ;;		 -> STR_45(18), STR_44(17), STR_43(12), STR_42(15), 
 10771 ;;		 -> STR_41(18), STR_40(17), STR_39(14), STR_38(14), 
 10772 ;;		 -> STR_37(17), STR_36(3), STR_35(9), STR_34(16), 
 10773 ;;		 -> STR_33(3), STR_32(9), STR_31(17), STR_30(15), 
 10774 ;;		 -> STR_29(15), STR_28(12), STR_27(10), STR_26(15), 
 10775 ;;		 -> STR_25(12), STR_24(10), STR_23(16), STR_22(12), 
 10776 ;;		 -> STR_21(3), STR_20(11), STR_19(13), STR_18(8), 
 10777 ;;		 -> STR_17(10), STR_16(17), STR_15(10), STR_14(16), 
 10778 ;;		 -> STR_13(10), STR_12(16), STR_11(10), STR_10(17), 
 10779 ;;		 -> STR_9(5), STR_8(10), STR_7(14), STR_6(6), 
 10780 ;;		 -> STR_5(10), STR_4(10), STR_3(11), STR_2(13), 
 10781 ;;		 -> STR_1(10), 
 10782 ;; Auto vars:     Size  Location     Type
 10783 ;;  n               2   20[BANK0 ] int 
 10784 ;;  neg             2   13[BANK0 ] int 
 10785 ;; Return value:  Size  Location     Type
 10786 ;;                  2    7[BANK0 ] int 
 10787 ;; Registers used:
 10788 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10789 ;; Tracked objects:
 10790 ;;		On entry : 0/0
 10791 ;;		On exit  : 0/0
 10792 ;;		Unchanged: 0/0
 10793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10794 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10795 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10796 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10797 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10798 ;;Total ram usage:       15 bytes
 10799 ;; Hardware stack levels used:    1
 10800 ;; Hardware stack levels required when called:    4
 10801 ;; This function calls:
 10802 ;;		___wmul
 10803 ;;		_isdigit
 10804 ;;		_isspace
 10805 ;; This function is called by:
 10806 ;;		_vfpfcnvrt
 10807 ;; This function uses a non-reentrant model
 10808 ;;
 10809                           
 10810                           	psect	text37
 10811  0027EC                     __ptext37:
 10812                           	opt callstack 0
 10813  0027EC                     _atoi:
 10814                           	opt callstack 22
 10815                           
 10816                           ; BSR set to: 0
 10817                           ;incstack = 0
 10818  0027EC  0E00               	movlw	0
 10819  0027EE  0100               	movlb	0	; () banked
 10820  0027F0  6F95               	movwf	(atoi@n+1)& (0+255),b
 10821  0027F2  0E00               	movlw	0
 10822  0027F4  6F94               	movwf	atoi@n& (0+255),b
 10823  0027F6  0E00               	movlw	0
 10824  0027F8  6F8E               	movwf	(atoi@neg+1)& (0+255),b
 10825  0027FA  0E00               	movlw	0
 10826  0027FC  6F8D               	movwf	atoi@neg& (0+255),b
 10827  0027FE  D002               	goto	l6562
 10828  002800                     l6560:
 10829                           
 10830                           ; BSR set to: 0
 10831  002800  4B87               	infsnz	atoi@s& (0+255),f,b
 10832  002802  2B88               	incf	(atoi@s+1)& (0+255),f,b
 10833  002804                     l6562:
 10834                           
 10835                           ; BSR set to: 0
 10836  002804  0E01               	movlw	1
 10837  002806  6F93               	movwf	_atoi$1584& (0+255),b
 10838                           
 10839                           ; BSR set to: 0
 10840  002808  C087  FFF6         	movff	atoi@s,tblptrl
 10841  00280C  C088  FFF7         	movff	atoi@s+1,tblptrh
 10842  002810                     	if	0	;tblptru may be non-zero
 10843  002810                     	endif
 10844  002810                     	if	0	;tblptru may be non-zero
 10845  002810                     	endif
 10846  002810  0008               	tblrd		*
 10847  002812  50F5               	movf	tablat,w,c
 10848  002814  0A20               	xorlw	32
 10849  002816  B4D8               	btfsc	status,2,c
 10850  002818  D018               	goto	l6570
 10851                           
 10852                           ; BSR set to: 0
 10853  00281A  0EF7               	movlw	247
 10854  00281C  6F89               	movwf	??_atoi& (0+255),b
 10855  00281E  0EFF               	movlw	255
 10856  002820  6F8A               	movwf	(??_atoi+1)& (0+255),b
 10857  002822  C087  FFF6         	movff	atoi@s,tblptrl
 10858  002826  C088  FFF7         	movff	atoi@s+1,tblptrh
 10859  00282A                     	if	0	;tblptru may be non-zero
 10860  00282A                     	endif
 10861  00282A                     	if	0	;tblptru may be non-zero
 10862  00282A                     	endif
 10863  00282A  0008               	tblrd		*
 10864  00282C  50F5               	movf	tablat,w,c
 10865  00282E  6F8B               	movwf	(??_atoi+2)& (0+255),b
 10866  002830  6B8C               	clrf	(??_atoi+3)& (0+255),b
 10867  002832  5189               	movf	??_atoi& (0+255),w,b
 10868  002834  278B               	addwf	(??_atoi+2)& (0+255),f,b
 10869  002836  518A               	movf	(??_atoi+1)& (0+255),w,b
 10870  002838  238C               	addwfc	(??_atoi+3)& (0+255),f,b
 10871  00283A  518C               	movf	(??_atoi+3)& (0+255),w,b
 10872  00283C  E104               	bnz	u7140
 10873  00283E  0E05               	movlw	5
 10874  002840  5D8B               	subwf	(??_atoi+2)& (0+255),w,b
 10875  002842  A0D8               	btfss	status,0,c
 10876  002844  D002               	goto	l6570
 10877  002846                     u7140:
 10878                           
 10879                           ; BSR set to: 0
 10880  002846  0E00               	movlw	0
 10881  002848  6F93               	movwf	_atoi$1584& (0+255),b
 10882  00284A                     l6570:
 10883                           
 10884                           ; BSR set to: 0
 10885  00284A  C093  F08F         	movff	_atoi$1584,_atoi$1583
 10886  00284E  6B90               	clrf	(_atoi$1583+1)& (0+255),b
 10887                           
 10888                           ; BSR set to: 0
 10889  002850  518F               	movf	_atoi$1583& (0+255),w,b
 10890  002852  1190               	iorwf	(_atoi$1583+1)& (0+255),w,b
 10891  002854  B4D8               	btfsc	status,2,c
 10892  002856  D008               	goto	l6580
 10893  002858  D7D3               	goto	l6560
 10894  00285A                     l6576:
 10895                           
 10896                           ; BSR set to: 0
 10897  00285A  0E00               	movlw	0
 10898  00285C  6F8E               	movwf	(atoi@neg+1)& (0+255),b
 10899  00285E  0E01               	movlw	1
 10900  002860  6F8D               	movwf	atoi@neg& (0+255),b
 10901  002862                     l6578:
 10902                           
 10903                           ; BSR set to: 0
 10904  002862  4B87               	infsnz	atoi@s& (0+255),f,b
 10905  002864  2B88               	incf	(atoi@s+1)& (0+255),f,b
 10906  002866  D02F               	goto	l6586
 10907  002868                     l6580:
 10908                           
 10909                           ; BSR set to: 0
 10910  002868  C087  FFF6         	movff	atoi@s,tblptrl
 10911  00286C  C088  FFF7         	movff	atoi@s+1,tblptrh
 10912  002870                     	if	0	;tblptru may be non-zero
 10913  002870                     	endif
 10914  002870                     	if	0	;tblptru may be non-zero
 10915  002870                     	endif
 10916  002870  0008               	tblrd		*
 10917  002872  50F5               	movf	tablat,w,c
 10918  002874  6F89               	movwf	??_atoi& (0+255),b
 10919  002876  6B8A               	clrf	(??_atoi+1)& (0+255),b
 10920                           
 10921                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10922                           ; Switch size 1, requested type "simple"
 10923                           ; Number of cases is 1, Range of values is 0 to 0
 10924                           ; switch strategies available:
 10925                           ; Name         Instructions Cycles
 10926                           ; simple_byte            4     3 (average)
 10927                           ;	Chosen strategy is simple_byte
 10928  002878  518A               	movf	(??_atoi+1)& (0+255),w,b
 10929  00287A  0A00               	xorlw	0	; case 0
 10930  00287C  A4D8               	btfss	status,2,c
 10931  00287E  D023               	goto	l6586
 10932                           
 10933                           ; BSR set to: 0
 10934                           ; Switch size 1, requested type "simple"
 10935                           ; Number of cases is 2, Range of values is 43 to 45
 10936                           ; switch strategies available:
 10937                           ; Name         Instructions Cycles
 10938                           ; simple_byte            7     4 (average)
 10939                           ;	Chosen strategy is simple_byte
 10940  002880  5189               	movf	??_atoi& (0+255),w,b
 10941  002882  0A2B               	xorlw	43	; case 43
 10942  002884  B4D8               	btfsc	status,2,c
 10943  002886  D7ED               	goto	l6578
 10944  002888  0A06               	xorlw	6	; case 45
 10945  00288A  B4D8               	btfsc	status,2,c
 10946  00288C  D7E6               	goto	l6576
 10947  00288E  D01B               	goto	l6586
 10948  002890                     l6582:
 10949                           
 10950                           ; BSR set to: 0
 10951  002890  C094  F080         	movff	atoi@n,___wmul@multiplier
 10952  002894  C095  F081         	movff	atoi@n+1,___wmul@multiplier+1
 10953  002898  0E00               	movlw	0
 10954  00289A  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10955  00289C  0E0A               	movlw	10
 10956  00289E  6F82               	movwf	___wmul@multiplicand& (0+255),b
 10957  0028A0  EC21  F01D         	call	___wmul	;wreg free
 10958  0028A4  C087  FFF6         	movff	atoi@s,tblptrl
 10959  0028A8  C088  FFF7         	movff	atoi@s+1,tblptrh
 10960  0028AC                     	if	0	;tblptru may be non-zero
 10961  0028AC                     	endif
 10962  0028AC                     	if	0	;tblptru may be non-zero
 10963  0028AC                     	endif
 10964  0028AC  0008               	tblrd		*
 10965  0028AE  50F5               	movf	tablat,w,c
 10966  0028B0  0100               	movlb	0	; () banked
 10967  0028B2  5F80               	subwf	?___wmul& (0+255),f,b
 10968  0028B4  0E00               	movlw	0
 10969  0028B6  5B81               	subwfb	(?___wmul+1)& (0+255),f,b
 10970  0028B8  0E30               	movlw	48
 10971  0028BA  2580               	addwf	?___wmul& (0+255),w,b
 10972  0028BC  6F94               	movwf	atoi@n& (0+255),b
 10973  0028BE  0E00               	movlw	0
 10974  0028C0  2181               	addwfc	(?___wmul+1)& (0+255),w,b
 10975  0028C2  6F95               	movwf	(atoi@n+1)& (0+255),b
 10976  0028C4  D7CE               	goto	l6578
 10977  0028C6                     l6586:
 10978                           
 10979                           ; BSR set to: 0
 10980  0028C6  0ED0               	movlw	208
 10981  0028C8  6F89               	movwf	??_atoi& (0+255),b
 10982  0028CA  0EFF               	movlw	255
 10983  0028CC  6F8A               	movwf	(??_atoi+1)& (0+255),b
 10984  0028CE  C087  FFF6         	movff	atoi@s,tblptrl
 10985  0028D2  C088  FFF7         	movff	atoi@s+1,tblptrh
 10986  0028D6                     	if	0	;tblptru may be non-zero
 10987  0028D6                     	endif
 10988  0028D6                     	if	0	;tblptru may be non-zero
 10989  0028D6                     	endif
 10990  0028D6  0008               	tblrd		*
 10991  0028D8  50F5               	movf	tablat,w,c
 10992  0028DA  6F8B               	movwf	(??_atoi+2)& (0+255),b
 10993  0028DC  6B8C               	clrf	(??_atoi+3)& (0+255),b
 10994  0028DE  5189               	movf	??_atoi& (0+255),w,b
 10995  0028E0  278B               	addwf	(??_atoi+2)& (0+255),f,b
 10996  0028E2  518A               	movf	(??_atoi+1)& (0+255),w,b
 10997  0028E4  238C               	addwfc	(??_atoi+3)& (0+255),f,b
 10998  0028E6  518C               	movf	(??_atoi+3)& (0+255),w,b
 10999  0028E8  E106               	bnz	u7160
 11000  0028EA  0E0A               	movlw	10
 11001  0028EC  5D8B               	subwf	(??_atoi+2)& (0+255),w,b
 11002  0028EE  B0D8               	btfsc	status,0,c
 11003  0028F0  D002               	goto	u7160
 11004  0028F2  0E01               	movlw	1
 11005  0028F4  D001               	goto	u7170
 11006  0028F6                     u7160:
 11007  0028F6  0E00               	movlw	0
 11008  0028F8                     u7170:
 11009  0028F8  6F91               	movwf	_atoi$1585& (0+255),b
 11010  0028FA  6B92               	clrf	(_atoi$1585+1)& (0+255),b
 11011                           
 11012                           ; BSR set to: 0
 11013  0028FC  5191               	movf	_atoi$1585& (0+255),w,b
 11014  0028FE  1192               	iorwf	(_atoi$1585+1)& (0+255),w,b
 11015  002900  A4D8               	btfss	status,2,c
 11016  002902  D7C6               	goto	l6582
 11017                           
 11018                           ; BSR set to: 0
 11019  002904  518D               	movf	atoi@neg& (0+255),w,b
 11020  002906  118E               	iorwf	(atoi@neg+1)& (0+255),w,b
 11021  002908  A4D8               	btfss	status,2,c
 11022  00290A  D00D               	goto	l1393
 11023                           
 11024                           ; BSR set to: 0
 11025  00290C  C094  F089         	movff	atoi@n,??_atoi
 11026  002910  C095  F08A         	movff	atoi@n+1,??_atoi+1
 11027  002914  1F89               	comf	??_atoi& (0+255),f,b
 11028  002916  1F8A               	comf	(??_atoi+1)& (0+255),f,b
 11029  002918  4B89               	infsnz	??_atoi& (0+255),f,b
 11030  00291A  2B8A               	incf	(??_atoi+1)& (0+255),f,b
 11031  00291C  C089  F087         	movff	??_atoi,?_atoi
 11032  002920  C08A  F088         	movff	??_atoi+1,?_atoi+1
 11033  002924  0012               	return	
 11034  002926                     l1393:
 11035                           
 11036                           ; BSR set to: 0
 11037  002926  C094  F087         	movff	atoi@n,?_atoi
 11038  00292A  C095  F088         	movff	atoi@n+1,?_atoi+1
 11039                           
 11040                           ; BSR set to: 0
 11041  00292E  0012               	return		;funcret
 11042  002930                     __end_of_atoi:
 11043                           	opt callstack 0
 11044                           
 11045 ;; *************** function _isspace *****************
 11046 ;; Defined at:
 11047 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
 11048 ;; Parameters:    Size  Location     Type
 11049 ;;  c               2    0[BANK0 ] int 
 11050 ;; Auto vars:     Size  Location     Type
 11051 ;;		None
 11052 ;; Return value:  Size  Location     Type
 11053 ;;                  2    0[BANK0 ] int 
 11054 ;; Registers used:
 11055 ;;		wreg, status,2, status,0
 11056 ;; Tracked objects:
 11057 ;;		On entry : 0/0
 11058 ;;		On exit  : 0/0
 11059 ;;		Unchanged: 0/0
 11060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11061 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11062 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11063 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11064 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11065 ;;Total ram usage:        7 bytes
 11066 ;; Hardware stack levels used:    1
 11067 ;; Hardware stack levels required when called:    3
 11068 ;; This function calls:
 11069 ;;		Nothing
 11070 ;; This function is called by:
 11071 ;;		_atoi
 11072 ;; This function uses a non-reentrant model
 11073 ;;
 11074                           
 11075                           	psect	text38
 11076  00377C                     __ptext38:
 11077                           	opt callstack 0
 11078  00377C                     _isspace:
 11079                           	opt callstack 22
 11080                           
 11081                           ; BSR set to: 0
 11082                           ;incstack = 0
 11083  00377C  0E01               	movlw	1
 11084  00377E  0100               	movlb	0	; () banked
 11085  003780  6F86               	movwf	_isspace$1610& (0+255),b
 11086                           
 11087                           ; BSR set to: 0
 11088  003782  0E20               	movlw	32
 11089  003784  1980               	xorwf	isspace@c& (0+255),w,b
 11090  003786  1181               	iorwf	(isspace@c+1)& (0+255),w,b
 11091  003788  B4D8               	btfsc	status,2,c
 11092  00378A  D014               	goto	l6426
 11093                           
 11094                           ; BSR set to: 0
 11095  00378C  0EF7               	movlw	247
 11096  00378E  6F82               	movwf	??_isspace& (0+255),b
 11097  003790  0EFF               	movlw	255
 11098  003792  6F83               	movwf	(??_isspace+1)& (0+255),b
 11099  003794  C080  F084         	movff	isspace@c,??_isspace+2
 11100  003798  C081  F085         	movff	isspace@c+1,??_isspace+3
 11101  00379C  5182               	movf	??_isspace& (0+255),w,b
 11102  00379E  2784               	addwf	(??_isspace+2)& (0+255),f,b
 11103  0037A0  5183               	movf	(??_isspace+1)& (0+255),w,b
 11104  0037A2  2385               	addwfc	(??_isspace+3)& (0+255),f,b
 11105  0037A4  5185               	movf	(??_isspace+3)& (0+255),w,b
 11106  0037A6  E104               	bnz	u6800
 11107  0037A8  0E05               	movlw	5
 11108  0037AA  5D84               	subwf	(??_isspace+2)& (0+255),w,b
 11109  0037AC  A0D8               	btfss	status,0,c
 11110  0037AE  D002               	goto	l6426
 11111  0037B0                     u6800:
 11112                           
 11113                           ; BSR set to: 0
 11114  0037B0  0E00               	movlw	0
 11115  0037B2  6F86               	movwf	_isspace$1610& (0+255),b
 11116  0037B4                     l6426:
 11117                           
 11118                           ; BSR set to: 0
 11119  0037B4  C086  F080         	movff	_isspace$1610,?_isspace
 11120  0037B8  6B81               	clrf	(?_isspace+1)& (0+255),b
 11121                           
 11122                           ; BSR set to: 0
 11123  0037BA  0012               	return		;funcret
 11124  0037BC                     __end_of_isspace:
 11125                           	opt callstack 0
 11126                           
 11127 ;; *************** function _isdigit *****************
 11128 ;; Defined at:
 11129 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
 11130 ;; Parameters:    Size  Location     Type
 11131 ;;  c               2    0[BANK0 ] int 
 11132 ;; Auto vars:     Size  Location     Type
 11133 ;;		None
 11134 ;; Return value:  Size  Location     Type
 11135 ;;                  2    0[BANK0 ] int 
 11136 ;; Registers used:
 11137 ;;		wreg, status,2, status,0
 11138 ;; Tracked objects:
 11139 ;;		On entry : 0/0
 11140 ;;		On exit  : 0/0
 11141 ;;		Unchanged: 0/0
 11142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11143 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11145 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11146 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11147 ;;Total ram usage:        6 bytes
 11148 ;; Hardware stack levels used:    1
 11149 ;; Hardware stack levels required when called:    3
 11150 ;; This function calls:
 11151 ;;		Nothing
 11152 ;; This function is called by:
 11153 ;;		_vfpfcnvrt
 11154 ;;		_atoi
 11155 ;; This function uses a non-reentrant model
 11156 ;;
 11157                           
 11158                           	psect	text39
 11159  003936                     __ptext39:
 11160                           	opt callstack 0
 11161  003936                     _isdigit:
 11162                           	opt callstack 23
 11163                           
 11164                           ; BSR set to: 0
 11165                           ;incstack = 0
 11166  003936  0ED0               	movlw	208
 11167  003938  0100               	movlb	0	; () banked
 11168  00393A  6F82               	movwf	??_isdigit& (0+255),b
 11169  00393C  0EFF               	movlw	255
 11170  00393E  6F83               	movwf	(??_isdigit+1)& (0+255),b
 11171  003940  C080  F084         	movff	isdigit@c,??_isdigit+2
 11172  003944  C081  F085         	movff	isdigit@c+1,??_isdigit+3
 11173  003948  5182               	movf	??_isdigit& (0+255),w,b
 11174  00394A  2784               	addwf	(??_isdigit+2)& (0+255),f,b
 11175  00394C  5183               	movf	(??_isdigit+1)& (0+255),w,b
 11176  00394E  2385               	addwfc	(??_isdigit+3)& (0+255),f,b
 11177  003950  5185               	movf	(??_isdigit+3)& (0+255),w,b
 11178  003952  E106               	bnz	u6640
 11179  003954  0E0A               	movlw	10
 11180  003956  5D84               	subwf	(??_isdigit+2)& (0+255),w,b
 11181  003958  B0D8               	btfsc	status,0,c
 11182  00395A  D002               	goto	u6640
 11183  00395C  0E01               	movlw	1
 11184  00395E  D001               	goto	u6650
 11185  003960                     u6640:
 11186  003960  0E00               	movlw	0
 11187  003962                     u6650:
 11188  003962  6F80               	movwf	?_isdigit& (0+255),b
 11189  003964  6B81               	clrf	(?_isdigit+1)& (0+255),b
 11190                           
 11191                           ; BSR set to: 0
 11192  003966  0012               	return		;funcret
 11193  003968                     __end_of_isdigit:
 11194                           	opt callstack 0
 11195                           
 11196 ;; *************** function ___wmul *****************
 11197 ;; Defined at:
 11198 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 11199 ;; Parameters:    Size  Location     Type
 11200 ;;  multiplier      2    0[BANK0 ] unsigned int 
 11201 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 11202 ;; Auto vars:     Size  Location     Type
 11203 ;;  product         2    4[BANK0 ] unsigned int 
 11204 ;; Return value:  Size  Location     Type
 11205 ;;                  2    0[BANK0 ] unsigned int 
 11206 ;; Registers used:
 11207 ;;		wreg, status,2, status,0, prodl, prodh
 11208 ;; Tracked objects:
 11209 ;;		On entry : 0/0
 11210 ;;		On exit  : 0/0
 11211 ;;		Unchanged: 0/0
 11212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11213 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11214 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11216 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11217 ;;Total ram usage:        6 bytes
 11218 ;; Hardware stack levels used:    1
 11219 ;; Hardware stack levels required when called:    3
 11220 ;; This function calls:
 11221 ;;		Nothing
 11222 ;; This function is called by:
 11223 ;;		_main
 11224 ;;		_atoi
 11225 ;; This function uses a non-reentrant model
 11226 ;;
 11227                           
 11228                           	psect	text40
 11229  003A42                     __ptext40:
 11230                           	opt callstack 0
 11231  003A42                     ___wmul:
 11232                           	opt callstack 22
 11233                           
 11234                           ; BSR set to: 0
 11235                           ;incstack = 0
 11236  003A42  0100               	movlb	0	; () banked
 11237  003A44  5180               	movf	___wmul@multiplier& (0+255),w,b
 11238  003A46  0382               	mulwf	___wmul@multiplicand& (0+255),b
 11239  003A48  CFF3 F084          	movff	prodl,___wmul@product
 11240  003A4C  CFF4 F085          	movff	prodh,___wmul@product+1
 11241  003A50  5180               	movf	___wmul@multiplier& (0+255),w,b
 11242  003A52  0383               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 11243  003A54  50F3               	movf	prodl,w,c
 11244  003A56  2785               	addwf	(___wmul@product+1)& (0+255),f,b
 11245  003A58  5181               	movf	(___wmul@multiplier+1)& (0+255),w,b
 11246  003A5A  0382               	mulwf	___wmul@multiplicand& (0+255),b
 11247  003A5C  50F3               	movf	prodl,w,c
 11248  003A5E  2785               	addwf	(___wmul@product+1)& (0+255),f,b
 11249                           
 11250                           ; BSR set to: 0
 11251  003A60  C084  F080         	movff	___wmul@product,?___wmul
 11252  003A64  C085  F081         	movff	___wmul@product+1,?___wmul+1
 11253                           
 11254                           ; BSR set to: 0
 11255  003A68  0012               	return		;funcret
 11256  003A6A                     __end_of___wmul:
 11257                           	opt callstack 0
 11258                           
 11259 ;; *************** function _initLCD *****************
 11260 ;; Defined at:
 11261 ;;		line 69 in file "lcd.c"
 11262 ;; Parameters:    Size  Location     Type
 11263 ;;		None
 11264 ;; Auto vars:     Size  Location     Type
 11265 ;;		None
 11266 ;; Return value:  Size  Location     Type
 11267 ;;                  1    wreg      void 
 11268 ;; Registers used:
 11269 ;;		wreg, status,2, status,0, cstack
 11270 ;; Tracked objects:
 11271 ;;		On entry : 0/0
 11272 ;;		On exit  : 0/0
 11273 ;;		Unchanged: 0/0
 11274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11277 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11278 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11279 ;;Total ram usage:        1 bytes
 11280 ;; Hardware stack levels used:    1
 11281 ;; Hardware stack levels required when called:    7
 11282 ;; This function calls:
 11283 ;;		_lcdInst
 11284 ;;		_send_byte
 11285 ;;		_send_nibble
 11286 ;; This function is called by:
 11287 ;;		_actuators_main
 11288 ;;		_UI_main
 11289 ;;		_main
 11290 ;; This function uses a non-reentrant model
 11291 ;;
 11292                           
 11293                           	psect	text41
 11294  0033E6                     __ptext41:
 11295                           	opt callstack 0
 11296  0033E6                     _initLCD:
 11297                           	opt callstack 23
 11298                           
 11299                           ;lcd.c: 70:     _delay((unsigned long)((15)*(10000000/4000.0)));
 11300                           
 11301                           ; BSR set to: 0
 11302                           ;incstack = 0
 11303  0033E6  0E31               	movlw	49
 11304  0033E8  0100               	movlb	0	; () banked
 11305  0033EA  6F84               	movwf	??_initLCD& (0+255),b
 11306  0033EC  0EB2               	movlw	178
 11307  0033EE                     u9557:
 11308  0033EE  2EE8               	decfsz	wreg,f,c
 11309  0033F0  D7FE               	bra	u9557
 11310  0033F2  2F84               	decfsz	??_initLCD& (0+255),f,b
 11311  0033F4  D7FC               	bra	u9557
 11312  0033F6  F000               	nop	
 11313                           
 11314                           ;lcd.c: 72:     LATDbits.LATD2 = 0;
 11315  0033F8  948C               	bcf	3980,2,c	;volatile
 11316                           
 11317                           ;lcd.c: 74:     send_nibble(0b0011);
 11318  0033FA  0E03               	movlw	3
 11319  0033FC  EC5B  F01D         	call	_send_nibble
 11320                           
 11321                           ;lcd.c: 75:     _delay((unsigned long)((5)*(10000000/4000.0)));
 11322  003400  0E11               	movlw	17
 11323  003402  0100               	movlb	0	; () banked
 11324  003404  6F84               	movwf	??_initLCD& (0+255),b
 11325  003406  0E3A               	movlw	58
 11326  003408                     u9567:
 11327  003408  2EE8               	decfsz	wreg,f,c
 11328  00340A  D7FE               	bra	u9567
 11329  00340C  2F84               	decfsz	??_initLCD& (0+255),f,b
 11330  00340E  D7FC               	bra	u9567
 11331  003410  F000               	nop	
 11332                           
 11333                           ;lcd.c: 76:     send_nibble(0b0011);
 11334  003412  0E03               	movlw	3
 11335  003414  EC5B  F01D         	call	_send_nibble
 11336                           
 11337                           ;lcd.c: 77:     _delay((unsigned long)((150)*(10000000/4000000.0)));
 11338  003418  0E7D               	movlw	125
 11339  00341A                     u9577:
 11340  00341A  2EE8               	decfsz	wreg,f,c
 11341  00341C  D7FE               	bra	u9577
 11342                           
 11343                           ;lcd.c: 78:     send_byte(0b00110010);
 11344  00341E  0E32               	movlw	50
 11345  003420  EC68  F01D         	call	_send_byte
 11346                           
 11347                           ;lcd.c: 80:     send_byte(0b00101000);
 11348  003424  0E28               	movlw	40
 11349  003426  EC68  F01D         	call	_send_byte
 11350                           
 11351                           ;lcd.c: 81:     send_byte(0b00001000);
 11352  00342A  0E08               	movlw	8
 11353  00342C  EC68  F01D         	call	_send_byte
 11354                           
 11355                           ;lcd.c: 82:     send_byte(0b00000001);
 11356  003430  0E01               	movlw	1
 11357  003432  EC68  F01D         	call	_send_byte
 11358                           
 11359                           ;lcd.c: 83:     _delay((unsigned long)((5)*(10000000/4000.0)));
 11360  003436  0E11               	movlw	17
 11361  003438  0100               	movlb	0	; () banked
 11362  00343A  6F84               	movwf	??_initLCD& (0+255),b
 11363  00343C  0E3A               	movlw	58
 11364  00343E                     u9587:
 11365  00343E  2EE8               	decfsz	wreg,f,c
 11366  003440  D7FE               	bra	u9587
 11367  003442  2F84               	decfsz	??_initLCD& (0+255),f,b
 11368  003444  D7FC               	bra	u9587
 11369  003446  F000               	nop	
 11370                           
 11371                           ;lcd.c: 84:     send_byte(0b00000110);
 11372  003448  0E06               	movlw	6
 11373  00344A  EC68  F01D         	call	_send_byte
 11374                           
 11375                           ;lcd.c: 87:     { lcdInst( (unsigned char)(8 | (1 << 2) | (1 << 1) | 1) );};
 11376  00344E  0E0F               	movlw	15
 11377  003450  EC86  F01D         	call	_lcdInst
 11378  003454  0012               	return		;funcret
 11379  003456                     __end_of_initLCD:
 11380                           	opt callstack 0
 11381                           
 11382 ;; *************** function _lcdInst *****************
 11383 ;; Defined at:
 11384 ;;		line 64 in file "lcd.c"
 11385 ;; Parameters:    Size  Location     Type
 11386 ;;  data            1    wreg     unsigned char 
 11387 ;; Auto vars:     Size  Location     Type
 11388 ;;  data            1    3[BANK0 ] unsigned char 
 11389 ;; Return value:  Size  Location     Type
 11390 ;;                  1    wreg      void 
 11391 ;; Registers used:
 11392 ;;		wreg, status,2, status,0, cstack
 11393 ;; Tracked objects:
 11394 ;;		On entry : 0/0
 11395 ;;		On exit  : 0/0
 11396 ;;		Unchanged: 0/0
 11397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11399 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11401 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11402 ;;Total ram usage:        1 bytes
 11403 ;; Hardware stack levels used:    1
 11404 ;; Hardware stack levels required when called:    6
 11405 ;; This function calls:
 11406 ;;		_send_byte
 11407 ;; This function is called by:
 11408 ;;		_actuators_main
 11409 ;;		_stepper2
 11410 ;;		_stepper2_back
 11411 ;;		_initLCD
 11412 ;;		_print_echo
 11413 ;;		_ultrasonic_main
 11414 ;;		_number_deploy
 11415 ;;		_UI_main
 11416 ;;		_main
 11417 ;;		_lcd_shift_cursor
 11418 ;;		_lcd_shift_display
 11419 ;; This function uses a non-reentrant model
 11420 ;;
 11421                           
 11422                           	psect	text42
 11423  003B0C                     __ptext42:
 11424                           	opt callstack 0
 11425  003B0C                     _lcdInst:
 11426                           	opt callstack 22
 11427                           
 11428                           ;incstack = 0
 11429                           ;lcdInst@data stored from wreg
 11430  003B0C  0100               	movlb	0	; () banked
 11431  003B0E  6F83               	movwf	lcdInst@data& (0+255),b
 11432                           
 11433                           ;lcd.c: 65:     LATDbits.LATD2 = 0;
 11434  003B10  948C               	bcf	3980,2,c	;volatile
 11435                           
 11436                           ;lcd.c: 66:     send_byte(data);
 11437  003B12  0100               	movlb	0	; () banked
 11438  003B14  5183               	movf	lcdInst@data& (0+255),w,b
 11439  003B16  EC68  F01D         	call	_send_byte
 11440  003B1A  0012               	return		;funcret
 11441  003B1C                     __end_of_lcdInst:
 11442                           	opt callstack 0
 11443                           
 11444 ;; *************** function _send_byte *****************
 11445 ;; Defined at:
 11446 ;;		line 55 in file "lcd.c"
 11447 ;; Parameters:    Size  Location     Type
 11448 ;;  data            1    wreg     unsigned char 
 11449 ;; Auto vars:     Size  Location     Type
 11450 ;;  data            1    2[BANK0 ] unsigned char 
 11451 ;; Return value:  Size  Location     Type
 11452 ;;                  1    wreg      void 
 11453 ;; Registers used:
 11454 ;;		wreg, status,2, status,0, cstack
 11455 ;; Tracked objects:
 11456 ;;		On entry : 0/0
 11457 ;;		On exit  : 0/0
 11458 ;;		Unchanged: 0/0
 11459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11461 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11463 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11464 ;;Total ram usage:        1 bytes
 11465 ;; Hardware stack levels used:    1
 11466 ;; Hardware stack levels required when called:    5
 11467 ;; This function calls:
 11468 ;;		_send_nibble
 11469 ;; This function is called by:
 11470 ;;		_lcdInst
 11471 ;;		_initLCD
 11472 ;;		_putch
 11473 ;; This function uses a non-reentrant model
 11474 ;;
 11475                           
 11476                           	psect	text43
 11477  003AD0                     __ptext43:
 11478                           	opt callstack 0
 11479  003AD0                     _send_byte:
 11480                           	opt callstack 16
 11481                           
 11482                           ;incstack = 0
 11483                           ;send_byte@data stored from wreg
 11484  003AD0  0100               	movlb	0	; () banked
 11485  003AD2  6F82               	movwf	send_byte@data& (0+255),b
 11486                           
 11487                           ;lcd.c: 57:     send_nibble(data >> 4);
 11488  003AD4  0100               	movlb	0	; () banked
 11489  003AD6  3982               	swapf	send_byte@data& (0+255),w,b
 11490  003AD8  0B0F               	andlw	15
 11491  003ADA  EC5B  F01D         	call	_send_nibble
 11492                           
 11493                           ;lcd.c: 60:     send_nibble(data);
 11494  003ADE  0100               	movlb	0	; () banked
 11495  003AE0  5182               	movf	send_byte@data& (0+255),w,b
 11496  003AE2  EC5B  F01D         	call	_send_nibble
 11497  003AE6  0012               	return		;funcret
 11498  003AE8                     __end_of_send_byte:
 11499                           	opt callstack 0
 11500                           
 11501 ;; *************** function _send_nibble *****************
 11502 ;; Defined at:
 11503 ;;		line 44 in file "lcd.c"
 11504 ;; Parameters:    Size  Location     Type
 11505 ;;  data            1    wreg     unsigned char 
 11506 ;; Auto vars:     Size  Location     Type
 11507 ;;  data            1    1[BANK0 ] unsigned char 
 11508 ;; Return value:  Size  Location     Type
 11509 ;;                  1    wreg      void 
 11510 ;; Registers used:
 11511 ;;		wreg, status,2, status,0, cstack
 11512 ;; Tracked objects:
 11513 ;;		On entry : 0/0
 11514 ;;		On exit  : 0/0
 11515 ;;		Unchanged: 0/0
 11516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11518 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11520 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11521 ;;Total ram usage:        1 bytes
 11522 ;; Hardware stack levels used:    1
 11523 ;; Hardware stack levels required when called:    4
 11524 ;; This function calls:
 11525 ;;		_pulse_e
 11526 ;; This function is called by:
 11527 ;;		_send_byte
 11528 ;;		_initLCD
 11529 ;; This function uses a non-reentrant model
 11530 ;;
 11531                           
 11532                           	psect	text44
 11533  003AB6                     __ptext44:
 11534                           	opt callstack 0
 11535  003AB6                     _send_nibble:
 11536                           	opt callstack 16
 11537                           
 11538                           ;incstack = 0
 11539                           ;send_nibble@data stored from wreg
 11540  003AB6  0100               	movlb	0	; () banked
 11541  003AB8  6F81               	movwf	send_nibble@data& (0+255),b
 11542                           
 11543                           ;lcd.c: 46:     LATD = (unsigned char)(LATD & 0x0F);
 11544  003ABA  508C               	movf	3980,w,c	;volatile
 11545  003ABC  0B0F               	andlw	15
 11546  003ABE  6E8C               	movwf	3980,c	;volatile
 11547                           
 11548                           ;lcd.c: 47:     LATD = (unsigned char)((data << 4) | LATD);
 11549  003AC0  0100               	movlb	0	; () banked
 11550  003AC2  3981               	swapf	send_nibble@data& (0+255),w,b
 11551  003AC4  0BF0               	andlw	240
 11552  003AC6  108C               	iorwf	3980,w,c	;volatile
 11553  003AC8  6E8C               	movwf	3980,c	;volatile
 11554                           
 11555                           ; BSR set to: 0
 11556                           ;lcd.c: 48:     pulse_e();
 11557  003ACA  ECCB  F01C         	call	_pulse_e	;wreg free
 11558  003ACE  0012               	return		;funcret
 11559  003AD0                     __end_of_send_nibble:
 11560                           	opt callstack 0
 11561                           
 11562 ;; *************** function _pulse_e *****************
 11563 ;; Defined at:
 11564 ;;		line 28 in file "lcd.c"
 11565 ;; Parameters:    Size  Location     Type
 11566 ;;		None
 11567 ;; Auto vars:     Size  Location     Type
 11568 ;;  interruptSta    1    0[BANK0 ] unsigned char 
 11569 ;; Return value:  Size  Location     Type
 11570 ;;                  1    wreg      void 
 11571 ;; Registers used:
 11572 ;;		wreg
 11573 ;; Tracked objects:
 11574 ;;		On entry : 0/0
 11575 ;;		On exit  : 0/0
 11576 ;;		Unchanged: 0/0
 11577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11579 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11581 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11582 ;;Total ram usage:        1 bytes
 11583 ;; Hardware stack levels used:    1
 11584 ;; Hardware stack levels required when called:    3
 11585 ;; This function calls:
 11586 ;;		Nothing
 11587 ;; This function is called by:
 11588 ;;		_send_nibble
 11589 ;; This function uses a non-reentrant model
 11590 ;;
 11591                           
 11592                           	psect	text45
 11593  003996                     __ptext45:
 11594                           	opt callstack 0
 11595  003996                     _pulse_e:
 11596                           	opt callstack 16
 11597                           
 11598                           ;lcd.c: 29:     unsigned char interruptState = INTCONbits.GIE;
 11599                           
 11600                           ;incstack = 0
 11601  003996  0E00               	movlw	0
 11602  003998  BEF2               	btfsc	4082,7,c	;volatile
 11603  00399A  0E01               	movlw	1
 11604  00399C  0100               	movlb	0	; () banked
 11605  00399E  6F80               	movwf	pulse_e@interruptState& (0+255),b
 11606                           
 11607                           ; BSR set to: 0
 11608                           ;lcd.c: 30:     (INTCONbits.GIE = 0);
 11609  0039A0  9EF2               	bcf	4082,7,c	;volatile
 11610                           
 11611                           ; BSR set to: 0
 11612                           ;lcd.c: 31:     LATDbits.LATD3 = 1;
 11613  0039A2  868C               	bsf	3980,3,c	;volatile
 11614                           
 11615                           ;lcd.c: 34:     _delay((unsigned long)((25)*(10000000/4000000.0)));
 11616  0039A4  0E14               	movlw	20
 11617  0039A6                     u9597:
 11618  0039A6  2EE8               	decfsz	wreg,f,c
 11619  0039A8  D7FE               	bra	u9597
 11620  0039AA  D000               	nop2	
 11621                           
 11622                           ;lcd.c: 35:     LATDbits.LATD3 = 0;
 11623  0039AC  968C               	bcf	3980,3,c	;volatile
 11624                           
 11625                           ;lcd.c: 36:     _delay((unsigned long)((100)*(10000000/4000000.0)));
 11626  0039AE  0E53               	movlw	83
 11627  0039B0                     u9607:
 11628  0039B0  2EE8               	decfsz	wreg,f,c
 11629  0039B2  D7FE               	bra	u9607
 11630  0039B4  F000               	nop	
 11631                           
 11632                           ;lcd.c: 37:     INTCONbits.GIE = interruptState;
 11633  0039B6  0100               	movlb	0	; () banked
 11634  0039B8  B180               	btfsc	pulse_e@interruptState& (0+255),0,b
 11635  0039BA  D002               	bra	u6435
 11636  0039BC  9EF2               	bcf	4082,7,c	;volatile
 11637  0039BE  D001               	bra	u6436
 11638  0039C0                     u6435:
 11639  0039C0  8EF2               	bsf	4082,7,c	;volatile
 11640  0039C2                     u6436:
 11641  0039C2  0012               	return		;funcret
 11642  0039C4                     __end_of_pulse_e:
 11643                           	opt callstack 0
 11644                           
 11645 ;; *************** function ___llmod *****************
 11646 ;; Defined at:
 11647 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\llmod.c"
 11648 ;; Parameters:    Size  Location     Type
 11649 ;;  dividend        4    0[BANK0 ] unsigned long 
 11650 ;;  divisor         4    4[BANK0 ] unsigned long 
 11651 ;; Auto vars:     Size  Location     Type
 11652 ;;  counter         1    8[BANK0 ] unsigned char 
 11653 ;; Return value:  Size  Location     Type
 11654 ;;                  4    0[BANK0 ] unsigned long 
 11655 ;; Registers used:
 11656 ;;		wreg, status,2, status,0
 11657 ;; Tracked objects:
 11658 ;;		On entry : 0/0
 11659 ;;		On exit  : 0/0
 11660 ;;		Unchanged: 0/0
 11661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11662 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11663 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11665 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11666 ;;Total ram usage:        9 bytes
 11667 ;; Hardware stack levels used:    1
 11668 ;; Hardware stack levels required when called:    3
 11669 ;; This function calls:
 11670 ;;		Nothing
 11671 ;; This function is called by:
 11672 ;;		_UI_main
 11673 ;; This function uses a non-reentrant model
 11674 ;;
 11675                           
 11676                           	psect	text46
 11677  0034C4                     __ptext46:
 11678                           	opt callstack 0
 11679  0034C4                     ___llmod:
 11680                           	opt callstack 26
 11681                           
 11682                           ;incstack = 0
 11683  0034C4  0100               	movlb	0	; () banked
 11684  0034C6  5184               	movf	___llmod@divisor& (0+255),w,b
 11685  0034C8  1185               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 11686  0034CA  1186               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 11687  0034CC  1187               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 11688  0034CE  B4D8               	btfsc	status,2,c
 11689  0034D0  D024               	goto	l1107
 11690                           
 11691                           ; BSR set to: 0
 11692  0034D2  0E01               	movlw	1
 11693  0034D4  6F88               	movwf	___llmod@counter& (0+255),b
 11694  0034D6  D006               	goto	l7356
 11695  0034D8                     l7354:
 11696                           
 11697                           ; BSR set to: 0
 11698  0034D8  90D8               	bcf	status,0,c
 11699  0034DA  3784               	rlcf	___llmod@divisor& (0+255),f,b
 11700  0034DC  3785               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 11701  0034DE  3786               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 11702  0034E0  3787               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 11703  0034E2  2B88               	incf	___llmod@counter& (0+255),f,b
 11704  0034E4                     l7356:
 11705                           
 11706                           ; BSR set to: 0
 11707  0034E4  AF87               	btfss	(___llmod@divisor+3)& (0+255),7,b
 11708  0034E6  D7F8               	goto	l7354
 11709  0034E8                     u7970:
 11710                           
 11711                           ; BSR set to: 0
 11712  0034E8  5184               	movf	___llmod@divisor& (0+255),w,b
 11713  0034EA  5D80               	subwf	___llmod@dividend& (0+255),w,b
 11714  0034EC  5185               	movf	(___llmod@divisor+1)& (0+255),w,b
 11715  0034EE  5981               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 11716  0034F0  5186               	movf	(___llmod@divisor+2)& (0+255),w,b
 11717  0034F2  5982               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 11718  0034F4  5187               	movf	(___llmod@divisor+3)& (0+255),w,b
 11719  0034F6  5983               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 11720  0034F8  A0D8               	btfss	status,0,c
 11721  0034FA  D008               	goto	l7362
 11722                           
 11723                           ; BSR set to: 0
 11724  0034FC  5184               	movf	___llmod@divisor& (0+255),w,b
 11725  0034FE  5F80               	subwf	___llmod@dividend& (0+255),f,b
 11726  003500  5185               	movf	(___llmod@divisor+1)& (0+255),w,b
 11727  003502  5B81               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 11728  003504  5186               	movf	(___llmod@divisor+2)& (0+255),w,b
 11729  003506  5B82               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 11730  003508  5187               	movf	(___llmod@divisor+3)& (0+255),w,b
 11731  00350A  5B83               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 11732  00350C                     l7362:
 11733                           
 11734                           ; BSR set to: 0
 11735  00350C  90D8               	bcf	status,0,c
 11736  00350E  3387               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 11737  003510  3386               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 11738  003512  3385               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 11739  003514  3384               	rrcf	___llmod@divisor& (0+255),f,b
 11740                           
 11741                           ; BSR set to: 0
 11742  003516  2F88               	decfsz	___llmod@counter& (0+255),f,b
 11743  003518  D7E7               	goto	u7970
 11744  00351A                     l1107:
 11745                           
 11746                           ; BSR set to: 0
 11747  00351A  C080  F080         	movff	___llmod@dividend,?___llmod
 11748  00351E  C081  F081         	movff	___llmod@dividend+1,?___llmod+1
 11749  003522  C082  F082         	movff	___llmod@dividend+2,?___llmod+2
 11750  003526  C083  F083         	movff	___llmod@dividend+3,?___llmod+3
 11751                           
 11752                           ; BSR set to: 0
 11753  00352A  0012               	return		;funcret
 11754  00352C                     __end_of___llmod:
 11755                           	opt callstack 0
 11756                           
 11757 ;; *************** function _I2C_Master_Write *****************
 11758 ;; Defined at:
 11759 ;;		line 70 in file "I2C.c"
 11760 ;; Parameters:    Size  Location     Type
 11761 ;;  byteToWrite     2    1[BANK0 ] unsigned int 
 11762 ;; Auto vars:     Size  Location     Type
 11763 ;;		None
 11764 ;; Return value:  Size  Location     Type
 11765 ;;                  1    wreg      void 
 11766 ;; Registers used:
 11767 ;;		wreg, status,2, status,0, cstack
 11768 ;; Tracked objects:
 11769 ;;		On entry : 0/0
 11770 ;;		On exit  : 0/0
 11771 ;;		Unchanged: 0/0
 11772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11773 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11776 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11777 ;;Total ram usage:        2 bytes
 11778 ;; Hardware stack levels used:    1
 11779 ;; Hardware stack levels required when called:    4
 11780 ;; This function calls:
 11781 ;;		_I2C_Master_Wait
 11782 ;; This function is called by:
 11783 ;;		_ultrasonic_main
 11784 ;;		_UI_main
 11785 ;;		_brake
 11786 ;;		_start
 11787 ;;		_backwards
 11788 ;; This function uses a non-reentrant model
 11789 ;;
 11790                           
 11791                           	psect	text47
 11792  003B1C                     __ptext47:
 11793                           	opt callstack 0
 11794  003B1C                     _I2C_Master_Write:
 11795                           	opt callstack 25
 11796                           
 11797                           ;I2C.c: 71:     I2C_Master_Wait();
 11798                           
 11799                           ; BSR set to: 0
 11800                           ;incstack = 0
 11801  003B1C  EC74  F01D         	call	_I2C_Master_Wait	;wreg free
 11802                           
 11803                           ;I2C.c: 74:     SSPBUF = byteToWrite;
 11804  003B20  C081  FFC9         	movff	I2C_Master_Write@byteToWrite,4041	;volatile
 11805  003B24  0012               	return		;funcret
 11806  003B26                     __end_of_I2C_Master_Write:
 11807                           	opt callstack 0
 11808                           
 11809 ;; *************** function _I2C_Master_Stop *****************
 11810 ;; Defined at:
 11811 ;;		line 65 in file "I2C.c"
 11812 ;; Parameters:    Size  Location     Type
 11813 ;;		None
 11814 ;; Auto vars:     Size  Location     Type
 11815 ;;		None
 11816 ;; Return value:  Size  Location     Type
 11817 ;;                  1    wreg      void 
 11818 ;; Registers used:
 11819 ;;		wreg, status,2, status,0, cstack
 11820 ;; Tracked objects:
 11821 ;;		On entry : 0/0
 11822 ;;		On exit  : 0/0
 11823 ;;		Unchanged: 0/0
 11824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11829 ;;Total ram usage:        0 bytes
 11830 ;; Hardware stack levels used:    1
 11831 ;; Hardware stack levels required when called:    4
 11832 ;; This function calls:
 11833 ;;		_I2C_Master_Wait
 11834 ;; This function is called by:
 11835 ;;		_ultrasonic_main
 11836 ;;		_UI_main
 11837 ;;		_brake
 11838 ;;		_start
 11839 ;;		_backwards
 11840 ;; This function uses a non-reentrant model
 11841 ;;
 11842                           
 11843                           	psect	text48
 11844  003B26                     __ptext48:
 11845                           	opt callstack 0
 11846  003B26                     _I2C_Master_Stop:
 11847                           	opt callstack 25
 11848                           
 11849                           ;I2C.c: 66:     I2C_Master_Wait();
 11850                           
 11851                           ;incstack = 0
 11852  003B26  EC74  F01D         	call	_I2C_Master_Wait	;wreg free
 11853                           
 11854                           ;I2C.c: 67:     SSPCON2bits.PEN = 1;
 11855  003B2A  84C5               	bsf	4037,2,c	;volatile
 11856  003B2C  0012               	return		;funcret
 11857  003B2E                     __end_of_I2C_Master_Stop:
 11858                           	opt callstack 0
 11859                           
 11860 ;; *************** function _I2C_Master_Start *****************
 11861 ;; Defined at:
 11862 ;;		line 55 in file "I2C.c"
 11863 ;; Parameters:    Size  Location     Type
 11864 ;;		None
 11865 ;; Auto vars:     Size  Location     Type
 11866 ;;		None
 11867 ;; Return value:  Size  Location     Type
 11868 ;;                  1    wreg      void 
 11869 ;; Registers used:
 11870 ;;		wreg, status,2, status,0, cstack
 11871 ;; Tracked objects:
 11872 ;;		On entry : 0/0
 11873 ;;		On exit  : 0/0
 11874 ;;		Unchanged: 0/0
 11875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11880 ;;Total ram usage:        0 bytes
 11881 ;; Hardware stack levels used:    1
 11882 ;; Hardware stack levels required when called:    4
 11883 ;; This function calls:
 11884 ;;		_I2C_Master_Wait
 11885 ;; This function is called by:
 11886 ;;		_ultrasonic_main
 11887 ;;		_UI_main
 11888 ;;		_brake
 11889 ;;		_start
 11890 ;;		_backwards
 11891 ;; This function uses a non-reentrant model
 11892 ;;
 11893                           
 11894                           	psect	text49
 11895  003B2E                     __ptext49:
 11896                           	opt callstack 0
 11897  003B2E                     _I2C_Master_Start:
 11898                           	opt callstack 25
 11899                           
 11900                           ;I2C.c: 56:     I2C_Master_Wait();
 11901                           
 11902                           ;incstack = 0
 11903  003B2E  EC74  F01D         	call	_I2C_Master_Wait	;wreg free
 11904                           
 11905                           ;I2C.c: 57:     SSPCON2bits.SEN = 1;
 11906  003B32  80C5               	bsf	4037,0,c	;volatile
 11907  003B34  0012               	return		;funcret
 11908  003B36                     __end_of_I2C_Master_Start:
 11909                           	opt callstack 0
 11910                           
 11911 ;; *************** function _I2C_Master_Read *****************
 11912 ;; Defined at:
 11913 ;;		line 77 in file "I2C.c"
 11914 ;; Parameters:    Size  Location     Type
 11915 ;;  ackBit          1    wreg     unsigned char 
 11916 ;; Auto vars:     Size  Location     Type
 11917 ;;  ackBit          1    1[BANK0 ] unsigned char 
 11918 ;;  receivedByte    1    2[BANK0 ] unsigned char 
 11919 ;; Return value:  Size  Location     Type
 11920 ;;                  1    wreg      unsigned char 
 11921 ;; Registers used:
 11922 ;;		wreg, status,2, status,0, cstack
 11923 ;; Tracked objects:
 11924 ;;		On entry : 0/0
 11925 ;;		On exit  : 0/0
 11926 ;;		Unchanged: 0/0
 11927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11929 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11931 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11932 ;;Total ram usage:        2 bytes
 11933 ;; Hardware stack levels used:    1
 11934 ;; Hardware stack levels required when called:    4
 11935 ;; This function calls:
 11936 ;;		_I2C_Master_Wait
 11937 ;; This function is called by:
 11938 ;;		_ultrasonic_main
 11939 ;;		_UI_main
 11940 ;; This function uses a non-reentrant model
 11941 ;;
 11942                           
 11943                           	psect	text50
 11944  0039F0                     __ptext50:
 11945                           	opt callstack 0
 11946  0039F0                     _I2C_Master_Read:
 11947                           	opt callstack 25
 11948                           
 11949                           ;incstack = 0
 11950                           ;I2C_Master_Read@ackBit stored from wreg
 11951  0039F0  0100               	movlb	0	; () banked
 11952  0039F2  6F81               	movwf	I2C_Master_Read@ackBit& (0+255),b
 11953                           
 11954                           ;I2C.c: 78:     I2C_Master_Wait();
 11955  0039F4  EC74  F01D         	call	_I2C_Master_Wait	;wreg free
 11956                           
 11957                           ;I2C.c: 79:     SSPCON2bits.RCEN = 1;
 11958  0039F8  86C5               	bsf	4037,3,c	;volatile
 11959                           
 11960                           ;I2C.c: 81:     I2C_Master_Wait();
 11961  0039FA  EC74  F01D         	call	_I2C_Master_Wait	;wreg free
 11962                           
 11963                           ;I2C.c: 84:     unsigned char receivedByte = SSPBUF;
 11964  0039FE  CFC9 F082          	movff	4041,I2C_Master_Read@receivedByte	;volatile
 11965                           
 11966                           ;I2C.c: 86:     I2C_Master_Wait();
 11967  003A02  EC74  F01D         	call	_I2C_Master_Wait	;wreg free
 11968                           
 11969                           ;I2C.c: 87:     SSPCON2bits.ACKDT = ackBit;
 11970  003A06  0100               	movlb	0	; () banked
 11971  003A08  B181               	btfsc	I2C_Master_Read@ackBit& (0+255),0,b
 11972  003A0A  D002               	bra	u7515
 11973  003A0C  9AC5               	bcf	4037,5,c	;volatile
 11974  003A0E  D001               	bra	u7516
 11975  003A10                     u7515:
 11976  003A10  8AC5               	bsf	4037,5,c	;volatile
 11977  003A12                     u7516:
 11978                           
 11979                           ;I2C.c: 88:     SSPCON2bits.ACKEN = 1;
 11980  003A12  88C5               	bsf	4037,4,c	;volatile
 11981                           
 11982                           ;I2C.c: 90:     return receivedByte;
 11983  003A14  0100               	movlb	0	; () banked
 11984  003A16  5182               	movf	I2C_Master_Read@receivedByte& (0+255),w,b
 11985                           
 11986                           ; BSR set to: 0
 11987  003A18  0012               	return		;funcret
 11988  003A1A                     __end_of_I2C_Master_Read:
 11989                           	opt callstack 0
 11990                           
 11991 ;; *************** function _I2C_Master_Wait *****************
 11992 ;; Defined at:
 11993 ;;		line 21 in file "I2C.c"
 11994 ;; Parameters:    Size  Location     Type
 11995 ;;		None
 11996 ;; Auto vars:     Size  Location     Type
 11997 ;;		None
 11998 ;; Return value:  Size  Location     Type
 11999 ;;                  1    wreg      void 
 12000 ;; Registers used:
 12001 ;;		wreg, status,2, status,0
 12002 ;; Tracked objects:
 12003 ;;		On entry : 0/0
 12004 ;;		On exit  : 0/0
 12005 ;;		Unchanged: 0/0
 12006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12009 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12010 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12011 ;;Total ram usage:        1 bytes
 12012 ;; Hardware stack levels used:    1
 12013 ;; Hardware stack levels required when called:    3
 12014 ;; This function calls:
 12015 ;;		Nothing
 12016 ;; This function is called by:
 12017 ;;		_I2C_Master_Start
 12018 ;;		_I2C_Master_Stop
 12019 ;;		_I2C_Master_Write
 12020 ;;		_I2C_Master_Read
 12021 ;;		_I2C_Master_RepeatedStart
 12022 ;; This function uses a non-reentrant model
 12023 ;;
 12024                           
 12025                           	psect	text51
 12026  003AE8                     __ptext51:
 12027                           	opt callstack 0
 12028  003AE8                     _I2C_Master_Wait:
 12029                           	opt callstack 25
 12030                           
 12031                           ;I2C.c: 26:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F)){
 12032                           
 12033                           ;I2C.c: 28:     }
 12034                           
 12035                           ; BSR set to: 0
 12036                           ;incstack = 0
 12037  003AE8  B4C7               	btfsc	4039,2,c	;volatile
 12038  003AEA  D7FE               	goto	_I2C_Master_Wait
 12039  003AEC  CFC5 F080          	movff	4037,??_I2C_Master_Wait	;volatile
 12040  003AF0  0E1F               	movlw	31
 12041  003AF2  0100               	movlb	0	; () banked
 12042  003AF4  1780               	andwf	??_I2C_Master_Wait& (0+255),f,b
 12043  003AF6  B4D8               	btfsc	status,2,c
 12044  003AF8  0012               	return	
 12045  003AFA  D7F6               	goto	_I2C_Master_Wait
 12046  003AFC                     __end_of_I2C_Master_Wait:
 12047                           	opt callstack 0
 12048                           
 12049 ;; *************** function _I2C_Master_Init *****************
 12050 ;; Defined at:
 12051 ;;		line 32 in file "I2C.c"
 12052 ;; Parameters:    Size  Location     Type
 12053 ;;  clockFreq       4   13[BANK0 ] const unsigned long 
 12054 ;; Auto vars:     Size  Location     Type
 12055 ;;		None
 12056 ;; Return value:  Size  Location     Type
 12057 ;;                  1    wreg      void 
 12058 ;; Registers used:
 12059 ;;		wreg, status,2, status,0, cstack
 12060 ;; Tracked objects:
 12061 ;;		On entry : 0/0
 12062 ;;		On exit  : 0/0
 12063 ;;		Unchanged: 0/0
 12064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12065 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12067 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12068 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12069 ;;Total ram usage:        8 bytes
 12070 ;; Hardware stack levels used:    1
 12071 ;; Hardware stack levels required when called:    4
 12072 ;; This function calls:
 12073 ;;		___lldiv
 12074 ;; This function is called by:
 12075 ;;		_UI_main
 12076 ;;		_start
 12077 ;; This function uses a non-reentrant model
 12078 ;;
 12079                           
 12080                           	psect	text52
 12081  00352C                     __ptext52:
 12082                           	opt callstack 0
 12083  00352C                     _I2C_Master_Init:
 12084                           	opt callstack 25
 12085                           
 12086                           ;I2C.c: 34:     SSPCON1bits.SSPEN = 0;
 12087                           
 12088                           ; BSR set to: 0
 12089                           ;incstack = 0
 12090  00352C  9AC6               	bcf	4038,5,c	;volatile
 12091                           
 12092                           ;I2C.c: 37:     TRISCbits.TRISC3 = 1;
 12093  00352E  8694               	bsf	3988,3,c	;volatile
 12094                           
 12095                           ;I2C.c: 38:     TRISCbits.TRISC4 = 1;
 12096  003530  8894               	bsf	3988,4,c	;volatile
 12097                           
 12098                           ;I2C.c: 43:     SSPADD = (10000000 / (4 * clockFreq)) - 1;
 12099  003532  0E80               	movlw	128
 12100  003534  0100               	movlb	0	; () banked
 12101  003536  6F80               	movwf	___lldiv@dividend& (0+255),b
 12102  003538  0E96               	movlw	150
 12103  00353A  6F81               	movwf	(___lldiv@dividend+1)& (0+255),b
 12104  00353C  0E98               	movlw	152
 12105  00353E  6F82               	movwf	(___lldiv@dividend+2)& (0+255),b
 12106  003540  0E00               	movlw	0
 12107  003542  6F83               	movwf	(___lldiv@dividend+3)& (0+255),b
 12108  003544  C08D  F091         	movff	I2C_Master_Init@clockFreq,??_I2C_Master_Init
 12109  003548  C08E  F092         	movff	I2C_Master_Init@clockFreq+1,??_I2C_Master_Init+1
 12110  00354C  C08F  F093         	movff	I2C_Master_Init@clockFreq+2,??_I2C_Master_Init+2
 12111  003550  C090  F094         	movff	I2C_Master_Init@clockFreq+3,??_I2C_Master_Init+3
 12112  003554  0E02               	movlw	2
 12113  003556                     u7505:
 12114  003556  90D8               	bcf	status,0,c
 12115  003558  3791               	rlcf	??_I2C_Master_Init& (0+255),f,b
 12116  00355A  3792               	rlcf	(??_I2C_Master_Init+1)& (0+255),f,b
 12117  00355C  3793               	rlcf	(??_I2C_Master_Init+2)& (0+255),f,b
 12118  00355E  3794               	rlcf	(??_I2C_Master_Init+3)& (0+255),f,b
 12119  003560  2EE8               	decfsz	wreg,f,c
 12120  003562  D7F9               	goto	u7505
 12121  003564  C091  F084         	movff	??_I2C_Master_Init,___lldiv@divisor
 12122  003568  C092  F085         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
 12123  00356C  C093  F086         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
 12124  003570  C094  F087         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
 12125  003574  EC6F  F019         	call	___lldiv	;wreg free
 12126  003578  0100               	movlb	0	; () banked
 12127  00357A  0580               	decf	?___lldiv& (0+255),w,b
 12128  00357C  6EC8               	movwf	4040,c	;volatile
 12129                           
 12130                           ; BSR set to: 0
 12131                           ;I2C.c: 46:     SSPSTAT = 0b10000000;
 12132  00357E  0E80               	movlw	128
 12133  003580  6EC7               	movwf	4039,c	;volatile
 12134                           
 12135                           ; BSR set to: 0
 12136                           ;I2C.c: 49:     SSPCON1 = 0b00101000;
 12137  003582  0E28               	movlw	40
 12138  003584  6EC6               	movwf	4038,c	;volatile
 12139                           
 12140                           ; BSR set to: 0
 12141                           ;I2C.c: 52:     SSPCON2 = 0b00000000;
 12142  003586  0E00               	movlw	0
 12143  003588  6EC5               	movwf	4037,c	;volatile
 12144                           
 12145                           ; BSR set to: 0
 12146  00358A  0012               	return		;funcret
 12147  00358C                     __end_of_I2C_Master_Init:
 12148                           	opt callstack 0
 12149                           
 12150 ;; *************** function ___lldiv *****************
 12151 ;; Defined at:
 12152 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__lldiv.c"
 12153 ;; Parameters:    Size  Location     Type
 12154 ;;  dividend        4    0[BANK0 ] unsigned long 
 12155 ;;  divisor         4    4[BANK0 ] unsigned long 
 12156 ;; Auto vars:     Size  Location     Type
 12157 ;;  quotient        4    8[BANK0 ] unsigned long 
 12158 ;;  counter         1   12[BANK0 ] unsigned char 
 12159 ;; Return value:  Size  Location     Type
 12160 ;;                  4    0[BANK0 ] unsigned long 
 12161 ;; Registers used:
 12162 ;;		wreg, status,2, status,0
 12163 ;; Tracked objects:
 12164 ;;		On entry : 0/0
 12165 ;;		On exit  : 0/0
 12166 ;;		Unchanged: 0/0
 12167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12168 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12169 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12171 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12172 ;;Total ram usage:       13 bytes
 12173 ;; Hardware stack levels used:    1
 12174 ;; Hardware stack levels required when called:    3
 12175 ;; This function calls:
 12176 ;;		Nothing
 12177 ;; This function is called by:
 12178 ;;		_I2C_Master_Init
 12179 ;; This function uses a non-reentrant model
 12180 ;;
 12181                           
 12182                           	psect	text53
 12183  0032DE                     __ptext53:
 12184                           	opt callstack 0
 12185  0032DE                     ___lldiv:
 12186                           	opt callstack 25
 12187                           
 12188                           ; BSR set to: 0
 12189                           ;incstack = 0
 12190  0032DE  0E00               	movlw	0
 12191  0032E0  0100               	movlb	0	; () banked
 12192  0032E2  6F88               	movwf	___lldiv@quotient& (0+255),b
 12193  0032E4  0E00               	movlw	0
 12194  0032E6  6F89               	movwf	(___lldiv@quotient+1)& (0+255),b
 12195  0032E8  0E00               	movlw	0
 12196  0032EA  6F8A               	movwf	(___lldiv@quotient+2)& (0+255),b
 12197  0032EC  0E00               	movlw	0
 12198  0032EE  6F8B               	movwf	(___lldiv@quotient+3)& (0+255),b
 12199                           
 12200                           ; BSR set to: 0
 12201  0032F0  5184               	movf	___lldiv@divisor& (0+255),w,b
 12202  0032F2  1185               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 12203  0032F4  1186               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 12204  0032F6  1187               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 12205  0032F8  B4D8               	btfsc	status,2,c
 12206  0032FA  D02A               	goto	l714
 12207                           
 12208                           ; BSR set to: 0
 12209  0032FC  0E01               	movlw	1
 12210  0032FE  6F8C               	movwf	___lldiv@counter& (0+255),b
 12211  003300  D006               	goto	l6982
 12212  003302                     l6980:
 12213                           
 12214                           ; BSR set to: 0
 12215  003302  90D8               	bcf	status,0,c
 12216  003304  3784               	rlcf	___lldiv@divisor& (0+255),f,b
 12217  003306  3785               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 12218  003308  3786               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 12219  00330A  3787               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 12220  00330C  2B8C               	incf	___lldiv@counter& (0+255),f,b
 12221  00330E                     l6982:
 12222                           
 12223                           ; BSR set to: 0
 12224  00330E  AF87               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 12225  003310  D7F8               	goto	l6980
 12226  003312                     u7480:
 12227                           
 12228                           ; BSR set to: 0
 12229  003312  90D8               	bcf	status,0,c
 12230  003314  3788               	rlcf	___lldiv@quotient& (0+255),f,b
 12231  003316  3789               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 12232  003318  378A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 12233  00331A  378B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 12234                           
 12235                           ; BSR set to: 0
 12236  00331C  5184               	movf	___lldiv@divisor& (0+255),w,b
 12237  00331E  5D80               	subwf	___lldiv@dividend& (0+255),w,b
 12238  003320  5185               	movf	(___lldiv@divisor+1)& (0+255),w,b
 12239  003322  5981               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 12240  003324  5186               	movf	(___lldiv@divisor+2)& (0+255),w,b
 12241  003326  5982               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 12242  003328  5187               	movf	(___lldiv@divisor+3)& (0+255),w,b
 12243  00332A  5983               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 12244  00332C  A0D8               	btfss	status,0,c
 12245  00332E  D009               	goto	l6992
 12246                           
 12247                           ; BSR set to: 0
 12248  003330  5184               	movf	___lldiv@divisor& (0+255),w,b
 12249  003332  5F80               	subwf	___lldiv@dividend& (0+255),f,b
 12250  003334  5185               	movf	(___lldiv@divisor+1)& (0+255),w,b
 12251  003336  5B81               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 12252  003338  5186               	movf	(___lldiv@divisor+2)& (0+255),w,b
 12253  00333A  5B82               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 12254  00333C  5187               	movf	(___lldiv@divisor+3)& (0+255),w,b
 12255  00333E  5B83               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 12256                           
 12257                           ; BSR set to: 0
 12258  003340  8188               	bsf	___lldiv@quotient& (0+255),0,b
 12259  003342                     l6992:
 12260                           
 12261                           ; BSR set to: 0
 12262  003342  90D8               	bcf	status,0,c
 12263  003344  3387               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 12264  003346  3386               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 12265  003348  3385               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 12266  00334A  3384               	rrcf	___lldiv@divisor& (0+255),f,b
 12267                           
 12268                           ; BSR set to: 0
 12269  00334C  2F8C               	decfsz	___lldiv@counter& (0+255),f,b
 12270  00334E  D7E1               	goto	u7480
 12271  003350                     l714:
 12272                           
 12273                           ; BSR set to: 0
 12274  003350  C088  F080         	movff	___lldiv@quotient,?___lldiv
 12275  003354  C089  F081         	movff	___lldiv@quotient+1,?___lldiv+1
 12276  003358  C08A  F082         	movff	___lldiv@quotient+2,?___lldiv+2
 12277  00335C  C08B  F083         	movff	___lldiv@quotient+3,?___lldiv+3
 12278                           
 12279                           ; BSR set to: 0
 12280  003360  0012               	return		;funcret
 12281  003362                     __end_of___lldiv:
 12282                           	opt callstack 0
 12283                           
 12284 ;; *************** function _ISR *****************
 12285 ;; Defined at:
 12286 ;;		line 71 in file "main.c"
 12287 ;; Parameters:    Size  Location     Type
 12288 ;;		None
 12289 ;; Auto vars:     Size  Location     Type
 12290 ;;		None
 12291 ;; Return value:  Size  Location     Type
 12292 ;;                  1    wreg      void 
 12293 ;; Registers used:
 12294 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12295 ;; Tracked objects:
 12296 ;;		On entry : 0/0
 12297 ;;		On exit  : 0/0
 12298 ;;		Unchanged: 0/0
 12299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12302 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12303 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12304 ;;Total ram usage:        2 bytes
 12305 ;; Hardware stack levels used:    1
 12306 ;; Hardware stack levels required when called:    2
 12307 ;; This function calls:
 12308 ;;		_echo
 12309 ;; This function is called by:
 12310 ;;		Interrupt level 2
 12311 ;; This function uses a non-reentrant model
 12312 ;;
 12313                           
 12314                           	psect	intcode
 12315  000008                     __pintcode:
 12316                           	opt callstack 0
 12317  000008                     _ISR:
 12318                           	opt callstack 14
 12319                           
 12320                           ; BSR set to: 0
 12321                           ;incstack = 0
 12322  000008  826E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 12323  00000A  EDDE  F01B         	call	int_func,f	;refresh shadow registers
 12324                           
 12325                           	psect	intcode_body
 12326  0037BC                     __pintcode_body:
 12327                           	opt callstack 14
 12328  0037BC                     int_func:
 12329                           	opt callstack 14
 12330  0037BC  0006               	pop		; remove dummy address from shadow register refresh
 12331  0037BE  CFD9 F036          	movff	fsr2l,??_ISR
 12332  0037C2  CFDA F037          	movff	fsr2h,??_ISR+1
 12333                           
 12334                           ;main.c: 72:  if(RBIF == 1){
 12335  0037C6  A0F2               	btfss	4082,0,c	;volatile
 12336  0037C8  D012               	goto	i2l365
 12337                           
 12338                           ;main.c: 73:         if (sens){
 12339  0037CA  5058               	movf	_sens,w,c	;volatile
 12340  0037CC  1059               	iorwf	_sens+1,w,c	;volatile
 12341  0037CE  B4D8               	btfsc	status,2,c
 12342  0037D0  D005               	goto	i2l5950
 12343                           
 12344                           ;main.c: 74:             RBIE = 0;
 12345  0037D2  96F2               	bcf	4082,3,c	;volatile
 12346                           
 12347                           ;main.c: 75:             echo();
 12348  0037D4  EC13  F004         	call	_echo	;wreg free
 12349                           
 12350                           ;main.c: 76:             RBIF = 0;
 12351  0037D8  90F2               	bcf	4082,0,c	;volatile
 12352                           
 12353                           ;main.c: 77:             RBIE = 1;
 12354  0037DA  86F2               	bsf	4082,3,c	;volatile
 12355  0037DC                     i2l5950:
 12356                           
 12357                           ;main.c: 79:         if (~sens){
 12358  0037DC  2858               	incf	_sens,w,c	;volatile
 12359  0037DE  E103               	bnz	i2u617_40
 12360  0037E0  2859               	incf	_sens+1,w,c	;volatile
 12361  0037E2  B4D8               	btfsc	status,2,c
 12362  0037E4  D004               	goto	i2l365
 12363  0037E6                     i2u617_40:
 12364                           
 12365                           ;main.c: 80:             key_was_pressed = 1;
 12366  0037E6  0E01               	movlw	1
 12367  0037E8  0101               	movlb	1	; () banked
 12368  0037EA  6F77               	movwf	_key_was_pressed& (0+255),b	;volatile
 12369                           
 12370                           ; BSR set to: 1
 12371                           ;main.c: 81:             INT1IF = 0;
 12372  0037EC  90F0               	bcf	4080,0,c	;volatile
 12373  0037EE                     i2l365:
 12374  0037EE  C037  FFDA         	movff	??_ISR+1,fsr2h
 12375  0037F2  C036  FFD9         	movff	??_ISR,fsr2l
 12376  0037F6  926E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 12377  0037F8  0011               	retfie		f
 12378  0037FA                     __end_of_ISR:
 12379                           	opt callstack 0
 12380                           
 12381 ;; *************** function _echo *****************
 12382 ;; Defined at:
 12383 ;;		line 99 in file "main.c"
 12384 ;; Parameters:    Size  Location     Type
 12385 ;;		None
 12386 ;; Auto vars:     Size  Location     Type
 12387 ;;		None
 12388 ;; Return value:  Size  Location     Type
 12389 ;;                  1    wreg      void 
 12390 ;; Registers used:
 12391 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12392 ;; Tracked objects:
 12393 ;;		On entry : 0/0
 12394 ;;		On exit  : 0/0
 12395 ;;		Unchanged: 0/0
 12396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12399 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12400 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12401 ;;Total ram usage:        4 bytes
 12402 ;; Hardware stack levels used:    1
 12403 ;; Hardware stack levels required when called:    1
 12404 ;; This function calls:
 12405 ;;		___fldiv
 12406 ;;		___fltol
 12407 ;;		___xxtofl
 12408 ;;		i2___awdiv
 12409 ;; This function is called by:
 12410 ;;		_ISR
 12411 ;; This function uses a non-reentrant model
 12412 ;;
 12413                           
 12414                           	psect	text55
 12415  000826                     __ptext55:
 12416                           	opt callstack 0
 12417  000826                     _echo:
 12418                           	opt callstack 14
 12419                           
 12420                           ;main.c: 100:     if (b==1){
 12421                           
 12422                           ;incstack = 0
 12423  000826  045A               	decf	_b,w,c
 12424  000828  105B               	iorwf	_b+1,w,c
 12425  00082A  A4D8               	btfss	status,2,c
 12426  00082C  D0A2               	goto	i2l5392
 12427                           
 12428                           ;main.c: 101:         if (RB7 == 1){
 12429  00082E  BE81               	btfsc	3969,7,c	;volatile
 12430                           
 12431                           ;main.c: 102:             TMR1ON = 1;
 12432  000830  80CD               	bsf	4045,0,c	;volatile
 12433                           
 12434                           ;main.c: 104:         if (RB7 == 0){
 12435                           
 12436                           ;main.c: 103:         }
 12437  000832  BE81               	btfsc	3969,7,c	;volatile
 12438  000834  D037               	goto	i2l5368
 12439                           
 12440                           ;main.c: 105:             TMR1ON = 0;
 12441  000836  90CD               	bcf	4045,0,c	;volatile
 12442                           
 12443                           ;main.c: 106:             a[0] = (TMR1L | (TMR1H<<8))/58.82;
 12444  000838  0EAE               	movlw	174
 12445  00083A  6E13               	movwf	___fldiv@a,c
 12446  00083C  0E47               	movlw	71
 12447  00083E  6E14               	movwf	___fldiv@a+1,c
 12448  000840  0E6B               	movlw	107
 12449  000842  6E15               	movwf	___fldiv@a+2,c
 12450  000844  0E42               	movlw	66
 12451  000846  6E16               	movwf	___fldiv@a+3,c
 12452  000848  50CF               	movf	4047,w,c	;volatile
 12453  00084A  6E33               	movwf	(??_echo+1)& (0+255),c
 12454  00084C  6A32               	clrf	??_echo& (0+255),c
 12455  00084E  50CE               	movf	4046,w,c	;volatile
 12456  000850  6E34               	movwf	(??_echo+2)& (0+255),c
 12457  000852  6A35               	clrf	(??_echo+3)& (0+255),c
 12458  000854  5032               	movf	??_echo,w,c
 12459  000856  1234               	iorwf	??_echo+2,f,c
 12460  000858  5033               	movf	??_echo+1,w,c
 12461  00085A  1235               	iorwf	??_echo+3,f,c
 12462  00085C  C034  F001         	movff	??_echo+2,___xxtofl@val
 12463  000860  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 12464  000864  0E00               	movlw	0
 12465  000866  BE02               	btfsc	___xxtofl@val+1,7,c
 12466  000868  0EFF               	movlw	-1
 12467  00086A  6E03               	movwf	___xxtofl@val+2,c
 12468  00086C  6E04               	movwf	___xxtofl@val+3,c
 12469  00086E  0E01               	movlw	1
 12470  000870  EC98  F014         	call	___xxtofl
 12471  000874  C001  F00F         	movff	?___xxtofl,___fldiv@b
 12472  000878  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 12473  00087C  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 12474  000880  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 12475  000884  ECB0  F00C         	call	___fldiv	;wreg free
 12476  000888  C00F  F028         	movff	?___fldiv,___fltol@f1
 12477  00088C  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 12478  000890  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 12479  000894  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 12480  000898  ECED  F017         	call	___fltol	;wreg free
 12481  00089C  C028  F061         	movff	?___fltol,_a
 12482  0008A0  C029  F062         	movff	?___fltol+1,_a+1
 12483  0008A4                     i2l5368:
 12484                           
 12485                           ;main.c: 110:         if (a[0]>=2 && a[0]<=200){
 12486  0008A4  BE62               	btfsc	_a+1,7,c
 12487  0008A6  D065               	goto	i2l5392
 12488  0008A8  5062               	movf	_a+1,w,c
 12489  0008AA  E104               	bnz	i2u529_40
 12490  0008AC  0E02               	movlw	2
 12491  0008AE  5C61               	subwf	_a,w,c
 12492  0008B0  A0D8               	btfss	status,0,c
 12493  0008B2  D05F               	goto	i2l5392
 12494  0008B4                     i2u529_40:
 12495  0008B4  BE62               	btfsc	_a+1,7,c
 12496  0008B6  D006               	goto	i2u530_40
 12497  0008B8  5062               	movf	_a+1,w,c
 12498  0008BA  E15B               	bnz	i2l5392
 12499  0008BC  0EC9               	movlw	201
 12500  0008BE  5C61               	subwf	_a,w,c
 12501  0008C0  B0D8               	btfsc	status,0,c
 12502  0008C2  D057               	goto	i2l5392
 12503  0008C4                     i2u530_40:
 12504                           
 12505                           ;main.c: 111:             if ((~sumf[0])&&(dist_final[0][0]!=0)&&(dist_final[0][1]!=0)&&
      +                          (dist_final[0][2]!=0)){
 12506  0008C4  0440               	decf	_sumf,w,c
 12507  0008C6  B4D8               	btfsc	status,2,c
 12508  0008C8  D01B               	goto	i2l5384
 12509  0008CA  0102               	movlb	2	; () banked
 12510  0008CC  5150               	movf	_dist_final& (0+255),w,b
 12511  0008CE  1151               	iorwf	(_dist_final+1)& (0+255),w,b
 12512  0008D0  B4D8               	btfsc	status,2,c
 12513  0008D2  D016               	goto	i2l5384
 12514                           
 12515                           ; BSR set to: 2
 12516  0008D4  5152               	movf	(_dist_final+2)& (0+255),w,b
 12517  0008D6  1153               	iorwf	(_dist_final+3)& (0+255),w,b
 12518  0008D8  B4D8               	btfsc	status,2,c
 12519  0008DA  D012               	goto	i2l5384
 12520                           
 12521                           ; BSR set to: 2
 12522  0008DC  5154               	movf	(_dist_final+4)& (0+255),w,b
 12523  0008DE  1155               	iorwf	(_dist_final+5)& (0+255),w,b
 12524  0008E0  B4D8               	btfsc	status,2,c
 12525  0008E2  D00E               	goto	i2l5384
 12526                           
 12527                           ; BSR set to: 2
 12528                           ;main.c: 112:                 sum[0] = (dist_final[0][0]+dist_final[0][1]+dist_final[0][
      +                          2]);
 12529  0008E4  5154               	movf	(_dist_final+4)& (0+255),w,b
 12530  0008E6  2552               	addwf	(_dist_final+2)& (0+255),w,b
 12531  0008E8  6E32               	movwf	??_echo& (0+255),c
 12532  0008EA  5155               	movf	(_dist_final+5)& (0+255),w,b
 12533  0008EC  2153               	addwfc	(_dist_final+3)& (0+255),w,b
 12534  0008EE  6E33               	movwf	(??_echo+1)& (0+255),c
 12535  0008F0  5150               	movf	_dist_final& (0+255),w,b
 12536  0008F2  2432               	addwf	??_echo,w,c
 12537  0008F4  6E38               	movwf	_sum,c
 12538  0008F6  5151               	movf	(_dist_final+1)& (0+255),w,b
 12539  0008F8  2033               	addwfc	??_echo+1,w,c
 12540  0008FA  6E39               	movwf	_sum+1,c
 12541                           
 12542                           ; BSR set to: 2
 12543                           ;main.c: 113:                 sumf[0] = 1;
 12544  0008FC  0E01               	movlw	1
 12545  0008FE  6E40               	movwf	_sumf,c
 12546  000900                     i2l5384:
 12547                           
 12548                           ;main.c: 115:             if (sumf[0]){
 12549  000900  5040               	movf	_sumf,w,c
 12550  000902  B4D8               	btfsc	status,2,c
 12551  000904  D029               	goto	i2l5390
 12552                           
 12553                           ;main.c: 116:                 sum[0] = sum[0] - dist_final[0][meas] + a[0];
 12554  000906  90D8               	bcf	status,0,c
 12555  000908  3450               	rlcf	_meas,w,c	;volatile
 12556  00090A  6ED9               	movwf	fsr2l,c
 12557  00090C  3451               	rlcf	_meas+1,w,c	;volatile
 12558  00090E  6EDA               	movwf	fsr2h,c
 12559  000910  0E50               	movlw	low _dist_final
 12560  000912  26D9               	addwf	fsr2l,f,c
 12561  000914  0E02               	movlw	high _dist_final
 12562  000916  22DA               	addwfc	fsr2h,f,c
 12563  000918  CFDE F032          	movff	postinc2,??_echo
 12564  00091C  CFDD F033          	movff	postdec2,??_echo+1
 12565  000920  C038  F034         	movff	_sum,??_echo+2
 12566  000924  C039  F035         	movff	_sum+1,??_echo+3
 12567  000928  5032               	movf	??_echo,w,c
 12568  00092A  5E34               	subwf	??_echo+2,f,c
 12569  00092C  5033               	movf	??_echo+1,w,c
 12570  00092E  5A35               	subwfb	??_echo+3,f,c
 12571  000930  5061               	movf	_a,w,c
 12572  000932  2434               	addwf	??_echo+2,w,c
 12573  000934  6E38               	movwf	_sum,c
 12574  000936  5062               	movf	_a+1,w,c
 12575  000938  2035               	addwfc	??_echo+3,w,c
 12576  00093A  6E39               	movwf	_sum+1,c
 12577                           
 12578                           ;main.c: 117:                 dist_final[0][5] = (sum[0]/5);
 12579  00093C  C038  F001         	movff	_sum,i2___awdiv@dividend
 12580  000940  C039  F002         	movff	_sum+1,i2___awdiv@dividend+1
 12581  000944  0E00               	movlw	0
 12582  000946  6E04               	movwf	i2___awdiv@divisor+1,c
 12583  000948  0E05               	movlw	5
 12584  00094A  6E03               	movwf	i2___awdiv@divisor,c
 12585  00094C  ECB1  F019         	call	i2___awdiv	;wreg free
 12586  000950  C001  F25A         	movff	?i2___awdiv,_dist_final+10
 12587  000954  C002  F25B         	movff	?i2___awdiv+1,_dist_final+11
 12588  000958                     i2l5390:
 12589                           
 12590                           ;main.c: 119:             dist_final[0][meas] = a[0];
 12591  000958  90D8               	bcf	status,0,c
 12592  00095A  3450               	rlcf	_meas,w,c	;volatile
 12593  00095C  6ED9               	movwf	fsr2l,c
 12594  00095E  3451               	rlcf	_meas+1,w,c	;volatile
 12595  000960  6EDA               	movwf	fsr2h,c
 12596  000962  0E50               	movlw	low _dist_final
 12597  000964  26D9               	addwf	fsr2l,f,c
 12598  000966  0E02               	movlw	high _dist_final
 12599  000968  22DA               	addwfc	fsr2h,f,c
 12600  00096A  C061  FFDE         	movff	_a,postinc2
 12601  00096E  C062  FFDD         	movff	_a+1,postdec2
 12602  000972                     i2l5392:
 12603                           
 12604                           ;main.c: 122:     if (b==2){
 12605  000972  0E02               	movlw	2
 12606  000974  185A               	xorwf	_b,w,c
 12607  000976  105B               	iorwf	_b+1,w,c
 12608  000978  A4D8               	btfss	status,2,c
 12609  00097A  D0A4               	goto	i2l5426
 12610                           
 12611                           ;main.c: 123:         if (RB6 == 1){
 12612  00097C  BC81               	btfsc	3969,6,c	;volatile
 12613                           
 12614                           ;main.c: 124:             TMR1ON = 1;
 12615  00097E  80CD               	bsf	4045,0,c	;volatile
 12616                           
 12617                           ;main.c: 126:         if (RB6 == 0){
 12618                           
 12619                           ;main.c: 125:         }
 12620  000980  BC81               	btfsc	3969,6,c	;volatile
 12621  000982  D037               	goto	i2l5402
 12622                           
 12623                           ;main.c: 127:             TMR1ON = 0;
 12624  000984  90CD               	bcf	4045,0,c	;volatile
 12625                           
 12626                           ;main.c: 128:             a[1] = (TMR1L | (TMR1H<<8))/58.82;
 12627  000986  0EAE               	movlw	174
 12628  000988  6E13               	movwf	___fldiv@a,c
 12629  00098A  0E47               	movlw	71
 12630  00098C  6E14               	movwf	___fldiv@a+1,c
 12631  00098E  0E6B               	movlw	107
 12632  000990  6E15               	movwf	___fldiv@a+2,c
 12633  000992  0E42               	movlw	66
 12634  000994  6E16               	movwf	___fldiv@a+3,c
 12635  000996  50CF               	movf	4047,w,c	;volatile
 12636  000998  6E33               	movwf	(??_echo+1)& (0+255),c
 12637  00099A  6A32               	clrf	??_echo& (0+255),c
 12638  00099C  50CE               	movf	4046,w,c	;volatile
 12639  00099E  6E34               	movwf	(??_echo+2)& (0+255),c
 12640  0009A0  6A35               	clrf	(??_echo+3)& (0+255),c
 12641  0009A2  5032               	movf	??_echo,w,c
 12642  0009A4  1234               	iorwf	??_echo+2,f,c
 12643  0009A6  5033               	movf	??_echo+1,w,c
 12644  0009A8  1235               	iorwf	??_echo+3,f,c
 12645  0009AA  C034  F001         	movff	??_echo+2,___xxtofl@val
 12646  0009AE  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 12647  0009B2  0E00               	movlw	0
 12648  0009B4  BE02               	btfsc	___xxtofl@val+1,7,c
 12649  0009B6  0EFF               	movlw	-1
 12650  0009B8  6E03               	movwf	___xxtofl@val+2,c
 12651  0009BA  6E04               	movwf	___xxtofl@val+3,c
 12652  0009BC  0E01               	movlw	1
 12653  0009BE  EC98  F014         	call	___xxtofl
 12654  0009C2  C001  F00F         	movff	?___xxtofl,___fldiv@b
 12655  0009C6  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 12656  0009CA  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 12657  0009CE  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 12658  0009D2  ECB0  F00C         	call	___fldiv	;wreg free
 12659  0009D6  C00F  F028         	movff	?___fldiv,___fltol@f1
 12660  0009DA  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 12661  0009DE  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 12662  0009E2  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 12663  0009E6  ECED  F017         	call	___fltol	;wreg free
 12664  0009EA  C028  F063         	movff	?___fltol,_a+2
 12665  0009EE  C029  F064         	movff	?___fltol+1,_a+3
 12666  0009F2                     i2l5402:
 12667                           
 12668                           ;main.c: 131:                 if (a[1]>=2 && a[1]<=200){
 12669  0009F2  BE64               	btfsc	_a+3,7,c
 12670  0009F4  D067               	goto	i2l5426
 12671  0009F6  5064               	movf	_a+3,w,c
 12672  0009F8  E104               	bnz	i2u539_40
 12673  0009FA  0E02               	movlw	2
 12674  0009FC  5C63               	subwf	_a+2,w,c
 12675  0009FE  A0D8               	btfss	status,0,c
 12676  000A00  D061               	goto	i2l5426
 12677  000A02                     i2u539_40:
 12678  000A02  BE64               	btfsc	_a+3,7,c
 12679  000A04  D006               	goto	i2u540_40
 12680  000A06  5064               	movf	_a+3,w,c
 12681  000A08  E15D               	bnz	i2l5426
 12682  000A0A  0EC9               	movlw	201
 12683  000A0C  5C63               	subwf	_a+2,w,c
 12684  000A0E  B0D8               	btfsc	status,0,c
 12685  000A10  D059               	goto	i2l5426
 12686  000A12                     i2u540_40:
 12687                           
 12688                           ;main.c: 133:                 if ((~sumf[1])&&(dist_final[1][0]!=0)&&(dist_final[1][1]!=
      +                          0)&&(dist_final[1][2]!=0)){
 12689  000A12  0441               	decf	_sumf+1,w,c
 12690  000A14  B4D8               	btfsc	status,2,c
 12691  000A16  D01B               	goto	i2l5418
 12692  000A18  0102               	movlb	2	; () banked
 12693  000A1A  515C               	movf	(_dist_final+12)& (0+255),w,b
 12694  000A1C  115D               	iorwf	(_dist_final+13)& (0+255),w,b
 12695  000A1E  B4D8               	btfsc	status,2,c
 12696  000A20  D016               	goto	i2l5418
 12697                           
 12698                           ; BSR set to: 2
 12699  000A22  515E               	movf	(_dist_final+14)& (0+255),w,b
 12700  000A24  115F               	iorwf	(_dist_final+15)& (0+255),w,b
 12701  000A26  B4D8               	btfsc	status,2,c
 12702  000A28  D012               	goto	i2l5418
 12703                           
 12704                           ; BSR set to: 2
 12705  000A2A  5160               	movf	(_dist_final+16)& (0+255),w,b
 12706  000A2C  1161               	iorwf	(_dist_final+17)& (0+255),w,b
 12707  000A2E  B4D8               	btfsc	status,2,c
 12708  000A30  D00E               	goto	i2l5418
 12709                           
 12710                           ; BSR set to: 2
 12711                           ;main.c: 134:             sum[1] = (dist_final[1][0]+dist_final[1][1]+dist_final[1][2]);
 12712  000A32  515E               	movf	(_dist_final+14)& (0+255),w,b
 12713  000A34  255C               	addwf	(_dist_final+12)& (0+255),w,b
 12714  000A36  6E32               	movwf	??_echo& (0+255),c
 12715  000A38  515F               	movf	(_dist_final+15)& (0+255),w,b
 12716  000A3A  215D               	addwfc	(_dist_final+13)& (0+255),w,b
 12717  000A3C  6E33               	movwf	(??_echo+1)& (0+255),c
 12718  000A3E  5160               	movf	(_dist_final+16)& (0+255),w,b
 12719  000A40  2432               	addwf	??_echo,w,c
 12720  000A42  6E3A               	movwf	_sum+2,c
 12721  000A44  5161               	movf	(_dist_final+17)& (0+255),w,b
 12722  000A46  2033               	addwfc	??_echo+1,w,c
 12723  000A48  6E3B               	movwf	_sum+3,c
 12724                           
 12725                           ; BSR set to: 2
 12726                           ;main.c: 135:             sumf[1] = 1;
 12727  000A4A  0E01               	movlw	1
 12728  000A4C  6E41               	movwf	_sumf+1,c
 12729  000A4E                     i2l5418:
 12730                           
 12731                           ;main.c: 137:         if (sumf[1]){
 12732  000A4E  5041               	movf	_sumf+1,w,c
 12733  000A50  B4D8               	btfsc	status,2,c
 12734  000A52  D02B               	goto	i2l5424
 12735                           
 12736                           ;main.c: 138:             sum[1] = sum[1] - dist_final[1][meas] + a[1];
 12737  000A54  90D8               	bcf	status,0,c
 12738  000A56  3450               	rlcf	_meas,w,c	;volatile
 12739  000A58  6ED9               	movwf	fsr2l,c
 12740  000A5A  3451               	rlcf	_meas+1,w,c	;volatile
 12741  000A5C  6EDA               	movwf	fsr2h,c
 12742  000A5E  0E5C               	movlw	low (_dist_final+12)
 12743  000A60  26D9               	addwf	fsr2l,f,c
 12744  000A62  0E02               	movlw	high (_dist_final+12)
 12745  000A64  22DA               	addwfc	fsr2h,f,c
 12746  000A66  CFDE F032          	movff	postinc2,??_echo
 12747  000A6A  CFDD F033          	movff	postdec2,??_echo+1
 12748  000A6E  EE20  F03A         	lfsr	2,_sum+2
 12749  000A72  CFDE F034          	movff	postinc2,??_echo+2
 12750  000A76  CFDD F035          	movff	postdec2,??_echo+3
 12751  000A7A  5032               	movf	??_echo,w,c
 12752  000A7C  5E34               	subwf	??_echo+2,f,c
 12753  000A7E  5033               	movf	??_echo+1,w,c
 12754  000A80  5A35               	subwfb	??_echo+3,f,c
 12755  000A82  5063               	movf	_a+2,w,c
 12756  000A84  2434               	addwf	??_echo+2,w,c
 12757  000A86  6E3A               	movwf	_sum+2,c
 12758  000A88  5064               	movf	_a+3,w,c
 12759  000A8A  2035               	addwfc	??_echo+3,w,c
 12760  000A8C  6E3B               	movwf	_sum+3,c
 12761                           
 12762                           ;main.c: 139:             dist_final[1][5] = (sum[1]/5);
 12763  000A8E  C03A  F001         	movff	_sum+2,i2___awdiv@dividend
 12764  000A92  C03B  F002         	movff	_sum+3,i2___awdiv@dividend+1
 12765  000A96  0E00               	movlw	0
 12766  000A98  6E04               	movwf	i2___awdiv@divisor+1,c
 12767  000A9A  0E05               	movlw	5
 12768  000A9C  6E03               	movwf	i2___awdiv@divisor,c
 12769  000A9E  ECB1  F019         	call	i2___awdiv	;wreg free
 12770  000AA2  C001  F266         	movff	?i2___awdiv,_dist_final+22
 12771  000AA6  C002  F267         	movff	?i2___awdiv+1,_dist_final+23
 12772  000AAA                     i2l5424:
 12773                           
 12774                           ;main.c: 141:         dist_final[1][meas] = a[1];
 12775  000AAA  90D8               	bcf	status,0,c
 12776  000AAC  3450               	rlcf	_meas,w,c	;volatile
 12777  000AAE  6ED9               	movwf	fsr2l,c
 12778  000AB0  3451               	rlcf	_meas+1,w,c	;volatile
 12779  000AB2  6EDA               	movwf	fsr2h,c
 12780  000AB4  0E5C               	movlw	low (_dist_final+12)
 12781  000AB6  26D9               	addwf	fsr2l,f,c
 12782  000AB8  0E02               	movlw	high (_dist_final+12)
 12783  000ABA  22DA               	addwfc	fsr2h,f,c
 12784  000ABC  C063  FFDE         	movff	_a+2,postinc2
 12785  000AC0  C064  FFDD         	movff	_a+3,postdec2
 12786  000AC4                     i2l5426:
 12787                           
 12788                           ;main.c: 144:     if (b==3){
 12789  000AC4  0E03               	movlw	3
 12790  000AC6  185A               	xorwf	_b,w,c
 12791  000AC8  105B               	iorwf	_b+1,w,c
 12792  000ACA  A4D8               	btfss	status,2,c
 12793  000ACC  D0A4               	goto	i2l5460
 12794                           
 12795                           ;main.c: 145:         if (RB5 == 1){
 12796  000ACE  BA81               	btfsc	3969,5,c	;volatile
 12797                           
 12798                           ;main.c: 146:             TMR1ON = 1;
 12799  000AD0  80CD               	bsf	4045,0,c	;volatile
 12800                           
 12801                           ;main.c: 148:         if (RB5 == 0){
 12802                           
 12803                           ;main.c: 147:         }
 12804  000AD2  BA81               	btfsc	3969,5,c	;volatile
 12805  000AD4  D037               	goto	i2l5436
 12806                           
 12807                           ;main.c: 149:             TMR1ON = 0;
 12808  000AD6  90CD               	bcf	4045,0,c	;volatile
 12809                           
 12810                           ;main.c: 150:             a[2] = (TMR1L | (TMR1H<<8))/58.82;
 12811  000AD8  0EAE               	movlw	174
 12812  000ADA  6E13               	movwf	___fldiv@a,c
 12813  000ADC  0E47               	movlw	71
 12814  000ADE  6E14               	movwf	___fldiv@a+1,c
 12815  000AE0  0E6B               	movlw	107
 12816  000AE2  6E15               	movwf	___fldiv@a+2,c
 12817  000AE4  0E42               	movlw	66
 12818  000AE6  6E16               	movwf	___fldiv@a+3,c
 12819  000AE8  50CF               	movf	4047,w,c	;volatile
 12820  000AEA  6E33               	movwf	(??_echo+1)& (0+255),c
 12821  000AEC  6A32               	clrf	??_echo& (0+255),c
 12822  000AEE  50CE               	movf	4046,w,c	;volatile
 12823  000AF0  6E34               	movwf	(??_echo+2)& (0+255),c
 12824  000AF2  6A35               	clrf	(??_echo+3)& (0+255),c
 12825  000AF4  5032               	movf	??_echo,w,c
 12826  000AF6  1234               	iorwf	??_echo+2,f,c
 12827  000AF8  5033               	movf	??_echo+1,w,c
 12828  000AFA  1235               	iorwf	??_echo+3,f,c
 12829  000AFC  C034  F001         	movff	??_echo+2,___xxtofl@val
 12830  000B00  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 12831  000B04  0E00               	movlw	0
 12832  000B06  BE02               	btfsc	___xxtofl@val+1,7,c
 12833  000B08  0EFF               	movlw	-1
 12834  000B0A  6E03               	movwf	___xxtofl@val+2,c
 12835  000B0C  6E04               	movwf	___xxtofl@val+3,c
 12836  000B0E  0E01               	movlw	1
 12837  000B10  EC98  F014         	call	___xxtofl
 12838  000B14  C001  F00F         	movff	?___xxtofl,___fldiv@b
 12839  000B18  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 12840  000B1C  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 12841  000B20  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 12842  000B24  ECB0  F00C         	call	___fldiv	;wreg free
 12843  000B28  C00F  F028         	movff	?___fldiv,___fltol@f1
 12844  000B2C  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 12845  000B30  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 12846  000B34  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 12847  000B38  ECED  F017         	call	___fltol	;wreg free
 12848  000B3C  C028  F065         	movff	?___fltol,_a+4
 12849  000B40  C029  F066         	movff	?___fltol+1,_a+5
 12850  000B44                     i2l5436:
 12851                           
 12852                           ;main.c: 153:                 if (a[2]>=2 && a[2]<=200){
 12853  000B44  BE66               	btfsc	_a+5,7,c
 12854  000B46  D067               	goto	i2l5460
 12855  000B48  5066               	movf	_a+5,w,c
 12856  000B4A  E104               	bnz	i2u549_40
 12857  000B4C  0E02               	movlw	2
 12858  000B4E  5C65               	subwf	_a+4,w,c
 12859  000B50  A0D8               	btfss	status,0,c
 12860  000B52  D061               	goto	i2l5460
 12861  000B54                     i2u549_40:
 12862  000B54  BE66               	btfsc	_a+5,7,c
 12863  000B56  D006               	goto	i2u550_40
 12864  000B58  5066               	movf	_a+5,w,c
 12865  000B5A  E15D               	bnz	i2l5460
 12866  000B5C  0EC9               	movlw	201
 12867  000B5E  5C65               	subwf	_a+4,w,c
 12868  000B60  B0D8               	btfsc	status,0,c
 12869  000B62  D059               	goto	i2l5460
 12870  000B64                     i2u550_40:
 12871                           
 12872                           ;main.c: 155:                 if ((~sumf[2])&&(dist_final[2][0]!=0)&&(dist_final[2][1]!=
      +                          0)&&(dist_final[2][2]!=0)){
 12873  000B64  0442               	decf	_sumf+2,w,c
 12874  000B66  B4D8               	btfsc	status,2,c
 12875  000B68  D01B               	goto	i2l5452
 12876  000B6A  0102               	movlb	2	; () banked
 12877  000B6C  5168               	movf	(_dist_final+24)& (0+255),w,b
 12878  000B6E  1169               	iorwf	(_dist_final+25)& (0+255),w,b
 12879  000B70  B4D8               	btfsc	status,2,c
 12880  000B72  D016               	goto	i2l5452
 12881                           
 12882                           ; BSR set to: 2
 12883  000B74  516A               	movf	(_dist_final+26)& (0+255),w,b
 12884  000B76  116B               	iorwf	(_dist_final+27)& (0+255),w,b
 12885  000B78  B4D8               	btfsc	status,2,c
 12886  000B7A  D012               	goto	i2l5452
 12887                           
 12888                           ; BSR set to: 2
 12889  000B7C  516C               	movf	(_dist_final+28)& (0+255),w,b
 12890  000B7E  116D               	iorwf	(_dist_final+29)& (0+255),w,b
 12891  000B80  B4D8               	btfsc	status,2,c
 12892  000B82  D00E               	goto	i2l5452
 12893                           
 12894                           ; BSR set to: 2
 12895                           ;main.c: 156:             sum[2] = (dist_final[2][0]+dist_final[2][1]+dist_final[2][2]);
 12896  000B84  516A               	movf	(_dist_final+26)& (0+255),w,b
 12897  000B86  2568               	addwf	(_dist_final+24)& (0+255),w,b
 12898  000B88  6E32               	movwf	??_echo& (0+255),c
 12899  000B8A  516B               	movf	(_dist_final+27)& (0+255),w,b
 12900  000B8C  2169               	addwfc	(_dist_final+25)& (0+255),w,b
 12901  000B8E  6E33               	movwf	(??_echo+1)& (0+255),c
 12902  000B90  516C               	movf	(_dist_final+28)& (0+255),w,b
 12903  000B92  2432               	addwf	??_echo,w,c
 12904  000B94  6E3C               	movwf	_sum+4,c
 12905  000B96  516D               	movf	(_dist_final+29)& (0+255),w,b
 12906  000B98  2033               	addwfc	??_echo+1,w,c
 12907  000B9A  6E3D               	movwf	_sum+5,c
 12908                           
 12909                           ; BSR set to: 2
 12910                           ;main.c: 157:             sumf[2] = 1;
 12911  000B9C  0E01               	movlw	1
 12912  000B9E  6E42               	movwf	_sumf+2,c
 12913  000BA0                     i2l5452:
 12914                           
 12915                           ;main.c: 159:         if (sumf[2]){
 12916  000BA0  5042               	movf	_sumf+2,w,c
 12917  000BA2  B4D8               	btfsc	status,2,c
 12918  000BA4  D02B               	goto	i2l5458
 12919                           
 12920                           ;main.c: 160:             sum[2] = sum[2] - dist_final[2][meas] + a[2];
 12921  000BA6  90D8               	bcf	status,0,c
 12922  000BA8  3450               	rlcf	_meas,w,c	;volatile
 12923  000BAA  6ED9               	movwf	fsr2l,c
 12924  000BAC  3451               	rlcf	_meas+1,w,c	;volatile
 12925  000BAE  6EDA               	movwf	fsr2h,c
 12926  000BB0  0E68               	movlw	low (_dist_final+24)
 12927  000BB2  26D9               	addwf	fsr2l,f,c
 12928  000BB4  0E02               	movlw	high (_dist_final+24)
 12929  000BB6  22DA               	addwfc	fsr2h,f,c
 12930  000BB8  CFDE F032          	movff	postinc2,??_echo
 12931  000BBC  CFDD F033          	movff	postdec2,??_echo+1
 12932  000BC0  EE20  F03C         	lfsr	2,_sum+4
 12933  000BC4  CFDE F034          	movff	postinc2,??_echo+2
 12934  000BC8  CFDD F035          	movff	postdec2,??_echo+3
 12935  000BCC  5032               	movf	??_echo,w,c
 12936  000BCE  5E34               	subwf	??_echo+2,f,c
 12937  000BD0  5033               	movf	??_echo+1,w,c
 12938  000BD2  5A35               	subwfb	??_echo+3,f,c
 12939  000BD4  5065               	movf	_a+4,w,c
 12940  000BD6  2434               	addwf	??_echo+2,w,c
 12941  000BD8  6E3C               	movwf	_sum+4,c
 12942  000BDA  5066               	movf	_a+5,w,c
 12943  000BDC  2035               	addwfc	??_echo+3,w,c
 12944  000BDE  6E3D               	movwf	_sum+5,c
 12945                           
 12946                           ;main.c: 161:             dist_final[2][5] = (sum[2]/5);
 12947  000BE0  C03C  F001         	movff	_sum+4,i2___awdiv@dividend
 12948  000BE4  C03D  F002         	movff	_sum+5,i2___awdiv@dividend+1
 12949  000BE8  0E00               	movlw	0
 12950  000BEA  6E04               	movwf	i2___awdiv@divisor+1,c
 12951  000BEC  0E05               	movlw	5
 12952  000BEE  6E03               	movwf	i2___awdiv@divisor,c
 12953  000BF0  ECB1  F019         	call	i2___awdiv	;wreg free
 12954  000BF4  C001  F272         	movff	?i2___awdiv,_dist_final+34
 12955  000BF8  C002  F273         	movff	?i2___awdiv+1,_dist_final+35
 12956  000BFC                     i2l5458:
 12957                           
 12958                           ;main.c: 163:         dist_final[2][meas] = a[2];
 12959  000BFC  90D8               	bcf	status,0,c
 12960  000BFE  3450               	rlcf	_meas,w,c	;volatile
 12961  000C00  6ED9               	movwf	fsr2l,c
 12962  000C02  3451               	rlcf	_meas+1,w,c	;volatile
 12963  000C04  6EDA               	movwf	fsr2h,c
 12964  000C06  0E68               	movlw	low (_dist_final+24)
 12965  000C08  26D9               	addwf	fsr2l,f,c
 12966  000C0A  0E02               	movlw	high (_dist_final+24)
 12967  000C0C  22DA               	addwfc	fsr2h,f,c
 12968  000C0E  C065  FFDE         	movff	_a+4,postinc2
 12969  000C12  C066  FFDD         	movff	_a+5,postdec2
 12970  000C16                     i2l5460:
 12971                           
 12972                           ;main.c: 166:     if (b==4){
 12973  000C16  0E04               	movlw	4
 12974  000C18  185A               	xorwf	_b,w,c
 12975  000C1A  105B               	iorwf	_b+1,w,c
 12976  000C1C  A4D8               	btfss	status,2,c
 12977  000C1E  0012               	return	
 12978                           
 12979                           ;main.c: 167:         if (RB4 == 1){
 12980  000C20  B881               	btfsc	3969,4,c	;volatile
 12981                           
 12982                           ;main.c: 168:             TMR1ON = 1;
 12983  000C22  80CD               	bsf	4045,0,c	;volatile
 12984                           
 12985                           ;main.c: 170:         if (RB4 == 0){
 12986                           
 12987                           ;main.c: 169:         }
 12988  000C24  B881               	btfsc	3969,4,c	;volatile
 12989  000C26  D037               	goto	i2l5470
 12990                           
 12991                           ;main.c: 171:             TMR1ON = 0;
 12992  000C28  90CD               	bcf	4045,0,c	;volatile
 12993                           
 12994                           ;main.c: 172:             a[3] = (TMR1L | (TMR1H<<8))/58.82;
 12995  000C2A  0EAE               	movlw	174
 12996  000C2C  6E13               	movwf	___fldiv@a,c
 12997  000C2E  0E47               	movlw	71
 12998  000C30  6E14               	movwf	___fldiv@a+1,c
 12999  000C32  0E6B               	movlw	107
 13000  000C34  6E15               	movwf	___fldiv@a+2,c
 13001  000C36  0E42               	movlw	66
 13002  000C38  6E16               	movwf	___fldiv@a+3,c
 13003  000C3A  50CF               	movf	4047,w,c	;volatile
 13004  000C3C  6E33               	movwf	(??_echo+1)& (0+255),c
 13005  000C3E  6A32               	clrf	??_echo& (0+255),c
 13006  000C40  50CE               	movf	4046,w,c	;volatile
 13007  000C42  6E34               	movwf	(??_echo+2)& (0+255),c
 13008  000C44  6A35               	clrf	(??_echo+3)& (0+255),c
 13009  000C46  5032               	movf	??_echo,w,c
 13010  000C48  1234               	iorwf	??_echo+2,f,c
 13011  000C4A  5033               	movf	??_echo+1,w,c
 13012  000C4C  1235               	iorwf	??_echo+3,f,c
 13013  000C4E  C034  F001         	movff	??_echo+2,___xxtofl@val
 13014  000C52  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 13015  000C56  0E00               	movlw	0
 13016  000C58  BE02               	btfsc	___xxtofl@val+1,7,c
 13017  000C5A  0EFF               	movlw	-1
 13018  000C5C  6E03               	movwf	___xxtofl@val+2,c
 13019  000C5E  6E04               	movwf	___xxtofl@val+3,c
 13020  000C60  0E01               	movlw	1
 13021  000C62  EC98  F014         	call	___xxtofl
 13022  000C66  C001  F00F         	movff	?___xxtofl,___fldiv@b
 13023  000C6A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 13024  000C6E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 13025  000C72  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 13026  000C76  ECB0  F00C         	call	___fldiv	;wreg free
 13027  000C7A  C00F  F028         	movff	?___fldiv,___fltol@f1
 13028  000C7E  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 13029  000C82  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 13030  000C86  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 13031  000C8A  ECED  F017         	call	___fltol	;wreg free
 13032  000C8E  C028  F067         	movff	?___fltol,_a+6
 13033  000C92  C029  F068         	movff	?___fltol+1,_a+7
 13034  000C96                     i2l5470:
 13035                           
 13036                           ;main.c: 175:                 if (a[3]>=2 && a[3]<=200){
 13037  000C96  BE68               	btfsc	_a+7,7,c
 13038  000C98  0012               	return	
 13039  000C9A  5068               	movf	_a+7,w,c
 13040  000C9C  E104               	bnz	i2u559_40
 13041  000C9E  0E02               	movlw	2
 13042  000CA0  5C67               	subwf	_a+6,w,c
 13043  000CA2  A0D8               	btfss	status,0,c
 13044  000CA4  0012               	return	
 13045  000CA6                     i2u559_40:
 13046  000CA6  BE68               	btfsc	_a+7,7,c
 13047  000CA8  D006               	goto	i2u560_40
 13048  000CAA  5068               	movf	_a+7,w,c
 13049  000CAC  E15D               	bnz	i2l392
 13050  000CAE  0EC9               	movlw	201
 13051  000CB0  5C67               	subwf	_a+6,w,c
 13052  000CB2  B0D8               	btfsc	status,0,c
 13053  000CB4  0012               	return	
 13054  000CB6                     i2u560_40:
 13055                           
 13056                           ;main.c: 177:                 if ((~sumf[3])&&(dist_final[3][0]!=0)&&(dist_final[3][1]!=
      +                          0)&&(dist_final[3][2]!=0)){
 13057  000CB6  0443               	decf	_sumf+3,w,c
 13058  000CB8  B4D8               	btfsc	status,2,c
 13059  000CBA  D01B               	goto	i2l5486
 13060  000CBC  0102               	movlb	2	; () banked
 13061  000CBE  5174               	movf	(_dist_final+36)& (0+255),w,b
 13062  000CC0  1175               	iorwf	(_dist_final+37)& (0+255),w,b
 13063  000CC2  B4D8               	btfsc	status,2,c
 13064  000CC4  D016               	goto	i2l5486
 13065                           
 13066                           ; BSR set to: 2
 13067  000CC6  5176               	movf	(_dist_final+38)& (0+255),w,b
 13068  000CC8  1177               	iorwf	(_dist_final+39)& (0+255),w,b
 13069  000CCA  B4D8               	btfsc	status,2,c
 13070  000CCC  D012               	goto	i2l5486
 13071                           
 13072                           ; BSR set to: 2
 13073  000CCE  5178               	movf	(_dist_final+40)& (0+255),w,b
 13074  000CD0  1179               	iorwf	(_dist_final+41)& (0+255),w,b
 13075  000CD2  B4D8               	btfsc	status,2,c
 13076  000CD4  D00E               	goto	i2l5486
 13077                           
 13078                           ; BSR set to: 2
 13079                           ;main.c: 178:             sum[3] = (dist_final[3][0]+dist_final[3][1]+dist_final[3][2]);
 13080  000CD6  5176               	movf	(_dist_final+38)& (0+255),w,b
 13081  000CD8  2574               	addwf	(_dist_final+36)& (0+255),w,b
 13082  000CDA  6E32               	movwf	??_echo& (0+255),c
 13083  000CDC  5177               	movf	(_dist_final+39)& (0+255),w,b
 13084  000CDE  2175               	addwfc	(_dist_final+37)& (0+255),w,b
 13085  000CE0  6E33               	movwf	(??_echo+1)& (0+255),c
 13086  000CE2  5178               	movf	(_dist_final+40)& (0+255),w,b
 13087  000CE4  2432               	addwf	??_echo,w,c
 13088  000CE6  6E3E               	movwf	_sum+6,c
 13089  000CE8  5179               	movf	(_dist_final+41)& (0+255),w,b
 13090  000CEA  2033               	addwfc	??_echo+1,w,c
 13091  000CEC  6E3F               	movwf	_sum+7,c
 13092                           
 13093                           ; BSR set to: 2
 13094                           ;main.c: 179:             sumf[3] = 1;
 13095  000CEE  0E01               	movlw	1
 13096  000CF0  6E43               	movwf	_sumf+3,c
 13097  000CF2                     i2l5486:
 13098                           
 13099                           ;main.c: 181:         if (sumf[3]){
 13100  000CF2  5043               	movf	_sumf+3,w,c
 13101  000CF4  B4D8               	btfsc	status,2,c
 13102  000CF6  D02B               	goto	i2l5492
 13103                           
 13104                           ;main.c: 182:             sum[3] = sum[3] - dist_final[3][meas] + a[3];
 13105  000CF8  90D8               	bcf	status,0,c
 13106  000CFA  3450               	rlcf	_meas,w,c	;volatile
 13107  000CFC  6ED9               	movwf	fsr2l,c
 13108  000CFE  3451               	rlcf	_meas+1,w,c	;volatile
 13109  000D00  6EDA               	movwf	fsr2h,c
 13110  000D02  0E74               	movlw	low (_dist_final+36)
 13111  000D04  26D9               	addwf	fsr2l,f,c
 13112  000D06  0E02               	movlw	high (_dist_final+36)
 13113  000D08  22DA               	addwfc	fsr2h,f,c
 13114  000D0A  CFDE F032          	movff	postinc2,??_echo
 13115  000D0E  CFDD F033          	movff	postdec2,??_echo+1
 13116  000D12  EE20  F03E         	lfsr	2,_sum+6
 13117  000D16  CFDE F034          	movff	postinc2,??_echo+2
 13118  000D1A  CFDD F035          	movff	postdec2,??_echo+3
 13119  000D1E  5032               	movf	??_echo,w,c
 13120  000D20  5E34               	subwf	??_echo+2,f,c
 13121  000D22  5033               	movf	??_echo+1,w,c
 13122  000D24  5A35               	subwfb	??_echo+3,f,c
 13123  000D26  5067               	movf	_a+6,w,c
 13124  000D28  2434               	addwf	??_echo+2,w,c
 13125  000D2A  6E3E               	movwf	_sum+6,c
 13126  000D2C  5068               	movf	_a+7,w,c
 13127  000D2E  2035               	addwfc	??_echo+3,w,c
 13128  000D30  6E3F               	movwf	_sum+7,c
 13129                           
 13130                           ;main.c: 183:             dist_final[3][5] = (sum[3]/5);
 13131  000D32  C03E  F001         	movff	_sum+6,i2___awdiv@dividend
 13132  000D36  C03F  F002         	movff	_sum+7,i2___awdiv@dividend+1
 13133  000D3A  0E00               	movlw	0
 13134  000D3C  6E04               	movwf	i2___awdiv@divisor+1,c
 13135  000D3E  0E05               	movlw	5
 13136  000D40  6E03               	movwf	i2___awdiv@divisor,c
 13137  000D42  ECB1  F019         	call	i2___awdiv	;wreg free
 13138  000D46  C001  F27E         	movff	?i2___awdiv,_dist_final+46
 13139  000D4A  C002  F27F         	movff	?i2___awdiv+1,_dist_final+47
 13140  000D4E                     i2l5492:
 13141                           
 13142                           ;main.c: 185:         dist_final[3][meas] = a[3];
 13143  000D4E  90D8               	bcf	status,0,c
 13144  000D50  3450               	rlcf	_meas,w,c	;volatile
 13145  000D52  6ED9               	movwf	fsr2l,c
 13146  000D54  3451               	rlcf	_meas+1,w,c	;volatile
 13147  000D56  6EDA               	movwf	fsr2h,c
 13148  000D58  0E74               	movlw	low (_dist_final+36)
 13149  000D5A  26D9               	addwf	fsr2l,f,c
 13150  000D5C  0E02               	movlw	high (_dist_final+36)
 13151  000D5E  22DA               	addwfc	fsr2h,f,c
 13152  000D60  C067  FFDE         	movff	_a+6,postinc2
 13153  000D64  C068  FFDD         	movff	_a+7,postdec2
 13154  000D68                     i2l392:
 13155  000D68  0012               	return		;funcret
 13156  000D6A                     __end_of_echo:
 13157                           	opt callstack 0
 13158                           
 13159 ;; *************** function i2___awdiv *****************
 13160 ;; Defined at:
 13161 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
 13162 ;; Parameters:    Size  Location     Type
 13163 ;;  dividend        2    0[COMRAM] int 
 13164 ;;  divisor         2    2[COMRAM] int 
 13165 ;; Auto vars:     Size  Location     Type
 13166 ;;  __awdiv         2    6[COMRAM] int 
 13167 ;;  __awdiv         1    5[COMRAM] unsigned char 
 13168 ;;  __awdiv         1    4[COMRAM] unsigned char 
 13169 ;; Return value:  Size  Location     Type
 13170 ;;                  2    0[COMRAM] int 
 13171 ;; Registers used:
 13172 ;;		wreg, status,2, status,0
 13173 ;; Tracked objects:
 13174 ;;		On entry : 0/0
 13175 ;;		On exit  : 0/0
 13176 ;;		Unchanged: 0/0
 13177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13178 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13179 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13181 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13182 ;;Total ram usage:        8 bytes
 13183 ;; Hardware stack levels used:    1
 13184 ;; This function calls:
 13185 ;;		Nothing
 13186 ;; This function is called by:
 13187 ;;		_echo
 13188 ;; This function uses a non-reentrant model
 13189 ;;
 13190                           
 13191                           	psect	text56
 13192  003362                     __ptext56:
 13193                           	opt callstack 0
 13194  003362                     i2___awdiv:
 13195                           	opt callstack 14
 13196                           
 13197                           ;incstack = 0
 13198  003362  0E00               	movlw	0
 13199  003364  6E06               	movwf	i2___awdiv@sign,c
 13200  003366  AE04               	btfss	i2___awdiv@divisor+1,7,c
 13201  003368  D006               	goto	i2l5228
 13202  00336A  6C03               	negf	i2___awdiv@divisor,c
 13203  00336C  1E04               	comf	i2___awdiv@divisor+1,f,c
 13204  00336E  B0D8               	btfsc	status,0,c
 13205  003370  2A04               	incf	i2___awdiv@divisor+1,f,c
 13206  003372  0E01               	movlw	1
 13207  003374  6E06               	movwf	i2___awdiv@sign,c
 13208  003376                     i2l5228:
 13209  003376  AE02               	btfss	i2___awdiv@dividend+1,7,c
 13210  003378  D006               	goto	i2l5234
 13211  00337A  6C01               	negf	i2___awdiv@dividend,c
 13212  00337C  1E02               	comf	i2___awdiv@dividend+1,f,c
 13213  00337E  B0D8               	btfsc	status,0,c
 13214  003380  2A02               	incf	i2___awdiv@dividend+1,f,c
 13215  003382  0E01               	movlw	1
 13216  003384  1A06               	xorwf	i2___awdiv@sign,f,c
 13217  003386                     i2l5234:
 13218  003386  0E00               	movlw	0
 13219  003388  6E08               	movwf	i2___awdiv@quotient+1,c
 13220  00338A  0E00               	movlw	0
 13221  00338C  6E07               	movwf	i2___awdiv@quotient,c
 13222  00338E  5003               	movf	i2___awdiv@divisor,w,c
 13223  003390  1004               	iorwf	i2___awdiv@divisor+1,w,c
 13224  003392  B4D8               	btfsc	status,2,c
 13225  003394  D01C               	goto	i2l5256
 13226  003396  0E01               	movlw	1
 13227  003398  6E05               	movwf	i2___awdiv@counter,c
 13228  00339A  D004               	goto	i2l5242
 13229  00339C                     i2l5240:
 13230  00339C  90D8               	bcf	status,0,c
 13231  00339E  3603               	rlcf	i2___awdiv@divisor,f,c
 13232  0033A0  3604               	rlcf	i2___awdiv@divisor+1,f,c
 13233  0033A2  2A05               	incf	i2___awdiv@counter,f,c
 13234  0033A4                     i2l5242:
 13235  0033A4  AE04               	btfss	i2___awdiv@divisor+1,7,c
 13236  0033A6  D7FA               	goto	i2l5240
 13237  0033A8                     i2u521_40:
 13238  0033A8  90D8               	bcf	status,0,c
 13239  0033AA  3607               	rlcf	i2___awdiv@quotient,f,c
 13240  0033AC  3608               	rlcf	i2___awdiv@quotient+1,f,c
 13241  0033AE  5003               	movf	i2___awdiv@divisor,w,c
 13242  0033B0  5C01               	subwf	i2___awdiv@dividend,w,c
 13243  0033B2  5004               	movf	i2___awdiv@divisor+1,w,c
 13244  0033B4  5802               	subwfb	i2___awdiv@dividend+1,w,c
 13245  0033B6  A0D8               	btfss	status,0,c
 13246  0033B8  D005               	goto	i2l5252
 13247  0033BA  5003               	movf	i2___awdiv@divisor,w,c
 13248  0033BC  5E01               	subwf	i2___awdiv@dividend,f,c
 13249  0033BE  5004               	movf	i2___awdiv@divisor+1,w,c
 13250  0033C0  5A02               	subwfb	i2___awdiv@dividend+1,f,c
 13251  0033C2  8007               	bsf	i2___awdiv@quotient,0,c
 13252  0033C4                     i2l5252:
 13253  0033C4  90D8               	bcf	status,0,c
 13254  0033C6  3204               	rrcf	i2___awdiv@divisor+1,f,c
 13255  0033C8  3203               	rrcf	i2___awdiv@divisor,f,c
 13256  0033CA  2E05               	decfsz	i2___awdiv@counter,f,c
 13257  0033CC  D7ED               	goto	i2u521_40
 13258  0033CE                     i2l5256:
 13259  0033CE  5006               	movf	i2___awdiv@sign,w,c
 13260  0033D0  B4D8               	btfsc	status,2,c
 13261  0033D2  D004               	goto	i2l5260
 13262  0033D4  6C07               	negf	i2___awdiv@quotient,c
 13263  0033D6  1E08               	comf	i2___awdiv@quotient+1,f,c
 13264  0033D8  B0D8               	btfsc	status,0,c
 13265  0033DA  2A08               	incf	i2___awdiv@quotient+1,f,c
 13266  0033DC                     i2l5260:
 13267  0033DC  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
 13268  0033E0  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 13269  0033E4  0012               	return		;funcret
 13270  0033E6                     __end_ofi2___awdiv:
 13271                           	opt callstack 0
 13272                           
 13273 ;; *************** function ___xxtofl *****************
 13274 ;; Defined at:
 13275 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 13276 ;; Parameters:    Size  Location     Type
 13277 ;;  sign            1    wreg     unsigned char 
 13278 ;;  val             4    0[COMRAM] long 
 13279 ;; Auto vars:     Size  Location     Type
 13280 ;;  sign            1    8[COMRAM] unsigned char 
 13281 ;;  arg             4   10[COMRAM] unsigned long 
 13282 ;;  exp             1    9[COMRAM] unsigned char 
 13283 ;; Return value:  Size  Location     Type
 13284 ;;                  4    0[COMRAM] unsigned char 
 13285 ;; Registers used:
 13286 ;;		wreg, status,2, status,0
 13287 ;; Tracked objects:
 13288 ;;		On entry : 0/0
 13289 ;;		On exit  : 0/0
 13290 ;;		Unchanged: 0/0
 13291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13292 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13293 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13294 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13295 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13296 ;;Total ram usage:       14 bytes
 13297 ;; Hardware stack levels used:    1
 13298 ;; This function calls:
 13299 ;;		Nothing
 13300 ;; This function is called by:
 13301 ;;		_echo
 13302 ;; This function uses a non-reentrant model
 13303 ;;
 13304                           
 13305                           	psect	text57
 13306  002930                     __ptext57:
 13307                           	opt callstack 0
 13308  002930                     ___xxtofl:
 13309                           	opt callstack 14
 13310                           
 13311                           ;incstack = 0
 13312                           ;___xxtofl@sign stored from wreg
 13313  002930  6E09               	movwf	___xxtofl@sign,c
 13314  002932  5009               	movf	___xxtofl@sign,w,c
 13315  002934  A4D8               	btfss	status,2,c
 13316  002936  AE04               	btfss	___xxtofl@val+3,7,c
 13317  002938  D01A               	goto	i2l1342
 13318  00293A  C001  F005         	movff	___xxtofl@val,??___xxtofl
 13319  00293E  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 13320  002942  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 13321  002946  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 13322  00294A  1E05               	comf	??___xxtofl,f,c
 13323  00294C  1E06               	comf	??___xxtofl+1,f,c
 13324  00294E  1E07               	comf	??___xxtofl+2,f,c
 13325  002950  1E08               	comf	??___xxtofl+3,f,c
 13326  002952  2A05               	incf	??___xxtofl,f,c
 13327  002954  0E00               	movlw	0
 13328  002956  2206               	addwfc	??___xxtofl+1,f,c
 13329  002958  2207               	addwfc	??___xxtofl+2,f,c
 13330  00295A  2208               	addwfc	??___xxtofl+3,f,c
 13331  00295C  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 13332  002960  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 13333  002964  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 13334  002968  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 13335  00296C  D008               	goto	i2l5180
 13336  00296E                     i2l1342:
 13337  00296E  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 13338  002972  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 13339  002976  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 13340  00297A  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 13341  00297E                     i2l5180:
 13342  00297E  5001               	movf	___xxtofl@val,w,c
 13343  002980  1002               	iorwf	___xxtofl@val+1,w,c
 13344  002982  1003               	iorwf	___xxtofl@val+2,w,c
 13345  002984  1004               	iorwf	___xxtofl@val+3,w,c
 13346  002986  A4D8               	btfss	status,2,c
 13347  002988  D009               	goto	i2l5186
 13348  00298A  0E00               	movlw	0
 13349  00298C  6E01               	movwf	?___xxtofl,c
 13350  00298E  0E00               	movlw	0
 13351  002990  6E02               	movwf	?___xxtofl+1,c
 13352  002992  0E00               	movlw	0
 13353  002994  6E03               	movwf	?___xxtofl+2,c
 13354  002996  0E00               	movlw	0
 13355  002998  6E04               	movwf	?___xxtofl+3,c
 13356  00299A  0012               	return	
 13357  00299C                     i2l5186:
 13358  00299C  0E96               	movlw	150
 13359  00299E  6E0A               	movwf	___xxtofl@exp,c
 13360  0029A0  D006               	goto	i2l5190
 13361  0029A2                     i2l5188:
 13362  0029A2  2A0A               	incf	___xxtofl@exp,f,c
 13363  0029A4  90D8               	bcf	status,0,c
 13364  0029A6  320E               	rrcf	___xxtofl@arg+3,f,c
 13365  0029A8  320D               	rrcf	___xxtofl@arg+2,f,c
 13366  0029AA  320C               	rrcf	___xxtofl@arg+1,f,c
 13367  0029AC  320B               	rrcf	___xxtofl@arg,f,c
 13368  0029AE                     i2l5190:
 13369  0029AE  0E00               	movlw	0
 13370  0029B0  140B               	andwf	___xxtofl@arg,w,c
 13371  0029B2  6E05               	movwf	??___xxtofl& (0+255),c
 13372  0029B4  0E00               	movlw	0
 13373  0029B6  140C               	andwf	___xxtofl@arg+1,w,c
 13374  0029B8  6E06               	movwf	(??___xxtofl+1)& (0+255),c
 13375  0029BA  0E00               	movlw	0
 13376  0029BC  140D               	andwf	___xxtofl@arg+2,w,c
 13377  0029BE  6E07               	movwf	(??___xxtofl+2)& (0+255),c
 13378  0029C0  0EFE               	movlw	254
 13379  0029C2  140E               	andwf	___xxtofl@arg+3,w,c
 13380  0029C4  6E08               	movwf	(??___xxtofl+3)& (0+255),c
 13381  0029C6  5005               	movf	??___xxtofl,w,c
 13382  0029C8  1006               	iorwf	??___xxtofl+1,w,c
 13383  0029CA  1007               	iorwf	??___xxtofl+2,w,c
 13384  0029CC  1008               	iorwf	??___xxtofl+3,w,c
 13385  0029CE  B4D8               	btfsc	status,2,c
 13386  0029D0  D00D               	goto	i2l1349
 13387  0029D2  D7E7               	goto	i2l5188
 13388  0029D4                     i2l5192:
 13389  0029D4  2A0A               	incf	___xxtofl@exp,f,c
 13390  0029D6  0E01               	movlw	1
 13391  0029D8  260B               	addwf	___xxtofl@arg,f,c
 13392  0029DA  0E00               	movlw	0
 13393  0029DC  220C               	addwfc	___xxtofl@arg+1,f,c
 13394  0029DE  220D               	addwfc	___xxtofl@arg+2,f,c
 13395  0029E0  220E               	addwfc	___xxtofl@arg+3,f,c
 13396  0029E2  90D8               	bcf	status,0,c
 13397  0029E4  320E               	rrcf	___xxtofl@arg+3,f,c
 13398  0029E6  320D               	rrcf	___xxtofl@arg+2,f,c
 13399  0029E8  320C               	rrcf	___xxtofl@arg+1,f,c
 13400  0029EA  320B               	rrcf	___xxtofl@arg,f,c
 13401  0029EC                     i2l1349:
 13402  0029EC  0E00               	movlw	0
 13403  0029EE  140B               	andwf	___xxtofl@arg,w,c
 13404  0029F0  6E05               	movwf	??___xxtofl& (0+255),c
 13405  0029F2  0E00               	movlw	0
 13406  0029F4  140C               	andwf	___xxtofl@arg+1,w,c
 13407  0029F6  6E06               	movwf	(??___xxtofl+1)& (0+255),c
 13408  0029F8  0E00               	movlw	0
 13409  0029FA  140D               	andwf	___xxtofl@arg+2,w,c
 13410  0029FC  6E07               	movwf	(??___xxtofl+2)& (0+255),c
 13411  0029FE  0EFF               	movlw	255
 13412  002A00  140E               	andwf	___xxtofl@arg+3,w,c
 13413  002A02  6E08               	movwf	(??___xxtofl+3)& (0+255),c
 13414  002A04  5005               	movf	??___xxtofl,w,c
 13415  002A06  1006               	iorwf	??___xxtofl+1,w,c
 13416  002A08  1007               	iorwf	??___xxtofl+2,w,c
 13417  002A0A  1008               	iorwf	??___xxtofl+3,w,c
 13418  002A0C  B4D8               	btfsc	status,2,c
 13419  002A0E  D007               	goto	i2l5200
 13420  002A10  D7E1               	goto	i2l5192
 13421  002A12                     i2l5198:
 13422  002A12  060A               	decf	___xxtofl@exp,f,c
 13423  002A14  90D8               	bcf	status,0,c
 13424  002A16  360B               	rlcf	___xxtofl@arg,f,c
 13425  002A18  360C               	rlcf	___xxtofl@arg+1,f,c
 13426  002A1A  360D               	rlcf	___xxtofl@arg+2,f,c
 13427  002A1C  360E               	rlcf	___xxtofl@arg+3,f,c
 13428  002A1E                     i2l5200:
 13429  002A1E  BE0D               	btfsc	___xxtofl@arg+2,7,c
 13430  002A20  D003               	goto	i2u514_40
 13431  002A22  0E02               	movlw	2
 13432  002A24  600A               	cpfslt	___xxtofl@exp,c
 13433  002A26  D7F5               	goto	i2l5198
 13434  002A28                     i2u514_40:
 13435  002A28  A00A               	btfss	___xxtofl@exp,0,c
 13436  002A2A  9E0D               	bcf	___xxtofl@arg+2,7,c
 13437  002A2C  90D8               	bcf	status,0,c
 13438  002A2E  320A               	rrcf	___xxtofl@exp,f,c
 13439  002A30  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 13440  002A34  6A06               	clrf	(??___xxtofl+1)& (0+255),c
 13441  002A36  6A07               	clrf	(??___xxtofl+2)& (0+255),c
 13442  002A38  6A08               	clrf	(??___xxtofl+3)& (0+255),c
 13443  002A3A  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 13444  002A3E  6A07               	clrf	??___xxtofl+2,c
 13445  002A40  6A06               	clrf	??___xxtofl+1,c
 13446  002A42  6A05               	clrf	??___xxtofl,c
 13447  002A44  5005               	movf	??___xxtofl,w,c
 13448  002A46  120B               	iorwf	___xxtofl@arg,f,c
 13449  002A48  5006               	movf	??___xxtofl+1,w,c
 13450  002A4A  120C               	iorwf	___xxtofl@arg+1,f,c
 13451  002A4C  5007               	movf	??___xxtofl+2,w,c
 13452  002A4E  120D               	iorwf	___xxtofl@arg+2,f,c
 13453  002A50  5008               	movf	??___xxtofl+3,w,c
 13454  002A52  120E               	iorwf	___xxtofl@arg+3,f,c
 13455  002A54  5009               	movf	___xxtofl@sign,w,c
 13456  002A56  A4D8               	btfss	status,2,c
 13457  002A58  AE04               	btfss	___xxtofl@val+3,7,c
 13458  002A5A  D001               	goto	i2l5216
 13459  002A5C  8E0E               	bsf	___xxtofl@arg+3,7,c
 13460  002A5E                     i2l5216:
 13461  002A5E  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 13462  002A62  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 13463  002A66  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 13464  002A6A  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 13465  002A6E  0012               	return		;funcret
 13466  002A70                     __end_of___xxtofl:
 13467                           	opt callstack 0
 13468                           
 13469 ;; *************** function ___fltol *****************
 13470 ;; Defined at:
 13471 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 13472 ;; Parameters:    Size  Location     Type
 13473 ;;  f1              4   39[COMRAM] unsigned char 
 13474 ;; Auto vars:     Size  Location     Type
 13475 ;;  exp1            1   48[COMRAM] unsigned char 
 13476 ;;  sign1           1   47[COMRAM] unsigned char 
 13477 ;; Return value:  Size  Location     Type
 13478 ;;                  4   39[COMRAM] long 
 13479 ;; Registers used:
 13480 ;;		wreg, status,2, status,0
 13481 ;; Tracked objects:
 13482 ;;		On entry : 0/0
 13483 ;;		On exit  : 0/0
 13484 ;;		Unchanged: 0/0
 13485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13486 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13487 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13488 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13489 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13490 ;;Total ram usage:       10 bytes
 13491 ;; Hardware stack levels used:    1
 13492 ;; This function calls:
 13493 ;;		Nothing
 13494 ;; This function is called by:
 13495 ;;		_echo
 13496 ;; This function uses a non-reentrant model
 13497 ;;
 13498                           
 13499                           	psect	text58
 13500  002FDA                     __ptext58:
 13501                           	opt callstack 0
 13502  002FDA                     ___fltol:
 13503                           	opt callstack 14
 13504                           
 13505                           ;incstack = 0
 13506  002FDA  342A               	rlcf	___fltol@f1+2,w,c
 13507  002FDC  342B               	rlcf	___fltol@f1+3,w,c
 13508  002FDE  6E31               	movwf	___fltol@exp1,c
 13509  002FE0  5031               	movf	___fltol@exp1,w,c
 13510  002FE2  A4D8               	btfss	status,2,c
 13511  002FE4  D009               	goto	i2l5120
 13512  002FE6                     i2u498_40:
 13513  002FE6  0E00               	movlw	0
 13514  002FE8  6E28               	movwf	?___fltol,c
 13515  002FEA  0E00               	movlw	0
 13516  002FEC  6E29               	movwf	?___fltol+1,c
 13517  002FEE  0E00               	movlw	0
 13518  002FF0  6E2A               	movwf	?___fltol+2,c
 13519  002FF2  0E00               	movlw	0
 13520  002FF4  6E2B               	movwf	?___fltol+3,c
 13521  002FF6  0012               	return	
 13522  002FF8                     i2l5120:
 13523  002FF8  C028  F02C         	movff	___fltol@f1,??___fltol
 13524  002FFC  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
 13525  003000  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
 13526  003004  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
 13527  003008  0E20               	movlw	32
 13528  00300A  D005               	goto	i2u499_40
 13529  00300C                     i2u499_45:
 13530  00300C  90D8               	bcf	status,0,c
 13531  00300E  322F               	rrcf	??___fltol+3,f,c
 13532  003010  322E               	rrcf	??___fltol+2,f,c
 13533  003012  322D               	rrcf	??___fltol+1,f,c
 13534  003014  322C               	rrcf	??___fltol,f,c
 13535  003016                     i2u499_40:
 13536  003016  2EE8               	decfsz	wreg,f,c
 13537  003018  D7F9               	goto	i2u499_45
 13538  00301A  502C               	movf	??___fltol,w,c
 13539  00301C  6E30               	movwf	___fltol@sign1,c
 13540  00301E  8E2A               	bsf	___fltol@f1+2,7,c
 13541  003020  0EFF               	movlw	255
 13542  003022  1628               	andwf	___fltol@f1,f,c
 13543  003024  0EFF               	movlw	255
 13544  003026  1629               	andwf	___fltol@f1+1,f,c
 13545  003028  0EFF               	movlw	255
 13546  00302A  162A               	andwf	___fltol@f1+2,f,c
 13547  00302C  0E00               	movlw	0
 13548  00302E  162B               	andwf	___fltol@f1+3,f,c
 13549  003030  0E96               	movlw	150
 13550  003032  5E31               	subwf	___fltol@exp1,f,c
 13551  003034  AE31               	btfss	___fltol@exp1,7,c
 13552  003036  D00D               	goto	i2l5140
 13553  003038  5031               	movf	___fltol@exp1,w,c
 13554  00303A  0A80               	xorlw	128
 13555  00303C  0F97               	addlw	151
 13556  00303E  A0D8               	btfss	status,0,c
 13557  003040  D7D2               	goto	i2u498_40
 13558  003042                     i2l5136:
 13559  003042  90D8               	bcf	status,0,c
 13560  003044  322B               	rrcf	___fltol@f1+3,f,c
 13561  003046  322A               	rrcf	___fltol@f1+2,f,c
 13562  003048  3229               	rrcf	___fltol@f1+1,f,c
 13563  00304A  3228               	rrcf	___fltol@f1,f,c
 13564  00304C  3E31               	incfsz	___fltol@exp1,f,c
 13565  00304E  D7F9               	goto	i2l5136
 13566  003050  D00D               	goto	i2u503_40
 13567  003052                     i2l5140:
 13568  003052  0E1F               	movlw	31
 13569  003054  6431               	cpfsgt	___fltol@exp1,c
 13570  003056  D007               	goto	i2l5148
 13571  003058  D7C6               	goto	i2u498_40
 13572  00305A                     i2l5146:
 13573  00305A  90D8               	bcf	status,0,c
 13574  00305C  3628               	rlcf	___fltol@f1,f,c
 13575  00305E  3629               	rlcf	___fltol@f1+1,f,c
 13576  003060  362A               	rlcf	___fltol@f1+2,f,c
 13577  003062  362B               	rlcf	___fltol@f1+3,f,c
 13578  003064  0631               	decf	___fltol@exp1,f,c
 13579  003066                     i2l5148:
 13580  003066  5031               	movf	___fltol@exp1,w,c
 13581  003068  A4D8               	btfss	status,2,c
 13582  00306A  D7F7               	goto	i2l5146
 13583  00306C                     i2u503_40:
 13584  00306C  5030               	movf	___fltol@sign1,w,c
 13585  00306E  B4D8               	btfsc	status,2,c
 13586  003070  D008               	goto	i2l5154
 13587  003072  1E2B               	comf	___fltol@f1+3,f,c
 13588  003074  1E2A               	comf	___fltol@f1+2,f,c
 13589  003076  1E29               	comf	___fltol@f1+1,f,c
 13590  003078  6C28               	negf	___fltol@f1,c
 13591  00307A  0E00               	movlw	0
 13592  00307C  2229               	addwfc	___fltol@f1+1,f,c
 13593  00307E  222A               	addwfc	___fltol@f1+2,f,c
 13594  003080  222B               	addwfc	___fltol@f1+3,f,c
 13595  003082                     i2l5154:
 13596  003082  C028  F028         	movff	___fltol@f1,?___fltol
 13597  003086  C029  F029         	movff	___fltol@f1+1,?___fltol+1
 13598  00308A  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
 13599  00308E  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
 13600  003092  0012               	return		;funcret
 13601  003094                     __end_of___fltol:
 13602                           	opt callstack 0
 13603                           
 13604 ;; *************** function ___fldiv *****************
 13605 ;; Defined at:
 13606 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 13607 ;; Parameters:    Size  Location     Type
 13608 ;;  b               4   14[COMRAM] long 
 13609 ;;  a               4   18[COMRAM] long 
 13610 ;; Auto vars:     Size  Location     Type
 13611 ;;  grs             4   33[COMRAM] unsigned long 
 13612 ;;  rem             4   26[COMRAM] unsigned long 
 13613 ;;  new_exp         2   31[COMRAM] short 
 13614 ;;  aexp            1   38[COMRAM] unsigned char 
 13615 ;;  bexp            1   37[COMRAM] unsigned char 
 13616 ;;  sign            1   30[COMRAM] unsigned char 
 13617 ;; Return value:  Size  Location     Type
 13618 ;;                  4   14[COMRAM] unsigned char 
 13619 ;; Registers used:
 13620 ;;		wreg, status,2, status,0
 13621 ;; Tracked objects:
 13622 ;;		On entry : 0/0
 13623 ;;		On exit  : 0/0
 13624 ;;		Unchanged: 0/0
 13625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13626 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13627 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13628 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13629 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13630 ;;Total ram usage:       25 bytes
 13631 ;; Hardware stack levels used:    1
 13632 ;; This function calls:
 13633 ;;		Nothing
 13634 ;; This function is called by:
 13635 ;;		_echo
 13636 ;; This function uses a non-reentrant model
 13637 ;;
 13638                           
 13639                           	psect	text59
 13640  001960                     __ptext59:
 13641                           	opt callstack 0
 13642  001960                     ___fldiv:
 13643                           	opt callstack 14
 13644                           
 13645                           ;incstack = 0
 13646  001960  5012               	movf	___fldiv@b+3,w,c
 13647  001962  0B80               	andlw	128
 13648  001964  6E1F               	movwf	___fldiv@sign,c
 13649  001966  5012               	movf	___fldiv@b+3,w,c
 13650  001968  2412               	addwf	___fldiv@b+3,w,c
 13651  00196A  6E26               	movwf	___fldiv@bexp,c
 13652  00196C  BE11               	btfsc	___fldiv@b+2,7,c
 13653  00196E  8026               	bsf	___fldiv@bexp,0,c
 13654  001970  5026               	movf	___fldiv@bexp,w,c
 13655  001972  B4D8               	btfsc	status,2,c
 13656  001974  D00D               	goto	i2l4948
 13657  001976  2826               	incf	___fldiv@bexp,w,c
 13658  001978  A4D8               	btfss	status,2,c
 13659  00197A  D008               	goto	i2l4944
 13660  00197C  0E00               	movlw	0
 13661  00197E  6E0F               	movwf	___fldiv@b,c
 13662  001980  0E00               	movlw	0
 13663  001982  6E10               	movwf	___fldiv@b+1,c
 13664  001984  0E00               	movlw	0
 13665  001986  6E11               	movwf	___fldiv@b+2,c
 13666  001988  0E00               	movlw	0
 13667  00198A  6E12               	movwf	___fldiv@b+3,c
 13668  00198C                     i2l4944:
 13669  00198C  8E11               	bsf	___fldiv@b+2,7,c
 13670  00198E  D006               	goto	L6
 13671  001990                     i2l4948:
 13672  001990  0E00               	movlw	0
 13673  001992  6E0F               	movwf	___fldiv@b,c
 13674  001994  0E00               	movlw	0
 13675  001996  6E10               	movwf	___fldiv@b+1,c
 13676  001998  0E00               	movlw	0
 13677  00199A  6E11               	movwf	___fldiv@b+2,c
 13678  00199C                     L6:
 13679  00199C  0E00               	movlw	0
 13680  00199E  6E12               	movwf	___fldiv@b+3,c
 13681  0019A0  5016               	movf	___fldiv@a+3,w,c
 13682  0019A2  0B80               	andlw	128
 13683  0019A4  1A1F               	xorwf	___fldiv@sign,f,c
 13684  0019A6  5016               	movf	___fldiv@a+3,w,c
 13685  0019A8  2416               	addwf	___fldiv@a+3,w,c
 13686  0019AA  6E27               	movwf	___fldiv@aexp,c
 13687  0019AC  BE15               	btfsc	___fldiv@a+2,7,c
 13688  0019AE  8027               	bsf	___fldiv@aexp,0,c
 13689  0019B0  5027               	movf	___fldiv@aexp,w,c
 13690  0019B2  B4D8               	btfsc	status,2,c
 13691  0019B4  D00D               	goto	i2l4968
 13692  0019B6  2827               	incf	___fldiv@aexp,w,c
 13693  0019B8  A4D8               	btfss	status,2,c
 13694  0019BA  D008               	goto	i2l4964
 13695  0019BC  0E00               	movlw	0
 13696  0019BE  6E13               	movwf	___fldiv@a,c
 13697  0019C0  0E00               	movlw	0
 13698  0019C2  6E14               	movwf	___fldiv@a+1,c
 13699  0019C4  0E00               	movlw	0
 13700  0019C6  6E15               	movwf	___fldiv@a+2,c
 13701  0019C8  0E00               	movlw	0
 13702  0019CA  6E16               	movwf	___fldiv@a+3,c
 13703  0019CC                     i2l4964:
 13704  0019CC  8E15               	bsf	___fldiv@a+2,7,c
 13705  0019CE  D006               	goto	L7
 13706  0019D0                     i2l4968:
 13707  0019D0  0E00               	movlw	0
 13708  0019D2  6E13               	movwf	___fldiv@a,c
 13709  0019D4  0E00               	movlw	0
 13710  0019D6  6E14               	movwf	___fldiv@a+1,c
 13711  0019D8  0E00               	movlw	0
 13712  0019DA  6E15               	movwf	___fldiv@a+2,c
 13713  0019DC                     L7:
 13714  0019DC  0E00               	movlw	0
 13715  0019DE  6E16               	movwf	___fldiv@a+3,c
 13716  0019E0  5013               	movf	___fldiv@a,w,c
 13717  0019E2  1014               	iorwf	___fldiv@a+1,w,c
 13718  0019E4  1015               	iorwf	___fldiv@a+2,w,c
 13719  0019E6  1016               	iorwf	___fldiv@a+3,w,c
 13720  0019E8  A4D8               	btfss	status,2,c
 13721  0019EA  D017               	goto	i2l4982
 13722  0019EC  0E00               	movlw	0
 13723  0019EE  6E0F               	movwf	___fldiv@b,c
 13724  0019F0  0E00               	movlw	0
 13725  0019F2  6E10               	movwf	___fldiv@b+1,c
 13726  0019F4  0E00               	movlw	0
 13727  0019F6  6E11               	movwf	___fldiv@b+2,c
 13728  0019F8  0E00               	movlw	0
 13729  0019FA  6E12               	movwf	___fldiv@b+3,c
 13730  0019FC  0E80               	movlw	128
 13731  0019FE  1211               	iorwf	___fldiv@b+2,f,c
 13732  001A00  0E7F               	movlw	127
 13733  001A02  1212               	iorwf	___fldiv@b+3,f,c
 13734  001A04                     i2l4976:
 13735  001A04  501F               	movf	___fldiv@sign,w,c
 13736  001A06  1212               	iorwf	___fldiv@b+3,f,c
 13737  001A08  C00F  F00F         	movff	___fldiv@b,?___fldiv
 13738  001A0C  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
 13739  001A10  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
 13740  001A14  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
 13741  001A18  0012               	return	
 13742  001A1A                     i2l4982:
 13743  001A1A  5026               	movf	___fldiv@bexp,w,c
 13744  001A1C  A4D8               	btfss	status,2,c
 13745  001A1E  D009               	goto	i2l4990
 13746  001A20  0E00               	movlw	0
 13747  001A22  6E0F               	movwf	?___fldiv,c
 13748  001A24  0E00               	movlw	0
 13749  001A26  6E10               	movwf	?___fldiv+1,c
 13750  001A28  0E00               	movlw	0
 13751  001A2A  6E11               	movwf	?___fldiv+2,c
 13752  001A2C  0E00               	movlw	0
 13753  001A2E  6E12               	movwf	?___fldiv+3,c
 13754  001A30  0012               	return	
 13755  001A32                     i2l4990:
 13756  001A32  5027               	movf	___fldiv@aexp,w,c
 13757  001A34  C026  F017         	movff	___fldiv@bexp,??___fldiv
 13758  001A38  6A18               	clrf	(??___fldiv+1)& (0+255),c
 13759  001A3A  5E17               	subwf	??___fldiv,f,c
 13760  001A3C  0E00               	movlw	0
 13761  001A3E  5A18               	subwfb	??___fldiv+1,f,c
 13762  001A40  0E7F               	movlw	127
 13763  001A42  2417               	addwf	??___fldiv,w,c
 13764  001A44  6E20               	movwf	___fldiv@new_exp,c
 13765  001A46  0E00               	movlw	0
 13766  001A48  2018               	addwfc	??___fldiv+1,w,c
 13767  001A4A  6E21               	movwf	___fldiv@new_exp+1,c
 13768  001A4C  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
 13769  001A50  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
 13770  001A54  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
 13771  001A58  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
 13772  001A5C  0E00               	movlw	0
 13773  001A5E  6E0F               	movwf	___fldiv@b,c
 13774  001A60  0E00               	movlw	0
 13775  001A62  6E10               	movwf	___fldiv@b+1,c
 13776  001A64  0E00               	movlw	0
 13777  001A66  6E11               	movwf	___fldiv@b+2,c
 13778  001A68  0E00               	movlw	0
 13779  001A6A  6E12               	movwf	___fldiv@b+3,c
 13780  001A6C  0E00               	movlw	0
 13781  001A6E  6E22               	movwf	___fldiv@grs,c
 13782  001A70  0E00               	movlw	0
 13783  001A72  6E23               	movwf	___fldiv@grs+1,c
 13784  001A74  0E00               	movlw	0
 13785  001A76  6E24               	movwf	___fldiv@grs+2,c
 13786  001A78  0E00               	movlw	0
 13787  001A7A  6E25               	movwf	___fldiv@grs+3,c
 13788  001A7C  0E00               	movlw	0
 13789  001A7E  6E27               	movwf	___fldiv@aexp,c
 13790  001A80  D028               	goto	i2l1271
 13791  001A82                     i2l5000:
 13792  001A82  5027               	movf	___fldiv@aexp,w,c
 13793  001A84  B4D8               	btfsc	status,2,c
 13794  001A86  D011               	goto	i2l5008
 13795  001A88  90D8               	bcf	status,0,c
 13796  001A8A  361B               	rlcf	___fldiv@rem,f,c
 13797  001A8C  361C               	rlcf	___fldiv@rem+1,f,c
 13798  001A8E  361D               	rlcf	___fldiv@rem+2,f,c
 13799  001A90  361E               	rlcf	___fldiv@rem+3,f,c
 13800  001A92  90D8               	bcf	status,0,c
 13801  001A94  360F               	rlcf	___fldiv@b,f,c
 13802  001A96  3610               	rlcf	___fldiv@b+1,f,c
 13803  001A98  3611               	rlcf	___fldiv@b+2,f,c
 13804  001A9A  3612               	rlcf	___fldiv@b+3,f,c
 13805  001A9C  BE25               	btfsc	___fldiv@grs+3,7,c
 13806  001A9E  800F               	bsf	___fldiv@b,0,c
 13807  001AA0  90D8               	bcf	status,0,c
 13808  001AA2  3622               	rlcf	___fldiv@grs,f,c
 13809  001AA4  3623               	rlcf	___fldiv@grs+1,f,c
 13810  001AA6  3624               	rlcf	___fldiv@grs+2,f,c
 13811  001AA8  3625               	rlcf	___fldiv@grs+3,f,c
 13812  001AAA                     i2l5008:
 13813  001AAA  5013               	movf	___fldiv@a,w,c
 13814  001AAC  5C1B               	subwf	___fldiv@rem,w,c
 13815  001AAE  5014               	movf	___fldiv@a+1,w,c
 13816  001AB0  581C               	subwfb	___fldiv@rem+1,w,c
 13817  001AB2  5015               	movf	___fldiv@a+2,w,c
 13818  001AB4  581D               	subwfb	___fldiv@rem+2,w,c
 13819  001AB6  5016               	movf	___fldiv@a+3,w,c
 13820  001AB8  581E               	subwfb	___fldiv@rem+3,w,c
 13821  001ABA  A0D8               	btfss	status,0,c
 13822  001ABC  D009               	goto	i2l5014
 13823  001ABE  8C25               	bsf	___fldiv@grs+3,6,c
 13824  001AC0  5013               	movf	___fldiv@a,w,c
 13825  001AC2  5E1B               	subwf	___fldiv@rem,f,c
 13826  001AC4  5014               	movf	___fldiv@a+1,w,c
 13827  001AC6  5A1C               	subwfb	___fldiv@rem+1,f,c
 13828  001AC8  5015               	movf	___fldiv@a+2,w,c
 13829  001ACA  5A1D               	subwfb	___fldiv@rem+2,f,c
 13830  001ACC  5016               	movf	___fldiv@a+3,w,c
 13831  001ACE  5A1E               	subwfb	___fldiv@rem+3,f,c
 13832  001AD0                     i2l5014:
 13833  001AD0  2A27               	incf	___fldiv@aexp,f,c
 13834  001AD2                     i2l1271:
 13835  001AD2  0E19               	movlw	25
 13836  001AD4  6427               	cpfsgt	___fldiv@aexp,c
 13837  001AD6  D7D5               	goto	i2l5000
 13838  001AD8  501B               	movf	___fldiv@rem,w,c
 13839  001ADA  101C               	iorwf	___fldiv@rem+1,w,c
 13840  001ADC  101D               	iorwf	___fldiv@rem+2,w,c
 13841  001ADE  101E               	iorwf	___fldiv@rem+3,w,c
 13842  001AE0  B4D8               	btfsc	status,2,c
 13843  001AE2  D011               	goto	i2l5026
 13844  001AE4  8022               	bsf	___fldiv@grs,0,c
 13845  001AE6  D00F               	goto	i2l5026
 13846  001AE8                     i2l5020:
 13847  001AE8  90D8               	bcf	status,0,c
 13848  001AEA  360F               	rlcf	___fldiv@b,f,c
 13849  001AEC  3610               	rlcf	___fldiv@b+1,f,c
 13850  001AEE  3611               	rlcf	___fldiv@b+2,f,c
 13851  001AF0  3612               	rlcf	___fldiv@b+3,f,c
 13852  001AF2  BE25               	btfsc	___fldiv@grs+3,7,c
 13853  001AF4  800F               	bsf	___fldiv@b,0,c
 13854  001AF6  90D8               	bcf	status,0,c
 13855  001AF8  3622               	rlcf	___fldiv@grs,f,c
 13856  001AFA  3623               	rlcf	___fldiv@grs+1,f,c
 13857  001AFC  3624               	rlcf	___fldiv@grs+2,f,c
 13858  001AFE  3625               	rlcf	___fldiv@grs+3,f,c
 13859  001B00  0620               	decf	___fldiv@new_exp,f,c
 13860  001B02  A0D8               	btfss	status,0,c
 13861  001B04  0621               	decf	___fldiv@new_exp+1,f,c
 13862  001B06                     i2l5026:
 13863  001B06  AE11               	btfss	___fldiv@b+2,7,c
 13864  001B08  D7EF               	goto	i2l5020
 13865  001B0A  0E00               	movlw	0
 13866  001B0C  6E27               	movwf	___fldiv@aexp,c
 13867  001B0E  AE25               	btfss	___fldiv@grs+3,7,c
 13868  001B10  D017               	goto	i2l1282
 13869  001B12  0EFF               	movlw	255
 13870  001B14  1422               	andwf	___fldiv@grs,w,c
 13871  001B16  6E17               	movwf	??___fldiv& (0+255),c
 13872  001B18  0EFF               	movlw	255
 13873  001B1A  1423               	andwf	___fldiv@grs+1,w,c
 13874  001B1C  6E18               	movwf	(??___fldiv+1)& (0+255),c
 13875  001B1E  0EFF               	movlw	255
 13876  001B20  1424               	andwf	___fldiv@grs+2,w,c
 13877  001B22  6E19               	movwf	(??___fldiv+2)& (0+255),c
 13878  001B24  0E7F               	movlw	127
 13879  001B26  1425               	andwf	___fldiv@grs+3,w,c
 13880  001B28  6E1A               	movwf	(??___fldiv+3)& (0+255),c
 13881  001B2A  5017               	movf	??___fldiv,w,c
 13882  001B2C  1018               	iorwf	??___fldiv+1,w,c
 13883  001B2E  1019               	iorwf	??___fldiv+2,w,c
 13884  001B30  101A               	iorwf	??___fldiv+3,w,c
 13885  001B32  B4D8               	btfsc	status,2,c
 13886  001B34  D003               	goto	i2l1283
 13887  001B36                     i2u485_40:
 13888  001B36  0E01               	movlw	1
 13889  001B38  6E27               	movwf	___fldiv@aexp,c
 13890  001B3A  D002               	goto	i2l1282
 13891  001B3C                     i2l1283:
 13892  001B3C  B00F               	btfsc	___fldiv@b,0,c
 13893  001B3E  D7FB               	goto	i2u485_40
 13894  001B40                     i2l1282:
 13895  001B40  5027               	movf	___fldiv@aexp,w,c
 13896  001B42  B4D8               	btfsc	status,2,c
 13897  001B44  D01F               	goto	i2l5046
 13898  001B46  0E01               	movlw	1
 13899  001B48  260F               	addwf	___fldiv@b,f,c
 13900  001B4A  0E00               	movlw	0
 13901  001B4C  2210               	addwfc	___fldiv@b+1,f,c
 13902  001B4E  2211               	addwfc	___fldiv@b+2,f,c
 13903  001B50  2212               	addwfc	___fldiv@b+3,f,c
 13904  001B52  A012               	btfss	___fldiv@b+3,0,c
 13905  001B54  D017               	goto	i2l5046
 13906  001B56  C00F  F017         	movff	___fldiv@b,??___fldiv
 13907  001B5A  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
 13908  001B5E  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
 13909  001B62  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
 13910  001B66  341A               	rlcf	??___fldiv+3,w,c
 13911  001B68  321A               	rrcf	??___fldiv+3,f,c
 13912  001B6A  3219               	rrcf	??___fldiv+2,f,c
 13913  001B6C  3218               	rrcf	??___fldiv+1,f,c
 13914  001B6E  3217               	rrcf	??___fldiv,f,c
 13915  001B70  C017  F00F         	movff	??___fldiv,___fldiv@b
 13916  001B74  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
 13917  001B78  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
 13918  001B7C  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
 13919  001B80  4A20               	infsnz	___fldiv@new_exp,f,c
 13920  001B82  2A21               	incf	___fldiv@new_exp+1,f,c
 13921  001B84                     i2l5046:
 13922  001B84  BE21               	btfsc	___fldiv@new_exp+1,7,c
 13923  001B86  D010               	goto	i2l5050
 13924  001B88  5021               	movf	___fldiv@new_exp+1,w,c
 13925  001B8A  E103               	bnz	i2u489_40
 13926  001B8C  2820               	incf	___fldiv@new_exp,w,c
 13927  001B8E  A0D8               	btfss	status,0,c
 13928  001B90  D00B               	goto	i2l5050
 13929  001B92                     i2u489_40:
 13930  001B92  0E00               	movlw	0
 13931  001B94  6E21               	movwf	___fldiv@new_exp+1,c
 13932  001B96  6820               	setf	___fldiv@new_exp,c
 13933  001B98  0E00               	movlw	0
 13934  001B9A  6E0F               	movwf	___fldiv@b,c
 13935  001B9C  0E00               	movlw	0
 13936  001B9E  6E10               	movwf	___fldiv@b+1,c
 13937  001BA0  0E00               	movlw	0
 13938  001BA2  6E11               	movwf	___fldiv@b+2,c
 13939  001BA4  0E00               	movlw	0
 13940  001BA6  6E12               	movwf	___fldiv@b+3,c
 13941  001BA8                     i2l5050:
 13942  001BA8  BE21               	btfsc	___fldiv@new_exp+1,7,c
 13943  001BAA  D005               	goto	i2u490_40
 13944  001BAC  5021               	movf	___fldiv@new_exp+1,w,c
 13945  001BAE  E111               	bnz	i2l5054
 13946  001BB0  0420               	decf	___fldiv@new_exp,w,c
 13947  001BB2  B0D8               	btfsc	status,0,c
 13948  001BB4  D00E               	goto	i2l5054
 13949  001BB6                     i2u490_40:
 13950  001BB6  0E00               	movlw	0
 13951  001BB8  6E21               	movwf	___fldiv@new_exp+1,c
 13952  001BBA  0E00               	movlw	0
 13953  001BBC  6E20               	movwf	___fldiv@new_exp,c
 13954  001BBE  0E00               	movlw	0
 13955  001BC0  6E0F               	movwf	___fldiv@b,c
 13956  001BC2  0E00               	movlw	0
 13957  001BC4  6E10               	movwf	___fldiv@b+1,c
 13958  001BC6  0E00               	movlw	0
 13959  001BC8  6E11               	movwf	___fldiv@b+2,c
 13960  001BCA  0E00               	movlw	0
 13961  001BCC  6E12               	movwf	___fldiv@b+3,c
 13962  001BCE  0E00               	movlw	0
 13963  001BD0  6E1F               	movwf	___fldiv@sign,c
 13964  001BD2                     i2l5054:
 13965  001BD2  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
 13966  001BD6  A026               	btfss	___fldiv@bexp,0,c
 13967  001BD8  D002               	goto	i2l5060
 13968  001BDA  8E11               	bsf	___fldiv@b+2,7,c
 13969  001BDC  D001               	goto	i2l5062
 13970  001BDE                     i2l5060:
 13971  001BDE  9E11               	bcf	___fldiv@b+2,7,c
 13972  001BE0                     i2l5062:
 13973  001BE0  90D8               	bcf	status,0,c
 13974  001BE2  3026               	rrcf	___fldiv@bexp,w,c
 13975  001BE4  6E12               	movwf	___fldiv@b+3,c
 13976  001BE6  D70E               	goto	i2l4976
 13977  001BE8                     __end_of___fldiv:
 13978                           	opt callstack 0
 13979                           
 13980                           	psect	rparam
 13981  0000                     
 13982                           	psect	temp
 13983  00006E                     btemp:
 13984                           	opt callstack 0
 13985  00006E                     	ds	1
 13986  0000                     int$flags	set	btemp
 13987  0000                     wtemp8	set	btemp+1
 13988  0000                     ttemp5	set	btemp+1
 13989  0000                     ttemp6	set	btemp+4
 13990  0000                     ttemp7	set	btemp+8
 13991                           tosu	equ	0xFFF
 13992                           tosh	equ	0xFFE
 13993                           tosl	equ	0xFFD
 13994                           stkptr	equ	0xFFC
 13995                           pclatu	equ	0xFFB
 13996                           pclath	equ	0xFFA
 13997                           pcl	equ	0xFF9
 13998                           tblptru	equ	0xFF8
 13999                           tblptrh	equ	0xFF7
 14000                           tblptrl	equ	0xFF6
 14001                           tablat	equ	0xFF5
 14002                           prodh	equ	0xFF4
 14003                           prodl	equ	0xFF3
 14004                           indf0	equ	0xFEF
 14005                           postinc0	equ	0xFEE
 14006                           postdec0	equ	0xFED
 14007                           preinc0	equ	0xFEC
 14008                           plusw0	equ	0xFEB
 14009                           fsr0h	equ	0xFEA
 14010                           fsr0l	equ	0xFE9
 14011                           wreg	equ	0xFE8
 14012                           indf1	equ	0xFE7
 14013                           postinc1	equ	0xFE6
 14014                           postdec1	equ	0xFE5
 14015                           preinc1	equ	0xFE4
 14016                           plusw1	equ	0xFE3
 14017                           fsr1h	equ	0xFE2
 14018                           fsr1l	equ	0xFE1
 14019                           bsr	equ	0xFE0
 14020                           indf2	equ	0xFDF
 14021                           postinc2	equ	0xFDE
 14022                           postdec2	equ	0xFDD
 14023                           preinc2	equ	0xFDC
 14024                           plusw2	equ	0xFDB
 14025                           fsr2h	equ	0xFDA
 14026                           fsr2l	equ	0xFD9
 14027                           status	equ	0xFD8


Data Sizes:
    Strings     556
    Constant    23
    Data        5
    BSS         238
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     55     109
    BANK0           128    127     128
    BANK1           256     92     152
    BANK2           256    108     236
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_61(CODE[10]), STR_60(CODE[11]), STR_59(CODE[11]), STR_58(CODE[12]), 
		 -> STR_57(CODE[12]), STR_56(CODE[10]), STR_55(CODE[10]), STR_54(CODE[13]), 
		 -> STR_53(CODE[8]), STR_52(CODE[17]), STR_51(CODE[15]), STR_50(CODE[15]), 
		 -> STR_49(CODE[12]), STR_48(CODE[17]), STR_47(CODE[12]), STR_46(CODE[15]), 
		 -> STR_45(CODE[18]), STR_44(CODE[17]), STR_43(CODE[12]), STR_42(CODE[15]), 
		 -> STR_41(CODE[18]), STR_40(CODE[17]), STR_39(CODE[14]), STR_38(CODE[14]), 
		 -> STR_37(CODE[17]), STR_36(CODE[3]), STR_35(CODE[9]), STR_34(CODE[16]), 
		 -> STR_33(CODE[3]), STR_32(CODE[9]), STR_31(CODE[17]), STR_30(CODE[15]), 
		 -> STR_29(CODE[15]), STR_28(CODE[12]), STR_27(CODE[10]), STR_26(CODE[15]), 
		 -> STR_25(CODE[12]), STR_24(CODE[10]), STR_23(CODE[16]), STR_22(CODE[12]), 
		 -> STR_21(CODE[3]), STR_20(CODE[11]), STR_19(CODE[13]), STR_18(CODE[8]), 
		 -> STR_17(CODE[10]), STR_16(CODE[17]), STR_15(CODE[10]), STR_14(CODE[16]), 
		 -> STR_13(CODE[10]), STR_12(CODE[16]), STR_11(CODE[10]), STR_10(CODE[17]), 
		 -> STR_9(CODE[5]), STR_8(CODE[10]), STR_7(CODE[14]), STR_6(CODE[6]), 
		 -> STR_5(CODE[10]), STR_4(CODE[10]), STR_3(CODE[11]), STR_2(CODE[13]), 
		 -> STR_1(CODE[10]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1623_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_61(CODE[10]), STR_60(CODE[11]), STR_59(CODE[11]), STR_58(CODE[12]), 
		 -> STR_57(CODE[12]), STR_56(CODE[10]), STR_55(CODE[10]), STR_54(CODE[13]), 
		 -> STR_53(CODE[8]), STR_52(CODE[17]), STR_51(CODE[15]), STR_50(CODE[15]), 
		 -> STR_49(CODE[12]), STR_48(CODE[17]), STR_47(CODE[12]), STR_46(CODE[15]), 
		 -> STR_45(CODE[18]), STR_44(CODE[17]), STR_43(CODE[12]), STR_42(CODE[15]), 
		 -> STR_41(CODE[18]), STR_40(CODE[17]), STR_39(CODE[14]), STR_38(CODE[14]), 
		 -> STR_37(CODE[17]), STR_36(CODE[3]), STR_35(CODE[9]), STR_34(CODE[16]), 
		 -> STR_33(CODE[3]), STR_32(CODE[9]), STR_31(CODE[17]), STR_30(CODE[15]), 
		 -> STR_29(CODE[15]), STR_28(CODE[12]), STR_27(CODE[10]), STR_26(CODE[15]), 
		 -> STR_25(CODE[12]), STR_24(CODE[10]), STR_23(CODE[16]), STR_22(CODE[12]), 
		 -> STR_21(CODE[3]), STR_20(CODE[11]), STR_19(CODE[13]), STR_18(CODE[8]), 
		 -> STR_17(CODE[10]), STR_16(CODE[17]), STR_15(CODE[10]), STR_14(CODE[16]), 
		 -> STR_13(CODE[10]), STR_12(CODE[16]), STR_11(CODE[10]), STR_10(CODE[17]), 
		 -> STR_9(CODE[5]), STR_8(CODE[10]), STR_7(CODE[14]), STR_6(CODE[6]), 
		 -> STR_5(CODE[10]), STR_4(CODE[10]), STR_3(CODE[11]), STR_2(CODE[13]), 
		 -> STR_1(CODE[10]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_61(CODE[10]), STR_60(CODE[11]), STR_59(CODE[11]), STR_58(CODE[12]), 
		 -> STR_57(CODE[12]), STR_56(CODE[10]), STR_55(CODE[10]), STR_54(CODE[13]), 
		 -> STR_53(CODE[8]), STR_52(CODE[17]), STR_51(CODE[15]), STR_50(CODE[15]), 
		 -> STR_49(CODE[12]), STR_48(CODE[17]), STR_47(CODE[12]), STR_46(CODE[15]), 
		 -> STR_45(CODE[18]), STR_44(CODE[17]), STR_43(CODE[12]), STR_42(CODE[15]), 
		 -> STR_41(CODE[18]), STR_40(CODE[17]), STR_39(CODE[14]), STR_38(CODE[14]), 
		 -> STR_37(CODE[17]), STR_36(CODE[3]), STR_35(CODE[9]), STR_34(CODE[16]), 
		 -> STR_33(CODE[3]), STR_32(CODE[9]), STR_31(CODE[17]), STR_30(CODE[15]), 
		 -> STR_29(CODE[15]), STR_28(CODE[12]), STR_27(CODE[10]), STR_26(CODE[15]), 
		 -> STR_25(CODE[12]), STR_24(CODE[10]), STR_23(CODE[16]), STR_22(CODE[12]), 
		 -> STR_21(CODE[3]), STR_20(CODE[11]), STR_19(CODE[13]), STR_18(CODE[8]), 
		 -> STR_17(CODE[10]), STR_16(CODE[17]), STR_15(CODE[10]), STR_14(CODE[16]), 
		 -> STR_13(CODE[10]), STR_12(CODE[16]), STR_11(CODE[10]), STR_10(CODE[17]), 
		 -> STR_9(CODE[5]), STR_8(CODE[10]), STR_7(CODE[14]), STR_6(CODE[6]), 
		 -> STR_5(CODE[10]), STR_4(CODE[10]), STR_3(CODE[11]), STR_2(CODE[13]), 
		 -> STR_1(CODE[10]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_61(CODE[10]), STR_60(CODE[11]), STR_59(CODE[11]), STR_58(CODE[12]), 
		 -> STR_57(CODE[12]), STR_56(CODE[10]), STR_55(CODE[10]), STR_54(CODE[13]), 
		 -> STR_53(CODE[8]), STR_52(CODE[17]), STR_51(CODE[15]), STR_50(CODE[15]), 
		 -> STR_49(CODE[12]), STR_48(CODE[17]), STR_47(CODE[12]), STR_46(CODE[15]), 
		 -> STR_45(CODE[18]), STR_44(CODE[17]), STR_43(CODE[12]), STR_42(CODE[15]), 
		 -> STR_41(CODE[18]), STR_40(CODE[17]), STR_39(CODE[14]), STR_38(CODE[14]), 
		 -> STR_37(CODE[17]), STR_36(CODE[3]), STR_35(CODE[9]), STR_34(CODE[16]), 
		 -> STR_33(CODE[3]), STR_32(CODE[9]), STR_31(CODE[17]), STR_30(CODE[15]), 
		 -> STR_29(CODE[15]), STR_28(CODE[12]), STR_27(CODE[10]), STR_26(CODE[15]), 
		 -> STR_25(CODE[12]), STR_24(CODE[10]), STR_23(CODE[16]), STR_22(CODE[12]), 
		 -> STR_21(CODE[3]), STR_20(CODE[11]), STR_19(CODE[13]), STR_18(CODE[8]), 
		 -> STR_17(CODE[10]), STR_16(CODE[17]), STR_15(CODE[10]), STR_14(CODE[16]), 
		 -> STR_13(CODE[10]), STR_12(CODE[16]), STR_11(CODE[10]), STR_10(CODE[17]), 
		 -> STR_9(CODE[5]), STR_8(CODE[10]), STR_7(CODE[14]), STR_6(CODE[6]), 
		 -> STR_5(CODE[10]), STR_4(CODE[10]), STR_3(CODE[11]), STR_2(CODE[13]), 
		 -> STR_1(CODE[10]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    min@array	PTR int  size(2) Largest target is 8
		 -> a(COMRAM[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_echo
    _echo->___fltol
    ___fltol->___fldiv
    ___fldiv->___xxtofl

Critical Paths under _main in BANK0

    _main->_number_deploy
    _ultrasonic_main->_print_echo
    _print_echo->_printf
    _start->_I2C_Master_Init
    _number_deploy->_printf
    _brake->_I2C_Master_Write
    _backwards->_I2C_Master_Write
    _actuators_main->_stepper
    _actuators_main->_stepper2
    _actuators_main->_stepper2_back
    _stepper2_back->_full_drive
    _stepper2->_full_drive
    _stepper->_full_drive
    _full_drive->_printf
    _servo->_servoRotate0
    _servo->_servoRotate180
    _UI_main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_send_byte
    _abs->___aomod
    _atoi->_isspace
    _initLCD->_lcdInst
    _lcdInst->_send_byte
    _send_byte->_send_nibble
    _send_nibble->_pulse_e
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_UI_main
    _actuators_main->_stepper2

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               110   110      0  272669
                                             90 BANK1      2     2      0
                                              0 BANK2    108   108      0
                            _UI_main
                             ___wmul
                     _actuators_main
                          _backwards
                              _brake
                            _initLCD
                            _lcdInst
                      _number_deploy
                             _printf
                              _start
                    _ultrasonic_main
 ---------------------------------------------------------------------------------
 (1) _ultrasonic_main                                     14    12      2   48732
                                            122 BANK0      4     2      2
                                              0 BANK1     10    10      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                                _abs
                            _lcdInst
                                _min
                         _print_echo
                             _printf
                               _trig
 ---------------------------------------------------------------------------------
 (2) _trig                                                 2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _print_echo                                           1     1      0   23053
                                            121 BANK0      1     1      0
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _min                                                 11     7      4     722
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 (1) _start                                                0     0      0    2013
                    _I2C_Master_Init
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _number_deploy                                       12     8      4   25004
                                            121 BANK0      6     2      4
                                              0 BANK1      6     6      0
                            ___awdiv
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1245
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _brake                                                0     0      0    1291
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _backwards                                            0     0      0    1291
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _actuators_main                                       8     4      4  142224
                                             12 BANK1      8     4      4
                            _initLCD
                            _lcdInst
                             _printf
                              _servo
                            _stepper
                           _stepper2
                      _stepper2_back
                        _system_init
 ---------------------------------------------------------------------------------
 (2) _system_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _stepper2_back                                        8     6      2   46934
                                            125 BANK0      2     0      2
                                              0 BANK1      6     6      0
                         _full_drive
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _stepper2                                            14    12      2   47219
                                            125 BANK0      2     0      2
                                              0 BANK1     12    12      0
                         _full_drive
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _stepper                                              8     6      2   23949
                                            125 BANK0      2     0      2
                                              0 BANK1      6     6      0
                         _full_drive
 ---------------------------------------------------------------------------------
 (3) _full_drive                                           4     2      2   23624
                                            121 BANK0      4     2      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _servo                                                2     2      0     136
                                              3 BANK0      2     2      0
                       _servoRotate0
                     _servoRotate180
 ---------------------------------------------------------------------------------
 (3) _servoRotate180                                       3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _servoRotate0                                         3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _UI_main                                             94    90      4   26760
                                            121 BANK0      4     0      4
                                              0 BANK1     90    90      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___llmod
                            _initLCD
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              12     4      8   22895
                                            109 BANK0     12     4      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   17312
                                            101 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6   16767
                                             70 BANK0     31    25      6
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    5847
                                             31 BANK0     39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     512
                                              6 BANK0      8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     191
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     191
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     191
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6173
                                             31 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3817
                                             20 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1602
                                             13 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1102
                                              4 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0     158
                                              3 BANK0      1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     273
                                             18 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              0 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1895
                                              7 BANK0     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     281
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     792
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     350
                                              4 BANK0      1     1      0
                            _lcdInst
                          _send_byte
                        _send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcdInst                                              1     1      0     158
                                              3 BANK0      1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (10) _send_byte                                           1     1      0     127
                                              2 BANK0      1     1      0
                        _send_nibble
 ---------------------------------------------------------------------------------
 (11) _send_nibble                                         1     1      0      65
                                              1 BANK0      1     1      0
                            _pulse_e
 ---------------------------------------------------------------------------------
 (12) _pulse_e                                             1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     412
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1291
                                              1 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      2     2      0      65
                                              1 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     722
                                             13 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     421
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _ISR                                                 2     2      0    3522
                                             53 COMRAM     2     2      0
                               _echo
 ---------------------------------------------------------------------------------
 (16) _echo                                                4     4      0    3522
                                             49 COMRAM     4     4      0
                            ___fldiv
                            ___fltol
                           ___xxtofl
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (17) i2___awdiv                                           8     4      4     508
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (17) ___xxtofl                                           14    10      4     626
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (17) ___fltol                                            10     6      4     533
                                             39 COMRAM    10     6      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (17) ___fldiv                                            25    17      8    1855
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UI_main
     _I2C_Master_Init
       ___lldiv
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     ___llmod
     _initLCD
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _send_byte
         _send_nibble
           _pulse_e
       _send_nibble
         _pulse_e
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
   ___wmul
   _actuators_main
     _initLCD
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _send_byte
         _send_nibble
           _pulse_e
       _send_nibble
         _pulse_e
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
     _servo
       _servoRotate0
       _servoRotate180
     _stepper
       _full_drive
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _toupper
                   _islower
     _stepper2
       _full_drive
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _toupper
                   _islower
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _toupper
                 _islower
     _stepper2_back
       _full_drive
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _toupper
                   _islower
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _toupper
                 _islower
     _system_init
   _backwards
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _brake
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _initLCD
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _send_byte
       _send_nibble
         _pulse_e
     _send_nibble
       _pulse_e
   _lcdInst
     _send_byte
       _send_nibble
         _pulse_e
   _number_deploy
     ___awdiv
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _fputc
           _putch
             _send_byte
               _send_nibble
                 _pulse_e
         _isdigit
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
           _toupper
             _islower
   _start
     _I2C_Master_Init
       ___lldiv
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _ultrasonic_main
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _abs
       ___aomod (ARG)
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _min
     _print_echo
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _toupper
                 _islower
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
     _trig

 _ISR (ROOT)
   _echo
     ___fldiv
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     i2___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100     6C      EC       9       92.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100     5C      98       7       59.4%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     7F      80       5      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     37      6D       1       86.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     271      34        0.0%
DATA                 0      0     271       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Apr 07 04:48:08 2019

                  ___fldiv@aexp 0027                    ___fldiv@bexp 0026                               _a 0061  
                             _b 005A                               _i 016D                    ___fldiv@sign 001F  
                   __CFG_CPD$ON 000000                    ___awdiv@sign 0085             ___wmul@multiplicand 0082  
                   __CFG_BORV$3 000000                 ??_number_deploy 00FD               stepper2@direction 010B  
                 servoRotate0@i 0081                    __CFG_CP0$OFF 000000                    __CFG_CP1$OFF 000000  
                  __CFG_CP2$OFF 000000                    __CFG_CP3$OFF 000000                     __CFG_OSC$HS 000000  
           __end_of_system_init 38D2                             l112 36EA                             l117 35EC  
               _ultrasonic_main 2066                             l530 1008                             l620 1E4E  
                           l622 1E56                             l714 3350                             l493 0290  
                           l584 3164                             l595 1C5C                             l597 1C64  
                           _GIE 007F97                    __CFG_CPB$OFF 000000                             _RB2 007C0A  
                           _RC1 007C11                             _RB3 007C0B                             _RC2 007C12  
                           _RB4 007C0C                             _RD0 007C18                             _RB5 007C0D  
                           _RD1 007C19                             _RB6 007C0E                             _RB7 007C0F  
                           _ISR 0008          __size_of_stepper2_back 00A0                             _abs 386C  
                           _cnt 0175                             _pad 3134                             _min 2CCC  
                           _sum 0038                  stepper2_back@i 0104                             wreg 000FE8  
                  __CFG_LVP$OFF 000000                            ?_ISR 0001                    ___fltol@exp1 0031  
                  __CFG_WDT$OFF 000000                            l1107 351A                            ?_abs 0092  
                          l1362 3896                            l1460 3772                            l1393 2926  
                          l7100 2EFC                            l6302 3188                            l7110 2F4C  
                          ?_pad 0094                            l6400 2C26                            l7120 2F90  
                          l7104 2F14                            l6410 2C84                            l6306 31B4  
                          l7124 2FA8                            l8020 0F6E                            l8004 0F1C  
                          l6414 2CAA                            l6406 2C6E                            l6254 3470  
                          l6502 1E6C                            l7070 31EE                            l7302 2DBA  
                          l7206 2E92                            l6360 2732                            l6352 26F8  
                          l6264 3806                            l6272 3972                            l7320 327E  
                          l7304 2DBE                            l7216 2EC6                            l8104 127A  
                          l8032 0FCA                            l6426 37B4                            l6370 278E  
                          l6346 26D0                            l6274 3978                            l6450 1C7E  
                          l6530 1F4E                            l6610 12CC                            l7314 326E  
                          l7250 25B0                            l7242 257C                            l7234 2538  
                          l8026 0F8C                            l6268 381E                            l6292 314C  
                          l6436 1C40                            l6516 1EC0                            l6508 1E9E  
                          l6612 12CE                            l7084 322A                            l7148 30EE  
                          l7228 250A                            l8028 0FA6                            ?_min 0080  
                          l6358 271E                            l6374 27A4                            l6390 2BD4  
                          l6454 1C8E                            l6630 12EE                            l6622 12E6  
                          l6614 12DE                            l7326 3294                            l7342 32C6  
                          l7174 2DF0                            l7510 2192                            l8070 114E  
                          l8062 10F2                            l8038 0FE8                            l6560 2800  
                          l6296 315C                            l6464 1D88                            l6720 3672  
                          l7328 329C                            l8080 11B4                            l7362 350C  
                          l7354 34D8                            l6570 284A                            l6562 2804  
                          l6378 27CA                            l6394 2BF8                            l6298 316E  
                          l6554 203C                            l6538 1FC6                            l6650 13C4  
                          l6634 12F8                            l6626 12EA                            l6618 12E2  
                          l7346 32D4                            l7338 32BC                            l7290 2D0C  
                          l7274 266C                            l7266 2628                            l7258 25F4  
                          l7186 2E2A                            l7506 2164                            l7522 21BA  
                          l8074 115E                            l8066 1102                            l7356 34E4  
                          l6580 2868                            l6484 1DEE                            l6652 13D2  
                          l6636 133A                            l7380 2ACA                            l7612 249A  
                          l7196 2E5E                            l7524 21C2                            l8084 11BA  
                          l6582 2890                            l6398 2C12                            l6718 364A  
                          l7518 21AA                            l6576 285A                            l6488 1E06  
                          l6648 13A6                            l7456 2B9C                            l7288 2D02  
                          l7536 2234                            l7480 20DA                            l8088 11DE  
                          l6586 28C6                            l6578 2862                            l6682 159A  
                          l7730 0270                            l7650 00BC                            l7570 232E  
                          l7562 22E8                            l7538 223A                            l7482 20E2  
                          l6692 15E2                            l6668 14CC                            l7740 02B0  
                          l7708 01EA                            l7580 2378                            l7556 22AE  
                          l7822 06CC                            l6918 18CA                            l6838 17A8  
                          l6782 16A8                            l7582 2382                            l7566 231A  
                          l7486 20F2                            l6688 15D6                            l7680 015E  
                          l6698 15FA                            l7850 0780                            l7818 06A6  
                          l7594 23CE                            l6980 3302                            l7772 0378  
                          l7756 0310                            l6956 194A                            l6876 1832  
                          l6982 330E                            l7846 0778                            l6798 1714  
                          l6992 3342                            l7856 079A                            l7960 0E06  
                          l7952 0DD2                            l7866 0808                            l7868 0816  
                          l7796 051A                            l7976 0E60                            l7986 0E90  
                          STR_1 FFD8                            STR_2 FF09                            STR_3 FF73  
                          STR_4 FFD8                            STR_5 FFCE                            STR_6 FFF3  
                          STR_7 FEE1                            STR_8 FFD8                            STR_9 FFF9  
                          _LATA 000F89                            _LATB 000F8A                            _LATC 000F8B  
                          _LATD 000F8C                            _LATE 000F8D                            u7000 1EF2  
                          u7010 1EF4                            u7100 2008                            u7110 200C  
                          u7030 1F2C                            _RBIE 007F93                            u7040 1F2E  
                          _RBIF 007F90                            u7140 2846                            u6500 38FC  
                          u7060 1FA2                            u8100 2310                            u8020 215C  
                          u6510 38FE                            u7070 1FD8                            u7310 1500  
                          u8030 2174                            u7160 28F6                            u6520 387C  
                          u6600 3866                            u8200 23CA                            u8120 233E  
                          u7065 1F90                            u7170 28F8                            u6450 3468  
                          u6610 375A                            u7090 1FFA                            u7250 140C  
                          u8130 234E                            u6435 39C0                            u7091 1FF8  
                          u6436 39C2                            u6700 2736                            u6620 375C  
                          u7260 140E                            u8220 24AA                            u8140 235E  
                          u6470 34B0                            u7270 141A                            u8150 236E  
                          u8070 2240                            u9007 24C2                            u6640 3960  
                          u6800 37B0                            u8400 038A                            u8320 0200  
                          u7360 372E                            u7600 3116                            u7505 3556  
                          u9017 2446                            u6650 3962                            u6810 1C12  
                          u6570 392E                            u7290 144E                            u8410 039A  
                          u7370 3636                            u7530 3214                            u8170 239A  
                          u8090 22DE                            u7610 2DEE                            u7515 3A10  
                          u8411 0398                            u9107 1664                            u9027 247A  
                          u7516 3A12                            u6900 1DBA                            u6820 1C14  
                          u6580 3930                            u8180 23AA                            u7700 252A  
                          u6901 1DB8                            u9117 1678                            u9037 2A90  
                          u6910 1DC8                            u6590 3864                            u7550 3250  
                          u8190 23BA                            u7710 2548                            u9207 1750  
                          u9127 168C                            u9047 2ABC                            u7480 3312  
                          u6760 2C2A                            u6920 1DCC                            u7800 2648  
                          u7720 2558                            u6681 26FE                            u9217 176A  
                          u9137 16A0                            u9057 2B1E                            u6850 1C52  
                          u8370 02AC                            u7810 267C                            u7730 258C  
                          u8610 0DEE                            u9307 187A                            u9227 1784  
                          u9147 16BC                            u9067 2B48                            u8611 0DEC  
                          u6940 1DD8                            u8460 081C                            u7820 268C  
                          u7740 259C                            u7660 2EDC                            u8700 0FB8  
                          u9317 1892                            u9237 179E                            u9157 16D0  
                          u9077 30B0                            u8621 0E04                            u8605 0DDA  
                          u6870 1C78                            u7830 2CF2                            u7750 25C0  
                          u7670 24DC                            u8710 1002                            u9407 35F2  
                          u9327 18AA                            u9247 17C0                            u9167 16E4  
                          u9087 2F60                            u8607 0DDC                            u6880 1D98  
                          u7760 25D0                            u7680 24EC                            u9417 3604  
                          u9337 18C2                            u9257 17DA                            u9177 16F8  
                          u9097 1650                            u6970 1E42                            u7930 32A0  
                          u7770 2604                            u7690 251A                            u9507 02C8  
                          u9427 3618                            u9347 18E2                            u9267 17F4  
                          u9187 170C                            u7780 2614                            u9517 0328  
                          u9437 36F6                            u9357 18FA                            u9277 180E  
                          u9197 1736                            u6990 1EBC                            u7870 2D7A  
                          u7790 2638                            u8670 0F46                            u8590 0DBC  
                          u9607 39B0                            u9527 03B4                            u9447 3702  
                          u9367 1912                            u9287 1828                            u8807 10AA  
                          u7880 2DA0                            u8680 0F56                            u9537 0540  
                          u9457 3710                            u9377 192A                            u9297 1862  
                          u8817 11C6                            u8585 0DAA                            u7970 34E8  
                          u8690 0FA6                            u9547 070E                            u9467 007A  
                          u9387 1942                            u8907 224E                            u8827 11F0  
                          u8587 0DAC                            u9557 33EE                            u9477 011E  
                          u9397 39DC                            u8917 227A                            u8837 1214  
                          u8757 0E1E                            u9567 3408                            u9487 0192  
                          u8927 2E06                            u8847 1248                            u8767 0E48  
                          u9577 341A                            u9497 0228                            u8937 2E1C  
                          u8857 126C                            u8777 0E72                            u9587 343E  
                          u8947 2E3A                            u8867 2078                            u8787 0EA6  
                          u9597 39A6                            u8957 2E50                            u8877 20A2  
                          u8797 0ED8                            u8967 2E6E                            u8887 212A  
                          u8977 2E84                            u8897 2206                            u8987 2EA2  
                          u8997 2EB8                            _Pole 0200              main@poles_detected 02E6  
                   main@t_count 02E0                            abs@a 0092                            _data 005E  
                          _echo 0826                            _dbuf 0178                            _disp 016F  
                          _atoi 27EC                            _main 0D6A                            _dtoa 1BE8  
                          _meas 0050                            _keys FDBB                            _send 006D  
                          _tick 0056                            _prec 004C                            _sens 0058  
                          _temp 00FF                            _time 0164                            _nout 0048  
                          pad@i 009B                            pad@p 0098                            fsr1h 000FE2  
                          fsr2h 000FDA                            indf2 000FDF                            fsr1l 000FE1  
                          pad@w 009D                            fsr2l 000FD9                            _trig 2DDC  
                          _sumf 0040                            btemp 006E                            min@i 0089  
                          _xtoa 1E30                            prodh 000FF4                            prodl 000FF3  
                          start 000E         __size_of_actuators_main 0136                   __CFG_IESO$OFF 000000  
               ___fldiv@new_exp 0020                 __end_of_UI_main 0826                 servoRotate180@i 0081  
                 __CFG_MCLRE$ON 000000                    main@act_done 02DA                    ___param_bank 000000  
                         ??_ISR 0036                           ??_abs 0094                           ??_pad 009A  
                         ??_min 0084           actuators_main@act_cnt 0112           I2C_Master_Read@ackBit 0081  
              ?_I2C_Master_Init 008D                ?_I2C_Master_Read 0001                ?_I2C_Master_Wait 0001  
              ?_I2C_Master_Stop 0001                           ?_echo 0001                   ___fltol@sign1 0030  
               __end_of___aodiv 27EC                           ?_atoi 0087                           ?_main 0001  
                         ?_dtoa 009F                 __end_of___aomod 2CCC                 __end_of___fldiv 1BE8  
               __end_of___awdiv 32DE                           STR_10 FE06                           STR_11 FF7E  
                         STR_20 FF5D                           STR_12 FE5A                           STR_21 FED0  
                         STR_13 FF88                           STR_22 FF22                           STR_30 FE98  
                         STR_14 FE6A                           STR_15 FF92                           STR_23 FE4A  
                         STR_31 FDE4                           STR_32 FFE2                           STR_24 FFC4  
                         STR_40 FE39                           STR_16 FE17                           STR_33 FED0  
                         STR_17 FF9C                           STR_25 FF46                           STR_41 FDD2  
                         STR_34 FE29                           STR_18 FFEB                           STR_50 FEA7  
                         STR_42 FE89                           STR_26 FE7A                           STR_35 FFE2  
                         STR_27 FFC4                           STR_43 FF3A                           STR_19 FEEF  
                         STR_51 FEB6                           STR_52 FDE4                           STR_44 FE39  
                         STR_36 FED0                           STR_28 FF46                           STR_60 FF68  
                         STR_29 FE7A                           STR_45 FDD2                           STR_53 FF01  
                         STR_61 FFB0                           STR_37 FE28                           STR_46 FE89  
                         STR_54 FEFC                           STR_38 FED3                           STR_47 FF3A  
                         STR_55 FFBA                           STR_39 FEC5                           STR_56 FFA6  
                         STR_48 FDF5                           STR_57 FF22                           STR_49 FF16  
                         STR_58 FF2E                           STR_59 FF52                 __end_of___fltol 3094  
                         ?_trig 0001                 __end_of___lldiv 3362                 ___awdiv@divisor 0082  
                         ?_xtoa 009F                           _T1CON 000FCD                 __end_of___llmod 352C  
                         i2l365 37EE                           i2l392 0D68                 ___awdiv@counter 0084  
                  vfpfcnvrt@fmt 00C8                    vfpfcnvrt@llu 00D8                           _TMR1H 000FCF  
                         _TMR1L 000FCE                           _PORTB 000F81                           _TRISA 000F92  
                         _TRISB 000F93                           _TRISC 000F94                           _TRISD 000F95  
                         _TRISE 000F96                   __CFG_PWRT$OFF 000000                   __CFG_WRT0$OFF 000000  
                 __CFG_WRT1$OFF 000000                   __CFG_WRT2$OFF 000000                   __CFG_WRT3$OFF 000000  
               __end_of_lcdInst 3B1C                  __CFG_EBTR0$OFF 000000                  __CFG_FCMEN$OFF 000000  
                __CFG_EBTR1$OFF 000000                  __CFG_EBTR2$OFF 000000                  __CFG_EBTR3$OFF 000000  
                 __CFG_WRTB$OFF 000000                   __CFG_WRTC$OFF 000000                   __CFG_WRTD$OFF 000000  
               __end_of_initLCD 3456                  __CFG_EBTRB$OFF 000000                           _brake 3A6A  
                         _flags 004E                           _dists 0069                           _fputc 3456  
               __end_of_isalpha 386C                           _fputs 37FA                 __end_of_isdigit 3968  
                         _servo 39C4                           atoi@n 0094                           pad@fp 0094  
                         atoi@s 0087                           _width 004A                           _state 0171  
                         _putch 3AFC                           _start 368E                           main@i 02D6  
                         main@k 02DE                           dtoa@d 00A1                           dtoa@i 00C1  
                         dtoa@n 00B9                           dtoa@p 00B3                           dtoa@s 00B7  
                         dtoa@w 00B5                 __end_of_islower 3904                 __end_of_isspace 37BC  
               __end_of_isupper 3936                           tablat 000FF5                 send_nibble@data 0081  
                         plusw2 000FDB                 __end_of_pulse_e 39C4                           ttemp5 006F  
                         ttemp6 0072                           ttemp7 0076                           status 000FD8  
   I2C_Master_Read@receivedByte 0082                 __end_of_stepper 3258                           wtemp8 006F  
                         xtoa@c 00C4                           xtoa@d 00A1                           xtoa@i 00C2  
                         xtoa@n 00BA                           xtoa@p 00B6                           xtoa@w 00B8  
                         xtoa@x 00A9                   _stepper2_back 3094                 __end_of_toupper 377C  
              ??_servoRotate180 0080              __size_ofi2___awdiv 0084                  __CFG_PBADEN$ON 000000  
                  _toupper$1675 008C                 __initialization 358C                    __end_of_echo 0D6A  
                   _system_init 38A0                    __end_of_atoi 2930                    __end_of_main 1286  
                  __end_of_dtoa 1E30                    __end_of_keys FDCC         __end_of_ultrasonic_main 2292  
                  __end_of_trig 2EDE                    __end_of_xtoa 2066                          ??_echo 0032  
                        ??_atoi 0089                          ??_main 015A                          ??_dtoa 00A9  
                        ??_trig 0080                          ??_xtoa 00AA                   __activetblptr 000002  
          number_deploy@t_count 0104               ?_I2C_Master_Start 0001               ?_I2C_Master_Write 0081  
          number_deploy@tires_t 0100              ??_I2C_Master_Start 0081                          ?_brake 0001  
                        _ADCON1 000FC1              ??_I2C_Master_Write 0083                    ?_send_nibble 0001  
                        ?_fputc 0084                ___llmod@dividend 0080                          ?_fputs 008D  
              ___awdiv@dividend 0080                          ?_servo 0001                          ?_putch 0001  
                        ?_start 0001                          _INT1IE 007F83                          _INT1IF 007F80  
            stepper2@steps2_adj 00FD                          i2l1342 296E                          i2l1271 1AD2  
                        i2l1282 1B40                          i2l1283 1B3C                          i2l1349 29EC  
                        i2l5000 1A82                          i2l5020 1AE8                          i2l5014 1AD0  
                        i2l5008 1AAA                          i2l5120 2FF8                          i2l5200 2A1E  
                        i2l5050 1BA8                          i2l5026 1B06                          i2l5060 1BDE  
                        i2l5140 3052                          i2l5062 1BE0                          i2l5054 1BD2  
                        i2l5046 1B84                          i2l5136 3042                          i2l5216 2A5E  
                        i2l5240 339C                          i2l5154 3082                          i2l5146 305A  
                        i2l5242 33A4                          i2l5234 3386                          i2l5402 09F2  
                        i2l5148 3066                          i2l5180 297E                          i2l5260 33DC  
                        i2l5252 33C4                          i2l5228 3376                          i2l5190 29AE  
                        i2l5192 29D4                          i2l5256 33CE                          i2l5424 0AAA  
                        i2l5186 299C                          i2l5418 0A4E                          i2l5426 0AC4  
                        i2l5188 29A2                          i2l5452 0BA0                          i2l5436 0B44  
                        i2l5460 0C16                          i2l5198 2A12                          i2l5470 0C96  
                        i2l5390 0958                          i2l5384 0900                          i2l5368 08A4  
                        i2l5392 0972                          i2l5458 0BFC                          i2l5492 0D4E  
                        i2l5486 0CF2                          i2l4944 198C                          i2l4964 19CC  
                        i2l4948 1990                          i2l4990 1A32                          i2l4982 1A1A  
                        i2l5950 37DC                          i2l4976 1A04                          i2l4968 19D0  
                     ??_UI_main 0100                   vfpfcnvrt@done 00E1                          _TMR1ON 007E68  
                ?_stepper2_back 00FD                          _SSPADD 000FC8                          _SSPBUF 000FC9  
              __end_of___xxtofl 2A70     number_deploy@poles_detected 00FB                  __CFG_XINST$OFF 000000  
                  vfprintf@cfmt 00EB                       ??___aodiv 0090                       ??___aomod 0090  
                        ___wmul 3A42                       ??___fldiv 0017                       ??___awdiv 0084  
                     ??___fltol 002C                       ??___lldiv 0088                       ??___llmod 0088  
                        clear_0 35B2                          clear_1 35BE                          clear_2 35CE  
              ___awdiv@quotient 0086                       ??_lcdInst 0083                          _printf 3A1A  
                        pad@buf 0096                          dtoa@fp 009F                          _strlen 3968  
                i2___awdiv@sign 0006                       ??_initLCD 0084                          fputc@c 0084  
                        fputs@c 0091                          fputs@i 0092                    __pdataCOMRAM 0069  
                        fputs@s 008D                       ??_isalpha 0082                       ??_isdigit 0082  
             __end_ofi2___awdiv 33E6                       ??_islower 0082                    __mediumconst FDBA  
                     ??_isspace 0082                          tblptrh 000FF7                       ??_isupper 0082  
                        tblptrl 000FF6                          tblptru 000FF8                __end_of_vfprintf 368E  
                     ??_pulse_e 0080                __end_of_stepper2 2FDA  ultrasonic_main@min_us_dist_914 0108  
                     ??_stepper 00FF                          xtoa@fp 009F                       ??_toupper 0088  
                  ___xxtofl@arg 000B           pulse_e@interruptState 0080                    ___xxtofl@exp 000A  
                  ___xxtofl@val 0001                      __accesstop 0080         __end_of__initialization 35D4  
                _actuators_main 2A70                   ___rparam_used 000001                      ___fltol@f1 0028  
                  stepper@i_376 0104              __size_of_backwards 0026             full_drive@direction 00FC  
                __pcstackCOMRAM 0001                    stepper@stack 00FD                ?_ultrasonic_main 00FA  
                 __end_of_brake 3A90                   __end_of_fputc 34C4                   __end_of_fputs 3836  
                 __end_of_servo 39F0                   __end_of_putch 3B0C                   __end_of_start 36E0  
               _key_was_pressed 0177           number_deploy@avg_dist 00F9                         ??_brake 0083  
                       ??_fputc 0088                         ??_fputs 0091                         ??_servo 0083  
                       ??_putch 0083                         ??_start 0095                 ??_stepper2_back 0100  
                    __pbssBANK0 00FF                      __pbssBANK1 015C                      __pbssBANK2 0200  
        __end_of_actuators_main 2BA6                         ?___wmul 0080              __size_of_send_byte 0018  
                       ?_printf 00ED          stepper2_back@direction 0101                         ?_strlen 0080  
         __end_of_number_deploy 24B4                       ?___xxtofl 0001               __end_of_backwards 3AB6  
            __size_of_vfpfcnvrt 03AA                      _dist_final 0250                         _SSPCON1 000FC6  
                       _SSPCON2 000FC5                         _SSPSTAT 000FC7                         _UI_main 0012  
          __size_of_send_nibble 001A                 ?_actuators_main 010C                         __Hparam 0000  
                       __Lparam 0000                    ?_system_init 0001                         ___aodiv 26A2  
                       ___aomod 2BA6                         ___fldiv 1960                         ___awdiv 3258  
                       ___fltol 2FDA                         ___lldiv 32DE                 __size_of___wmul 0028  
                       ___llmod 34C4                       ?_vfprintf 00E5                       ?_stepper2 00FD  
               __CFG_STVREN$OFF 000000                         __pcinit 358C                      _full_drive 1630  
                       __ramtop 1000                         _lcdInst 3B0C                         __ptext0 0D6A  
                       __ptext1 2066                         __ptext2 2DDC                         __ptext3 24B4  
                       __ptext4 2CCC                         __ptext5 368E                         __ptext6 2292  
                       __ptext7 3258                         __ptext8 3A6A                         __ptext9 3A90  
               __size_of_printf 0028                 __size_of_strlen 002E                         _initLCD 33E6  
                  __size_of_ISR 37F2                         _counter 0060                    __size_of_abs 0034  
                  __size_of_pad 009C                         _isalpha 3836                    __size_of_min 0110  
                       _isdigit 3936                      ??___xxtofl 0005                         _islower 38D2  
                       _isspace 377C                         _isupper 3904        __size_of_I2C_Master_Init 0060  
      __size_of_I2C_Master_Read 002A        __size_of_I2C_Master_Wait 0014        __size_of_I2C_Master_Stop 0008  
               _prev_dist_final 015C                         _pressed 016B                         atoi@neg 008D  
                       _pulse_e 3996                         _stepper 31D0                  __pintcode_body 37BC  
                       _toupper 3730            end_of_initialization 35D4                         min@size 0082  
           main@arduino_stopped 02DB           __end_of_LCD_SIZE_HORZ FDD1               __end_of_send_byte 3AE8  
         __end_of_LCD_SIZE_VERT FDD0                         fputc@fp 0086                   __Lmediumconst FDBA  
                       int_func 37BC                         fputs@fp 008F       __size_of_I2C_Master_Start 0008  
     __size_of_I2C_Master_Write 000A                 ___lldiv@divisor 0084                 ___lldiv@counter 008C  
             __end_of_vfpfcnvrt 1630                   ?_servoRotate0 0001                  main@steps2_adj 02D4  
                       postdec1 000FE5                         postdec2 000FDD                         postinc0 000FEE  
                       postinc1 000FE6                         postinc2 000FDE                      ??_vfprintf 00EB  
                    ??_stepper2 0100                         strlen@a 0082                         strlen@s 0080  
                     _PORTAbits 000F80                      _print_echo 24B4                   stepper2@i_384 0107  
                 ___xxtofl@sign 0009                       _TRISAbits 000F92                       _TRISBbits 000F93  
                     _TRISCbits 000F94                     ___fldiv@grs 0022                     ___fldiv@rem 001B  
                    main@i_1026 02E4                      main@i_1018 02D8                       i2___awdiv 3362  
   ultrasonic_main@step2_offset 0104                   send_byte@data 0082              i2___awdiv@dividend 0001  
         UI_main@poles_detected 00FB                  ??_servoRotate0 0080     number_deploy@tires_detected 0102  
                   vfpfcnvrt@ap 00CA                     vfpfcnvrt@fp 00C6                     vfpfcnvrt@ll 00D0  
                __end_of___wmul 3A6A                     ?_full_drive 00F9         __size_of_servoRotate180 0056  
                 __pidataCOMRAM 3B36                  __end_of_printf 3A42                  __end_of_strlen 3996  
           start_initialization 358C                      min@minimum 0087              i2___awdiv@quotient 0007  
                   __end_of_ISR 37FA                     __end_of_abs 38A0                     __end_of_pad 31D0  
                   __end_of_min 2DDC           stepper2@count_stepper 0109                      ?i2___awdiv 0001  
             ??_I2C_Master_Init 0091               ??_I2C_Master_Read 0081               ??_I2C_Master_Wait 0080  
             ??_I2C_Master_Stop 0081               main@prev_avg_dist 02E8                  _poles_detected 0052  
               ___llmod@divisor 0084                 ___llmod@counter 0088                    UI_main@t_dep 00F9  
                   vfprintf@fmt 00E7                        ??___wmul 0084        I2C_Master_Init@clockFreq 008D  
              __CFG_LPT1OSC$OFF 000000            __size_of_system_init 0032                        ??_printf 00F5  
                      ??_strlen 0082                     ?_print_echo 0001                       ___fldiv@a 0013  
                     ___fldiv@b 000F        __size_of_ultrasonic_main 022C                     __pbssCOMRAM 0038  
                 __pcstackBANK0 0080                   __pcstackBANK1 0100                   __pcstackBANK2 0280  
              ___aodiv@dividend 0080                ??_actuators_main 0110               __size_of___xxtofl 0140  
                     _backwards 3A90                        ?_UI_main 00F9           __end_of_stepper2_back 3134  
           __size_of_full_drive 0330                       _atoi$1583 008F                       _atoi$1584 0093  
                     _atoi$1585 0091                _I2C_Master_Start 3B2E                _I2C_Master_Write 3B1C  
                     _dtoa$1099 00B1               __CFG_CCP2MX$PORTC 000000                       __pintcode 0008  
                 __pmediumconst FDBA                        ?___aodiv 0080                        ?___aomod 0080  
                      ?___fldiv 000F                        ?___awdiv 0080                ___aodiv@quotient 0092  
                      ?___fltol 0028                        ?___lldiv 0080                        ?___llmod 0080  
                      ?_lcdInst 0001               __size_of_vfprintf 0056               __size_of_stepper2 00FC  
          full_drive@stepper_no 00F9                        ?_initLCD 0001                        ?_isalpha 0080  
                      ?_isdigit 0080                        ?_islower 0080                        ?_isspace 0080  
                      ?_isupper 0080            __end_of_servoRotate0 3730                   ??_send_nibble 0081  
                      ?_pulse_e 0001                  __size_of_brake 0026                     ??i2___awdiv 0005  
                      ?_stepper 00FD                  __size_of_fputc 006E                  __size_of_fputs 003C  
                      ?_toupper 0086                  __size_of_servo 002C                      ?_backwards 0001  
                __size_of_putch 0010                  __size_of_start 0052                  ___wmul@product 0084  
                      _LATAbits 000F89                        _LATBbits 000F8A                        _LATCbits 000F8B  
                      _LATDbits 000F8C                        _LATEbits 000F8D                        UI_main@i 0159  
              main@pole_cl_dist 02D2                       _send_byte 3AD0             __size_of_print_echo 01EE  
        __size_of_number_deploy 0222                  _LCD_LINE1_ADDR FDCE                  _LCD_LINE2_ADDR FDD1  
                _LCD_LINE3_ADDR FDCD                  _LCD_LINE4_ADDR FDCC                        i2u503_40 306C  
                      i2u521_40 33A8                        i2u514_40 2A28                        i2u530_40 08C4  
                      i2u540_40 0A12                        i2u550_40 0B64                        i2u560_40 0CB6  
                      i2u529_40 08B4                        i2u617_40 37E6                        i2u490_40 1BB6  
                      i2u539_40 0A02                        i2u485_40 1B36                        i2u549_40 0B54  
                      i2u559_40 0CA6                        i2u489_40 1B92                        i2u498_40 2FE6  
                      i2u499_40 3016                        i2u499_45 300C                __CFG_WDTPS$32768 000000  
    stepper2_back@count_stepper 0102                  _servoRotate180 35E2                       _vfpfcnvrt 1286  
                     _xtoa$1110 00B2                       _xtoa$1111 00B4               ___wmul@multiplier 0080  
                     main@t_dep 02E2               i2___awdiv@divisor 0003                       main@stack 02DC  
             i2___awdiv@counter 0005                    _isspace$1610 0086                      vfpfcnvrt@c 00E0  
           actuators_main@stack 010C                       copy_data0 35A0               ??_ultrasonic_main 00FC  
               UI_main@keypress 0154          __end_of_LCD_LINE1_ADDR FDCF                __size_of_UI_main 0814  
        __end_of_LCD_LINE2_ADDR FDD2          __end_of_LCD_LINE3_ADDR FDCE          __end_of_LCD_LINE4_ADDR FDCD  
           __end_of_send_nibble 3AD0                      ?_send_byte 0001                     UI_main@Pole 0104  
                      __Hrparam 0000                     UI_main@tick 0155                      vfprintf@ap 00E9  
                      __Lrparam 0000                      vfprintf@fp 00E5              __CFG_BOREN$SBORDIS 000000  
        __end_of_servoRotate180 3638                __size_of___aodiv 014A                __size_of___aomod 0126  
              __size_of___fldiv 0288                __size_of___awdiv 0086                __size_of___fltol 00BA  
              __size_of___lldiv 0084                __size_of___llmod 0068                    ??_full_drive 00FB  
                    ?_vfpfcnvrt 00C6                 ___aodiv@divisor 0088                 ___aodiv@counter 0090  
              __size_of_lcdInst 0010        actuators_main@steps2_adj 010E                   _number_deploy 2292  
               _I2C_Master_Init 352C                 _I2C_Master_Read 39F0                __size_of_initLCD 0070  
                      ___xxtofl 2930                 _I2C_Master_Wait 3AE8                 _I2C_Master_Stop 3B26  
              __size_of_isalpha 0036                __size_of_isdigit 0032                __size_of_islower 0032  
              __size_of_isspace 0040                        __ptext10 2A70                        __ptext11 38A0  
                      __ptext20 3A1A                        __ptext12 3094                        __ptext21 3638  
                      __ptext13 2EDE                        __ptext30 3968                        __ptext22 1286  
                      __ptext14 31D0                        __ptext31 37FA                        __ptext23 1E30  
                      __ptext15 1630                        __ptext40 3A42                        __ptext32 3456  
                      __ptext24 3730                        __ptext16 39C4                        __ptext41 33E6  
                      __ptext33 3AFC                        __ptext25 38D2                        __ptext17 35E2  
                      __ptext50 39F0                        __ptext42 3B0C                        __ptext34 386C  
                      __ptext26 3904                        __ptext18 36E0                        __ptext51 3AE8  
                      __ptext43 3AD0                        __ptext35 2BA6                        __ptext27 3836  
                      __ptext19 0012                        __ptext52 352C                        __ptext44 3AB6  
                      __ptext36 26A2                        __ptext28 1BE8                        __ptext53 32DE  
                      __ptext45 3996                        __ptext37 27EC                        __ptext29 3134  
                      __ptext46 34C4                        __ptext38 377C                        __ptext55 0826  
                      __ptext47 3B1C                        __ptext39 3936                        __ptext56 3362  
                      __ptext48 3B26                        __ptext57 2930                        __ptext49 3B2E  
                      __ptext58 2FDA                        __ptext59 1960                __size_of_isupper 0032  
                      _avg_dist 0044                __size_of_pulse_e 002E                     ??_backwards 0083  
              __size_of_stepper 0088                __size_of_toupper 004C                   __size_of_echo 0544  
                 __size_of_atoi 0144                   __size_of_main 051C                   __size_of_dtoa 0248  
       stepper2_back@steps2_adj 00FD                   __size_of_trig 0102                   __size_of_xtoa 0236  
            __end_of_full_drive 1960                        _keypress 005F                        _temp_int 0173  
               ?_servoRotate180 0001                        int$flags 006E                        _vfprintf 3638  
                      main@Pole 0280                        _stepper2 2EDE                       printf@fmt 00ED  
   I2C_Master_Write@byteToWrite 0081                ___aomod@dividend 0080           __size_of_servoRotate0 0050  
                      min@array 0080                    ??_print_echo 00F9                  ?_number_deploy 00F9  
                     putch@data 0083                  _vfpfcnvrt$1125 00E3        __end_of_I2C_Master_Start 3B36  
      __end_of_I2C_Master_Write 3B26                      _INTCONbits 000FF2           ultrasonic_main@sensed 0102  
                      isalpha@c 0080                        isdigit@c 0080                       stepper2@i 0105  
                   _send_nibble 3AB6                        intlevel2 0000                   _LCD_SIZE_HORZ FDD0  
                      islower@c 0080                   _LCD_SIZE_VERT FDCF                        isspace@c 0080  
              ___lldiv@dividend 0080                     ??_send_byte 0082                        isupper@c 0080  
                _tires_deployed 0054              __end_of_print_echo 26A2                   ??_system_init 0080  
                  _servoRotate0 36E0                        printf@ap 00F7         __end_of_I2C_Master_Init 358C  
               ___aomod@divisor 0088         __end_of_I2C_Master_Read 3A1A         __end_of_I2C_Master_Wait 3AFC  
       __end_of_I2C_Master_Stop 3B2E                     ??_vfpfcnvrt 00CC                     lcdInst@data 0083  
               ___aomod@counter 0090                        stepper@i 0102       ultrasonic_main@steps2_adj 0106  
              ___lldiv@quotient 0088                        toupper@c 0086                     _SSPCON1bits 000FC6  
                   _SSPCON2bits 000FC5                     _timer_count 005C                    ___aodiv@sign 0091  
                  ___aomod@sign 0091            stepper@count_stepper 0100  
