

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Apr 08 13:23:38 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1,inline
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1,inline
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    71                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    78                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    79                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    80  0000                     
    81                           ; Version 2.05
    82                           ; Generated 20/12/2018 GMT
    83                           ; 
    84                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    85                           ; All rights reserved.
    86                           ; 
    87                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    88                           ; 
    89                           ; Redistribution and use in source and binary forms, with or without modification, are
    90                           ; permitted provided that the following conditions are met:
    91                           ; 
    92                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    93                           ;        conditions and the following disclaimer.
    94                           ; 
    95                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    96                           ;        of conditions and the following disclaimer in the documentation and/or other
    97                           ;        materials provided with the distribution.
    98                           ; 
    99                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   100                           ;        software without specific prior written permission.
   101                           ; 
   102                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   103                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   104                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   105                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   106                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   107                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   108                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   109                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   110                           ; 
   111                           ; 
   112                           ; Code-generator required, PIC18F4620 Definitions
   113                           ; 
   114                           ; SFR Addresses
   115  0000                     
   116                           	psect	idataCOMRAM
   117  003EEC                     __pidataCOMRAM:
   118                           	opt callstack 0
   119                           
   120                           ;initializer for _dists
   121  003EEC  0000               	dw	0
   122  003EEE  FFFF               	dw	65535
   123                           
   124                           ;initializer for _send
   125  003EF0  01                 	db	1
   126                           
   127                           	psect	mediumconst
   128  00FD9C                     __pmediumconst:
   129                           	opt callstack 0
   130  00FD9C  00                 	db	0
   131  00FD9D                     _keys:
   132                           	opt callstack 0
   133  00FD9D  31                 	db	49
   134  00FD9E  32                 	db	50
   135  00FD9F  33                 	db	51
   136  00FDA0  41                 	db	65
   137  00FDA1  34                 	db	52
   138  00FDA2  35                 	db	53
   139  00FDA3  36                 	db	54
   140  00FDA4  42                 	db	66
   141  00FDA5  37                 	db	55
   142  00FDA6  38                 	db	56
   143  00FDA7  39                 	db	57
   144  00FDA8  43                 	db	67
   145  00FDA9  2A                 	db	42
   146  00FDAA  30                 	db	48
   147  00FDAB  23                 	db	35
   148  00FDAC  44                 	db	68
   149  00FDAD  00                 	db	0
   150  00FDAE                     __end_of_keys:
   151                           	opt callstack 0
   152  00FDAE  50                 	db	80
   153  00FDAF                     __end_of_LCD_LINE4_ADDR:
   154                           	opt callstack 0
   155  00FDAF  10                 	db	16
   156  00FDB0                     __end_of_LCD_LINE3_ADDR:
   157                           	opt callstack 0
   158  00FDB0                     _LCD_LINE1_ADDR:
   159                           	opt callstack 0
   160  00FDB0  00                 	db	0
   161  00FDB1                     __end_of_LCD_LINE1_ADDR:
   162                           	opt callstack 0
   163  00FDB1                     _LCD_SIZE_VERT:
   164                           	opt callstack 0
   165  00FDB1  04                 	db	4
   166  00FDB2                     __end_of_LCD_SIZE_VERT:
   167                           	opt callstack 0
   168  00FDB2                     _LCD_SIZE_HORZ:
   169                           	opt callstack 0
   170  00FDB2  10                 	db	16
   171  00FDB3                     __end_of_LCD_SIZE_HORZ:
   172                           	opt callstack 0
   173  00FDB3  40                 	db	64
   174  00FDB4                     __end_of_LCD_LINE2_ADDR:
   175                           	opt callstack 0
   176  0000                     _EECON2	set	4007
   177  0000                     _EECON1bits	set	4006
   178  0000                     _EEADR	set	4009
   179  0000                     _EEDATA	set	4008
   180  0000                     _PORTAbits	set	3968
   181  0000                     _TRISAbits	set	3986
   182  0000                     _T1CON	set	4045
   183  0000                     _PORTB	set	3969
   184  0000                     _TMR1H	set	4047
   185  0000                     _TMR1L	set	4046
   186  0000                     _LATDbits	set	3980
   187  0000                     _INTCONbits	set	4082
   188  0000                     _LATBbits	set	3978
   189  0000                     _TRISBbits	set	3987
   190  0000                     _LATE	set	3981
   191  0000                     _TRISE	set	3990
   192  0000                     _LATC	set	3979
   193  0000                     _TRISC	set	3988
   194  0000                     _ADCON1	set	4033
   195  0000                     _TRISD	set	3989
   196  0000                     _LATD	set	3980
   197  0000                     _TRISA	set	3986
   198  0000                     _LATB	set	3978
   199  0000                     _TRISB	set	3987
   200  0000                     _LATAbits	set	3977
   201  0000                     _LATEbits	set	3981
   202  0000                     _LATCbits	set	3979
   203  0000                     _LATA	set	3977
   204  0000                     _SSPBUF	set	4041
   205  0000                     _SSPCON2bits	set	4037
   206  0000                     _SSPCON1	set	4038
   207  0000                     _SSPADD	set	4040
   208  0000                     _TRISCbits	set	3988
   209  0000                     _SSPCON1bits	set	4038
   210  0000                     _SSPCON2	set	4037
   211  0000                     _SSPSTAT	set	4039
   212  0000                     _GIE	set	32663
   213  0000                     _INT1IE	set	32643
   214  0000                     _RB2	set	31754
   215  0000                     _RB3	set	31755
   216  0000                     _RB4	set	31756
   217  0000                     _RB5	set	31757
   218  0000                     _RB6	set	31758
   219  0000                     _TMR1ON	set	32360
   220  0000                     _RB7	set	31759
   221  0000                     _INT1IF	set	32640
   222  0000                     _RBIE	set	32659
   223  0000                     _RBIF	set	32656
   224  0000                     _RD0	set	31768
   225  0000                     _RD1	set	31769
   226  0000                     _RC2	set	31762
   227  0000                     _RC1	set	31761
   228  00FDB4                     STR_40:
   229  00FDB4  50                 	db	80	;'P'
   230  00FDB5  25                 	db	37
   231  00FDB6  64                 	db	100	;'d'
   232  00FDB7  20                 	db	32
   233  00FDB8  44                 	db	68	;'D'
   234  00FDB9  65                 	db	101	;'e'
   235  00FDBA  70                 	db	112	;'p'
   236  00FDBB  3A                 	db	58	;':'
   237  00FDBC  25                 	db	37
   238  00FDBD  64                 	db	100	;'d'
   239  00FDBE  2C                 	db	44
   240  00FDBF  54                 	db	84	;'T'
   241  00FDC0  6F                 	db	111	;'o'
   242  00FDC1  74                 	db	116	;'t'
   243  00FDC2  3A                 	db	58	;':'
   244  00FDC3  25                 	db	37
   245  00FDC4  64                 	db	100	;'d'
   246  00FDC5  00                 	db	0
   247  00FDC6                     STR_30:
   248  00FDC6  20                 	db	32
   249  00FDC7  20                 	db	32
   250  00FDC8  20                 	db	32
   251  00FDC9  20                 	db	32
   252  00FDCA  20                 	db	32
   253  00FDCB  30                 	db	48	;'0'
   254  00FDCC  2D                 	db	45
   255  00FDCD  4D                 	db	77	;'M'
   256  00FDCE  65                 	db	101	;'e'
   257  00FDCF  6E                 	db	110	;'n'
   258  00FDD0  75                 	db	117	;'u'
   259  00FDD1  20                 	db	32
   260  00FDD2  20                 	db	32
   261  00FDD3  20                 	db	32
   262  00FDD4  20                 	db	32
   263  00FDD5  20                 	db	32
   264  00FDD6  00                 	db	0
   265  00FDD7                     STR_47:
   266  00FDD7  3C                 	db	60	;'<'
   267  00FDD8  2A                 	db	42
   268  00FDD9  20                 	db	32
   269  00FDDA  20                 	db	32
   270  00FDDB  20                 	db	32
   271  00FDDC  30                 	db	48	;'0'
   272  00FDDD  2D                 	db	45
   273  00FDDE  4D                 	db	77	;'M'
   274  00FDDF  65                 	db	101	;'e'
   275  00FDE0  6E                 	db	110	;'n'
   276  00FDE1  75                 	db	117	;'u'
   277  00FDE2  20                 	db	32
   278  00FDE3  20                 	db	32
   279  00FDE4  20                 	db	32
   280  00FDE5  20                 	db	32
   281  00FDE6  20                 	db	32
   282  00FDE7  00                 	db	0
   283  00FDE8                     STR_10:
   284  00FDE8  44                 	db	68	;'D'
   285  00FDE9  69                 	db	105	;'i'
   286  00FDEA  73                 	db	115	;'s'
   287  00FDEB  74                 	db	116	;'t'
   288  00FDEC  31                 	db	49	;'1'
   289  00FDED  3D                 	db	61	;'='
   290  00FDEE  25                 	db	37
   291  00FDEF  64                 	db	100	;'d'
   292  00FDF0  2C                 	db	44
   293  00FDF1  41                 	db	65	;'A'
   294  00FDF2  76                 	db	118	;'v'
   295  00FDF3  67                 	db	103	;'g'
   296  00FDF4  3D                 	db	61	;'='
   297  00FDF5  25                 	db	37
   298  00FDF6  64                 	db	100	;'d'
   299  00FDF7  20                 	db	32
   300  00FDF8  00                 	db	0
   301  00FDF9                     STR_16:
   302  00FDF9  44                 	db	68	;'D'
   303  00FDFA  69                 	db	105	;'i'
   304  00FDFB  73                 	db	115	;'s'
   305  00FDFC  74                 	db	116	;'t'
   306  00FDFD  34                 	db	52	;'4'
   307  00FDFE  3D                 	db	61	;'='
   308  00FDFF  25                 	db	37
   309  00FE00  64                 	db	100	;'d'
   310  00FE01  2C                 	db	44
   311  00FE02  41                 	db	65	;'A'
   312  00FE03  76                 	db	118	;'v'
   313  00FE04  67                 	db	103	;'g'
   314  00FE05  3D                 	db	61	;'='
   315  00FE06  25                 	db	37
   316  00FE07  64                 	db	100	;'d'
   317  00FE08  20                 	db	32
   318  00FE09  00                 	db	0
   319  00FE0A                     STR_36:
   320  00FE0A  20                 	db	32
   321  00FE0B  20                 	db	32
   322  00FE0C  20                 	db	32
   323  00FE0D  20                 	db	32
   324  00FE0E  20                 	db	32
   325  00FE0F  30                 	db	48	;'0'
   326  00FE10  2D                 	db	45
   327  00FE11  4D                 	db	77	;'M'
   328  00FE12  65                 	db	101	;'e'
   329  00FE13  6E                 	db	110	;'n'
   330  00FE14  75                 	db	117	;'u'
   331  00FE15  20                 	db	32
   332  00FE16  20                 	db	32
   333  00FE17  20                 	db	32
   334  00FE18  23                 	db	35
   335  00FE19  3E                 	db	62	;'>'
   336  00FE1A  00                 	db	0
   337  00FE1B                     STR_39:
   338  00FE1B  3C                 	db	60	;'<'
   339  00FE1C  2A                 	db	42
   340  00FE1D  20                 	db	32
   341  00FE1E  20                 	db	32
   342  00FE1F  20                 	db	32
   343  00FE20  30                 	db	48	;'0'
   344  00FE21  2D                 	db	45
   345  00FE22  4D                 	db	77	;'M'
   346  00FE23  65                 	db	101	;'e'
   347  00FE24  6E                 	db	110	;'n'
   348  00FE25  75                 	db	117	;'u'
   349  00FE26  20                 	db	32
   350  00FE27  20                 	db	32
   351  00FE28  20                 	db	32
   352  00FE29  23                 	db	35
   353  00FE2A  3E                 	db	62	;'>'
   354  00FE2B  00                 	db	0
   355  00FE2C                     STR_58:
   356  00FE2C  64                 	db	100	;'d'
   357  00FE2D  69                 	db	105	;'i'
   358  00FE2E  73                 	db	115	;'s'
   359  00FE2F  74                 	db	116	;'t'
   360  00FE30  20                 	db	32
   361  00FE31  70                 	db	112	;'p'
   362  00FE32  5B                 	db	91	;'['
   363  00FE33  25                 	db	37
   364  00FE34  64                 	db	100	;'d'
   365  00FE35  5D                 	db	93	;']'
   366  00FE36  3A                 	db	58	;':'
   367  00FE37  25                 	db	37
   368  00FE38  64                 	db	100	;'d'
   369  00FE39  2C                 	db	44
   370  00FE3A  25                 	db	37
   371  00FE3B  64                 	db	100	;'d'
   372  00FE3C  00                 	db	0
   373  00FE3D                     STR_22:
   374  00FE3D  64                 	db	100	;'d'
   375  00FE3E  65                 	db	101	;'e'
   376  00FE3F  74                 	db	116	;'t'
   377  00FE40  2C                 	db	44
   378  00FE41  25                 	db	37
   379  00FE42  64                 	db	100	;'d'
   380  00FE43  2C                 	db	44
   381  00FE44  20                 	db	32
   382  00FE45  74                 	db	116	;'t'
   383  00FE46  63                 	db	99	;'c'
   384  00FE47  6E                 	db	110	;'n'
   385  00FE48  74                 	db	116	;'t'
   386  00FE49  20                 	db	32
   387  00FE4A  25                 	db	37
   388  00FE4B  64                 	db	100	;'d'
   389  00FE4C  00                 	db	0
   390  00FE4D                     STR_12:
   391  00FE4D  44                 	db	68	;'D'
   392  00FE4E  69                 	db	105	;'i'
   393  00FE4F  73                 	db	115	;'s'
   394  00FE50  74                 	db	116	;'t'
   395  00FE51  32                 	db	50	;'2'
   396  00FE52  3D                 	db	61	;'='
   397  00FE53  25                 	db	37
   398  00FE54  64                 	db	100	;'d'
   399  00FE55  2C                 	db	44
   400  00FE56  41                 	db	65	;'A'
   401  00FE57  76                 	db	118	;'v'
   402  00FE58  67                 	db	103	;'g'
   403  00FE59  3D                 	db	61	;'='
   404  00FE5A  25                 	db	37
   405  00FE5B  64                 	db	100	;'d'
   406  00FE5C  00                 	db	0
   407  00FE5D                     STR_14:
   408  00FE5D  44                 	db	68	;'D'
   409  00FE5E  69                 	db	105	;'i'
   410  00FE5F  73                 	db	115	;'s'
   411  00FE60  74                 	db	116	;'t'
   412  00FE61  33                 	db	51	;'3'
   413  00FE62  3D                 	db	61	;'='
   414  00FE63  25                 	db	37
   415  00FE64  64                 	db	100	;'d'
   416  00FE65  2C                 	db	44
   417  00FE66  41                 	db	65	;'A'
   418  00FE67  76                 	db	118	;'v'
   419  00FE68  67                 	db	103	;'g'
   420  00FE69  3D                 	db	61	;'='
   421  00FE6A  25                 	db	37
   422  00FE6B  64                 	db	100	;'d'
   423  00FE6C  00                 	db	0
   424  00FE6D                     STR_25:
   425  00FE6D  33                 	db	51	;'3'
   426  00FE6E  20                 	db	32
   427  00FE6F  2D                 	db	45
   428  00FE70  20                 	db	32
   429  00FE71  44                 	db	68	;'D'
   430  00FE72  61                 	db	97	;'a'
   431  00FE73  74                 	db	116	;'t'
   432  00FE74  65                 	db	101	;'e'
   433  00FE75  26                 	db	38
   434  00FE76  54                 	db	84	;'T'
   435  00FE77  69                 	db	105	;'i'
   436  00FE78  6D                 	db	109	;'m'
   437  00FE79  65                 	db	101	;'e'
   438  00FE7A  20                 	db	32
   439  00FE7B  00                 	db	0
   440  00FE7C                     STR_41:
   441  00FE7C  44                 	db	68	;'D'
   442  00FE7D  69                 	db	105	;'i'
   443  00FE7E  73                 	db	115	;'s'
   444  00FE7F  74                 	db	116	;'t'
   445  00FE80  54                 	db	84	;'T'
   446  00FE81  6F                 	db	111	;'o'
   447  00FE82  53                 	db	83	;'S'
   448  00FE83  74                 	db	116	;'t'
   449  00FE84  61                 	db	97	;'a'
   450  00FE85  72                 	db	114	;'r'
   451  00FE86  74                 	db	116	;'t'
   452  00FE87  3A                 	db	58	;':'
   453  00FE88  25                 	db	37
   454  00FE89  64                 	db	100	;'d'
   455  00FE8A  00                 	db	0
   456  00FE8B                     STR_29:
   457  00FE8B  4D                 	db	77	;'M'
   458  00FE8C  61                 	db	97	;'a'
   459  00FE8D  63                 	db	99	;'c'
   460  00FE8E  68                 	db	104	;'h'
   461  00FE8F  69                 	db	105	;'i'
   462  00FE90  6E                 	db	110	;'n'
   463  00FE91  65                 	db	101	;'e'
   464  00FE92  20                 	db	32
   465  00FE93  49                 	db	73	;'I'
   466  00FE94  6E                 	db	110	;'n'
   467  00FE95  20                 	db	32
   468  00FE96  55                 	db	85	;'U'
   469  00FE97  73                 	db	115	;'s'
   470  00FE98  65                 	db	101	;'e'
   471  00FE99  00                 	db	0
   472  00FE9A                     STR_49:
   473  00FE9A  25                 	db	37
   474  00FE9B  30                 	db	48	;'0'
   475  00FE9C  32                 	db	50	;'2'
   476  00FE9D  78                 	db	120	;'x'
   477  00FE9E  2F                 	db	47
   478  00FE9F  25                 	db	37
   479  00FEA0  30                 	db	48	;'0'
   480  00FEA1  32                 	db	50	;'2'
   481  00FEA2  78                 	db	120	;'x'
   482  00FEA3  2F                 	db	47
   483  00FEA4  25                 	db	37
   484  00FEA5  30                 	db	48	;'0'
   485  00FEA6  32                 	db	50	;'2'
   486  00FEA7  78                 	db	120	;'x'
   487  00FEA8  00                 	db	0
   488  00FEA9                     STR_50:
   489  00FEA9  25                 	db	37
   490  00FEAA  30                 	db	48	;'0'
   491  00FEAB  32                 	db	50	;'2'
   492  00FEAC  78                 	db	120	;'x'
   493  00FEAD  3A                 	db	58	;':'
   494  00FEAE  25                 	db	37
   495  00FEAF  30                 	db	48	;'0'
   496  00FEB0  32                 	db	50	;'2'
   497  00FEB1  78                 	db	120	;'x'
   498  00FEB2  3A                 	db	58	;':'
   499  00FEB3  25                 	db	37
   500  00FEB4  30                 	db	48	;'0'
   501  00FEB5  32                 	db	50	;'2'
   502  00FEB6  78                 	db	120	;'x'
   503  00FEB7  00                 	db	0
   504  00FEB8                     STR_59:
   505  00FEB8  70                 	db	112	;'p'
   506  00FEB9  5B                 	db	91	;'['
   507  00FEBA  25                 	db	37
   508  00FEBB  64                 	db	100	;'d'
   509  00FEBC  5D                 	db	93	;']'
   510  00FEBD  20                 	db	32
   511  00FEBE  66                 	db	102	;'f'
   512  00FEBF  73                 	db	115	;'s'
   513  00FEC0  20                 	db	32
   514  00FEC1  3A                 	db	58	;':'
   515  00FEC2  20                 	db	32
   516  00FEC3  25                 	db	37
   517  00FEC4  64                 	db	100	;'d'
   518  00FEC5  00                 	db	0
   519  00FEC6                     STR_38:
   520  00FEC6  4E                 	db	78	;'N'
   521  00FEC7  6F                 	db	111	;'o'
   522  00FEC8  2E                 	db	46
   523  00FEC9  20                 	db	32
   524  00FECA  50                 	db	80	;'P'
   525  00FECB  6F                 	db	111	;'o'
   526  00FECC  6C                 	db	108	;'l'
   527  00FECD  65                 	db	101	;'e'
   528  00FECE  73                 	db	115	;'s'
   529  00FECF  3A                 	db	58	;':'
   530  00FED0  20                 	db	32
   531  00FED1  25                 	db	37
   532  00FED2  64                 	db	100	;'d'
   533  00FED3  00                 	db	0
   534  00FED4                     STR_37:
   535  00FED4  4E                 	db	78	;'N'
   536  00FED5  6F                 	db	111	;'o'
   537  00FED6  2E                 	db	46
   538  00FED7  20                 	db	32
   539  00FED8  54                 	db	84	;'T'
   540  00FED9  69                 	db	105	;'i'
   541  00FEDA  72                 	db	114	;'r'
   542  00FEDB  65                 	db	101	;'e'
   543  00FEDC  73                 	db	115	;'s'
   544  00FEDD  3A                 	db	58	;':'
   545  00FEDE  20                 	db	32
   546  00FEDF  25                 	db	37
   547  00FEE0  64                 	db	100	;'d'
   548  00FEE1  00                 	db	0
   549  00FEE2                     STR_7:
   550  00FEE2  53                 	db	83	;'S'
   551  00FEE3  74                 	db	116	;'t'
   552  00FEE4  65                 	db	101	;'e'
   553  00FEE5  70                 	db	112	;'p'
   554  00FEE6  20                 	db	32
   555  00FEE7  73                 	db	115	;'s'
   556  00FEE8  70                 	db	112	;'p'
   557  00FEE9  65                 	db	101	;'e'
   558  00FEEA  65                 	db	101	;'e'
   559  00FEEB  64                 	db	100	;'d'
   560  00FEEC  20                 	db	32
   561  00FEED  25                 	db	37
   562  00FEEE  64                 	db	100	;'d'
   563  00FEEF  00                 	db	0
   564  00FEF0                     STR_19:
   565  00FEF0  62                 	db	98	;'b'
   566  00FEF1  72                 	db	114	;'r'
   567  00FEF2  65                 	db	101	;'e'
   568  00FEF3  61                 	db	97	;'a'
   569  00FEF4  6B                 	db	107	;'k'
   570  00FEF5  20                 	db	32
   571  00FEF6  68                 	db	104	;'h'
   572  00FEF7  65                 	db	101	;'e'
   573  00FEF8  72                 	db	114	;'r'
   574  00FEF9  65                 	db	101	;'e'
   575  00FEFA  65                 	db	101	;'e'
   576  00FEFB  3F                 	db	63	;'?'
   577  00FEFC  00                 	db	0
   578  00FEFD                     STR_54:
   579  00FEFD  6D                 	db	109	;'m'
   580  00FEFE  6F                 	db	111	;'o'
   581  00FEFF  72                 	db	114	;'r'
   582  00FF00  65                 	db	101	;'e'
   583  00FF01  20                 	db	32
   584  00FF02  77                 	db	119	;'w'
   585  00FF03  61                 	db	97	;'a'
   586  00FF04  69                 	db	105	;'i'
   587  00FF05  74                 	db	116	;'t'
   588  00FF06  69                 	db	105	;'i'
   589  00FF07  6E                 	db	110	;'n'
   590  00FF08  67                 	db	103	;'g'
   591  00FF09  00                 	db	0
   592  00FF0A                     STR_2:
   593  00FF0A  53                 	db	83	;'S'
   594  00FF0B  74                 	db	116	;'t'
   595  00FF0C  65                 	db	101	;'e'
   596  00FF0D  70                 	db	112	;'p'
   597  00FF0E  70                 	db	112	;'p'
   598  00FF0F  65                 	db	101	;'e'
   599  00FF10  72                 	db	114	;'r'
   600  00FF11  20                 	db	32
   601  00FF12  64                 	db	100	;'d'
   602  00FF13  6F                 	db	111	;'o'
   603  00FF14  6E                 	db	110	;'n'
   604  00FF15  65                 	db	101	;'e'
   605  00FF16  00                 	db	0
   606  00FF17                     STR_48:
   607  00FF17  44                 	db	68	;'D'
   608  00FF18  41                 	db	65	;'A'
   609  00FF19  54                 	db	84	;'T'
   610  00FF1A  45                 	db	69	;'E'
   611  00FF1B  20                 	db	32
   612  00FF1C  26                 	db	38
   613  00FF1D  20                 	db	32
   614  00FF1E  54                 	db	84	;'T'
   615  00FF1F  49                 	db	73	;'I'
   616  00FF20  4D                 	db	77	;'M'
   617  00FF21  45                 	db	69	;'E'
   618  00FF22  00                 	db	0
   619  00FF23                     STR_21:
   620  00FF23  73                 	db	115	;'s'
   621  00FF24  74                 	db	116	;'t'
   622  00FF25  65                 	db	101	;'e'
   623  00FF26  70                 	db	112	;'p'
   624  00FF27  73                 	db	115	;'s'
   625  00FF28  61                 	db	97	;'a'
   626  00FF29  64                 	db	100	;'d'
   627  00FF2A  6A                 	db	106	;'j'
   628  00FF2B  20                 	db	32
   629  00FF2C  25                 	db	37
   630  00FF2D  64                 	db	100	;'d'
   631  00FF2E  00                 	db	0
   632  00FF2F                     STR_60:
   633  00FF2F  61                 	db	97	;'a'
   634  00FF30  76                 	db	118	;'v'
   635  00FF31  67                 	db	103	;'g'
   636  00FF32  20                 	db	32
   637  00FF33  64                 	db	100	;'d'
   638  00FF34  69                 	db	105	;'i'
   639  00FF35  73                 	db	115	;'s'
   640  00FF36  74                 	db	116	;'t'
   641  00FF37  20                 	db	32
   642  00FF38  25                 	db	37
   643  00FF39  64                 	db	100	;'d'
   644  00FF3A  00                 	db	0
   645  00FF3B                     STR_42:
   646  00FF3B  44                 	db	68	;'D'
   647  00FF3C  69                 	db	105	;'i'
   648  00FF3D  73                 	db	115	;'s'
   649  00FF3E  74                 	db	116	;'t'
   650  00FF3F  54                 	db	84	;'T'
   651  00FF40  6F                 	db	111	;'o'
   652  00FF41  43                 	db	67	;'C'
   653  00FF42  4C                 	db	76	;'L'
   654  00FF43  3A                 	db	58	;':'
   655  00FF44  25                 	db	37
   656  00FF45  64                 	db	100	;'d'
   657  00FF46  00                 	db	0
   658  00FF47                     STR_24:
   659  00FF47  32                 	db	50	;'2'
   660  00FF48  20                 	db	32
   661  00FF49  2D                 	db	45
   662  00FF4A  20                 	db	32
   663  00FF4B  53                 	db	83	;'S'
   664  00FF4C  75                 	db	117	;'u'
   665  00FF4D  6D                 	db	109	;'m'
   666  00FF4E  6D                 	db	109	;'m'
   667  00FF4F  61                 	db	97	;'a'
   668  00FF50  72                 	db	114	;'r'
   669  00FF51  79                 	db	121	;'y'
   670  00FF52  00                 	db	0
   671  00FF53                     STR_61:
   672  00FF53  70                 	db	112	;'p'
   673  00FF54  6F                 	db	111	;'o'
   674  00FF55  6C                 	db	108	;'l'
   675  00FF56  65                 	db	101	;'e'
   676  00FF57  73                 	db	115	;'s'
   677  00FF58  20                 	db	32
   678  00FF59  64                 	db	100	;'d'
   679  00FF5A  20                 	db	32
   680  00FF5B  25                 	db	37
   681  00FF5C  64                 	db	100	;'d'
   682  00FF5D  00                 	db	0
   683  00FF5E                     STR_20:
   684  00FF5E  6D                 	db	109	;'m'
   685  00FF5F  69                 	db	105	;'i'
   686  00FF60  6E                 	db	110	;'n'
   687  00FF61  69                 	db	105	;'i'
   688  00FF62  6D                 	db	109	;'m'
   689  00FF63  75                 	db	117	;'u'
   690  00FF64  6D                 	db	109	;'m'
   691  00FF65  20                 	db	32
   692  00FF66  25                 	db	37
   693  00FF67  64                 	db	100	;'d'
   694  00FF68  00                 	db	0
   695  00FF69                     STR_62:
   696  00FF69  70                 	db	112	;'p'
   697  00FF6A  6F                 	db	111	;'o'
   698  00FF6B  6C                 	db	108	;'l'
   699  00FF6C  65                 	db	101	;'e'
   700  00FF6D  73                 	db	115	;'s'
   701  00FF6E  20                 	db	32
   702  00FF6F  64                 	db	100	;'d'
   703  00FF70  6F                 	db	111	;'o'
   704  00FF71  6E                 	db	110	;'n'
   705  00FF72  65                 	db	101	;'e'
   706  00FF73  00                 	db	0
   707  00FF74                     STR_3:
   708  00FF74  53                 	db	83	;'S'
   709  00FF75  65                 	db	101	;'e'
   710  00FF76  72                 	db	114	;'r'
   711  00FF77  76                 	db	118	;'v'
   712  00FF78  6F                 	db	111	;'o'
   713  00FF79  20                 	db	32
   714  00FF7A  64                 	db	100	;'d'
   715  00FF7B  6F                 	db	111	;'o'
   716  00FF7C  6E                 	db	110	;'n'
   717  00FF7D  65                 	db	101	;'e'
   718  00FF7E  00                 	db	0
   719  00FF7F                     STR_11:
   720  00FF7F  44                 	db	68	;'D'
   721  00FF80  69                 	db	105	;'i'
   722  00FF81  73                 	db	115	;'s'
   723  00FF82  74                 	db	116	;'t'
   724  00FF83  31                 	db	49	;'1'
   725  00FF84  20                 	db	32
   726  00FF85  3D                 	db	61	;'='
   727  00FF86  20                 	db	32
   728  00FF87  58                 	db	88	;'X'
   729  00FF88  00                 	db	0
   730  00FF89                     STR_13:
   731  00FF89  44                 	db	68	;'D'
   732  00FF8A  69                 	db	105	;'i'
   733  00FF8B  73                 	db	115	;'s'
   734  00FF8C  74                 	db	116	;'t'
   735  00FF8D  32                 	db	50	;'2'
   736  00FF8E  20                 	db	32
   737  00FF8F  3D                 	db	61	;'='
   738  00FF90  20                 	db	32
   739  00FF91  58                 	db	88	;'X'
   740  00FF92  00                 	db	0
   741  00FF93                     STR_15:
   742  00FF93  44                 	db	68	;'D'
   743  00FF94  69                 	db	105	;'i'
   744  00FF95  73                 	db	115	;'s'
   745  00FF96  74                 	db	116	;'t'
   746  00FF97  33                 	db	51	;'3'
   747  00FF98  20                 	db	32
   748  00FF99  3D                 	db	61	;'='
   749  00FF9A  20                 	db	32
   750  00FF9B  58                 	db	88	;'X'
   751  00FF9C  00                 	db	0
   752  00FF9D                     STR_17:
   753  00FF9D  44                 	db	68	;'D'
   754  00FF9E  69                 	db	105	;'i'
   755  00FF9F  73                 	db	115	;'s'
   756  00FFA0  74                 	db	116	;'t'
   757  00FFA1  34                 	db	52	;'4'
   758  00FFA2  20                 	db	32
   759  00FFA3  3D                 	db	61	;'='
   760  00FFA4  20                 	db	32
   761  00FFA5  58                 	db	88	;'X'
   762  00FFA6  00                 	db	0
   763  00FFA7                     STR_56:
   764  00FFA7  64                 	db	100	;'d'
   765  00FFA8  75                 	db	117	;'u'
   766  00FFA9  6E                 	db	110	;'n'
   767  00FFAA  20                 	db	32
   768  00FFAB  62                 	db	98	;'b'
   769  00FFAC  72                 	db	114	;'r'
   770  00FFAD  65                 	db	101	;'e'
   771  00FFAE  61                 	db	97	;'a'
   772  00FFAF  6B                 	db	107	;'k'
   773  00FFB0  00                 	db	0
   774  00FFB1                     STR_63:
   775  00FFB1  62                 	db	98	;'b'
   776  00FFB2  61                 	db	97	;'a'
   777  00FFB3  63                 	db	99	;'c'
   778  00FFB4  6B                 	db	107	;'k'
   779  00FFB5  77                 	db	119	;'w'
   780  00FFB6  61                 	db	97	;'a'
   781  00FFB7  72                 	db	114	;'r'
   782  00FFB8  64                 	db	100	;'d'
   783  00FFB9  73                 	db	115	;'s'
   784  00FFBA  00                 	db	0
   785  00FFBB                     STR_55:
   786  00FFBB  64                 	db	100	;'d'
   787  00FFBC  6F                 	db	111	;'o'
   788  00FFBD  6E                 	db	110	;'n'
   789  00FFBE  65                 	db	101	;'e'
   790  00FFBF  20                 	db	32
   791  00FFC0  77                 	db	119	;'w'
   792  00FFC1  61                 	db	97	;'a'
   793  00FFC2  69                 	db	105	;'i'
   794  00FFC3  74                 	db	116	;'t'
   795  00FFC4  00                 	db	0
   796  00FFC5                     STR_23:
   797  00FFC5  31                 	db	49	;'1'
   798  00FFC6  20                 	db	32
   799  00FFC7  2D                 	db	45
   800  00FFC8  20                 	db	32
   801  00FFC9  53                 	db	83	;'S'
   802  00FFCA  74                 	db	116	;'t'
   803  00FFCB  61                 	db	97	;'a'
   804  00FFCC  72                 	db	114	;'r'
   805  00FFCD  74                 	db	116	;'t'
   806  00FFCE  00                 	db	0
   807  00FFCF                     STR_5:
   808  00FFCF  73                 	db	115	;'s'
   809  00FFD0  74                 	db	116	;'t'
   810  00FFD1  65                 	db	101	;'e'
   811  00FFD2  70                 	db	112	;'p'
   812  00FFD3  70                 	db	112	;'p'
   813  00FFD4  70                 	db	112	;'p'
   814  00FFD5  20                 	db	32
   815  00FFD6  25                 	db	37
   816  00FFD7  64                 	db	100	;'d'
   817  00FFD8  00                 	db	0
   818  00FFD9                     STR_1:
   819  00FFD9  63                 	db	99	;'c'
   820  00FFDA  6E                 	db	110	;'n'
   821  00FFDB  74                 	db	116	;'t'
   822  00FFDC  20                 	db	32
   823  00FFDD  69                 	db	105	;'i'
   824  00FFDE  73                 	db	115	;'s'
   825  00FFDF  20                 	db	32
   826  00FFE0  25                 	db	37
   827  00FFE1  64                 	db	100	;'d'
   828  00FFE2  00                 	db	0
   829  00FFE3                     STR_31:
   830  00FFE3  4F                 	db	79	;'O'
   831  00FFE4  70                 	db	112	;'p'
   832  00FFE5  20                 	db	32
   833  00FFE6  54                 	db	84	;'T'
   834  00FFE7  69                 	db	105	;'i'
   835  00FFE8  6D                 	db	109	;'m'
   836  00FFE9  65                 	db	101	;'e'
   837  00FFEA  3A                 	db	58	;':'
   838  00FFEB  00                 	db	0
   839  00FFEC                     STR_18:
   840  00FFEC  6F                 	db	111	;'o'
   841  00FFED  72                 	db	114	;'r'
   842  00FFEE  20                 	db	32
   843  00FFEF  68                 	db	104	;'h'
   844  00FFF0  65                 	db	101	;'e'
   845  00FFF1  72                 	db	114	;'r'
   846  00FFF2  65                 	db	101	;'e'
   847  00FFF3  00                 	db	0
   848  00FFF4                     STR_6:
   849  00FFF4  73                 	db	115	;'s'
   850  00FFF5  74                 	db	116	;'t'
   851  00FFF6  65                 	db	101	;'e'
   852  00FFF7  70                 	db	112	;'p'
   853  00FFF8  31                 	db	49	;'1'
   854  00FFF9  00                 	db	0
   855  00FFFA                     STR_9:
   856  00FFFA  77                 	db	119	;'w'
   857  00FFFB  68                 	db	104	;'h'
   858  00FFFC  61                 	db	97	;'a'
   859  00FFFD  74                 	db	116	;'t'
   860  00FFFE  00                 	db	0
   861  0000                     
   862                           ; #config settings
   863  00FFFF  00                 	db	0	; dummy byte at the end
   864  0000                     
   865                           	psect	cinit
   866  003A3A                     __pcinit:
   867                           	opt callstack 0
   868  003A3A                     start_initialization:
   869                           	opt callstack 0
   870  003A3A                     __initialization:
   871                           	opt callstack 0
   872                           
   873                           ; Initialize objects allocated to COMRAM (5 bytes)
   874                           ; load TBLPTR registers with __pidataCOMRAM
   875  003A3A  0EEC               	movlw	low __pidataCOMRAM
   876  003A3C  6EF6               	movwf	tblptrl,c
   877  003A3E  0E3E               	movlw	high __pidataCOMRAM
   878  003A40  6EF7               	movwf	tblptrh,c
   879  003A42  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   880  003A44  6EF8               	movwf	tblptru,c
   881  003A46  EE00  F069         	lfsr	0,__pdataCOMRAM
   882  003A4A  EE10 F005          	lfsr	1,5
   883  003A4E                     copy_data0:
   884  003A4E  0009               	tblrd		*+
   885  003A50  CFF5 FFEE          	movff	tablat,postinc0
   886  003A54  50E5               	movf	postdec1,w,c
   887  003A56  50E1               	movf	fsr1l,w,c
   888  003A58  E1FA               	bnz	copy_data0
   889                           
   890                           ; Clear objects allocated to BANK2 (160 bytes)
   891  003A5A  EE02  F000         	lfsr	0,__pbssBANK2
   892  003A5E  0EA0               	movlw	160
   893  003A60                     clear_0:
   894  003A60  6AEE               	clrf	postinc0,c
   895  003A62  06E8               	decf	wreg,f,c
   896  003A64  E1FD               	bnz	clear_0
   897                           
   898                           ; Clear objects allocated to BANK1 (28 bytes)
   899  003A66  EE01  F0CA         	lfsr	0,__pbssBANK1
   900  003A6A  0E1C               	movlw	28
   901  003A6C                     clear_1:
   902  003A6C  6AEE               	clrf	postinc0,c
   903  003A6E  06E8               	decf	wreg,f,c
   904  003A70  E1FD               	bnz	clear_1
   905                           
   906                           ; Clear objects allocated to BANK0 (1 bytes)
   907  003A72  0100               	movlb	0
   908  003A74  6BFF               	clrf	__pbssBANK0& (0+255),b
   909                           
   910                           ; Clear objects allocated to COMRAM (49 bytes)
   911  003A76  EE00  F038         	lfsr	0,__pbssCOMRAM
   912  003A7A  0E31               	movlw	49
   913  003A7C                     clear_2:
   914  003A7C  6AEE               	clrf	postinc0,c
   915  003A7E  06E8               	decf	wreg,f,c
   916  003A80  E1FD               	bnz	clear_2
   917  003A82                     end_of_initialization:
   918                           	opt callstack 0
   919  003A82                     __end_of__initialization:
   920                           	opt callstack 0
   921  003A82  906E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   922  003A84  926E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   923  003A86  0E00               	movlw	low (__Lmediumconst shr (0+16))
   924  003A88  6EF8               	movwf	tblptru,c
   925  003A8A  0100               	movlb	0
   926  003A8C  EF13  F004         	goto	_main	;jump to C main() function
   927                           
   928                           	psect	bssCOMRAM
   929  000038                     __pbssCOMRAM:
   930                           	opt callstack 0
   931  000038                     _sum:
   932                           	opt callstack 0
   933  000038                     	ds	8
   934  000040                     _sumf:
   935                           	opt callstack 0
   936  000040                     	ds	4
   937  000044                     _avg_dist:
   938                           	opt callstack 0
   939  000044                     	ds	4
   940  000048                     _nout:
   941                           	opt callstack 0
   942  000048                     	ds	2
   943  00004A                     _width:
   944                           	opt callstack 0
   945  00004A                     	ds	2
   946  00004C                     _prec:
   947                           	opt callstack 0
   948  00004C                     	ds	2
   949  00004E                     _flags:
   950                           	opt callstack 0
   951  00004E                     	ds	2
   952  000050                     _meas:
   953                           	opt callstack 0
   954  000050                     	ds	2
   955  000052                     _poles_detected:
   956                           	opt callstack 0
   957  000052                     	ds	2
   958  000054                     _tires_deployed:
   959                           	opt callstack 0
   960  000054                     	ds	2
   961  000056                     _tick:
   962                           	opt callstack 0
   963  000056                     	ds	2
   964  000058                     _sens:
   965                           	opt callstack 0
   966  000058                     	ds	2
   967  00005A                     _b:
   968                           	opt callstack 0
   969  00005A                     	ds	2
   970  00005C                     _timer_count:
   971                           	opt callstack 0
   972  00005C                     	ds	2
   973  00005E                     _data:
   974                           	opt callstack 0
   975  00005E                     	ds	1
   976  00005F                     _keypress:
   977                           	opt callstack 0
   978  00005F                     	ds	1
   979  000060                     _counter:
   980                           	opt callstack 0
   981  000060                     	ds	1
   982  000061                     _a:
   983                           	opt callstack 0
   984  000061                     	ds	8
   985                           
   986                           	psect	dataCOMRAM
   987  000069                     __pdataCOMRAM:
   988                           	opt callstack 0
   989  000069                     _dists:
   990                           	opt callstack 0
   991  000069                     	ds	4
   992  00006D                     _send:
   993                           	opt callstack 0
   994  00006D                     	ds	1
   995                           
   996                           	psect	bssBANK0
   997  0000FF                     __pbssBANK0:
   998                           	opt callstack 0
   999  0000FF                     _temp:
  1000                           	opt callstack 0
  1001  0000FF                     	ds	1
  1002                           
  1003                           	psect	bssBANK1
  1004  0001CA                     __pbssBANK1:
  1005                           	opt callstack 0
  1006  0001CA                     _prev_dist_final:
  1007                           	opt callstack 0
  1008  0001CA                     	ds	8
  1009  0001D2                     _time:
  1010                           	opt callstack 0
  1011  0001D2                     	ds	7
  1012  0001D9                     _pressed:
  1013                           	opt callstack 0
  1014  0001D9                     	ds	2
  1015  0001DB                     _i:
  1016                           	opt callstack 0
  1017  0001DB                     	ds	2
  1018  0001DD                     _disp:
  1019                           	opt callstack 0
  1020  0001DD                     	ds	2
  1021  0001DF                     _state:
  1022                           	opt callstack 0
  1023  0001DF                     	ds	2
  1024  0001E1                     _temp_int:
  1025                           	opt callstack 0
  1026  0001E1                     	ds	2
  1027  0001E3                     _cnt:
  1028                           	opt callstack 0
  1029  0001E3                     	ds	2
  1030  0001E5                     _key_was_pressed:
  1031                           	opt callstack 0
  1032  0001E5                     	ds	1
  1033                           
  1034                           	psect	bssBANK2
  1035  000200                     __pbssBANK2:
  1036                           	opt callstack 0
  1037  000200                     _Pole:
  1038                           	opt callstack 0
  1039  000200                     	ds	80
  1040  000250                     _dist_final:
  1041                           	opt callstack 0
  1042  000250                     	ds	48
  1043  000280                     _dbuf:
  1044                           	opt callstack 0
  1045  000280                     	ds	32
  1046                           
  1047                           	psect	cstackBANK1
  1048  000100                     __pcstackBANK1:
  1049                           	opt callstack 0
  1050  000100                     ??_ultrasonic_main:
  1051  000100                     ??_number_deploy:
  1052  000100                     ??_UI_main:
  1053  000100                     stepper@stack:
  1054                           	opt callstack 0
  1055  000100                     stepper2@steps2_adj:
  1056                           	opt callstack 0
  1057  000100                     stepper2_back@steps2_adj:
  1058                           	opt callstack 0
  1059                           
  1060                           ; 2 bytes @ 0x0
  1061  000100                     	ds	2
  1062  000102                     ??_stepper2:
  1063  000102                     ??_stepper2_back:
  1064  000102                     stepper@t_dep:
  1065                           	opt callstack 0
  1066  000102                     number_deploy@tires_t:
  1067                           	opt callstack 0
  1068                           
  1069                           ; 2 bytes @ 0x2
  1070  000102                     	ds	1
  1071  000103                     stepper2_back@direction:
  1072                           	opt callstack 0
  1073                           
  1074                           ; 1 bytes @ 0x3
  1075  000103                     	ds	1
  1076  000104                     ??_stepper:
  1077  000104                     stepper2_back@count_stepper:
  1078                           	opt callstack 0
  1079  000104                     ultrasonic_main@sensed:
  1080                           	opt callstack 0
  1081  000104                     number_deploy@tires_detected:
  1082                           	opt callstack 0
  1083  000104                     UI_main@Pole:
  1084                           	opt callstack 0
  1085                           
  1086                           ; 80 bytes @ 0x4
  1087  000104                     	ds	2
  1088  000106                     stepper2_back@i:
  1089                           	opt callstack 0
  1090  000106                     ultrasonic_main@step2_offset:
  1091                           	opt callstack 0
  1092  000106                     number_deploy@t_count:
  1093                           	opt callstack 0
  1094                           
  1095                           ; 2 bytes @ 0x6
  1096  000106                     	ds	1
  1097  000107                     stepper2@i:
  1098                           	opt callstack 0
  1099                           
  1100                           ; 2 bytes @ 0x7
  1101  000107                     	ds	1
  1102  000108                     stepper@count_stepper:
  1103                           	opt callstack 0
  1104  000108                     ultrasonic_main@steps2_adj:
  1105                           	opt callstack 0
  1106                           
  1107                           ; 2 bytes @ 0x8
  1108  000108                     	ds	1
  1109  000109                     stepper2@i_489:
  1110                           	opt callstack 0
  1111                           
  1112                           ; 2 bytes @ 0x9
  1113  000109                     	ds	1
  1114  00010A                     stepper@i:
  1115                           	opt callstack 0
  1116  00010A                     ultrasonic_main@min_us_dist_967:
  1117                           	opt callstack 0
  1118                           
  1119                           ; 2 bytes @ 0xA
  1120  00010A                     	ds	1
  1121  00010B                     stepper2@count_stepper:
  1122                           	opt callstack 0
  1123                           
  1124                           ; 2 bytes @ 0xB
  1125  00010B                     	ds	1
  1126  00010C                     stepper@i_479:
  1127                           	opt callstack 0
  1128                           
  1129                           ; 2 bytes @ 0xC
  1130  00010C                     	ds	1
  1131  00010D                     stepper2@direction:
  1132                           	opt callstack 0
  1133                           
  1134                           ; 1 bytes @ 0xD
  1135  00010D                     	ds	1
  1136  00010E                     stepper@i_480:
  1137                           	opt callstack 0
  1138                           
  1139                           ; 2 bytes @ 0xE
  1140  00010E                     	ds	2
  1141  000110                     stepper@i_481:
  1142                           	opt callstack 0
  1143                           
  1144                           ; 2 bytes @ 0x10
  1145  000110                     	ds	2
  1146  000112                     actuators_main@stack:
  1147                           	opt callstack 0
  1148                           
  1149                           ; 2 bytes @ 0x12
  1150  000112                     	ds	2
  1151  000114                     actuators_main@steps2_adj:
  1152                           	opt callstack 0
  1153                           
  1154                           ; 2 bytes @ 0x14
  1155  000114                     	ds	2
  1156  000116                     actuators_main@t_dep:
  1157                           	opt callstack 0
  1158                           
  1159                           ; 2 bytes @ 0x16
  1160  000116                     	ds	2
  1161  000118                     ??_actuators_main:
  1162                           
  1163                           ; 1 bytes @ 0x18
  1164  000118                     	ds	2
  1165  00011A                     actuators_main@act_cnt:
  1166                           	opt callstack 0
  1167                           
  1168                           ; 2 bytes @ 0x1A
  1169  00011A                     	ds	58
  1170  000154                     UI_main@keypress:
  1171                           	opt callstack 0
  1172                           
  1173                           ; 1 bytes @ 0x54
  1174  000154                     	ds	1
  1175  000155                     UI_main@tick:
  1176                           	opt callstack 0
  1177                           
  1178                           ; 4 bytes @ 0x55
  1179  000155                     	ds	4
  1180  000159                     UI_main@i:
  1181                           	opt callstack 0
  1182                           
  1183                           ; 1 bytes @ 0x59
  1184  000159                     	ds	1
  1185  00015A                     ??_main:
  1186                           
  1187                           ; 1 bytes @ 0x5A
  1188  00015A                     	ds	8
  1189  000162                     main@Pole:
  1190                           	opt callstack 0
  1191                           
  1192                           ; 80 bytes @ 0x62
  1193  000162                     	ds	80
  1194  0001B2                     main@i:
  1195                           	opt callstack 0
  1196                           
  1197                           ; 2 bytes @ 0xB2
  1198  0001B2                     	ds	2
  1199  0001B4                     main@i_1075:
  1200                           	opt callstack 0
  1201                           
  1202                           ; 2 bytes @ 0xB4
  1203  0001B4                     	ds	2
  1204  0001B6                     main@act_done:
  1205                           	opt callstack 0
  1206                           
  1207                           ; 1 bytes @ 0xB6
  1208  0001B6                     	ds	1
  1209  0001B7                     main@arduino_stopped:
  1210                           	opt callstack 0
  1211                           
  1212                           ; 1 bytes @ 0xB7
  1213  0001B7                     	ds	1
  1214  0001B8                     main@stack:
  1215                           	opt callstack 0
  1216                           
  1217                           ; 2 bytes @ 0xB8
  1218  0001B8                     	ds	2
  1219  0001BA                     main@steps2_adj:
  1220                           	opt callstack 0
  1221                           
  1222                           ; 2 bytes @ 0xBA
  1223  0001BA                     	ds	2
  1224  0001BC                     main@k:
  1225                           	opt callstack 0
  1226                           
  1227                           ; 2 bytes @ 0xBC
  1228  0001BC                     	ds	2
  1229  0001BE                     main@t_count:
  1230                           	opt callstack 0
  1231                           
  1232                           ; 2 bytes @ 0xBE
  1233  0001BE                     	ds	2
  1234  0001C0                     main@i_1081:
  1235                           	opt callstack 0
  1236                           
  1237                           ; 2 bytes @ 0xC0
  1238  0001C0                     	ds	2
  1239  0001C2                     main@t_dep:
  1240                           	opt callstack 0
  1241                           
  1242                           ; 2 bytes @ 0xC2
  1243  0001C2                     	ds	2
  1244  0001C4                     main@poles_detected:
  1245                           	opt callstack 0
  1246                           
  1247                           ; 2 bytes @ 0xC4
  1248  0001C4                     	ds	2
  1249  0001C6                     main@prev_avg_dist:
  1250                           	opt callstack 0
  1251                           
  1252                           ; 4 bytes @ 0xC6
  1253  0001C6                     	ds	4
  1254                           
  1255                           	psect	cstackBANK0
  1256  000080                     __pcstackBANK0:
  1257                           	opt callstack 0
  1258  000080                     ??_I2C_Master_Wait:
  1259  000080                     ??_trig:
  1260  000080                     ?_strlen:
  1261                           	opt callstack 0
  1262  000080                     ?_isupper:
  1263                           	opt callstack 0
  1264  000080                     ?_isalpha:
  1265                           	opt callstack 0
  1266  000080                     ?_isdigit:
  1267                           	opt callstack 0
  1268  000080                     ?_isspace:
  1269                           	opt callstack 0
  1270  000080                     ?_islower:
  1271                           	opt callstack 0
  1272  000080                     ?_min:
  1273                           	opt callstack 0
  1274  000080                     ?___wmul:
  1275                           	opt callstack 0
  1276  000080                     ?___awdiv:
  1277                           	opt callstack 0
  1278  000080                     ?___lldiv:
  1279                           	opt callstack 0
  1280  000080                     ?___llmod:
  1281                           	opt callstack 0
  1282  000080                     ?___aodiv:
  1283                           	opt callstack 0
  1284  000080                     ?___aomod:
  1285                           	opt callstack 0
  1286  000080                     pulse_e@interruptState:
  1287                           	opt callstack 0
  1288  000080                     servoRotate0@servo:
  1289                           	opt callstack 0
  1290  000080                     servoRotate180@servo:
  1291                           	opt callstack 0
  1292  000080                     min@array:
  1293                           	opt callstack 0
  1294  000080                     ___wmul@multiplier:
  1295                           	opt callstack 0
  1296  000080                     ___awdiv@dividend:
  1297                           	opt callstack 0
  1298  000080                     isalpha@c:
  1299                           	opt callstack 0
  1300  000080                     isdigit@c:
  1301                           	opt callstack 0
  1302  000080                     isspace@c:
  1303                           	opt callstack 0
  1304  000080                     isupper@c:
  1305                           	opt callstack 0
  1306  000080                     strlen@s:
  1307                           	opt callstack 0
  1308  000080                     islower@c:
  1309                           	opt callstack 0
  1310  000080                     ___lldiv@dividend:
  1311                           	opt callstack 0
  1312  000080                     ___llmod@dividend:
  1313                           	opt callstack 0
  1314  000080                     ___aodiv@dividend:
  1315                           	opt callstack 0
  1316  000080                     ___aomod@dividend:
  1317                           	opt callstack 0
  1318                           
  1319                           ; 8 bytes @ 0x0
  1320  000080                     	ds	1
  1321  000081                     I2C_Master_Read@ackBit:
  1322                           	opt callstack 0
  1323  000081                     send_nibble@data:
  1324                           	opt callstack 0
  1325  000081                     I2C_Master_Write@byteToWrite:
  1326                           	opt callstack 0
  1327                           
  1328                           ; 2 bytes @ 0x1
  1329  000081                     	ds	1
  1330  000082                     ??_isupper:
  1331  000082                     ??_isalpha:
  1332  000082                     ??_isdigit:
  1333  000082                     ??_isspace:
  1334  000082                     ??_islower:
  1335  000082                     ??_servoRotate0:
  1336  000082                     ??_servoRotate180:
  1337  000082                     I2C_Master_Read@receivedByte:
  1338                           	opt callstack 0
  1339  000082                     send_byte@data:
  1340                           	opt callstack 0
  1341  000082                     min@size:
  1342                           	opt callstack 0
  1343  000082                     ___wmul@multiplicand:
  1344                           	opt callstack 0
  1345  000082                     ___awdiv@divisor:
  1346                           	opt callstack 0
  1347  000082                     strlen@a:
  1348                           	opt callstack 0
  1349                           
  1350                           ; 2 bytes @ 0x2
  1351  000082                     	ds	1
  1352  000083                     lcdInst@data:
  1353                           	opt callstack 0
  1354  000083                     putch@data:
  1355                           	opt callstack 0
  1356  000083                     servoRotate0@i:
  1357                           	opt callstack 0
  1358  000083                     servoRotate180@i:
  1359                           	opt callstack 0
  1360                           
  1361                           ; 2 bytes @ 0x3
  1362  000083                     	ds	1
  1363  000084                     ??_initLCD:
  1364  000084                     ??_min:
  1365  000084                     ___awdiv@counter:
  1366                           	opt callstack 0
  1367  000084                     ___wmul@product:
  1368                           	opt callstack 0
  1369  000084                     fputc@c:
  1370                           	opt callstack 0
  1371  000084                     ___lldiv@divisor:
  1372                           	opt callstack 0
  1373  000084                     ___llmod@divisor:
  1374                           	opt callstack 0
  1375                           
  1376                           ; 4 bytes @ 0x4
  1377  000084                     	ds	1
  1378  000085                     ??_servo:
  1379  000085                     ___awdiv@sign:
  1380                           	opt callstack 0
  1381                           
  1382                           ; 1 bytes @ 0x5
  1383  000085                     	ds	1
  1384  000086                     ?_toupper:
  1385                           	opt callstack 0
  1386  000086                     _isspace$1737:
  1387                           	opt callstack 0
  1388  000086                     ___awdiv@quotient:
  1389                           	opt callstack 0
  1390  000086                     fputc@fp:
  1391                           	opt callstack 0
  1392  000086                     toupper@c:
  1393                           	opt callstack 0
  1394                           
  1395                           ; 2 bytes @ 0x6
  1396  000086                     	ds	1
  1397  000087                     ?_atoi:
  1398                           	opt callstack 0
  1399  000087                     min@minimum:
  1400                           	opt callstack 0
  1401  000087                     atoi@s:
  1402                           	opt callstack 0
  1403                           
  1404                           ; 2 bytes @ 0x7
  1405  000087                     	ds	1
  1406  000088                     ??_fputc:
  1407  000088                     ??_toupper:
  1408  000088                     ___llmod@counter:
  1409                           	opt callstack 0
  1410  000088                     ___lldiv@quotient:
  1411                           	opt callstack 0
  1412  000088                     ___aodiv@divisor:
  1413                           	opt callstack 0
  1414  000088                     ___aomod@divisor:
  1415                           	opt callstack 0
  1416                           
  1417                           ; 8 bytes @ 0x8
  1418  000088                     	ds	1
  1419  000089                     ??_atoi:
  1420  000089                     min@i:
  1421                           	opt callstack 0
  1422                           
  1423                           ; 2 bytes @ 0x9
  1424  000089                     	ds	3
  1425  00008C                     ___lldiv@counter:
  1426                           	opt callstack 0
  1427  00008C                     _toupper$1802:
  1428                           	opt callstack 0
  1429                           
  1430                           ; 2 bytes @ 0xC
  1431  00008C                     	ds	1
  1432  00008D                     atoi@neg:
  1433                           	opt callstack 0
  1434  00008D                     fputs@s:
  1435                           	opt callstack 0
  1436  00008D                     I2C_Master_Init@clockFreq:
  1437                           	opt callstack 0
  1438                           
  1439                           ; 4 bytes @ 0xD
  1440  00008D                     	ds	2
  1441  00008F                     _atoi$1710:
  1442                           	opt callstack 0
  1443  00008F                     fputs@fp:
  1444                           	opt callstack 0
  1445                           
  1446                           ; 2 bytes @ 0xF
  1447  00008F                     	ds	1
  1448  000090                     ___aodiv@counter:
  1449                           	opt callstack 0
  1450  000090                     ___aomod@counter:
  1451                           	opt callstack 0
  1452                           
  1453                           ; 1 bytes @ 0x10
  1454  000090                     	ds	1
  1455  000091                     ??_I2C_Master_Init:
  1456  000091                     ___aodiv@sign:
  1457                           	opt callstack 0
  1458  000091                     ___aomod@sign:
  1459                           	opt callstack 0
  1460  000091                     fputs@c:
  1461                           	opt callstack 0
  1462  000091                     _atoi$1712:
  1463                           	opt callstack 0
  1464                           
  1465                           ; 2 bytes @ 0x11
  1466  000091                     	ds	1
  1467  000092                     ?_abs:
  1468                           	opt callstack 0
  1469  000092                     abs@a:
  1470                           	opt callstack 0
  1471  000092                     fputs@i:
  1472                           	opt callstack 0
  1473  000092                     ___aodiv@quotient:
  1474                           	opt callstack 0
  1475                           
  1476                           ; 8 bytes @ 0x12
  1477  000092                     	ds	1
  1478  000093                     _atoi$1711:
  1479                           	opt callstack 0
  1480                           
  1481                           ; 1 bytes @ 0x13
  1482  000093                     	ds	1
  1483  000094                     ??_abs:
  1484  000094                     ?_pad:
  1485                           	opt callstack 0
  1486  000094                     pad@fp:
  1487                           	opt callstack 0
  1488  000094                     atoi@n:
  1489                           	opt callstack 0
  1490                           
  1491                           ; 2 bytes @ 0x14
  1492  000094                     	ds	1
  1493  000095                     
  1494                           ; 1 bytes @ 0x15
  1495  000095                     	ds	1
  1496  000096                     pad@buf:
  1497                           	opt callstack 0
  1498                           
  1499                           ; 2 bytes @ 0x16
  1500  000096                     	ds	2
  1501  000098                     pad@p:
  1502                           	opt callstack 0
  1503                           
  1504                           ; 2 bytes @ 0x18
  1505  000098                     	ds	2
  1506  00009A                     ??_pad:
  1507                           
  1508                           ; 1 bytes @ 0x1A
  1509  00009A                     	ds	1
  1510  00009B                     pad@i:
  1511                           	opt callstack 0
  1512                           
  1513                           ; 2 bytes @ 0x1B
  1514  00009B                     	ds	2
  1515  00009D                     pad@w:
  1516                           	opt callstack 0
  1517                           
  1518                           ; 2 bytes @ 0x1D
  1519  00009D                     	ds	2
  1520  00009F                     ?_dtoa:
  1521                           	opt callstack 0
  1522  00009F                     ?_xtoa:
  1523                           	opt callstack 0
  1524  00009F                     dtoa@fp:
  1525                           	opt callstack 0
  1526  00009F                     xtoa@fp:
  1527                           	opt callstack 0
  1528                           
  1529                           ; 2 bytes @ 0x1F
  1530  00009F                     	ds	2
  1531  0000A1                     dtoa@d:
  1532                           	opt callstack 0
  1533  0000A1                     xtoa@d:
  1534                           	opt callstack 0
  1535                           
  1536                           ; 8 bytes @ 0x21
  1537  0000A1                     	ds	8
  1538  0000A9                     ??_dtoa:
  1539  0000A9                     xtoa@x:
  1540                           	opt callstack 0
  1541                           
  1542                           ; 1 bytes @ 0x29
  1543  0000A9                     	ds	1
  1544  0000AA                     ??_xtoa:
  1545                           
  1546                           ; 1 bytes @ 0x2A
  1547  0000AA                     	ds	7
  1548  0000B1                     _dtoa$1226:
  1549                           	opt callstack 0
  1550                           
  1551                           ; 2 bytes @ 0x31
  1552  0000B1                     	ds	1
  1553  0000B2                     _xtoa$1237:
  1554                           	opt callstack 0
  1555                           
  1556                           ; 2 bytes @ 0x32
  1557  0000B2                     	ds	1
  1558  0000B3                     dtoa@p:
  1559                           	opt callstack 0
  1560                           
  1561                           ; 2 bytes @ 0x33
  1562  0000B3                     	ds	1
  1563  0000B4                     _xtoa$1238:
  1564                           	opt callstack 0
  1565                           
  1566                           ; 2 bytes @ 0x34
  1567  0000B4                     	ds	1
  1568  0000B5                     dtoa@w:
  1569                           	opt callstack 0
  1570                           
  1571                           ; 2 bytes @ 0x35
  1572  0000B5                     	ds	1
  1573  0000B6                     xtoa@p:
  1574                           	opt callstack 0
  1575                           
  1576                           ; 2 bytes @ 0x36
  1577  0000B6                     	ds	1
  1578  0000B7                     dtoa@s:
  1579                           	opt callstack 0
  1580                           
  1581                           ; 2 bytes @ 0x37
  1582  0000B7                     	ds	1
  1583  0000B8                     xtoa@w:
  1584                           	opt callstack 0
  1585                           
  1586                           ; 2 bytes @ 0x38
  1587  0000B8                     	ds	1
  1588  0000B9                     dtoa@n:
  1589                           	opt callstack 0
  1590                           
  1591                           ; 8 bytes @ 0x39
  1592  0000B9                     	ds	1
  1593  0000BA                     xtoa@n:
  1594                           	opt callstack 0
  1595                           
  1596                           ; 8 bytes @ 0x3A
  1597  0000BA                     	ds	7
  1598  0000C1                     dtoa@i:
  1599                           	opt callstack 0
  1600                           
  1601                           ; 2 bytes @ 0x41
  1602  0000C1                     	ds	1
  1603  0000C2                     xtoa@i:
  1604                           	opt callstack 0
  1605                           
  1606                           ; 2 bytes @ 0x42
  1607  0000C2                     	ds	2
  1608  0000C4                     xtoa@c:
  1609                           	opt callstack 0
  1610                           
  1611                           ; 2 bytes @ 0x44
  1612  0000C4                     	ds	2
  1613  0000C6                     ?_vfpfcnvrt:
  1614                           	opt callstack 0
  1615  0000C6                     vfpfcnvrt@fp:
  1616                           	opt callstack 0
  1617                           
  1618                           ; 2 bytes @ 0x46
  1619  0000C6                     	ds	2
  1620  0000C8                     vfpfcnvrt@fmt:
  1621                           	opt callstack 0
  1622                           
  1623                           ; 2 bytes @ 0x48
  1624  0000C8                     	ds	2
  1625  0000CA                     vfpfcnvrt@ap:
  1626                           	opt callstack 0
  1627                           
  1628                           ; 2 bytes @ 0x4A
  1629  0000CA                     	ds	2
  1630  0000CC                     ??_vfpfcnvrt:
  1631                           
  1632                           ; 1 bytes @ 0x4C
  1633  0000CC                     	ds	4
  1634  0000D0                     vfpfcnvrt@ll:
  1635                           	opt callstack 0
  1636                           
  1637                           ; 8 bytes @ 0x50
  1638  0000D0                     	ds	8
  1639  0000D8                     vfpfcnvrt@llu:
  1640                           	opt callstack 0
  1641                           
  1642                           ; 8 bytes @ 0x58
  1643  0000D8                     	ds	8
  1644  0000E0                     vfpfcnvrt@c:
  1645                           	opt callstack 0
  1646                           
  1647                           ; 1 bytes @ 0x60
  1648  0000E0                     	ds	1
  1649  0000E1                     vfpfcnvrt@done:
  1650                           	opt callstack 0
  1651                           
  1652                           ; 2 bytes @ 0x61
  1653  0000E1                     	ds	2
  1654  0000E3                     _vfpfcnvrt$1252:
  1655                           	opt callstack 0
  1656                           
  1657                           ; 2 bytes @ 0x63
  1658  0000E3                     	ds	2
  1659  0000E5                     ?_vfprintf:
  1660                           	opt callstack 0
  1661  0000E5                     vfprintf@fp:
  1662                           	opt callstack 0
  1663                           
  1664                           ; 2 bytes @ 0x65
  1665  0000E5                     	ds	2
  1666  0000E7                     vfprintf@fmt:
  1667                           	opt callstack 0
  1668                           
  1669                           ; 2 bytes @ 0x67
  1670  0000E7                     	ds	2
  1671  0000E9                     vfprintf@ap:
  1672                           	opt callstack 0
  1673                           
  1674                           ; 2 bytes @ 0x69
  1675  0000E9                     	ds	2
  1676  0000EB                     vfprintf@cfmt:
  1677                           	opt callstack 0
  1678                           
  1679                           ; 2 bytes @ 0x6B
  1680  0000EB                     	ds	2
  1681  0000ED                     ?_printf:
  1682                           	opt callstack 0
  1683  0000ED                     printf@fmt:
  1684                           	opt callstack 0
  1685                           
  1686                           ; 2 bytes @ 0x6D
  1687  0000ED                     	ds	10
  1688  0000F7                     
  1689                           ; 1 bytes @ 0x77
  1690  0000F7                     	ds	2
  1691  0000F9                     printf@ap:
  1692                           	opt callstack 0
  1693                           
  1694                           ; 2 bytes @ 0x79
  1695  0000F9                     	ds	2
  1696  0000FB                     ??_brake:
  1697  0000FB                     ??_print_echo:
  1698  0000FB                     ?_number_deploy:
  1699                           	opt callstack 0
  1700  0000FB                     full_drive@stepper_no:
  1701                           	opt callstack 0
  1702  0000FB                     number_deploy@avg_dist:
  1703                           	opt callstack 0
  1704  0000FB                     UI_main@t_dep:
  1705                           	opt callstack 0
  1706                           
  1707                           ; 2 bytes @ 0x7B
  1708  0000FB                     	ds	1
  1709  0000FC                     ?_ultrasonic_main:
  1710                           	opt callstack 0
  1711                           
  1712                           ; 2 bytes @ 0x7C
  1713  0000FC                     	ds	1
  1714  0000FD                     ??_full_drive:
  1715  0000FD                     number_deploy@poles_detected:
  1716                           	opt callstack 0
  1717  0000FD                     UI_main@poles_detected:
  1718                           	opt callstack 0
  1719                           
  1720                           ; 2 bytes @ 0x7D
  1721  0000FD                     	ds	1
  1722  0000FE                     full_drive@direction:
  1723                           	opt callstack 0
  1724                           
  1725                           ; 1 bytes @ 0x7E
  1726  0000FE                     	ds	1
  1727                           
  1728                           	psect	cstackCOMRAM
  1729  000001                     __pcstackCOMRAM:
  1730                           	opt callstack 0
  1731  000001                     ?i2___awdiv:
  1732                           	opt callstack 0
  1733  000001                     ?___xxtofl:
  1734                           	opt callstack 0
  1735  000001                     i2___awdiv@dividend:
  1736                           	opt callstack 0
  1737  000001                     ___xxtofl@val:
  1738                           	opt callstack 0
  1739                           
  1740                           ; 4 bytes @ 0x0
  1741  000001                     	ds	2
  1742  000003                     i2___awdiv@divisor:
  1743                           	opt callstack 0
  1744                           
  1745                           ; 2 bytes @ 0x2
  1746  000003                     	ds	2
  1747  000005                     ??___xxtofl:
  1748  000005                     i2___awdiv@counter:
  1749                           	opt callstack 0
  1750                           
  1751                           ; 1 bytes @ 0x4
  1752  000005                     	ds	1
  1753  000006                     i2___awdiv@sign:
  1754                           	opt callstack 0
  1755                           
  1756                           ; 1 bytes @ 0x5
  1757  000006                     	ds	1
  1758  000007                     i2___awdiv@quotient:
  1759                           	opt callstack 0
  1760                           
  1761                           ; 2 bytes @ 0x6
  1762  000007                     	ds	2
  1763  000009                     ___xxtofl@sign:
  1764                           	opt callstack 0
  1765                           
  1766                           ; 1 bytes @ 0x8
  1767  000009                     	ds	1
  1768  00000A                     ___xxtofl@exp:
  1769                           	opt callstack 0
  1770                           
  1771                           ; 1 bytes @ 0x9
  1772  00000A                     	ds	1
  1773  00000B                     ___xxtofl@arg:
  1774                           	opt callstack 0
  1775                           
  1776                           ; 4 bytes @ 0xA
  1777  00000B                     	ds	4
  1778  00000F                     ?___fldiv:
  1779                           	opt callstack 0
  1780  00000F                     ___fldiv@b:
  1781                           	opt callstack 0
  1782                           
  1783                           ; 4 bytes @ 0xE
  1784  00000F                     	ds	4
  1785  000013                     ___fldiv@a:
  1786                           	opt callstack 0
  1787                           
  1788                           ; 4 bytes @ 0x12
  1789  000013                     	ds	4
  1790  000017                     ??___fldiv:
  1791                           
  1792                           ; 1 bytes @ 0x16
  1793  000017                     	ds	4
  1794  00001B                     ___fldiv@rem:
  1795                           	opt callstack 0
  1796                           
  1797                           ; 4 bytes @ 0x1A
  1798  00001B                     	ds	4
  1799  00001F                     ___fldiv@sign:
  1800                           	opt callstack 0
  1801                           
  1802                           ; 1 bytes @ 0x1E
  1803  00001F                     	ds	1
  1804  000020                     ___fldiv@new_exp:
  1805                           	opt callstack 0
  1806                           
  1807                           ; 2 bytes @ 0x1F
  1808  000020                     	ds	2
  1809  000022                     ___fldiv@grs:
  1810                           	opt callstack 0
  1811                           
  1812                           ; 4 bytes @ 0x21
  1813  000022                     	ds	4
  1814  000026                     ___fldiv@bexp:
  1815                           	opt callstack 0
  1816                           
  1817                           ; 1 bytes @ 0x25
  1818  000026                     	ds	1
  1819  000027                     ___fldiv@aexp:
  1820                           	opt callstack 0
  1821                           
  1822                           ; 1 bytes @ 0x26
  1823  000027                     	ds	1
  1824  000028                     ?___fltol:
  1825                           	opt callstack 0
  1826  000028                     ___fltol@f1:
  1827                           	opt callstack 0
  1828                           
  1829                           ; 4 bytes @ 0x27
  1830  000028                     	ds	4
  1831  00002C                     ??___fltol:
  1832                           
  1833                           ; 1 bytes @ 0x2B
  1834  00002C                     	ds	4
  1835  000030                     ___fltol@sign1:
  1836                           	opt callstack 0
  1837                           
  1838                           ; 1 bytes @ 0x2F
  1839  000030                     	ds	1
  1840  000031                     ___fltol@exp1:
  1841                           	opt callstack 0
  1842                           
  1843                           ; 1 bytes @ 0x30
  1844  000031                     	ds	1
  1845  000032                     ??_echo:
  1846                           
  1847                           ; 1 bytes @ 0x31
  1848  000032                     	ds	4
  1849  000036                     ??_ISR:
  1850                           
  1851                           ; 1 bytes @ 0x35
  1852  000036                     	ds	2
  1853                           
  1854 ;;
  1855 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1856 ;;
  1857 ;; *************** function _main *****************
  1858 ;; Defined at:
  1859 ;;		line 715 in file "main.c"
  1860 ;; Parameters:    Size  Location     Type
  1861 ;;		None
  1862 ;; Auto vars:     Size  Location     Type
  1863 ;;  k               2  188[BANK1 ] int 
  1864 ;;  i               2  180[BANK1 ] int 
  1865 ;;  i               2  178[BANK1 ] int 
  1866 ;;  i               2  192[BANK1 ] int 
  1867 ;;  pole_cl_dist    2    0        int 
  1868 ;;  Pole           80   98[BANK1 ] struct Poles[10]
  1869 ;;  prev_avg_dis    4  198[BANK1 ] volatile long 
  1870 ;;  poles_detect    2  196[BANK1 ] int 
  1871 ;;  t_dep           2  194[BANK1 ] int 
  1872 ;;  t_count         2  190[BANK1 ] int 
  1873 ;;  steps2_adj      2  186[BANK1 ] int 
  1874 ;;  stack           2  184[BANK1 ] int 
  1875 ;;  read            2    0        int 
  1876 ;;  arduino_stop    1  183[BANK1 ] _Bool 
  1877 ;;  act_done        1  182[BANK1 ] _Bool 
  1878 ;; Return value:  Size  Location     Type
  1879 ;;                  1    wreg      void 
  1880 ;; Registers used:
  1881 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1882 ;; Tracked objects:
  1883 ;;		On entry : 0/0
  1884 ;;		On exit  : 0/0
  1885 ;;		Unchanged: 0/0
  1886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1888 ;;      Locals:         0       0     108       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1889 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1890 ;;      Totals:         0       0     112       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1891 ;;Total ram usage:      112 bytes
  1892 ;; Hardware stack levels required when called:   17
  1893 ;; This function calls:
  1894 ;;		_UI_main
  1895 ;;		___wmul
  1896 ;;		_actuators_main
  1897 ;;		_backwards
  1898 ;;		_brake
  1899 ;;		_initLCD
  1900 ;;		_lcdInst
  1901 ;;		_number_deploy
  1902 ;;		_printf
  1903 ;;		_start
  1904 ;;		_ultrasonic_main
  1905 ;; This function is called by:
  1906 ;;		Startup code after reset
  1907 ;; This function uses a non-reentrant model
  1908 ;;
  1909                           
  1910                           	psect	text0
  1911  000826                     __ptext0:
  1912                           	opt callstack 0
  1913  000826                     _main:
  1914                           	opt callstack 14
  1915                           
  1916                           ;main.c: 717:     int t_dep=0;
  1917                           
  1918                           ;incstack = 0
  1919  000826  0E00               	movlw	0
  1920  000828  0101               	movlb	1	; () banked
  1921  00082A  6FC3               	movwf	(main@t_dep+1)& (0+255),b
  1922  00082C  0E00               	movlw	0
  1923  00082E  6FC2               	movwf	main@t_dep& (0+255),b
  1924                           
  1925                           ;main.c: 718:     int t_count;;main.c: 719:  TRISD = 0x00;
  1926  000830  0E00               	movlw	0
  1927  000832  6E95               	movwf	3989,c	;volatile
  1928                           
  1929                           ; BSR set to: 1
  1930                           ;main.c: 720:  GIE = 1;
  1931  000834  8EF2               	bsf	4082,7,c	;volatile
  1932                           
  1933                           ;main.c: 721:      int steps2_adj =0;
  1934  000836  0E00               	movlw	0
  1935  000838  6FBB               	movwf	(main@steps2_adj+1)& (0+255),b
  1936  00083A  0E00               	movlw	0
  1937  00083C  6FBA               	movwf	main@steps2_adj& (0+255),b
  1938                           
  1939                           ;main.c: 722:     ADCON1=0x0F;
  1940  00083E  0E0F               	movlw	15
  1941  000840  6EC1               	movwf	4033,c	;volatile
  1942                           
  1943                           ; BSR set to: 1
  1944                           ;main.c: 724:  initLCD();
  1945  000842  EC4A  F01C         	call	_initLCD	;wreg free
  1946                           
  1947                           ;main.c: 726:  T1CON = 0x10;
  1948  000846  0E10               	movlw	16
  1949  000848  6ECD               	movwf	4045,c	;volatile
  1950                           
  1951                           ;main.c: 727:     int poles_detected=0;
  1952  00084A  0E00               	movlw	0
  1953  00084C  0101               	movlb	1	; () banked
  1954  00084E  6FC5               	movwf	(main@poles_detected+1)& (0+255),b
  1955  000850  0E00               	movlw	0
  1956  000852  6FC4               	movwf	main@poles_detected& (0+255),b
  1957                           
  1958                           ; BSR set to: 1
  1959                           ;main.c: 729:     volatile long prev_avg_dist=0;
  1960                           
  1961                           ; BSR set to: 1
  1962  000854  0E00               	movlw	0
  1963  000856  6FC6               	movwf	main@prev_avg_dist& (0+255),b	;volatile
  1964  000858  0E00               	movlw	0
  1965  00085A  6FC7               	movwf	(main@prev_avg_dist+1)& (0+255),b	;volatile
  1966  00085C  0E00               	movlw	0
  1967  00085E  6FC8               	movwf	(main@prev_avg_dist+2)& (0+255),b	;volatile
  1968  000860  0E00               	movlw	0
  1969  000862  6FC9               	movwf	(main@prev_avg_dist+3)& (0+255),b	;volatile
  1970                           
  1971                           ; BSR set to: 1
  1972                           ;main.c: 731:     TRISAbits.RA4 = 0;
  1973  000864  9892               	bcf	3986,4,c	;volatile
  1974                           
  1975                           ; BSR set to: 1
  1976                           ;main.c: 732:     PORTAbits.RA4 = LATAbits.LATA4;
  1977  000866  A889               	btfss	3977,4,c	;volatile
  1978  000868  D002               	bra	u9075
  1979  00086A  8880               	bsf	3968,4,c	;volatile
  1980  00086C  D001               	bra	u9077
  1981  00086E                     u9075:
  1982  00086E  9880               	bcf	3968,4,c	;volatile
  1983  000870                     u9077:
  1984                           
  1985                           ;main.c: 735:     _Bool arduino_stopped = 0;
  1986  000870  0E00               	movlw	0
  1987  000872  0101               	movlb	1	; () banked
  1988  000874  6FB7               	movwf	main@arduino_stopped& (0+255),b
  1989                           
  1990                           ; BSR set to: 1
  1991                           ;main.c: 737:     Poles Pole[10];;main.c: 745:     if (~sens){
  1992  000876  2858               	incf	_sens,w,c	;volatile
  1993  000878  E103               	bnz	u9080
  1994  00087A  2859               	incf	_sens+1,w,c	;volatile
  1995  00087C  B4D8               	btfsc	status,2,c
  1996  00087E  D00B               	goto	l8393
  1997  000880                     u9080:
  1998                           
  1999                           ; BSR set to: 1
  2000                           ;main.c: 746:         UI_main( t_dep, poles_detected);
  2001  000880  0E00               	movlw	0
  2002  000882  0100               	movlb	0	; () banked
  2003  000884  6FFC               	movwf	(UI_main@t_dep+1)& (0+255),b
  2004  000886  0E00               	movlw	0
  2005  000888  6FFB               	movwf	UI_main@t_dep& (0+255),b
  2006  00088A  0E00               	movlw	0
  2007  00088C  6FFE               	movwf	(UI_main@poles_detected+1)& (0+255),b
  2008  00088E  0E00               	movlw	0
  2009  000890  6FFD               	movwf	UI_main@poles_detected& (0+255),b
  2010  000892  EC09  F000         	call	_UI_main	;wreg free
  2011  000896                     l8393:
  2012                           
  2013                           ;main.c: 749:         PORTAbits.RA4 = LATAbits.LATA4;
  2014  000896  A889               	btfss	3977,4,c	;volatile
  2015  000898  D002               	bra	u9095
  2016  00089A  8880               	bsf	3968,4,c	;volatile
  2017  00089C  D001               	bra	u9097
  2018  00089E                     u9095:
  2019  00089E  9880               	bcf	3968,4,c	;volatile
  2020  0008A0                     u9097:
  2021                           
  2022                           ;main.c: 754:         if ((poles_detected <10)&&((Pole[poles_detected].dist_from_start )
      +                          <4000)){
  2023  0008A0  0101               	movlb	1	; () banked
  2024  0008A2  BFC5               	btfsc	(main@poles_detected+1)& (0+255),7,b
  2025  0008A4  D006               	goto	u9100
  2026  0008A6  51C5               	movf	(main@poles_detected+1)& (0+255),w,b
  2027  0008A8  E103               	bnz	u9101
  2028  0008AA  0E0A               	movlw	10
  2029  0008AC  5DC4               	subwf	main@poles_detected& (0+255),w,b
  2030  0008AE  B0D8               	btfsc	status,0,c
  2031  0008B0                     u9101:
  2032  0008B0  D27B               	goto	l8541
  2033  0008B2                     u9100:
  2034                           
  2035                           ; BSR set to: 1
  2036  0008B2  C1C4  F15A         	movff	main@poles_detected,??_main
  2037  0008B6  C1C5  F15B         	movff	main@poles_detected+1,??_main+1
  2038  0008BA  90D8               	bcf	status,0,c
  2039  0008BC  375A               	rlcf	??_main& (0+255),f,b
  2040  0008BE  375B               	rlcf	(??_main+1)& (0+255),f,b
  2041  0008C0  90D8               	bcf	status,0,c
  2042  0008C2  375A               	rlcf	??_main& (0+255),f,b
  2043  0008C4  375B               	rlcf	(??_main+1)& (0+255),f,b
  2044  0008C6  90D8               	bcf	status,0,c
  2045  0008C8  375A               	rlcf	??_main& (0+255),f,b
  2046  0008CA  375B               	rlcf	(??_main+1)& (0+255),f,b
  2047  0008CC  0E04               	movlw	4
  2048  0008CE  275A               	addwf	??_main& (0+255),f,b
  2049  0008D0  0E00               	movlw	0
  2050  0008D2  235B               	addwfc	(??_main+1)& (0+255),f,b
  2051  0008D4  0E62               	movlw	low main@Pole
  2052  0008D6  255A               	addwf	??_main& (0+255),w,b
  2053  0008D8  6ED9               	movwf	fsr2l,c
  2054  0008DA  0E01               	movlw	high main@Pole
  2055  0008DC  215B               	addwfc	(??_main+1)& (0+255),w,b
  2056  0008DE  6EDA               	movwf	fsr2h,c
  2057  0008E0  0E01               	movlw	1
  2058  0008E2  BEDB               	btfsc	plusw2,7,c
  2059  0008E4  D092               	goto	l8445
  2060  0008E6  0EA0               	movlw	160
  2061  0008E8  5CDE               	subwf	postinc2,w,c
  2062  0008EA  0E0F               	movlw	15
  2063  0008EC  58DE               	subwfb	postinc2,w,c
  2064  0008EE  A0D8               	btfss	status,0,c
  2065  0008F0  D08C               	goto	l8445
  2066  0008F2  D25A               	goto	l8541
  2067  0008F4                     l8401:
  2068                           
  2069                           ;main.c: 765:                 t_count = 5;
  2070  0008F4  0E00               	movlw	0
  2071  0008F6  0101               	movlb	1	; () banked
  2072  0008F8  6FBF               	movwf	(main@t_count+1)& (0+255),b
  2073  0008FA  0E05               	movlw	5
  2074  0008FC  6FBE               	movwf	main@t_count& (0+255),b
  2075                           
  2076                           ; BSR set to: 1
  2077                           ;main.c: 766:                     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/
      +                          4000.0)));};
  2078  0008FE  0E01               	movlw	1
  2079  000900  EC61  F01F         	call	_lcdInst
  2080  000904  0E11               	movlw	17
  2081  000906  0101               	movlb	1	; () banked
  2082  000908  6F5A               	movwf	??_main& (0+255),b
  2083  00090A  0E3A               	movlw	58
  2084  00090C                     u9247:
  2085  00090C  2EE8               	decfsz	wreg,f,c
  2086  00090E  D7FE               	bra	u9247
  2087  000910  2F5A               	decfsz	??_main& (0+255),f,b
  2088  000912  D7FC               	bra	u9247
  2089  000914  F000               	nop	
  2090                           
  2091                           ;main.c: 767:                     printf("waiting");
  2092  000916  0E02               	movlw	low (STR_54+5)
  2093  000918  0100               	movlb	0	; () banked
  2094  00091A  6FED               	movwf	printf@fmt& (0+255),b
  2095  00091C  0EFF               	movlw	high (STR_54+5)
  2096  00091E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2097  000920  ECFB  F01E         	call	_printf	;wreg free
  2098                           
  2099                           ;main.c: 769:                     if (!PORTAbits.RA4){
  2100  000924  B880               	btfsc	3968,4,c	;volatile
  2101  000926  D013               	goto	l8417
  2102                           
  2103                           ;main.c: 770:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  2104  000928  0E01               	movlw	1
  2105  00092A  EC61  F01F         	call	_lcdInst
  2106  00092E  0E11               	movlw	17
  2107  000930  0101               	movlb	1	; () banked
  2108  000932  6F5A               	movwf	??_main& (0+255),b
  2109  000934  0E3A               	movlw	58
  2110  000936                     u9257:
  2111  000936  2EE8               	decfsz	wreg,f,c
  2112  000938  D7FE               	bra	u9257
  2113  00093A  2F5A               	decfsz	??_main& (0+255),f,b
  2114  00093C  D7FC               	bra	u9257
  2115  00093E  F000               	nop	
  2116                           
  2117                           ;main.c: 771:                         printf("more waiting");
  2118  000940  0EFD               	movlw	low STR_54
  2119  000942  0100               	movlb	0	; () banked
  2120  000944  6FED               	movwf	printf@fmt& (0+255),b
  2121  000946  0EFE               	movlw	high STR_54
  2122  000948  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2123  00094A  ECFB  F01E         	call	_printf	;wreg free
  2124  00094E                     l8417:
  2125                           
  2126                           ;main.c: 773:                     if (PORTAbits.RA4){
  2127  00094E  A880               	btfss	3968,4,c	;volatile
  2128  000950  D016               	goto	l8427
  2129                           
  2130                           ;main.c: 775:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  2131  000952  0E01               	movlw	1
  2132  000954  EC61  F01F         	call	_lcdInst
  2133  000958  0E11               	movlw	17
  2134  00095A  0101               	movlb	1	; () banked
  2135  00095C  6F5A               	movwf	??_main& (0+255),b
  2136  00095E  0E3A               	movlw	58
  2137  000960                     u9267:
  2138  000960  2EE8               	decfsz	wreg,f,c
  2139  000962  D7FE               	bra	u9267
  2140  000964  2F5A               	decfsz	??_main& (0+255),f,b
  2141  000966  D7FC               	bra	u9267
  2142  000968  F000               	nop	
  2143                           
  2144                           ;main.c: 776:                         printf("done wait");
  2145  00096A  0EBB               	movlw	low STR_55
  2146  00096C  0100               	movlb	0	; () banked
  2147  00096E  6FED               	movwf	printf@fmt& (0+255),b
  2148  000970  0EFF               	movlw	high STR_55
  2149  000972  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2150  000974  ECFB  F01E         	call	_printf	;wreg free
  2151                           
  2152                           ;main.c: 777:                         arduino_stopped = 1;
  2153  000978  0E01               	movlw	1
  2154  00097A  0101               	movlb	1	; () banked
  2155  00097C  6FB7               	movwf	main@arduino_stopped& (0+255),b
  2156  00097E                     l8427:
  2157                           
  2158                           ;main.c: 779:                     if (arduino_stopped){
  2159  00097E  0101               	movlb	1	; () banked
  2160  000980  51B7               	movf	main@arduino_stopped& (0+255),w,b
  2161  000982  B4D8               	btfsc	status,2,c
  2162  000984  D042               	goto	l8445
  2163                           
  2164                           ; BSR set to: 1
  2165                           ;main.c: 780:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  2166  000986  0E01               	movlw	1
  2167  000988  EC61  F01F         	call	_lcdInst
  2168  00098C  0E11               	movlw	17
  2169  00098E  0101               	movlb	1	; () banked
  2170  000990  6F5A               	movwf	??_main& (0+255),b
  2171  000992  0E3A               	movlw	58
  2172  000994                     u9277:
  2173  000994  2EE8               	decfsz	wreg,f,c
  2174  000996  D7FE               	bra	u9277
  2175  000998  2F5A               	decfsz	??_main& (0+255),f,b
  2176  00099A  D7FC               	bra	u9277
  2177  00099C  F000               	nop	
  2178                           
  2179                           ;main.c: 781:                         printf("dun break");
  2180  00099E  0EA7               	movlw	low STR_56
  2181  0009A0  0100               	movlb	0	; () banked
  2182  0009A2  6FED               	movwf	printf@fmt& (0+255),b
  2183  0009A4  0EFF               	movlw	high STR_56
  2184  0009A6  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2185  0009A8  ECFB  F01E         	call	_printf	;wreg free
  2186                           
  2187                           ;main.c: 782:                         steps2_adj=ultrasonic_main();
  2188  0009AC  ECC1  F012         	call	_ultrasonic_main	;wreg free
  2189  0009B0  C0FC  F1BA         	movff	?_ultrasonic_main,main@steps2_adj
  2190  0009B4  C0FD  F1BB         	movff	?_ultrasonic_main+1,main@steps2_adj+1
  2191                           
  2192                           ;main.c: 783:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  2193  0009B8  0E01               	movlw	1
  2194  0009BA  EC61  F01F         	call	_lcdInst
  2195  0009BE  0E11               	movlw	17
  2196  0009C0  0101               	movlb	1	; () banked
  2197  0009C2  6F5A               	movwf	??_main& (0+255),b
  2198  0009C4  0E3A               	movlw	58
  2199  0009C6                     u9287:
  2200  0009C6  2EE8               	decfsz	wreg,f,c
  2201  0009C8  D7FE               	bra	u9287
  2202  0009CA  2F5A               	decfsz	??_main& (0+255),f,b
  2203  0009CC  D7FC               	bra	u9287
  2204  0009CE  F000               	nop	
  2205                           
  2206                           ;main.c: 784:                         printf("stepsadj %d", steps2_adj);
  2207  0009D0  0E23               	movlw	low STR_21
  2208  0009D2  0100               	movlb	0	; () banked
  2209  0009D4  6FED               	movwf	printf@fmt& (0+255),b
  2210  0009D6  0EFF               	movlw	high STR_21
  2211  0009D8  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2212  0009DA  C1BA  F0EF         	movff	main@steps2_adj,?_printf+2
  2213  0009DE  C1BB  F0F0         	movff	main@steps2_adj+1,?_printf+3
  2214  0009E2  ECFB  F01E         	call	_printf	;wreg free
  2215                           
  2216                           ;main.c: 785:                         t_count = number_deploy(avg_dist, poles_detected);
  2217  0009E6  C044  F0FB         	movff	_avg_dist,number_deploy@avg_dist	;volatile
  2218  0009EA  C045  F0FC         	movff	_avg_dist+1,number_deploy@avg_dist+1	;volatile
  2219  0009EE  C1C4  F0FD         	movff	main@poles_detected,number_deploy@poles_detected
  2220  0009F2  C1C5  F0FE         	movff	main@poles_detected+1,number_deploy@poles_detected+1
  2221  0009F6  ECBA  F010         	call	_number_deploy	;wreg free
  2222  0009FA  C0FB  F1BE         	movff	?_number_deploy,main@t_count
  2223  0009FE  C0FC  F1BF         	movff	?_number_deploy+1,main@t_count+1
  2224                           
  2225                           ;main.c: 786:                         sens = 0;
  2226  000A02  0E00               	movlw	0
  2227  000A04  6E59               	movwf	_sens+1,c	;volatile
  2228  000A06  0E00               	movlw	0
  2229  000A08  6E58               	movwf	_sens,c	;volatile
  2230  000A0A                     l8445:
  2231                           
  2232                           ;main.c: 762:             while (sens){
  2233  000A0A  5058               	movf	_sens,w,c	;volatile
  2234  000A0C  1059               	iorwf	_sens+1,w,c	;volatile
  2235  000A0E  A4D8               	btfss	status,2,c
  2236  000A10  D771               	goto	l8401
  2237                           
  2238                           ;main.c: 795:             act_done = 0;
  2239  000A12  0E00               	movlw	0
  2240  000A14  0101               	movlb	1	; () banked
  2241  000A16  6FB6               	movwf	main@act_done& (0+255),b
  2242                           
  2243                           ; BSR set to: 1
  2244                           ;main.c: 796:             if (t_count<=2){
  2245  000A18  BFBF               	btfsc	(main@t_count+1)& (0+255),7,b
  2246  000A1A  D006               	goto	u9160
  2247  000A1C  51BF               	movf	(main@t_count+1)& (0+255),w,b
  2248  000A1E  E165               	bnz	l557
  2249  000A20  0E03               	movlw	3
  2250  000A22  5DBE               	subwf	main@t_count& (0+255),w,b
  2251  000A24  B0D8               	btfsc	status,0,c
  2252  000A26  D061               	goto	l557
  2253  000A28                     u9160:
  2254                           
  2255                           ; BSR set to: 1
  2256                           ;main.c: 797:                 if (t_dep <8){
  2257  000A28  BFC3               	btfsc	(main@t_dep+1)& (0+255),7,b
  2258  000A2A  D006               	goto	u9170
  2259  000A2C  51C3               	movf	(main@t_dep+1)& (0+255),w,b
  2260  000A2E  E12D               	bnz	l8469
  2261  000A30  0E08               	movlw	8
  2262  000A32  5DC2               	subwf	main@t_dep& (0+255),w,b
  2263  000A34  B0D8               	btfsc	status,0,c
  2264  000A36  D029               	goto	u9180
  2265  000A38                     u9170:
  2266                           
  2267                           ; BSR set to: 1
  2268                           ;main.c: 800:                     stack = 1;
  2269  000A38  0E00               	movlw	0
  2270  000A3A  6FB9               	movwf	(main@stack+1)& (0+255),b
  2271  000A3C  0E01               	movlw	1
  2272  000A3E  6FB8               	movwf	main@stack& (0+255),b
  2273                           
  2274                           ; BSR set to: 1
  2275                           ;main.c: 801:                                     brake();
  2276  000A40  EC8D  F01A         	call	_brake	;wreg free
  2277                           
  2278                           ;main.c: 803:                     for(int i=0; i<(t_count); i++){
  2279  000A44  0E00               	movlw	0
  2280  000A46  0101               	movlb	1	; () banked
  2281  000A48  6FB3               	movwf	(main@i+1)& (0+255),b
  2282  000A4A  0E00               	movlw	0
  2283  000A4C  6FB2               	movwf	main@i& (0+255),b
  2284  000A4E  D013               	goto	l8467
  2285  000A50                     l8461:
  2286                           
  2287                           ; BSR set to: 1
  2288                           ;main.c: 804:                         actuators_main(stack, steps2_adj, t_dep);
  2289  000A50  C1B8  F112         	movff	main@stack,actuators_main@stack
  2290  000A54  C1B9  F113         	movff	main@stack+1,actuators_main@stack+1
  2291  000A58  C1BA  F114         	movff	main@steps2_adj,actuators_main@steps2_adj
  2292  000A5C  C1BB  F115         	movff	main@steps2_adj+1,actuators_main@steps2_adj+1
  2293  000A60  C1C2  F116         	movff	main@t_dep,actuators_main@t_dep
  2294  000A64  C1C3  F117         	movff	main@t_dep+1,actuators_main@t_dep+1
  2295  000A68  EC97  F013         	call	_actuators_main	;wreg free
  2296                           
  2297                           ;main.c: 806:                         t_dep++;
  2298  000A6C  0101               	movlb	1	; () banked
  2299  000A6E  4BC2               	infsnz	main@t_dep& (0+255),f,b
  2300  000A70  2BC3               	incf	(main@t_dep+1)& (0+255),f,b
  2301                           
  2302                           ; BSR set to: 1
  2303                           ;main.c: 807:                     }
  2304  000A72  4BB2               	infsnz	main@i& (0+255),f,b
  2305  000A74  2BB3               	incf	(main@i+1)& (0+255),f,b
  2306  000A76                     l8467:
  2307                           
  2308                           ; BSR set to: 1
  2309  000A76  51BE               	movf	main@t_count& (0+255),w,b
  2310  000A78  5DB2               	subwf	main@i& (0+255),w,b
  2311  000A7A  51B3               	movf	(main@i+1)& (0+255),w,b
  2312  000A7C  0A80               	xorlw	128
  2313  000A7E  6F5A               	movwf	??_main& (0+255),b
  2314  000A80  51BF               	movf	(main@t_count+1)& (0+255),w,b
  2315  000A82  0A80               	xorlw	128
  2316  000A84  595A               	subwfb	??_main& (0+255),w,b
  2317  000A86  A0D8               	btfss	status,0,c
  2318  000A88  D7E3               	goto	l8461
  2319  000A8A                     u9180:
  2320  000A8A                     l8469:
  2321                           
  2322                           ; BSR set to: 1
  2323                           ;main.c: 809:                 if (t_dep >= 8){
  2324  000A8A  BFC3               	btfsc	(main@t_dep+1)& (0+255),7,b
  2325  000A8C  D02C               	goto	u9200
  2326  000A8E  51C3               	movf	(main@t_dep+1)& (0+255),w,b
  2327  000A90  E104               	bnz	u9190
  2328  000A92  0E08               	movlw	8
  2329  000A94  5DC2               	subwf	main@t_dep& (0+255),w,b
  2330  000A96  A0D8               	btfss	status,0,c
  2331  000A98  D026               	goto	u9200
  2332  000A9A                     u9190:
  2333                           
  2334                           ; BSR set to: 1
  2335                           ;main.c: 810:                     stack = 2;
  2336  000A9A  0E00               	movlw	0
  2337  000A9C  6FB9               	movwf	(main@stack+1)& (0+255),b
  2338  000A9E  0E02               	movlw	2
  2339  000AA0  6FB8               	movwf	main@stack& (0+255),b
  2340                           
  2341                           ;main.c: 811:                     for(int i=0; i<(t_count); i++){
  2342  000AA2  0E00               	movlw	0
  2343  000AA4  6FB5               	movwf	(main@i_1075+1)& (0+255),b
  2344  000AA6  0E00               	movlw	0
  2345  000AA8  6FB4               	movwf	main@i_1075& (0+255),b
  2346  000AAA  D013               	goto	l8479
  2347  000AAC                     l8473:
  2348                           
  2349                           ; BSR set to: 1
  2350                           ;main.c: 812:                         actuators_main(stack, steps2_adj, t_dep);
  2351  000AAC  C1B8  F112         	movff	main@stack,actuators_main@stack
  2352  000AB0  C1B9  F113         	movff	main@stack+1,actuators_main@stack+1
  2353  000AB4  C1BA  F114         	movff	main@steps2_adj,actuators_main@steps2_adj
  2354  000AB8  C1BB  F115         	movff	main@steps2_adj+1,actuators_main@steps2_adj+1
  2355  000ABC  C1C2  F116         	movff	main@t_dep,actuators_main@t_dep
  2356  000AC0  C1C3  F117         	movff	main@t_dep+1,actuators_main@t_dep+1
  2357  000AC4  EC97  F013         	call	_actuators_main	;wreg free
  2358                           
  2359                           ;main.c: 814:                         t_dep++;
  2360  000AC8  0101               	movlb	1	; () banked
  2361  000ACA  4BC2               	infsnz	main@t_dep& (0+255),f,b
  2362  000ACC  2BC3               	incf	(main@t_dep+1)& (0+255),f,b
  2363                           
  2364                           ; BSR set to: 1
  2365                           ;main.c: 815:                     }
  2366  000ACE  4BB4               	infsnz	main@i_1075& (0+255),f,b
  2367  000AD0  2BB5               	incf	(main@i_1075+1)& (0+255),f,b
  2368  000AD2                     l8479:
  2369                           
  2370                           ; BSR set to: 1
  2371  000AD2  51BE               	movf	main@t_count& (0+255),w,b
  2372  000AD4  5DB4               	subwf	main@i_1075& (0+255),w,b
  2373  000AD6  51B5               	movf	(main@i_1075+1)& (0+255),w,b
  2374  000AD8  0A80               	xorlw	128
  2375  000ADA  6F5A               	movwf	??_main& (0+255),b
  2376  000ADC  51BF               	movf	(main@t_count+1)& (0+255),w,b
  2377  000ADE  0A80               	xorlw	128
  2378  000AE0  595A               	subwfb	??_main& (0+255),w,b
  2379  000AE2  A0D8               	btfss	status,0,c
  2380  000AE4  D7E3               	goto	l8473
  2381  000AE6                     u9200:
  2382                           
  2383                           ; BSR set to: 1
  2384                           ;main.c: 817:                 act_done = 1;
  2385  000AE6  0E01               	movlw	1
  2386  000AE8  6FB6               	movwf	main@act_done& (0+255),b
  2387  000AEA                     l557:
  2388                           
  2389                           ; BSR set to: 1
  2390                           ;main.c: 819:             if (act_done){
  2391  000AEA  51B6               	movf	main@act_done& (0+255),w,b
  2392  000AEC  B4D8               	btfsc	status,2,c
  2393  000AEE  D1AA               	goto	l8563
  2394                           
  2395                           ; BSR set to: 1
  2396                           ;main.c: 820:             Pole[poles_detected].dist_from_cl = avg_dist;
  2397  000AF0  C1C4  F15A         	movff	main@poles_detected,??_main
  2398  000AF4  C1C5  F15B         	movff	main@poles_detected+1,??_main+1
  2399  000AF8  90D8               	bcf	status,0,c
  2400  000AFA  375A               	rlcf	??_main& (0+255),f,b
  2401  000AFC  375B               	rlcf	(??_main+1)& (0+255),f,b
  2402  000AFE  90D8               	bcf	status,0,c
  2403  000B00  375A               	rlcf	??_main& (0+255),f,b
  2404  000B02  375B               	rlcf	(??_main+1)& (0+255),f,b
  2405  000B04  90D8               	bcf	status,0,c
  2406  000B06  375A               	rlcf	??_main& (0+255),f,b
  2407  000B08  375B               	rlcf	(??_main+1)& (0+255),f,b
  2408  000B0A  0E06               	movlw	6
  2409  000B0C  275A               	addwf	??_main& (0+255),f,b
  2410  000B0E  0E00               	movlw	0
  2411  000B10  235B               	addwfc	(??_main+1)& (0+255),f,b
  2412  000B12  0E62               	movlw	low main@Pole
  2413  000B14  255A               	addwf	??_main& (0+255),w,b
  2414  000B16  6ED9               	movwf	fsr2l,c
  2415  000B18  0E01               	movlw	high main@Pole
  2416  000B1A  215B               	addwfc	(??_main+1)& (0+255),w,b
  2417  000B1C  6EDA               	movwf	fsr2h,c
  2418  000B1E  C044  FFDE         	movff	_avg_dist,postinc2	;volatile
  2419  000B22  C045  FFDD         	movff	_avg_dist+1,postdec2	;volatile
  2420                           
  2421                           ;main.c: 821:             Pole[poles_detected].dist_from_start = avg_dist+prev_avg_dist;
  2422  000B26  51C6               	movf	main@prev_avg_dist& (0+255),w,b	;volatile
  2423  000B28  2444               	addwf	_avg_dist,w,c	;volatile
  2424  000B2A  6F5A               	movwf	??_main& (0+255),b
  2425  000B2C  51C7               	movf	(main@prev_avg_dist+1)& (0+255),w,b	;volatile
  2426  000B2E  2045               	addwfc	_avg_dist+1,w,c	;volatile
  2427  000B30  6F5B               	movwf	(??_main+1)& (0+255),b
  2428  000B32  C1C4  F15C         	movff	main@poles_detected,??_main+2
  2429  000B36  C1C5  F15D         	movff	main@poles_detected+1,??_main+3
  2430  000B3A  90D8               	bcf	status,0,c
  2431  000B3C  375C               	rlcf	(??_main+2)& (0+255),f,b
  2432  000B3E  375D               	rlcf	(??_main+3)& (0+255),f,b
  2433  000B40  90D8               	bcf	status,0,c
  2434  000B42  375C               	rlcf	(??_main+2)& (0+255),f,b
  2435  000B44  375D               	rlcf	(??_main+3)& (0+255),f,b
  2436  000B46  90D8               	bcf	status,0,c
  2437  000B48  375C               	rlcf	(??_main+2)& (0+255),f,b
  2438  000B4A  375D               	rlcf	(??_main+3)& (0+255),f,b
  2439  000B4C  0E04               	movlw	4
  2440  000B4E  275C               	addwf	(??_main+2)& (0+255),f,b
  2441  000B50  0E00               	movlw	0
  2442  000B52  235D               	addwfc	(??_main+3)& (0+255),f,b
  2443  000B54  0E62               	movlw	low main@Pole
  2444  000B56  255C               	addwf	(??_main+2)& (0+255),w,b
  2445  000B58  6ED9               	movwf	fsr2l,c
  2446  000B5A  0E01               	movlw	high main@Pole
  2447  000B5C  215D               	addwfc	(??_main+3)& (0+255),w,b
  2448  000B5E  6EDA               	movwf	fsr2h,c
  2449  000B60  C15A  FFDE         	movff	??_main,postinc2
  2450  000B64  C15B  FFDD         	movff	??_main+1,postdec2
  2451                           
  2452                           ; BSR set to: 1
  2453                           ;main.c: 822:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  2454  000B68  0E01               	movlw	1
  2455  000B6A  EC61  F01F         	call	_lcdInst
  2456  000B6E  0E11               	movlw	17
  2457  000B70  0101               	movlb	1	; () banked
  2458  000B72  6F5A               	movwf	??_main& (0+255),b
  2459  000B74  0E3A               	movlw	58
  2460  000B76                     u9297:
  2461  000B76  2EE8               	decfsz	wreg,f,c
  2462  000B78  D7FE               	bra	u9297
  2463  000B7A  2F5A               	decfsz	??_main& (0+255),f,b
  2464  000B7C  D7FC               	bra	u9297
  2465  000B7E  F000               	nop	
  2466                           
  2467                           ;main.c: 823:             printf("dist p[%d]:%d,%d", poles_detected,Pole[poles_detected]
      +                          .dist_from_cl, avg_dist);
  2468  000B80  0E2C               	movlw	low STR_58
  2469  000B82  0100               	movlb	0	; () banked
  2470  000B84  6FED               	movwf	printf@fmt& (0+255),b
  2471  000B86  0EFE               	movlw	high STR_58
  2472  000B88  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2473  000B8A  C1C4  F0EF         	movff	main@poles_detected,?_printf+2
  2474  000B8E  C1C5  F0F0         	movff	main@poles_detected+1,?_printf+3
  2475  000B92  C1C4  F15A         	movff	main@poles_detected,??_main
  2476  000B96  C1C5  F15B         	movff	main@poles_detected+1,??_main+1
  2477  000B9A  0101               	movlb	1	; () banked
  2478  000B9C  90D8               	bcf	status,0,c
  2479  000B9E  375A               	rlcf	??_main& (0+255),f,b
  2480  000BA0  375B               	rlcf	(??_main+1)& (0+255),f,b
  2481  000BA2  90D8               	bcf	status,0,c
  2482  000BA4  375A               	rlcf	??_main& (0+255),f,b
  2483  000BA6  375B               	rlcf	(??_main+1)& (0+255),f,b
  2484  000BA8  90D8               	bcf	status,0,c
  2485  000BAA  375A               	rlcf	??_main& (0+255),f,b
  2486  000BAC  375B               	rlcf	(??_main+1)& (0+255),f,b
  2487  000BAE  0E06               	movlw	6
  2488  000BB0  275A               	addwf	??_main& (0+255),f,b
  2489  000BB2  0E00               	movlw	0
  2490  000BB4  235B               	addwfc	(??_main+1)& (0+255),f,b
  2491  000BB6  0E62               	movlw	low main@Pole
  2492  000BB8  255A               	addwf	??_main& (0+255),w,b
  2493  000BBA  6ED9               	movwf	fsr2l,c
  2494  000BBC  0E01               	movlw	high main@Pole
  2495  000BBE  215B               	addwfc	(??_main+1)& (0+255),w,b
  2496  000BC0  6EDA               	movwf	fsr2h,c
  2497  000BC2  CFDE F0F1          	movff	postinc2,?_printf+4
  2498  000BC6  CFDD F0F2          	movff	postdec2,?_printf+5
  2499  000BCA  C044  F0F3         	movff	_avg_dist,?_printf+6	;volatile
  2500  000BCE  C045  F0F4         	movff	_avg_dist+1,?_printf+7	;volatile
  2501  000BD2  C046  F0F5         	movff	_avg_dist+2,?_printf+8	;volatile
  2502  000BD6  C047  F0F6         	movff	_avg_dist+3,?_printf+9	;volatile
  2503  000BDA  ECFB  F01E         	call	_printf	;wreg free
  2504  000BDE  0EC0               	movlw	192
  2505  000BE0  EC61  F01F         	call	_lcdInst
  2506                           
  2507                           ;main.c: 825:             printf("p[%d] fs : %d",poles_detected, Pole[poles_detected].di
      +                          st_from_start);
  2508  000BE4  0EB8               	movlw	low STR_59
  2509  000BE6  0100               	movlb	0	; () banked
  2510  000BE8  6FED               	movwf	printf@fmt& (0+255),b
  2511  000BEA  0EFE               	movlw	high STR_59
  2512  000BEC  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2513  000BEE  C1C4  F0EF         	movff	main@poles_detected,?_printf+2
  2514  000BF2  C1C5  F0F0         	movff	main@poles_detected+1,?_printf+3
  2515  000BF6  C1C4  F15A         	movff	main@poles_detected,??_main
  2516  000BFA  C1C5  F15B         	movff	main@poles_detected+1,??_main+1
  2517  000BFE  0101               	movlb	1	; () banked
  2518  000C00  90D8               	bcf	status,0,c
  2519  000C02  375A               	rlcf	??_main& (0+255),f,b
  2520  000C04  375B               	rlcf	(??_main+1)& (0+255),f,b
  2521  000C06  90D8               	bcf	status,0,c
  2522  000C08  375A               	rlcf	??_main& (0+255),f,b
  2523  000C0A  375B               	rlcf	(??_main+1)& (0+255),f,b
  2524  000C0C  90D8               	bcf	status,0,c
  2525  000C0E  375A               	rlcf	??_main& (0+255),f,b
  2526  000C10  375B               	rlcf	(??_main+1)& (0+255),f,b
  2527  000C12  0E04               	movlw	4
  2528  000C14  275A               	addwf	??_main& (0+255),f,b
  2529  000C16  0E00               	movlw	0
  2530  000C18  235B               	addwfc	(??_main+1)& (0+255),f,b
  2531  000C1A  0E62               	movlw	low main@Pole
  2532  000C1C  255A               	addwf	??_main& (0+255),w,b
  2533  000C1E  6ED9               	movwf	fsr2l,c
  2534  000C20  0E01               	movlw	high main@Pole
  2535  000C22  215B               	addwfc	(??_main+1)& (0+255),w,b
  2536  000C24  6EDA               	movwf	fsr2h,c
  2537  000C26  CFDE F0F1          	movff	postinc2,?_printf+4
  2538  000C2A  CFDD F0F2          	movff	postdec2,?_printf+5
  2539  000C2E  ECFB  F01E         	call	_printf	;wreg free
  2540                           
  2541                           ;main.c: 826:             _delay((unsigned long)((3000)*(10000000/4000.0)));
  2542  000C32  0E27               	movlw	39
  2543  000C34  0101               	movlb	1	; () banked
  2544  000C36  6F5B               	movwf	(??_main+1)& (0+255),b
  2545  000C38  0E0D               	movlw	13
  2546  000C3A  6F5A               	movwf	??_main& (0+255),b
  2547  000C3C  0E26               	movlw	38
  2548  000C3E                     u9307:
  2549  000C3E  2EE8               	decfsz	wreg,f,c
  2550  000C40  D7FE               	bra	u9307
  2551  000C42  2F5A               	decfsz	??_main& (0+255),f,b
  2552  000C44  D7FC               	bra	u9307
  2553  000C46  2F5B               	decfsz	(??_main+1)& (0+255),f,b
  2554  000C48  D7FA               	bra	u9307
  2555  000C4A  F000               	nop	
  2556                           
  2557                           ;main.c: 828:             prev_avg_dist = avg_dist ;
  2558  000C4C  C044  F1C6         	movff	_avg_dist,main@prev_avg_dist	;volatile
  2559  000C50  C045  F1C7         	movff	_avg_dist+1,main@prev_avg_dist+1	;volatile
  2560  000C54  C046  F1C8         	movff	_avg_dist+2,main@prev_avg_dist+2	;volatile
  2561  000C58  C047  F1C9         	movff	_avg_dist+3,main@prev_avg_dist+3	;volatile
  2562                           
  2563                           ;main.c: 829:             poles_detected++;
  2564  000C5C  0101               	movlb	1	; () banked
  2565  000C5E  4BC4               	infsnz	main@poles_detected& (0+255),f,b
  2566  000C60  2BC5               	incf	(main@poles_detected+1)& (0+255),f,b
  2567                           
  2568                           ; BSR set to: 1
  2569                           ;main.c: 830:             start();
  2570  000C62  EC73  F01D         	call	_start	;wreg free
  2571                           
  2572                           ;main.c: 831:             arduino_stopped = 0;
  2573  000C66  0E00               	movlw	0
  2574  000C68  0101               	movlb	1	; () banked
  2575  000C6A  6FB7               	movwf	main@arduino_stopped& (0+255),b
  2576                           
  2577                           ; BSR set to: 1
  2578                           ;main.c: 833:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  2579  000C6C  0E01               	movlw	1
  2580  000C6E  EC61  F01F         	call	_lcdInst
  2581  000C72  0E11               	movlw	17
  2582  000C74  0101               	movlb	1	; () banked
  2583  000C76  6F5A               	movwf	??_main& (0+255),b
  2584  000C78  0E3A               	movlw	58
  2585  000C7A                     u9317:
  2586  000C7A  2EE8               	decfsz	wreg,f,c
  2587  000C7C  D7FE               	bra	u9317
  2588  000C7E  2F5A               	decfsz	??_main& (0+255),f,b
  2589  000C80  D7FC               	bra	u9317
  2590  000C82  F000               	nop	
  2591                           
  2592                           ;main.c: 834:             printf("avg dist %d", avg_dist);
  2593  000C84  0E2F               	movlw	low STR_60
  2594  000C86  0100               	movlb	0	; () banked
  2595  000C88  6FED               	movwf	printf@fmt& (0+255),b
  2596  000C8A  0EFF               	movlw	high STR_60
  2597  000C8C  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2598  000C8E  C044  F0EF         	movff	_avg_dist,?_printf+2	;volatile
  2599  000C92  C045  F0F0         	movff	_avg_dist+1,?_printf+3	;volatile
  2600  000C96  C046  F0F1         	movff	_avg_dist+2,?_printf+4	;volatile
  2601  000C9A  C047  F0F2         	movff	_avg_dist+3,?_printf+5	;volatile
  2602  000C9E  ECFB  F01E         	call	_printf	;wreg free
  2603                           
  2604                           ;main.c: 835:             printf("poles d %d", poles_detected);
  2605  000CA2  0E53               	movlw	low STR_61
  2606  000CA4  0100               	movlb	0	; () banked
  2607  000CA6  6FED               	movwf	printf@fmt& (0+255),b
  2608  000CA8  0EFF               	movlw	high STR_61
  2609  000CAA  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2610  000CAC  C1C4  F0EF         	movff	main@poles_detected,?_printf+2
  2611  000CB0  C1C5  F0F0         	movff	main@poles_detected+1,?_printf+3
  2612  000CB4  ECFB  F01E         	call	_printf	;wreg free
  2613                           
  2614                           ;main.c: 836:             for (int i=0;i<4;i++){
  2615  000CB8  0E00               	movlw	0
  2616  000CBA  0101               	movlb	1	; () banked
  2617  000CBC  6FC1               	movwf	(main@i_1081+1)& (0+255),b
  2618  000CBE  0E00               	movlw	0
  2619  000CC0  6FC0               	movwf	main@i_1081& (0+255),b
  2620  000CC2                     l8515:
  2621                           
  2622                           ; BSR set to: 1
  2623  000CC2  BFC1               	btfsc	(main@i_1081+1)& (0+255),7,b
  2624  000CC4  D006               	goto	l8519
  2625  000CC6  51C1               	movf	(main@i_1081+1)& (0+255),w,b
  2626  000CC8  E15D               	bnz	l8537
  2627  000CCA  0E04               	movlw	4
  2628  000CCC  5DC0               	subwf	main@i_1081& (0+255),w,b
  2629  000CCE  B0D8               	btfsc	status,0,c
  2630  000CD0  D059               	goto	l8537
  2631  000CD2                     l8519:
  2632                           
  2633                           ; BSR set to: 1
  2634                           ;main.c: 837:                 sum[i] = 0 ;
  2635  000CD2  90D8               	bcf	status,0,c
  2636  000CD4  35C0               	rlcf	main@i_1081& (0+255),w,b
  2637  000CD6  6ED9               	movwf	fsr2l,c
  2638  000CD8  35C1               	rlcf	(main@i_1081+1)& (0+255),w,b
  2639  000CDA  6EDA               	movwf	fsr2h,c
  2640  000CDC  0E38               	movlw	low _sum
  2641  000CDE  26D9               	addwf	fsr2l,f,c
  2642  000CE0  0E00               	movlw	high _sum
  2643  000CE2  22DA               	addwfc	fsr2h,f,c
  2644  000CE4  0E00               	movlw	0
  2645  000CE6  6EDE               	movwf	postinc2,c
  2646  000CE8  0E00               	movlw	0
  2647  000CEA  6EDD               	movwf	postdec2,c
  2648                           
  2649                           ;main.c: 838:                 a[i] =0 ;
  2650  000CEC  90D8               	bcf	status,0,c
  2651  000CEE  35C0               	rlcf	main@i_1081& (0+255),w,b
  2652  000CF0  6ED9               	movwf	fsr2l,c
  2653  000CF2  35C1               	rlcf	(main@i_1081+1)& (0+255),w,b
  2654  000CF4  6EDA               	movwf	fsr2h,c
  2655  000CF6  0E61               	movlw	low _a
  2656  000CF8  26D9               	addwf	fsr2l,f,c
  2657  000CFA  0E00               	movlw	high _a
  2658  000CFC  22DA               	addwfc	fsr2h,f,c
  2659  000CFE  0E00               	movlw	0
  2660  000D00  6EDE               	movwf	postinc2,c
  2661  000D02  0E00               	movlw	0
  2662  000D04  6EDD               	movwf	postdec2,c
  2663                           
  2664                           ;main.c: 839:                 sumf[i] = 0 ;
  2665  000D06  0E40               	movlw	low _sumf
  2666  000D08  25C0               	addwf	main@i_1081& (0+255),w,b
  2667  000D0A  6ED9               	movwf	fsr2l,c
  2668  000D0C  0E00               	movlw	high _sumf
  2669  000D0E  21C1               	addwfc	(main@i_1081+1)& (0+255),w,b
  2670  000D10  6EDA               	movwf	fsr2h,c
  2671  000D12  0E00               	movlw	0
  2672  000D14  6EDF               	movwf	indf2,c
  2673                           
  2674                           ; BSR set to: 1
  2675                           ;main.c: 840:                 for (int k=0;k<6;k++){
  2676  000D16  0E00               	movlw	0
  2677  000D18  6FBD               	movwf	(main@k+1)& (0+255),b
  2678  000D1A  0E00               	movlw	0
  2679  000D1C  6FBC               	movwf	main@k& (0+255),b
  2680  000D1E                     l8523:
  2681                           
  2682                           ; BSR set to: 1
  2683  000D1E  BFBD               	btfsc	(main@k+1)& (0+255),7,b
  2684  000D20  D006               	goto	l8527
  2685  000D22  51BD               	movf	(main@k+1)& (0+255),w,b
  2686  000D24  E12C               	bnz	l8533
  2687  000D26  0E06               	movlw	6
  2688  000D28  5DBC               	subwf	main@k& (0+255),w,b
  2689  000D2A  B0D8               	btfsc	status,0,c
  2690  000D2C  D028               	goto	l8533
  2691  000D2E                     l8527:
  2692                           
  2693                           ; BSR set to: 1
  2694                           ;main.c: 841:                     dist_final[i][k] = 0;
  2695  000D2E  C1C0  F080         	movff	main@i_1081,___wmul@multiplier
  2696  000D32  C1C1  F081         	movff	main@i_1081+1,___wmul@multiplier+1
  2697  000D36  0E00               	movlw	0
  2698  000D38  0100               	movlb	0	; () banked
  2699  000D3A  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2700  000D3C  0E0C               	movlw	12
  2701  000D3E  6F82               	movwf	___wmul@multiplicand& (0+255),b
  2702  000D40  EC0F  F01F         	call	___wmul	;wreg free
  2703  000D44  0E50               	movlw	low _dist_final
  2704  000D46  0101               	movlb	1	; () banked
  2705  000D48  6F5A               	movwf	??_main& (0+255),b
  2706  000D4A  0E02               	movlw	high _dist_final
  2707  000D4C  6F5B               	movwf	(??_main+1)& (0+255),b
  2708  000D4E  0100               	movlb	0	; () banked
  2709  000D50  5180               	movf	?___wmul& (0+255),w,b
  2710  000D52  0101               	movlb	1	; () banked
  2711  000D54  275A               	addwf	??_main& (0+255),f,b
  2712  000D56  0100               	movlb	0	; () banked
  2713  000D58  5181               	movf	(?___wmul+1)& (0+255),w,b
  2714  000D5A  0101               	movlb	1	; () banked
  2715  000D5C  235B               	addwfc	(??_main+1)& (0+255),f,b
  2716  000D5E  90D8               	bcf	status,0,c
  2717  000D60  35BC               	rlcf	main@k& (0+255),w,b
  2718  000D62  6ED9               	movwf	fsr2l,c
  2719  000D64  35BD               	rlcf	(main@k+1)& (0+255),w,b
  2720  000D66  6EDA               	movwf	fsr2h,c
  2721  000D68  515A               	movf	??_main& (0+255),w,b
  2722  000D6A  26D9               	addwf	fsr2l,f,c
  2723  000D6C  515B               	movf	(??_main+1)& (0+255),w,b
  2724  000D6E  22DA               	addwfc	fsr2h,f,c
  2725  000D70  0E00               	movlw	0
  2726  000D72  6EDE               	movwf	postinc2,c
  2727  000D74  0E00               	movlw	0
  2728  000D76  6EDD               	movwf	postdec2,c
  2729                           
  2730                           ; BSR set to: 1
  2731                           ;main.c: 842:                     }
  2732  000D78  4BBC               	infsnz	main@k& (0+255),f,b
  2733  000D7A  2BBD               	incf	(main@k+1)& (0+255),f,b
  2734  000D7C  D7D0               	goto	l8523
  2735  000D7E                     l8533:
  2736                           
  2737                           ; BSR set to: 1
  2738                           ;main.c: 843:                 }
  2739  000D7E  4BC0               	infsnz	main@i_1081& (0+255),f,b
  2740  000D80  2BC1               	incf	(main@i_1081+1)& (0+255),f,b
  2741  000D82  D79F               	goto	l8515
  2742  000D84                     l8537:
  2743                           
  2744                           ; BSR set to: 1
  2745                           ;main.c: 844:                 _delay((unsigned long)((1000)*(10000000/4000.0)));
  2746  000D84  0E0D               	movlw	13
  2747  000D86  0101               	movlb	1	; () banked
  2748  000D88  6F5B               	movwf	(??_main+1)& (0+255),b
  2749  000D8A  0EAF               	movlw	175
  2750  000D8C  6F5A               	movwf	??_main& (0+255),b
  2751  000D8E  0EB6               	movlw	182
  2752  000D90                     u9327:
  2753  000D90  2EE8               	decfsz	wreg,f,c
  2754  000D92  D7FE               	bra	u9327
  2755  000D94  2F5A               	decfsz	??_main& (0+255),f,b
  2756  000D96  D7FC               	bra	u9327
  2757  000D98  2F5B               	decfsz	(??_main+1)& (0+255),f,b
  2758  000D9A  D7FA               	bra	u9327
  2759  000D9C  F000               	nop	
  2760                           
  2761                           ;main.c: 845:                 sens = 1;
  2762  000D9E  0E00               	movlw	0
  2763  000DA0  6E59               	movwf	_sens+1,c	;volatile
  2764  000DA2  0E01               	movlw	1
  2765  000DA4  6E58               	movwf	_sens,c	;volatile
  2766  000DA6  D04E               	goto	l8563
  2767  000DA8                     l8541:
  2768                           
  2769                           ; BSR set to: 1
  2770                           ;main.c: 849:             brake();
  2771  000DA8  EC8D  F01A         	call	_brake	;wreg free
  2772                           
  2773                           ;main.c: 850:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  2774  000DAC  0E01               	movlw	1
  2775  000DAE  EC61  F01F         	call	_lcdInst
  2776  000DB2  0E11               	movlw	17
  2777  000DB4  0101               	movlb	1	; () banked
  2778  000DB6  6F5A               	movwf	??_main& (0+255),b
  2779  000DB8  0E3A               	movlw	58
  2780  000DBA                     u9337:
  2781  000DBA  2EE8               	decfsz	wreg,f,c
  2782  000DBC  D7FE               	bra	u9337
  2783  000DBE  2F5A               	decfsz	??_main& (0+255),f,b
  2784  000DC0  D7FC               	bra	u9337
  2785  000DC2  F000               	nop	
  2786                           
  2787                           ;main.c: 851:             printf("poles done");
  2788  000DC4  0E69               	movlw	low STR_62
  2789  000DC6  0100               	movlb	0	; () banked
  2790  000DC8  6FED               	movwf	printf@fmt& (0+255),b
  2791  000DCA  0EFF               	movlw	high STR_62
  2792  000DCC  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2793  000DCE  ECFB  F01E         	call	_printf	;wreg free
  2794                           
  2795                           ;main.c: 852:             _delay((unsigned long)((1000)*(10000000/4000.0)));
  2796  000DD2  0E0D               	movlw	13
  2797  000DD4  0101               	movlb	1	; () banked
  2798  000DD6  6F5B               	movwf	(??_main+1)& (0+255),b
  2799  000DD8  0EAF               	movlw	175
  2800  000DDA  6F5A               	movwf	??_main& (0+255),b
  2801  000DDC  0EB6               	movlw	182
  2802  000DDE                     u9347:
  2803  000DDE  2EE8               	decfsz	wreg,f,c
  2804  000DE0  D7FE               	bra	u9347
  2805  000DE2  2F5A               	decfsz	??_main& (0+255),f,b
  2806  000DE4  D7FC               	bra	u9347
  2807  000DE6  2F5B               	decfsz	(??_main+1)& (0+255),f,b
  2808  000DE8  D7FA               	bra	u9347
  2809  000DEA  F000               	nop	
  2810                           
  2811                           ;main.c: 853:             UI_main(t_dep, poles_detected);
  2812  000DEC  C1C2  F0FB         	movff	main@t_dep,UI_main@t_dep
  2813  000DF0  C1C3  F0FC         	movff	main@t_dep+1,UI_main@t_dep+1
  2814  000DF4  C1C4  F0FD         	movff	main@poles_detected,UI_main@poles_detected
  2815  000DF8  C1C5  F0FE         	movff	main@poles_detected+1,UI_main@poles_detected+1
  2816  000DFC  EC09  F000         	call	_UI_main	;wreg free
  2817                           
  2818                           ;main.c: 854:             backwards();
  2819  000E00  EC23  F01F         	call	_backwards	;wreg free
  2820                           
  2821                           ;main.c: 855:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  2822  000E04  0E01               	movlw	1
  2823  000E06  EC61  F01F         	call	_lcdInst
  2824  000E0A  0E11               	movlw	17
  2825  000E0C  0101               	movlb	1	; () banked
  2826  000E0E  6F5A               	movwf	??_main& (0+255),b
  2827  000E10  0E3A               	movlw	58
  2828  000E12                     u9357:
  2829  000E12  2EE8               	decfsz	wreg,f,c
  2830  000E14  D7FE               	bra	u9357
  2831  000E16  2F5A               	decfsz	??_main& (0+255),f,b
  2832  000E18  D7FC               	bra	u9357
  2833  000E1A  F000               	nop	
  2834                           
  2835                           ;main.c: 856:             printf("backwards");
  2836  000E1C  0EB1               	movlw	low STR_63
  2837  000E1E  0100               	movlb	0	; () banked
  2838  000E20  6FED               	movwf	printf@fmt& (0+255),b
  2839  000E22  0EFF               	movlw	high STR_63
  2840  000E24  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2841  000E26  ECFB  F01E         	call	_printf	;wreg free
  2842                           
  2843                           ;main.c: 857:             _delay((unsigned long)((1000)*(10000000/4000.0)));
  2844  000E2A  0E0D               	movlw	13
  2845  000E2C  0101               	movlb	1	; () banked
  2846  000E2E  6F5B               	movwf	(??_main+1)& (0+255),b
  2847  000E30  0EAF               	movlw	175
  2848  000E32  6F5A               	movwf	??_main& (0+255),b
  2849  000E34  0EB6               	movlw	182
  2850  000E36                     u9367:
  2851  000E36  2EE8               	decfsz	wreg,f,c
  2852  000E38  D7FE               	bra	u9367
  2853  000E3A  2F5A               	decfsz	??_main& (0+255),f,b
  2854  000E3C  D7FC               	bra	u9367
  2855  000E3E  2F5B               	decfsz	(??_main+1)& (0+255),f,b
  2856  000E40  D7FA               	bra	u9367
  2857  000E42  F000               	nop	
  2858  000E44                     l8563:
  2859                           
  2860                           ;main.c: 859:         t_count = 5;
  2861  000E44  0E00               	movlw	0
  2862  000E46  0101               	movlb	1	; () banked
  2863  000E48  6FBF               	movwf	(main@t_count+1)& (0+255),b
  2864  000E4A  0E05               	movlw	5
  2865  000E4C  6FBE               	movwf	main@t_count& (0+255),b
  2866  000E4E  D523               	goto	l8393
  2867  000E50                     __end_of_main:
  2868                           	opt callstack 0
  2869                           
  2870 ;; *************** function _ultrasonic_main *****************
  2871 ;; Defined at:
  2872 ;;		line 291 in file "main.c"
  2873 ;; Parameters:    Size  Location     Type
  2874 ;;		None
  2875 ;; Auto vars:     Size  Location     Type
  2876 ;;  min_us_dist     2   10[BANK1 ] int 
  2877 ;;  steps2_adj      2    8[BANK1 ] int 
  2878 ;;  step2_offset    2    6[BANK1 ] int 
  2879 ;;  sensed          2    4[BANK1 ] int 
  2880 ;;  min_us_dist     2    0        int 
  2881 ;; Return value:  Size  Location     Type
  2882 ;;                  2  124[BANK0 ] int 
  2883 ;; Registers used:
  2884 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2885 ;; Tracked objects:
  2886 ;;		On entry : 0/0
  2887 ;;		On exit  : 0/0
  2888 ;;		Unchanged: 0/0
  2889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2890 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2891 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2892 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2893 ;;      Totals:         0       2      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2894 ;;Total ram usage:       14 bytes
  2895 ;; Hardware stack levels used:    1
  2896 ;; Hardware stack levels required when called:   15
  2897 ;; This function calls:
  2898 ;;		_abs
  2899 ;;		_lcdInst
  2900 ;;		_min
  2901 ;;		_print_echo
  2902 ;;		_printf
  2903 ;;		_trig
  2904 ;; This function is called by:
  2905 ;;		_main
  2906 ;; This function uses a non-reentrant model
  2907 ;;
  2908                           
  2909                           	psect	text1
  2910  002582                     __ptext1:
  2911                           	opt callstack 0
  2912  002582                     _ultrasonic_main:
  2913                           	opt callstack 15
  2914                           
  2915                           ;main.c: 292:     TRISBbits.RB0 = 0;
  2916                           
  2917                           ; BSR set to: 1
  2918                           ;incstack = 0
  2919  002582  9093               	bcf	3987,0,c	;volatile
  2920                           
  2921                           ;main.c: 293:     LATBbits.LATB0 = 1;
  2922  002584  808A               	bsf	3978,0,c	;volatile
  2923                           
  2924                           ;main.c: 295:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  2925  002586  0E01               	movlw	1
  2926  002588  EC61  F01F         	call	_lcdInst
  2927  00258C  0E11               	movlw	17
  2928  00258E  0101               	movlb	1	; () banked
  2929  002590  6F00               	movwf	??_ultrasonic_main& (0+255),b
  2930  002592  0E3A               	movlw	58
  2931  002594                     u9377:
  2932  002594  2EE8               	decfsz	wreg,f,c
  2933  002596  D7FE               	bra	u9377
  2934  002598  2F00               	decfsz	??_ultrasonic_main& (0+255),f,b
  2935  00259A  D7FC               	bra	u9377
  2936  00259C  F000               	nop	
  2937                           
  2938                           ;main.c: 296:     printf("or here");
  2939  00259E  0EEC               	movlw	low STR_18
  2940  0025A0  0100               	movlb	0	; () banked
  2941  0025A2  6FED               	movwf	printf@fmt& (0+255),b
  2942  0025A4  0EFF               	movlw	high STR_18
  2943  0025A6  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2944  0025A8  ECFB  F01E         	call	_printf	;wreg free
  2945                           
  2946                           ;main.c: 297:  TRISB = 0b11110000;
  2947  0025AC  0EF0               	movlw	240
  2948  0025AE  6E93               	movwf	3987,c	;volatile
  2949                           
  2950                           ;main.c: 298:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  2951  0025B0  0E01               	movlw	1
  2952  0025B2  EC61  F01F         	call	_lcdInst
  2953  0025B6  0E11               	movlw	17
  2954  0025B8  0101               	movlb	1	; () banked
  2955  0025BA  6F00               	movwf	??_ultrasonic_main& (0+255),b
  2956  0025BC  0E3A               	movlw	58
  2957  0025BE                     u9387:
  2958  0025BE  2EE8               	decfsz	wreg,f,c
  2959  0025C0  D7FE               	bra	u9387
  2960  0025C2  2F00               	decfsz	??_ultrasonic_main& (0+255),f,b
  2961  0025C4  D7FC               	bra	u9387
  2962  0025C6  F000               	nop	
  2963                           
  2964                           ;main.c: 299:     printf("break heree?");
  2965  0025C8  0EF0               	movlw	low STR_19
  2966  0025CA  0100               	movlb	0	; () banked
  2967  0025CC  6FED               	movwf	printf@fmt& (0+255),b
  2968  0025CE  0EFE               	movlw	high STR_19
  2969  0025D0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2970  0025D2  ECFB  F01E         	call	_printf	;wreg free
  2971                           
  2972                           ;main.c: 300:     RBIF = 0;
  2973  0025D6  90F2               	bcf	4082,0,c	;volatile
  2974                           
  2975                           ;main.c: 301:  RBIE = 1;
  2976  0025D8  86F2               	bsf	4082,3,c	;volatile
  2977                           
  2978                           ;main.c: 303:     int sensed = 0;
  2979  0025DA  0E00               	movlw	0
  2980  0025DC  0101               	movlb	1	; () banked
  2981  0025DE  6F05               	movwf	(ultrasonic_main@sensed+1)& (0+255),b
  2982  0025E0  0E00               	movlw	0
  2983  0025E2  6F04               	movwf	ultrasonic_main@sensed& (0+255),b
  2984                           
  2985                           ;main.c: 305:     int steps2_adj=0;
  2986  0025E4  0E00               	movlw	0
  2987  0025E6  6F09               	movwf	(ultrasonic_main@steps2_adj+1)& (0+255),b
  2988  0025E8  0E00               	movlw	0
  2989  0025EA  6F08               	movwf	ultrasonic_main@steps2_adj& (0+255),b
  2990                           
  2991                           ;main.c: 306:     int step2_offset=0;
  2992  0025EC  0E00               	movlw	0
  2993  0025EE  6F07               	movwf	(ultrasonic_main@step2_offset+1)& (0+255),b
  2994  0025F0  0E00               	movlw	0
  2995  0025F2  6F06               	movwf	ultrasonic_main@step2_offset& (0+255),b
  2996                           
  2997                           ;main.c: 307:     while(send){
  2998  0025F4  D070               	goto	l464
  2999  0025F6                     l7925:
  3000                           
  3001                           ; BSR set to: 1
  3002                           ;main.c: 308:         for (meas=0; meas<3;meas++){
  3003  0025F6  0E00               	movlw	0
  3004  0025F8  6E51               	movwf	_meas+1,c	;volatile
  3005  0025FA  0E00               	movlw	0
  3006  0025FC  6E50               	movwf	_meas,c	;volatile
  3007  0025FE                     l7927:
  3008                           
  3009                           ; BSR set to: 1
  3010  0025FE  BE51               	btfsc	_meas+1,7,c	;volatile
  3011  002600  D006               	goto	l7931
  3012  002602  5051               	movf	_meas+1,w,c	;volatile
  3013  002604  E160               	bnz	l7963
  3014  002606  0E03               	movlw	3
  3015  002608  5C50               	subwf	_meas,w,c	;volatile
  3016  00260A  B0D8               	btfsc	status,0,c
  3017  00260C  D05C               	goto	l7963
  3018  00260E                     l7931:
  3019                           
  3020                           ; BSR set to: 1
  3021                           ;main.c: 309:         trig();
  3022  00260E  ECE6  F017         	call	_trig	;wreg free
  3023                           
  3024                           ;main.c: 310:         RBIE = 0;
  3025  002612  96F2               	bcf	4082,3,c	;volatile
  3026                           
  3027                           ;main.c: 311:         print_echo();
  3028  002614  ECCA  F011         	call	_print_echo	;wreg free
  3029                           
  3030                           ;main.c: 312:         RBIE = 1;
  3031  002618  86F2               	bsf	4082,3,c	;volatile
  3032                           
  3033                           ;main.c: 313:         int min_us_dist = min(a, 4);
  3034  00261A  0E61               	movlw	low _a
  3035  00261C  0100               	movlb	0	; () banked
  3036  00261E  6F80               	movwf	min@array& (0+255),b
  3037  002620  0E00               	movlw	high _a
  3038  002622  6F81               	movwf	(min@array+1)& (0+255),b
  3039  002624  0E00               	movlw	0
  3040  002626  6F83               	movwf	(min@size+1)& (0+255),b
  3041  002628  0E04               	movlw	4
  3042  00262A  6F82               	movwf	min@size& (0+255),b
  3043  00262C  EC5E  F017         	call	_min	;wreg free
  3044  002630  C080  F10A         	movff	?_min,ultrasonic_main@min_us_dist_967
  3045  002634  C081  F10B         	movff	?_min+1,ultrasonic_main@min_us_dist_967+1
  3046                           
  3047                           ;main.c: 314:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  3048  002638  0E01               	movlw	1
  3049  00263A  EC61  F01F         	call	_lcdInst
  3050  00263E  0E11               	movlw	17
  3051  002640  0101               	movlb	1	; () banked
  3052  002642  6F00               	movwf	??_ultrasonic_main& (0+255),b
  3053  002644  0E3A               	movlw	58
  3054  002646                     u9397:
  3055  002646  2EE8               	decfsz	wreg,f,c
  3056  002648  D7FE               	bra	u9397
  3057  00264A  2F00               	decfsz	??_ultrasonic_main& (0+255),f,b
  3058  00264C  D7FC               	bra	u9397
  3059  00264E  F000               	nop	
  3060                           
  3061                           ;main.c: 315:         printf("minimum %d", min_us_dist);
  3062  002650  0E5E               	movlw	low STR_20
  3063  002652  0100               	movlb	0	; () banked
  3064  002654  6FED               	movwf	printf@fmt& (0+255),b
  3065  002656  0EFF               	movlw	high STR_20
  3066  002658  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3067  00265A  C10A  F0EF         	movff	ultrasonic_main@min_us_dist_967,?_printf+2
  3068  00265E  C10B  F0F0         	movff	ultrasonic_main@min_us_dist_967+1,?_printf+3
  3069  002662  ECFB  F01E         	call	_printf	;wreg free
  3070                           
  3071                           ;main.c: 317:         if (min_us_dist<14){
  3072  002666  0101               	movlb	1	; () banked
  3073  002668  BF0B               	btfsc	(ultrasonic_main@min_us_dist_967+1)& (0+255),7,b
  3074  00266A  D006               	goto	u8520
  3075  00266C  510B               	movf	(ultrasonic_main@min_us_dist_967+1)& (0+255),w,b
  3076  00266E  E108               	bnz	l7951
  3077  002670  0E0E               	movlw	14
  3078  002672  5D0A               	subwf	ultrasonic_main@min_us_dist_967& (0+255),w,b
  3079  002674  B0D8               	btfsc	status,0,c
  3080  002676  D004               	goto	l7951
  3081  002678                     u8520:
  3082                           
  3083                           ; BSR set to: 1
  3084                           ;main.c: 318:             step2_offset = 0;
  3085  002678  0E00               	movlw	0
  3086  00267A  6F07               	movwf	(ultrasonic_main@step2_offset+1)& (0+255),b
  3087  00267C  0E00               	movlw	0
  3088  00267E  6F06               	movwf	ultrasonic_main@step2_offset& (0+255),b
  3089  002680                     l7951:
  3090                           
  3091                           ; BSR set to: 1
  3092                           ;main.c: 320:         if (min_us_dist>=14){
  3093  002680  BF0B               	btfsc	(ultrasonic_main@min_us_dist_967+1)& (0+255),7,b
  3094  002682  D015               	goto	l7955
  3095  002684  510B               	movf	(ultrasonic_main@min_us_dist_967+1)& (0+255),w,b
  3096  002686  E104               	bnz	u8530
  3097  002688  0E0E               	movlw	14
  3098  00268A  5D0A               	subwf	ultrasonic_main@min_us_dist_967& (0+255),w,b
  3099  00268C  A0D8               	btfss	status,0,c
  3100  00268E  D00F               	goto	l7955
  3101  002690                     u8530:
  3102                           
  3103                           ; BSR set to: 1
  3104                           ;main.c: 321:         step2_offset = abs(min_us_dist - 14);
  3105  002690  0EF2               	movlw	242
  3106  002692  250A               	addwf	ultrasonic_main@min_us_dist_967& (0+255),w,b
  3107  002694  0100               	movlb	0	; () banked
  3108  002696  6F92               	movwf	abs@a& (0+255),b
  3109  002698  0EFF               	movlw	255
  3110  00269A  0101               	movlb	1	; () banked
  3111  00269C  210B               	addwfc	(ultrasonic_main@min_us_dist_967+1)& (0+255),w,b
  3112  00269E  0100               	movlb	0	; () banked
  3113  0026A0  6F93               	movwf	(abs@a+1)& (0+255),b
  3114  0026A2  EC3A  F01E         	call	_abs	;wreg free
  3115  0026A6  C092  F106         	movff	?_abs,ultrasonic_main@step2_offset
  3116  0026AA  C093  F107         	movff	?_abs+1,ultrasonic_main@step2_offset+1
  3117  0026AE                     l7955:
  3118                           
  3119                           ;main.c: 323:         steps2_adj = 110 + step2_offset;
  3120  0026AE  0E6E               	movlw	110
  3121  0026B0  0101               	movlb	1	; () banked
  3122  0026B2  2506               	addwf	ultrasonic_main@step2_offset& (0+255),w,b
  3123  0026B4  6F08               	movwf	ultrasonic_main@steps2_adj& (0+255),b
  3124  0026B6  0E00               	movlw	0
  3125  0026B8  2107               	addwfc	(ultrasonic_main@step2_offset+1)& (0+255),w,b
  3126  0026BA  6F09               	movwf	(ultrasonic_main@steps2_adj+1)& (0+255),b
  3127                           
  3128                           ; BSR set to: 1
  3129                           ;main.c: 324:         sensed++;
  3130  0026BC  4B04               	infsnz	ultrasonic_main@sensed& (0+255),f,b
  3131  0026BE  2B05               	incf	(ultrasonic_main@sensed+1)& (0+255),f,b
  3132                           
  3133                           ; BSR set to: 1
  3134                           ;main.c: 327:         }
  3135  0026C0  4A50               	infsnz	_meas,f,c	;volatile
  3136  0026C2  2A51               	incf	_meas+1,f,c	;volatile
  3137  0026C4  D79C               	goto	l7927
  3138  0026C6                     l7963:
  3139                           
  3140                           ; BSR set to: 1
  3141                           ;main.c: 328:         if (sensed>2){
  3142  0026C6  BF05               	btfsc	(ultrasonic_main@sensed+1)& (0+255),7,b
  3143  0026C8  D006               	goto	l464
  3144  0026CA  5105               	movf	(ultrasonic_main@sensed+1)& (0+255),w,b
  3145  0026CC  E107               	bnz	l7969
  3146  0026CE  0E03               	movlw	3
  3147  0026D0  5D04               	subwf	ultrasonic_main@sensed& (0+255),w,b
  3148  0026D2  B0D8               	btfsc	status,0,c
  3149  0026D4  D003               	goto	u8550
  3150  0026D6                     l464:
  3151                           
  3152                           ; BSR set to: 1
  3153                           ;main.c: 307:     while(send){
  3154  0026D6  506D               	movf	_send,w,c
  3155  0026D8  A4D8               	btfss	status,2,c
  3156  0026DA  D78D               	goto	l7925
  3157  0026DC                     u8550:
  3158  0026DC                     l7969:
  3159                           
  3160                           ; BSR set to: 1
  3161                           ;main.c: 375:          { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));}
      +                          ;
  3162  0026DC  0E01               	movlw	1
  3163  0026DE  EC61  F01F         	call	_lcdInst
  3164  0026E2  0E11               	movlw	17
  3165  0026E4  0101               	movlb	1	; () banked
  3166  0026E6  6F00               	movwf	??_ultrasonic_main& (0+255),b
  3167  0026E8  0E3A               	movlw	58
  3168  0026EA                     u9407:
  3169  0026EA  2EE8               	decfsz	wreg,f,c
  3170  0026EC  D7FE               	bra	u9407
  3171  0026EE  2F00               	decfsz	??_ultrasonic_main& (0+255),f,b
  3172  0026F0  D7FC               	bra	u9407
  3173  0026F2  F000               	nop	
  3174                           
  3175                           ;main.c: 376:     printf("stepsadj %d", steps2_adj);
  3176  0026F4  0E23               	movlw	low STR_21
  3177  0026F6  0100               	movlb	0	; () banked
  3178  0026F8  6FED               	movwf	printf@fmt& (0+255),b
  3179  0026FA  0EFF               	movlw	high STR_21
  3180  0026FC  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3181  0026FE  C108  F0EF         	movff	ultrasonic_main@steps2_adj,?_printf+2
  3182  002702  C109  F0F0         	movff	ultrasonic_main@steps2_adj+1,?_printf+3
  3183  002706  ECFB  F01E         	call	_printf	;wreg free
  3184                           
  3185                           ;main.c: 377:     _delay((unsigned long)((1000)*(10000000/4000.0)));
  3186  00270A  0E0D               	movlw	13
  3187  00270C  0101               	movlb	1	; () banked
  3188  00270E  6F01               	movwf	(??_ultrasonic_main+1)& (0+255),b
  3189  002710  0EAF               	movlw	175
  3190  002712  6F00               	movwf	??_ultrasonic_main& (0+255),b
  3191  002714  0EB6               	movlw	182
  3192  002716                     u9417:
  3193  002716  2EE8               	decfsz	wreg,f,c
  3194  002718  D7FE               	bra	u9417
  3195  00271A  2F00               	decfsz	??_ultrasonic_main& (0+255),f,b
  3196  00271C  D7FC               	bra	u9417
  3197  00271E  2F01               	decfsz	(??_ultrasonic_main+1)& (0+255),f,b
  3198  002720  D7FA               	bra	u9417
  3199  002722  F000               	nop	
  3200                           
  3201                           ;main.c: 378:     return steps2_adj;
  3202  002724  C108  F0FC         	movff	ultrasonic_main@steps2_adj,?_ultrasonic_main
  3203  002728  C109  F0FD         	movff	ultrasonic_main@steps2_adj+1,?_ultrasonic_main+1
  3204  00272C  0012               	return		;funcret
  3205  00272E                     __end_of_ultrasonic_main:
  3206                           	opt callstack 0
  3207                           
  3208 ;; *************** function _trig *****************
  3209 ;; Defined at:
  3210 ;;		line 190 in file "main.c"
  3211 ;; Parameters:    Size  Location     Type
  3212 ;;		None
  3213 ;; Auto vars:     Size  Location     Type
  3214 ;;		None
  3215 ;; Return value:  Size  Location     Type
  3216 ;;                  1    wreg      void 
  3217 ;; Registers used:
  3218 ;;		wreg, status,2, status,0
  3219 ;; Tracked objects:
  3220 ;;		On entry : 0/0
  3221 ;;		On exit  : 0/0
  3222 ;;		Unchanged: 0/0
  3223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3226 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3227 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3228 ;;Total ram usage:        2 bytes
  3229 ;; Hardware stack levels used:    1
  3230 ;; Hardware stack levels required when called:    3
  3231 ;; This function calls:
  3232 ;;		Nothing
  3233 ;; This function is called by:
  3234 ;;		_ultrasonic_main
  3235 ;; This function uses a non-reentrant model
  3236 ;;
  3237                           
  3238                           	psect	text2
  3239  002FCC                     __ptext2:
  3240                           	opt callstack 0
  3241  002FCC                     _trig:
  3242                           	opt callstack 26
  3243                           
  3244                           ;main.c: 191:     for(b=1; b<5; b++){
  3245                           
  3246                           ;incstack = 0
  3247  002FCC  0E00               	movlw	0
  3248  002FCE  6E5B               	movwf	_b+1,c
  3249  002FD0  0E01               	movlw	1
  3250  002FD2  6E5A               	movwf	_b,c
  3251  002FD4  BE5B               	btfsc	_b+1,7,c
  3252  002FD6  D004               	goto	l7615
  3253  002FD8  505B               	movf	_b+1,w,c
  3254  002FDA  E101               	bnz	u8100
  3255  002FDC  D072               	goto	L1
  3256  002FDE                     u8100:
  3257  002FDE  0012               	return	
  3258  002FE0                     l7615:
  3259                           
  3260                           ;main.c: 192:         TMR1H = 0;
  3261  002FE0  0E00               	movlw	0
  3262  002FE2  6ECF               	movwf	4047,c	;volatile
  3263                           
  3264                           ;main.c: 193:         TMR1L = 0;
  3265  002FE4  0E00               	movlw	0
  3266  002FE6  6ECE               	movwf	4046,c	;volatile
  3267                           
  3268                           ;main.c: 194:         if(b==1){
  3269  002FE8  045A               	decf	_b,w,c
  3270  002FEA  105B               	iorwf	_b+1,w,c
  3271  002FEC  A4D8               	btfss	status,2,c
  3272  002FEE  D015               	goto	l7627
  3273                           
  3274                           ;main.c: 195:             RBIE = 0;
  3275  002FF0  96F2               	bcf	4082,3,c	;volatile
  3276                           
  3277                           ;main.c: 196:             RD1 = 1;
  3278  002FF2  8283               	bsf	3971,1,c	;volatile
  3279                           
  3280                           ;main.c: 197:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  3281  002FF4  0E08               	movlw	8
  3282  002FF6                     u9427:
  3283  002FF6  2EE8               	decfsz	wreg,f,c
  3284  002FF8  D7FE               	bra	u9427
  3285  002FFA  F000               	nop	
  3286                           
  3287                           ;main.c: 198:             RD1 = 0;
  3288  002FFC  9283               	bcf	3971,1,c	;volatile
  3289                           
  3290                           ;main.c: 200:             RBIE = 1;
  3291  002FFE  86F2               	bsf	4082,3,c	;volatile
  3292                           
  3293                           ;main.c: 201:             _delay((unsigned long)((135)*(10000000/4000.0)));
  3294  003000  0E02               	movlw	2
  3295  003002  0100               	movlb	0	; () banked
  3296  003004  6F81               	movwf	(??_trig+1)& (0+255),b
  3297  003006  0EB7               	movlw	183
  3298  003008  6F80               	movwf	??_trig& (0+255),b
  3299  00300A  0E4C               	movlw	76
  3300  00300C                     u9437:
  3301  00300C  2EE8               	decfsz	wreg,f,c
  3302  00300E  D7FE               	bra	u9437
  3303  003010  2F80               	decfsz	??_trig& (0+255),f,b
  3304  003012  D7FC               	bra	u9437
  3305  003014  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  3306  003016  D7FA               	bra	u9437
  3307  003018  F000               	nop	
  3308  00301A                     l7627:
  3309                           
  3310                           ;main.c: 203:         if(b==2){
  3311  00301A  0E02               	movlw	2
  3312  00301C  185A               	xorwf	_b,w,c
  3313  00301E  105B               	iorwf	_b+1,w,c
  3314  003020  A4D8               	btfss	status,2,c
  3315  003022  D015               	goto	l7637
  3316                           
  3317                           ;main.c: 204:             RBIE = 0;
  3318  003024  96F2               	bcf	4082,3,c	;volatile
  3319                           
  3320                           ;main.c: 205:             RD0 = 1;
  3321  003026  8083               	bsf	3971,0,c	;volatile
  3322                           
  3323                           ;main.c: 206:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  3324  003028  0E08               	movlw	8
  3325  00302A                     u9447:
  3326  00302A  2EE8               	decfsz	wreg,f,c
  3327  00302C  D7FE               	bra	u9447
  3328  00302E  F000               	nop	
  3329                           
  3330                           ;main.c: 207:             RD0 = 0;
  3331  003030  9083               	bcf	3971,0,c	;volatile
  3332                           
  3333                           ;main.c: 209:             RBIE = 1;
  3334  003032  86F2               	bsf	4082,3,c	;volatile
  3335                           
  3336                           ;main.c: 210:             _delay((unsigned long)((135)*(10000000/4000.0)));
  3337  003034  0E02               	movlw	2
  3338  003036  0100               	movlb	0	; () banked
  3339  003038  6F81               	movwf	(??_trig+1)& (0+255),b
  3340  00303A  0EB7               	movlw	183
  3341  00303C  6F80               	movwf	??_trig& (0+255),b
  3342  00303E  0E4C               	movlw	76
  3343  003040                     u9457:
  3344  003040  2EE8               	decfsz	wreg,f,c
  3345  003042  D7FE               	bra	u9457
  3346  003044  2F80               	decfsz	??_trig& (0+255),f,b
  3347  003046  D7FC               	bra	u9457
  3348  003048  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  3349  00304A  D7FA               	bra	u9457
  3350  00304C  F000               	nop	
  3351  00304E                     l7637:
  3352                           
  3353                           ;main.c: 212:         if(b==3){
  3354  00304E  0E03               	movlw	3
  3355  003050  185A               	xorwf	_b,w,c
  3356  003052  105B               	iorwf	_b+1,w,c
  3357  003054  A4D8               	btfss	status,2,c
  3358  003056  D015               	goto	l7647
  3359                           
  3360                           ;main.c: 213:             RBIE = 0;
  3361  003058  96F2               	bcf	4082,3,c	;volatile
  3362                           
  3363                           ;main.c: 214:             RB3 = 1;
  3364  00305A  8681               	bsf	3969,3,c	;volatile
  3365                           
  3366                           ;main.c: 215:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  3367  00305C  0E08               	movlw	8
  3368  00305E                     u9467:
  3369  00305E  2EE8               	decfsz	wreg,f,c
  3370  003060  D7FE               	bra	u9467
  3371  003062  F000               	nop	
  3372                           
  3373                           ;main.c: 216:             RB3 = 0;
  3374  003064  9681               	bcf	3969,3,c	;volatile
  3375                           
  3376                           ;main.c: 218:             RBIE = 1;
  3377  003066  86F2               	bsf	4082,3,c	;volatile
  3378                           
  3379                           ;main.c: 219:             _delay((unsigned long)((135)*(10000000/4000.0)));
  3380  003068  0E02               	movlw	2
  3381  00306A  0100               	movlb	0	; () banked
  3382  00306C  6F81               	movwf	(??_trig+1)& (0+255),b
  3383  00306E  0EB7               	movlw	183
  3384  003070  6F80               	movwf	??_trig& (0+255),b
  3385  003072  0E4C               	movlw	76
  3386  003074                     u9477:
  3387  003074  2EE8               	decfsz	wreg,f,c
  3388  003076  D7FE               	bra	u9477
  3389  003078  2F80               	decfsz	??_trig& (0+255),f,b
  3390  00307A  D7FC               	bra	u9477
  3391  00307C  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  3392  00307E  D7FA               	bra	u9477
  3393  003080  F000               	nop	
  3394  003082                     l7647:
  3395                           
  3396                           ;main.c: 221:         if(b==4){
  3397  003082  0E04               	movlw	4
  3398  003084  185A               	xorwf	_b,w,c
  3399  003086  105B               	iorwf	_b+1,w,c
  3400  003088  A4D8               	btfss	status,2,c
  3401  00308A  D015               	goto	l7657
  3402                           
  3403                           ;main.c: 222:             RBIE = 0;
  3404  00308C  96F2               	bcf	4082,3,c	;volatile
  3405                           
  3406                           ;main.c: 223:             RB2 = 1;
  3407  00308E  8481               	bsf	3969,2,c	;volatile
  3408                           
  3409                           ;main.c: 224:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  3410  003090  0E08               	movlw	8
  3411  003092                     u9487:
  3412  003092  2EE8               	decfsz	wreg,f,c
  3413  003094  D7FE               	bra	u9487
  3414  003096  F000               	nop	
  3415                           
  3416                           ;main.c: 225:             RB2 = 0;
  3417  003098  9481               	bcf	3969,2,c	;volatile
  3418                           
  3419                           ;main.c: 227:             RBIE = 1;
  3420  00309A  86F2               	bsf	4082,3,c	;volatile
  3421                           
  3422                           ;main.c: 228:             _delay((unsigned long)((135)*(10000000/4000.0)));
  3423  00309C  0E02               	movlw	2
  3424  00309E  0100               	movlb	0	; () banked
  3425  0030A0  6F81               	movwf	(??_trig+1)& (0+255),b
  3426  0030A2  0EB7               	movlw	183
  3427  0030A4  6F80               	movwf	??_trig& (0+255),b
  3428  0030A6  0E4C               	movlw	76
  3429  0030A8                     u9497:
  3430  0030A8  2EE8               	decfsz	wreg,f,c
  3431  0030AA  D7FE               	bra	u9497
  3432  0030AC  2F80               	decfsz	??_trig& (0+255),f,b
  3433  0030AE  D7FC               	bra	u9497
  3434  0030B0  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  3435  0030B2  D7FA               	bra	u9497
  3436  0030B4  F000               	nop	
  3437  0030B6                     l7657:
  3438                           
  3439                           ;main.c: 230:     }
  3440  0030B6  4A5A               	infsnz	_b,f,c
  3441  0030B8  2A5B               	incf	_b+1,f,c
  3442  0030BA  BE5B               	btfsc	_b+1,7,c
  3443  0030BC  D791               	goto	l7615
  3444  0030BE  505B               	movf	_b+1,w,c
  3445  0030C0  E105               	bnz	u8150
  3446  0030C2                     L1:
  3447  0030C2  0E05               	movlw	5
  3448  0030C4  5C5A               	subwf	_b,w,c
  3449  0030C6  B0D8               	btfsc	status,0,c
  3450  0030C8  0012               	return	
  3451  0030CA  D78A               	goto	l7615
  3452  0030CC                     u8150:
  3453  0030CC  0012               	return		;funcret
  3454  0030CE                     __end_of_trig:
  3455                           	opt callstack 0
  3456                           
  3457 ;; *************** function _print_echo *****************
  3458 ;; Defined at:
  3459 ;;		line 233 in file "main.c"
  3460 ;; Parameters:    Size  Location     Type
  3461 ;;		None
  3462 ;; Auto vars:     Size  Location     Type
  3463 ;;		None
  3464 ;; Return value:  Size  Location     Type
  3465 ;;                  1    wreg      void 
  3466 ;; Registers used:
  3467 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3468 ;; Tracked objects:
  3469 ;;		On entry : 0/0
  3470 ;;		On exit  : 0/0
  3471 ;;		Unchanged: 0/0
  3472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3475 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3476 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3477 ;;Total ram usage:        1 bytes
  3478 ;; Hardware stack levels used:    1
  3479 ;; Hardware stack levels required when called:   14
  3480 ;; This function calls:
  3481 ;;		_lcdInst
  3482 ;;		_printf
  3483 ;; This function is called by:
  3484 ;;		_ultrasonic_main
  3485 ;; This function uses a non-reentrant model
  3486 ;;
  3487                           
  3488                           	psect	text3
  3489  002394                     __ptext3:
  3490                           	opt callstack 0
  3491  002394                     _print_echo:
  3492                           	opt callstack 15
  3493                           
  3494                           ;main.c: 234:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  3495                           
  3496                           ;incstack = 0
  3497  002394  0E01               	movlw	1
  3498  002396  EC61  F01F         	call	_lcdInst
  3499  00239A  0E11               	movlw	17
  3500  00239C  0100               	movlb	0	; () banked
  3501  00239E  6FFB               	movwf	??_print_echo& (0+255),b
  3502  0023A0  0E3A               	movlw	58
  3503  0023A2                     u9507:
  3504  0023A2  2EE8               	decfsz	wreg,f,c
  3505  0023A4  D7FE               	bra	u9507
  3506  0023A6  2FFB               	decfsz	??_print_echo& (0+255),f,b
  3507  0023A8  D7FC               	bra	u9507
  3508  0023AA  F000               	nop	
  3509                           
  3510                           ;main.c: 235:     if(a[0]>=2 && a[0]<=400){
  3511  0023AC  BE62               	btfsc	_a+1,7,c
  3512  0023AE  D01D               	goto	l7669
  3513  0023B0  5062               	movf	_a+1,w,c
  3514  0023B2  E104               	bnz	u8160
  3515  0023B4  0E02               	movlw	2
  3516  0023B6  5C61               	subwf	_a,w,c
  3517  0023B8  A0D8               	btfss	status,0,c
  3518  0023BA  D017               	goto	l7669
  3519  0023BC                     u8160:
  3520  0023BC  BE62               	btfsc	_a+1,7,c
  3521  0023BE  D006               	goto	u8170
  3522  0023C0  0E91               	movlw	145
  3523  0023C2  5C61               	subwf	_a,w,c
  3524  0023C4  0E01               	movlw	1
  3525  0023C6  5862               	subwfb	_a+1,w,c
  3526  0023C8  B0D8               	btfsc	status,0,c
  3527  0023CA  D00F               	goto	l7669
  3528  0023CC                     u8170:
  3529                           
  3530                           ;main.c: 236:         printf("Dist1=%d,Avg=%d ",a[0],dist_final[0][5]);
  3531  0023CC  0EE8               	movlw	low STR_10
  3532  0023CE  0100               	movlb	0	; () banked
  3533  0023D0  6FED               	movwf	printf@fmt& (0+255),b
  3534  0023D2  0EFD               	movlw	high STR_10
  3535  0023D4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3536  0023D6  C061  F0EF         	movff	_a,?_printf+2
  3537  0023DA  C062  F0F0         	movff	_a+1,?_printf+3
  3538  0023DE  C25A  F0F1         	movff	_dist_final+10,?_printf+4
  3539  0023E2  C25B  F0F2         	movff	_dist_final+11,?_printf+5
  3540  0023E6  ECFB  F01E         	call	_printf	;wreg free
  3541  0023EA                     l7669:
  3542                           
  3543                           ;main.c: 238:     if(!(a[0]>=2 && a[0]<=400)){
  3544  0023EA  BE62               	btfsc	_a+1,7,c
  3545  0023EC  D00E               	goto	u8190
  3546  0023EE  5062               	movf	_a+1,w,c
  3547  0023F0  E104               	bnz	u8180
  3548  0023F2  0E02               	movlw	2
  3549  0023F4  5C61               	subwf	_a,w,c
  3550  0023F6  A0D8               	btfss	status,0,c
  3551  0023F8  D008               	goto	u8190
  3552  0023FA                     u8180:
  3553  0023FA  BE62               	btfsc	_a+1,7,c
  3554  0023FC  D00D               	goto	l7675
  3555  0023FE  0E91               	movlw	145
  3556  002400  5C61               	subwf	_a,w,c
  3557  002402  0E01               	movlw	1
  3558  002404  5862               	subwfb	_a+1,w,c
  3559  002406  A0D8               	btfss	status,0,c
  3560  002408  D007               	goto	l7675
  3561  00240A                     u8190:
  3562                           
  3563                           ;main.c: 239:         printf("Dist1 = X");
  3564  00240A  0E7F               	movlw	low STR_11
  3565  00240C  0100               	movlb	0	; () banked
  3566  00240E  6FED               	movwf	printf@fmt& (0+255),b
  3567  002410  0EFF               	movlw	high STR_11
  3568  002412  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3569  002414  ECFB  F01E         	call	_printf	;wreg free
  3570  002418                     l7675:
  3571                           
  3572                           ;main.c: 241:     if(a[1]>=2 && a[1]<=400){
  3573  002418  BE64               	btfsc	_a+3,7,c
  3574  00241A  D020               	goto	l7683
  3575  00241C  5064               	movf	_a+3,w,c
  3576  00241E  E104               	bnz	u8200
  3577  002420  0E02               	movlw	2
  3578  002422  5C63               	subwf	_a+2,w,c
  3579  002424  A0D8               	btfss	status,0,c
  3580  002426  D01A               	goto	l7683
  3581  002428                     u8200:
  3582  002428  BE64               	btfsc	_a+3,7,c
  3583  00242A  D006               	goto	u8210
  3584  00242C  0E91               	movlw	145
  3585  00242E  5C63               	subwf	_a+2,w,c
  3586  002430  0E01               	movlw	1
  3587  002432  5864               	subwfb	_a+3,w,c
  3588  002434  B0D8               	btfsc	status,0,c
  3589  002436  D012               	goto	l7683
  3590  002438                     u8210:
  3591  002438  0EC0               	movlw	192
  3592  00243A  EC61  F01F         	call	_lcdInst
  3593                           
  3594                           ;main.c: 243:         printf("Dist2=%d,Avg=%d",a[1],dist_final[1][5]);
  3595  00243E  0E4D               	movlw	low STR_12
  3596  002440  0100               	movlb	0	; () banked
  3597  002442  6FED               	movwf	printf@fmt& (0+255),b
  3598  002444  0EFE               	movlw	high STR_12
  3599  002446  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3600  002448  C063  F0EF         	movff	_a+2,?_printf+2
  3601  00244C  C064  F0F0         	movff	_a+3,?_printf+3
  3602  002450  C266  F0F1         	movff	_dist_final+22,?_printf+4
  3603  002454  C267  F0F2         	movff	_dist_final+23,?_printf+5
  3604  002458  ECFB  F01E         	call	_printf	;wreg free
  3605  00245C                     l7683:
  3606                           
  3607                           ;main.c: 245:     if(!(a[1]>=2 && a[1]<=400)){
  3608  00245C  BE64               	btfsc	_a+3,7,c
  3609  00245E  D00E               	goto	u8230
  3610  002460  5064               	movf	_a+3,w,c
  3611  002462  E104               	bnz	u8220
  3612  002464  0E02               	movlw	2
  3613  002466  5C63               	subwf	_a+2,w,c
  3614  002468  A0D8               	btfss	status,0,c
  3615  00246A  D008               	goto	u8230
  3616  00246C                     u8220:
  3617  00246C  BE64               	btfsc	_a+3,7,c
  3618  00246E  D010               	goto	l7691
  3619  002470  0E91               	movlw	145
  3620  002472  5C63               	subwf	_a+2,w,c
  3621  002474  0E01               	movlw	1
  3622  002476  5864               	subwfb	_a+3,w,c
  3623  002478  A0D8               	btfss	status,0,c
  3624  00247A  D00A               	goto	l7691
  3625  00247C                     u8230:
  3626  00247C  0EC0               	movlw	192
  3627  00247E  EC61  F01F         	call	_lcdInst
  3628                           
  3629                           ;main.c: 247:         printf("Dist2 = X");
  3630  002482  0E89               	movlw	low STR_13
  3631  002484  0100               	movlb	0	; () banked
  3632  002486  6FED               	movwf	printf@fmt& (0+255),b
  3633  002488  0EFF               	movlw	high STR_13
  3634  00248A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3635  00248C  ECFB  F01E         	call	_printf	;wreg free
  3636  002490                     l7691:
  3637                           
  3638                           ;main.c: 249:     if(a[2]>=2 && a[2]<=400){
  3639  002490  BE66               	btfsc	_a+5,7,c
  3640  002492  D020               	goto	l7699
  3641  002494  5066               	movf	_a+5,w,c
  3642  002496  E104               	bnz	u8240
  3643  002498  0E02               	movlw	2
  3644  00249A  5C65               	subwf	_a+4,w,c
  3645  00249C  A0D8               	btfss	status,0,c
  3646  00249E  D01A               	goto	l7699
  3647  0024A0                     u8240:
  3648  0024A0  BE66               	btfsc	_a+5,7,c
  3649  0024A2  D006               	goto	u8250
  3650  0024A4  0E91               	movlw	145
  3651  0024A6  5C65               	subwf	_a+4,w,c
  3652  0024A8  0E01               	movlw	1
  3653  0024AA  5866               	subwfb	_a+5,w,c
  3654  0024AC  B0D8               	btfsc	status,0,c
  3655  0024AE  D012               	goto	l7699
  3656  0024B0                     u8250:
  3657  0024B0  0E90               	movlw	144
  3658  0024B2  EC61  F01F         	call	_lcdInst
  3659                           
  3660                           ;main.c: 251:         printf("Dist3=%d,Avg=%d",a[2],dist_final[2][5]);
  3661  0024B6  0E5D               	movlw	low STR_14
  3662  0024B8  0100               	movlb	0	; () banked
  3663  0024BA  6FED               	movwf	printf@fmt& (0+255),b
  3664  0024BC  0EFE               	movlw	high STR_14
  3665  0024BE  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3666  0024C0  C065  F0EF         	movff	_a+4,?_printf+2
  3667  0024C4  C066  F0F0         	movff	_a+5,?_printf+3
  3668  0024C8  C272  F0F1         	movff	_dist_final+34,?_printf+4
  3669  0024CC  C273  F0F2         	movff	_dist_final+35,?_printf+5
  3670  0024D0  ECFB  F01E         	call	_printf	;wreg free
  3671  0024D4                     l7699:
  3672                           
  3673                           ;main.c: 253:     if(!(a[2]>=2 && a[2]<=400)){
  3674  0024D4  BE66               	btfsc	_a+5,7,c
  3675  0024D6  D00E               	goto	u8270
  3676  0024D8  5066               	movf	_a+5,w,c
  3677  0024DA  E104               	bnz	u8260
  3678  0024DC  0E02               	movlw	2
  3679  0024DE  5C65               	subwf	_a+4,w,c
  3680  0024E0  A0D8               	btfss	status,0,c
  3681  0024E2  D008               	goto	u8270
  3682  0024E4                     u8260:
  3683  0024E4  BE66               	btfsc	_a+5,7,c
  3684  0024E6  D010               	goto	l7707
  3685  0024E8  0E91               	movlw	145
  3686  0024EA  5C65               	subwf	_a+4,w,c
  3687  0024EC  0E01               	movlw	1
  3688  0024EE  5866               	subwfb	_a+5,w,c
  3689  0024F0  A0D8               	btfss	status,0,c
  3690  0024F2  D00A               	goto	l7707
  3691  0024F4                     u8270:
  3692  0024F4  0E90               	movlw	144
  3693  0024F6  EC61  F01F         	call	_lcdInst
  3694                           
  3695                           ;main.c: 255:         printf("Dist3 = X");
  3696  0024FA  0E93               	movlw	low STR_15
  3697  0024FC  0100               	movlb	0	; () banked
  3698  0024FE  6FED               	movwf	printf@fmt& (0+255),b
  3699  002500  0EFF               	movlw	high STR_15
  3700  002502  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3701  002504  ECFB  F01E         	call	_printf	;wreg free
  3702  002508                     l7707:
  3703                           
  3704                           ;main.c: 257:     if(a[3]>=2 && a[3]<=400){
  3705  002508  BE68               	btfsc	_a+7,7,c
  3706  00250A  D020               	goto	l7715
  3707  00250C  5068               	movf	_a+7,w,c
  3708  00250E  E104               	bnz	u8280
  3709  002510  0E02               	movlw	2
  3710  002512  5C67               	subwf	_a+6,w,c
  3711  002514  A0D8               	btfss	status,0,c
  3712  002516  D01A               	goto	l7715
  3713  002518                     u8280:
  3714  002518  BE68               	btfsc	_a+7,7,c
  3715  00251A  D006               	goto	u8290
  3716  00251C  0E91               	movlw	145
  3717  00251E  5C67               	subwf	_a+6,w,c
  3718  002520  0E01               	movlw	1
  3719  002522  5868               	subwfb	_a+7,w,c
  3720  002524  B0D8               	btfsc	status,0,c
  3721  002526  D012               	goto	l7715
  3722  002528                     u8290:
  3723  002528  0ED0               	movlw	208
  3724  00252A  EC61  F01F         	call	_lcdInst
  3725                           
  3726                           ;main.c: 259:         printf("Dist4=%d,Avg=%d ",a[3],dist_final[3][5]);
  3727  00252E  0EF9               	movlw	low STR_16
  3728  002530  0100               	movlb	0	; () banked
  3729  002532  6FED               	movwf	printf@fmt& (0+255),b
  3730  002534  0EFD               	movlw	high STR_16
  3731  002536  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3732  002538  C067  F0EF         	movff	_a+6,?_printf+2
  3733  00253C  C068  F0F0         	movff	_a+7,?_printf+3
  3734  002540  C27E  F0F1         	movff	_dist_final+46,?_printf+4
  3735  002544  C27F  F0F2         	movff	_dist_final+47,?_printf+5
  3736  002548  ECFB  F01E         	call	_printf	;wreg free
  3737  00254C                     l7715:
  3738                           
  3739                           ;main.c: 262:     if(!(a[3]>=2 && a[3]<=400)){
  3740  00254C  BE68               	btfsc	_a+7,7,c
  3741  00254E  D00E               	goto	u8310
  3742  002550  5068               	movf	_a+7,w,c
  3743  002552  E104               	bnz	u8300
  3744  002554  0E02               	movlw	2
  3745  002556  5C67               	subwf	_a+6,w,c
  3746  002558  A0D8               	btfss	status,0,c
  3747  00255A  D008               	goto	u8310
  3748  00255C                     u8300:
  3749  00255C  BE68               	btfsc	_a+7,7,c
  3750  00255E  0012               	return	
  3751  002560  0E91               	movlw	145
  3752  002562  5C67               	subwf	_a+6,w,c
  3753  002564  0E01               	movlw	1
  3754  002566  5868               	subwfb	_a+7,w,c
  3755  002568  A0D8               	btfss	status,0,c
  3756  00256A  0012               	return	
  3757  00256C                     u8310:
  3758  00256C  0ED0               	movlw	208
  3759  00256E  EC61  F01F         	call	_lcdInst
  3760                           
  3761                           ;main.c: 264:         printf("Dist4 = X");
  3762  002572  0E9D               	movlw	low STR_17
  3763  002574  0100               	movlb	0	; () banked
  3764  002576  6FED               	movwf	printf@fmt& (0+255),b
  3765  002578  0EFF               	movlw	high STR_17
  3766  00257A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3767  00257C  ECFB  F01E         	call	_printf	;wreg free
  3768  002580  0012               	return		;funcret
  3769  002582                     __end_of_print_echo:
  3770                           	opt callstack 0
  3771                           
  3772 ;; *************** function _min *****************
  3773 ;; Defined at:
  3774 ;;		line 267 in file "main.c"
  3775 ;; Parameters:    Size  Location     Type
  3776 ;;  array           2    0[BANK0 ] PTR int 
  3777 ;;		 -> a(8), 
  3778 ;;  size            2    2[BANK0 ] int 
  3779 ;; Auto vars:     Size  Location     Type
  3780 ;;  i               2    9[BANK0 ] int 
  3781 ;;  minimum         2    7[BANK0 ] int 
  3782 ;; Return value:  Size  Location     Type
  3783 ;;                  2    0[BANK0 ] int 
  3784 ;; Registers used:
  3785 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3786 ;; Tracked objects:
  3787 ;;		On entry : 0/0
  3788 ;;		On exit  : 0/0
  3789 ;;		Unchanged: 0/0
  3790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3791 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3792 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3793 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3794 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3795 ;;Total ram usage:       11 bytes
  3796 ;; Hardware stack levels used:    1
  3797 ;; Hardware stack levels required when called:    3
  3798 ;; This function calls:
  3799 ;;		Nothing
  3800 ;; This function is called by:
  3801 ;;		_ultrasonic_main
  3802 ;; This function uses a non-reentrant model
  3803 ;;
  3804                           
  3805                           	psect	text4
  3806  002EBC                     __ptext4:
  3807                           	opt callstack 0
  3808  002EBC                     _min:
  3809                           	opt callstack 26
  3810                           
  3811                           ;main.c: 268:     int minimum =0 ;
  3812                           
  3813                           ;incstack = 0
  3814  002EBC  0E00               	movlw	0
  3815  002EBE  0100               	movlb	0	; () banked
  3816  002EC0  6F88               	movwf	(min@minimum+1)& (0+255),b
  3817  002EC2  0E00               	movlw	0
  3818  002EC4  6F87               	movwf	min@minimum& (0+255),b
  3819                           
  3820                           ; BSR set to: 0
  3821                           ;main.c: 269:     if (array[0]<=23){
  3822  002EC6  C080  FFD9         	movff	min@array,fsr2l
  3823  002ECA  C081  FFDA         	movff	min@array+1,fsr2h
  3824  002ECE  0E01               	movlw	1
  3825  002ED0  BEDB               	btfsc	plusw2,7,c
  3826  002ED2  D007               	goto	u8320
  3827  002ED4  0E01               	movlw	1
  3828  002ED6  50DB               	movf	plusw2,w,c
  3829  002ED8  E10C               	bnz	l7729
  3830  002EDA  0E18               	movlw	24
  3831  002EDC  5CDE               	subwf	postinc2,w,c
  3832  002EDE  B0D8               	btfsc	status,0,c
  3833  002EE0  D008               	goto	l7729
  3834  002EE2                     u8320:
  3835                           
  3836                           ; BSR set to: 0
  3837                           ;main.c: 270:          minimum = array[0];}
  3838  002EE2  C080  FFD9         	movff	min@array,fsr2l
  3839  002EE6  C081  FFDA         	movff	min@array+1,fsr2h
  3840  002EEA  CFDE F087          	movff	postinc2,min@minimum
  3841  002EEE  CFDD F088          	movff	postdec2,min@minimum+1
  3842  002EF2                     l7729:
  3843                           
  3844                           ; BSR set to: 0
  3845                           ;main.c: 274:     for (int i = 0; i<size; i++){
  3846  002EF2  0E00               	movlw	0
  3847  002EF4  6F8A               	movwf	(min@i+1)& (0+255),b
  3848  002EF6  0E00               	movlw	0
  3849  002EF8  6F89               	movwf	min@i& (0+255),b
  3850  002EFA  D059               	goto	l7745
  3851  002EFC                     l7731:
  3852                           
  3853                           ; BSR set to: 0
  3854                           ;main.c: 278:         if ((minimum==0)||(minimum>=array[i])&&(array[i]!=0)&&(array[i]>=1
      +                          4)&&(array[i]<=23)){
  3855  002EFC  5187               	movf	min@minimum& (0+255),w,b
  3856  002EFE  1188               	iorwf	(min@minimum+1)& (0+255),w,b
  3857  002F00  B4D8               	btfsc	status,2,c
  3858  002F02  D046               	goto	u8370
  3859                           
  3860                           ; BSR set to: 0
  3861  002F04  90D8               	bcf	status,0,c
  3862  002F06  3589               	rlcf	min@i& (0+255),w,b
  3863  002F08  6ED9               	movwf	fsr2l,c
  3864  002F0A  358A               	rlcf	(min@i+1)& (0+255),w,b
  3865  002F0C  6EDA               	movwf	fsr2h,c
  3866  002F0E  5180               	movf	min@array& (0+255),w,b
  3867  002F10  26D9               	addwf	fsr2l,f,c
  3868  002F12  5181               	movf	(min@array+1)& (0+255),w,b
  3869  002F14  22DA               	addwfc	fsr2h,f,c
  3870  002F16  50DE               	movf	postinc2,w,c
  3871  002F18  5D87               	subwf	min@minimum& (0+255),w,b
  3872  002F1A  5188               	movf	(min@minimum+1)& (0+255),w,b
  3873  002F1C  0A80               	xorlw	128
  3874  002F1E  6F86               	movwf	(??_min+2)& (0+255),b
  3875  002F20  50DE               	movf	postinc2,w,c
  3876  002F22  0A80               	xorlw	128
  3877  002F24  5986               	subwfb	(??_min+2)& (0+255),w,b
  3878  002F26  A0D8               	btfss	status,0,c
  3879  002F28  D040               	goto	l7743
  3880                           
  3881                           ; BSR set to: 0
  3882  002F2A  90D8               	bcf	status,0,c
  3883  002F2C  3589               	rlcf	min@i& (0+255),w,b
  3884  002F2E  6ED9               	movwf	fsr2l,c
  3885  002F30  358A               	rlcf	(min@i+1)& (0+255),w,b
  3886  002F32  6EDA               	movwf	fsr2h,c
  3887  002F34  5180               	movf	min@array& (0+255),w,b
  3888  002F36  26D9               	addwf	fsr2l,f,c
  3889  002F38  5181               	movf	(min@array+1)& (0+255),w,b
  3890  002F3A  22DA               	addwfc	fsr2h,f,c
  3891  002F3C  50DE               	movf	postinc2,w,c
  3892  002F3E  10DE               	iorwf	postinc2,w,c
  3893  002F40  B4D8               	btfsc	status,2,c
  3894  002F42  D033               	goto	l7743
  3895                           
  3896                           ; BSR set to: 0
  3897  002F44  90D8               	bcf	status,0,c
  3898  002F46  3589               	rlcf	min@i& (0+255),w,b
  3899  002F48  6ED9               	movwf	fsr2l,c
  3900  002F4A  358A               	rlcf	(min@i+1)& (0+255),w,b
  3901  002F4C  6EDA               	movwf	fsr2h,c
  3902  002F4E  5180               	movf	min@array& (0+255),w,b
  3903  002F50  26D9               	addwf	fsr2l,f,c
  3904  002F52  5181               	movf	(min@array+1)& (0+255),w,b
  3905  002F54  22DA               	addwfc	fsr2h,f,c
  3906  002F56  0E01               	movlw	1
  3907  002F58  BEDB               	btfsc	plusw2,7,c
  3908  002F5A  D027               	goto	l7743
  3909  002F5C  0E01               	movlw	1
  3910  002F5E  50DB               	movf	plusw2,w,c
  3911  002F60  E104               	bnz	u8360
  3912  002F62  0E0E               	movlw	14
  3913  002F64  5CDE               	subwf	postinc2,w,c
  3914  002F66  A0D8               	btfss	status,0,c
  3915  002F68  D020               	goto	l7743
  3916  002F6A                     u8360:
  3917                           
  3918                           ; BSR set to: 0
  3919  002F6A  90D8               	bcf	status,0,c
  3920  002F6C  3589               	rlcf	min@i& (0+255),w,b
  3921  002F6E  6ED9               	movwf	fsr2l,c
  3922  002F70  358A               	rlcf	(min@i+1)& (0+255),w,b
  3923  002F72  6EDA               	movwf	fsr2h,c
  3924  002F74  5180               	movf	min@array& (0+255),w,b
  3925  002F76  26D9               	addwf	fsr2l,f,c
  3926  002F78  5181               	movf	(min@array+1)& (0+255),w,b
  3927  002F7A  22DA               	addwfc	fsr2h,f,c
  3928  002F7C  0E01               	movlw	1
  3929  002F7E  BEDB               	btfsc	plusw2,7,c
  3930  002F80  D007               	goto	u8370
  3931  002F82  0E01               	movlw	1
  3932  002F84  50DB               	movf	plusw2,w,c
  3933  002F86  E111               	bnz	l7743
  3934  002F88  0E18               	movlw	24
  3935  002F8A  5CDE               	subwf	postinc2,w,c
  3936  002F8C  B0D8               	btfsc	status,0,c
  3937  002F8E  D00D               	goto	l7743
  3938  002F90                     u8370:
  3939                           
  3940                           ; BSR set to: 0
  3941                           ;main.c: 282:             minimum = array[i];
  3942  002F90  90D8               	bcf	status,0,c
  3943  002F92  3589               	rlcf	min@i& (0+255),w,b
  3944  002F94  6ED9               	movwf	fsr2l,c
  3945  002F96  358A               	rlcf	(min@i+1)& (0+255),w,b
  3946  002F98  6EDA               	movwf	fsr2h,c
  3947  002F9A  5180               	movf	min@array& (0+255),w,b
  3948  002F9C  26D9               	addwf	fsr2l,f,c
  3949  002F9E  5181               	movf	(min@array+1)& (0+255),w,b
  3950  002FA0  22DA               	addwfc	fsr2h,f,c
  3951  002FA2  CFDE F087          	movff	postinc2,min@minimum
  3952  002FA6  CFDD F088          	movff	postdec2,min@minimum+1
  3953  002FAA                     l7743:
  3954                           
  3955                           ; BSR set to: 0
  3956                           ;main.c: 287:     }
  3957  002FAA  4B89               	infsnz	min@i& (0+255),f,b
  3958  002FAC  2B8A               	incf	(min@i+1)& (0+255),f,b
  3959  002FAE                     l7745:
  3960                           
  3961                           ; BSR set to: 0
  3962  002FAE  5182               	movf	min@size& (0+255),w,b
  3963  002FB0  5D89               	subwf	min@i& (0+255),w,b
  3964  002FB2  518A               	movf	(min@i+1)& (0+255),w,b
  3965  002FB4  0A80               	xorlw	128
  3966  002FB6  6F84               	movwf	??_min& (0+255),b
  3967  002FB8  5183               	movf	(min@size+1)& (0+255),w,b
  3968  002FBA  0A80               	xorlw	128
  3969  002FBC  5984               	subwfb	??_min& (0+255),w,b
  3970  002FBE  A0D8               	btfss	status,0,c
  3971  002FC0  D79D               	goto	l7731
  3972                           
  3973                           ; BSR set to: 0
  3974                           ;main.c: 288:     return minimum;
  3975  002FC2  C087  F080         	movff	min@minimum,?_min
  3976  002FC6  C088  F081         	movff	min@minimum+1,?_min+1
  3977                           
  3978                           ; BSR set to: 0
  3979  002FCA  0012               	return		;funcret
  3980  002FCC                     __end_of_min:
  3981                           	opt callstack 0
  3982                           
  3983 ;; *************** function _start *****************
  3984 ;; Defined at:
  3985 ;;		line 697 in file "main.c"
  3986 ;; Parameters:    Size  Location     Type
  3987 ;;		None
  3988 ;; Auto vars:     Size  Location     Type
  3989 ;;		None
  3990 ;; Return value:  Size  Location     Type
  3991 ;;                  1    wreg      void 
  3992 ;; Registers used:
  3993 ;;		wreg, status,2, status,0, cstack
  3994 ;; Tracked objects:
  3995 ;;		On entry : 0/0
  3996 ;;		On exit  : 0/0
  3997 ;;		Unchanged: 0/0
  3998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4003 ;;Total ram usage:        0 bytes
  4004 ;; Hardware stack levels used:    1
  4005 ;; Hardware stack levels required when called:    5
  4006 ;; This function calls:
  4007 ;;		_I2C_Master_Init
  4008 ;;		_I2C_Master_Start
  4009 ;;		_I2C_Master_Stop
  4010 ;;		_I2C_Master_Write
  4011 ;; This function is called by:
  4012 ;;		_main
  4013 ;; This function uses a non-reentrant model
  4014 ;;
  4015                           
  4016                           	psect	text5
  4017  003AE6                     __ptext5:
  4018                           	opt callstack 0
  4019  003AE6                     _start:
  4020                           	opt callstack 25
  4021                           
  4022                           ;main.c: 698:     I2C_Master_Init(100000);
  4023                           
  4024                           ; BSR set to: 0
  4025                           ;incstack = 0
  4026  003AE6  0EA0               	movlw	160
  4027  003AE8  0100               	movlb	0	; () banked
  4028  003AEA  6F8D               	movwf	I2C_Master_Init@clockFreq& (0+255),b
  4029  003AEC  0E86               	movlw	134
  4030  003AEE  6F8E               	movwf	(I2C_Master_Init@clockFreq+1)& (0+255),b
  4031  003AF0  0E01               	movlw	1
  4032  003AF2  6F8F               	movwf	(I2C_Master_Init@clockFreq+2)& (0+255),b
  4033  003AF4  0E00               	movlw	0
  4034  003AF6  6F90               	movwf	(I2C_Master_Init@clockFreq+3)& (0+255),b
  4035  003AF8  ECED  F01C         	call	_I2C_Master_Init	;wreg free
  4036                           
  4037                           ;main.c: 699:     I2C_Master_Start();
  4038  003AFC  EC72  F01F         	call	_I2C_Master_Start	;wreg free
  4039                           
  4040                           ;main.c: 700:     I2C_Master_Write(0b00010000);
  4041  003B00  0E00               	movlw	0
  4042  003B02  0100               	movlb	0	; () banked
  4043  003B04  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4044  003B06  0E10               	movlw	16
  4045  003B08  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4046  003B0A  EC69  F01F         	call	_I2C_Master_Write	;wreg free
  4047                           
  4048                           ;main.c: 701:     I2C_Master_Stop();
  4049  003B0E  EC6E  F01F         	call	_I2C_Master_Stop	;wreg free
  4050                           
  4051                           ;main.c: 703:     I2C_Master_Start();
  4052  003B12  EC72  F01F         	call	_I2C_Master_Start	;wreg free
  4053                           
  4054                           ;main.c: 704:     I2C_Master_Write(0b00010000);
  4055  003B16  0E00               	movlw	0
  4056  003B18  0100               	movlb	0	; () banked
  4057  003B1A  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4058  003B1C  0E10               	movlw	16
  4059  003B1E  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4060  003B20  EC69  F01F         	call	_I2C_Master_Write	;wreg free
  4061                           
  4062                           ;main.c: 705:     I2C_Master_Write('2');
  4063  003B24  0E00               	movlw	0
  4064  003B26  0100               	movlb	0	; () banked
  4065  003B28  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4066  003B2A  0E32               	movlw	50
  4067  003B2C  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4068  003B2E  EC69  F01F         	call	_I2C_Master_Write	;wreg free
  4069                           
  4070                           ;main.c: 706:     I2C_Master_Stop();
  4071  003B32  EC6E  F01F         	call	_I2C_Master_Stop	;wreg free
  4072  003B36  0012               	return		;funcret
  4073  003B38                     __end_of_start:
  4074                           	opt callstack 0
  4075                           
  4076 ;; *************** function _number_deploy *****************
  4077 ;; Defined at:
  4078 ;;		line 416 in file "main.c"
  4079 ;; Parameters:    Size  Location     Type
  4080 ;;  avg_dist        2  123[BANK0 ] int 
  4081 ;;  poles_detect    2  125[BANK0 ] int 
  4082 ;; Auto vars:     Size  Location     Type
  4083 ;;  t_count         2    6[BANK1 ] int 
  4084 ;;  tires_detect    2    4[BANK1 ] int 
  4085 ;;  tires_t         2    2[BANK1 ] int 
  4086 ;; Return value:  Size  Location     Type
  4087 ;;                  2  123[BANK0 ] int 
  4088 ;; Registers used:
  4089 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4090 ;; Tracked objects:
  4091 ;;		On entry : 0/0
  4092 ;;		On exit  : 0/0
  4093 ;;		Unchanged: 0/0
  4094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4095 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4096 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4097 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4098 ;;      Totals:         0       4       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4099 ;;Total ram usage:       12 bytes
  4100 ;; Hardware stack levels used:    1
  4101 ;; Hardware stack levels required when called:   14
  4102 ;; This function calls:
  4103 ;;		___awdiv
  4104 ;;		_lcdInst
  4105 ;;		_printf
  4106 ;; This function is called by:
  4107 ;;		_main
  4108 ;; This function uses a non-reentrant model
  4109 ;;
  4110                           
  4111                           	psect	text6
  4112  002174                     __ptext6:
  4113                           	opt callstack 0
  4114  002174                     _number_deploy:
  4115                           	opt callstack 16
  4116                           
  4117                           ;main.c: 417:     int tires_t=0;
  4118                           
  4119                           ;incstack = 0
  4120  002174  0E00               	movlw	0
  4121  002176  0101               	movlb	1	; () banked
  4122  002178  6F03               	movwf	(number_deploy@tires_t+1)& (0+255),b
  4123  00217A  0E00               	movlw	0
  4124  00217C  6F02               	movwf	number_deploy@tires_t& (0+255),b
  4125                           
  4126                           ;main.c: 418:     int tires_detected=0;
  4127  00217E  0E00               	movlw	0
  4128  002180  6F05               	movwf	(number_deploy@tires_detected+1)& (0+255),b
  4129  002182  0E00               	movlw	0
  4130  002184  6F04               	movwf	number_deploy@tires_detected& (0+255),b
  4131                           
  4132                           ;main.c: 419:     int t_count = 0;
  4133  002186  0E00               	movlw	0
  4134  002188  6F07               	movwf	(number_deploy@t_count+1)& (0+255),b
  4135  00218A  0E00               	movlw	0
  4136  00218C  6F06               	movwf	number_deploy@t_count& (0+255),b
  4137                           
  4138                           ;main.c: 422:     while (t_count<3){
  4139  00218E  D0F5               	goto	l8053
  4140  002190                     l7997:
  4141                           
  4142                           ; BSR set to: 1
  4143                           ;main.c: 423:   if (poles_detected != 0){
  4144  002190  0100               	movlb	0	; () banked
  4145  002192  51FD               	movf	number_deploy@poles_detected& (0+255),w,b
  4146  002194  11FE               	iorwf	(number_deploy@poles_detected+1)& (0+255),w,b
  4147  002196  B4D8               	btfsc	status,2,c
  4148  002198  D031               	goto	l8007
  4149                           
  4150                           ; BSR set to: 0
  4151                           ;main.c: 424:    if ((avg_dist/1000)<30){
  4152  00219A  C0FB  F080         	movff	number_deploy@avg_dist,___awdiv@dividend
  4153  00219E  C0FC  F081         	movff	number_deploy@avg_dist+1,___awdiv@dividend+1
  4154  0021A2  0E03               	movlw	3
  4155  0021A4  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  4156  0021A6  0EE8               	movlw	232
  4157  0021A8  6F82               	movwf	___awdiv@divisor& (0+255),b
  4158  0021AA  EC83  F01B         	call	___awdiv	;wreg free
  4159  0021AE  0100               	movlb	0	; () banked
  4160  0021B0  BF81               	btfsc	(?___awdiv+1)& (0+255),7,b
  4161  0021B2  D006               	goto	u8580
  4162  0021B4  5181               	movf	(?___awdiv+1)& (0+255),w,b
  4163  0021B6  E109               	bnz	l8003
  4164  0021B8  0E1E               	movlw	30
  4165  0021BA  5D80               	subwf	?___awdiv& (0+255),w,b
  4166  0021BC  B0D8               	btfsc	status,0,c
  4167  0021BE  D005               	goto	l8003
  4168  0021C0                     u8580:
  4169                           
  4170                           ; BSR set to: 0
  4171                           ;main.c: 426:     tires_t = 1;
  4172  0021C0  0E00               	movlw	0
  4173  0021C2  0101               	movlb	1	; () banked
  4174  0021C4  6F03               	movwf	(number_deploy@tires_t+1)& (0+255),b
  4175  0021C6  0E01               	movlw	1
  4176  0021C8  6F02               	movwf	number_deploy@tires_t& (0+255),b
  4177  0021CA                     l8003:
  4178                           
  4179                           ;main.c: 428:    if ((avg_dist/1000)>30){
  4180  0021CA  C0FB  F080         	movff	number_deploy@avg_dist,___awdiv@dividend
  4181  0021CE  C0FC  F081         	movff	number_deploy@avg_dist+1,___awdiv@dividend+1
  4182  0021D2  0E03               	movlw	3
  4183  0021D4  0100               	movlb	0	; () banked
  4184  0021D6  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  4185  0021D8  0EE8               	movlw	232
  4186  0021DA  6F82               	movwf	___awdiv@divisor& (0+255),b
  4187  0021DC  EC83  F01B         	call	___awdiv	;wreg free
  4188  0021E0  0100               	movlb	0	; () banked
  4189  0021E2  BF81               	btfsc	(?___awdiv+1)& (0+255),7,b
  4190  0021E4  D00B               	goto	l8007
  4191  0021E6  5181               	movf	(?___awdiv+1)& (0+255),w,b
  4192  0021E8  E104               	bnz	u8590
  4193  0021EA  0E1F               	movlw	31
  4194  0021EC  5D80               	subwf	?___awdiv& (0+255),w,b
  4195  0021EE  A0D8               	btfss	status,0,c
  4196  0021F0  D005               	goto	l8007
  4197  0021F2                     u8590:
  4198                           
  4199                           ; BSR set to: 0
  4200                           ;main.c: 429:     tires_t = 2;
  4201  0021F2  0E00               	movlw	0
  4202  0021F4  0101               	movlb	1	; () banked
  4203  0021F6  6F03               	movwf	(number_deploy@tires_t+1)& (0+255),b
  4204  0021F8  0E02               	movlw	2
  4205  0021FA  6F02               	movwf	number_deploy@tires_t& (0+255),b
  4206  0021FC                     l8007:
  4207                           
  4208                           ;main.c: 433:   if (poles_detected == 0){
  4209  0021FC  0100               	movlb	0	; () banked
  4210  0021FE  51FD               	movf	number_deploy@poles_detected& (0+255),w,b
  4211  002200  11FE               	iorwf	(number_deploy@poles_detected+1)& (0+255),w,b
  4212  002202  A4D8               	btfss	status,2,c
  4213  002204  D005               	goto	l8011
  4214                           
  4215                           ; BSR set to: 0
  4216                           ;main.c: 434:    tires_t = 2;
  4217  002206  0E00               	movlw	0
  4218  002208  0101               	movlb	1	; () banked
  4219  00220A  6F03               	movwf	(number_deploy@tires_t+1)& (0+255),b
  4220  00220C  0E02               	movlw	2
  4221  00220E  6F02               	movwf	number_deploy@tires_t& (0+255),b
  4222  002210                     l8011:
  4223                           
  4224                           ;main.c: 437:   if ((a[0]>=2 && a[0] <= 15)){
  4225  002210  BE62               	btfsc	_a+1,7,c
  4226  002212  D028               	goto	l8023
  4227  002214  5062               	movf	_a+1,w,c
  4228  002216  E104               	bnz	u8610
  4229  002218  0E02               	movlw	2
  4230  00221A  5C61               	subwf	_a,w,c
  4231  00221C  A0D8               	btfss	status,0,c
  4232  00221E  D022               	goto	l8023
  4233  002220                     u8610:
  4234  002220  BE62               	btfsc	_a+1,7,c
  4235  002222  D006               	goto	u8620
  4236  002224  5062               	movf	_a+1,w,c
  4237  002226  E11E               	bnz	l8023
  4238  002228  0E10               	movlw	16
  4239  00222A  5C61               	subwf	_a,w,c
  4240  00222C  B0D8               	btfsc	status,0,c
  4241  00222E  D01A               	goto	l8023
  4242  002230                     u8620:
  4243                           
  4244                           ;main.c: 439:             if ((a[1]>=2 && a[1] <= 15)){
  4245  002230  BE64               	btfsc	_a+3,7,c
  4246  002232  D013               	goto	l8021
  4247  002234  5064               	movf	_a+3,w,c
  4248  002236  E104               	bnz	u8630
  4249  002238  0E02               	movlw	2
  4250  00223A  5C63               	subwf	_a+2,w,c
  4251  00223C  A0D8               	btfss	status,0,c
  4252  00223E  D00D               	goto	l8021
  4253  002240                     u8630:
  4254  002240  BE64               	btfsc	_a+3,7,c
  4255  002242  D006               	goto	u8640
  4256  002244  5064               	movf	_a+3,w,c
  4257  002246  E109               	bnz	l8021
  4258  002248  0E10               	movlw	16
  4259  00224A  5C63               	subwf	_a+2,w,c
  4260  00224C  B0D8               	btfsc	status,0,c
  4261  00224E  D005               	goto	l8021
  4262  002250                     u8640:
  4263                           
  4264                           ;main.c: 441:                 tires_detected = 1;
  4265  002250  0E00               	movlw	0
  4266  002252  0101               	movlb	1	; () banked
  4267  002254  6F05               	movwf	(number_deploy@tires_detected+1)& (0+255),b
  4268  002256  0E01               	movlw	1
  4269  002258  D004               	goto	L2
  4270  00225A                     l8021:
  4271                           
  4272                           ;main.c: 444:                 tires_detected = 0;
  4273  00225A  0E00               	movlw	0
  4274  00225C  0101               	movlb	1	; () banked
  4275  00225E  6F05               	movwf	(number_deploy@tires_detected+1)& (0+255),b
  4276  002260  0E00               	movlw	0
  4277  002262                     L2:
  4278  002262  6F04               	movwf	number_deploy@tires_detected& (0+255),b
  4279  002264                     l8023:
  4280                           
  4281                           ;main.c: 447:         if ((tires_detected==1)){
  4282  002264  0101               	movlb	1	; () banked
  4283  002266  0504               	decf	number_deploy@tires_detected& (0+255),w,b
  4284  002268  1105               	iorwf	(number_deploy@tires_detected+1)& (0+255),w,b
  4285  00226A  B4D8               	btfsc	status,2,c
  4286                           
  4287                           ; BSR set to: 1
  4288                           ;main.c: 448:             if((a[2]>=2 && a[2] <= 15)&&(a[3] >=2 && a[3]<= 15)){
  4289  00226C  BE66               	btfsc	_a+5,7,c
  4290  00226E  D020               	goto	l8035
  4291  002270  5066               	movf	_a+5,w,c
  4292  002272  E104               	bnz	u8660
  4293  002274  0E02               	movlw	2
  4294  002276  5C65               	subwf	_a+4,w,c
  4295  002278  A0D8               	btfss	status,0,c
  4296  00227A  D01A               	goto	l8035
  4297  00227C                     u8660:
  4298                           
  4299                           ; BSR set to: 1
  4300  00227C  BE66               	btfsc	_a+5,7,c
  4301  00227E  D006               	goto	u8670
  4302  002280  5066               	movf	_a+5,w,c
  4303  002282  E116               	bnz	l8035
  4304  002284  0E10               	movlw	16
  4305  002286  5C65               	subwf	_a+4,w,c
  4306  002288  B0D8               	btfsc	status,0,c
  4307  00228A  D012               	goto	l8035
  4308  00228C                     u8670:
  4309                           
  4310                           ; BSR set to: 1
  4311  00228C  BE68               	btfsc	_a+7,7,c
  4312  00228E  D010               	goto	l8035
  4313  002290  5068               	movf	_a+7,w,c
  4314  002292  E104               	bnz	u8680
  4315  002294  0E02               	movlw	2
  4316  002296  5C67               	subwf	_a+6,w,c
  4317  002298  A0D8               	btfss	status,0,c
  4318  00229A  D00A               	goto	l8035
  4319  00229C                     u8680:
  4320                           
  4321                           ; BSR set to: 1
  4322  00229C  BE68               	btfsc	_a+7,7,c
  4323  00229E  D006               	goto	u8690
  4324  0022A0  5068               	movf	_a+7,w,c
  4325  0022A2  E106               	bnz	l8035
  4326  0022A4  0E10               	movlw	16
  4327  0022A6  5C67               	subwf	_a+6,w,c
  4328  0022A8  B0D8               	btfsc	status,0,c
  4329  0022AA  D002               	goto	l8035
  4330  0022AC                     u8690:
  4331                           
  4332                           ; BSR set to: 1
  4333                           ;main.c: 449:                 tires_detected++;
  4334  0022AC  4B04               	infsnz	number_deploy@tires_detected& (0+255),f,b
  4335  0022AE  2B05               	incf	(number_deploy@tires_detected+1)& (0+255),f,b
  4336  0022B0                     l8035:
  4337                           
  4338                           ; BSR set to: 1
  4339                           ;main.c: 453:         t_count = tires_t - tires_detected;
  4340  0022B0  5104               	movf	number_deploy@tires_detected& (0+255),w,b
  4341  0022B2  5D02               	subwf	number_deploy@tires_t& (0+255),w,b
  4342  0022B4  6F06               	movwf	number_deploy@t_count& (0+255),b
  4343  0022B6  5105               	movf	(number_deploy@tires_detected+1)& (0+255),w,b
  4344  0022B8  5903               	subwfb	(number_deploy@tires_t+1)& (0+255),w,b
  4345  0022BA  6F07               	movwf	(number_deploy@t_count+1)& (0+255),b
  4346                           
  4347                           ; BSR set to: 1
  4348                           ;main.c: 454:         Pole[poles_detected].tires_deployed = t_count;
  4349  0022BC  C0FD  F100         	movff	number_deploy@poles_detected,??_number_deploy
  4350  0022C0  C0FE  F101         	movff	number_deploy@poles_detected+1,??_number_deploy+1
  4351  0022C4  90D8               	bcf	status,0,c
  4352  0022C6  3700               	rlcf	??_number_deploy& (0+255),f,b
  4353  0022C8  3701               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4354  0022CA  90D8               	bcf	status,0,c
  4355  0022CC  3700               	rlcf	??_number_deploy& (0+255),f,b
  4356  0022CE  3701               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4357  0022D0  90D8               	bcf	status,0,c
  4358  0022D2  3700               	rlcf	??_number_deploy& (0+255),f,b
  4359  0022D4  3701               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4360  0022D6  0E00               	movlw	low _Pole
  4361  0022D8  2500               	addwf	??_number_deploy& (0+255),w,b
  4362  0022DA  6ED9               	movwf	fsr2l,c
  4363  0022DC  0E02               	movlw	high _Pole
  4364  0022DE  2101               	addwfc	(??_number_deploy+1)& (0+255),w,b
  4365  0022E0  6EDA               	movwf	fsr2h,c
  4366  0022E2  C106  FFDE         	movff	number_deploy@t_count,postinc2
  4367  0022E6  C107  FFDD         	movff	number_deploy@t_count+1,postdec2
  4368                           
  4369                           ; BSR set to: 1
  4370                           ;main.c: 455:         Pole[poles_detected].tires_final = tires_t;
  4371  0022EA  C0FD  F100         	movff	number_deploy@poles_detected,??_number_deploy
  4372  0022EE  C0FE  F101         	movff	number_deploy@poles_detected+1,??_number_deploy+1
  4373  0022F2  90D8               	bcf	status,0,c
  4374  0022F4  3700               	rlcf	??_number_deploy& (0+255),f,b
  4375  0022F6  3701               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4376  0022F8  90D8               	bcf	status,0,c
  4377  0022FA  3700               	rlcf	??_number_deploy& (0+255),f,b
  4378  0022FC  3701               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4379  0022FE  90D8               	bcf	status,0,c
  4380  002300  3700               	rlcf	??_number_deploy& (0+255),f,b
  4381  002302  3701               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4382  002304  0E02               	movlw	low (_Pole+2)
  4383  002306  2500               	addwf	??_number_deploy& (0+255),w,b
  4384  002308  6ED9               	movwf	fsr2l,c
  4385  00230A  0E02               	movlw	high (_Pole+2)
  4386  00230C  2101               	addwfc	(??_number_deploy+1)& (0+255),w,b
  4387  00230E  6EDA               	movwf	fsr2h,c
  4388  002310  C102  FFDE         	movff	number_deploy@tires_t,postinc2
  4389  002314  C103  FFDD         	movff	number_deploy@tires_t+1,postdec2
  4390                           
  4391                           ; BSR set to: 1
  4392                           ;main.c: 456:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  4393  002318  0E01               	movlw	1
  4394  00231A  EC61  F01F         	call	_lcdInst
  4395  00231E  0E11               	movlw	17
  4396  002320  0101               	movlb	1	; () banked
  4397  002322  6F00               	movwf	??_number_deploy& (0+255),b
  4398  002324  0E3A               	movlw	58
  4399  002326                     u9517:
  4400  002326  2EE8               	decfsz	wreg,f,c
  4401  002328  D7FE               	bra	u9517
  4402  00232A  2F00               	decfsz	??_number_deploy& (0+255),f,b
  4403  00232C  D7FC               	bra	u9517
  4404  00232E  F000               	nop	
  4405                           
  4406                           ;main.c: 457:         printf("det,%d, tcnt %d",tires_detected,t_count);
  4407  002330  0E3D               	movlw	low STR_22
  4408  002332  0100               	movlb	0	; () banked
  4409  002334  6FED               	movwf	printf@fmt& (0+255),b
  4410  002336  0EFE               	movlw	high STR_22
  4411  002338  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4412  00233A  C104  F0EF         	movff	number_deploy@tires_detected,?_printf+2
  4413  00233E  C105  F0F0         	movff	number_deploy@tires_detected+1,?_printf+3
  4414  002342  C106  F0F1         	movff	number_deploy@t_count,?_printf+4
  4415  002346  C107  F0F2         	movff	number_deploy@t_count+1,?_printf+5
  4416  00234A  ECFB  F01E         	call	_printf	;wreg free
  4417                           
  4418                           ;main.c: 458:         _delay((unsigned long)((1000)*(10000000/4000.0)));
  4419  00234E  0E0D               	movlw	13
  4420  002350  0101               	movlb	1	; () banked
  4421  002352  6F01               	movwf	(??_number_deploy+1)& (0+255),b
  4422  002354  0EAF               	movlw	175
  4423  002356  6F00               	movwf	??_number_deploy& (0+255),b
  4424  002358  0EB6               	movlw	182
  4425  00235A                     u9527:
  4426  00235A  2EE8               	decfsz	wreg,f,c
  4427  00235C  D7FE               	bra	u9527
  4428  00235E  2F00               	decfsz	??_number_deploy& (0+255),f,b
  4429  002360  D7FC               	bra	u9527
  4430  002362  2F01               	decfsz	(??_number_deploy+1)& (0+255),f,b
  4431  002364  D7FA               	bra	u9527
  4432  002366  F000               	nop	
  4433                           
  4434                           ;main.c: 460:         if (t_count<=2){
  4435  002368  0101               	movlb	1	; () banked
  4436  00236A  BF07               	btfsc	(number_deploy@t_count+1)& (0+255),7,b
  4437  00236C  D00E               	goto	u8710
  4438  00236E  5107               	movf	(number_deploy@t_count+1)& (0+255),w,b
  4439  002370  E104               	bnz	l8053
  4440  002372  0E03               	movlw	3
  4441  002374  5D06               	subwf	number_deploy@t_count& (0+255),w,b
  4442  002376  A0D8               	btfss	status,0,c
  4443  002378  D008               	goto	u8710
  4444  00237A                     l8053:
  4445                           
  4446                           ; BSR set to: 1
  4447                           ;main.c: 422:     while (t_count<3){
  4448  00237A  BF07               	btfsc	(number_deploy@t_count+1)& (0+255),7,b
  4449  00237C  D709               	goto	l7997
  4450  00237E  5107               	movf	(number_deploy@t_count+1)& (0+255),w,b
  4451  002380  E104               	bnz	u8710
  4452  002382  0E03               	movlw	3
  4453  002384  5D06               	subwf	number_deploy@t_count& (0+255),w,b
  4454  002386  A0D8               	btfss	status,0,c
  4455  002388  D703               	goto	l7997
  4456  00238A                     u8710:
  4457                           
  4458                           ; BSR set to: 1
  4459                           ;main.c: 468:     return (int) t_count;
  4460  00238A  C106  F0FB         	movff	number_deploy@t_count,?_number_deploy
  4461  00238E  C107  F0FC         	movff	number_deploy@t_count+1,?_number_deploy+1
  4462                           
  4463                           ; BSR set to: 1
  4464  002392  0012               	return		;funcret
  4465  002394                     __end_of_number_deploy:
  4466                           	opt callstack 0
  4467                           
  4468 ;; *************** function ___awdiv *****************
  4469 ;; Defined at:
  4470 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  4471 ;; Parameters:    Size  Location     Type
  4472 ;;  dividend        2    0[BANK0 ] int 
  4473 ;;  divisor         2    2[BANK0 ] int 
  4474 ;; Auto vars:     Size  Location     Type
  4475 ;;  quotient        2    6[BANK0 ] int 
  4476 ;;  sign            1    5[BANK0 ] unsigned char 
  4477 ;;  counter         1    4[BANK0 ] unsigned char 
  4478 ;; Return value:  Size  Location     Type
  4479 ;;                  2    0[BANK0 ] int 
  4480 ;; Registers used:
  4481 ;;		wreg, status,2, status,0
  4482 ;; Tracked objects:
  4483 ;;		On entry : 0/0
  4484 ;;		On exit  : 0/0
  4485 ;;		Unchanged: 0/0
  4486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4487 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4488 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4490 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4491 ;;Total ram usage:        8 bytes
  4492 ;; Hardware stack levels used:    1
  4493 ;; Hardware stack levels required when called:    3
  4494 ;; This function calls:
  4495 ;;		Nothing
  4496 ;; This function is called by:
  4497 ;;		_number_deploy
  4498 ;; This function uses a non-reentrant model
  4499 ;;
  4500                           
  4501                           	psect	text7
  4502  003706                     __ptext7:
  4503                           	opt callstack 0
  4504  003706                     ___awdiv:
  4505                           	opt callstack 26
  4506                           
  4507                           ; BSR set to: 1
  4508                           ;incstack = 0
  4509  003706  0E00               	movlw	0
  4510  003708  0100               	movlb	0	; () banked
  4511  00370A  6F85               	movwf	___awdiv@sign& (0+255),b
  4512                           
  4513                           ; BSR set to: 0
  4514  00370C  AF83               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  4515  00370E  D006               	goto	l7755
  4516                           
  4517                           ; BSR set to: 0
  4518  003710  6D82               	negf	___awdiv@divisor& (0+255),b
  4519  003712  1F83               	comf	(___awdiv@divisor+1)& (0+255),f,b
  4520  003714  B0D8               	btfsc	status,0,c
  4521  003716  2B83               	incf	(___awdiv@divisor+1)& (0+255),f,b
  4522                           
  4523                           ; BSR set to: 0
  4524  003718  0E01               	movlw	1
  4525  00371A  6F85               	movwf	___awdiv@sign& (0+255),b
  4526  00371C                     l7755:
  4527                           
  4528                           ; BSR set to: 0
  4529  00371C  AF81               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  4530  00371E  D006               	goto	l7761
  4531                           
  4532                           ; BSR set to: 0
  4533  003720  6D80               	negf	___awdiv@dividend& (0+255),b
  4534  003722  1F81               	comf	(___awdiv@dividend+1)& (0+255),f,b
  4535  003724  B0D8               	btfsc	status,0,c
  4536  003726  2B81               	incf	(___awdiv@dividend+1)& (0+255),f,b
  4537                           
  4538                           ; BSR set to: 0
  4539  003728  0E01               	movlw	1
  4540  00372A  1B85               	xorwf	___awdiv@sign& (0+255),f,b
  4541  00372C                     l7761:
  4542                           
  4543                           ; BSR set to: 0
  4544  00372C  0E00               	movlw	0
  4545  00372E  6F87               	movwf	(___awdiv@quotient+1)& (0+255),b
  4546  003730  0E00               	movlw	0
  4547  003732  6F86               	movwf	___awdiv@quotient& (0+255),b
  4548                           
  4549                           ; BSR set to: 0
  4550  003734  5182               	movf	___awdiv@divisor& (0+255),w,b
  4551  003736  1183               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  4552  003738  B4D8               	btfsc	status,2,c
  4553  00373A  D01C               	goto	l7783
  4554                           
  4555                           ; BSR set to: 0
  4556  00373C  0E01               	movlw	1
  4557  00373E  6F84               	movwf	___awdiv@counter& (0+255),b
  4558  003740  D004               	goto	l7769
  4559  003742                     l7767:
  4560                           
  4561                           ; BSR set to: 0
  4562  003742  90D8               	bcf	status,0,c
  4563  003744  3782               	rlcf	___awdiv@divisor& (0+255),f,b
  4564  003746  3783               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  4565  003748  2B84               	incf	___awdiv@counter& (0+255),f,b
  4566  00374A                     l7769:
  4567                           
  4568                           ; BSR set to: 0
  4569  00374A  AF83               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  4570  00374C  D7FA               	goto	l7767
  4571  00374E                     u8420:
  4572                           
  4573                           ; BSR set to: 0
  4574  00374E  90D8               	bcf	status,0,c
  4575  003750  3786               	rlcf	___awdiv@quotient& (0+255),f,b
  4576  003752  3787               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  4577                           
  4578                           ; BSR set to: 0
  4579  003754  5182               	movf	___awdiv@divisor& (0+255),w,b
  4580  003756  5D80               	subwf	___awdiv@dividend& (0+255),w,b
  4581  003758  5183               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4582  00375A  5981               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  4583  00375C  A0D8               	btfss	status,0,c
  4584  00375E  D005               	goto	l7779
  4585                           
  4586                           ; BSR set to: 0
  4587  003760  5182               	movf	___awdiv@divisor& (0+255),w,b
  4588  003762  5F80               	subwf	___awdiv@dividend& (0+255),f,b
  4589  003764  5183               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4590  003766  5B81               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  4591                           
  4592                           ; BSR set to: 0
  4593  003768  8186               	bsf	___awdiv@quotient& (0+255),0,b
  4594  00376A                     l7779:
  4595                           
  4596                           ; BSR set to: 0
  4597  00376A  90D8               	bcf	status,0,c
  4598  00376C  3383               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  4599  00376E  3382               	rrcf	___awdiv@divisor& (0+255),f,b
  4600                           
  4601                           ; BSR set to: 0
  4602  003770  2F84               	decfsz	___awdiv@counter& (0+255),f,b
  4603  003772  D7ED               	goto	u8420
  4604  003774                     l7783:
  4605                           
  4606                           ; BSR set to: 0
  4607  003774  5185               	movf	___awdiv@sign& (0+255),w,b
  4608  003776  B4D8               	btfsc	status,2,c
  4609  003778  D004               	goto	l7787
  4610                           
  4611                           ; BSR set to: 0
  4612  00377A  6D86               	negf	___awdiv@quotient& (0+255),b
  4613  00377C  1F87               	comf	(___awdiv@quotient+1)& (0+255),f,b
  4614  00377E  B0D8               	btfsc	status,0,c
  4615  003780  2B87               	incf	(___awdiv@quotient+1)& (0+255),f,b
  4616  003782                     l7787:
  4617                           
  4618                           ; BSR set to: 0
  4619  003782  C086  F080         	movff	___awdiv@quotient,?___awdiv
  4620  003786  C087  F081         	movff	___awdiv@quotient+1,?___awdiv+1
  4621                           
  4622                           ; BSR set to: 0
  4623  00378A  0012               	return		;funcret
  4624  00378C                     __end_of___awdiv:
  4625                           	opt callstack 0
  4626                           
  4627 ;; *************** function _brake *****************
  4628 ;; Defined at:
  4629 ;;		line 666 in file "main.c"
  4630 ;; Parameters:    Size  Location     Type
  4631 ;;		None
  4632 ;; Auto vars:     Size  Location     Type
  4633 ;;		None
  4634 ;; Return value:  Size  Location     Type
  4635 ;;                  1    wreg      void 
  4636 ;; Registers used:
  4637 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4638 ;; Tracked objects:
  4639 ;;		On entry : 0/0
  4640 ;;		On exit  : 0/0
  4641 ;;		Unchanged: 0/0
  4642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4645 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4646 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4647 ;;Total ram usage:        2 bytes
  4648 ;; Hardware stack levels used:    1
  4649 ;; Hardware stack levels required when called:   14
  4650 ;; This function calls:
  4651 ;;		_I2C_Master_Read
  4652 ;;		_I2C_Master_Start
  4653 ;;		_I2C_Master_Stop
  4654 ;;		_I2C_Master_Write
  4655 ;;		_lcdInst
  4656 ;;		_printf
  4657 ;; This function is called by:
  4658 ;;		_main
  4659 ;;		_sense_tires
  4660 ;; This function uses a non-reentrant model
  4661 ;;
  4662                           
  4663                           	psect	text8
  4664  00351A                     __ptext8:
  4665                           	opt callstack 0
  4666  00351A                     _brake:
  4667                           	opt callstack 16
  4668                           
  4669                           ;main.c: 667:     I2C_Master_Start();
  4670                           
  4671                           ; BSR set to: 0
  4672                           ;incstack = 0
  4673  00351A  EC72  F01F         	call	_I2C_Master_Start	;wreg free
  4674                           
  4675                           ;main.c: 668:     I2C_Master_Write(0b00010000);
  4676  00351E  0E00               	movlw	0
  4677  003520  0100               	movlb	0	; () banked
  4678  003522  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4679  003524  0E10               	movlw	16
  4680  003526  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4681  003528  EC69  F01F         	call	_I2C_Master_Write	;wreg free
  4682                           
  4683                           ;main.c: 669:     I2C_Master_Write('9');
  4684  00352C  0E00               	movlw	0
  4685  00352E  0100               	movlb	0	; () banked
  4686  003530  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4687  003532  0E39               	movlw	57
  4688  003534  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4689  003536  EC69  F01F         	call	_I2C_Master_Write	;wreg free
  4690                           
  4691                           ;main.c: 670:     I2C_Master_Stop();
  4692  00353A  EC6E  F01F         	call	_I2C_Master_Stop	;wreg free
  4693                           
  4694                           ;main.c: 671:     I2C_Master_Start();
  4695  00353E  EC72  F01F         	call	_I2C_Master_Start	;wreg free
  4696                           
  4697                           ;main.c: 672:     I2C_Master_Write(0b00010001);
  4698  003542  0E00               	movlw	0
  4699  003544  0100               	movlb	0	; () banked
  4700  003546  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4701  003548  0E11               	movlw	17
  4702  00354A  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4703  00354C  EC69  F01F         	call	_I2C_Master_Write	;wreg free
  4704                           
  4705                           ;main.c: 673:     avg_dist = I2C_Master_Read(1);
  4706  003550  0E01               	movlw	1
  4707  003552  ECE6  F01E         	call	_I2C_Master_Read
  4708  003556  0100               	movlb	0	; () banked
  4709  003558  6FFB               	movwf	??_brake& (0+255),b
  4710  00355A  51FB               	movf	??_brake& (0+255),w,b
  4711  00355C  6E44               	movwf	_avg_dist,c	;volatile
  4712  00355E  6A45               	clrf	_avg_dist+1,c	;volatile
  4713  003560  6A46               	clrf	_avg_dist+2,c	;volatile
  4714  003562  6A47               	clrf	_avg_dist+3,c	;volatile
  4715                           
  4716                           ;main.c: 674:     I2C_Master_Stop();
  4717  003564  EC6E  F01F         	call	_I2C_Master_Stop	;wreg free
  4718                           
  4719                           ;main.c: 675:     if(avg_dist){
  4720  003568  5044               	movf	_avg_dist,w,c	;volatile
  4721  00356A  1045               	iorwf	_avg_dist+1,w,c	;volatile
  4722  00356C  1046               	iorwf	_avg_dist+2,w,c	;volatile
  4723  00356E  1047               	iorwf	_avg_dist+3,w,c	;volatile
  4724  003570  B4D8               	btfsc	status,2,c
  4725  003572  0012               	return	
  4726                           
  4727                           ;main.c: 678:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  4728  003574  0E01               	movlw	1
  4729  003576  EC61  F01F         	call	_lcdInst
  4730  00357A  0E11               	movlw	17
  4731  00357C  0100               	movlb	0	; () banked
  4732  00357E  6FFB               	movwf	??_brake& (0+255),b
  4733  003580  0E3A               	movlw	58
  4734  003582                     u9537:
  4735  003582  2EE8               	decfsz	wreg,f,c
  4736  003584  D7FE               	bra	u9537
  4737  003586  2FFB               	decfsz	??_brake& (0+255),f,b
  4738  003588  D7FC               	bra	u9537
  4739  00358A  F000               	nop	
  4740                           
  4741                           ;main.c: 686:         printf("%d",avg_dist);
  4742  00358C  0EC3               	movlw	low (STR_59+11)
  4743  00358E  0100               	movlb	0	; () banked
  4744  003590  6FED               	movwf	printf@fmt& (0+255),b
  4745  003592  0EFE               	movlw	high (STR_59+11)
  4746  003594  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4747  003596  C044  F0EF         	movff	_avg_dist,?_printf+2	;volatile
  4748  00359A  C045  F0F0         	movff	_avg_dist+1,?_printf+3	;volatile
  4749  00359E  C046  F0F1         	movff	_avg_dist+2,?_printf+4	;volatile
  4750  0035A2  C047  F0F2         	movff	_avg_dist+3,?_printf+5	;volatile
  4751  0035A6  ECFB  F01E         	call	_printf	;wreg free
  4752                           
  4753                           ;main.c: 691:         _delay((unsigned long)((1000)*(10000000/4000.0)));
  4754  0035AA  0E0D               	movlw	13
  4755  0035AC  0100               	movlb	0	; () banked
  4756  0035AE  6FFC               	movwf	(??_brake+1)& (0+255),b
  4757  0035B0  0EAF               	movlw	175
  4758  0035B2  6FFB               	movwf	??_brake& (0+255),b
  4759  0035B4  0EB6               	movlw	182
  4760  0035B6                     u9547:
  4761  0035B6  2EE8               	decfsz	wreg,f,c
  4762  0035B8  D7FE               	bra	u9547
  4763  0035BA  2FFB               	decfsz	??_brake& (0+255),f,b
  4764  0035BC  D7FC               	bra	u9547
  4765  0035BE  2FFC               	decfsz	(??_brake+1)& (0+255),f,b
  4766  0035C0  D7FA               	bra	u9547
  4767  0035C2  F000               	nop	
  4768                           
  4769                           ;main.c: 693:     send = 1;
  4770  0035C4  0E01               	movlw	1
  4771  0035C6  6E6D               	movwf	_send,c
  4772  0035C8  0012               	return		;funcret
  4773  0035CA                     __end_of_brake:
  4774                           	opt callstack 0
  4775                           
  4776 ;; *************** function _backwards *****************
  4777 ;; Defined at:
  4778 ;;		line 708 in file "main.c"
  4779 ;; Parameters:    Size  Location     Type
  4780 ;;		None
  4781 ;; Auto vars:     Size  Location     Type
  4782 ;;		None
  4783 ;; Return value:  Size  Location     Type
  4784 ;;                  1    wreg      void 
  4785 ;; Registers used:
  4786 ;;		wreg, status,2, status,0, cstack
  4787 ;; Tracked objects:
  4788 ;;		On entry : 0/0
  4789 ;;		On exit  : 0/0
  4790 ;;		Unchanged: 0/0
  4791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4796 ;;Total ram usage:        0 bytes
  4797 ;; Hardware stack levels used:    1
  4798 ;; Hardware stack levels required when called:    5
  4799 ;; This function calls:
  4800 ;;		_I2C_Master_Start
  4801 ;;		_I2C_Master_Stop
  4802 ;;		_I2C_Master_Write
  4803 ;; This function is called by:
  4804 ;;		_main
  4805 ;; This function uses a non-reentrant model
  4806 ;;
  4807                           
  4808                           	psect	text9
  4809  003E46                     __ptext9:
  4810                           	opt callstack 0
  4811  003E46                     _backwards:
  4812                           	opt callstack 25
  4813                           
  4814                           ;main.c: 709:     I2C_Master_Start();
  4815                           
  4816                           ;incstack = 0
  4817  003E46  EC72  F01F         	call	_I2C_Master_Start	;wreg free
  4818                           
  4819                           ;main.c: 710:     I2C_Master_Write(0b00010000);
  4820  003E4A  0E00               	movlw	0
  4821  003E4C  0100               	movlb	0	; () banked
  4822  003E4E  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4823  003E50  0E10               	movlw	16
  4824  003E52  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4825  003E54  EC69  F01F         	call	_I2C_Master_Write	;wreg free
  4826                           
  4827                           ;main.c: 711:     I2C_Master_Write('5');
  4828  003E58  0E00               	movlw	0
  4829  003E5A  0100               	movlb	0	; () banked
  4830  003E5C  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4831  003E5E  0E35               	movlw	53
  4832  003E60  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4833  003E62  EC69  F01F         	call	_I2C_Master_Write	;wreg free
  4834                           
  4835                           ;main.c: 712:     I2C_Master_Stop();
  4836  003E66  EC6E  F01F         	call	_I2C_Master_Stop	;wreg free
  4837  003E6A  0012               	return		;funcret
  4838  003E6C                     __end_of_backwards:
  4839                           	opt callstack 0
  4840                           
  4841 ;; *************** function _actuators_main *****************
  4842 ;; Defined at:
  4843 ;;		line 3 in file "actuators_main.c"
  4844 ;; Parameters:    Size  Location     Type
  4845 ;;  stack           2   18[BANK1 ] int 
  4846 ;;  steps2_adj      2   20[BANK1 ] int 
  4847 ;;  t_dep           2   22[BANK1 ] int 
  4848 ;; Auto vars:     Size  Location     Type
  4849 ;;  act_cnt         2   26[BANK1 ] int 
  4850 ;; Return value:  Size  Location     Type
  4851 ;;                  1    wreg      void 
  4852 ;; Registers used:
  4853 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4854 ;; Tracked objects:
  4855 ;;		On entry : 0/0
  4856 ;;		On exit  : 0/0
  4857 ;;		Unchanged: 0/0
  4858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4859 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4860 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4861 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4862 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4863 ;;Total ram usage:       10 bytes
  4864 ;; Hardware stack levels used:    1
  4865 ;; Hardware stack levels required when called:   16
  4866 ;; This function calls:
  4867 ;;		_initLCD
  4868 ;;		_lcdInst
  4869 ;;		_printf
  4870 ;;		_servo
  4871 ;;		_stepper
  4872 ;;		_stepper2
  4873 ;;		_stepper2_back
  4874 ;;		_system_init
  4875 ;; This function is called by:
  4876 ;;		_main
  4877 ;; This function uses a non-reentrant model
  4878 ;;
  4879                           
  4880                           	psect	text10
  4881  00272E                     __ptext10:
  4882                           	opt callstack 0
  4883  00272E                     _actuators_main:
  4884                           	opt callstack 14
  4885                           
  4886                           ;actuators_main.c: 4:     int act_cnt = 0;
  4887                           
  4888                           ;incstack = 0
  4889  00272E  0E00               	movlw	0
  4890  002730  0101               	movlb	1	; () banked
  4891  002732  6F1B               	movwf	(actuators_main@act_cnt+1)& (0+255),b
  4892  002734  0E00               	movlw	0
  4893  002736  6F1A               	movwf	actuators_main@act_cnt& (0+255),b
  4894                           
  4895                           ; BSR set to: 1
  4896                           ;actuators_main.c: 5:     system_init();
  4897  002738  EC54  F01E         	call	_system_init	;wreg free
  4898                           
  4899                           ;actuators_main.c: 6:     initLCD();
  4900  00273C  EC4A  F01C         	call	_initLCD	;wreg free
  4901                           
  4902                           ;actuators_main.c: 7:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  4903  002740  0E01               	movlw	1
  4904  002742  EC61  F01F         	call	_lcdInst
  4905  002746  0E11               	movlw	17
  4906  002748  0101               	movlb	1	; () banked
  4907  00274A  6F18               	movwf	??_actuators_main& (0+255),b
  4908  00274C  0E3A               	movlw	58
  4909  00274E                     u9557:
  4910  00274E  2EE8               	decfsz	wreg,f,c
  4911  002750  D7FE               	bra	u9557
  4912  002752  2F18               	decfsz	??_actuators_main& (0+255),f,b
  4913  002754  D7FC               	bra	u9557
  4914  002756  F000               	nop	
  4915                           
  4916                           ;actuators_main.c: 8:     printf("cnt is %d",act_cnt);
  4917  002758  0ED9               	movlw	low STR_1
  4918  00275A  0100               	movlb	0	; () banked
  4919  00275C  6FED               	movwf	printf@fmt& (0+255),b
  4920  00275E  0EFF               	movlw	high STR_1
  4921  002760  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4922  002762  0E00               	movlw	0
  4923  002764  6FF0               	movwf	(?_printf+3)& (0+255),b
  4924  002766  0E00               	movlw	0
  4925  002768  6FEF               	movwf	(?_printf+2)& (0+255),b
  4926  00276A  ECFB  F01E         	call	_printf	;wreg free
  4927                           
  4928                           ;actuators_main.c: 9:     _delay((unsigned long)((200)*(10000000/4000.0)));
  4929  00276E  0E03               	movlw	3
  4930  002770  0101               	movlb	1	; () banked
  4931  002772  6F19               	movwf	(??_actuators_main+1)& (0+255),b
  4932  002774  0E8A               	movlw	138
  4933  002776  6F18               	movwf	??_actuators_main& (0+255),b
  4934  002778  0E55               	movlw	85
  4935  00277A                     u9567:
  4936  00277A  2EE8               	decfsz	wreg,f,c
  4937  00277C  D7FE               	bra	u9567
  4938  00277E  2F18               	decfsz	??_actuators_main& (0+255),f,b
  4939  002780  D7FC               	bra	u9567
  4940  002782  2F19               	decfsz	(??_actuators_main+1)& (0+255),f,b
  4941  002784  D7FA               	bra	u9567
  4942  002786  D000               	nop2	
  4943  002788                     l7821:
  4944                           
  4945                           ;actuators_main.c: 11:     if (act_cnt==0){
  4946  002788  0101               	movlb	1	; () banked
  4947  00278A  511A               	movf	actuators_main@act_cnt& (0+255),w,b
  4948  00278C  111B               	iorwf	(actuators_main@act_cnt+1)& (0+255),w,b
  4949  00278E  A4D8               	btfss	status,2,c
  4950  002790  D071               	goto	l7901
  4951                           
  4952                           ; BSR set to: 1
  4953                           ;actuators_main.c: 15:         stepper(stack, t_dep);
  4954  002792  C112  F100         	movff	actuators_main@stack,stepper@stack
  4955  002796  C113  F101         	movff	actuators_main@stack+1,stepper@stack+1
  4956  00279A  C116  F102         	movff	actuators_main@t_dep,stepper@t_dep
  4957  00279E  C117  F103         	movff	actuators_main@t_dep+1,stepper@t_dep+1
  4958  0027A2  EC3F  F014         	call	_stepper	;wreg free
  4959                           
  4960                           ;actuators_main.c: 16:         stepper2(0, steps2_adj);
  4961  0027A6  C114  F100         	movff	actuators_main@steps2_adj,stepper2@steps2_adj
  4962  0027AA  C115  F101         	movff	actuators_main@steps2_adj+1,stepper2@steps2_adj+1
  4963  0027AE  0E00               	movlw	0
  4964  0027B0  EC67  F018         	call	_stepper2
  4965                           
  4966                           ;actuators_main.c: 17:                 stepper2_back(1, steps2_adj);
  4967  0027B4  C114  F100         	movff	actuators_main@steps2_adj,stepper2_back@steps2_adj
  4968  0027B8  C115  F101         	movff	actuators_main@steps2_adj+1,stepper2_back@steps2_adj+1
  4969  0027BC  0E01               	movlw	1
  4970  0027BE  ECE5  F01A         	call	_stepper2_back
  4971                           
  4972                           ;actuators_main.c: 20:                 LATA = 0b00000000;
  4973  0027C2  0E00               	movlw	0
  4974  0027C4  6E89               	movwf	3977,c	;volatile
  4975                           
  4976                           ;actuators_main.c: 21:         LATCbits.LATC0 = 0;
  4977  0027C6  908B               	bcf	3979,0,c	;volatile
  4978                           
  4979                           ;actuators_main.c: 22:         LATEbits.LATE0 = 0;
  4980  0027C8  908D               	bcf	3981,0,c	;volatile
  4981                           
  4982                           ;actuators_main.c: 23:         LATEbits.LATE1 = 0;
  4983  0027CA  928D               	bcf	3981,1,c	;volatile
  4984                           
  4985                           ;actuators_main.c: 24:         LATEbits.LATE2 = 0;
  4986  0027CC  948D               	bcf	3981,2,c	;volatile
  4987                           
  4988                           ;actuators_main.c: 25:         LATCbits.LATC5 = 0;
  4989  0027CE  9A8B               	bcf	3979,5,c	;volatile
  4990                           
  4991                           ;actuators_main.c: 26:         LATCbits.LATC6 = 0;
  4992  0027D0  9C8B               	bcf	3979,6,c	;volatile
  4993                           
  4994                           ;actuators_main.c: 27:         LATCbits.LATC7 = 0;
  4995  0027D2  9E8B               	bcf	3979,7,c	;volatile
  4996                           
  4997                           ;actuators_main.c: 28:         LATAbits.LATA5 = 0;
  4998  0027D4  9A89               	bcf	3977,5,c	;volatile
  4999                           
  5000                           ;actuators_main.c: 30:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/400
      +                          0.0)));};
  5001  0027D6  0E01               	movlw	1
  5002  0027D8  EC61  F01F         	call	_lcdInst
  5003  0027DC  0E11               	movlw	17
  5004  0027DE  0101               	movlb	1	; () banked
  5005  0027E0  6F18               	movwf	??_actuators_main& (0+255),b
  5006  0027E2  0E3A               	movlw	58
  5007  0027E4                     u9577:
  5008  0027E4  2EE8               	decfsz	wreg,f,c
  5009  0027E6  D7FE               	bra	u9577
  5010  0027E8  2F18               	decfsz	??_actuators_main& (0+255),f,b
  5011  0027EA  D7FC               	bra	u9577
  5012  0027EC  F000               	nop	
  5013                           
  5014                           ;actuators_main.c: 31:         printf("Stepper done");
  5015  0027EE  0E0A               	movlw	low STR_2
  5016  0027F0  0100               	movlb	0	; () banked
  5017  0027F2  6FED               	movwf	printf@fmt& (0+255),b
  5018  0027F4  0EFF               	movlw	high STR_2
  5019  0027F6  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5020  0027F8  ECFB  F01E         	call	_printf	;wreg free
  5021                           
  5022                           ;actuators_main.c: 33:         servo();
  5023  0027FC  ECD3  F019         	call	_servo	;wreg free
  5024                           
  5025                           ;actuators_main.c: 34:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/400
      +                          0.0)));};
  5026  002800  0E01               	movlw	1
  5027  002802  EC61  F01F         	call	_lcdInst
  5028  002806  0E11               	movlw	17
  5029  002808  0101               	movlb	1	; () banked
  5030  00280A  6F18               	movwf	??_actuators_main& (0+255),b
  5031  00280C  0E3A               	movlw	58
  5032  00280E                     u9587:
  5033  00280E  2EE8               	decfsz	wreg,f,c
  5034  002810  D7FE               	bra	u9587
  5035  002812  2F18               	decfsz	??_actuators_main& (0+255),f,b
  5036  002814  D7FC               	bra	u9587
  5037  002816  F000               	nop	
  5038                           
  5039                           ;actuators_main.c: 35:         printf("Servo done");
  5040  002818  0E74               	movlw	low STR_3
  5041  00281A  0100               	movlb	0	; () banked
  5042  00281C  6FED               	movwf	printf@fmt& (0+255),b
  5043  00281E  0EFF               	movlw	high STR_3
  5044  002820  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5045  002822  ECFB  F01E         	call	_printf	;wreg free
  5046                           
  5047                           ;actuators_main.c: 36:                 LATA = 0b00000000;
  5048  002826  0E00               	movlw	0
  5049  002828  6E89               	movwf	3977,c	;volatile
  5050                           
  5051                           ;actuators_main.c: 37:         LATCbits.LATC0 = 0;
  5052  00282A  908B               	bcf	3979,0,c	;volatile
  5053                           
  5054                           ;actuators_main.c: 38:         LATEbits.LATE0 = 0;
  5055  00282C  908D               	bcf	3981,0,c	;volatile
  5056                           
  5057                           ;actuators_main.c: 39:         LATEbits.LATE1 = 0;
  5058  00282E  928D               	bcf	3981,1,c	;volatile
  5059                           
  5060                           ;actuators_main.c: 40:         LATEbits.LATE2 = 0;
  5061  002830  948D               	bcf	3981,2,c	;volatile
  5062                           
  5063                           ;actuators_main.c: 41:         LATCbits.LATC5 = 0;
  5064  002832  9A8B               	bcf	3979,5,c	;volatile
  5065                           
  5066                           ;actuators_main.c: 42:         LATCbits.LATC6 = 0;
  5067  002834  9C8B               	bcf	3979,6,c	;volatile
  5068                           
  5069                           ;actuators_main.c: 43:         LATCbits.LATC7 = 0;
  5070  002836  9E8B               	bcf	3979,7,c	;volatile
  5071                           
  5072                           ;actuators_main.c: 44:         LATAbits.LATA5 = 0;
  5073  002838  9A89               	bcf	3977,5,c	;volatile
  5074                           
  5075                           ;actuators_main.c: 48:         if (t_dep%2!=0){
  5076  00283A  0101               	movlb	1	; () banked
  5077  00283C  A116               	btfss	actuators_main@t_dep& (0+255),0,b
  5078  00283E  D006               	goto	l7879
  5079                           
  5080                           ; BSR set to: 1
  5081                           ;actuators_main.c: 49:             steps2_adj = steps2_adj+1;
  5082  002840  0E01               	movlw	1
  5083  002842  2514               	addwf	actuators_main@steps2_adj& (0+255),w,b
  5084  002844  6F14               	movwf	actuators_main@steps2_adj& (0+255),b
  5085  002846  0E00               	movlw	0
  5086  002848  2115               	addwfc	(actuators_main@steps2_adj+1)& (0+255),w,b
  5087  00284A  6F15               	movwf	(actuators_main@steps2_adj+1)& (0+255),b
  5088  00284C                     l7879:
  5089                           
  5090                           ; BSR set to: 1
  5091                           ;actuators_main.c: 51:         stepper2(1, steps2_adj);
  5092  00284C  C114  F100         	movff	actuators_main@steps2_adj,stepper2@steps2_adj
  5093  002850  C115  F101         	movff	actuators_main@steps2_adj+1,stepper2@steps2_adj+1
  5094  002854  0E01               	movlw	1
  5095  002856  EC67  F018         	call	_stepper2
  5096                           
  5097                           ;actuators_main.c: 52:                         LATA = 0b00000000;
  5098  00285A  0E00               	movlw	0
  5099  00285C  6E89               	movwf	3977,c	;volatile
  5100                           
  5101                           ;actuators_main.c: 53:         LATCbits.LATC0 = 0;
  5102  00285E  908B               	bcf	3979,0,c	;volatile
  5103                           
  5104                           ;actuators_main.c: 54:         LATEbits.LATE0 = 0;
  5105  002860  908D               	bcf	3981,0,c	;volatile
  5106                           
  5107                           ;actuators_main.c: 55:         LATEbits.LATE1 = 0;
  5108  002862  928D               	bcf	3981,1,c	;volatile
  5109                           
  5110                           ;actuators_main.c: 56:         LATEbits.LATE2 = 0;
  5111  002864  948D               	bcf	3981,2,c	;volatile
  5112                           
  5113                           ;actuators_main.c: 57:         LATCbits.LATC5 = 0;
  5114  002866  9A8B               	bcf	3979,5,c	;volatile
  5115                           
  5116                           ;actuators_main.c: 58:         LATCbits.LATC6 = 0;
  5117  002868  9C8B               	bcf	3979,6,c	;volatile
  5118                           
  5119                           ;actuators_main.c: 59:         LATCbits.LATC7 = 0;
  5120  00286A  9E8B               	bcf	3979,7,c	;volatile
  5121                           
  5122                           ;actuators_main.c: 60:         LATAbits.LATA5 = 0;
  5123  00286C  9A89               	bcf	3977,5,c	;volatile
  5124                           
  5125                           ;actuators_main.c: 61:         act_cnt++;
  5126  00286E  0101               	movlb	1	; () banked
  5127  002870  4B1A               	infsnz	actuators_main@act_cnt& (0+255),f,b
  5128  002872  2B1B               	incf	(actuators_main@act_cnt+1)& (0+255),f,b
  5129  002874                     l7901:
  5130                           
  5131                           ; BSR set to: 1
  5132                           ;actuators_main.c: 64:     if(act_cnt){
  5133  002874  511A               	movf	actuators_main@act_cnt& (0+255),w,b
  5134  002876  111B               	iorwf	(actuators_main@act_cnt+1)& (0+255),w,b
  5135  002878  A4D8               	btfss	status,2,c
  5136  00287A  0012               	return	
  5137  00287C  D785               	goto	l7821
  5138  00287E                     __end_of_actuators_main:
  5139                           	opt callstack 0
  5140                           
  5141 ;; *************** function _system_init *****************
  5142 ;; Defined at:
  5143 ;;		line 74 in file "actuators_main.c"
  5144 ;; Parameters:    Size  Location     Type
  5145 ;;		None
  5146 ;; Auto vars:     Size  Location     Type
  5147 ;;		None
  5148 ;; Return value:  Size  Location     Type
  5149 ;;                  1    wreg      void 
  5150 ;; Registers used:
  5151 ;;		wreg, status,2
  5152 ;; Tracked objects:
  5153 ;;		On entry : 0/0
  5154 ;;		On exit  : 0/0
  5155 ;;		Unchanged: 0/0
  5156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5161 ;;Total ram usage:        0 bytes
  5162 ;; Hardware stack levels used:    1
  5163 ;; Hardware stack levels required when called:    3
  5164 ;; This function calls:
  5165 ;;		Nothing
  5166 ;; This function is called by:
  5167 ;;		_actuators_main
  5168 ;; This function uses a non-reentrant model
  5169 ;;
  5170                           
  5171                           	psect	text11
  5172  003CA8                     __ptext11:
  5173                           	opt callstack 0
  5174  003CA8                     _system_init:
  5175                           	opt callstack 26
  5176                           
  5177                           ;actuators_main.c: 75:     TRISB = 0x00;
  5178                           
  5179                           ; BSR set to: 1
  5180                           ;incstack = 0
  5181  003CA8  0E00               	movlw	0
  5182  003CAA  6E93               	movwf	3987,c	;volatile
  5183                           
  5184                           ;actuators_main.c: 77:     LATB = 0x0F;
  5185  003CAC  0E0F               	movlw	15
  5186  003CAE  6E8A               	movwf	3978,c	;volatile
  5187                           
  5188                           ;actuators_main.c: 78:     TRISA = 0x00;
  5189  003CB0  0E00               	movlw	0
  5190  003CB2  6E92               	movwf	3986,c	;volatile
  5191                           
  5192                           ;actuators_main.c: 79:     LATA = 0x0F;
  5193  003CB4  0E0F               	movlw	15
  5194  003CB6  6E89               	movwf	3977,c	;volatile
  5195                           
  5196                           ;actuators_main.c: 81:     TRISCbits.TRISC1 = 0;
  5197  003CB8  9294               	bcf	3988,1,c	;volatile
  5198                           
  5199                           ;actuators_main.c: 84:     TRISCbits.TRISC2 = 0;
  5200  003CBA  9494               	bcf	3988,2,c	;volatile
  5201                           
  5202                           ;actuators_main.c: 87:     LATD = 0x00;
  5203  003CBC  0E00               	movlw	0
  5204  003CBE  6E8C               	movwf	3980,c	;volatile
  5205                           
  5206                           ;actuators_main.c: 88:     TRISD = 0x00;
  5207  003CC0  0E00               	movlw	0
  5208  003CC2  6E95               	movwf	3989,c	;volatile
  5209                           
  5210                           ;actuators_main.c: 90:     ADCON1 = 0b00001111;
  5211  003CC4  0E0F               	movlw	15
  5212  003CC6  6EC1               	movwf	4033,c	;volatile
  5213                           
  5214                           ;actuators_main.c: 92:     TRISC = 0x00;
  5215  003CC8  0E00               	movlw	0
  5216  003CCA  6E94               	movwf	3988,c	;volatile
  5217                           
  5218                           ;actuators_main.c: 93:     LATC = 0x00;
  5219  003CCC  0E00               	movlw	0
  5220  003CCE  6E8B               	movwf	3979,c	;volatile
  5221                           
  5222                           ;actuators_main.c: 94:     TRISE = 0x00;
  5223  003CD0  0E00               	movlw	0
  5224  003CD2  6E96               	movwf	3990,c	;volatile
  5225                           
  5226                           ;actuators_main.c: 95:     LATE = 0x00;
  5227  003CD4  0E00               	movlw	0
  5228  003CD6  6E8D               	movwf	3981,c	;volatile
  5229  003CD8  0012               	return		;funcret
  5230  003CDA                     __end_of_system_init:
  5231                           	opt callstack 0
  5232                           
  5233 ;; *************** function _stepper2_back *****************
  5234 ;; Defined at:
  5235 ;;		line 453 in file "actuators_main.c"
  5236 ;; Parameters:    Size  Location     Type
  5237 ;;  direction       1    wreg     unsigned char 
  5238 ;;  steps2_adj      2    0[BANK1 ] int 
  5239 ;; Auto vars:     Size  Location     Type
  5240 ;;  direction       1    3[BANK1 ] unsigned char 
  5241 ;;  i               2    6[BANK1 ] int 
  5242 ;;  count_steppe    2    4[BANK1 ] int 
  5243 ;; Return value:  Size  Location     Type
  5244 ;;                  1    wreg      void 
  5245 ;; Registers used:
  5246 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5247 ;; Tracked objects:
  5248 ;;		On entry : 0/0
  5249 ;;		On exit  : 0/0
  5250 ;;		Unchanged: 0/0
  5251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5252 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5253 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5254 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5255 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5256 ;;Total ram usage:        8 bytes
  5257 ;; Hardware stack levels used:    1
  5258 ;; Hardware stack levels required when called:   15
  5259 ;; This function calls:
  5260 ;;		_full_drive
  5261 ;;		_lcdInst
  5262 ;;		_printf
  5263 ;; This function is called by:
  5264 ;;		_actuators_main
  5265 ;; This function uses a non-reentrant model
  5266 ;;
  5267                           
  5268                           	psect	text12
  5269  0035CA                     __ptext12:
  5270                           	opt callstack 0
  5271  0035CA                     _stepper2_back:
  5272                           	opt callstack 14
  5273                           
  5274                           ;incstack = 0
  5275                           ;stepper2_back@direction stored from wreg
  5276  0035CA  0101               	movlb	1	; () banked
  5277  0035CC  6F03               	movwf	stepper2_back@direction& (0+255),b
  5278                           
  5279                           ;actuators_main.c: 471:     int count_stepper = 0;
  5280  0035CE  0E00               	movlw	0
  5281  0035D0  0101               	movlb	1	; () banked
  5282  0035D2  6F05               	movwf	(stepper2_back@count_stepper+1)& (0+255),b
  5283  0035D4  0E00               	movlw	0
  5284  0035D6  6F04               	movwf	stepper2_back@count_stepper& (0+255),b
  5285                           
  5286                           ; BSR set to: 1
  5287                           ;actuators_main.c: 474:             { lcdInst(0x01); _delay((unsigned long)((5)*(1000000
      +                          0/4000.0)));};
  5288                           
  5289                           ; BSR set to: 1
  5290                           ;actuators_main.c: 473:         if (count_stepper<1){
  5291  0035D8  0E01               	movlw	1
  5292  0035DA  EC61  F01F         	call	_lcdInst
  5293  0035DE  0E11               	movlw	17
  5294  0035E0  0101               	movlb	1	; () banked
  5295  0035E2  6F02               	movwf	??_stepper2_back& (0+255),b
  5296  0035E4  0E3A               	movlw	58
  5297  0035E6                     u9597:
  5298  0035E6  2EE8               	decfsz	wreg,f,c
  5299  0035E8  D7FE               	bra	u9597
  5300  0035EA  2F02               	decfsz	??_stepper2_back& (0+255),f,b
  5301  0035EC  D7FC               	bra	u9597
  5302  0035EE  F000               	nop	
  5303                           
  5304                           ;actuators_main.c: 475:             printf("step1");
  5305  0035F0  0EF4               	movlw	low STR_6
  5306  0035F2  0100               	movlb	0	; () banked
  5307  0035F4  6FED               	movwf	printf@fmt& (0+255),b
  5308  0035F6  0EFF               	movlw	high STR_6
  5309  0035F8  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5310  0035FA  ECFB  F01E         	call	_printf	;wreg free
  5311  0035FE  0EC0               	movlw	192
  5312  003600  EC61  F01F         	call	_lcdInst
  5313                           
  5314                           ;actuators_main.c: 477:             printf("Step speed %d",4);
  5315  003604  0EE2               	movlw	low STR_7
  5316  003606  0100               	movlb	0	; () banked
  5317  003608  6FED               	movwf	printf@fmt& (0+255),b
  5318  00360A  0EFE               	movlw	high STR_7
  5319  00360C  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5320  00360E  0E00               	movlw	0
  5321  003610  6FF0               	movwf	(?_printf+3)& (0+255),b
  5322  003612  0E04               	movlw	4
  5323  003614  6FEF               	movwf	(?_printf+2)& (0+255),b
  5324  003616  ECFB  F01E         	call	_printf	;wreg free
  5325                           
  5326                           ;actuators_main.c: 478:             for(int i=0;i<5;i++){
  5327  00361A  0E00               	movlw	0
  5328  00361C  0101               	movlb	1	; () banked
  5329  00361E  6F07               	movwf	(stepper2_back@i+1)& (0+255),b
  5330  003620  0E00               	movlw	0
  5331  003622  6F06               	movwf	stepper2_back@i& (0+255),b
  5332  003624                     l7571:
  5333                           
  5334                           ; BSR set to: 1
  5335                           ;actuators_main.c: 480:                 full_drive(direction, 2);
  5336  003624  0E00               	movlw	0
  5337  003626  0100               	movlb	0	; () banked
  5338  003628  6FFC               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5339  00362A  0E02               	movlw	2
  5340  00362C  6FFB               	movwf	full_drive@stepper_no& (0+255),b
  5341  00362E  0101               	movlb	1	; () banked
  5342  003630  5103               	movf	stepper2_back@direction& (0+255),w,b
  5343  003632  EC9F  F00B         	call	_full_drive
  5344                           
  5345                           ;actuators_main.c: 482:             }
  5346  003636  0101               	movlb	1	; () banked
  5347  003638  4B06               	infsnz	stepper2_back@i& (0+255),f,b
  5348  00363A  2B07               	incf	(stepper2_back@i+1)& (0+255),f,b
  5349                           
  5350                           ; BSR set to: 1
  5351  00363C  BF07               	btfsc	(stepper2_back@i+1)& (0+255),7,b
  5352  00363E  D7F2               	goto	l7571
  5353  003640  5107               	movf	(stepper2_back@i+1)& (0+255),w,b
  5354  003642  E104               	bnz	u8090
  5355  003644  0E05               	movlw	5
  5356  003646  5D06               	subwf	stepper2_back@i& (0+255),w,b
  5357  003648  A0D8               	btfss	status,0,c
  5358  00364A  D7EC               	goto	l7571
  5359  00364C                     u8090:
  5360                           
  5361                           ; BSR set to: 1
  5362                           ;actuators_main.c: 483:             printf("cnt is %d", count_stepper);
  5363  00364C  0ED9               	movlw	low STR_1
  5364  00364E  0100               	movlb	0	; () banked
  5365  003650  6FED               	movwf	printf@fmt& (0+255),b
  5366  003652  0EFF               	movlw	high STR_1
  5367  003654  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5368  003656  C104  F0EF         	movff	stepper2_back@count_stepper,?_printf+2
  5369  00365A  C105  F0F0         	movff	stepper2_back@count_stepper+1,?_printf+3
  5370  00365E  ECFB  F01E         	call	_printf	;wreg free
  5371                           
  5372                           ;actuators_main.c: 484:             count_stepper++;
  5373  003662  0101               	movlb	1	; () banked
  5374  003664  4B04               	infsnz	stepper2_back@count_stepper& (0+255),f,b
  5375  003666  2B05               	incf	(stepper2_back@count_stepper+1)& (0+255),f,b
  5376                           
  5377                           ; BSR set to: 1
  5378  003668  0012               	return		;funcret
  5379  00366A                     __end_of_stepper2_back:
  5380                           	opt callstack 0
  5381                           
  5382 ;; *************** function _stepper2 *****************
  5383 ;; Defined at:
  5384 ;;		line 368 in file "actuators_main.c"
  5385 ;; Parameters:    Size  Location     Type
  5386 ;;  direction       1    wreg     unsigned char 
  5387 ;;  steps2_adj      2    0[BANK1 ] int 
  5388 ;; Auto vars:     Size  Location     Type
  5389 ;;  direction       1   13[BANK1 ] unsigned char 
  5390 ;;  i               2    9[BANK1 ] int 
  5391 ;;  i               2    7[BANK1 ] int 
  5392 ;;  count_steppe    2   11[BANK1 ] int 
  5393 ;; Return value:  Size  Location     Type
  5394 ;;                  1    wreg      void 
  5395 ;; Registers used:
  5396 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5397 ;; Tracked objects:
  5398 ;;		On entry : 0/0
  5399 ;;		On exit  : 0/0
  5400 ;;		Unchanged: 0/0
  5401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5402 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5403 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5404 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5405 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5406 ;;Total ram usage:       14 bytes
  5407 ;; Hardware stack levels used:    1
  5408 ;; Hardware stack levels required when called:   15
  5409 ;; This function calls:
  5410 ;;		_full_drive
  5411 ;;		_lcdInst
  5412 ;;		_printf
  5413 ;; This function is called by:
  5414 ;;		_actuators_main
  5415 ;; This function uses a non-reentrant model
  5416 ;;
  5417                           
  5418                           	psect	text13
  5419  0030CE                     __ptext13:
  5420                           	opt callstack 0
  5421  0030CE                     _stepper2:
  5422                           	opt callstack 14
  5423                           
  5424                           ; BSR set to: 1
  5425                           ;incstack = 0
  5426                           ;stepper2@direction stored from wreg
  5427  0030CE  0101               	movlb	1	; () banked
  5428  0030D0  6F0D               	movwf	stepper2@direction& (0+255),b
  5429                           
  5430                           ;actuators_main.c: 386:     int count_stepper = 0;
  5431  0030D2  0E00               	movlw	0
  5432  0030D4  0101               	movlb	1	; () banked
  5433  0030D6  6F0C               	movwf	(stepper2@count_stepper+1)& (0+255),b
  5434  0030D8  0E00               	movlw	0
  5435  0030DA  6F0B               	movwf	stepper2@count_stepper& (0+255),b
  5436                           
  5437                           ; BSR set to: 1
  5438                           ;actuators_main.c: 389:     if (direction == 0){
  5439                           
  5440                           ; BSR set to: 1
  5441                           ;actuators_main.c: 388:         if (count_stepper<1){
  5442  0030DC  510D               	movf	stepper2@direction& (0+255),w,b
  5443  0030DE  A4D8               	btfss	status,2,c
  5444  0030E0  D029               	goto	l7533
  5445                           
  5446                           ; BSR set to: 1
  5447                           ;actuators_main.c: 394:             for(int i=0;i<steps2_adj;i++){
  5448  0030E2  0E00               	movlw	0
  5449  0030E4  6F08               	movwf	(stepper2@i+1)& (0+255),b
  5450  0030E6  0E00               	movlw	0
  5451  0030E8  6F07               	movwf	stepper2@i& (0+255),b
  5452  0030EA  D00C               	goto	l7527
  5453  0030EC                     l7523:
  5454                           
  5455                           ; BSR set to: 1
  5456                           ;actuators_main.c: 396:                 full_drive(direction, 2);
  5457  0030EC  0E00               	movlw	0
  5458  0030EE  0100               	movlb	0	; () banked
  5459  0030F0  6FFC               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5460  0030F2  0E02               	movlw	2
  5461  0030F4  6FFB               	movwf	full_drive@stepper_no& (0+255),b
  5462  0030F6  0101               	movlb	1	; () banked
  5463  0030F8  510D               	movf	stepper2@direction& (0+255),w,b
  5464  0030FA  EC9F  F00B         	call	_full_drive
  5465                           
  5466                           ;actuators_main.c: 398:             }
  5467  0030FE  0101               	movlb	1	; () banked
  5468  003100  4B07               	infsnz	stepper2@i& (0+255),f,b
  5469  003102  2B08               	incf	(stepper2@i+1)& (0+255),f,b
  5470  003104                     l7527:
  5471                           
  5472                           ; BSR set to: 1
  5473  003104  5100               	movf	stepper2@steps2_adj& (0+255),w,b
  5474  003106  5D07               	subwf	stepper2@i& (0+255),w,b
  5475  003108  5108               	movf	(stepper2@i+1)& (0+255),w,b
  5476  00310A  0A80               	xorlw	128
  5477  00310C  6F02               	movwf	??_stepper2& (0+255),b
  5478  00310E  5101               	movf	(stepper2@steps2_adj+1)& (0+255),w,b
  5479  003110  0A80               	xorlw	128
  5480  003112  5902               	subwfb	??_stepper2& (0+255),w,b
  5481  003114  A0D8               	btfss	status,0,c
  5482  003116  D7EA               	goto	l7523
  5483                           
  5484                           ; BSR set to: 1
  5485                           ;actuators_main.c: 399:             printf("cnt is %d", count_stepper);
  5486  003118  0ED9               	movlw	low STR_1
  5487  00311A  0100               	movlb	0	; () banked
  5488  00311C  6FED               	movwf	printf@fmt& (0+255),b
  5489  00311E  0EFF               	movlw	high STR_1
  5490  003120  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5491  003122  C10B  F0EF         	movff	stepper2@count_stepper,?_printf+2
  5492  003126  C10C  F0F0         	movff	stepper2@count_stepper+1,?_printf+3
  5493  00312A  ECFB  F01E         	call	_printf	;wreg free
  5494                           
  5495                           ;actuators_main.c: 400:             count_stepper++;
  5496  00312E  0101               	movlb	1	; () banked
  5497  003130  4B0B               	infsnz	stepper2@count_stepper& (0+255),f,b
  5498  003132  2B0C               	incf	(stepper2@count_stepper+1)& (0+255),f,b
  5499  003134                     l7533:
  5500                           
  5501                           ; BSR set to: 1
  5502                           ;actuators_main.c: 402:     if (direction == 1){
  5503  003134  050D               	decf	stepper2@direction& (0+255),w,b
  5504  003136  A4D8               	btfss	status,2,c
  5505  003138  0012               	return	
  5506                           
  5507                           ; BSR set to: 1
  5508                           ;actuators_main.c: 403:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/40
      +                          00.0)));};
  5509  00313A  0E01               	movlw	1
  5510  00313C  EC61  F01F         	call	_lcdInst
  5511  003140  0E11               	movlw	17
  5512  003142  0101               	movlb	1	; () banked
  5513  003144  6F02               	movwf	??_stepper2& (0+255),b
  5514  003146  0E3A               	movlw	58
  5515  003148                     u9607:
  5516  003148  2EE8               	decfsz	wreg,f,c
  5517  00314A  D7FE               	bra	u9607
  5518  00314C  2F02               	decfsz	??_stepper2& (0+255),f,b
  5519  00314E  D7FC               	bra	u9607
  5520  003150  F000               	nop	
  5521                           
  5522                           ;actuators_main.c: 404:                         printf("steppp %d", steps2_adj-(5));
  5523  003152  0ECF               	movlw	low STR_5
  5524  003154  0100               	movlb	0	; () banked
  5525  003156  6FED               	movwf	printf@fmt& (0+255),b
  5526  003158  0EFF               	movlw	high STR_5
  5527  00315A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5528  00315C  0EFB               	movlw	251
  5529  00315E  0101               	movlb	1	; () banked
  5530  003160  2500               	addwf	stepper2@steps2_adj& (0+255),w,b
  5531  003162  0100               	movlb	0	; () banked
  5532  003164  6FEF               	movwf	(?_printf+2)& (0+255),b
  5533  003166  0EFF               	movlw	255
  5534  003168  0101               	movlb	1	; () banked
  5535  00316A  2101               	addwfc	(stepper2@steps2_adj+1)& (0+255),w,b
  5536  00316C  0100               	movlb	0	; () banked
  5537  00316E  6FF0               	movwf	(?_printf+3)& (0+255),b
  5538  003170  ECFB  F01E         	call	_printf	;wreg free
  5539                           
  5540                           ;actuators_main.c: 406:                 for(int i=0;i<(steps2_adj-(5));i++){
  5541  003174  0E00               	movlw	0
  5542  003176  0101               	movlb	1	; () banked
  5543  003178  6F0A               	movwf	(stepper2@i_489+1)& (0+255),b
  5544  00317A  0E00               	movlw	0
  5545  00317C  6F09               	movwf	stepper2@i_489& (0+255),b
  5546  00317E  D00C               	goto	l7547
  5547  003180                     l7543:
  5548                           
  5549                           ; BSR set to: 1
  5550                           ;actuators_main.c: 408:                     full_drive(direction, 2);
  5551  003180  0E00               	movlw	0
  5552  003182  0100               	movlb	0	; () banked
  5553  003184  6FFC               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5554  003186  0E02               	movlw	2
  5555  003188  6FFB               	movwf	full_drive@stepper_no& (0+255),b
  5556  00318A  0101               	movlb	1	; () banked
  5557  00318C  510D               	movf	stepper2@direction& (0+255),w,b
  5558  00318E  EC9F  F00B         	call	_full_drive
  5559                           
  5560                           ;actuators_main.c: 410:                 }
  5561  003192  0101               	movlb	1	; () banked
  5562  003194  4B09               	infsnz	stepper2@i_489& (0+255),f,b
  5563  003196  2B0A               	incf	(stepper2@i_489+1)& (0+255),f,b
  5564  003198                     l7547:
  5565                           
  5566                           ; BSR set to: 1
  5567  003198  0EFB               	movlw	251
  5568  00319A  6F02               	movwf	??_stepper2& (0+255),b
  5569  00319C  0EFF               	movlw	255
  5570  00319E  6F03               	movwf	(??_stepper2+1)& (0+255),b
  5571  0031A0  C100  F104         	movff	stepper2@steps2_adj,??_stepper2+2
  5572  0031A4  C101  F105         	movff	stepper2@steps2_adj+1,??_stepper2+3
  5573  0031A8  5102               	movf	??_stepper2& (0+255),w,b
  5574  0031AA  2704               	addwf	(??_stepper2+2)& (0+255),f,b
  5575  0031AC  5103               	movf	(??_stepper2+1)& (0+255),w,b
  5576  0031AE  2305               	addwfc	(??_stepper2+3)& (0+255),f,b
  5577  0031B0  5104               	movf	(??_stepper2+2)& (0+255),w,b
  5578  0031B2  5D09               	subwf	stepper2@i_489& (0+255),w,b
  5579  0031B4  510A               	movf	(stepper2@i_489+1)& (0+255),w,b
  5580  0031B6  0A80               	xorlw	128
  5581  0031B8  6F06               	movwf	(??_stepper2+4)& (0+255),b
  5582  0031BA  5105               	movf	(??_stepper2+3)& (0+255),w,b
  5583  0031BC  0A80               	xorlw	128
  5584  0031BE  5906               	subwfb	(??_stepper2+4)& (0+255),w,b
  5585  0031C0  A0D8               	btfss	status,0,c
  5586  0031C2  D7DE               	goto	l7543
  5587                           
  5588                           ; BSR set to: 1
  5589                           ;actuators_main.c: 411:                 count_stepper++;
  5590  0031C4  4B0B               	infsnz	stepper2@count_stepper& (0+255),f,b
  5591  0031C6  2B0C               	incf	(stepper2@count_stepper+1)& (0+255),f,b
  5592                           
  5593                           ; BSR set to: 1
  5594  0031C8  0012               	return		;funcret
  5595  0031CA                     __end_of_stepper2:
  5596                           	opt callstack 0
  5597                           
  5598 ;; *************** function _stepper *****************
  5599 ;; Defined at:
  5600 ;;		line 303 in file "actuators_main.c"
  5601 ;; Parameters:    Size  Location     Type
  5602 ;;  stack           2    0[BANK1 ] int 
  5603 ;;  t_dep           2    2[BANK1 ] int 
  5604 ;; Auto vars:     Size  Location     Type
  5605 ;;  i               2   16[BANK1 ] int 
  5606 ;;  i               2   14[BANK1 ] int 
  5607 ;;  i               2   12[BANK1 ] int 
  5608 ;;  i               2   10[BANK1 ] int 
  5609 ;;  count_steppe    2    8[BANK1 ] int 
  5610 ;; Return value:  Size  Location     Type
  5611 ;;                  1    wreg      void 
  5612 ;; Registers used:
  5613 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5614 ;; Tracked objects:
  5615 ;;		On entry : 0/0
  5616 ;;		On exit  : 0/0
  5617 ;;		Unchanged: 0/0
  5618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5619 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5620 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5621 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5622 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5623 ;;Total ram usage:       18 bytes
  5624 ;; Hardware stack levels used:    1
  5625 ;; Hardware stack levels required when called:   15
  5626 ;; This function calls:
  5627 ;;		_full_drive
  5628 ;; This function is called by:
  5629 ;;		_actuators_main
  5630 ;; This function uses a non-reentrant model
  5631 ;;
  5632                           
  5633                           	psect	text14
  5634  00287E                     __ptext14:
  5635                           	opt callstack 0
  5636  00287E                     _stepper:
  5637                           	opt callstack 14
  5638                           
  5639                           ;actuators_main.c: 304:     int count_stepper = 0;
  5640                           
  5641                           ; BSR set to: 1
  5642                           ;incstack = 0
  5643  00287E  0E00               	movlw	0
  5644  002880  0101               	movlb	1	; () banked
  5645  002882  6F09               	movwf	(stepper@count_stepper+1)& (0+255),b
  5646  002884  0E00               	movlw	0
  5647  002886  6F08               	movwf	stepper@count_stepper& (0+255),b
  5648                           
  5649                           ; BSR set to: 1
  5650                           ;actuators_main.c: 313:             if (stack == 1){
  5651                           
  5652                           ; BSR set to: 1
  5653                           ;actuators_main.c: 307:         if (count_stepper<1){
  5654  002888  0500               	decf	stepper@stack& (0+255),w,b
  5655  00288A  1101               	iorwf	(stepper@stack+1)& (0+255),w,b
  5656  00288C  A4D8               	btfss	status,2,c
  5657  00288E  D03E               	goto	u7990
  5658                           
  5659                           ; BSR set to: 1
  5660                           ;actuators_main.c: 314:                 if (t_dep<=3){
  5661  002890  BF03               	btfsc	(stepper@t_dep+1)& (0+255),7,b
  5662  002892  D006               	goto	u7960
  5663  002894  5103               	movf	(stepper@t_dep+1)& (0+255),w,b
  5664  002896  E11B               	bnz	l7469
  5665  002898  0E04               	movlw	4
  5666  00289A  5D02               	subwf	stepper@t_dep& (0+255),w,b
  5667  00289C  B0D8               	btfsc	status,0,c
  5668  00289E  D017               	goto	u7970
  5669  0028A0                     u7960:
  5670                           
  5671                           ; BSR set to: 1
  5672                           ;actuators_main.c: 315:                     for(int i=0;i<14;i++){
  5673  0028A0  0E00               	movlw	0
  5674  0028A2  6F0B               	movwf	(stepper@i+1)& (0+255),b
  5675  0028A4  0E00               	movlw	0
  5676  0028A6  6F0A               	movwf	stepper@i& (0+255),b
  5677  0028A8                     l7463:
  5678                           
  5679                           ; BSR set to: 1
  5680                           ;actuators_main.c: 317:                         full_drive(0, 1);
  5681  0028A8  0E00               	movlw	0
  5682  0028AA  0100               	movlb	0	; () banked
  5683  0028AC  6FFC               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5684  0028AE  0E01               	movlw	1
  5685  0028B0  6FFB               	movwf	full_drive@stepper_no& (0+255),b
  5686  0028B2  0E00               	movlw	0
  5687  0028B4  EC9F  F00B         	call	_full_drive
  5688                           
  5689                           ;actuators_main.c: 319:                     }
  5690  0028B8  0101               	movlb	1	; () banked
  5691  0028BA  4B0A               	infsnz	stepper@i& (0+255),f,b
  5692  0028BC  2B0B               	incf	(stepper@i+1)& (0+255),f,b
  5693                           
  5694                           ; BSR set to: 1
  5695  0028BE  BF0B               	btfsc	(stepper@i+1)& (0+255),7,b
  5696  0028C0  D7F3               	goto	l7463
  5697  0028C2  510B               	movf	(stepper@i+1)& (0+255),w,b
  5698  0028C4  E104               	bnz	u7970
  5699  0028C6  0E0E               	movlw	14
  5700  0028C8  5D0A               	subwf	stepper@i& (0+255),w,b
  5701  0028CA  A0D8               	btfss	status,0,c
  5702  0028CC  D7ED               	goto	l7463
  5703  0028CE                     u7970:
  5704  0028CE                     l7469:
  5705                           
  5706                           ; BSR set to: 1
  5707                           ;actuators_main.c: 321:                 if (t_dep>3){
  5708  0028CE  BF03               	btfsc	(stepper@t_dep+1)& (0+255),7,b
  5709  0028D0  D01D               	goto	u7990
  5710  0028D2  5103               	movf	(stepper@t_dep+1)& (0+255),w,b
  5711  0028D4  E104               	bnz	u7980
  5712  0028D6  0E04               	movlw	4
  5713  0028D8  5D02               	subwf	stepper@t_dep& (0+255),w,b
  5714  0028DA  A0D8               	btfss	status,0,c
  5715  0028DC  D017               	goto	u7990
  5716  0028DE                     u7980:
  5717                           
  5718                           ; BSR set to: 1
  5719                           ;actuators_main.c: 322:                     for(int i=0;i<14 -1;i++){
  5720  0028DE  0E00               	movlw	0
  5721  0028E0  6F0D               	movwf	(stepper@i_479+1)& (0+255),b
  5722  0028E2  0E00               	movlw	0
  5723  0028E4  6F0C               	movwf	stepper@i_479& (0+255),b
  5724  0028E6                     l7477:
  5725                           
  5726                           ; BSR set to: 1
  5727                           ;actuators_main.c: 324:                         full_drive(0, 1);
  5728  0028E6  0E00               	movlw	0
  5729  0028E8  0100               	movlb	0	; () banked
  5730  0028EA  6FFC               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5731  0028EC  0E01               	movlw	1
  5732  0028EE  6FFB               	movwf	full_drive@stepper_no& (0+255),b
  5733  0028F0  0E00               	movlw	0
  5734  0028F2  EC9F  F00B         	call	_full_drive
  5735                           
  5736                           ;actuators_main.c: 326:                     }
  5737  0028F6  0101               	movlb	1	; () banked
  5738  0028F8  4B0C               	infsnz	stepper@i_479& (0+255),f,b
  5739  0028FA  2B0D               	incf	(stepper@i_479+1)& (0+255),f,b
  5740                           
  5741                           ; BSR set to: 1
  5742  0028FC  BF0D               	btfsc	(stepper@i_479+1)& (0+255),7,b
  5743  0028FE  D7F3               	goto	l7477
  5744  002900  510D               	movf	(stepper@i_479+1)& (0+255),w,b
  5745  002902  E104               	bnz	u7990
  5746  002904  0E0D               	movlw	13
  5747  002906  5D0C               	subwf	stepper@i_479& (0+255),w,b
  5748  002908  A0D8               	btfss	status,0,c
  5749  00290A  D7ED               	goto	l7477
  5750  00290C                     u7990:
  5751                           
  5752                           ; BSR set to: 1
  5753                           ;actuators_main.c: 329:             if (stack == 2){
  5754  00290C  0E02               	movlw	2
  5755  00290E  1900               	xorwf	stepper@stack& (0+255),w,b
  5756  002910  1101               	iorwf	(stepper@stack+1)& (0+255),w,b
  5757  002912  A4D8               	btfss	status,2,c
  5758  002914  D056               	goto	u8040
  5759                           
  5760                           ; BSR set to: 1
  5761                           ;actuators_main.c: 330:                 if ((t_dep-8)<=3){
  5762  002916  0EF8               	movlw	248
  5763  002918  6F04               	movwf	??_stepper& (0+255),b
  5764  00291A  0EFF               	movlw	255
  5765  00291C  6F05               	movwf	(??_stepper+1)& (0+255),b
  5766  00291E  C102  F106         	movff	stepper@t_dep,??_stepper+2
  5767  002922  C103  F107         	movff	stepper@t_dep+1,??_stepper+3
  5768  002926  5104               	movf	??_stepper& (0+255),w,b
  5769  002928  2706               	addwf	(??_stepper+2)& (0+255),f,b
  5770  00292A  5105               	movf	(??_stepper+1)& (0+255),w,b
  5771  00292C  2307               	addwfc	(??_stepper+3)& (0+255),f,b
  5772  00292E  BF07               	btfsc	(??_stepper+3)& (0+255),7,b
  5773  002930  D006               	goto	u8010
  5774  002932  5107               	movf	(??_stepper+3)& (0+255),w,b
  5775  002934  E11B               	bnz	l7499
  5776  002936  0E04               	movlw	4
  5777  002938  5D06               	subwf	(??_stepper+2)& (0+255),w,b
  5778  00293A  B0D8               	btfsc	status,0,c
  5779  00293C  D017               	goto	u8020
  5780  00293E                     u8010:
  5781                           
  5782                           ; BSR set to: 1
  5783                           ;actuators_main.c: 331:                     for(int i=0;i<14;i++){
  5784  00293E  0E00               	movlw	0
  5785  002940  6F0F               	movwf	(stepper@i_480+1)& (0+255),b
  5786  002942  0E00               	movlw	0
  5787  002944  6F0E               	movwf	stepper@i_480& (0+255),b
  5788  002946                     l7493:
  5789                           
  5790                           ; BSR set to: 1
  5791                           ;actuators_main.c: 332:                         full_drive(0, 3);
  5792  002946  0E00               	movlw	0
  5793  002948  0100               	movlb	0	; () banked
  5794  00294A  6FFC               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5795  00294C  0E03               	movlw	3
  5796  00294E  6FFB               	movwf	full_drive@stepper_no& (0+255),b
  5797  002950  0E00               	movlw	0
  5798  002952  EC9F  F00B         	call	_full_drive
  5799                           
  5800                           ;actuators_main.c: 335:                     }
  5801  002956  0101               	movlb	1	; () banked
  5802  002958  4B0E               	infsnz	stepper@i_480& (0+255),f,b
  5803  00295A  2B0F               	incf	(stepper@i_480+1)& (0+255),f,b
  5804                           
  5805                           ; BSR set to: 1
  5806  00295C  BF0F               	btfsc	(stepper@i_480+1)& (0+255),7,b
  5807  00295E  D7F3               	goto	l7493
  5808  002960  510F               	movf	(stepper@i_480+1)& (0+255),w,b
  5809  002962  E104               	bnz	u8020
  5810  002964  0E0E               	movlw	14
  5811  002966  5D0E               	subwf	stepper@i_480& (0+255),w,b
  5812  002968  A0D8               	btfss	status,0,c
  5813  00296A  D7ED               	goto	l7493
  5814  00296C                     u8020:
  5815  00296C                     l7499:
  5816                           
  5817                           ; BSR set to: 1
  5818                           ;actuators_main.c: 337:                 if ((t_dep-8)>3){
  5819  00296C  0EF8               	movlw	248
  5820  00296E  6F04               	movwf	??_stepper& (0+255),b
  5821  002970  0EFF               	movlw	255
  5822  002972  6F05               	movwf	(??_stepper+1)& (0+255),b
  5823  002974  C102  F106         	movff	stepper@t_dep,??_stepper+2
  5824  002978  C103  F107         	movff	stepper@t_dep+1,??_stepper+3
  5825  00297C  5104               	movf	??_stepper& (0+255),w,b
  5826  00297E  2706               	addwf	(??_stepper+2)& (0+255),f,b
  5827  002980  5105               	movf	(??_stepper+1)& (0+255),w,b
  5828  002982  2307               	addwfc	(??_stepper+3)& (0+255),f,b
  5829  002984  BF07               	btfsc	(??_stepper+3)& (0+255),7,b
  5830  002986  D01D               	goto	u8040
  5831  002988  5107               	movf	(??_stepper+3)& (0+255),w,b
  5832  00298A  E104               	bnz	u8030
  5833  00298C  0E04               	movlw	4
  5834  00298E  5D06               	subwf	(??_stepper+2)& (0+255),w,b
  5835  002990  A0D8               	btfss	status,0,c
  5836  002992  D017               	goto	u8040
  5837  002994                     u8030:
  5838                           
  5839                           ; BSR set to: 1
  5840                           ;actuators_main.c: 338:                     for(int i=0;i<14 -1;i++){
  5841  002994  0E00               	movlw	0
  5842  002996  6F11               	movwf	(stepper@i_481+1)& (0+255),b
  5843  002998  0E00               	movlw	0
  5844  00299A  6F10               	movwf	stepper@i_481& (0+255),b
  5845  00299C                     l7507:
  5846                           
  5847                           ; BSR set to: 1
  5848                           ;actuators_main.c: 339:                         full_drive(0, 3);
  5849  00299C  0E00               	movlw	0
  5850  00299E  0100               	movlb	0	; () banked
  5851  0029A0  6FFC               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5852  0029A2  0E03               	movlw	3
  5853  0029A4  6FFB               	movwf	full_drive@stepper_no& (0+255),b
  5854  0029A6  0E00               	movlw	0
  5855  0029A8  EC9F  F00B         	call	_full_drive
  5856                           
  5857                           ;actuators_main.c: 342:                     }
  5858  0029AC  0101               	movlb	1	; () banked
  5859  0029AE  4B10               	infsnz	stepper@i_481& (0+255),f,b
  5860  0029B0  2B11               	incf	(stepper@i_481+1)& (0+255),f,b
  5861                           
  5862                           ; BSR set to: 1
  5863  0029B2  BF11               	btfsc	(stepper@i_481+1)& (0+255),7,b
  5864  0029B4  D7F3               	goto	l7507
  5865  0029B6  5111               	movf	(stepper@i_481+1)& (0+255),w,b
  5866  0029B8  E104               	bnz	u8040
  5867  0029BA  0E0D               	movlw	13
  5868  0029BC  5D10               	subwf	stepper@i_481& (0+255),w,b
  5869  0029BE  A0D8               	btfss	status,0,c
  5870  0029C0  D7ED               	goto	l7507
  5871  0029C2                     u8040:
  5872                           
  5873                           ; BSR set to: 1
  5874                           ;actuators_main.c: 346:             count_stepper++;
  5875  0029C2  4B08               	infsnz	stepper@count_stepper& (0+255),f,b
  5876  0029C4  2B09               	incf	(stepper@count_stepper+1)& (0+255),f,b
  5877                           
  5878                           ; BSR set to: 1
  5879                           
  5880                           ;actuators_main.c: 347:         }
  5881  0029C6  0012               	return		;funcret
  5882  0029C8                     __end_of_stepper:
  5883                           	opt callstack 0
  5884                           
  5885 ;; *************** function _full_drive *****************
  5886 ;; Defined at:
  5887 ;;		line 502 in file "actuators_main.c"
  5888 ;; Parameters:    Size  Location     Type
  5889 ;;  direction       1    wreg     unsigned char 
  5890 ;;  stepper_no      2  123[BANK0 ] int 
  5891 ;; Auto vars:     Size  Location     Type
  5892 ;;  direction       1  126[BANK0 ] unsigned char 
  5893 ;; Return value:  Size  Location     Type
  5894 ;;                  1    wreg      void 
  5895 ;; Registers used:
  5896 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5897 ;; Tracked objects:
  5898 ;;		On entry : 0/0
  5899 ;;		On exit  : 0/0
  5900 ;;		Unchanged: 0/0
  5901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5902 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5903 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5904 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5905 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5906 ;;Total ram usage:        4 bytes
  5907 ;; Hardware stack levels used:    1
  5908 ;; Hardware stack levels required when called:   14
  5909 ;; This function calls:
  5910 ;;		_printf
  5911 ;; This function is called by:
  5912 ;;		_stepper
  5913 ;;		_stepper2
  5914 ;;		_stepper2_back
  5915 ;; This function uses a non-reentrant model
  5916 ;;
  5917                           
  5918                           	psect	text15
  5919  00173E                     __ptext15:
  5920                           	opt callstack 0
  5921  00173E                     _full_drive:
  5922                           	opt callstack 14
  5923                           
  5924                           ; BSR set to: 1
  5925                           ;incstack = 0
  5926                           ;full_drive@direction stored from wreg
  5927  00173E  0100               	movlb	0	; () banked
  5928  001740  6FFE               	movwf	full_drive@direction& (0+255),b
  5929                           
  5930                           ;actuators_main.c: 503:     if (stepper_no == 1){
  5931  001742  0100               	movlb	0	; () banked
  5932  001744  05FB               	decf	full_drive@stepper_no& (0+255),w,b
  5933  001746  11FC               	iorwf	(full_drive@stepper_no+1)& (0+255),w,b
  5934  001748  A4D8               	btfss	status,2,c
  5935  00174A  D06B               	goto	l7189
  5936                           
  5937                           ; BSR set to: 0
  5938                           ;actuators_main.c: 504:         if (direction == 1){
  5939  00174C  05FE               	decf	full_drive@direction& (0+255),w,b
  5940  00174E  A4D8               	btfss	status,2,c
  5941  001750  D032               	goto	l7173
  5942                           
  5943                           ; BSR set to: 0
  5944                           ;actuators_main.c: 505:             LATA = 0b00000011;
  5945  001752  0E03               	movlw	3
  5946  001754  6E89               	movwf	3977,c	;volatile
  5947                           
  5948                           ; BSR set to: 0
  5949                           ;actuators_main.c: 506:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5950  001756  0E1E               	movlw	30
  5951  001758  0100               	movlb	0	; () banked
  5952  00175A  6FFD               	movwf	??_full_drive& (0+255),b
  5953  00175C  0E37               	movlw	55
  5954  00175E                     u9617:
  5955  00175E  2EE8               	decfsz	wreg,f,c
  5956  001760  D7FE               	bra	u9617
  5957  001762  2FFD               	decfsz	??_full_drive& (0+255),f,b
  5958  001764  D7FC               	bra	u9617
  5959                           
  5960                           ;actuators_main.c: 507:             LATA = 0b00000110;
  5961  001766  0E06               	movlw	6
  5962  001768  6E89               	movwf	3977,c	;volatile
  5963                           
  5964                           ;actuators_main.c: 508:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5965  00176A  0E1E               	movlw	30
  5966  00176C  0100               	movlb	0	; () banked
  5967  00176E  6FFD               	movwf	??_full_drive& (0+255),b
  5968  001770  0E37               	movlw	55
  5969  001772                     u9627:
  5970  001772  2EE8               	decfsz	wreg,f,c
  5971  001774  D7FE               	bra	u9627
  5972  001776  2FFD               	decfsz	??_full_drive& (0+255),f,b
  5973  001778  D7FC               	bra	u9627
  5974                           
  5975                           ;actuators_main.c: 509:             LATA = 0b00001100;
  5976  00177A  0E0C               	movlw	12
  5977  00177C  6E89               	movwf	3977,c	;volatile
  5978                           
  5979                           ;actuators_main.c: 510:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5980  00177E  0E1E               	movlw	30
  5981  001780  0100               	movlb	0	; () banked
  5982  001782  6FFD               	movwf	??_full_drive& (0+255),b
  5983  001784  0E37               	movlw	55
  5984  001786                     u9637:
  5985  001786  2EE8               	decfsz	wreg,f,c
  5986  001788  D7FE               	bra	u9637
  5987  00178A  2FFD               	decfsz	??_full_drive& (0+255),f,b
  5988  00178C  D7FC               	bra	u9637
  5989                           
  5990                           ;actuators_main.c: 511:             LATA = 0b00001001;
  5991  00178E  0E09               	movlw	9
  5992  001790  6E89               	movwf	3977,c	;volatile
  5993                           
  5994                           ;actuators_main.c: 512:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5995  001792  0E1E               	movlw	30
  5996  001794  0100               	movlb	0	; () banked
  5997  001796  6FFD               	movwf	??_full_drive& (0+255),b
  5998  001798  0E37               	movlw	55
  5999  00179A                     u9647:
  6000  00179A  2EE8               	decfsz	wreg,f,c
  6001  00179C  D7FE               	bra	u9647
  6002  00179E  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6003  0017A0  D7FC               	bra	u9647
  6004                           
  6005                           ;actuators_main.c: 513:             LATA = 0b00000011;
  6006  0017A2  0E03               	movlw	3
  6007  0017A4  6E89               	movwf	3977,c	;volatile
  6008                           
  6009                           ;actuators_main.c: 514:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6010  0017A6  0E1E               	movlw	30
  6011  0017A8  0100               	movlb	0	; () banked
  6012  0017AA  6FFD               	movwf	??_full_drive& (0+255),b
  6013  0017AC  0E37               	movlw	55
  6014  0017AE                     u9657:
  6015  0017AE  2EE8               	decfsz	wreg,f,c
  6016  0017B0  D7FE               	bra	u9657
  6017  0017B2  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6018  0017B4  D7FC               	bra	u9657
  6019  0017B6                     l7173:
  6020                           
  6021                           ;actuators_main.c: 516:         if (direction == 0){
  6022  0017B6  0100               	movlb	0	; () banked
  6023  0017B8  51FE               	movf	full_drive@direction& (0+255),w,b
  6024  0017BA  A4D8               	btfss	status,2,c
  6025  0017BC  D032               	goto	l7189
  6026                           
  6027                           ; BSR set to: 0
  6028                           ;actuators_main.c: 517:             LATA = 0b00001001;
  6029  0017BE  0E09               	movlw	9
  6030  0017C0  6E89               	movwf	3977,c	;volatile
  6031                           
  6032                           ; BSR set to: 0
  6033                           ;actuators_main.c: 518:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6034  0017C2  0E1E               	movlw	30
  6035  0017C4  0100               	movlb	0	; () banked
  6036  0017C6  6FFD               	movwf	??_full_drive& (0+255),b
  6037  0017C8  0E37               	movlw	55
  6038  0017CA                     u9667:
  6039  0017CA  2EE8               	decfsz	wreg,f,c
  6040  0017CC  D7FE               	bra	u9667
  6041  0017CE  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6042  0017D0  D7FC               	bra	u9667
  6043                           
  6044                           ;actuators_main.c: 519:             LATA = 0b00001100;
  6045  0017D2  0E0C               	movlw	12
  6046  0017D4  6E89               	movwf	3977,c	;volatile
  6047                           
  6048                           ;actuators_main.c: 520:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6049  0017D6  0E1E               	movlw	30
  6050  0017D8  0100               	movlb	0	; () banked
  6051  0017DA  6FFD               	movwf	??_full_drive& (0+255),b
  6052  0017DC  0E37               	movlw	55
  6053  0017DE                     u9677:
  6054  0017DE  2EE8               	decfsz	wreg,f,c
  6055  0017E0  D7FE               	bra	u9677
  6056  0017E2  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6057  0017E4  D7FC               	bra	u9677
  6058                           
  6059                           ;actuators_main.c: 521:             LATA = 0b00000110;
  6060  0017E6  0E06               	movlw	6
  6061  0017E8  6E89               	movwf	3977,c	;volatile
  6062                           
  6063                           ;actuators_main.c: 522:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6064  0017EA  0E1E               	movlw	30
  6065  0017EC  0100               	movlb	0	; () banked
  6066  0017EE  6FFD               	movwf	??_full_drive& (0+255),b
  6067  0017F0  0E37               	movlw	55
  6068  0017F2                     u9687:
  6069  0017F2  2EE8               	decfsz	wreg,f,c
  6070  0017F4  D7FE               	bra	u9687
  6071  0017F6  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6072  0017F8  D7FC               	bra	u9687
  6073                           
  6074                           ;actuators_main.c: 523:             LATA = 0b00000011;
  6075  0017FA  0E03               	movlw	3
  6076  0017FC  6E89               	movwf	3977,c	;volatile
  6077                           
  6078                           ;actuators_main.c: 524:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6079  0017FE  0E1E               	movlw	30
  6080  001800  0100               	movlb	0	; () banked
  6081  001802  6FFD               	movwf	??_full_drive& (0+255),b
  6082  001804  0E37               	movlw	55
  6083  001806                     u9697:
  6084  001806  2EE8               	decfsz	wreg,f,c
  6085  001808  D7FE               	bra	u9697
  6086  00180A  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6087  00180C  D7FC               	bra	u9697
  6088                           
  6089                           ;actuators_main.c: 525:             LATA = 0b00001001;
  6090  00180E  0E09               	movlw	9
  6091  001810  6E89               	movwf	3977,c	;volatile
  6092                           
  6093                           ;actuators_main.c: 526:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6094  001812  0E1E               	movlw	30
  6095  001814  0100               	movlb	0	; () banked
  6096  001816  6FFD               	movwf	??_full_drive& (0+255),b
  6097  001818  0E37               	movlw	55
  6098  00181A                     u9707:
  6099  00181A  2EE8               	decfsz	wreg,f,c
  6100  00181C  D7FE               	bra	u9707
  6101  00181E  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6102  001820  D7FC               	bra	u9707
  6103  001822                     l7189:
  6104                           
  6105                           ;actuators_main.c: 529:     if (stepper_no == 2){
  6106  001822  0E02               	movlw	2
  6107  001824  0100               	movlb	0	; () banked
  6108  001826  19FB               	xorwf	full_drive@stepper_no& (0+255),w,b
  6109  001828  11FC               	iorwf	(full_drive@stepper_no+1)& (0+255),w,b
  6110  00182A  A4D8               	btfss	status,2,c
  6111  00182C  D089               	goto	l7267
  6112                           
  6113                           ; BSR set to: 0
  6114                           ;actuators_main.c: 530:         if (direction == 1){
  6115  00182E  05FE               	decf	full_drive@direction& (0+255),w,b
  6116  001830  A4D8               	btfss	status,2,c
  6117  001832  D041               	goto	l7229
  6118                           
  6119                           ; BSR set to: 0
  6120                           ;actuators_main.c: 531:             LATCbits.LATC0 = 1;
  6121  001834  808B               	bsf	3979,0,c	;volatile
  6122                           
  6123                           ;actuators_main.c: 532:             LATEbits.LATE0 = 1;
  6124  001836  808D               	bsf	3981,0,c	;volatile
  6125                           
  6126                           ;actuators_main.c: 533:             LATEbits.LATE1 = 0;
  6127  001838  928D               	bcf	3981,1,c	;volatile
  6128                           
  6129                           ;actuators_main.c: 534:             LATEbits.LATE2 = 0;
  6130  00183A  948D               	bcf	3981,2,c	;volatile
  6131                           
  6132                           ; BSR set to: 0
  6133                           ;actuators_main.c: 535:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6134  00183C  0E0D               	movlw	13
  6135  00183E  0100               	movlb	0	; () banked
  6136  001840  6FFD               	movwf	??_full_drive& (0+255),b
  6137  001842  0EFB               	movlw	251
  6138  001844                     u9717:
  6139  001844  2EE8               	decfsz	wreg,f,c
  6140  001846  D7FE               	bra	u9717
  6141  001848  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6142  00184A  D7FC               	bra	u9717
  6143  00184C  D000               	nop2	
  6144                           
  6145                           ;actuators_main.c: 536:             LATCbits.LATC0 = 0;
  6146  00184E  908B               	bcf	3979,0,c	;volatile
  6147                           
  6148                           ;actuators_main.c: 537:             LATEbits.LATE0 = 1;
  6149  001850  808D               	bsf	3981,0,c	;volatile
  6150                           
  6151                           ;actuators_main.c: 538:             LATEbits.LATE1 = 1;
  6152  001852  828D               	bsf	3981,1,c	;volatile
  6153                           
  6154                           ;actuators_main.c: 539:             LATEbits.LATE2 = 0;
  6155  001854  948D               	bcf	3981,2,c	;volatile
  6156                           
  6157                           ;actuators_main.c: 540:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6158  001856  0E0D               	movlw	13
  6159  001858  0100               	movlb	0	; () banked
  6160  00185A  6FFD               	movwf	??_full_drive& (0+255),b
  6161  00185C  0EFB               	movlw	251
  6162  00185E                     u9727:
  6163  00185E  2EE8               	decfsz	wreg,f,c
  6164  001860  D7FE               	bra	u9727
  6165  001862  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6166  001864  D7FC               	bra	u9727
  6167  001866  D000               	nop2	
  6168                           
  6169                           ;actuators_main.c: 541:             LATCbits.LATC0 = 0;
  6170  001868  908B               	bcf	3979,0,c	;volatile
  6171                           
  6172                           ;actuators_main.c: 542:             LATEbits.LATE0 = 0;
  6173  00186A  908D               	bcf	3981,0,c	;volatile
  6174                           
  6175                           ;actuators_main.c: 543:             LATEbits.LATE1 = 1;
  6176  00186C  828D               	bsf	3981,1,c	;volatile
  6177                           
  6178                           ;actuators_main.c: 544:             LATEbits.LATE2 = 1;
  6179  00186E  848D               	bsf	3981,2,c	;volatile
  6180                           
  6181                           ;actuators_main.c: 545:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6182  001870  0E0D               	movlw	13
  6183  001872  0100               	movlb	0	; () banked
  6184  001874  6FFD               	movwf	??_full_drive& (0+255),b
  6185  001876  0EFB               	movlw	251
  6186  001878                     u9737:
  6187  001878  2EE8               	decfsz	wreg,f,c
  6188  00187A  D7FE               	bra	u9737
  6189  00187C  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6190  00187E  D7FC               	bra	u9737
  6191  001880  D000               	nop2	
  6192                           
  6193                           ;actuators_main.c: 546:             LATCbits.LATC0 = 1;
  6194  001882  808B               	bsf	3979,0,c	;volatile
  6195                           
  6196                           ;actuators_main.c: 547:             LATEbits.LATE0 = 0;
  6197  001884  908D               	bcf	3981,0,c	;volatile
  6198                           
  6199                           ;actuators_main.c: 548:             LATEbits.LATE1 = 0;
  6200  001886  928D               	bcf	3981,1,c	;volatile
  6201                           
  6202                           ;actuators_main.c: 549:             LATEbits.LATE2 = 1;
  6203  001888  848D               	bsf	3981,2,c	;volatile
  6204                           
  6205                           ;actuators_main.c: 550:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6206  00188A  0E0D               	movlw	13
  6207  00188C  0100               	movlb	0	; () banked
  6208  00188E  6FFD               	movwf	??_full_drive& (0+255),b
  6209  001890  0EFB               	movlw	251
  6210  001892                     u9747:
  6211  001892  2EE8               	decfsz	wreg,f,c
  6212  001894  D7FE               	bra	u9747
  6213  001896  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6214  001898  D7FC               	bra	u9747
  6215  00189A  D000               	nop2	
  6216                           
  6217                           ;actuators_main.c: 551:             LATCbits.LATC0 = 1;
  6218  00189C  808B               	bsf	3979,0,c	;volatile
  6219                           
  6220                           ;actuators_main.c: 552:             LATEbits.LATE0 = 1;
  6221  00189E  808D               	bsf	3981,0,c	;volatile
  6222                           
  6223                           ;actuators_main.c: 553:             LATEbits.LATE1 = 0;
  6224  0018A0  928D               	bcf	3981,1,c	;volatile
  6225                           
  6226                           ;actuators_main.c: 554:             LATEbits.LATE2 = 0;
  6227  0018A2  948D               	bcf	3981,2,c	;volatile
  6228                           
  6229                           ;actuators_main.c: 555:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6230  0018A4  0E0D               	movlw	13
  6231  0018A6  0100               	movlb	0	; () banked
  6232  0018A8  6FFD               	movwf	??_full_drive& (0+255),b
  6233  0018AA  0EFB               	movlw	251
  6234  0018AC                     u9757:
  6235  0018AC  2EE8               	decfsz	wreg,f,c
  6236  0018AE  D7FE               	bra	u9757
  6237  0018B0  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6238  0018B2  D7FC               	bra	u9757
  6239  0018B4  D000               	nop2	
  6240  0018B6                     l7229:
  6241                           
  6242                           ;actuators_main.c: 557:         if (direction == 0){
  6243  0018B6  0100               	movlb	0	; () banked
  6244  0018B8  51FE               	movf	full_drive@direction& (0+255),w,b
  6245  0018BA  A4D8               	btfss	status,2,c
  6246  0018BC  D041               	goto	l7267
  6247                           
  6248                           ; BSR set to: 0
  6249                           ;actuators_main.c: 558:             LATCbits.LATC0 = 1;
  6250  0018BE  808B               	bsf	3979,0,c	;volatile
  6251                           
  6252                           ;actuators_main.c: 559:             LATEbits.LATE0 = 0;
  6253  0018C0  908D               	bcf	3981,0,c	;volatile
  6254                           
  6255                           ;actuators_main.c: 560:             LATEbits.LATE1 = 0;
  6256  0018C2  928D               	bcf	3981,1,c	;volatile
  6257                           
  6258                           ;actuators_main.c: 561:             LATEbits.LATE2 = 1;
  6259  0018C4  848D               	bsf	3981,2,c	;volatile
  6260                           
  6261                           ; BSR set to: 0
  6262                           ;actuators_main.c: 562:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6263  0018C6  0E0D               	movlw	13
  6264  0018C8  0100               	movlb	0	; () banked
  6265  0018CA  6FFD               	movwf	??_full_drive& (0+255),b
  6266  0018CC  0EFB               	movlw	251
  6267  0018CE                     u9767:
  6268  0018CE  2EE8               	decfsz	wreg,f,c
  6269  0018D0  D7FE               	bra	u9767
  6270  0018D2  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6271  0018D4  D7FC               	bra	u9767
  6272  0018D6  D000               	nop2	
  6273                           
  6274                           ;actuators_main.c: 563:             LATCbits.LATC0 = 0;
  6275  0018D8  908B               	bcf	3979,0,c	;volatile
  6276                           
  6277                           ;actuators_main.c: 564:             LATEbits.LATE0 = 0;
  6278  0018DA  908D               	bcf	3981,0,c	;volatile
  6279                           
  6280                           ;actuators_main.c: 565:             LATEbits.LATE1 = 1;
  6281  0018DC  828D               	bsf	3981,1,c	;volatile
  6282                           
  6283                           ;actuators_main.c: 566:             LATEbits.LATE2 = 1;
  6284  0018DE  848D               	bsf	3981,2,c	;volatile
  6285                           
  6286                           ;actuators_main.c: 567:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6287  0018E0  0E0D               	movlw	13
  6288  0018E2  0100               	movlb	0	; () banked
  6289  0018E4  6FFD               	movwf	??_full_drive& (0+255),b
  6290  0018E6  0EFB               	movlw	251
  6291  0018E8                     u9777:
  6292  0018E8  2EE8               	decfsz	wreg,f,c
  6293  0018EA  D7FE               	bra	u9777
  6294  0018EC  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6295  0018EE  D7FC               	bra	u9777
  6296  0018F0  D000               	nop2	
  6297                           
  6298                           ;actuators_main.c: 568:             LATCbits.LATC0 = 0;
  6299  0018F2  908B               	bcf	3979,0,c	;volatile
  6300                           
  6301                           ;actuators_main.c: 569:             LATEbits.LATE0 = 1;
  6302  0018F4  808D               	bsf	3981,0,c	;volatile
  6303                           
  6304                           ;actuators_main.c: 570:             LATEbits.LATE1 = 1;
  6305  0018F6  828D               	bsf	3981,1,c	;volatile
  6306                           
  6307                           ;actuators_main.c: 571:             LATEbits.LATE2 = 0;
  6308  0018F8  948D               	bcf	3981,2,c	;volatile
  6309                           
  6310                           ;actuators_main.c: 572:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6311  0018FA  0E0D               	movlw	13
  6312  0018FC  0100               	movlb	0	; () banked
  6313  0018FE  6FFD               	movwf	??_full_drive& (0+255),b
  6314  001900  0EFB               	movlw	251
  6315  001902                     u9787:
  6316  001902  2EE8               	decfsz	wreg,f,c
  6317  001904  D7FE               	bra	u9787
  6318  001906  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6319  001908  D7FC               	bra	u9787
  6320  00190A  D000               	nop2	
  6321                           
  6322                           ;actuators_main.c: 573:             LATCbits.LATC0 = 1;
  6323  00190C  808B               	bsf	3979,0,c	;volatile
  6324                           
  6325                           ;actuators_main.c: 574:             LATEbits.LATE0 = 1;
  6326  00190E  808D               	bsf	3981,0,c	;volatile
  6327                           
  6328                           ;actuators_main.c: 575:             LATEbits.LATE1 = 0;
  6329  001910  928D               	bcf	3981,1,c	;volatile
  6330                           
  6331                           ;actuators_main.c: 576:             LATEbits.LATE2 = 0;
  6332  001912  948D               	bcf	3981,2,c	;volatile
  6333                           
  6334                           ;actuators_main.c: 577:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6335  001914  0E0D               	movlw	13
  6336  001916  0100               	movlb	0	; () banked
  6337  001918  6FFD               	movwf	??_full_drive& (0+255),b
  6338  00191A  0EFB               	movlw	251
  6339  00191C                     u9797:
  6340  00191C  2EE8               	decfsz	wreg,f,c
  6341  00191E  D7FE               	bra	u9797
  6342  001920  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6343  001922  D7FC               	bra	u9797
  6344  001924  D000               	nop2	
  6345                           
  6346                           ;actuators_main.c: 578:             LATCbits.LATC0 = 1;
  6347  001926  808B               	bsf	3979,0,c	;volatile
  6348                           
  6349                           ;actuators_main.c: 579:             LATEbits.LATE0 = 0;
  6350  001928  908D               	bcf	3981,0,c	;volatile
  6351                           
  6352                           ;actuators_main.c: 580:             LATEbits.LATE1 = 0;
  6353  00192A  928D               	bcf	3981,1,c	;volatile
  6354                           
  6355                           ;actuators_main.c: 581:             LATEbits.LATE2 = 1;
  6356  00192C  848D               	bsf	3981,2,c	;volatile
  6357                           
  6358                           ;actuators_main.c: 582:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6359  00192E  0E0D               	movlw	13
  6360  001930  0100               	movlb	0	; () banked
  6361  001932  6FFD               	movwf	??_full_drive& (0+255),b
  6362  001934  0EFB               	movlw	251
  6363  001936                     u9807:
  6364  001936  2EE8               	decfsz	wreg,f,c
  6365  001938  D7FE               	bra	u9807
  6366  00193A  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6367  00193C  D7FC               	bra	u9807
  6368  00193E  D000               	nop2	
  6369  001940                     l7267:
  6370                           
  6371                           ;actuators_main.c: 585:     if (stepper_no == 3){
  6372  001940  0E03               	movlw	3
  6373  001942  0100               	movlb	0	; () banked
  6374  001944  19FB               	xorwf	full_drive@stepper_no& (0+255),w,b
  6375  001946  11FC               	iorwf	(full_drive@stepper_no+1)& (0+255),w,b
  6376  001948  A4D8               	btfss	status,2,c
  6377  00194A  D086               	goto	l7347
  6378                           
  6379                           ; BSR set to: 0
  6380                           ;actuators_main.c: 586:         printf("what");
  6381  00194C  0EFA               	movlw	low STR_9
  6382  00194E  6FED               	movwf	printf@fmt& (0+255),b
  6383  001950  0EFF               	movlw	high STR_9
  6384  001952  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6385  001954  ECFB  F01E         	call	_printf	;wreg free
  6386                           
  6387                           ;actuators_main.c: 587:         if (direction == 0){
  6388  001958  0100               	movlb	0	; () banked
  6389  00195A  51FE               	movf	full_drive@direction& (0+255),w,b
  6390  00195C  A4D8               	btfss	status,2,c
  6391  00195E  D03C               	goto	l7309
  6392                           
  6393                           ; BSR set to: 0
  6394                           ;actuators_main.c: 588:             LATCbits.LATC5 = 1;
  6395  001960  8A8B               	bsf	3979,5,c	;volatile
  6396                           
  6397                           ;actuators_main.c: 589:             LATCbits.LATC6 = 0;
  6398  001962  9C8B               	bcf	3979,6,c	;volatile
  6399                           
  6400                           ;actuators_main.c: 590:             LATCbits.LATC7 = 0;
  6401  001964  9E8B               	bcf	3979,7,c	;volatile
  6402                           
  6403                           ;actuators_main.c: 591:             LATAbits.LATA5 = 1;
  6404  001966  8A89               	bsf	3977,5,c	;volatile
  6405                           
  6406                           ; BSR set to: 0
  6407                           ;actuators_main.c: 592:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6408  001968  0E1E               	movlw	30
  6409  00196A  0100               	movlb	0	; () banked
  6410  00196C  6FFD               	movwf	??_full_drive& (0+255),b
  6411  00196E  0E37               	movlw	55
  6412  001970                     u9817:
  6413  001970  2EE8               	decfsz	wreg,f,c
  6414  001972  D7FE               	bra	u9817
  6415  001974  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6416  001976  D7FC               	bra	u9817
  6417                           
  6418                           ;actuators_main.c: 593:             LATCbits.LATC5 = 1;
  6419  001978  8A8B               	bsf	3979,5,c	;volatile
  6420                           
  6421                           ;actuators_main.c: 594:             LATCbits.LATC6 = 1;
  6422  00197A  8C8B               	bsf	3979,6,c	;volatile
  6423                           
  6424                           ;actuators_main.c: 595:             LATCbits.LATC7 = 0;
  6425  00197C  9E8B               	bcf	3979,7,c	;volatile
  6426                           
  6427                           ;actuators_main.c: 596:             LATAbits.LATA5 = 0;
  6428  00197E  9A89               	bcf	3977,5,c	;volatile
  6429                           
  6430                           ;actuators_main.c: 597:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6431  001980  0E1E               	movlw	30
  6432  001982  0100               	movlb	0	; () banked
  6433  001984  6FFD               	movwf	??_full_drive& (0+255),b
  6434  001986  0E37               	movlw	55
  6435  001988                     u9827:
  6436  001988  2EE8               	decfsz	wreg,f,c
  6437  00198A  D7FE               	bra	u9827
  6438  00198C  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6439  00198E  D7FC               	bra	u9827
  6440                           
  6441                           ;actuators_main.c: 598:             LATCbits.LATC5 = 0;
  6442  001990  9A8B               	bcf	3979,5,c	;volatile
  6443                           
  6444                           ;actuators_main.c: 599:             LATCbits.LATC6 = 1;
  6445  001992  8C8B               	bsf	3979,6,c	;volatile
  6446                           
  6447                           ;actuators_main.c: 600:             LATCbits.LATC7 = 1;
  6448  001994  8E8B               	bsf	3979,7,c	;volatile
  6449                           
  6450                           ;actuators_main.c: 601:             LATAbits.LATA5 = 0;
  6451  001996  9A89               	bcf	3977,5,c	;volatile
  6452                           
  6453                           ;actuators_main.c: 602:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6454  001998  0E1E               	movlw	30
  6455  00199A  0100               	movlb	0	; () banked
  6456  00199C  6FFD               	movwf	??_full_drive& (0+255),b
  6457  00199E  0E37               	movlw	55
  6458  0019A0                     u9837:
  6459  0019A0  2EE8               	decfsz	wreg,f,c
  6460  0019A2  D7FE               	bra	u9837
  6461  0019A4  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6462  0019A6  D7FC               	bra	u9837
  6463                           
  6464                           ;actuators_main.c: 603:             LATCbits.LATC5 = 0;
  6465  0019A8  9A8B               	bcf	3979,5,c	;volatile
  6466                           
  6467                           ;actuators_main.c: 604:             LATCbits.LATC6 = 0;
  6468  0019AA  9C8B               	bcf	3979,6,c	;volatile
  6469                           
  6470                           ;actuators_main.c: 605:             LATCbits.LATC7 = 1;
  6471  0019AC  8E8B               	bsf	3979,7,c	;volatile
  6472                           
  6473                           ;actuators_main.c: 606:             LATAbits.LATA5 = 1;
  6474  0019AE  8A89               	bsf	3977,5,c	;volatile
  6475                           
  6476                           ;actuators_main.c: 607:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6477  0019B0  0E1E               	movlw	30
  6478  0019B2  0100               	movlb	0	; () banked
  6479  0019B4  6FFD               	movwf	??_full_drive& (0+255),b
  6480  0019B6  0E37               	movlw	55
  6481  0019B8                     u9847:
  6482  0019B8  2EE8               	decfsz	wreg,f,c
  6483  0019BA  D7FE               	bra	u9847
  6484  0019BC  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6485  0019BE  D7FC               	bra	u9847
  6486                           
  6487                           ;actuators_main.c: 608:             LATCbits.LATC5 = 1;
  6488  0019C0  8A8B               	bsf	3979,5,c	;volatile
  6489                           
  6490                           ;actuators_main.c: 609:             LATCbits.LATC6 = 0;
  6491  0019C2  9C8B               	bcf	3979,6,c	;volatile
  6492                           
  6493                           ;actuators_main.c: 610:             LATCbits.LATC7 = 0;
  6494  0019C4  9E8B               	bcf	3979,7,c	;volatile
  6495                           
  6496                           ;actuators_main.c: 611:             LATAbits.LATA5 = 1;
  6497  0019C6  8A89               	bsf	3977,5,c	;volatile
  6498                           
  6499                           ;actuators_main.c: 612:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6500  0019C8  0E1E               	movlw	30
  6501  0019CA  0100               	movlb	0	; () banked
  6502  0019CC  6FFD               	movwf	??_full_drive& (0+255),b
  6503  0019CE  0E37               	movlw	55
  6504  0019D0                     u9857:
  6505  0019D0  2EE8               	decfsz	wreg,f,c
  6506  0019D2  D7FE               	bra	u9857
  6507  0019D4  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6508  0019D6  D7FC               	bra	u9857
  6509  0019D8                     l7309:
  6510                           
  6511                           ;actuators_main.c: 614:         if (direction == 1){
  6512  0019D8  0100               	movlb	0	; () banked
  6513  0019DA  05FE               	decf	full_drive@direction& (0+255),w,b
  6514  0019DC  A4D8               	btfss	status,2,c
  6515  0019DE  D03C               	goto	l7347
  6516                           
  6517                           ; BSR set to: 0
  6518                           ;actuators_main.c: 615:             LATCbits.LATC5 = 1;
  6519  0019E0  8A8B               	bsf	3979,5,c	;volatile
  6520                           
  6521                           ;actuators_main.c: 616:             LATCbits.LATC6 = 1;
  6522  0019E2  8C8B               	bsf	3979,6,c	;volatile
  6523                           
  6524                           ;actuators_main.c: 617:             LATCbits.LATC7 = 0;
  6525  0019E4  9E8B               	bcf	3979,7,c	;volatile
  6526                           
  6527                           ;actuators_main.c: 618:             LATAbits.LATA5 = 0;
  6528  0019E6  9A89               	bcf	3977,5,c	;volatile
  6529                           
  6530                           ; BSR set to: 0
  6531                           ;actuators_main.c: 619:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6532  0019E8  0E1E               	movlw	30
  6533  0019EA  0100               	movlb	0	; () banked
  6534  0019EC  6FFD               	movwf	??_full_drive& (0+255),b
  6535  0019EE  0E37               	movlw	55
  6536  0019F0                     u9867:
  6537  0019F0  2EE8               	decfsz	wreg,f,c
  6538  0019F2  D7FE               	bra	u9867
  6539  0019F4  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6540  0019F6  D7FC               	bra	u9867
  6541                           
  6542                           ;actuators_main.c: 620:             LATCbits.LATC5 = 0;
  6543  0019F8  9A8B               	bcf	3979,5,c	;volatile
  6544                           
  6545                           ;actuators_main.c: 621:             LATCbits.LATC6 = 1;
  6546  0019FA  8C8B               	bsf	3979,6,c	;volatile
  6547                           
  6548                           ;actuators_main.c: 622:             LATCbits.LATC7 = 1;
  6549  0019FC  8E8B               	bsf	3979,7,c	;volatile
  6550                           
  6551                           ;actuators_main.c: 623:             LATAbits.LATA5 = 0;
  6552  0019FE  9A89               	bcf	3977,5,c	;volatile
  6553                           
  6554                           ;actuators_main.c: 624:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6555  001A00  0E1E               	movlw	30
  6556  001A02  0100               	movlb	0	; () banked
  6557  001A04  6FFD               	movwf	??_full_drive& (0+255),b
  6558  001A06  0E37               	movlw	55
  6559  001A08                     u9877:
  6560  001A08  2EE8               	decfsz	wreg,f,c
  6561  001A0A  D7FE               	bra	u9877
  6562  001A0C  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6563  001A0E  D7FC               	bra	u9877
  6564                           
  6565                           ;actuators_main.c: 625:             LATCbits.LATC5 = 0;
  6566  001A10  9A8B               	bcf	3979,5,c	;volatile
  6567                           
  6568                           ;actuators_main.c: 626:             LATCbits.LATC6 = 0;
  6569  001A12  9C8B               	bcf	3979,6,c	;volatile
  6570                           
  6571                           ;actuators_main.c: 627:             LATCbits.LATC7 = 1;
  6572  001A14  8E8B               	bsf	3979,7,c	;volatile
  6573                           
  6574                           ;actuators_main.c: 628:             LATAbits.LATA5 = 1;
  6575  001A16  8A89               	bsf	3977,5,c	;volatile
  6576                           
  6577                           ;actuators_main.c: 629:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6578  001A18  0E1E               	movlw	30
  6579  001A1A  0100               	movlb	0	; () banked
  6580  001A1C  6FFD               	movwf	??_full_drive& (0+255),b
  6581  001A1E  0E37               	movlw	55
  6582  001A20                     u9887:
  6583  001A20  2EE8               	decfsz	wreg,f,c
  6584  001A22  D7FE               	bra	u9887
  6585  001A24  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6586  001A26  D7FC               	bra	u9887
  6587                           
  6588                           ;actuators_main.c: 630:             LATCbits.LATC5 = 1;
  6589  001A28  8A8B               	bsf	3979,5,c	;volatile
  6590                           
  6591                           ;actuators_main.c: 631:             LATCbits.LATC6 = 0;
  6592  001A2A  9C8B               	bcf	3979,6,c	;volatile
  6593                           
  6594                           ;actuators_main.c: 632:             LATCbits.LATC7 = 0;
  6595  001A2C  9E8B               	bcf	3979,7,c	;volatile
  6596                           
  6597                           ;actuators_main.c: 633:             LATAbits.LATA5 = 1;
  6598  001A2E  8A89               	bsf	3977,5,c	;volatile
  6599                           
  6600                           ;actuators_main.c: 634:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6601  001A30  0E1E               	movlw	30
  6602  001A32  0100               	movlb	0	; () banked
  6603  001A34  6FFD               	movwf	??_full_drive& (0+255),b
  6604  001A36  0E37               	movlw	55
  6605  001A38                     u9897:
  6606  001A38  2EE8               	decfsz	wreg,f,c
  6607  001A3A  D7FE               	bra	u9897
  6608  001A3C  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6609  001A3E  D7FC               	bra	u9897
  6610                           
  6611                           ;actuators_main.c: 635:             LATCbits.LATC5 = 1;
  6612  001A40  8A8B               	bsf	3979,5,c	;volatile
  6613                           
  6614                           ;actuators_main.c: 636:             LATCbits.LATC6 = 1;
  6615  001A42  8C8B               	bsf	3979,6,c	;volatile
  6616                           
  6617                           ;actuators_main.c: 637:             LATCbits.LATC7 = 0;
  6618  001A44  9E8B               	bcf	3979,7,c	;volatile
  6619                           
  6620                           ;actuators_main.c: 638:             LATAbits.LATA5 = 0;
  6621  001A46  9A89               	bcf	3977,5,c	;volatile
  6622                           
  6623                           ;actuators_main.c: 639:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6624  001A48  0E1E               	movlw	30
  6625  001A4A  0100               	movlb	0	; () banked
  6626  001A4C  6FFD               	movwf	??_full_drive& (0+255),b
  6627  001A4E  0E37               	movlw	55
  6628  001A50                     u9907:
  6629  001A50  2EE8               	decfsz	wreg,f,c
  6630  001A52  D7FE               	bra	u9907
  6631  001A54  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6632  001A56  D7FC               	bra	u9907
  6633  001A58                     l7347:
  6634                           
  6635                           ;actuators_main.c: 642:                     LATA = 0b00000000;
  6636  001A58  0E00               	movlw	0
  6637  001A5A  6E89               	movwf	3977,c	;volatile
  6638                           
  6639                           ;actuators_main.c: 643:         LATCbits.LATC0 = 0;
  6640  001A5C  908B               	bcf	3979,0,c	;volatile
  6641                           
  6642                           ;actuators_main.c: 644:         LATEbits.LATE0 = 0;
  6643  001A5E  908D               	bcf	3981,0,c	;volatile
  6644                           
  6645                           ;actuators_main.c: 645:         LATEbits.LATE1 = 0;
  6646  001A60  928D               	bcf	3981,1,c	;volatile
  6647                           
  6648                           ;actuators_main.c: 646:         LATEbits.LATE2 = 0;
  6649  001A62  948D               	bcf	3981,2,c	;volatile
  6650                           
  6651                           ;actuators_main.c: 647:         LATCbits.LATC5 = 0;
  6652  001A64  9A8B               	bcf	3979,5,c	;volatile
  6653                           
  6654                           ;actuators_main.c: 648:         LATCbits.LATC6 = 0;
  6655  001A66  9C8B               	bcf	3979,6,c	;volatile
  6656                           
  6657                           ;actuators_main.c: 649:         LATCbits.LATC7 = 0;
  6658  001A68  9E8B               	bcf	3979,7,c	;volatile
  6659                           
  6660                           ;actuators_main.c: 650:         LATAbits.LATA5 = 0;
  6661  001A6A  9A89               	bcf	3977,5,c	;volatile
  6662  001A6C  0012               	return		;funcret
  6663  001A6E                     __end_of_full_drive:
  6664                           	opt callstack 0
  6665                           
  6666 ;; *************** function _servo *****************
  6667 ;; Defined at:
  6668 ;;		line 188 in file "actuators_main.c"
  6669 ;; Parameters:    Size  Location     Type
  6670 ;;		None
  6671 ;; Auto vars:     Size  Location     Type
  6672 ;;		None
  6673 ;; Return value:  Size  Location     Type
  6674 ;;                  1    wreg      void 
  6675 ;; Registers used:
  6676 ;;		wreg, status,2, status,0, cstack
  6677 ;; Tracked objects:
  6678 ;;		On entry : 0/0
  6679 ;;		On exit  : 0/0
  6680 ;;		Unchanged: 0/0
  6681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6684 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6685 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6686 ;;Total ram usage:        2 bytes
  6687 ;; Hardware stack levels used:    1
  6688 ;; Hardware stack levels required when called:    4
  6689 ;; This function calls:
  6690 ;;		_servoRotate0
  6691 ;;		_servoRotate180
  6692 ;; This function is called by:
  6693 ;;		_actuators_main
  6694 ;; This function uses a non-reentrant model
  6695 ;;
  6696                           
  6697                           	psect	text16
  6698  0033A6                     __ptext16:
  6699                           	opt callstack 0
  6700  0033A6                     _servo:
  6701                           	opt callstack 25
  6702                           
  6703                           ;actuators_main.c: 190:   TRISB = 0;
  6704                           
  6705                           ;incstack = 0
  6706  0033A6  0E00               	movlw	0
  6707  0033A8  6E93               	movwf	3987,c	;volatile
  6708                           
  6709                           ;actuators_main.c: 191:     TRISC = 0;
  6710  0033AA  0E00               	movlw	0
  6711  0033AC  6E94               	movwf	3988,c	;volatile
  6712                           
  6713                           ;actuators_main.c: 192:     TRISD = 0;
  6714  0033AE  0E00               	movlw	0
  6715  0033B0  6E95               	movwf	3989,c	;volatile
  6716                           
  6717                           ;actuators_main.c: 194:       TRISBbits.RB0 = 0;
  6718  0033B2  9093               	bcf	3987,0,c	;volatile
  6719                           
  6720                           ;actuators_main.c: 195:     LATBbits.LATB0 = 1;
  6721  0033B4  808A               	bsf	3978,0,c	;volatile
  6722                           
  6723                           ;actuators_main.c: 196:     {;actuators_main.c: 198:     servoRotate0(1);
  6724  0033B6  0E00               	movlw	0
  6725  0033B8  0100               	movlb	0	; () banked
  6726  0033BA  6F81               	movwf	(servoRotate0@servo+1)& (0+255),b
  6727  0033BC  0E01               	movlw	1
  6728  0033BE  6F80               	movwf	servoRotate0@servo& (0+255),b
  6729  0033C0  EC5D  F019         	call	_servoRotate0	;wreg free
  6730                           
  6731                           ;actuators_main.c: 202:     servoRotate180(1);
  6732  0033C4  0E00               	movlw	0
  6733  0033C6  0100               	movlb	0	; () banked
  6734  0033C8  6F81               	movwf	(servoRotate180@servo+1)& (0+255),b
  6735  0033CA  0E01               	movlw	1
  6736  0033CC  6F80               	movwf	servoRotate180@servo& (0+255),b
  6737  0033CE  ECE5  F018         	call	_servoRotate180	;wreg free
  6738                           
  6739                           ;actuators_main.c: 203:     _delay((unsigned long)((400)*(10000000/4000.0)));
  6740  0033D2  0E06               	movlw	6
  6741  0033D4  0100               	movlb	0	; () banked
  6742  0033D6  6F86               	movwf	(??_servo+1)& (0+255),b
  6743  0033D8  0E13               	movlw	19
  6744  0033DA  6F85               	movwf	??_servo& (0+255),b
  6745  0033DC  0EAD               	movlw	173
  6746  0033DE                     u9917:
  6747  0033DE  2EE8               	decfsz	wreg,f,c
  6748  0033E0  D7FE               	bra	u9917
  6749  0033E2  2F85               	decfsz	??_servo& (0+255),f,b
  6750  0033E4  D7FC               	bra	u9917
  6751  0033E6  2F86               	decfsz	(??_servo+1)& (0+255),f,b
  6752  0033E8  D7FA               	bra	u9917
  6753  0033EA  D000               	nop2	
  6754                           
  6755                           ;actuators_main.c: 204:     servoRotate0(1);
  6756  0033EC  0E00               	movlw	0
  6757  0033EE  0100               	movlb	0	; () banked
  6758  0033F0  6F81               	movwf	(servoRotate0@servo+1)& (0+255),b
  6759  0033F2  0E01               	movlw	1
  6760  0033F4  6F80               	movwf	servoRotate0@servo& (0+255),b
  6761  0033F6  EC5D  F019         	call	_servoRotate0	;wreg free
  6762                           
  6763                           ;actuators_main.c: 206:     servoRotate180(2);
  6764  0033FA  0E00               	movlw	0
  6765  0033FC  0100               	movlb	0	; () banked
  6766  0033FE  6F81               	movwf	(servoRotate180@servo+1)& (0+255),b
  6767  003400  0E02               	movlw	2
  6768  003402  6F80               	movwf	servoRotate180@servo& (0+255),b
  6769  003404  ECE5  F018         	call	_servoRotate180	;wreg free
  6770                           
  6771                           ;actuators_main.c: 207:     servoRotate0(2);
  6772  003408  0E00               	movlw	0
  6773  00340A  0100               	movlb	0	; () banked
  6774  00340C  6F81               	movwf	(servoRotate0@servo+1)& (0+255),b
  6775  00340E  0E02               	movlw	2
  6776  003410  6F80               	movwf	servoRotate0@servo& (0+255),b
  6777  003412  EC5D  F019         	call	_servoRotate0	;wreg free
  6778                           
  6779                           ;actuators_main.c: 208:     servoRotate180(2);
  6780  003416  0E00               	movlw	0
  6781  003418  0100               	movlb	0	; () banked
  6782  00341A  6F81               	movwf	(servoRotate180@servo+1)& (0+255),b
  6783  00341C  0E02               	movlw	2
  6784  00341E  6F80               	movwf	servoRotate180@servo& (0+255),b
  6785  003420  ECE5  F018         	call	_servoRotate180	;wreg free
  6786                           
  6787                           ;actuators_main.c: 210:     _delay((unsigned long)((50)*(10000000/4000.0)));
  6788  003424  0EA3               	movlw	163
  6789  003426  0100               	movlb	0	; () banked
  6790  003428  6F85               	movwf	??_servo& (0+255),b
  6791  00342A  0E55               	movlw	85
  6792  00342C                     u9927:
  6793  00342C  2EE8               	decfsz	wreg,f,c
  6794  00342E  D7FE               	bra	u9927
  6795  003430  2F85               	decfsz	??_servo& (0+255),f,b
  6796  003432  D7FC               	bra	u9927
  6797                           
  6798                           ;actuators_main.c: 211:         servoRotate0(3);
  6799  003434  0E00               	movlw	0
  6800  003436  0100               	movlb	0	; () banked
  6801  003438  6F81               	movwf	(servoRotate0@servo+1)& (0+255),b
  6802  00343A  0E03               	movlw	3
  6803  00343C  6F80               	movwf	servoRotate0@servo& (0+255),b
  6804  00343E  EC5D  F019         	call	_servoRotate0	;wreg free
  6805                           
  6806                           ;actuators_main.c: 212:     servoRotate0(3);
  6807  003442  0E00               	movlw	0
  6808  003444  0100               	movlb	0	; () banked
  6809  003446  6F81               	movwf	(servoRotate0@servo+1)& (0+255),b
  6810  003448  0E03               	movlw	3
  6811  00344A  6F80               	movwf	servoRotate0@servo& (0+255),b
  6812  00344C  EC5D  F019         	call	_servoRotate0	;wreg free
  6813                           
  6814                           ;actuators_main.c: 213:     servoRotate180(3);
  6815  003450  0E00               	movlw	0
  6816  003452  0100               	movlb	0	; () banked
  6817  003454  6F81               	movwf	(servoRotate180@servo+1)& (0+255),b
  6818  003456  0E03               	movlw	3
  6819  003458  6F80               	movwf	servoRotate180@servo& (0+255),b
  6820  00345A  ECE5  F018         	call	_servoRotate180	;wreg free
  6821  00345E  0012               	return		;funcret
  6822  003460                     __end_of_servo:
  6823                           	opt callstack 0
  6824                           
  6825 ;; *************** function _servoRotate180 *****************
  6826 ;; Defined at:
  6827 ;;		line 142 in file "actuators_main.c"
  6828 ;; Parameters:    Size  Location     Type
  6829 ;;  servo           2    0[BANK0 ] int 
  6830 ;; Auto vars:     Size  Location     Type
  6831 ;;  i               2    3[BANK0 ] unsigned int 
  6832 ;; Return value:  Size  Location     Type
  6833 ;;                  1    wreg      void 
  6834 ;; Registers used:
  6835 ;;		wreg, status,2, status,0
  6836 ;; Tracked objects:
  6837 ;;		On entry : 0/0
  6838 ;;		On exit  : 0/0
  6839 ;;		Unchanged: 0/0
  6840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6841 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6842 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6843 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6844 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6845 ;;Total ram usage:        5 bytes
  6846 ;; Hardware stack levels used:    1
  6847 ;; Hardware stack levels required when called:    3
  6848 ;; This function calls:
  6849 ;;		Nothing
  6850 ;; This function is called by:
  6851 ;;		_servo
  6852 ;; This function uses a non-reentrant model
  6853 ;;
  6854                           
  6855                           	psect	text17
  6856  0031CA                     __ptext17:
  6857                           	opt callstack 0
  6858  0031CA                     _servoRotate180:
  6859                           	opt callstack 25
  6860                           
  6861                           ;actuators_main.c: 142: void servoRotate180(int servo);actuators_main.c: 143: {;actuator
      +                          s_main.c: 144:   unsigned int i;;actuators_main.c: 145:     if (servo==1){
  6862                           
  6863                           ;incstack = 0
  6864  0031CA  0100               	movlb	0	; () banked
  6865  0031CC  0580               	decf	servoRotate180@servo& (0+255),w,b
  6866  0031CE  1181               	iorwf	(servoRotate180@servo+1)& (0+255),w,b
  6867  0031D0  A4D8               	btfss	status,2,c
  6868  0031D2  D027               	goto	u7760
  6869                           
  6870                           ; BSR set to: 0
  6871                           ;actuators_main.c: 146:     for(i=0;i<30;i++)
  6872  0031D4  0E00               	movlw	0
  6873  0031D6  6F84               	movwf	(servoRotate180@i+1)& (0+255),b
  6874  0031D8  0E00               	movlw	0
  6875  0031DA  6F83               	movwf	servoRotate180@i& (0+255),b
  6876  0031DC                     l134:
  6877                           
  6878                           ; BSR set to: 0
  6879                           ;actuators_main.c: 147:         {;actuators_main.c: 148:           RC1 = 1;
  6880  0031DC  8282               	bsf	3970,1,c	;volatile
  6881                           
  6882                           ;actuators_main.c: 149:             RC2 = 1;
  6883  0031DE  8482               	bsf	3970,2,c	;volatile
  6884                           
  6885                           ; BSR set to: 0
  6886                           ;actuators_main.c: 150:           _delay((unsigned long)((450)*(10000000/4000000.0)));
  6887  0031E0  0EE1               	movlw	225
  6888  0031E2                     u9937:
  6889  0031E2  D000               	nop2	
  6890  0031E4  2EE8               	decfsz	wreg,f,c
  6891  0031E6  D7FD               	bra	u9937
  6892                           
  6893                           ;actuators_main.c: 152:           RC2 =0;
  6894  0031E8  9482               	bcf	3970,2,c	;volatile
  6895                           
  6896                           ;actuators_main.c: 153:           _delay((unsigned long)((2100)*(10000000/4000000.0)));
  6897  0031EA  0E07               	movlw	7
  6898  0031EC  0100               	movlb	0	; () banked
  6899  0031EE  6F82               	movwf	??_servoRotate180& (0+255),b
  6900  0031F0  0ED0               	movlw	208
  6901  0031F2                     u9947:
  6902  0031F2  2EE8               	decfsz	wreg,f,c
  6903  0031F4  D7FE               	bra	u9947
  6904  0031F6  2F82               	decfsz	??_servoRotate180& (0+255),f,b
  6905  0031F8  D7FC               	bra	u9947
  6906  0031FA  F000               	nop	
  6907                           
  6908                           ;actuators_main.c: 155:           RC1 = 0;
  6909  0031FC  9282               	bcf	3970,1,c	;volatile
  6910                           
  6911                           ;actuators_main.c: 156:           _delay((unsigned long)((13550)*(10000000/4000000.0)));
  6912  0031FE  0E2C               	movlw	44
  6913  003200  0100               	movlb	0	; () banked
  6914  003202  6F82               	movwf	??_servoRotate180& (0+255),b
  6915  003204  0EFD               	movlw	253
  6916  003206                     u9957:
  6917  003206  2EE8               	decfsz	wreg,f,c
  6918  003208  D7FE               	bra	u9957
  6919  00320A  2F82               	decfsz	??_servoRotate180& (0+255),f,b
  6920  00320C  D7FC               	bra	u9957
  6921  00320E  F000               	nop	
  6922                           
  6923                           ;actuators_main.c: 157:         }
  6924  003210  0100               	movlb	0	; () banked
  6925  003212  4B83               	infsnz	servoRotate180@i& (0+255),f,b
  6926  003214  2B84               	incf	(servoRotate180@i+1)& (0+255),f,b
  6927  003216  5184               	movf	(servoRotate180@i+1)& (0+255),w,b
  6928  003218  E104               	bnz	u7760
  6929  00321A  0E1E               	movlw	30
  6930  00321C  5D83               	subwf	servoRotate180@i& (0+255),w,b
  6931  00321E  A0D8               	btfss	status,0,c
  6932  003220  D7DD               	goto	l134
  6933  003222                     u7760:
  6934                           
  6935                           ; BSR set to: 0
  6936                           ;actuators_main.c: 159:   if (servo==2){
  6937  003222  0E02               	movlw	2
  6938  003224  1980               	xorwf	servoRotate180@servo& (0+255),w,b
  6939  003226  1181               	iorwf	(servoRotate180@servo+1)& (0+255),w,b
  6940  003228  A4D8               	btfss	status,2,c
  6941  00322A  D01F               	goto	u7780
  6942                           
  6943                           ; BSR set to: 0
  6944                           ;actuators_main.c: 160:     for(i=0;i<30;i++)
  6945  00322C  0E00               	movlw	0
  6946  00322E  6F84               	movwf	(servoRotate180@i+1)& (0+255),b
  6947  003230  0E00               	movlw	0
  6948  003232  6F83               	movwf	servoRotate180@i& (0+255),b
  6949  003234                     l137:
  6950                           
  6951                           ; BSR set to: 0
  6952                           ;actuators_main.c: 161:           {;actuators_main.c: 163:     RD1 = 1;
  6953  003234  8283               	bsf	3971,1,c	;volatile
  6954                           
  6955                           ; BSR set to: 0
  6956                           ;actuators_main.c: 166:     _delay((unsigned long)((525)*(10000000/4000000.0)));
  6957  003236  0EBB               	movlw	187
  6958  003238                     u9967:
  6959  003238  D000               	nop2	
  6960  00323A  D000               	nop2	
  6961  00323C  2EE8               	decfsz	wreg,f,c
  6962  00323E  D7FC               	bra	u9967
  6963  003240  D000               	nop2	
  6964  003242  F000               	nop	
  6965                           
  6966                           ;actuators_main.c: 168:     RD1 = 0;
  6967  003244  9283               	bcf	3971,1,c	;volatile
  6968                           
  6969                           ;actuators_main.c: 171:     _delay((unsigned long)((27075)*(10000000/4000000.0)));
  6970  003246  0E58               	movlw	88
  6971  003248  0100               	movlb	0	; () banked
  6972  00324A  6F82               	movwf	??_servoRotate180& (0+255),b
  6973  00324C  0EE6               	movlw	230
  6974  00324E                     u9977:
  6975  00324E  2EE8               	decfsz	wreg,f,c
  6976  003250  D7FE               	bra	u9977
  6977  003252  2F82               	decfsz	??_servoRotate180& (0+255),f,b
  6978  003254  D7FC               	bra	u9977
  6979  003256  D000               	nop2	
  6980                           
  6981                           ;actuators_main.c: 172:           }
  6982  003258  0100               	movlb	0	; () banked
  6983  00325A  4B83               	infsnz	servoRotate180@i& (0+255),f,b
  6984  00325C  2B84               	incf	(servoRotate180@i+1)& (0+255),f,b
  6985  00325E  5184               	movf	(servoRotate180@i+1)& (0+255),w,b
  6986  003260  E104               	bnz	u7780
  6987  003262  0E1E               	movlw	30
  6988  003264  5D83               	subwf	servoRotate180@i& (0+255),w,b
  6989  003266  A0D8               	btfss	status,0,c
  6990  003268  D7E5               	goto	l137
  6991  00326A                     u7780:
  6992                           
  6993                           ; BSR set to: 0
  6994                           ;actuators_main.c: 174:     if (servo==3){
  6995  00326A  0E03               	movlw	3
  6996  00326C  1980               	xorwf	servoRotate180@servo& (0+255),w,b
  6997  00326E  1181               	iorwf	(servoRotate180@servo+1)& (0+255),w,b
  6998  003270  A4D8               	btfss	status,2,c
  6999  003272  0012               	return	
  7000                           
  7001                           ; BSR set to: 0
  7002                           ;actuators_main.c: 175:       for(i=0;i<30;i++)
  7003  003274  0E00               	movlw	0
  7004  003276  6F84               	movwf	(servoRotate180@i+1)& (0+255),b
  7005  003278  0E00               	movlw	0
  7006  00327A  6F83               	movwf	servoRotate180@i& (0+255),b
  7007  00327C                     l140:
  7008                           
  7009                           ; BSR set to: 0
  7010                           ;actuators_main.c: 176:         {;actuators_main.c: 177:         RD0 = 1;
  7011  00327C  8083               	bsf	3971,0,c	;volatile
  7012                           
  7013                           ; BSR set to: 0
  7014                           ;actuators_main.c: 179:         _delay((unsigned long)((2500)*(10000000/4000000.0)));
  7015  00327E  0E09               	movlw	9
  7016  003280  0100               	movlb	0	; () banked
  7017  003282  6F82               	movwf	??_servoRotate180& (0+255),b
  7018  003284  0E1C               	movlw	28
  7019  003286                     u9987:
  7020  003286  2EE8               	decfsz	wreg,f,c
  7021  003288  D7FE               	bra	u9987
  7022  00328A  2F82               	decfsz	??_servoRotate180& (0+255),f,b
  7023  00328C  D7FC               	bra	u9987
  7024  00328E  F000               	nop	
  7025                           
  7026                           ;actuators_main.c: 182:             RD0 = 0;
  7027  003290  9083               	bcf	3971,0,c	;volatile
  7028                           
  7029                           ;actuators_main.c: 184:         _delay((unsigned long)((10500)*(10000000/4000000.0)));
  7030  003292  0E23               	movlw	35
  7031  003294  0100               	movlb	0	; () banked
  7032  003296  6F82               	movwf	??_servoRotate180& (0+255),b
  7033  003298  0E15               	movlw	21
  7034  00329A                     u9997:
  7035  00329A  2EE8               	decfsz	wreg,f,c
  7036  00329C  D7FE               	bra	u9997
  7037  00329E  2F82               	decfsz	??_servoRotate180& (0+255),f,b
  7038  0032A0  D7FC               	bra	u9997
  7039  0032A2  D000               	nop2	
  7040                           
  7041                           ;actuators_main.c: 185:         }
  7042  0032A4  0100               	movlb	0	; () banked
  7043  0032A6  4B83               	infsnz	servoRotate180@i& (0+255),f,b
  7044  0032A8  2B84               	incf	(servoRotate180@i+1)& (0+255),f,b
  7045  0032AA  5184               	movf	(servoRotate180@i+1)& (0+255),w,b
  7046  0032AC  E105               	bnz	u7800
  7047  0032AE  0E1E               	movlw	30
  7048  0032B0  5D83               	subwf	servoRotate180@i& (0+255),w,b
  7049  0032B2  B0D8               	btfsc	status,0,c
  7050  0032B4  0012               	return	
  7051  0032B6  D7E2               	goto	l140
  7052  0032B8                     u7800:
  7053                           
  7054                           ; BSR set to: 0
  7055  0032B8  0012               	return		;funcret
  7056  0032BA                     __end_of_servoRotate180:
  7057                           	opt callstack 0
  7058                           
  7059 ;; *************** function _servoRotate0 *****************
  7060 ;; Defined at:
  7061 ;;		line 98 in file "actuators_main.c"
  7062 ;; Parameters:    Size  Location     Type
  7063 ;;  servo           2    0[BANK0 ] int 
  7064 ;; Auto vars:     Size  Location     Type
  7065 ;;  i               2    3[BANK0 ] unsigned int 
  7066 ;; Return value:  Size  Location     Type
  7067 ;;                  1    wreg      void 
  7068 ;; Registers used:
  7069 ;;		wreg, status,2, status,0
  7070 ;; Tracked objects:
  7071 ;;		On entry : 0/0
  7072 ;;		On exit  : 0/0
  7073 ;;		Unchanged: 0/0
  7074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7075 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7076 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7077 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7078 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7079 ;;Total ram usage:        5 bytes
  7080 ;; Hardware stack levels used:    1
  7081 ;; Hardware stack levels required when called:    3
  7082 ;; This function calls:
  7083 ;;		Nothing
  7084 ;; This function is called by:
  7085 ;;		_servo
  7086 ;; This function uses a non-reentrant model
  7087 ;;
  7088                           
  7089                           	psect	text18
  7090  0032BA                     __ptext18:
  7091                           	opt callstack 0
  7092  0032BA                     _servoRotate0:
  7093                           	opt callstack 25
  7094                           
  7095                           ;actuators_main.c: 99:     unsigned int i;;actuators_main.c: 100:     if (servo==1){
  7096                           
  7097                           ; BSR set to: 0
  7098                           ;incstack = 0
  7099  0032BA  0100               	movlb	0	; () banked
  7100  0032BC  0580               	decf	servoRotate0@servo& (0+255),w,b
  7101  0032BE  1181               	iorwf	(servoRotate0@servo+1)& (0+255),w,b
  7102  0032C0  A4D8               	btfss	status,2,c
  7103  0032C2  D025               	goto	u7700
  7104                           
  7105                           ; BSR set to: 0
  7106                           ;actuators_main.c: 101:       for(i=0;i<30;i++)
  7107  0032C4  0E00               	movlw	0
  7108  0032C6  6F84               	movwf	(servoRotate0@i+1)& (0+255),b
  7109  0032C8  0E00               	movlw	0
  7110  0032CA  6F83               	movwf	servoRotate0@i& (0+255),b
  7111  0032CC                     l122:
  7112                           
  7113                           ; BSR set to: 0
  7114                           ;actuators_main.c: 102:           {;actuators_main.c: 103:             RC1 = 1;
  7115  0032CC  8282               	bsf	3970,1,c	;volatile
  7116                           
  7117                           ;actuators_main.c: 104:             RC2 = 1;
  7118  0032CE  8482               	bsf	3970,2,c	;volatile
  7119                           
  7120                           ; BSR set to: 0
  7121                           ;actuators_main.c: 105:             _delay((unsigned long)((1100)*(10000000/4000000.0)))
      +                          ;
  7122  0032D0  0E04               	movlw	4
  7123  0032D2  0100               	movlb	0	; () banked
  7124  0032D4  6F82               	movwf	??_servoRotate0& (0+255),b
  7125  0032D6  0E91               	movlw	145
  7126  0032D8                     u10007:
  7127  0032D8  2EE8               	decfsz	wreg,f,c
  7128  0032DA  D7FE               	bra	u10007
  7129  0032DC  2F82               	decfsz	??_servoRotate0& (0+255),f,b
  7130  0032DE  D7FC               	bra	u10007
  7131                           
  7132                           ;actuators_main.c: 106:             RC2 = 0;
  7133  0032E0  9482               	bcf	3970,2,c	;volatile
  7134                           
  7135                           ;actuators_main.c: 107:             _delay((unsigned long)((300)*(10000000/4000000.0)));
  7136  0032E2  0EFA               	movlw	250
  7137  0032E4                     u10017:
  7138  0032E4  2EE8               	decfsz	wreg,f,c
  7139  0032E6  D7FE               	bra	u10017
  7140                           
  7141                           ;actuators_main.c: 108:             RC1 = 0;
  7142  0032E8  9282               	bcf	3970,1,c	;volatile
  7143                           
  7144                           ;actuators_main.c: 112:             _delay((unsigned long)((18600)*(10000000/4000000.0))
      +                          );
  7145  0032EA  0E3D               	movlw	61
  7146  0032EC  0100               	movlb	0	; () banked
  7147  0032EE  6F82               	movwf	??_servoRotate0& (0+255),b
  7148  0032F0  0E62               	movlw	98
  7149  0032F2                     u10027:
  7150  0032F2  2EE8               	decfsz	wreg,f,c
  7151  0032F4  D7FE               	bra	u10027
  7152  0032F6  2F82               	decfsz	??_servoRotate0& (0+255),f,b
  7153  0032F8  D7FC               	bra	u10027
  7154  0032FA  F000               	nop	
  7155                           
  7156                           ;actuators_main.c: 113:           }
  7157  0032FC  0100               	movlb	0	; () banked
  7158  0032FE  4B83               	infsnz	servoRotate0@i& (0+255),f,b
  7159  003300  2B84               	incf	(servoRotate0@i+1)& (0+255),f,b
  7160  003302  5184               	movf	(servoRotate0@i+1)& (0+255),w,b
  7161  003304  E104               	bnz	u7700
  7162  003306  0E1E               	movlw	30
  7163  003308  5D83               	subwf	servoRotate0@i& (0+255),w,b
  7164  00330A  A0D8               	btfss	status,0,c
  7165  00330C  D7DF               	goto	l122
  7166  00330E                     u7700:
  7167                           
  7168                           ; BSR set to: 0
  7169                           ;actuators_main.c: 115:     if (servo==2){
  7170  00330E  0E02               	movlw	2
  7171  003310  1980               	xorwf	servoRotate0@servo& (0+255),w,b
  7172  003312  1181               	iorwf	(servoRotate0@servo+1)& (0+255),w,b
  7173  003314  A4D8               	btfss	status,2,c
  7174  003316  D020               	goto	u7720
  7175                           
  7176                           ; BSR set to: 0
  7177                           ;actuators_main.c: 116:       for(i=0;i<30;i++)
  7178  003318  0E00               	movlw	0
  7179  00331A  6F84               	movwf	(servoRotate0@i+1)& (0+255),b
  7180  00331C  0E00               	movlw	0
  7181  00331E  6F83               	movwf	servoRotate0@i& (0+255),b
  7182  003320                     l125:
  7183                           
  7184                           ; BSR set to: 0
  7185                           ;actuators_main.c: 117:         {;actuators_main.c: 119:         RD1 = 1;
  7186  003320  8283               	bsf	3971,1,c	;volatile
  7187                           
  7188                           ; BSR set to: 0
  7189                           ;actuators_main.c: 122:           _delay((unsigned long)((1000)*(10000000/4000000.0)));
  7190  003322  0E04               	movlw	4
  7191  003324  0100               	movlb	0	; () banked
  7192  003326  6F82               	movwf	??_servoRotate0& (0+255),b
  7193  003328  0E3D               	movlw	61
  7194  00332A                     u10037:
  7195  00332A  2EE8               	decfsz	wreg,f,c
  7196  00332C  D7FE               	bra	u10037
  7197  00332E  2F82               	decfsz	??_servoRotate0& (0+255),f,b
  7198  003330  D7FC               	bra	u10037
  7199  003332  D000               	nop2	
  7200                           
  7201                           ;actuators_main.c: 124:         RD1 = 0;
  7202  003334  9283               	bcf	3971,1,c	;volatile
  7203                           
  7204                           ;actuators_main.c: 127:           _delay((unsigned long)((19000)*(10000000/4000000.0)));
  7205  003336  0E3E               	movlw	62
  7206  003338  0100               	movlb	0	; () banked
  7207  00333A  6F82               	movwf	??_servoRotate0& (0+255),b
  7208  00333C  0EAF               	movlw	175
  7209  00333E                     u10047:
  7210  00333E  2EE8               	decfsz	wreg,f,c
  7211  003340  D7FE               	bra	u10047
  7212  003342  2F82               	decfsz	??_servoRotate0& (0+255),f,b
  7213  003344  D7FC               	bra	u10047
  7214                           
  7215                           ;actuators_main.c: 128:         }
  7216  003346  0100               	movlb	0	; () banked
  7217  003348  4B83               	infsnz	servoRotate0@i& (0+255),f,b
  7218  00334A  2B84               	incf	(servoRotate0@i+1)& (0+255),f,b
  7219  00334C  5184               	movf	(servoRotate0@i+1)& (0+255),w,b
  7220  00334E  E104               	bnz	u7720
  7221  003350  0E1E               	movlw	30
  7222  003352  5D83               	subwf	servoRotate0@i& (0+255),w,b
  7223  003354  A0D8               	btfss	status,0,c
  7224  003356  D7E4               	goto	l125
  7225  003358                     u7720:
  7226                           
  7227                           ; BSR set to: 0
  7228                           ;actuators_main.c: 130:     if (servo==3){
  7229  003358  0E03               	movlw	3
  7230  00335A  1980               	xorwf	servoRotate0@servo& (0+255),w,b
  7231  00335C  1181               	iorwf	(servoRotate0@servo+1)& (0+255),w,b
  7232  00335E  A4D8               	btfss	status,2,c
  7233  003360  0012               	return	
  7234                           
  7235                           ; BSR set to: 0
  7236                           ;actuators_main.c: 131:       for(i=0;i<30;i++)
  7237  003362  0E00               	movlw	0
  7238  003364  6F84               	movwf	(servoRotate0@i+1)& (0+255),b
  7239  003366  0E00               	movlw	0
  7240  003368  6F83               	movwf	servoRotate0@i& (0+255),b
  7241  00336A                     l128:
  7242                           
  7243                           ; BSR set to: 0
  7244                           ;actuators_main.c: 132:         {;actuators_main.c: 133:         RD0 = 1;
  7245  00336A  8083               	bsf	3971,0,c	;volatile
  7246                           
  7247                           ; BSR set to: 0
  7248                           ;actuators_main.c: 134:         _delay((unsigned long)((2000)*(10000000/4000000.0)));
  7249  00336C  0E07               	movlw	7
  7250  00336E  0100               	movlb	0	; () banked
  7251  003370  6F82               	movwf	??_servoRotate0& (0+255),b
  7252  003372  0E7D               	movlw	125
  7253  003374                     u10057:
  7254  003374  2EE8               	decfsz	wreg,f,c
  7255  003376  D7FE               	bra	u10057
  7256  003378  2F82               	decfsz	??_servoRotate0& (0+255),f,b
  7257  00337A  D7FC               	bra	u10057
  7258                           
  7259                           ;actuators_main.c: 137:         RD0 = 0;
  7260  00337C  9083               	bcf	3971,0,c	;volatile
  7261                           
  7262                           ;actuators_main.c: 138:         _delay((unsigned long)((11000)*(10000000/4000000.0)));
  7263  00337E  0E24               	movlw	36
  7264  003380  0100               	movlb	0	; () banked
  7265  003382  6F82               	movwf	??_servoRotate0& (0+255),b
  7266  003384  0EB5               	movlw	181
  7267  003386                     u10067:
  7268  003386  2EE8               	decfsz	wreg,f,c
  7269  003388  D7FE               	bra	u10067
  7270  00338A  2F82               	decfsz	??_servoRotate0& (0+255),f,b
  7271  00338C  D7FC               	bra	u10067
  7272  00338E  D000               	nop2	
  7273                           
  7274                           ;actuators_main.c: 139:         }
  7275  003390  0100               	movlb	0	; () banked
  7276  003392  4B83               	infsnz	servoRotate0@i& (0+255),f,b
  7277  003394  2B84               	incf	(servoRotate0@i+1)& (0+255),f,b
  7278  003396  5184               	movf	(servoRotate0@i+1)& (0+255),w,b
  7279  003398  E105               	bnz	u7740
  7280  00339A  0E1E               	movlw	30
  7281  00339C  5D83               	subwf	servoRotate0@i& (0+255),w,b
  7282  00339E  B0D8               	btfsc	status,0,c
  7283  0033A0  0012               	return	
  7284  0033A2  D7E3               	goto	l128
  7285  0033A4                     u7740:
  7286                           
  7287                           ; BSR set to: 0
  7288  0033A4  0012               	return		;funcret
  7289  0033A6                     __end_of_servoRotate0:
  7290                           	opt callstack 0
  7291                           
  7292 ;; *************** function _UI_main *****************
  7293 ;; Defined at:
  7294 ;;		line 482 in file "main.c"
  7295 ;; Parameters:    Size  Location     Type
  7296 ;;  t_dep           2  123[BANK0 ] int 
  7297 ;;  poles_detect    2  125[BANK0 ] int 
  7298 ;; Auto vars:     Size  Location     Type
  7299 ;;  i               1   89[BANK1 ] unsigned char 
  7300 ;;  keypress        1   84[BANK1 ] unsigned char 
  7301 ;;  Pole           80    4[BANK1 ] struct Poles[10]
  7302 ;;  tick            4   85[BANK1 ] unsigned long 
  7303 ;; Return value:  Size  Location     Type
  7304 ;;                  1    wreg      void 
  7305 ;; Registers used:
  7306 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7307 ;; Tracked objects:
  7308 ;;		On entry : 0/0
  7309 ;;		On exit  : 0/0
  7310 ;;		Unchanged: 0/0
  7311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7312 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7313 ;;      Locals:         0       0      86       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7314 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7315 ;;      Totals:         0       4      90       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7316 ;;Total ram usage:       94 bytes
  7317 ;; Hardware stack levels used:    1
  7318 ;; Hardware stack levels required when called:   14
  7319 ;; This function calls:
  7320 ;;		_I2C_Master_Init
  7321 ;;		_I2C_Master_Read
  7322 ;;		_I2C_Master_Start
  7323 ;;		_I2C_Master_Stop
  7324 ;;		_I2C_Master_Write
  7325 ;;		___llmod
  7326 ;;		_initLCD
  7327 ;;		_lcdInst
  7328 ;;		_printf
  7329 ;; This function is called by:
  7330 ;;		_main
  7331 ;; This function uses a non-reentrant model
  7332 ;;
  7333                           
  7334                           	psect	text19
  7335  000012                     __ptext19:
  7336                           	opt callstack 0
  7337  000012                     _UI_main:
  7338                           	opt callstack 16
  7339                           
  7340                           ;main.c: 483:     sens = 0;
  7341                           
  7342                           ; BSR set to: 0
  7343                           ;incstack = 0
  7344  000012  0E00               	movlw	0
  7345  000014  6E59               	movwf	_sens+1,c	;volatile
  7346  000016  0E00               	movlw	0
  7347  000018  6E58               	movwf	_sens,c	;volatile
  7348                           
  7349                           ;main.c: 488:     LATD = 0x00;
  7350  00001A  0E00               	movlw	0
  7351  00001C  6E8C               	movwf	3980,c	;volatile
  7352                           
  7353                           ;main.c: 489:     TRISD = 0x00;
  7354  00001E  0E00               	movlw	0
  7355  000020  6E95               	movwf	3989,c	;volatile
  7356                           
  7357                           ;main.c: 492:     TRISD = 0x00;
  7358  000022  0E00               	movlw	0
  7359  000024  6E95               	movwf	3989,c	;volatile
  7360                           
  7361                           ;main.c: 495:     INT1IE = 1;
  7362  000026  86F0               	bsf	4080,3,c	;volatile
  7363                           
  7364                           ;main.c: 498:     initLCD();
  7365  000028  EC4A  F01C         	call	_initLCD	;wreg free
  7366                           
  7367                           ;main.c: 501:     (INTCONbits.GIE = 1);
  7368  00002C  8EF2               	bsf	4082,7,c	;volatile
  7369                           
  7370                           ;main.c: 503:     I2C_Master_Init(100000);
  7371  00002E  0EA0               	movlw	160
  7372  000030  0100               	movlb	0	; () banked
  7373  000032  6F8D               	movwf	I2C_Master_Init@clockFreq& (0+255),b
  7374  000034  0E86               	movlw	134
  7375  000036  6F8E               	movwf	(I2C_Master_Init@clockFreq+1)& (0+255),b
  7376  000038  0E01               	movlw	1
  7377  00003A  6F8F               	movwf	(I2C_Master_Init@clockFreq+2)& (0+255),b
  7378  00003C  0E00               	movlw	0
  7379  00003E  6F90               	movwf	(I2C_Master_Init@clockFreq+3)& (0+255),b
  7380  000040  ECED  F01C         	call	_I2C_Master_Init	;wreg free
  7381                           
  7382                           ;main.c: 504:     I2C_Master_Start();
  7383  000044  EC72  F01F         	call	_I2C_Master_Start	;wreg free
  7384                           
  7385                           ;main.c: 505:     I2C_Master_Write(0b00010000);
  7386  000048  0E00               	movlw	0
  7387  00004A  0100               	movlb	0	; () banked
  7388  00004C  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  7389  00004E  0E10               	movlw	16
  7390  000050  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  7391  000052  EC69  F01F         	call	_I2C_Master_Write	;wreg free
  7392                           
  7393                           ;main.c: 506:     I2C_Master_Stop();
  7394  000056  EC6E  F01F         	call	_I2C_Master_Stop	;wreg free
  7395                           
  7396                           ;main.c: 516:     if((pressed == 0)&&(sens==0)){
  7397  00005A  0101               	movlb	1	; () banked
  7398  00005C  51D9               	movf	_pressed& (0+255),w,b
  7399  00005E  11DA               	iorwf	(_pressed+1)& (0+255),w,b
  7400  000060  A4D8               	btfss	status,2,c
  7401  000062  D3DC               	goto	u8950
  7402                           
  7403                           ; BSR set to: 1
  7404  000064  5058               	movf	_sens,w,c	;volatile
  7405  000066  1059               	iorwf	_sens+1,w,c	;volatile
  7406  000068  A4D8               	btfss	status,2,c
  7407  00006A  D3D8               	goto	u8950
  7408                           
  7409                           ; BSR set to: 1
  7410                           ;main.c: 517:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  7411  00006C  0E01               	movlw	1
  7412  00006E  EC61  F01F         	call	_lcdInst
  7413  000072  0E11               	movlw	17
  7414  000074  0101               	movlb	1	; () banked
  7415  000076  6F00               	movwf	??_UI_main& (0+255),b
  7416  000078  0E3A               	movlw	58
  7417  00007A                     u10077:
  7418  00007A  2EE8               	decfsz	wreg,f,c
  7419  00007C  D7FE               	bra	u10077
  7420  00007E  2F00               	decfsz	??_UI_main& (0+255),f,b
  7421  000080  D7FC               	bra	u10077
  7422  000082  F000               	nop	
  7423                           
  7424                           ;main.c: 518:         printf("1 - Start");
  7425  000084  0EC5               	movlw	low STR_23
  7426  000086  0100               	movlb	0	; () banked
  7427  000088  6FED               	movwf	printf@fmt& (0+255),b
  7428  00008A  0EFF               	movlw	high STR_23
  7429  00008C  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7430  00008E  ECFB  F01E         	call	_printf	;wreg free
  7431  000092  0EC0               	movlw	192
  7432  000094  EC61  F01F         	call	_lcdInst
  7433                           
  7434                           ;main.c: 520:         printf("2 - Summary");
  7435  000098  0E47               	movlw	low STR_24
  7436  00009A  0100               	movlb	0	; () banked
  7437  00009C  6FED               	movwf	printf@fmt& (0+255),b
  7438  00009E  0EFF               	movlw	high STR_24
  7439  0000A0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7440  0000A2  ECFB  F01E         	call	_printf	;wreg free
  7441  0000A6  0E90               	movlw	144
  7442  0000A8  EC61  F01F         	call	_lcdInst
  7443                           
  7444                           ;main.c: 522:         printf("3 - Date&Time ");
  7445  0000AC  0E6D               	movlw	low STR_25
  7446  0000AE  0100               	movlb	0	; () banked
  7447  0000B0  6FED               	movwf	printf@fmt& (0+255),b
  7448  0000B2  0EFE               	movlw	high STR_25
  7449  0000B4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7450  0000B6  ECFB  F01E         	call	_printf	;wreg free
  7451  0000BA  D3B0               	goto	u8950
  7452  0000BC                     l8091:
  7453                           
  7454                           ;main.c: 533:         if (send){
  7455  0000BC  506D               	movf	_send,w,c
  7456  0000BE  B4D8               	btfsc	status,2,c
  7457  0000C0  D3AD               	goto	u8950
  7458                           
  7459                           ;main.c: 534:         if(key_was_pressed){
  7460  0000C2  0101               	movlb	1	; () banked
  7461  0000C4  51E5               	movf	_key_was_pressed& (0+255),w,b	;volatile
  7462  0000C6  B4D8               	btfsc	status,2,c
  7463  0000C8  D3A9               	goto	u8950
  7464                           
  7465                           ; BSR set to: 1
  7466                           ;main.c: 535:             pressed = 1;
  7467  0000CA  0E00               	movlw	0
  7468  0000CC  6FDA               	movwf	(_pressed+1)& (0+255),b
  7469  0000CE  0E01               	movlw	1
  7470  0000D0  6FD9               	movwf	_pressed& (0+255),b
  7471                           
  7472                           ;main.c: 536:             key_was_pressed = 0;
  7473  0000D2  0E00               	movlw	0
  7474  0000D4  6FE5               	movwf	_key_was_pressed& (0+255),b	;volatile
  7475                           
  7476                           ; BSR set to: 1
  7477                           ;main.c: 537:             unsigned char keypress = (PORTB & 0xF0) >> 4;
  7478  0000D6  3881               	swapf	3969,w,c	;volatile
  7479  0000D8  0B0F               	andlw	15
  7480  0000DA  0B0F               	andlw	15
  7481  0000DC  6F54               	movwf	UI_main@keypress& (0+255),b
  7482                           
  7483                           ; BSR set to: 1
  7484                           ;main.c: 538:             temp = keys[keypress];
  7485  0000DE  0E9D               	movlw	low _keys
  7486  0000E0  2554               	addwf	UI_main@keypress& (0+255),w,b
  7487  0000E2  6EF6               	movwf	tblptrl,c
  7488  0000E4  6AF7               	clrf	tblptrh,c
  7489  0000E6  0EFD               	movlw	high _keys
  7490  0000E8  22F7               	addwfc	tblptrh,f,c
  7491  0000EA                     	if	0	;There are less than 3 active tblptr bytes
  7492  0000EA                     	endif
  7493  0000EA  0008               	tblrd		*
  7494  0000EC  CFF5 F0FF          	movff	tablat,_temp
  7495                           
  7496                           ; BSR set to: 1
  7497                           ;main.c: 539:             temp_int = (temp-'0');
  7498  0000F0  0ED0               	movlw	208
  7499  0000F2  0100               	movlb	0	; () banked
  7500  0000F4  25FF               	addwf	_temp& (0+255),w,b
  7501  0000F6  0101               	movlb	1	; () banked
  7502  0000F8  6FE1               	movwf	_temp_int& (0+255),b
  7503  0000FA  6BE2               	clrf	(_temp_int+1)& (0+255),b
  7504  0000FC  0EFF               	movlw	255
  7505  0000FE  23E2               	addwfc	(_temp_int+1)& (0+255),f,b
  7506                           
  7507                           ; BSR set to: 1
  7508                           ;main.c: 541:             if (temp_int == 0){
  7509  000100  51E1               	movf	_temp_int& (0+255),w,b
  7510  000102  11E2               	iorwf	(_temp_int+1)& (0+255),w,b
  7511  000104  A4D8               	btfss	status,2,c
  7512  000106  D02B               	goto	l8121
  7513                           
  7514                           ; BSR set to: 1
  7515                           ;main.c: 542:                 state = 0;
  7516  000108  0E00               	movlw	0
  7517  00010A  6FE0               	movwf	(_state+1)& (0+255),b
  7518  00010C  0E00               	movlw	0
  7519  00010E  6FDF               	movwf	_state& (0+255),b
  7520                           
  7521                           ; BSR set to: 1
  7522                           ;main.c: 543:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  7523  000110  0E01               	movlw	1
  7524  000112  EC61  F01F         	call	_lcdInst
  7525  000116  0E11               	movlw	17
  7526  000118  0101               	movlb	1	; () banked
  7527  00011A  6F00               	movwf	??_UI_main& (0+255),b
  7528  00011C  0E3A               	movlw	58
  7529  00011E                     u10087:
  7530  00011E  2EE8               	decfsz	wreg,f,c
  7531  000120  D7FE               	bra	u10087
  7532  000122  2F00               	decfsz	??_UI_main& (0+255),f,b
  7533  000124  D7FC               	bra	u10087
  7534  000126  F000               	nop	
  7535                           
  7536                           ;main.c: 544:                 printf("1 - Start");
  7537  000128  0EC5               	movlw	low STR_23
  7538  00012A  0100               	movlb	0	; () banked
  7539  00012C  6FED               	movwf	printf@fmt& (0+255),b
  7540  00012E  0EFF               	movlw	high STR_23
  7541  000130  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7542  000132  ECFB  F01E         	call	_printf	;wreg free
  7543  000136  0EC0               	movlw	192
  7544  000138  EC61  F01F         	call	_lcdInst
  7545                           
  7546                           ;main.c: 546:                 printf("2 - Summary");
  7547  00013C  0E47               	movlw	low STR_24
  7548  00013E  0100               	movlb	0	; () banked
  7549  000140  6FED               	movwf	printf@fmt& (0+255),b
  7550  000142  0EFF               	movlw	high STR_24
  7551  000144  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7552  000146  ECFB  F01E         	call	_printf	;wreg free
  7553  00014A  0E90               	movlw	144
  7554  00014C  EC61  F01F         	call	_lcdInst
  7555                           
  7556                           ;main.c: 548:                 printf("3 - Date&Time ");
  7557  000150  0E6D               	movlw	low STR_25
  7558  000152  0100               	movlb	0	; () banked
  7559  000154  6FED               	movwf	printf@fmt& (0+255),b
  7560  000156  0EFE               	movlw	high STR_25
  7561  000158  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7562  00015A  ECFB  F01E         	call	_printf	;wreg free
  7563  00015E                     l8121:
  7564                           
  7565                           ;main.c: 551:             if ((temp_int == 1)&&(temp!= '*')&&(temp!= '#')){
  7566  00015E  0101               	movlb	1	; () banked
  7567  000160  05E1               	decf	_temp_int& (0+255),w,b
  7568  000162  11E2               	iorwf	(_temp_int+1)& (0+255),w,b
  7569  000164  A4D8               	btfss	status,2,c
  7570  000166  D041               	goto	l8149
  7571                           
  7572                           ; BSR set to: 1
  7573  000168  0E2A               	movlw	42
  7574  00016A  0100               	movlb	0	; () banked
  7575  00016C  19FF               	xorwf	_temp& (0+255),w,b
  7576  00016E  B4D8               	btfsc	status,2,c
  7577  000170  D03C               	goto	l8149
  7578                           
  7579                           ; BSR set to: 0
  7580  000172  0E23               	movlw	35
  7581  000174  19FF               	xorwf	_temp& (0+255),w,b
  7582  000176  B4D8               	btfsc	status,2,c
  7583  000178  D038               	goto	l8149
  7584                           
  7585                           ; BSR set to: 0
  7586                           ;main.c: 552:                 state = 0;
  7587  00017A  0E00               	movlw	0
  7588  00017C  0101               	movlb	1	; () banked
  7589  00017E  6FE0               	movwf	(_state+1)& (0+255),b
  7590  000180  0E00               	movlw	0
  7591  000182  6FDF               	movwf	_state& (0+255),b
  7592                           
  7593                           ; BSR set to: 1
  7594                           ;main.c: 553:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  7595  000184  0E01               	movlw	1
  7596  000186  EC61  F01F         	call	_lcdInst
  7597  00018A  0E11               	movlw	17
  7598  00018C  0101               	movlb	1	; () banked
  7599  00018E  6F00               	movwf	??_UI_main& (0+255),b
  7600  000190  0E3A               	movlw	58
  7601  000192                     u10097:
  7602  000192  2EE8               	decfsz	wreg,f,c
  7603  000194  D7FE               	bra	u10097
  7604  000196  2F00               	decfsz	??_UI_main& (0+255),f,b
  7605  000198  D7FC               	bra	u10097
  7606  00019A  F000               	nop	
  7607                           
  7608                           ;main.c: 554:                 printf("Machine In Use");
  7609  00019C  0E8B               	movlw	low STR_29
  7610  00019E  0100               	movlb	0	; () banked
  7611  0001A0  6FED               	movwf	printf@fmt& (0+255),b
  7612  0001A2  0EFE               	movlw	high STR_29
  7613  0001A4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7614  0001A6  ECFB  F01E         	call	_printf	;wreg free
  7615  0001AA  0ED0               	movlw	208
  7616  0001AC  EC61  F01F         	call	_lcdInst
  7617                           
  7618                           ;main.c: 556:                 printf("     0-Menu     ");
  7619  0001B0  0EC6               	movlw	low STR_30
  7620  0001B2  0100               	movlb	0	; () banked
  7621  0001B4  6FED               	movwf	printf@fmt& (0+255),b
  7622  0001B6  0EFD               	movlw	high STR_30
  7623  0001B8  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7624  0001BA  ECFB  F01E         	call	_printf	;wreg free
  7625                           
  7626                           ;main.c: 560:                 I2C_Master_Start();
  7627  0001BE  EC72  F01F         	call	_I2C_Master_Start	;wreg free
  7628                           
  7629                           ;main.c: 561:                 I2C_Master_Write(0b00010000);
  7630  0001C2  0E00               	movlw	0
  7631  0001C4  0100               	movlb	0	; () banked
  7632  0001C6  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  7633  0001C8  0E10               	movlw	16
  7634  0001CA  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  7635  0001CC  EC69  F01F         	call	_I2C_Master_Write	;wreg free
  7636                           
  7637                           ;main.c: 562:                 I2C_Master_Write('1');
  7638  0001D0  0E00               	movlw	0
  7639  0001D2  0100               	movlb	0	; () banked
  7640  0001D4  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  7641  0001D6  0E31               	movlw	49
  7642  0001D8  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  7643  0001DA  EC69  F01F         	call	_I2C_Master_Write	;wreg free
  7644                           
  7645                           ;main.c: 563:                 I2C_Master_Stop();
  7646  0001DE  EC6E  F01F         	call	_I2C_Master_Stop	;wreg free
  7647                           
  7648                           ;main.c: 565:                 sens = 1;
  7649  0001E2  0E00               	movlw	0
  7650  0001E4  6E59               	movwf	_sens+1,c	;volatile
  7651  0001E6  0E01               	movlw	1
  7652  0001E8  6E58               	movwf	_sens,c	;volatile
  7653  0001EA                     l8149:
  7654                           
  7655                           ;main.c: 568:                 if ((temp_int == 2)||(state == 2)){
  7656  0001EA  0E02               	movlw	2
  7657  0001EC  0101               	movlb	1	; () banked
  7658  0001EE  19E1               	xorwf	_temp_int& (0+255),w,b
  7659  0001F0  11E2               	iorwf	(_temp_int+1)& (0+255),w,b
  7660  0001F2  B4D8               	btfsc	status,2,c
  7661  0001F4  D005               	goto	u8810
  7662                           
  7663                           ; BSR set to: 1
  7664  0001F6  0E02               	movlw	2
  7665  0001F8  19DF               	xorwf	_state& (0+255),w,b
  7666  0001FA  11E0               	iorwf	(_state+1)& (0+255),w,b
  7667  0001FC  A4D8               	btfss	status,2,c
  7668  0001FE  D253               	goto	l8259
  7669  000200                     u8810:
  7670                           
  7671                           ; BSR set to: 1
  7672                           ;main.c: 569:                     if ((temp_int == 2)){
  7673  000200  0E02               	movlw	2
  7674  000202  19E1               	xorwf	_temp_int& (0+255),w,b
  7675  000204  11E2               	iorwf	(_temp_int+1)& (0+255),w,b
  7676  000206  A4D8               	btfss	status,2,c
  7677  000208  D033               	goto	l8171
  7678                           
  7679                           ; BSR set to: 1
  7680                           ;main.c: 570:                         state = 2;
  7681  00020A  0E00               	movlw	0
  7682  00020C  6FE0               	movwf	(_state+1)& (0+255),b
  7683  00020E  0E02               	movlw	2
  7684  000210  6FDF               	movwf	_state& (0+255),b
  7685                           
  7686                           ;main.c: 571:                         disp = 0;
  7687  000212  0E00               	movlw	0
  7688  000214  6FDE               	movwf	(_disp+1)& (0+255),b
  7689  000216  0E00               	movlw	0
  7690  000218  6FDD               	movwf	_disp& (0+255),b
  7691                           
  7692                           ; BSR set to: 1
  7693                           ;main.c: 572:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  7694  00021A  0E01               	movlw	1
  7695  00021C  EC61  F01F         	call	_lcdInst
  7696  000220  0E11               	movlw	17
  7697  000222  0101               	movlb	1	; () banked
  7698  000224  6F00               	movwf	??_UI_main& (0+255),b
  7699  000226  0E3A               	movlw	58
  7700  000228                     u10107:
  7701  000228  2EE8               	decfsz	wreg,f,c
  7702  00022A  D7FE               	bra	u10107
  7703  00022C  2F00               	decfsz	??_UI_main& (0+255),f,b
  7704  00022E  D7FC               	bra	u10107
  7705  000230  F000               	nop	
  7706                           
  7707                           ;main.c: 573:                         printf("Op Time:");
  7708  000232  0EE3               	movlw	low STR_31
  7709  000234  0100               	movlb	0	; () banked
  7710  000236  6FED               	movwf	printf@fmt& (0+255),b
  7711  000238  0EFF               	movlw	high STR_31
  7712  00023A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7713  00023C  ECFB  F01E         	call	_printf	;wreg free
  7714  000240  0EC0               	movlw	192
  7715  000242  EC61  F01F         	call	_lcdInst
  7716                           
  7717                           ;main.c: 575:                         printf("%d", cnt);
  7718  000246  0EC3               	movlw	low (STR_59+11)
  7719  000248  0100               	movlb	0	; () banked
  7720  00024A  6FED               	movwf	printf@fmt& (0+255),b
  7721  00024C  0EFE               	movlw	high (STR_59+11)
  7722  00024E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7723  000250  0E00               	movlw	0
  7724  000252  6FF0               	movwf	(?_printf+3)& (0+255),b
  7725  000254  0E00               	movlw	0
  7726  000256  6FEF               	movwf	(?_printf+2)& (0+255),b
  7727  000258  ECFB  F01E         	call	_printf	;wreg free
  7728  00025C  0ED0               	movlw	208
  7729  00025E  EC61  F01F         	call	_lcdInst
  7730                           
  7731                           ;main.c: 577:                         printf("    0-Menu   #>");
  7732  000262  0E0B               	movlw	low (STR_36+1)
  7733  000264  0100               	movlb	0	; () banked
  7734  000266  6FED               	movwf	printf@fmt& (0+255),b
  7735  000268  0EFE               	movlw	high (STR_36+1)
  7736  00026A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7737  00026C  ECFB  F01E         	call	_printf	;wreg free
  7738  000270                     l8171:
  7739                           
  7740                           ;main.c: 579:                     if ((temp == '*') && (disp != 0)){
  7741  000270  0E2A               	movlw	42
  7742  000272  0100               	movlb	0	; () banked
  7743  000274  19FF               	xorwf	_temp& (0+255),w,b
  7744  000276  A4D8               	btfss	status,2,c
  7745  000278  D00B               	goto	l519
  7746                           
  7747                           ; BSR set to: 0
  7748  00027A  0101               	movlb	1	; () banked
  7749  00027C  51DD               	movf	_disp& (0+255),w,b
  7750  00027E  11DE               	iorwf	(_disp+1)& (0+255),w,b
  7751  000280  B4D8               	btfsc	status,2,c
  7752  000282  D006               	goto	l519
  7753                           
  7754                           ; BSR set to: 1
  7755                           ;main.c: 580:                         disp = disp - 1;
  7756  000284  0EFF               	movlw	255
  7757  000286  25DD               	addwf	_disp& (0+255),w,b
  7758  000288  6FDD               	movwf	_disp& (0+255),b
  7759  00028A  0EFF               	movlw	255
  7760  00028C  21DE               	addwfc	(_disp+1)& (0+255),w,b
  7761  00028E  6FDE               	movwf	(_disp+1)& (0+255),b
  7762  000290                     l519:
  7763                           
  7764                           ;main.c: 582:                     if ((temp == '#')&& (disp <12)){
  7765  000290  0E23               	movlw	35
  7766  000292  0100               	movlb	0	; () banked
  7767  000294  19FF               	xorwf	_temp& (0+255),w,b
  7768  000296  A4D8               	btfss	status,2,c
  7769  000298  D00B               	goto	l8181
  7770                           
  7771                           ; BSR set to: 0
  7772  00029A  0101               	movlb	1	; () banked
  7773  00029C  BFDE               	btfsc	(_disp+1)& (0+255),7,b
  7774  00029E  D006               	goto	u8860
  7775  0002A0  51DE               	movf	(_disp+1)& (0+255),w,b
  7776  0002A2  E106               	bnz	l8181
  7777  0002A4  0E0C               	movlw	12
  7778  0002A6  5DDD               	subwf	_disp& (0+255),w,b
  7779  0002A8  B0D8               	btfsc	status,0,c
  7780  0002AA  D002               	goto	l8181
  7781  0002AC                     u8860:
  7782                           
  7783                           ; BSR set to: 1
  7784                           ;main.c: 583:                         disp++;
  7785  0002AC  4BDD               	infsnz	_disp& (0+255),f,b
  7786  0002AE  2BDE               	incf	(_disp+1)& (0+255),f,b
  7787  0002B0                     l8181:
  7788                           
  7789                           ;main.c: 585:                     if (disp == 0){
  7790  0002B0  0101               	movlb	1	; () banked
  7791  0002B2  51DD               	movf	_disp& (0+255),w,b
  7792  0002B4  11DE               	iorwf	(_disp+1)& (0+255),w,b
  7793  0002B6  A4D8               	btfss	status,2,c
  7794  0002B8  D02B               	goto	l8197
  7795                           
  7796                           ; BSR set to: 1
  7797                           ;main.c: 586:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  7798  0002BA  0E01               	movlw	1
  7799  0002BC  EC61  F01F         	call	_lcdInst
  7800  0002C0  0E11               	movlw	17
  7801  0002C2  0101               	movlb	1	; () banked
  7802  0002C4  6F00               	movwf	??_UI_main& (0+255),b
  7803  0002C6  0E3A               	movlw	58
  7804  0002C8                     u10117:
  7805  0002C8  2EE8               	decfsz	wreg,f,c
  7806  0002CA  D7FE               	bra	u10117
  7807  0002CC  2F00               	decfsz	??_UI_main& (0+255),f,b
  7808  0002CE  D7FC               	bra	u10117
  7809  0002D0  F000               	nop	
  7810                           
  7811                           ;main.c: 587:                         printf("Op Time:");
  7812  0002D2  0EE3               	movlw	low STR_31
  7813  0002D4  0100               	movlb	0	; () banked
  7814  0002D6  6FED               	movwf	printf@fmt& (0+255),b
  7815  0002D8  0EFF               	movlw	high STR_31
  7816  0002DA  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7817  0002DC  ECFB  F01E         	call	_printf	;wreg free
  7818  0002E0  0EC0               	movlw	192
  7819  0002E2  EC61  F01F         	call	_lcdInst
  7820                           
  7821                           ;main.c: 589:                         printf("%d", cnt);
  7822  0002E6  0EC3               	movlw	low (STR_59+11)
  7823  0002E8  0100               	movlb	0	; () banked
  7824  0002EA  6FED               	movwf	printf@fmt& (0+255),b
  7825  0002EC  0EFE               	movlw	high (STR_59+11)
  7826  0002EE  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7827  0002F0  0E00               	movlw	0
  7828  0002F2  6FF0               	movwf	(?_printf+3)& (0+255),b
  7829  0002F4  0E00               	movlw	0
  7830  0002F6  6FEF               	movwf	(?_printf+2)& (0+255),b
  7831  0002F8  ECFB  F01E         	call	_printf	;wreg free
  7832  0002FC  0ED0               	movlw	208
  7833  0002FE  EC61  F01F         	call	_lcdInst
  7834                           
  7835                           ;main.c: 591:                         printf("     0-Menu   #>");
  7836  000302  0E0A               	movlw	low STR_36
  7837  000304  0100               	movlb	0	; () banked
  7838  000306  6FED               	movwf	printf@fmt& (0+255),b
  7839  000308  0EFE               	movlw	high STR_36
  7840  00030A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7841  00030C  ECFB  F01E         	call	_printf	;wreg free
  7842  000310                     l8197:
  7843                           
  7844                           ;main.c: 594:                     if (disp == 1){
  7845  000310  0101               	movlb	1	; () banked
  7846  000312  05DD               	decf	_disp& (0+255),w,b
  7847  000314  11DE               	iorwf	(_disp+1)& (0+255),w,b
  7848  000316  A4D8               	btfss	status,2,c
  7849  000318  D02F               	goto	l8213
  7850                           
  7851                           ; BSR set to: 1
  7852                           ;main.c: 595:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  7853  00031A  0E01               	movlw	1
  7854  00031C  EC61  F01F         	call	_lcdInst
  7855  000320  0E11               	movlw	17
  7856  000322  0101               	movlb	1	; () banked
  7857  000324  6F00               	movwf	??_UI_main& (0+255),b
  7858  000326  0E3A               	movlw	58
  7859  000328                     u10127:
  7860  000328  2EE8               	decfsz	wreg,f,c
  7861  00032A  D7FE               	bra	u10127
  7862  00032C  2F00               	decfsz	??_UI_main& (0+255),f,b
  7863  00032E  D7FC               	bra	u10127
  7864  000330  F000               	nop	
  7865                           
  7866                           ;main.c: 596:                         printf("No. Tires: %d",t_dep);
  7867  000332  0ED4               	movlw	low STR_37
  7868  000334  0100               	movlb	0	; () banked
  7869  000336  6FED               	movwf	printf@fmt& (0+255),b
  7870  000338  0EFE               	movlw	high STR_37
  7871  00033A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7872  00033C  C0FB  F0EF         	movff	UI_main@t_dep,?_printf+2
  7873  000340  C0FC  F0F0         	movff	UI_main@t_dep+1,?_printf+3
  7874  000344  ECFB  F01E         	call	_printf	;wreg free
  7875  000348  0EC0               	movlw	192
  7876  00034A  EC61  F01F         	call	_lcdInst
  7877                           
  7878                           ;main.c: 598:                         printf("No. Poles: %d", poles_detected);
  7879  00034E  0EC6               	movlw	low STR_38
  7880  000350  0100               	movlb	0	; () banked
  7881  000352  6FED               	movwf	printf@fmt& (0+255),b
  7882  000354  0EFE               	movlw	high STR_38
  7883  000356  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7884  000358  C0FD  F0EF         	movff	UI_main@poles_detected,?_printf+2
  7885  00035C  C0FE  F0F0         	movff	UI_main@poles_detected+1,?_printf+3
  7886  000360  ECFB  F01E         	call	_printf	;wreg free
  7887  000364  0ED0               	movlw	208
  7888  000366  EC61  F01F         	call	_lcdInst
  7889                           
  7890                           ;main.c: 600:                         printf("<*   0-Menu   #>");
  7891  00036A  0E1B               	movlw	low STR_39
  7892  00036C  0100               	movlb	0	; () banked
  7893  00036E  6FED               	movwf	printf@fmt& (0+255),b
  7894  000370  0EFE               	movlw	high STR_39
  7895  000372  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7896  000374  ECFB  F01E         	call	_printf	;wreg free
  7897  000378                     l8213:
  7898                           
  7899                           ;main.c: 603:                     if (disp > 1 && disp <11){
  7900  000378  0101               	movlb	1	; () banked
  7901  00037A  BFDE               	btfsc	(_disp+1)& (0+255),7,b
  7902  00037C  D0CE               	goto	l8237
  7903  00037E  51DE               	movf	(_disp+1)& (0+255),w,b
  7904  000380  E104               	bnz	u8890
  7905  000382  0E02               	movlw	2
  7906  000384  5DDD               	subwf	_disp& (0+255),w,b
  7907  000386  A0D8               	btfss	status,0,c
  7908  000388  D0C8               	goto	l8237
  7909  00038A                     u8890:
  7910                           
  7911                           ; BSR set to: 1
  7912  00038A  BFDE               	btfsc	(_disp+1)& (0+255),7,b
  7913  00038C  D006               	goto	u8900
  7914  00038E  51DE               	movf	(_disp+1)& (0+255),w,b
  7915  000390  E103               	bnz	u8901
  7916  000392  0E0B               	movlw	11
  7917  000394  5DDD               	subwf	_disp& (0+255),w,b
  7918  000396  B0D8               	btfsc	status,0,c
  7919  000398                     u8901:
  7920  000398  D0C0               	goto	l8237
  7921  00039A                     u8900:
  7922                           
  7923                           ; BSR set to: 1
  7924                           ;main.c: 604:                         i = disp - 2;
  7925  00039A  0EFE               	movlw	254
  7926  00039C  25DD               	addwf	_disp& (0+255),w,b
  7927  00039E  6FDB               	movwf	_i& (0+255),b
  7928  0003A0  0EFF               	movlw	255
  7929  0003A2  21DE               	addwfc	(_disp+1)& (0+255),w,b
  7930  0003A4  6FDC               	movwf	(_i+1)& (0+255),b
  7931                           
  7932                           ; BSR set to: 1
  7933                           ;main.c: 605:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  7934  0003A6  0E01               	movlw	1
  7935  0003A8  EC61  F01F         	call	_lcdInst
  7936  0003AC  0E11               	movlw	17
  7937  0003AE  0101               	movlb	1	; () banked
  7938  0003B0  6F00               	movwf	??_UI_main& (0+255),b
  7939  0003B2  0E3A               	movlw	58
  7940  0003B4                     u10137:
  7941  0003B4  2EE8               	decfsz	wreg,f,c
  7942  0003B6  D7FE               	bra	u10137
  7943  0003B8  2F00               	decfsz	??_UI_main& (0+255),f,b
  7944  0003BA  D7FC               	bra	u10137
  7945  0003BC  F000               	nop	
  7946                           
  7947                           ;main.c: 606:                         printf("P%d Dep:%d,Tot:%d", i+1 , Pole[i].tires_de
      +                          ployed,Pole[i].tires_final);
  7948  0003BE  0EB4               	movlw	low STR_40
  7949  0003C0  0100               	movlb	0	; () banked
  7950  0003C2  6FED               	movwf	printf@fmt& (0+255),b
  7951  0003C4  0EFD               	movlw	high STR_40
  7952  0003C6  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7953  0003C8  0E01               	movlw	1
  7954  0003CA  0101               	movlb	1	; () banked
  7955  0003CC  25DB               	addwf	_i& (0+255),w,b
  7956  0003CE  0100               	movlb	0	; () banked
  7957  0003D0  6FEF               	movwf	(?_printf+2)& (0+255),b
  7958  0003D2  0E00               	movlw	0
  7959  0003D4  0101               	movlb	1	; () banked
  7960  0003D6  21DC               	addwfc	(_i+1)& (0+255),w,b
  7961  0003D8  0100               	movlb	0	; () banked
  7962  0003DA  6FF0               	movwf	(?_printf+3)& (0+255),b
  7963  0003DC  C1DB  F100         	movff	_i,??_UI_main
  7964  0003E0  C1DC  F101         	movff	_i+1,??_UI_main+1
  7965  0003E4  0101               	movlb	1	; () banked
  7966  0003E6  90D8               	bcf	status,0,c
  7967  0003E8  3700               	rlcf	??_UI_main& (0+255),f,b
  7968  0003EA  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7969  0003EC  90D8               	bcf	status,0,c
  7970  0003EE  3700               	rlcf	??_UI_main& (0+255),f,b
  7971  0003F0  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7972  0003F2  90D8               	bcf	status,0,c
  7973  0003F4  3700               	rlcf	??_UI_main& (0+255),f,b
  7974  0003F6  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7975  0003F8  0E04               	movlw	low UI_main@Pole
  7976  0003FA  2500               	addwf	??_UI_main& (0+255),w,b
  7977  0003FC  6ED9               	movwf	fsr2l,c
  7978  0003FE  0E01               	movlw	high UI_main@Pole
  7979  000400  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  7980  000402  6EDA               	movwf	fsr2h,c
  7981  000404  CFDE F0F1          	movff	postinc2,?_printf+4
  7982  000408  CFDD F0F2          	movff	postdec2,?_printf+5
  7983  00040C  C1DB  F102         	movff	_i,??_UI_main+2
  7984  000410  C1DC  F103         	movff	_i+1,??_UI_main+3
  7985  000414  90D8               	bcf	status,0,c
  7986  000416  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  7987  000418  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  7988  00041A  90D8               	bcf	status,0,c
  7989  00041C  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  7990  00041E  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  7991  000420  90D8               	bcf	status,0,c
  7992  000422  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  7993  000424  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  7994  000426  0E02               	movlw	2
  7995  000428  2702               	addwf	(??_UI_main+2)& (0+255),f,b
  7996  00042A  0E00               	movlw	0
  7997  00042C  2303               	addwfc	(??_UI_main+3)& (0+255),f,b
  7998  00042E  0E04               	movlw	low UI_main@Pole
  7999  000430  2502               	addwf	(??_UI_main+2)& (0+255),w,b
  8000  000432  6ED9               	movwf	fsr2l,c
  8001  000434  0E01               	movlw	high UI_main@Pole
  8002  000436  2103               	addwfc	(??_UI_main+3)& (0+255),w,b
  8003  000438  6EDA               	movwf	fsr2h,c
  8004  00043A  CFDE F0F3          	movff	postinc2,?_printf+6
  8005  00043E  CFDD F0F4          	movff	postdec2,?_printf+7
  8006  000442  ECFB  F01E         	call	_printf	;wreg free
  8007  000446  0EC0               	movlw	192
  8008  000448  EC61  F01F         	call	_lcdInst
  8009                           
  8010                           ;main.c: 608:                         printf("DistToStart:%d",i+1 , Pole[i].dist_from_st
      +                          art);
  8011  00044C  0E7C               	movlw	low STR_41
  8012  00044E  0100               	movlb	0	; () banked
  8013  000450  6FED               	movwf	printf@fmt& (0+255),b
  8014  000452  0EFE               	movlw	high STR_41
  8015  000454  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8016  000456  0E01               	movlw	1
  8017  000458  0101               	movlb	1	; () banked
  8018  00045A  25DB               	addwf	_i& (0+255),w,b
  8019  00045C  0100               	movlb	0	; () banked
  8020  00045E  6FEF               	movwf	(?_printf+2)& (0+255),b
  8021  000460  0E00               	movlw	0
  8022  000462  0101               	movlb	1	; () banked
  8023  000464  21DC               	addwfc	(_i+1)& (0+255),w,b
  8024  000466  0100               	movlb	0	; () banked
  8025  000468  6FF0               	movwf	(?_printf+3)& (0+255),b
  8026  00046A  C1DB  F100         	movff	_i,??_UI_main
  8027  00046E  C1DC  F101         	movff	_i+1,??_UI_main+1
  8028  000472  0101               	movlb	1	; () banked
  8029  000474  90D8               	bcf	status,0,c
  8030  000476  3700               	rlcf	??_UI_main& (0+255),f,b
  8031  000478  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8032  00047A  90D8               	bcf	status,0,c
  8033  00047C  3700               	rlcf	??_UI_main& (0+255),f,b
  8034  00047E  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8035  000480  90D8               	bcf	status,0,c
  8036  000482  3700               	rlcf	??_UI_main& (0+255),f,b
  8037  000484  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8038  000486  0E04               	movlw	4
  8039  000488  2700               	addwf	??_UI_main& (0+255),f,b
  8040  00048A  0E00               	movlw	0
  8041  00048C  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  8042  00048E  0E04               	movlw	low UI_main@Pole
  8043  000490  2500               	addwf	??_UI_main& (0+255),w,b
  8044  000492  6ED9               	movwf	fsr2l,c
  8045  000494  0E01               	movlw	high UI_main@Pole
  8046  000496  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  8047  000498  6EDA               	movwf	fsr2h,c
  8048  00049A  CFDE F0F1          	movff	postinc2,?_printf+4
  8049  00049E  CFDD F0F2          	movff	postdec2,?_printf+5
  8050  0004A2  ECFB  F01E         	call	_printf	;wreg free
  8051  0004A6  0E90               	movlw	144
  8052  0004A8  EC61  F01F         	call	_lcdInst
  8053                           
  8054                           ;main.c: 610:                         printf("DistToCL:%d",i+1 , Pole[i].dist_from_cl);
  8055  0004AC  0E3B               	movlw	low STR_42
  8056  0004AE  0100               	movlb	0	; () banked
  8057  0004B0  6FED               	movwf	printf@fmt& (0+255),b
  8058  0004B2  0EFF               	movlw	high STR_42
  8059  0004B4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8060  0004B6  0E01               	movlw	1
  8061  0004B8  0101               	movlb	1	; () banked
  8062  0004BA  25DB               	addwf	_i& (0+255),w,b
  8063  0004BC  0100               	movlb	0	; () banked
  8064  0004BE  6FEF               	movwf	(?_printf+2)& (0+255),b
  8065  0004C0  0E00               	movlw	0
  8066  0004C2  0101               	movlb	1	; () banked
  8067  0004C4  21DC               	addwfc	(_i+1)& (0+255),w,b
  8068  0004C6  0100               	movlb	0	; () banked
  8069  0004C8  6FF0               	movwf	(?_printf+3)& (0+255),b
  8070  0004CA  C1DB  F100         	movff	_i,??_UI_main
  8071  0004CE  C1DC  F101         	movff	_i+1,??_UI_main+1
  8072  0004D2  0101               	movlb	1	; () banked
  8073  0004D4  90D8               	bcf	status,0,c
  8074  0004D6  3700               	rlcf	??_UI_main& (0+255),f,b
  8075  0004D8  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8076  0004DA  90D8               	bcf	status,0,c
  8077  0004DC  3700               	rlcf	??_UI_main& (0+255),f,b
  8078  0004DE  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8079  0004E0  90D8               	bcf	status,0,c
  8080  0004E2  3700               	rlcf	??_UI_main& (0+255),f,b
  8081  0004E4  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8082  0004E6  0E06               	movlw	6
  8083  0004E8  2700               	addwf	??_UI_main& (0+255),f,b
  8084  0004EA  0E00               	movlw	0
  8085  0004EC  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  8086  0004EE  0E04               	movlw	low UI_main@Pole
  8087  0004F0  2500               	addwf	??_UI_main& (0+255),w,b
  8088  0004F2  6ED9               	movwf	fsr2l,c
  8089  0004F4  0E01               	movlw	high UI_main@Pole
  8090  0004F6  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  8091  0004F8  6EDA               	movwf	fsr2h,c
  8092  0004FA  CFDE F0F1          	movff	postinc2,?_printf+4
  8093  0004FE  CFDD F0F2          	movff	postdec2,?_printf+5
  8094  000502  ECFB  F01E         	call	_printf	;wreg free
  8095  000506  0ED0               	movlw	208
  8096  000508  EC61  F01F         	call	_lcdInst
  8097                           
  8098                           ;main.c: 612:                         printf("<*   0-Menu   #>");
  8099  00050C  0E1B               	movlw	low STR_39
  8100  00050E  0100               	movlb	0	; () banked
  8101  000510  6FED               	movwf	printf@fmt& (0+255),b
  8102  000512  0EFE               	movlw	high STR_39
  8103  000514  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8104  000516  ECFB  F01E         	call	_printf	;wreg free
  8105  00051A                     l8237:
  8106                           
  8107                           ;main.c: 614:                     if (disp == 11){
  8108  00051A  0E0B               	movlw	11
  8109  00051C  0101               	movlb	1	; () banked
  8110  00051E  19DD               	xorwf	_disp& (0+255),w,b
  8111  000520  11DE               	iorwf	(_disp+1)& (0+255),w,b
  8112  000522  A4D8               	btfss	status,2,c
  8113  000524  D0C0               	goto	l8259
  8114                           
  8115                           ; BSR set to: 1
  8116                           ;main.c: 615:                         i = disp - 2;
  8117  000526  0EFE               	movlw	254
  8118  000528  25DD               	addwf	_disp& (0+255),w,b
  8119  00052A  6FDB               	movwf	_i& (0+255),b
  8120  00052C  0EFF               	movlw	255
  8121  00052E  21DE               	addwfc	(_disp+1)& (0+255),w,b
  8122  000530  6FDC               	movwf	(_i+1)& (0+255),b
  8123                           
  8124                           ; BSR set to: 1
  8125                           ;main.c: 616:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  8126  000532  0E01               	movlw	1
  8127  000534  EC61  F01F         	call	_lcdInst
  8128  000538  0E11               	movlw	17
  8129  00053A  0101               	movlb	1	; () banked
  8130  00053C  6F00               	movwf	??_UI_main& (0+255),b
  8131  00053E  0E3A               	movlw	58
  8132  000540                     u10147:
  8133  000540  2EE8               	decfsz	wreg,f,c
  8134  000542  D7FE               	bra	u10147
  8135  000544  2F00               	decfsz	??_UI_main& (0+255),f,b
  8136  000546  D7FC               	bra	u10147
  8137  000548  F000               	nop	
  8138                           
  8139                           ;main.c: 617:                         printf("P%d Dep:%d,Tot:%d", i+1 , Pole[i].tires_de
      +                          ployed,Pole[i].tires_final);
  8140  00054A  0EB4               	movlw	low STR_40
  8141  00054C  0100               	movlb	0	; () banked
  8142  00054E  6FED               	movwf	printf@fmt& (0+255),b
  8143  000550  0EFD               	movlw	high STR_40
  8144  000552  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8145  000554  0E01               	movlw	1
  8146  000556  0101               	movlb	1	; () banked
  8147  000558  25DB               	addwf	_i& (0+255),w,b
  8148  00055A  0100               	movlb	0	; () banked
  8149  00055C  6FEF               	movwf	(?_printf+2)& (0+255),b
  8150  00055E  0E00               	movlw	0
  8151  000560  0101               	movlb	1	; () banked
  8152  000562  21DC               	addwfc	(_i+1)& (0+255),w,b
  8153  000564  0100               	movlb	0	; () banked
  8154  000566  6FF0               	movwf	(?_printf+3)& (0+255),b
  8155  000568  C1DB  F100         	movff	_i,??_UI_main
  8156  00056C  C1DC  F101         	movff	_i+1,??_UI_main+1
  8157  000570  0101               	movlb	1	; () banked
  8158  000572  90D8               	bcf	status,0,c
  8159  000574  3700               	rlcf	??_UI_main& (0+255),f,b
  8160  000576  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8161  000578  90D8               	bcf	status,0,c
  8162  00057A  3700               	rlcf	??_UI_main& (0+255),f,b
  8163  00057C  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8164  00057E  90D8               	bcf	status,0,c
  8165  000580  3700               	rlcf	??_UI_main& (0+255),f,b
  8166  000582  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8167  000584  0E04               	movlw	low UI_main@Pole
  8168  000586  2500               	addwf	??_UI_main& (0+255),w,b
  8169  000588  6ED9               	movwf	fsr2l,c
  8170  00058A  0E01               	movlw	high UI_main@Pole
  8171  00058C  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  8172  00058E  6EDA               	movwf	fsr2h,c
  8173  000590  CFDE F0F1          	movff	postinc2,?_printf+4
  8174  000594  CFDD F0F2          	movff	postdec2,?_printf+5
  8175  000598  C1DB  F102         	movff	_i,??_UI_main+2
  8176  00059C  C1DC  F103         	movff	_i+1,??_UI_main+3
  8177  0005A0  90D8               	bcf	status,0,c
  8178  0005A2  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  8179  0005A4  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  8180  0005A6  90D8               	bcf	status,0,c
  8181  0005A8  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  8182  0005AA  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  8183  0005AC  90D8               	bcf	status,0,c
  8184  0005AE  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  8185  0005B0  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  8186  0005B2  0E02               	movlw	2
  8187  0005B4  2702               	addwf	(??_UI_main+2)& (0+255),f,b
  8188  0005B6  0E00               	movlw	0
  8189  0005B8  2303               	addwfc	(??_UI_main+3)& (0+255),f,b
  8190  0005BA  0E04               	movlw	low UI_main@Pole
  8191  0005BC  2502               	addwf	(??_UI_main+2)& (0+255),w,b
  8192  0005BE  6ED9               	movwf	fsr2l,c
  8193  0005C0  0E01               	movlw	high UI_main@Pole
  8194  0005C2  2103               	addwfc	(??_UI_main+3)& (0+255),w,b
  8195  0005C4  6EDA               	movwf	fsr2h,c
  8196  0005C6  CFDE F0F3          	movff	postinc2,?_printf+6
  8197  0005CA  CFDD F0F4          	movff	postdec2,?_printf+7
  8198  0005CE  ECFB  F01E         	call	_printf	;wreg free
  8199  0005D2  0EC0               	movlw	192
  8200  0005D4  EC61  F01F         	call	_lcdInst
  8201                           
  8202                           ;main.c: 619:                         printf("DistToStart:%d",i+1 , Pole[i].dist_from_st
      +                          art);
  8203  0005D8  0E7C               	movlw	low STR_41
  8204  0005DA  0100               	movlb	0	; () banked
  8205  0005DC  6FED               	movwf	printf@fmt& (0+255),b
  8206  0005DE  0EFE               	movlw	high STR_41
  8207  0005E0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8208  0005E2  0E01               	movlw	1
  8209  0005E4  0101               	movlb	1	; () banked
  8210  0005E6  25DB               	addwf	_i& (0+255),w,b
  8211  0005E8  0100               	movlb	0	; () banked
  8212  0005EA  6FEF               	movwf	(?_printf+2)& (0+255),b
  8213  0005EC  0E00               	movlw	0
  8214  0005EE  0101               	movlb	1	; () banked
  8215  0005F0  21DC               	addwfc	(_i+1)& (0+255),w,b
  8216  0005F2  0100               	movlb	0	; () banked
  8217  0005F4  6FF0               	movwf	(?_printf+3)& (0+255),b
  8218  0005F6  C1DB  F100         	movff	_i,??_UI_main
  8219  0005FA  C1DC  F101         	movff	_i+1,??_UI_main+1
  8220  0005FE  0101               	movlb	1	; () banked
  8221  000600  90D8               	bcf	status,0,c
  8222  000602  3700               	rlcf	??_UI_main& (0+255),f,b
  8223  000604  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8224  000606  90D8               	bcf	status,0,c
  8225  000608  3700               	rlcf	??_UI_main& (0+255),f,b
  8226  00060A  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8227  00060C  90D8               	bcf	status,0,c
  8228  00060E  3700               	rlcf	??_UI_main& (0+255),f,b
  8229  000610  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8230  000612  0E04               	movlw	4
  8231  000614  2700               	addwf	??_UI_main& (0+255),f,b
  8232  000616  0E00               	movlw	0
  8233  000618  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  8234  00061A  0E04               	movlw	low UI_main@Pole
  8235  00061C  2500               	addwf	??_UI_main& (0+255),w,b
  8236  00061E  6ED9               	movwf	fsr2l,c
  8237  000620  0E01               	movlw	high UI_main@Pole
  8238  000622  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  8239  000624  6EDA               	movwf	fsr2h,c
  8240  000626  CFDE F0F1          	movff	postinc2,?_printf+4
  8241  00062A  CFDD F0F2          	movff	postdec2,?_printf+5
  8242  00062E  ECFB  F01E         	call	_printf	;wreg free
  8243  000632  0E90               	movlw	144
  8244  000634  EC61  F01F         	call	_lcdInst
  8245                           
  8246                           ;main.c: 621:                         printf("DistToCL:%d",i+1 , Pole[i].dist_from_cl);
  8247  000638  0E3B               	movlw	low STR_42
  8248  00063A  0100               	movlb	0	; () banked
  8249  00063C  6FED               	movwf	printf@fmt& (0+255),b
  8250  00063E  0EFF               	movlw	high STR_42
  8251  000640  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8252  000642  0E01               	movlw	1
  8253  000644  0101               	movlb	1	; () banked
  8254  000646  25DB               	addwf	_i& (0+255),w,b
  8255  000648  0100               	movlb	0	; () banked
  8256  00064A  6FEF               	movwf	(?_printf+2)& (0+255),b
  8257  00064C  0E00               	movlw	0
  8258  00064E  0101               	movlb	1	; () banked
  8259  000650  21DC               	addwfc	(_i+1)& (0+255),w,b
  8260  000652  0100               	movlb	0	; () banked
  8261  000654  6FF0               	movwf	(?_printf+3)& (0+255),b
  8262  000656  C1DB  F100         	movff	_i,??_UI_main
  8263  00065A  C1DC  F101         	movff	_i+1,??_UI_main+1
  8264  00065E  0101               	movlb	1	; () banked
  8265  000660  90D8               	bcf	status,0,c
  8266  000662  3700               	rlcf	??_UI_main& (0+255),f,b
  8267  000664  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8268  000666  90D8               	bcf	status,0,c
  8269  000668  3700               	rlcf	??_UI_main& (0+255),f,b
  8270  00066A  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8271  00066C  90D8               	bcf	status,0,c
  8272  00066E  3700               	rlcf	??_UI_main& (0+255),f,b
  8273  000670  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8274  000672  0E06               	movlw	6
  8275  000674  2700               	addwf	??_UI_main& (0+255),f,b
  8276  000676  0E00               	movlw	0
  8277  000678  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  8278  00067A  0E04               	movlw	low UI_main@Pole
  8279  00067C  2500               	addwf	??_UI_main& (0+255),w,b
  8280  00067E  6ED9               	movwf	fsr2l,c
  8281  000680  0E01               	movlw	high UI_main@Pole
  8282  000682  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  8283  000684  6EDA               	movwf	fsr2h,c
  8284  000686  CFDE F0F1          	movff	postinc2,?_printf+4
  8285  00068A  CFDD F0F2          	movff	postdec2,?_printf+5
  8286  00068E  ECFB  F01E         	call	_printf	;wreg free
  8287  000692  0ED0               	movlw	208
  8288  000694  EC61  F01F         	call	_lcdInst
  8289                           
  8290                           ;main.c: 623:                         printf("<*   0-Menu     ");
  8291  000698  0ED7               	movlw	low STR_47
  8292  00069A  0100               	movlb	0	; () banked
  8293  00069C  6FED               	movwf	printf@fmt& (0+255),b
  8294  00069E  0EFD               	movlw	high STR_47
  8295  0006A0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8296  0006A2  ECFB  F01E         	call	_printf	;wreg free
  8297  0006A6                     l8259:
  8298                           
  8299                           ;main.c: 626:             if (temp_int == 3){
  8300  0006A6  0E03               	movlw	3
  8301  0006A8  0101               	movlb	1	; () banked
  8302  0006AA  19E1               	xorwf	_temp_int& (0+255),w,b
  8303  0006AC  11E2               	iorwf	(_temp_int+1)& (0+255),w,b
  8304  0006AE  A4D8               	btfss	status,2,c
  8305  0006B0  D0B5               	goto	u8950
  8306                           
  8307                           ; BSR set to: 1
  8308                           ;main.c: 627:                 state = 0;
  8309  0006B2  0E00               	movlw	0
  8310  0006B4  6FE0               	movwf	(_state+1)& (0+255),b
  8311  0006B6  0E00               	movlw	0
  8312  0006B8  6FDF               	movwf	_state& (0+255),b
  8313                           
  8314                           ;main.c: 628:                 tick = 0;
  8315  0006BA  0E00               	movlw	0
  8316  0006BC  6F55               	movwf	UI_main@tick& (0+255),b
  8317  0006BE  0E00               	movlw	0
  8318  0006C0  6F56               	movwf	(UI_main@tick+1)& (0+255),b
  8319  0006C2  0E00               	movlw	0
  8320  0006C4  6F57               	movwf	(UI_main@tick+2)& (0+255),b
  8321  0006C6  0E00               	movlw	0
  8322  0006C8  6F58               	movwf	(UI_main@tick+3)& (0+255),b
  8323                           
  8324                           ;main.c: 629:                 while(~key_was_pressed){
  8325  0006CA  D0A5               	goto	l8309
  8326  0006CC                     l8263:
  8327                           
  8328                           ; BSR set to: 1
  8329                           ;main.c: 630:                     if(tick % 1000 == 0){
  8330  0006CC  C155  F080         	movff	UI_main@tick,___llmod@dividend
  8331  0006D0  C156  F081         	movff	UI_main@tick+1,___llmod@dividend+1
  8332  0006D4  C157  F082         	movff	UI_main@tick+2,___llmod@dividend+2
  8333  0006D8  C158  F083         	movff	UI_main@tick+3,___llmod@dividend+3
  8334  0006DC  0EE8               	movlw	232
  8335  0006DE  0100               	movlb	0	; () banked
  8336  0006E0  6F84               	movwf	___llmod@divisor& (0+255),b
  8337  0006E2  0E03               	movlw	3
  8338  0006E4  6F85               	movwf	(___llmod@divisor+1)& (0+255),b
  8339  0006E6  0E00               	movlw	0
  8340  0006E8  6F86               	movwf	(___llmod@divisor+2)& (0+255),b
  8341  0006EA  0E00               	movlw	0
  8342  0006EC  6F87               	movwf	(___llmod@divisor+3)& (0+255),b
  8343  0006EE  ECB9  F01C         	call	___llmod	;wreg free
  8344  0006F2  0100               	movlb	0	; () banked
  8345  0006F4  5180               	movf	?___llmod& (0+255),w,b
  8346  0006F6  1181               	iorwf	(?___llmod+1)& (0+255),w,b
  8347  0006F8  1182               	iorwf	(?___llmod+2)& (0+255),w,b
  8348  0006FA  1183               	iorwf	(?___llmod+3)& (0+255),w,b
  8349  0006FC  A4D8               	btfss	status,2,c
  8350  0006FE  D084               	goto	l8307
  8351                           
  8352                           ; BSR set to: 0
  8353                           ;main.c: 631:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  8354  000700  0E01               	movlw	1
  8355  000702  EC61  F01F         	call	_lcdInst
  8356  000706  0E11               	movlw	17
  8357  000708  0101               	movlb	1	; () banked
  8358  00070A  6F00               	movwf	??_UI_main& (0+255),b
  8359  00070C  0E3A               	movlw	58
  8360  00070E                     u10157:
  8361  00070E  2EE8               	decfsz	wreg,f,c
  8362  000710  D7FE               	bra	u10157
  8363  000712  2F00               	decfsz	??_UI_main& (0+255),f,b
  8364  000714  D7FC               	bra	u10157
  8365  000716  F000               	nop	
  8366                           
  8367                           ;main.c: 632:                         printf("DATE & TIME");
  8368  000718  0E17               	movlw	low STR_48
  8369  00071A  0100               	movlb	0	; () banked
  8370  00071C  6FED               	movwf	printf@fmt& (0+255),b
  8371  00071E  0EFF               	movlw	high STR_48
  8372  000720  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8373  000722  ECFB  F01E         	call	_printf	;wreg free
  8374                           
  8375                           ;main.c: 633:                         I2C_Master_Init(100000);
  8376  000726  0EA0               	movlw	160
  8377  000728  0100               	movlb	0	; () banked
  8378  00072A  6F8D               	movwf	I2C_Master_Init@clockFreq& (0+255),b
  8379  00072C  0E86               	movlw	134
  8380  00072E  6F8E               	movwf	(I2C_Master_Init@clockFreq+1)& (0+255),b
  8381  000730  0E01               	movlw	1
  8382  000732  6F8F               	movwf	(I2C_Master_Init@clockFreq+2)& (0+255),b
  8383  000734  0E00               	movlw	0
  8384  000736  6F90               	movwf	(I2C_Master_Init@clockFreq+3)& (0+255),b
  8385  000738  ECED  F01C         	call	_I2C_Master_Init	;wreg free
  8386                           
  8387                           ;main.c: 634:                         I2C_Master_Start();
  8388  00073C  EC72  F01F         	call	_I2C_Master_Start	;wreg free
  8389                           
  8390                           ;main.c: 635:                         I2C_Master_Write(0b11010000);
  8391  000740  0E00               	movlw	0
  8392  000742  0100               	movlb	0	; () banked
  8393  000744  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  8394  000746  0ED0               	movlw	208
  8395  000748  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  8396  00074A  EC69  F01F         	call	_I2C_Master_Write	;wreg free
  8397                           
  8398                           ;main.c: 636:                         I2C_Master_Write(0x00);
  8399  00074E  0E00               	movlw	0
  8400  000750  0100               	movlb	0	; () banked
  8401  000752  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  8402  000754  0E00               	movlw	0
  8403  000756  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  8404  000758  EC69  F01F         	call	_I2C_Master_Write	;wreg free
  8405                           
  8406                           ;main.c: 637:                         I2C_Master_Stop();
  8407  00075C  EC6E  F01F         	call	_I2C_Master_Stop	;wreg free
  8408                           
  8409                           ;main.c: 639:                         I2C_Master_Start();
  8410  000760  EC72  F01F         	call	_I2C_Master_Start	;wreg free
  8411                           
  8412                           ;main.c: 640:                         I2C_Master_Write(0b11010001);
  8413  000764  0E00               	movlw	0
  8414  000766  0100               	movlb	0	; () banked
  8415  000768  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  8416  00076A  0ED1               	movlw	209
  8417  00076C  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  8418  00076E  EC69  F01F         	call	_I2C_Master_Write	;wreg free
  8419                           
  8420                           ;main.c: 641:                         for(unsigned char i = 0; i < 6; i++){
  8421  000772  0E00               	movlw	0
  8422  000774  0101               	movlb	1	; () banked
  8423  000776  6F59               	movwf	UI_main@i& (0+255),b
  8424  000778                     l8287:
  8425                           
  8426                           ; BSR set to: 1
  8427  000778  0E05               	movlw	5
  8428  00077A  6559               	cpfsgt	UI_main@i& (0+255),b
  8429  00077C  D001               	goto	l8291
  8430  00077E  D00D               	goto	l8297
  8431  000780                     l8291:
  8432                           
  8433                           ; BSR set to: 1
  8434                           ;main.c: 642:                             time[i] = I2C_Master_Read(0);
  8435  000780  0ED2               	movlw	low _time
  8436  000782  2559               	addwf	UI_main@i& (0+255),w,b
  8437  000784  6ED9               	movwf	fsr2l,c
  8438  000786  6ADA               	clrf	fsr2h,c
  8439  000788  0E01               	movlw	high _time
  8440  00078A  22DA               	addwfc	fsr2h,f,c
  8441  00078C  0E00               	movlw	0
  8442  00078E  ECE6  F01E         	call	_I2C_Master_Read
  8443  000792  6EDF               	movwf	indf2,c
  8444                           
  8445                           ;main.c: 643:                         }
  8446  000794  0101               	movlb	1	; () banked
  8447  000796  2B59               	incf	UI_main@i& (0+255),f,b
  8448  000798  D7EF               	goto	l8287
  8449  00079A                     l8297:
  8450                           
  8451                           ; BSR set to: 1
  8452                           ;main.c: 644:                         time[6] = I2C_Master_Read(1);
  8453  00079A  0E01               	movlw	1
  8454  00079C  ECE6  F01E         	call	_I2C_Master_Read
  8455  0007A0  0101               	movlb	1	; () banked
  8456  0007A2  6FD8               	movwf	(_time+6)& (0+255),b
  8457                           
  8458                           ;main.c: 645:                         I2C_Master_Stop();
  8459  0007A4  EC6E  F01F         	call	_I2C_Master_Stop	;wreg free
  8460  0007A8  0EC0               	movlw	192
  8461  0007AA  EC61  F01F         	call	_lcdInst
  8462                           
  8463                           ;main.c: 649:                         printf("%02x/%02x/%02x", time[6],time[5],time[4]);
  8464  0007AE  0E9A               	movlw	low STR_49
  8465  0007B0  0100               	movlb	0	; () banked
  8466  0007B2  6FED               	movwf	printf@fmt& (0+255),b
  8467  0007B4  0EFE               	movlw	high STR_49
  8468  0007B6  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8469  0007B8  C1D8  F0EF         	movff	_time+6,?_printf+2
  8470  0007BC  6BF0               	clrf	(?_printf+3)& (0+255),b
  8471  0007BE  C1D7  F0F1         	movff	_time+5,?_printf+4
  8472  0007C2  6BF2               	clrf	(?_printf+5)& (0+255),b
  8473  0007C4  C1D6  F0F3         	movff	_time+4,?_printf+6
  8474  0007C8  6BF4               	clrf	(?_printf+7)& (0+255),b
  8475  0007CA  ECFB  F01E         	call	_printf	;wreg free
  8476  0007CE  0E90               	movlw	144
  8477  0007D0  EC61  F01F         	call	_lcdInst
  8478                           
  8479                           ;main.c: 651:                         printf("%02x:%02x:%02x", time[2],time[1],time[0]);
  8480  0007D4  0EA9               	movlw	low STR_50
  8481  0007D6  0100               	movlb	0	; () banked
  8482  0007D8  6FED               	movwf	printf@fmt& (0+255),b
  8483  0007DA  0EFE               	movlw	high STR_50
  8484  0007DC  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8485  0007DE  C1D4  F0EF         	movff	_time+2,?_printf+2
  8486  0007E2  6BF0               	clrf	(?_printf+3)& (0+255),b
  8487  0007E4  C1D3  F0F1         	movff	_time+1,?_printf+4
  8488  0007E8  6BF2               	clrf	(?_printf+5)& (0+255),b
  8489  0007EA  C1D2  F0F3         	movff	_time,?_printf+6
  8490  0007EE  6BF4               	clrf	(?_printf+7)& (0+255),b
  8491  0007F0  ECFB  F01E         	call	_printf	;wreg free
  8492  0007F4  0ED0               	movlw	208
  8493  0007F6  EC61  F01F         	call	_lcdInst
  8494                           
  8495                           ;main.c: 653:                         printf("     0-Menu     ");
  8496  0007FA  0EC6               	movlw	low STR_30
  8497  0007FC  0100               	movlb	0	; () banked
  8498  0007FE  6FED               	movwf	printf@fmt& (0+255),b
  8499  000800  0EFD               	movlw	high STR_30
  8500  000802  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8501  000804  ECFB  F01E         	call	_printf	;wreg free
  8502  000808                     l8307:
  8503                           
  8504                           ;main.c: 656:                     tick++;
  8505  000808  0E01               	movlw	1
  8506  00080A  0101               	movlb	1	; () banked
  8507  00080C  2755               	addwf	UI_main@tick& (0+255),f,b
  8508  00080E  0E00               	movlw	0
  8509  000810  2356               	addwfc	(UI_main@tick+1)& (0+255),f,b
  8510  000812  2357               	addwfc	(UI_main@tick+2)& (0+255),f,b
  8511  000814  2358               	addwfc	(UI_main@tick+3)& (0+255),f,b
  8512  000816                     l8309:
  8513                           
  8514                           ; BSR set to: 1
  8515                           ;main.c: 629:                 while(~key_was_pressed){
  8516  000816  05E5               	decf	_key_was_pressed& (0+255),w,b	;volatile
  8517  000818  A4D8               	btfss	status,2,c
  8518  00081A  D758               	goto	l8263
  8519  00081C                     u8950:
  8520                           
  8521                           ;main.c: 524:     while(sens==0){
  8522  00081C  5058               	movf	_sens,w,c	;volatile
  8523  00081E  1059               	iorwf	_sens+1,w,c	;volatile
  8524  000820  A4D8               	btfss	status,2,c
  8525  000822  0012               	return	
  8526  000824  D44B               	goto	l8091
  8527  000826                     __end_of_UI_main:
  8528                           	opt callstack 0
  8529                           
  8530 ;; *************** function _printf *****************
  8531 ;; Defined at:
  8532 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  8533 ;; Parameters:    Size  Location     Type
  8534 ;;  fmt             2  109[BANK0 ] PTR const unsigned char 
  8535 ;;		 -> STR_63(10), STR_62(11), STR_61(11), STR_60(12), 
  8536 ;;		 -> STR_59(14), STR_58(17), STR_57(12), STR_56(10), 
  8537 ;;		 -> STR_55(10), STR_54(13), STR_53(8), STR_52(3), 
  8538 ;;		 -> STR_51(17), STR_50(15), STR_49(15), STR_48(12), 
  8539 ;;		 -> STR_47(17), STR_46(12), STR_45(15), STR_44(18), 
  8540 ;;		 -> STR_43(17), STR_42(12), STR_41(15), STR_40(18), 
  8541 ;;		 -> STR_39(17), STR_38(14), STR_37(14), STR_36(17), 
  8542 ;;		 -> STR_35(3), STR_34(9), STR_33(16), STR_32(3), 
  8543 ;;		 -> STR_31(9), STR_30(17), STR_29(15), STR_28(15), 
  8544 ;;		 -> STR_27(12), STR_26(10), STR_25(15), STR_24(12), 
  8545 ;;		 -> STR_23(10), STR_22(16), STR_21(12), STR_20(11), 
  8546 ;;		 -> STR_19(13), STR_18(8), STR_17(10), STR_16(17), 
  8547 ;;		 -> STR_15(10), STR_14(16), STR_13(10), STR_12(16), 
  8548 ;;		 -> STR_11(10), STR_10(17), STR_9(5), STR_8(10), 
  8549 ;;		 -> STR_7(14), STR_6(6), STR_5(10), STR_4(10), 
  8550 ;;		 -> STR_3(11), STR_2(13), STR_1(10), 
  8551 ;; Auto vars:     Size  Location     Type
  8552 ;;  ap              2  121[BANK0 ] PTR void [1]
  8553 ;;		 -> ?_printf(2), 
  8554 ;;  ret             2    0        int 
  8555 ;; Return value:  Size  Location     Type
  8556 ;;                  2  109[BANK0 ] int 
  8557 ;; Registers used:
  8558 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8559 ;; Tracked objects:
  8560 ;;		On entry : 0/0
  8561 ;;		On exit  : 0/0
  8562 ;;		Unchanged: 0/0
  8563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8564 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8565 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8567 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8568 ;;Total ram usage:       14 bytes
  8569 ;; Hardware stack levels used:    1
  8570 ;; Hardware stack levels required when called:   13
  8571 ;; This function calls:
  8572 ;;		_vfprintf
  8573 ;; This function is called by:
  8574 ;;		_actuators_main
  8575 ;;		_stepper2
  8576 ;;		_stepper2_back
  8577 ;;		_full_drive
  8578 ;;		_print_echo
  8579 ;;		_ultrasonic_main
  8580 ;;		_number_deploy
  8581 ;;		_UI_main
  8582 ;;		_brake
  8583 ;;		_main
  8584 ;; This function uses a non-reentrant model
  8585 ;;
  8586                           
  8587                           	psect	text20
  8588  003DF6                     __ptext20:
  8589                           	opt callstack 0
  8590  003DF6                     _printf:
  8591                           	opt callstack 16
  8592                           
  8593                           ;incstack = 0
  8594  003DF6  0EEF               	movlw	low (?_printf+2)
  8595  003DF8  0100               	movlb	0	; () banked
  8596  003DFA  6FF9               	movwf	printf@ap& (0+255),b
  8597  003DFC  0E00               	movlw	high (?_printf+2)
  8598  003DFE  6FFA               	movwf	(printf@ap+1)& (0+255),b
  8599                           
  8600                           ; BSR set to: 0
  8601  003E00  0E00               	movlw	0
  8602  003E02  6FE5               	movwf	vfprintf@fp& (0+255),b
  8603  003E04  0E00               	movlw	0
  8604  003E06  6FE6               	movwf	(vfprintf@fp+1)& (0+255),b
  8605  003E08  C0ED  F0E7         	movff	printf@fmt,vfprintf@fmt
  8606  003E0C  C0EE  F0E8         	movff	printf@fmt+1,vfprintf@fmt+1
  8607  003E10  0EF9               	movlw	low printf@ap
  8608  003E12  6FE9               	movwf	vfprintf@ap& (0+255),b
  8609  003E14  0E00               	movlw	high printf@ap
  8610  003E16  6FEA               	movwf	(vfprintf@ap+1)& (0+255),b
  8611  003E18  EC48  F01D         	call	_vfprintf	;wreg free
  8612  003E1C  0012               	return		;funcret
  8613  003E1E                     __end_of_printf:
  8614                           	opt callstack 0
  8615                           
  8616 ;; *************** function _vfprintf *****************
  8617 ;; Defined at:
  8618 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8619 ;; Parameters:    Size  Location     Type
  8620 ;;  fp              2  101[BANK0 ] PTR struct _IO_FILE
  8621 ;;		 -> NULL(0), 
  8622 ;;  fmt             2  103[BANK0 ] PTR const unsigned char 
  8623 ;;		 -> STR_63(10), STR_62(11), STR_61(11), STR_60(12), 
  8624 ;;		 -> STR_59(14), STR_58(17), STR_57(12), STR_56(10), 
  8625 ;;		 -> STR_55(10), STR_54(13), STR_53(8), STR_52(3), 
  8626 ;;		 -> STR_51(17), STR_50(15), STR_49(15), STR_48(12), 
  8627 ;;		 -> STR_47(17), STR_46(12), STR_45(15), STR_44(18), 
  8628 ;;		 -> STR_43(17), STR_42(12), STR_41(15), STR_40(18), 
  8629 ;;		 -> STR_39(17), STR_38(14), STR_37(14), STR_36(17), 
  8630 ;;		 -> STR_35(3), STR_34(9), STR_33(16), STR_32(3), 
  8631 ;;		 -> STR_31(9), STR_30(17), STR_29(15), STR_28(15), 
  8632 ;;		 -> STR_27(12), STR_26(10), STR_25(15), STR_24(12), 
  8633 ;;		 -> STR_23(10), STR_22(16), STR_21(12), STR_20(11), 
  8634 ;;		 -> STR_19(13), STR_18(8), STR_17(10), STR_16(17), 
  8635 ;;		 -> STR_15(10), STR_14(16), STR_13(10), STR_12(16), 
  8636 ;;		 -> STR_11(10), STR_10(17), STR_9(5), STR_8(10), 
  8637 ;;		 -> STR_7(14), STR_6(6), STR_5(10), STR_4(10), 
  8638 ;;		 -> STR_3(11), STR_2(13), STR_1(10), 
  8639 ;;  ap              2  105[BANK0 ] PTR PTR void 
  8640 ;;		 -> printf@ap(2), 
  8641 ;; Auto vars:     Size  Location     Type
  8642 ;;  cfmt            2  107[BANK0 ] PTR unsigned char 
  8643 ;;		 -> STR_63(10), STR_62(11), STR_61(11), STR_60(12), 
  8644 ;;		 -> STR_59(14), STR_58(17), STR_57(12), STR_56(10), 
  8645 ;;		 -> STR_55(10), STR_54(13), STR_53(8), STR_52(3), 
  8646 ;;		 -> STR_51(17), STR_50(15), STR_49(15), STR_48(12), 
  8647 ;;		 -> STR_47(17), STR_46(12), STR_45(15), STR_44(18), 
  8648 ;;		 -> STR_43(17), STR_42(12), STR_41(15), STR_40(18), 
  8649 ;;		 -> STR_39(17), STR_38(14), STR_37(14), STR_36(17), 
  8650 ;;		 -> STR_35(3), STR_34(9), STR_33(16), STR_32(3), 
  8651 ;;		 -> STR_31(9), STR_30(17), STR_29(15), STR_28(15), 
  8652 ;;		 -> STR_27(12), STR_26(10), STR_25(15), STR_24(12), 
  8653 ;;		 -> STR_23(10), STR_22(16), STR_21(12), STR_20(11), 
  8654 ;;		 -> STR_19(13), STR_18(8), STR_17(10), STR_16(17), 
  8655 ;;		 -> STR_15(10), STR_14(16), STR_13(10), STR_12(16), 
  8656 ;;		 -> STR_11(10), STR_10(17), STR_9(5), STR_8(10), 
  8657 ;;		 -> STR_7(14), STR_6(6), STR_5(10), STR_4(10), 
  8658 ;;		 -> STR_3(11), STR_2(13), STR_1(10), 
  8659 ;; Return value:  Size  Location     Type
  8660 ;;                  2  101[BANK0 ] int 
  8661 ;; Registers used:
  8662 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8663 ;; Tracked objects:
  8664 ;;		On entry : 0/0
  8665 ;;		On exit  : 0/0
  8666 ;;		Unchanged: 0/0
  8667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8668 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8669 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8671 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8672 ;;Total ram usage:        8 bytes
  8673 ;; Hardware stack levels used:    1
  8674 ;; Hardware stack levels required when called:   12
  8675 ;; This function calls:
  8676 ;;		_vfpfcnvrt
  8677 ;; This function is called by:
  8678 ;;		_printf
  8679 ;; This function uses a non-reentrant model
  8680 ;;
  8681                           
  8682                           	psect	text21
  8683  003A90                     __ptext21:
  8684                           	opt callstack 0
  8685  003A90                     _vfprintf:
  8686                           	opt callstack 16
  8687                           
  8688                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  8689                           
  8690                           ;incstack = 0
  8691  003A90  C0E7  F0EB         	movff	vfprintf@fmt,vfprintf@cfmt
  8692  003A94  C0E8  F0EC         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  8693                           
  8694                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  8695  003A98  0E00               	movlw	0
  8696  003A9A  6E49               	movwf	_nout+1,c
  8697  003A9C  0E00               	movlw	0
  8698  003A9E  6E48               	movwf	_nout,c
  8699                           
  8700                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  8701  003AA0  D014               	goto	l7051
  8702  003AA2                     l7049:
  8703                           
  8704                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  8705  003AA2  C0E5  F0C6         	movff	vfprintf@fp,vfpfcnvrt@fp
  8706  003AA6  C0E6  F0C7         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  8707  003AAA  0EEB               	movlw	low vfprintf@cfmt
  8708  003AAC  0100               	movlb	0	; () banked
  8709  003AAE  6FC8               	movwf	vfpfcnvrt@fmt& (0+255),b
  8710  003AB0  0E00               	movlw	high vfprintf@cfmt
  8711  003AB2  6FC9               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  8712  003AB4  C0E9  F0CA         	movff	vfprintf@ap,vfpfcnvrt@ap
  8713  003AB8  C0EA  F0CB         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  8714  003ABC  ECCA  F009         	call	_vfpfcnvrt	;wreg free
  8715  003AC0  0100               	movlb	0	; () banked
  8716  003AC2  51C6               	movf	?_vfpfcnvrt& (0+255),w,b
  8717  003AC4  2648               	addwf	_nout,f,c
  8718  003AC6  51C7               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  8719  003AC8  2249               	addwfc	_nout+1,f,c
  8720  003ACA                     l7051:
  8721                           
  8722                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  8723  003ACA  C0EB  FFF6         	movff	vfprintf@cfmt,tblptrl
  8724  003ACE  C0EC  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  8725  003AD2                     	if	0	;tblptru may be non-zero
  8726  003AD2                     	endif
  8727  003AD2                     	if	0	;tblptru may be non-zero
  8728  003AD2                     	endif
  8729  003AD2  0008               	tblrd		*
  8730  003AD4  50F5               	movf	tablat,w,c
  8731  003AD6  0900               	iorlw	0
  8732  003AD8  A4D8               	btfss	status,2,c
  8733  003ADA  D7E3               	goto	l7049
  8734                           
  8735                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  8736  003ADC  C048  F0E5         	movff	_nout,?_vfprintf
  8737  003AE0  C049  F0E6         	movff	_nout+1,?_vfprintf+1
  8738  003AE4  0012               	return		;funcret
  8739  003AE6                     __end_of_vfprintf:
  8740                           	opt callstack 0
  8741                           
  8742 ;; *************** function _vfpfcnvrt *****************
  8743 ;; Defined at:
  8744 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8745 ;; Parameters:    Size  Location     Type
  8746 ;;  fp              2   70[BANK0 ] PTR struct _IO_FILE
  8747 ;;		 -> NULL(0), 
  8748 ;;  fmt             2   72[BANK0 ] PTR PTR unsigned char 
  8749 ;;		 -> vfprintf@cfmt(2), 
  8750 ;;  ap              2   74[BANK0 ] PTR PTR void 
  8751 ;;		 -> printf@ap(2), 
  8752 ;; Auto vars:     Size  Location     Type
  8753 ;;  llu             8   88[BANK0 ] unsigned long long 
  8754 ;;  ll              8   80[BANK0 ] long long 
  8755 ;;  f               4    0        long long 
  8756 ;;  vp              3    0        PTR void 
  8757 ;;  ct              3    0        unsigned char [3]
  8758 ;;  cp              3    0        PTR unsigned char 
  8759 ;;  done            2   97[BANK0 ] int 
  8760 ;;  i               2    0        int 
  8761 ;;  c               1   96[BANK0 ] unsigned char 
  8762 ;; Return value:  Size  Location     Type
  8763 ;;                  2   70[BANK0 ] int 
  8764 ;; Registers used:
  8765 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8766 ;; Tracked objects:
  8767 ;;		On entry : 0/0
  8768 ;;		On exit  : 0/0
  8769 ;;		Unchanged: 0/0
  8770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8771 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8772 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8773 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8774 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8775 ;;Total ram usage:       31 bytes
  8776 ;; Hardware stack levels used:    1
  8777 ;; Hardware stack levels required when called:   11
  8778 ;; This function calls:
  8779 ;;		_atoi
  8780 ;;		_dtoa
  8781 ;;		_fputc
  8782 ;;		_isdigit
  8783 ;;		_xtoa
  8784 ;; This function is called by:
  8785 ;;		_vfprintf
  8786 ;; This function uses a non-reentrant model
  8787 ;;
  8788                           
  8789                           	psect	text22
  8790  001394                     __ptext22:
  8791                           	opt callstack 0
  8792  001394                     _vfpfcnvrt:
  8793                           	opt callstack 16
  8794                           
  8795                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  8796                           
  8797                           ;incstack = 0
  8798  001394  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8799  001398  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8800  00139C  CFDE FFF6          	movff	postinc2,tblptrl
  8801  0013A0  CFDD FFF7          	movff	postdec2,tblptrh
  8802  0013A4                     	if	0	;tblptru may be non-zero
  8803  0013A4                     	endif
  8804  0013A4                     	if	0	;tblptru may be non-zero
  8805  0013A4                     	endif
  8806  0013A4  0008               	tblrd		*
  8807  0013A6  50F5               	movf	tablat,w,c
  8808  0013A8  0A25               	xorlw	37
  8809  0013AA  A4D8               	btfss	status,2,c
  8810  0013AC  D1AD               	goto	l7029
  8811                           
  8812                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  8813  0013AE  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8814  0013B2  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8815  0013B6  2ADE               	incf	postinc2,f,c
  8816  0013B8  0E00               	movlw	0
  8817  0013BA  22DD               	addwfc	postdec2,f,c
  8818                           
  8819                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  8820  0013BC  0E00               	movlw	0
  8821  0013BE  6E4B               	movwf	_width+1,c
  8822  0013C0  0E00               	movlw	0
  8823  0013C2  6E4A               	movwf	_width,c
  8824  0013C4  C04A  F04E         	movff	_width,_flags
  8825  0013C8  C04B  F04F         	movff	_width+1,_flags+1
  8826                           
  8827                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  8828  0013CC  684C               	setf	_prec,c
  8829  0013CE  684D               	setf	_prec+1,c
  8830                           
  8831                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  8832  0013D0  0E00               	movlw	0
  8833  0013D2  0100               	movlb	0	; () banked
  8834  0013D4  6FE2               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  8835  0013D6  0E00               	movlw	0
  8836  0013D8  D014               	goto	L3
  8837  0013DA                     l6941:
  8838                           
  8839                           ; BSR set to: 0
  8840                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  8841  0013DA  804E               	bsf	_flags,0,c
  8842  0013DC                     l6943:
  8843                           
  8844                           ; BSR set to: 0
  8845                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  8846  0013DC  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8847  0013E0  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8848  0013E4  2ADE               	incf	postinc2,f,c
  8849  0013E6  0E00               	movlw	0
  8850  0013E8  22DD               	addwfc	postdec2,f,c
  8851                           
  8852                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  8853  0013EA  D02E               	goto	l6967
  8854  0013EC                     l6945:
  8855                           
  8856                           ; BSR set to: 0
  8857                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  8858  0013EC  824E               	bsf	_flags,1,c
  8859  0013EE  D7F6               	goto	l6943
  8860  0013F0                     l6949:
  8861                           
  8862                           ; BSR set to: 0
  8863                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  8864  0013F0  844E               	bsf	_flags,2,c
  8865  0013F2  D7F4               	goto	l6943
  8866  0013F4                     l6953:
  8867                           
  8868                           ; BSR set to: 0
  8869                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  8870  0013F4  864E               	bsf	_flags,3,c
  8871  0013F6  D7F2               	goto	l6943
  8872  0013F8                     l6957:
  8873                           
  8874                           ; BSR set to: 0
  8875                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  8876  0013F8  884E               	bsf	_flags,4,c
  8877  0013FA  D7F0               	goto	l6943
  8878  0013FC                     l6961:
  8879                           
  8880                           ; BSR set to: 0
  8881                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  8882  0013FC  0E00               	movlw	0
  8883  0013FE  6FE2               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  8884  001400  0E01               	movlw	1
  8885  001402                     L3:
  8886  001402  6FE1               	movwf	vfpfcnvrt@done& (0+255),b
  8887                           
  8888                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  8889  001404  D021               	goto	l6967
  8890  001406                     l6965:
  8891                           
  8892                           ; BSR set to: 0
  8893  001406  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8894  00140A  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8895  00140E  CFDE FFF6          	movff	postinc2,tblptrl
  8896  001412  CFDD FFF7          	movff	postdec2,tblptrh
  8897  001416                     	if	0	;tblptru may be non-zero
  8898  001416                     	endif
  8899  001416                     	if	0	;tblptru may be non-zero
  8900  001416                     	endif
  8901  001416  0008               	tblrd		*
  8902  001418  50F5               	movf	tablat,w,c
  8903  00141A  6FCC               	movwf	??_vfpfcnvrt& (0+255),b
  8904  00141C  6BCD               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  8905                           
  8906                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8907                           ; Switch size 1, requested type "simple"
  8908                           ; Number of cases is 1, Range of values is 0 to 0
  8909                           ; switch strategies available:
  8910                           ; Name         Instructions Cycles
  8911                           ; simple_byte            4     3 (average)
  8912                           ;	Chosen strategy is simple_byte
  8913  00141E  51CD               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  8914  001420  0A00               	xorlw	0	; case 0
  8915  001422  A4D8               	btfss	status,2,c
  8916  001424  D7EB               	goto	l6961
  8917                           
  8918                           ; BSR set to: 0
  8919                           ; Switch size 1, requested type "simple"
  8920                           ; Number of cases is 5, Range of values is 32 to 48
  8921                           ; switch strategies available:
  8922                           ; Name         Instructions Cycles
  8923                           ; simple_byte           16     9 (average)
  8924                           ;	Chosen strategy is simple_byte
  8925  001426  51CC               	movf	??_vfpfcnvrt& (0+255),w,b
  8926  001428  0A20               	xorlw	32	; case 32
  8927  00142A  B4D8               	btfsc	status,2,c
  8928  00142C  D7E3               	goto	l6953
  8929  00142E  0A03               	xorlw	3	; case 35
  8930  001430  B4D8               	btfsc	status,2,c
  8931  001432  D7E2               	goto	l6957
  8932  001434  0A08               	xorlw	8	; case 43
  8933  001436  B4D8               	btfsc	status,2,c
  8934  001438  D7DB               	goto	l6949
  8935  00143A  0A06               	xorlw	6	; case 45
  8936  00143C  B4D8               	btfsc	status,2,c
  8937  00143E  D7CD               	goto	l6941
  8938  001440  0A1D               	xorlw	29	; case 48
  8939  001442  B4D8               	btfsc	status,2,c
  8940  001444  D7D3               	goto	l6945
  8941  001446  D7DA               	goto	l6961
  8942  001448                     l6967:
  8943                           
  8944                           ; BSR set to: 0
  8945                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  8946  001448  51E1               	movf	vfpfcnvrt@done& (0+255),w,b
  8947  00144A  11E2               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  8948  00144C  B4D8               	btfsc	status,2,c
  8949  00144E  D7DB               	goto	l6965
  8950                           
  8951                           ; BSR set to: 0
  8952                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  8953  001450  B04E               	btfsc	_flags,0,c
  8954                           
  8955                           ; BSR set to: 0
  8956                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  8957  001452  924E               	bcf	_flags,1,c
  8958                           
  8959                           ; BSR set to: 0
  8960                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  8961  001454  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8962  001458  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8963  00145C  CFDE FFF6          	movff	postinc2,tblptrl
  8964  001460  CFDD FFF7          	movff	postdec2,tblptrh
  8965  001464                     	if	0	;tblptru may be non-zero
  8966  001464                     	endif
  8967  001464                     	if	0	;tblptru may be non-zero
  8968  001464                     	endif
  8969  001464  0008               	tblrd		*
  8970  001466  50F5               	movf	tablat,w,c
  8971  001468  0A2A               	xorlw	42
  8972  00146A  A4D8               	btfss	status,2,c
  8973  00146C  D023               	goto	l6979
  8974                           
  8975                           ; BSR set to: 0
  8976                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  8977  00146E  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8978  001472  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8979  001476  2ADE               	incf	postinc2,f,c
  8980  001478  0E00               	movlw	0
  8981  00147A  22DD               	addwfc	postdec2,f,c
  8982                           
  8983                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  8984  00147C  C0CA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8985  001480  C0CB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8986  001484  CFDF F0CC          	movff	indf2,??_vfpfcnvrt
  8987  001488  0E02               	movlw	2
  8988  00148A  26DE               	addwf	postinc2,f,c
  8989  00148C  CFDF F0CD          	movff	indf2,??_vfpfcnvrt+1
  8990  001490  0E00               	movlw	0
  8991  001492  22DD               	addwfc	postdec2,f,c
  8992  001494  C0CC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8993  001498  C0CD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8994  00149C  CFDE F04A          	movff	postinc2,_width
  8995  0014A0  CFDD F04B          	movff	postdec2,_width+1
  8996                           
  8997                           ; BSR set to: 0
  8998                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  8999  0014A4  AE4B               	btfss	_width+1,7,c
  9000  0014A6  D040               	goto	u7600
  9001                           
  9002                           ; BSR set to: 0
  9003                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  9004  0014A8  804E               	bsf	_flags,0,c
  9005                           
  9006                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  9007  0014AA  6C4A               	negf	_width,c
  9008  0014AC  1E4B               	comf	_width+1,f,c
  9009  0014AE  B0D8               	btfsc	status,0,c
  9010  0014B0  2A4B               	incf	_width+1,f,c
  9011  0014B2  D03A               	goto	u7600
  9012  0014B4                     l6979:
  9013                           
  9014                           ; BSR set to: 0
  9015                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  9016  0014B4  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9017  0014B8  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9018  0014BC  CFDE F087          	movff	postinc2,atoi@s
  9019  0014C0  CFDD F088          	movff	postdec2,atoi@s+1
  9020  0014C4  EC89  F015         	call	_atoi	;wreg free
  9021  0014C8  C087  F04A         	movff	?_atoi,_width
  9022  0014CC  C088  F04B         	movff	?_atoi+1,_width+1
  9023                           
  9024                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  9025  0014D0  D007               	goto	l6983
  9026  0014D2                     l6981:
  9027                           
  9028                           ; BSR set to: 0
  9029                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  9030  0014D2  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9031  0014D6  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9032  0014DA  2ADE               	incf	postinc2,f,c
  9033  0014DC  0E00               	movlw	0
  9034  0014DE  22DD               	addwfc	postdec2,f,c
  9035  0014E0                     l6983:
  9036  0014E0  0ED0               	movlw	208
  9037  0014E2  0100               	movlb	0	; () banked
  9038  0014E4  6FCC               	movwf	??_vfpfcnvrt& (0+255),b
  9039  0014E6  0EFF               	movlw	255
  9040  0014E8  6FCD               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  9041  0014EA  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9042  0014EE  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9043  0014F2  CFDE FFF6          	movff	postinc2,tblptrl
  9044  0014F6  CFDD FFF7          	movff	postdec2,tblptrh
  9045  0014FA                     	if	0	;tblptru may be non-zero
  9046  0014FA                     	endif
  9047  0014FA                     	if	0	;tblptru may be non-zero
  9048  0014FA                     	endif
  9049  0014FA  0008               	tblrd		*
  9050  0014FC  50F5               	movf	tablat,w,c
  9051  0014FE  6FCE               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  9052  001500  6BCF               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  9053  001502  51CC               	movf	??_vfpfcnvrt& (0+255),w,b
  9054  001504  27CE               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  9055  001506  51CD               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  9056  001508  23CF               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  9057  00150A  51CF               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  9058  00150C  E106               	bnz	u7580
  9059  00150E  0E0A               	movlw	10
  9060  001510  5DCE               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  9061  001512  B0D8               	btfsc	status,0,c
  9062  001514  D002               	goto	u7580
  9063  001516  0E01               	movlw	1
  9064  001518  D001               	goto	u7590
  9065  00151A                     u7580:
  9066  00151A  0E00               	movlw	0
  9067  00151C                     u7590:
  9068  00151C  6FE3               	movwf	_vfpfcnvrt$1252& (0+255),b
  9069  00151E  6BE4               	clrf	(_vfpfcnvrt$1252+1)& (0+255),b
  9070                           
  9071                           ; BSR set to: 0
  9072  001520  51E3               	movf	_vfpfcnvrt$1252& (0+255),w,b
  9073  001522  11E4               	iorwf	(_vfpfcnvrt$1252+1)& (0+255),w,b
  9074  001524  A4D8               	btfss	status,2,c
  9075  001526  D7D5               	goto	l6981
  9076  001528                     u7600:
  9077                           
  9078                           ; BSR set to: 0
  9079                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  9080  001528  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9081  00152C  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9082  001530  CFDE FFF6          	movff	postinc2,tblptrl
  9083  001534  CFDD FFF7          	movff	postdec2,tblptrh
  9084  001538                     	if	0	;tblptru may be non-zero
  9085  001538                     	endif
  9086  001538                     	if	0	;tblptru may be non-zero
  9087  001538                     	endif
  9088  001538  0008               	tblrd		*
  9089  00153A  50F5               	movf	tablat,w,c
  9090  00153C  0A64               	xorlw	100
  9091  00153E  B4D8               	btfsc	status,2,c
  9092  001540  D00D               	goto	u7620
  9093                           
  9094                           ; BSR set to: 0
  9095  001542  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9096  001546  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9097  00154A  CFDE FFF6          	movff	postinc2,tblptrl
  9098  00154E  CFDD FFF7          	movff	postdec2,tblptrh
  9099  001552                     	if	0	;tblptru may be non-zero
  9100  001552                     	endif
  9101  001552                     	if	0	;tblptru may be non-zero
  9102  001552                     	endif
  9103  001552  0008               	tblrd		*
  9104  001554  50F5               	movf	tablat,w,c
  9105  001556  0A69               	xorlw	105
  9106  001558  A4D8               	btfss	status,2,c
  9107  00155A  D03F               	goto	l6999
  9108  00155C                     u7620:
  9109                           
  9110                           ; BSR set to: 0
  9111                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  9112  00155C  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9113  001560  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9114  001564  2ADE               	incf	postinc2,f,c
  9115  001566  0E00               	movlw	0
  9116  001568  22DD               	addwfc	postdec2,f,c
  9117                           
  9118                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  9119  00156A  C0CA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9120  00156E  C0CB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9121  001572  CFDF F0CC          	movff	indf2,??_vfpfcnvrt
  9122  001576  0E02               	movlw	2
  9123  001578  26DE               	addwf	postinc2,f,c
  9124  00157A  CFDF F0CD          	movff	indf2,??_vfpfcnvrt+1
  9125  00157E  0E00               	movlw	0
  9126  001580  22DD               	addwfc	postdec2,f,c
  9127  001582  C0CC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9128  001586  C0CD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9129  00158A  CFDE F0D0          	movff	postinc2,vfpfcnvrt@ll
  9130  00158E  CFDD F0D1          	movff	postdec2,vfpfcnvrt@ll+1
  9131  001592  0E00               	movlw	0
  9132  001594  BFD1               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  9133  001596  0EFF               	movlw	-1
  9134  001598  6FD2               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  9135  00159A  6FD3               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  9136  00159C  6FD4               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  9137  00159E  6FD5               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  9138  0015A0  6FD6               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  9139  0015A2  6FD7               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  9140                           
  9141                           ; BSR set to: 0
  9142                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  9143  0015A4  C0C6  F09F         	movff	vfpfcnvrt@fp,dtoa@fp
  9144  0015A8  C0C7  F0A0         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  9145  0015AC  C0D0  F0A1         	movff	vfpfcnvrt@ll,dtoa@d
  9146  0015B0  C0D1  F0A2         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  9147  0015B4  C0D2  F0A3         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  9148  0015B8  C0D3  F0A4         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  9149  0015BC  C0D4  F0A5         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  9150  0015C0  C0D5  F0A6         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  9151  0015C4  C0D6  F0A7         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  9152  0015C8  C0D7  F0A8         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  9153  0015CC  EC7B  F00E         	call	_dtoa	;wreg free
  9154  0015D0  C09F  F0C6         	movff	?_dtoa,?_vfpfcnvrt
  9155  0015D4  C0A0  F0C7         	movff	?_dtoa+1,?_vfpfcnvrt+1
  9156  0015D8  0012               	return	
  9157  0015DA                     l6999:
  9158                           
  9159                           ; BSR set to: 0
  9160                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  9161  0015DA  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9162  0015DE  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9163  0015E2  CFDE FFF6          	movff	postinc2,tblptrl
  9164  0015E6  CFDD FFF7          	movff	postdec2,tblptrh
  9165  0015EA                     	if	0	;tblptru may be non-zero
  9166  0015EA                     	endif
  9167  0015EA                     	if	0	;tblptru may be non-zero
  9168  0015EA                     	endif
  9169  0015EA  0008               	tblrd		*
  9170  0015EC  50F5               	movf	tablat,w,c
  9171  0015EE  0A78               	xorlw	120
  9172  0015F0  B4D8               	btfsc	status,2,c
  9173  0015F2  D00D               	goto	u7640
  9174                           
  9175                           ; BSR set to: 0
  9176  0015F4  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9177  0015F8  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9178  0015FC  CFDE FFF6          	movff	postinc2,tblptrl
  9179  001600  CFDD FFF7          	movff	postdec2,tblptrh
  9180  001604                     	if	0	;tblptru may be non-zero
  9181  001604                     	endif
  9182  001604                     	if	0	;tblptru may be non-zero
  9183  001604                     	endif
  9184  001604  0008               	tblrd		*
  9185  001606  50F5               	movf	tablat,w,c
  9186  001608  0A58               	xorlw	88
  9187  00160A  A4D8               	btfss	status,2,c
  9188  00160C  D04D               	goto	l7013
  9189  00160E                     u7640:
  9190                           
  9191                           ; BSR set to: 0
  9192                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  9193  00160E  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9194  001612  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9195  001616  CFDE FFF6          	movff	postinc2,tblptrl
  9196  00161A  CFDD FFF7          	movff	postdec2,tblptrh
  9197  00161E                     	if	0	;tblptru may be non-zero
  9198  00161E                     	endif
  9199  00161E                     	if	0	;tblptru may be non-zero
  9200  00161E                     	endif
  9201  00161E  0008               	tblrd		*
  9202  001620  CFF5 F0E0          	movff	tablat,vfpfcnvrt@c
  9203                           
  9204                           ; BSR set to: 0
  9205                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  9206  001624  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9207  001628  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9208  00162C  2ADE               	incf	postinc2,f,c
  9209  00162E  0E00               	movlw	0
  9210  001630  22DD               	addwfc	postdec2,f,c
  9211                           
  9212                           ; BSR set to: 0
  9213                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  9214  001632  C0CA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9215  001636  C0CB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9216  00163A  CFDF F0CC          	movff	indf2,??_vfpfcnvrt
  9217  00163E  0E02               	movlw	2
  9218  001640  26DE               	addwf	postinc2,f,c
  9219  001642  CFDF F0CD          	movff	indf2,??_vfpfcnvrt+1
  9220  001646  0E00               	movlw	0
  9221  001648  22DD               	addwfc	postdec2,f,c
  9222  00164A  C0CC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9223  00164E  C0CD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9224  001652  CFDE F0CE          	movff	postinc2,??_vfpfcnvrt+2
  9225  001656  CFDD F0CF          	movff	postdec2,??_vfpfcnvrt+3
  9226  00165A  C0CE  F0D8         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  9227  00165E  C0CF  F0D9         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  9228  001662  6BDA               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  9229  001664  6BDB               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  9230  001666  6BDC               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  9231  001668  6BDD               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  9232  00166A  6BDE               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  9233  00166C  6BDF               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  9234                           
  9235                           ; BSR set to: 0
  9236                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
  9237  00166E  C0C6  F09F         	movff	vfpfcnvrt@fp,xtoa@fp
  9238  001672  C0C7  F0A0         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  9239  001676  C0D8  F0A1         	movff	vfpfcnvrt@llu,xtoa@d
  9240  00167A  C0D9  F0A2         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  9241  00167E  C0DA  F0A3         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  9242  001682  C0DB  F0A4         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  9243  001686  C0DC  F0A5         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  9244  00168A  C0DD  F0A6         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  9245  00168E  C0DE  F0A7         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  9246  001692  C0DF  F0A8         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  9247  001696  C0E0  F0A9         	movff	vfpfcnvrt@c,xtoa@x
  9248  00169A  EC9F  F00F         	call	_xtoa	;wreg free
  9249  00169E  C09F  F0C6         	movff	?_xtoa,?_vfpfcnvrt
  9250  0016A2  C0A0  F0C7         	movff	?_xtoa+1,?_vfpfcnvrt+1
  9251  0016A6  0012               	return	
  9252  0016A8                     l7013:
  9253                           
  9254                           ; BSR set to: 0
  9255                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  9256  0016A8  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9257  0016AC  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9258  0016B0  CFDE FFF6          	movff	postinc2,tblptrl
  9259  0016B4  CFDD FFF7          	movff	postdec2,tblptrh
  9260  0016B8                     	if	0	;tblptru may be non-zero
  9261  0016B8                     	endif
  9262  0016B8                     	if	0	;tblptru may be non-zero
  9263  0016B8                     	endif
  9264  0016B8  0008               	tblrd		*
  9265  0016BA  50F5               	movf	tablat,w,c
  9266  0016BC  0A25               	xorlw	37
  9267  0016BE  A4D8               	btfss	status,2,c
  9268  0016C0  D017               	goto	l7023
  9269                           
  9270                           ; BSR set to: 0
  9271                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  9272  0016C2  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9273  0016C6  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9274  0016CA  2ADE               	incf	postinc2,f,c
  9275  0016CC  0E00               	movlw	0
  9276  0016CE  22DD               	addwfc	postdec2,f,c
  9277                           
  9278                           ; BSR set to: 0
  9279                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  9280  0016D0  0E00               	movlw	0
  9281  0016D2  6F85               	movwf	(fputc@c+1)& (0+255),b
  9282  0016D4  0E25               	movlw	37
  9283  0016D6  6F84               	movwf	fputc@c& (0+255),b
  9284  0016D8  C0C6  F086         	movff	vfpfcnvrt@fp,fputc@fp
  9285  0016DC  C0C7  F087         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  9286  0016E0  EC82  F01C         	call	_fputc	;wreg free
  9287  0016E4                     l7019:
  9288                           
  9289                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  9290  0016E4  0E00               	movlw	0
  9291  0016E6  0100               	movlb	0	; () banked
  9292  0016E8  6FC7               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  9293  0016EA  0E01               	movlw	1
  9294  0016EC  6FC6               	movwf	?_vfpfcnvrt& (0+255),b
  9295  0016EE  0012               	return	
  9296  0016F0                     l7023:
  9297                           
  9298                           ; BSR set to: 0
  9299                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  9300  0016F0  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9301  0016F4  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9302  0016F8  2ADE               	incf	postinc2,f,c
  9303  0016FA  0E00               	movlw	0
  9304  0016FC  22DD               	addwfc	postdec2,f,c
  9305                           
  9306                           ; BSR set to: 0
  9307                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  9308  0016FE  0E00               	movlw	0
  9309  001700  6FC7               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  9310  001702  0E00               	movlw	0
  9311  001704  6FC6               	movwf	?_vfpfcnvrt& (0+255),b
  9312  001706  0012               	return	
  9313  001708                     l7029:
  9314                           
  9315                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  9316  001708  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9317  00170C  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9318  001710  CFDE FFF6          	movff	postinc2,tblptrl
  9319  001714  CFDD FFF7          	movff	postdec2,tblptrh
  9320  001718                     	if	0	;tblptru may be non-zero
  9321  001718                     	endif
  9322  001718                     	if	0	;tblptru may be non-zero
  9323  001718                     	endif
  9324  001718  0008               	tblrd		*
  9325  00171A  50F5               	movf	tablat,w,c
  9326  00171C  0100               	movlb	0	; () banked
  9327  00171E  6F84               	movwf	fputc@c& (0+255),b
  9328  001720  6B85               	clrf	(fputc@c+1)& (0+255),b
  9329  001722  C0C6  F086         	movff	vfpfcnvrt@fp,fputc@fp
  9330  001726  C0C7  F087         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  9331  00172A  EC82  F01C         	call	_fputc	;wreg free
  9332                           
  9333                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  9334  00172E  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9335  001732  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9336  001736  2ADE               	incf	postinc2,f,c
  9337  001738  0E00               	movlw	0
  9338  00173A  22DD               	addwfc	postdec2,f,c
  9339  00173C  D7D3               	goto	l7019
  9340  00173E                     __end_of_vfpfcnvrt:
  9341                           	opt callstack 0
  9342                           
  9343 ;; *************** function _xtoa *****************
  9344 ;; Defined at:
  9345 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9346 ;; Parameters:    Size  Location     Type
  9347 ;;  fp              2   31[BANK0 ] PTR struct _IO_FILE
  9348 ;;		 -> NULL(0), 
  9349 ;;  d               8   33[BANK0 ] unsigned long long 
  9350 ;;  x               1   41[BANK0 ] unsigned char 
  9351 ;; Auto vars:     Size  Location     Type
  9352 ;;  n               8   58[BANK0 ] unsigned long long 
  9353 ;;  c               2   68[BANK0 ] int 
  9354 ;;  i               2   66[BANK0 ] int 
  9355 ;;  w               2   56[BANK0 ] int 
  9356 ;;  p               2   54[BANK0 ] int 
  9357 ;; Return value:  Size  Location     Type
  9358 ;;                  2   31[BANK0 ] int 
  9359 ;; Registers used:
  9360 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9361 ;; Tracked objects:
  9362 ;;		On entry : 0/0
  9363 ;;		On exit  : 0/0
  9364 ;;		Unchanged: 0/0
  9365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9366 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9367 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9368 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9369 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9370 ;;Total ram usage:       39 bytes
  9371 ;; Hardware stack levels used:    1
  9372 ;; Hardware stack levels required when called:   10
  9373 ;; This function calls:
  9374 ;;		_isalpha
  9375 ;;		_isupper
  9376 ;;		_pad
  9377 ;;		_toupper
  9378 ;; This function is called by:
  9379 ;;		_vfpfcnvrt
  9380 ;; This function uses a non-reentrant model
  9381 ;;
  9382                           
  9383                           	psect	text23
  9384  001F3E                     __ptext23:
  9385                           	opt callstack 0
  9386  001F3E                     _xtoa:
  9387                           	opt callstack 16
  9388                           
  9389                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  9390                           
  9391                           ;incstack = 0
  9392  001F3E  AE4D               	btfss	_prec+1,7,c
  9393                           
  9394                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  9395  001F40  924E               	bcf	_flags,1,c
  9396                           
  9397                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  9398  001F42  BE4D               	btfsc	_prec+1,7,c
  9399  001F44  D005               	goto	u7300
  9400  001F46  504D               	movf	_prec+1,w,c
  9401  001F48  E109               	bnz	l665
  9402  001F4A  044C               	decf	_prec,w,c
  9403  001F4C  B0D8               	btfsc	status,0,c
  9404  001F4E  D006               	goto	l665
  9405  001F50                     u7300:
  9406  001F50  0E00               	movlw	0
  9407  001F52  0100               	movlb	0	; () banked
  9408  001F54  6FB7               	movwf	(xtoa@p+1)& (0+255),b
  9409  001F56  0E01               	movlw	1
  9410  001F58  6FB6               	movwf	xtoa@p& (0+255),b
  9411  001F5A  D004               	goto	l667
  9412  001F5C                     l665:
  9413  001F5C  C04C  F0B6         	movff	_prec,xtoa@p
  9414  001F60  C04D  F0B7         	movff	_prec+1,xtoa@p+1
  9415  001F64                     l667:
  9416                           
  9417                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  9418  001F64  C04A  F0B8         	movff	_width,xtoa@w
  9419  001F68  C04B  F0B9         	movff	_width+1,xtoa@w+1
  9420                           
  9421                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  9422  001F6C  A84E               	btfss	_flags,4,c
  9423  001F6E  D005               	goto	l6833
  9424                           
  9425                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  9426  001F70  0100               	movlb	0	; () banked
  9427  001F72  0EFE               	movlw	254
  9428  001F74  27B8               	addwf	xtoa@w& (0+255),f,b
  9429  001F76  0EFF               	movlw	255
  9430  001F78  23B9               	addwfc	(xtoa@w+1)& (0+255),f,b
  9431  001F7A                     l6833:
  9432                           
  9433                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  9434  001F7A  C0A1  F0BA         	movff	xtoa@d,xtoa@n
  9435  001F7E  C0A2  F0BB         	movff	xtoa@d+1,xtoa@n+1
  9436  001F82  C0A3  F0BC         	movff	xtoa@d+2,xtoa@n+2
  9437  001F86  C0A4  F0BD         	movff	xtoa@d+3,xtoa@n+3
  9438  001F8A  C0A5  F0BE         	movff	xtoa@d+4,xtoa@n+4
  9439  001F8E  C0A6  F0BF         	movff	xtoa@d+5,xtoa@n+5
  9440  001F92  C0A7  F0C0         	movff	xtoa@d+6,xtoa@n+6
  9441  001F96  C0A8  F0C1         	movff	xtoa@d+7,xtoa@n+7
  9442                           
  9443                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  9444  001F9A  0E00               	movlw	0
  9445  001F9C  0100               	movlb	0	; () banked
  9446  001F9E  6FC3               	movwf	(xtoa@i+1)& (0+255),b
  9447  001FA0  0E1F               	movlw	31
  9448  001FA2  6FC2               	movwf	xtoa@i& (0+255),b
  9449                           
  9450                           ; BSR set to: 0
  9451                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  9452  001FA4  0E00               	movlw	0
  9453  001FA6  0102               	movlb	2	; () banked
  9454  001FA8  6F9F               	movwf	(_dbuf+31)& (0+255),b
  9455                           
  9456                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9457  001FAA  D094               	goto	l6869
  9458  001FAC                     l6839:
  9459                           
  9460                           ; BSR set to: 0
  9461                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  9462  001FAC  07C2               	decf	xtoa@i& (0+255),f,b
  9463  001FAE  A0D8               	btfss	status,0,c
  9464  001FB0  07C3               	decf	(xtoa@i+1)& (0+255),f,b
  9465                           
  9466                           ; BSR set to: 0
  9467                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  9468  001FB2  0E0F               	movlw	15
  9469  001FB4  15BA               	andwf	xtoa@n& (0+255),w,b
  9470  001FB6  6FC4               	movwf	xtoa@c& (0+255),b
  9471  001FB8  6BC5               	clrf	(xtoa@c+1)& (0+255),b
  9472                           
  9473                           ; BSR set to: 0
  9474                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  9475  001FBA  BFC5               	btfsc	(xtoa@c+1)& (0+255),7,b
  9476  001FBC  D008               	goto	l6847
  9477  001FBE  51C5               	movf	(xtoa@c+1)& (0+255),w,b
  9478  001FC0  E104               	bnz	u7320
  9479  001FC2  0E0A               	movlw	10
  9480  001FC4  5DC4               	subwf	xtoa@c& (0+255),w,b
  9481  001FC6  A0D8               	btfss	status,0,c
  9482  001FC8  D002               	goto	l6847
  9483  001FCA                     u7320:
  9484                           
  9485                           ; BSR set to: 0
  9486  001FCA  0E57               	movlw	87
  9487  001FCC  D001               	goto	L4
  9488  001FCE                     l6847:
  9489                           
  9490                           ; BSR set to: 0
  9491  001FCE  0E30               	movlw	48
  9492  001FD0                     L4:
  9493  001FD0  25C4               	addwf	xtoa@c& (0+255),w,b
  9494  001FD2  6FC4               	movwf	xtoa@c& (0+255),b
  9495  001FD4  0E00               	movlw	0
  9496  001FD6  21C5               	addwfc	(xtoa@c+1)& (0+255),w,b
  9497  001FD8  6FC5               	movwf	(xtoa@c+1)& (0+255),b
  9498                           
  9499                           ; BSR set to: 0
  9500                           
  9501                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 646:       
      +                            if ((0 ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsi
      +                          gned)(c)|32)-'a') < 26)) {
  9502  001FDA  0EBF               	movlw	191
  9503  001FDC  6FAA               	movwf	??_xtoa& (0+255),b
  9504  001FDE  0EFF               	movlw	255
  9505  001FE0  6FAB               	movwf	(??_xtoa+1)& (0+255),b
  9506  001FE2  51A9               	movf	xtoa@x& (0+255),w,b
  9507  001FE4  6FAC               	movwf	(??_xtoa+2)& (0+255),b
  9508  001FE6  6BAD               	clrf	(??_xtoa+3)& (0+255),b
  9509  001FE8  51AA               	movf	??_xtoa& (0+255),w,b
  9510  001FEA  27AC               	addwf	(??_xtoa+2)& (0+255),f,b
  9511  001FEC  51AB               	movf	(??_xtoa+1)& (0+255),w,b
  9512  001FEE  23AD               	addwfc	(??_xtoa+3)& (0+255),f,b
  9513  001FF0  51AD               	movf	(??_xtoa+3)& (0+255),w,b
  9514  001FF2  E106               	bnz	u7330
  9515  001FF4  0E1A               	movlw	26
  9516  001FF6  5DAC               	subwf	(??_xtoa+2)& (0+255),w,b
  9517  001FF8  B0D8               	btfsc	status,0,c
  9518  001FFA  D002               	goto	u7330
  9519  001FFC  0E01               	movlw	1
  9520  001FFE  D001               	goto	u7340
  9521  002000                     u7330:
  9522  002000  0E00               	movlw	0
  9523  002002                     u7340:
  9524  002002  6FB2               	movwf	_xtoa$1237& (0+255),b
  9525  002004  6BB3               	clrf	(_xtoa$1237+1)& (0+255),b
  9526                           
  9527                           ; BSR set to: 0
  9528  002006  51B2               	movf	_xtoa$1237& (0+255),w,b
  9529  002008  11B3               	iorwf	(_xtoa$1237+1)& (0+255),w,b
  9530  00200A  B4D8               	btfsc	status,2,c
  9531  00200C  D027               	goto	l6861
  9532                           
  9533                           ; BSR set to: 0
  9534  00200E  0E9F               	movlw	159
  9535  002010  6FAA               	movwf	??_xtoa& (0+255),b
  9536  002012  0EFF               	movlw	255
  9537  002014  6FAB               	movwf	(??_xtoa+1)& (0+255),b
  9538  002016  0E20               	movlw	32
  9539  002018  11C4               	iorwf	xtoa@c& (0+255),w,b
  9540  00201A  6FAC               	movwf	(??_xtoa+2)& (0+255),b
  9541  00201C  0E00               	movlw	0
  9542  00201E  11C5               	iorwf	(xtoa@c+1)& (0+255),w,b
  9543  002020  6FAD               	movwf	(??_xtoa+3)& (0+255),b
  9544  002022  51AA               	movf	??_xtoa& (0+255),w,b
  9545  002024  27AC               	addwf	(??_xtoa+2)& (0+255),f,b
  9546  002026  51AB               	movf	(??_xtoa+1)& (0+255),w,b
  9547  002028  23AD               	addwfc	(??_xtoa+3)& (0+255),f,b
  9548  00202A  51AD               	movf	(??_xtoa+3)& (0+255),w,b
  9549  00202C  E106               	bnz	u7360
  9550  00202E  0E1A               	movlw	26
  9551  002030  5DAC               	subwf	(??_xtoa+2)& (0+255),w,b
  9552  002032  B0D8               	btfsc	status,0,c
  9553  002034  D002               	goto	u7360
  9554  002036  0E01               	movlw	1
  9555  002038  D001               	goto	u7370
  9556  00203A                     u7360:
  9557  00203A  0E00               	movlw	0
  9558  00203C                     u7370:
  9559  00203C  6FB4               	movwf	_xtoa$1238& (0+255),b
  9560  00203E  6BB5               	clrf	(_xtoa$1238+1)& (0+255),b
  9561                           
  9562                           ; BSR set to: 0
  9563  002040  51B4               	movf	_xtoa$1238& (0+255),w,b
  9564  002042  11B5               	iorwf	(_xtoa$1238+1)& (0+255),w,b
  9565  002044  B4D8               	btfsc	status,2,c
  9566  002046  D00A               	goto	l6861
  9567                           
  9568                           ; BSR set to: 0
  9569                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  9570  002048  C0C4  F086         	movff	xtoa@c,toupper@c
  9571  00204C  C0C5  F087         	movff	xtoa@c+1,toupper@c+1
  9572  002050  EC9C  F01D         	call	_toupper	;wreg free
  9573  002054  C086  F0C4         	movff	?_toupper,xtoa@c
  9574  002058  C087  F0C5         	movff	?_toupper+1,xtoa@c+1
  9575  00205C                     l6861:
  9576                           
  9577                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  9578  00205C  0E80               	movlw	low _dbuf
  9579  00205E  0100               	movlb	0	; () banked
  9580  002060  25C2               	addwf	xtoa@i& (0+255),w,b
  9581  002062  6ED9               	movwf	fsr2l,c
  9582  002064  0E02               	movlw	high _dbuf
  9583  002066  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
  9584  002068  6EDA               	movwf	fsr2h,c
  9585  00206A  C0C4  FFDF         	movff	xtoa@c,indf2
  9586                           
  9587                           ; BSR set to: 0
  9588                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  9589  00206E  07B6               	decf	xtoa@p& (0+255),f,b
  9590  002070  A0D8               	btfss	status,0,c
  9591  002072  07B7               	decf	(xtoa@p+1)& (0+255),f,b
  9592                           
  9593                           ; BSR set to: 0
  9594                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  9595  002074  07B8               	decf	xtoa@w& (0+255),f,b
  9596  002076  A0D8               	btfss	status,0,c
  9597  002078  07B9               	decf	(xtoa@w+1)& (0+255),f,b
  9598                           
  9599                           ; BSR set to: 0
  9600                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  9601  00207A  C0BA  F0AA         	movff	xtoa@n,??_xtoa
  9602  00207E  C0BB  F0AB         	movff	xtoa@n+1,??_xtoa+1
  9603  002082  C0BC  F0AC         	movff	xtoa@n+2,??_xtoa+2
  9604  002086  C0BD  F0AD         	movff	xtoa@n+3,??_xtoa+3
  9605  00208A  C0BE  F0AE         	movff	xtoa@n+4,??_xtoa+4
  9606  00208E  C0BF  F0AF         	movff	xtoa@n+5,??_xtoa+5
  9607  002092  C0C0  F0B0         	movff	xtoa@n+6,??_xtoa+6
  9608  002096  C0C1  F0B1         	movff	xtoa@n+7,??_xtoa+7
  9609  00209A  0E05               	movlw	5
  9610  00209C  D009               	goto	u7390
  9611  00209E                     u7395:
  9612  00209E  90D8               	bcf	status,0,c
  9613  0020A0  33B1               	rrcf	(??_xtoa+7)& (0+255),f,b
  9614  0020A2  33B0               	rrcf	(??_xtoa+6)& (0+255),f,b
  9615  0020A4  33AF               	rrcf	(??_xtoa+5)& (0+255),f,b
  9616  0020A6  33AE               	rrcf	(??_xtoa+4)& (0+255),f,b
  9617  0020A8  33AD               	rrcf	(??_xtoa+3)& (0+255),f,b
  9618  0020AA  33AC               	rrcf	(??_xtoa+2)& (0+255),f,b
  9619  0020AC  33AB               	rrcf	(??_xtoa+1)& (0+255),f,b
  9620  0020AE  33AA               	rrcf	??_xtoa& (0+255),f,b
  9621  0020B0                     u7390:
  9622  0020B0  2EE8               	decfsz	wreg,f,c
  9623  0020B2  D7F5               	goto	u7395
  9624  0020B4  C0AA  F0BA         	movff	??_xtoa,xtoa@n
  9625  0020B8  C0AB  F0BB         	movff	??_xtoa+1,xtoa@n+1
  9626  0020BC  C0AC  F0BC         	movff	??_xtoa+2,xtoa@n+2
  9627  0020C0  C0AD  F0BD         	movff	??_xtoa+3,xtoa@n+3
  9628  0020C4  C0AE  F0BE         	movff	??_xtoa+4,xtoa@n+4
  9629  0020C8  C0AF  F0BF         	movff	??_xtoa+5,xtoa@n+5
  9630  0020CC  C0B0  F0C0         	movff	??_xtoa+6,xtoa@n+6
  9631  0020D0  C0B1  F0C1         	movff	??_xtoa+7,xtoa@n+7
  9632  0020D4                     l6869:
  9633                           
  9634                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9635  0020D4  0100               	movlb	0	; () banked
  9636  0020D6  BFC3               	btfsc	(xtoa@i+1)& (0+255),7,b
  9637  0020D8  D020               	goto	u7440
  9638  0020DA  51C3               	movf	(xtoa@i+1)& (0+255),w,b
  9639  0020DC  E104               	bnz	u7400
  9640  0020DE  0E02               	movlw	2
  9641  0020E0  5DC2               	subwf	xtoa@i& (0+255),w,b
  9642  0020E2  A0D8               	btfss	status,0,c
  9643  0020E4  D01A               	goto	u7440
  9644  0020E6                     u7400:
  9645                           
  9646                           ; BSR set to: 0
  9647  0020E6  51BA               	movf	xtoa@n& (0+255),w,b
  9648  0020E8  11BB               	iorwf	(xtoa@n+1)& (0+255),w,b
  9649  0020EA  11BC               	iorwf	(xtoa@n+2)& (0+255),w,b
  9650  0020EC  11BD               	iorwf	(xtoa@n+3)& (0+255),w,b
  9651  0020EE  11BE               	iorwf	(xtoa@n+4)& (0+255),w,b
  9652  0020F0  11BF               	iorwf	(xtoa@n+5)& (0+255),w,b
  9653  0020F2  11C0               	iorwf	(xtoa@n+6)& (0+255),w,b
  9654  0020F4  11C1               	iorwf	(xtoa@n+7)& (0+255),w,b
  9655  0020F6  A4D8               	btfss	status,2,c
  9656  0020F8  D759               	goto	l6839
  9657                           
  9658                           ; BSR set to: 0
  9659  0020FA  BFB7               	btfsc	(xtoa@p+1)& (0+255),7,b
  9660  0020FC  D005               	goto	u7420
  9661  0020FE  51B7               	movf	(xtoa@p+1)& (0+255),w,b
  9662  002100  E102               	bnz	u7421
  9663  002102  05B6               	decf	xtoa@p& (0+255),w,b
  9664  002104  B0D8               	btfsc	status,0,c
  9665  002106                     u7421:
  9666  002106  D752               	goto	l6839
  9667  002108                     u7420:
  9668                           
  9669                           ; BSR set to: 0
  9670  002108  BFB9               	btfsc	(xtoa@w+1)& (0+255),7,b
  9671  00210A  D007               	goto	u7440
  9672  00210C  51B9               	movf	(xtoa@w+1)& (0+255),w,b
  9673  00210E  E103               	bnz	u7430
  9674  002110  05B8               	decf	xtoa@w& (0+255),w,b
  9675  002112  A0D8               	btfss	status,0,c
  9676  002114  D002               	goto	u7440
  9677  002116                     u7430:
  9678                           
  9679                           ; BSR set to: 0
  9680  002116  B24E               	btfsc	_flags,1,c
  9681  002118  D749               	goto	l6839
  9682  00211A                     u7440:
  9683                           
  9684                           ; BSR set to: 0
  9685                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  9686  00211A  A84E               	btfss	_flags,4,c
  9687  00211C  D016               	goto	l6885
  9688                           
  9689                           ; BSR set to: 0
  9690                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  9691  00211E  07C2               	decf	xtoa@i& (0+255),f,b
  9692  002120  A0D8               	btfss	status,0,c
  9693  002122  07C3               	decf	(xtoa@i+1)& (0+255),f,b
  9694                           
  9695                           ; BSR set to: 0
  9696                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  9697  002124  0E80               	movlw	low _dbuf
  9698  002126  25C2               	addwf	xtoa@i& (0+255),w,b
  9699  002128  6ED9               	movwf	fsr2l,c
  9700  00212A  0E02               	movlw	high _dbuf
  9701  00212C  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
  9702  00212E  6EDA               	movwf	fsr2h,c
  9703  002130  C0A9  FFDF         	movff	xtoa@x,indf2
  9704                           
  9705                           ; BSR set to: 0
  9706                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  9707  002134  07C2               	decf	xtoa@i& (0+255),f,b
  9708  002136  A0D8               	btfss	status,0,c
  9709  002138  07C3               	decf	(xtoa@i+1)& (0+255),f,b
  9710                           
  9711                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  9712  00213A  0E80               	movlw	low _dbuf
  9713  00213C  25C2               	addwf	xtoa@i& (0+255),w,b
  9714  00213E  6ED9               	movwf	fsr2l,c
  9715  002140  0E02               	movlw	high _dbuf
  9716  002142  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
  9717  002144  6EDA               	movwf	fsr2h,c
  9718  002146  0E30               	movlw	48
  9719  002148  6EDF               	movwf	indf2,c
  9720  00214A                     l6885:
  9721                           
  9722                           ; BSR set to: 0
  9723                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  9724  00214A  C09F  F094         	movff	xtoa@fp,pad@fp
  9725  00214E  C0A0  F095         	movff	xtoa@fp+1,pad@fp+1
  9726  002152  0E80               	movlw	low _dbuf
  9727  002154  25C2               	addwf	xtoa@i& (0+255),w,b
  9728  002156  6F96               	movwf	pad@buf& (0+255),b
  9729  002158  0E02               	movlw	high _dbuf
  9730  00215A  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
  9731  00215C  6F97               	movwf	(pad@buf+1)& (0+255),b
  9732  00215E  C0B8  F098         	movff	xtoa@w,pad@p
  9733  002162  C0B9  F099         	movff	xtoa@w+1,pad@p+1
  9734  002166  EC35  F01B         	call	_pad	;wreg free
  9735  00216A  C094  F09F         	movff	?_pad,?_xtoa
  9736  00216E  C095  F0A0         	movff	?_pad+1,?_xtoa+1
  9737  002172  0012               	return		;funcret
  9738  002174                     __end_of_xtoa:
  9739                           	opt callstack 0
  9740                           
  9741 ;; *************** function _toupper *****************
  9742 ;; Defined at:
  9743 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  9744 ;; Parameters:    Size  Location     Type
  9745 ;;  c               2    6[BANK0 ] int 
  9746 ;; Auto vars:     Size  Location     Type
  9747 ;;		None
  9748 ;; Return value:  Size  Location     Type
  9749 ;;                  2    6[BANK0 ] int 
  9750 ;; Registers used:
  9751 ;;		wreg, status,2, status,0
  9752 ;; Tracked objects:
  9753 ;;		On entry : 0/0
  9754 ;;		On exit  : 0/0
  9755 ;;		Unchanged: 0/0
  9756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9757 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9758 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9759 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9760 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9761 ;;Total ram usage:        8 bytes
  9762 ;; Hardware stack levels used:    1
  9763 ;; Hardware stack levels required when called:    4
  9764 ;; This function calls:
  9765 ;;		_islower
  9766 ;; This function is called by:
  9767 ;;		_xtoa
  9768 ;; This function uses a non-reentrant model
  9769 ;;
  9770                           
  9771                           	psect	text24
  9772  003B38                     __ptext24:
  9773                           	opt callstack 0
  9774  003B38                     _toupper:
  9775                           	opt callstack 21
  9776                           
  9777                           ;incstack = 0
  9778  003B38  0E9F               	movlw	159
  9779  003B3A  0100               	movlb	0	; () banked
  9780  003B3C  6F88               	movwf	??_toupper& (0+255),b
  9781  003B3E  0EFF               	movlw	255
  9782  003B40  6F89               	movwf	(??_toupper+1)& (0+255),b
  9783  003B42  C086  F08A         	movff	toupper@c,??_toupper+2
  9784  003B46  C087  F08B         	movff	toupper@c+1,??_toupper+3
  9785  003B4A  5188               	movf	??_toupper& (0+255),w,b
  9786  003B4C  278A               	addwf	(??_toupper+2)& (0+255),f,b
  9787  003B4E  5189               	movf	(??_toupper+1)& (0+255),w,b
  9788  003B50  238B               	addwfc	(??_toupper+3)& (0+255),f,b
  9789  003B52  518B               	movf	(??_toupper+3)& (0+255),w,b
  9790  003B54  E106               	bnz	u6940
  9791  003B56  0E1A               	movlw	26
  9792  003B58  5D8A               	subwf	(??_toupper+2)& (0+255),w,b
  9793  003B5A  B0D8               	btfsc	status,0,c
  9794  003B5C  D002               	goto	u6940
  9795  003B5E  0E01               	movlw	1
  9796  003B60  D001               	goto	u6950
  9797  003B62                     u6940:
  9798  003B62  0E00               	movlw	0
  9799  003B64                     u6950:
  9800  003B64  6F8C               	movwf	_toupper$1802& (0+255),b
  9801  003B66  6B8D               	clrf	(_toupper$1802+1)& (0+255),b
  9802                           
  9803                           ; BSR set to: 0
  9804  003B68  518C               	movf	_toupper$1802& (0+255),w,b
  9805  003B6A  118D               	iorwf	(_toupper$1802+1)& (0+255),w,b
  9806  003B6C  B4D8               	btfsc	status,2,c
  9807  003B6E  D005               	goto	l1505
  9808                           
  9809                           ; BSR set to: 0
  9810  003B70  0E5F               	movlw	95
  9811  003B72  1586               	andwf	toupper@c& (0+255),w,b
  9812  003B74  6F86               	movwf	?_toupper& (0+255),b
  9813  003B76  6B87               	clrf	(?_toupper+1)& (0+255),b
  9814  003B78  0012               	return	
  9815  003B7A                     l1505:
  9816                           
  9817                           ; BSR set to: 0
  9818  003B7A  C086  F086         	movff	toupper@c,?_toupper
  9819  003B7E  C087  F087         	movff	toupper@c+1,?_toupper+1
  9820                           
  9821                           ; BSR set to: 0
  9822  003B82  0012               	return		;funcret
  9823  003B84                     __end_of_toupper:
  9824                           	opt callstack 0
  9825                           
  9826 ;; *************** function _islower *****************
  9827 ;; Defined at:
  9828 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  9829 ;; Parameters:    Size  Location     Type
  9830 ;;  c               2    0[BANK0 ] int 
  9831 ;; Auto vars:     Size  Location     Type
  9832 ;;		None
  9833 ;; Return value:  Size  Location     Type
  9834 ;;                  2    0[BANK0 ] int 
  9835 ;; Registers used:
  9836 ;;		wreg, status,2, status,0
  9837 ;; Tracked objects:
  9838 ;;		On entry : 0/0
  9839 ;;		On exit  : 0/0
  9840 ;;		Unchanged: 0/0
  9841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9842 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9844 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9845 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9846 ;;Total ram usage:        6 bytes
  9847 ;; Hardware stack levels used:    1
  9848 ;; Hardware stack levels required when called:    3
  9849 ;; This function calls:
  9850 ;;		Nothing
  9851 ;; This function is called by:
  9852 ;;		_toupper
  9853 ;; This function uses a non-reentrant model
  9854 ;;
  9855                           
  9856                           	psect	text25
  9857  003CDA                     __ptext25:
  9858                           	opt callstack 0
  9859  003CDA                     _islower:
  9860                           	opt callstack 21
  9861                           
  9862                           ; BSR set to: 0
  9863                           ;incstack = 0
  9864  003CDA  0E9F               	movlw	159
  9865  003CDC  0100               	movlb	0	; () banked
  9866  003CDE  6F82               	movwf	??_islower& (0+255),b
  9867  003CE0  0EFF               	movlw	255
  9868  003CE2  6F83               	movwf	(??_islower+1)& (0+255),b
  9869  003CE4  C080  F084         	movff	islower@c,??_islower+2
  9870  003CE8  C081  F085         	movff	islower@c+1,??_islower+3
  9871  003CEC  5182               	movf	??_islower& (0+255),w,b
  9872  003CEE  2784               	addwf	(??_islower+2)& (0+255),f,b
  9873  003CF0  5183               	movf	(??_islower+1)& (0+255),w,b
  9874  003CF2  2385               	addwfc	(??_islower+3)& (0+255),f,b
  9875  003CF4  5185               	movf	(??_islower+3)& (0+255),w,b
  9876  003CF6  E106               	bnz	u6830
  9877  003CF8  0E1A               	movlw	26
  9878  003CFA  5D84               	subwf	(??_islower+2)& (0+255),w,b
  9879  003CFC  B0D8               	btfsc	status,0,c
  9880  003CFE  D002               	goto	u6830
  9881  003D00  0E01               	movlw	1
  9882  003D02  D001               	goto	u6840
  9883  003D04                     u6830:
  9884  003D04  0E00               	movlw	0
  9885  003D06                     u6840:
  9886  003D06  6F80               	movwf	?_islower& (0+255),b
  9887  003D08  6B81               	clrf	(?_islower+1)& (0+255),b
  9888                           
  9889                           ; BSR set to: 0
  9890  003D0A  0012               	return		;funcret
  9891  003D0C                     __end_of_islower:
  9892                           	opt callstack 0
  9893                           
  9894 ;; *************** function _isupper *****************
  9895 ;; Defined at:
  9896 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  9897 ;; Parameters:    Size  Location     Type
  9898 ;;  c               2    0[BANK0 ] int 
  9899 ;; Auto vars:     Size  Location     Type
  9900 ;;		None
  9901 ;; Return value:  Size  Location     Type
  9902 ;;                  2    0[BANK0 ] int 
  9903 ;; Registers used:
  9904 ;;		wreg, status,2, status,0
  9905 ;; Tracked objects:
  9906 ;;		On entry : 0/0
  9907 ;;		On exit  : 0/0
  9908 ;;		Unchanged: 0/0
  9909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9910 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9912 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9913 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9914 ;;Total ram usage:        6 bytes
  9915 ;; Hardware stack levels used:    1
  9916 ;; Hardware stack levels required when called:    3
  9917 ;; This function calls:
  9918 ;;		Nothing
  9919 ;; This function is called by:
  9920 ;;		_xtoa
  9921 ;; This function uses a non-reentrant model
  9922 ;;
  9923                           
  9924                           	psect	text26
  9925  003D0C                     __ptext26:
  9926                           	opt callstack 0
  9927  003D0C                     _isupper:
  9928                           	opt callstack 22
  9929                           
  9930                           ; BSR set to: 0
  9931                           ;incstack = 0
  9932  003D0C  0EBF               	movlw	191
  9933  003D0E  0100               	movlb	0	; () banked
  9934  003D10  6F82               	movwf	??_isupper& (0+255),b
  9935  003D12  0EFF               	movlw	255
  9936  003D14  6F83               	movwf	(??_isupper+1)& (0+255),b
  9937  003D16  C080  F084         	movff	isupper@c,??_isupper+2
  9938  003D1A  C081  F085         	movff	isupper@c+1,??_isupper+3
  9939  003D1E  5182               	movf	??_isupper& (0+255),w,b
  9940  003D20  2784               	addwf	(??_isupper+2)& (0+255),f,b
  9941  003D22  5183               	movf	(??_isupper+1)& (0+255),w,b
  9942  003D24  2385               	addwfc	(??_isupper+3)& (0+255),f,b
  9943  003D26  5185               	movf	(??_isupper+3)& (0+255),w,b
  9944  003D28  E106               	bnz	u6900
  9945  003D2A  0E1A               	movlw	26
  9946  003D2C  5D84               	subwf	(??_isupper+2)& (0+255),w,b
  9947  003D2E  B0D8               	btfsc	status,0,c
  9948  003D30  D002               	goto	u6900
  9949  003D32  0E01               	movlw	1
  9950  003D34  D001               	goto	u6910
  9951  003D36                     u6900:
  9952  003D36  0E00               	movlw	0
  9953  003D38                     u6910:
  9954  003D38  6F80               	movwf	?_isupper& (0+255),b
  9955  003D3A  6B81               	clrf	(?_isupper+1)& (0+255),b
  9956                           
  9957                           ; BSR set to: 0
  9958  003D3C  0012               	return		;funcret
  9959  003D3E                     __end_of_isupper:
  9960                           	opt callstack 0
  9961                           
  9962 ;; *************** function _isalpha *****************
  9963 ;; Defined at:
  9964 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  9965 ;; Parameters:    Size  Location     Type
  9966 ;;  c               2    0[BANK0 ] int 
  9967 ;; Auto vars:     Size  Location     Type
  9968 ;;		None
  9969 ;; Return value:  Size  Location     Type
  9970 ;;                  2    0[BANK0 ] int 
  9971 ;; Registers used:
  9972 ;;		wreg, status,2, status,0
  9973 ;; Tracked objects:
  9974 ;;		On entry : 0/0
  9975 ;;		On exit  : 0/0
  9976 ;;		Unchanged: 0/0
  9977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9978 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9980 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9981 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9982 ;;Total ram usage:        6 bytes
  9983 ;; Hardware stack levels used:    1
  9984 ;; Hardware stack levels required when called:    3
  9985 ;; This function calls:
  9986 ;;		Nothing
  9987 ;; This function is called by:
  9988 ;;		_xtoa
  9989 ;; This function uses a non-reentrant model
  9990 ;;
  9991                           
  9992                           	psect	text27
  9993  003C3E                     __ptext27:
  9994                           	opt callstack 0
  9995  003C3E                     _isalpha:
  9996                           	opt callstack 22
  9997                           
  9998                           ; BSR set to: 0
  9999                           ;incstack = 0
 10000  003C3E  0E9F               	movlw	159
 10001  003C40  0100               	movlb	0	; () banked
 10002  003C42  6F82               	movwf	??_isalpha& (0+255),b
 10003  003C44  0EFF               	movlw	255
 10004  003C46  6F83               	movwf	(??_isalpha+1)& (0+255),b
 10005  003C48  0E20               	movlw	32
 10006  003C4A  1180               	iorwf	isalpha@c& (0+255),w,b
 10007  003C4C  6F84               	movwf	(??_isalpha+2)& (0+255),b
 10008  003C4E  0E00               	movlw	0
 10009  003C50  1181               	iorwf	(isalpha@c+1)& (0+255),w,b
 10010  003C52  6F85               	movwf	(??_isalpha+3)& (0+255),b
 10011  003C54  5182               	movf	??_isalpha& (0+255),w,b
 10012  003C56  2784               	addwf	(??_isalpha+2)& (0+255),f,b
 10013  003C58  5183               	movf	(??_isalpha+1)& (0+255),w,b
 10014  003C5A  2385               	addwfc	(??_isalpha+3)& (0+255),f,b
 10015  003C5C  5185               	movf	(??_isalpha+3)& (0+255),w,b
 10016  003C5E  E106               	bnz	u6920
 10017  003C60  0E1A               	movlw	26
 10018  003C62  5D84               	subwf	(??_isalpha+2)& (0+255),w,b
 10019  003C64  B0D8               	btfsc	status,0,c
 10020  003C66  D002               	goto	u6920
 10021  003C68  0E01               	movlw	1
 10022  003C6A  D001               	goto	u6930
 10023  003C6C                     u6920:
 10024  003C6C  0E00               	movlw	0
 10025  003C6E                     u6930:
 10026  003C6E  6F80               	movwf	?_isalpha& (0+255),b
 10027  003C70  6B81               	clrf	(?_isalpha+1)& (0+255),b
 10028                           
 10029                           ; BSR set to: 0
 10030  003C72  0012               	return		;funcret
 10031  003C74                     __end_of_isalpha:
 10032                           	opt callstack 0
 10033                           
 10034 ;; *************** function _dtoa *****************
 10035 ;; Defined at:
 10036 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 10037 ;; Parameters:    Size  Location     Type
 10038 ;;  fp              2   31[BANK0 ] PTR struct _IO_FILE
 10039 ;;		 -> NULL(0), 
 10040 ;;  d               8   33[BANK0 ] long long 
 10041 ;; Auto vars:     Size  Location     Type
 10042 ;;  n               8   57[BANK0 ] long long 
 10043 ;;  i               2   65[BANK0 ] int 
 10044 ;;  s               2   55[BANK0 ] int 
 10045 ;;  w               2   53[BANK0 ] int 
 10046 ;;  p               2   51[BANK0 ] int 
 10047 ;; Return value:  Size  Location     Type
 10048 ;;                  2   31[BANK0 ] int 
 10049 ;; Registers used:
 10050 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10051 ;; Tracked objects:
 10052 ;;		On entry : 0/0
 10053 ;;		On exit  : 0/0
 10054 ;;		Unchanged: 0/0
 10055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10056 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10057 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10058 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10059 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10060 ;;Total ram usage:       36 bytes
 10061 ;; Hardware stack levels used:    1
 10062 ;; Hardware stack levels required when called:   10
 10063 ;; This function calls:
 10064 ;;		___aodiv
 10065 ;;		___aomod
 10066 ;;		_abs
 10067 ;;		_pad
 10068 ;; This function is called by:
 10069 ;;		_vfpfcnvrt
 10070 ;; This function uses a non-reentrant model
 10071 ;;
 10072                           
 10073                           	psect	text28
 10074  001CF6                     __ptext28:
 10075                           	opt callstack 0
 10076  001CF6                     _dtoa:
 10077                           	opt callstack 16
 10078                           
 10079                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
 10080                           
 10081                           ; BSR set to: 0
 10082                           ;incstack = 0
 10083  001CF6  C0A1  F0B9         	movff	dtoa@d,dtoa@n
 10084  001CFA  C0A2  F0BA         	movff	dtoa@d+1,dtoa@n+1
 10085  001CFE  C0A3  F0BB         	movff	dtoa@d+2,dtoa@n+2
 10086  001D02  C0A4  F0BC         	movff	dtoa@d+3,dtoa@n+3
 10087  001D06  C0A5  F0BD         	movff	dtoa@d+4,dtoa@n+4
 10088  001D0A  C0A6  F0BE         	movff	dtoa@d+5,dtoa@n+5
 10089  001D0E  C0A7  F0BF         	movff	dtoa@d+6,dtoa@n+6
 10090  001D12  C0A8  F0C0         	movff	dtoa@d+7,dtoa@n+7
 10091                           
 10092                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 10093  001D16  0100               	movlb	0	; () banked
 10094  001D18  AFC0               	btfss	(dtoa@n+7)& (0+255),7,b
 10095  001D1A  D002               	goto	u7140
 10096  001D1C  0E01               	movlw	1
 10097  001D1E  D001               	goto	u7150
 10098  001D20                     u7140:
 10099  001D20  0E00               	movlw	0
 10100  001D22                     u7150:
 10101  001D22  6FB7               	movwf	dtoa@s& (0+255),b
 10102  001D24  6BB8               	clrf	(dtoa@s+1)& (0+255),b
 10103                           
 10104                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 10105  001D26  51B7               	movf	dtoa@s& (0+255),w,b
 10106  001D28  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
 10107  001D2A  B4D8               	btfsc	status,2,c
 10108  001D2C  D010               	goto	l6767
 10109                           
 10110                           ; BSR set to: 0
 10111                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 10112  001D2E  1FC0               	comf	(dtoa@n+7)& (0+255),f,b
 10113  001D30  1FBF               	comf	(dtoa@n+6)& (0+255),f,b
 10114  001D32  1FBE               	comf	(dtoa@n+5)& (0+255),f,b
 10115  001D34  1FBD               	comf	(dtoa@n+4)& (0+255),f,b
 10116  001D36  1FBC               	comf	(dtoa@n+3)& (0+255),f,b
 10117  001D38  1FBB               	comf	(dtoa@n+2)& (0+255),f,b
 10118  001D3A  1FBA               	comf	(dtoa@n+1)& (0+255),f,b
 10119  001D3C  6DB9               	negf	dtoa@n& (0+255),b
 10120  001D3E  0E00               	movlw	0
 10121  001D40  23BA               	addwfc	(dtoa@n+1)& (0+255),f,b
 10122  001D42  23BB               	addwfc	(dtoa@n+2)& (0+255),f,b
 10123  001D44  23BC               	addwfc	(dtoa@n+3)& (0+255),f,b
 10124  001D46  23BD               	addwfc	(dtoa@n+4)& (0+255),f,b
 10125  001D48  23BE               	addwfc	(dtoa@n+5)& (0+255),f,b
 10126  001D4A  23BF               	addwfc	(dtoa@n+6)& (0+255),f,b
 10127  001D4C  23C0               	addwfc	(dtoa@n+7)& (0+255),f,b
 10128  001D4E                     l6767:
 10129                           
 10130                           ; BSR set to: 0
 10131                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 10132  001D4E  AE4D               	btfss	_prec+1,7,c
 10133                           
 10134                           ; BSR set to: 0
 10135                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 10136  001D50  924E               	bcf	_flags,1,c
 10137                           
 10138                           ; BSR set to: 0
 10139                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 10140  001D52  BE4D               	btfsc	_prec+1,7,c
 10141  001D54  D005               	goto	u7180
 10142  001D56  504D               	movf	_prec+1,w,c
 10143  001D58  E108               	bnz	l640
 10144  001D5A  044C               	decf	_prec,w,c
 10145  001D5C  B0D8               	btfsc	status,0,c
 10146  001D5E  D005               	goto	l640
 10147  001D60                     u7180:
 10148                           
 10149                           ; BSR set to: 0
 10150  001D60  0E00               	movlw	0
 10151  001D62  6FB4               	movwf	(dtoa@p+1)& (0+255),b
 10152  001D64  0E01               	movlw	1
 10153  001D66  6FB3               	movwf	dtoa@p& (0+255),b
 10154  001D68  D004               	goto	l642
 10155  001D6A                     l640:
 10156                           
 10157                           ; BSR set to: 0
 10158  001D6A  C04C  F0B3         	movff	_prec,dtoa@p
 10159  001D6E  C04D  F0B4         	movff	_prec+1,dtoa@p+1
 10160  001D72                     l642:
 10161                           
 10162                           ; BSR set to: 0
 10163                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 10164  001D72  C04A  F0B5         	movff	_width,dtoa@w
 10165  001D76  C04B  F0B6         	movff	_width+1,dtoa@w+1
 10166                           
 10167                           ; BSR set to: 0
 10168                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 10169  001D7A  51B7               	movf	dtoa@s& (0+255),w,b
 10170  001D7C  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
 10171  001D7E  A4D8               	btfss	status,2,c
 10172  001D80  D002               	goto	u7200
 10173                           
 10174                           ; BSR set to: 0
 10175  001D82  A44E               	btfss	_flags,2,c
 10176  001D84  D003               	goto	l6781
 10177  001D86                     u7200:
 10178                           
 10179                           ; BSR set to: 0
 10180                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 10181  001D86  07B5               	decf	dtoa@w& (0+255),f,b
 10182  001D88  A0D8               	btfss	status,0,c
 10183  001D8A  07B6               	decf	(dtoa@w+1)& (0+255),f,b
 10184  001D8C                     l6781:
 10185                           
 10186                           ; BSR set to: 0
 10187                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 10188  001D8C  0E00               	movlw	0
 10189  001D8E  6FC2               	movwf	(dtoa@i+1)& (0+255),b
 10190  001D90  0E1F               	movlw	31
 10191  001D92  6FC1               	movwf	dtoa@i& (0+255),b
 10192                           
 10193                           ; BSR set to: 0
 10194                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 10195  001D94  0E00               	movlw	0
 10196  001D96  0102               	movlb	2	; () banked
 10197  001D98  6F9F               	movwf	(_dbuf+31)& (0+255),b
 10198                           
 10199                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10200  001D9A  D07D               	goto	l6795
 10201  001D9C                     l6785:
 10202                           
 10203                           ; BSR set to: 0
 10204                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 10205  001D9C  07C1               	decf	dtoa@i& (0+255),f,b
 10206  001D9E  A0D8               	btfss	status,0,c
 10207  001DA0  07C2               	decf	(dtoa@i+1)& (0+255),f,b
 10208                           
 10209                           ; BSR set to: 0
 10210                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 10211  001DA2  0E80               	movlw	low _dbuf
 10212  001DA4  25C1               	addwf	dtoa@i& (0+255),w,b
 10213  001DA6  6ED9               	movwf	fsr2l,c
 10214  001DA8  0E02               	movlw	high _dbuf
 10215  001DAA  21C2               	addwfc	(dtoa@i+1)& (0+255),w,b
 10216  001DAC  6EDA               	movwf	fsr2h,c
 10217  001DAE  C0B9  F080         	movff	dtoa@n,___aomod@dividend
 10218  001DB2  C0BA  F081         	movff	dtoa@n+1,___aomod@dividend+1
 10219  001DB6  C0BB  F082         	movff	dtoa@n+2,___aomod@dividend+2
 10220  001DBA  C0BC  F083         	movff	dtoa@n+3,___aomod@dividend+3
 10221  001DBE  C0BD  F084         	movff	dtoa@n+4,___aomod@dividend+4
 10222  001DC2  C0BE  F085         	movff	dtoa@n+5,___aomod@dividend+5
 10223  001DC6  C0BF  F086         	movff	dtoa@n+6,___aomod@dividend+6
 10224  001DCA  C0C0  F087         	movff	dtoa@n+7,___aomod@dividend+7
 10225  001DCE  0E0A               	movlw	10
 10226  001DD0  6F88               	movwf	___aomod@divisor& (0+255),b
 10227  001DD2  0E00               	movlw	0
 10228  001DD4  6F89               	movwf	(___aomod@divisor+1)& (0+255),b
 10229  001DD6  0E00               	movlw	0
 10230  001DD8  6F8A               	movwf	(___aomod@divisor+2)& (0+255),b
 10231  001DDA  0E00               	movlw	0
 10232  001DDC  6F8B               	movwf	(___aomod@divisor+3)& (0+255),b
 10233  001DDE  0E00               	movlw	0
 10234  001DE0  6F8C               	movwf	(___aomod@divisor+4)& (0+255),b
 10235  001DE2  0E00               	movlw	0
 10236  001DE4  6F8D               	movwf	(___aomod@divisor+5)& (0+255),b
 10237  001DE6  0E00               	movlw	0
 10238  001DE8  6F8E               	movwf	(___aomod@divisor+6)& (0+255),b
 10239  001DEA  0E00               	movlw	0
 10240  001DEC  6F8F               	movwf	(___aomod@divisor+7)& (0+255),b
 10241  001DEE  ECCB  F016         	call	___aomod	;wreg free
 10242  001DF2  C080  F0A9         	movff	?___aomod,??_dtoa
 10243  001DF6  C081  F0AA         	movff	?___aomod+1,??_dtoa+1
 10244  001DFA  C082  F0AB         	movff	?___aomod+2,??_dtoa+2
 10245  001DFE  C083  F0AC         	movff	?___aomod+3,??_dtoa+3
 10246  001E02  C084  F0AD         	movff	?___aomod+4,??_dtoa+4
 10247  001E06  C085  F0AE         	movff	?___aomod+5,??_dtoa+5
 10248  001E0A  C086  F0AF         	movff	?___aomod+6,??_dtoa+6
 10249  001E0E  C087  F0B0         	movff	?___aomod+7,??_dtoa+7
 10250  001E12  C0A9  F092         	movff	??_dtoa,abs@a
 10251  001E16  C0AB  F093         	movff	??_dtoa+2,abs@a+1
 10252  001E1A  EC3A  F01E         	call	_abs	;wreg free
 10253  001E1E  0100               	movlb	0	; () banked
 10254  001E20  5192               	movf	?_abs& (0+255),w,b
 10255  001E22  0F30               	addlw	48
 10256  001E24  6EDF               	movwf	indf2,c
 10257                           
 10258                           ; BSR set to: 0
 10259                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 10260  001E26  07B3               	decf	dtoa@p& (0+255),f,b
 10261  001E28  A0D8               	btfss	status,0,c
 10262  001E2A  07B4               	decf	(dtoa@p+1)& (0+255),f,b
 10263                           
 10264                           ; BSR set to: 0
 10265                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 10266  001E2C  07B5               	decf	dtoa@w& (0+255),f,b
 10267  001E2E  A0D8               	btfss	status,0,c
 10268  001E30  07B6               	decf	(dtoa@w+1)& (0+255),f,b
 10269                           
 10270                           ; BSR set to: 0
 10271                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 10272  001E32  C0B9  F080         	movff	dtoa@n,___aodiv@dividend
 10273  001E36  C0BA  F081         	movff	dtoa@n+1,___aodiv@dividend+1
 10274  001E3A  C0BB  F082         	movff	dtoa@n+2,___aodiv@dividend+2
 10275  001E3E  C0BC  F083         	movff	dtoa@n+3,___aodiv@dividend+3
 10276  001E42  C0BD  F084         	movff	dtoa@n+4,___aodiv@dividend+4
 10277  001E46  C0BE  F085         	movff	dtoa@n+5,___aodiv@dividend+5
 10278  001E4A  C0BF  F086         	movff	dtoa@n+6,___aodiv@dividend+6
 10279  001E4E  C0C0  F087         	movff	dtoa@n+7,___aodiv@dividend+7
 10280  001E52  0E0A               	movlw	10
 10281  001E54  6F88               	movwf	___aodiv@divisor& (0+255),b
 10282  001E56  0E00               	movlw	0
 10283  001E58  6F89               	movwf	(___aodiv@divisor+1)& (0+255),b
 10284  001E5A  0E00               	movlw	0
 10285  001E5C  6F8A               	movwf	(___aodiv@divisor+2)& (0+255),b
 10286  001E5E  0E00               	movlw	0
 10287  001E60  6F8B               	movwf	(___aodiv@divisor+3)& (0+255),b
 10288  001E62  0E00               	movlw	0
 10289  001E64  6F8C               	movwf	(___aodiv@divisor+4)& (0+255),b
 10290  001E66  0E00               	movlw	0
 10291  001E68  6F8D               	movwf	(___aodiv@divisor+5)& (0+255),b
 10292  001E6A  0E00               	movlw	0
 10293  001E6C  6F8E               	movwf	(___aodiv@divisor+6)& (0+255),b
 10294  001E6E  0E00               	movlw	0
 10295  001E70  6F8F               	movwf	(___aodiv@divisor+7)& (0+255),b
 10296  001E72  ECE4  F014         	call	___aodiv	;wreg free
 10297  001E76  C080  F0B9         	movff	?___aodiv,dtoa@n
 10298  001E7A  C081  F0BA         	movff	?___aodiv+1,dtoa@n+1
 10299  001E7E  C082  F0BB         	movff	?___aodiv+2,dtoa@n+2
 10300  001E82  C083  F0BC         	movff	?___aodiv+3,dtoa@n+3
 10301  001E86  C084  F0BD         	movff	?___aodiv+4,dtoa@n+4
 10302  001E8A  C085  F0BE         	movff	?___aodiv+5,dtoa@n+5
 10303  001E8E  C086  F0BF         	movff	?___aodiv+6,dtoa@n+6
 10304  001E92  C087  F0C0         	movff	?___aodiv+7,dtoa@n+7
 10305  001E96                     l6795:
 10306                           
 10307                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10308  001E96  0100               	movlb	0	; () banked
 10309  001E98  BFC2               	btfsc	(dtoa@i+1)& (0+255),7,b
 10310  001E9A  D01F               	goto	u7250
 10311  001E9C  51C2               	movf	(dtoa@i+1)& (0+255),w,b
 10312  001E9E  E103               	bnz	u7210
 10313  001EA0  05C1               	decf	dtoa@i& (0+255),w,b
 10314  001EA2  A0D8               	btfss	status,0,c
 10315  001EA4  D01A               	goto	u7250
 10316  001EA6                     u7210:
 10317                           
 10318                           ; BSR set to: 0
 10319  001EA6  51B9               	movf	dtoa@n& (0+255),w,b
 10320  001EA8  11BA               	iorwf	(dtoa@n+1)& (0+255),w,b
 10321  001EAA  11BB               	iorwf	(dtoa@n+2)& (0+255),w,b
 10322  001EAC  11BC               	iorwf	(dtoa@n+3)& (0+255),w,b
 10323  001EAE  11BD               	iorwf	(dtoa@n+4)& (0+255),w,b
 10324  001EB0  11BE               	iorwf	(dtoa@n+5)& (0+255),w,b
 10325  001EB2  11BF               	iorwf	(dtoa@n+6)& (0+255),w,b
 10326  001EB4  11C0               	iorwf	(dtoa@n+7)& (0+255),w,b
 10327  001EB6  A4D8               	btfss	status,2,c
 10328  001EB8  D771               	goto	l6785
 10329                           
 10330                           ; BSR set to: 0
 10331  001EBA  BFB4               	btfsc	(dtoa@p+1)& (0+255),7,b
 10332  001EBC  D005               	goto	u7230
 10333  001EBE  51B4               	movf	(dtoa@p+1)& (0+255),w,b
 10334  001EC0  E102               	bnz	u7231
 10335  001EC2  05B3               	decf	dtoa@p& (0+255),w,b
 10336  001EC4  B0D8               	btfsc	status,0,c
 10337  001EC6                     u7231:
 10338  001EC6  D76A               	goto	l6785
 10339  001EC8                     u7230:
 10340                           
 10341                           ; BSR set to: 0
 10342  001EC8  BFB6               	btfsc	(dtoa@w+1)& (0+255),7,b
 10343  001ECA  D007               	goto	u7250
 10344  001ECC  51B6               	movf	(dtoa@w+1)& (0+255),w,b
 10345  001ECE  E103               	bnz	u7240
 10346  001ED0  05B5               	decf	dtoa@w& (0+255),w,b
 10347  001ED2  A0D8               	btfss	status,0,c
 10348  001ED4  D002               	goto	u7250
 10349  001ED6                     u7240:
 10350                           
 10351                           ; BSR set to: 0
 10352  001ED6  B24E               	btfsc	_flags,1,c
 10353  001ED8  D761               	goto	l6785
 10354  001EDA                     u7250:
 10355                           
 10356                           ; BSR set to: 0
 10357                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 10358  001EDA  51B7               	movf	dtoa@s& (0+255),w,b
 10359  001EDC  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
 10360  001EDE  A4D8               	btfss	status,2,c
 10361  001EE0  D002               	goto	u7270
 10362                           
 10363                           ; BSR set to: 0
 10364  001EE2  A44E               	btfss	_flags,2,c
 10365  001EE4  D017               	goto	l6819
 10366  001EE6                     u7270:
 10367                           
 10368                           ; BSR set to: 0
 10369                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 10370  001EE6  07C1               	decf	dtoa@i& (0+255),f,b
 10371  001EE8  A0D8               	btfss	status,0,c
 10372  001EEA  07C2               	decf	(dtoa@i+1)& (0+255),f,b
 10373                           
 10374                           ; BSR set to: 0
 10375                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 10376  001EEC  51B7               	movf	dtoa@s& (0+255),w,b
 10377  001EEE  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
 10378  001EF0  A4D8               	btfss	status,2,c
 10379  001EF2  D004               	goto	l6815
 10380                           
 10381                           ; BSR set to: 0
 10382  001EF4  0E00               	movlw	0
 10383  001EF6  6FB2               	movwf	(_dtoa$1226+1)& (0+255),b
 10384  001EF8  0E2B               	movlw	43
 10385  001EFA  D003               	goto	L5
 10386  001EFC                     l6815:
 10387                           
 10388                           ; BSR set to: 0
 10389  001EFC  0E00               	movlw	0
 10390  001EFE  6FB2               	movwf	(_dtoa$1226+1)& (0+255),b
 10391  001F00  0E2D               	movlw	45
 10392  001F02                     L5:
 10393  001F02  6FB1               	movwf	_dtoa$1226& (0+255),b
 10394                           
 10395                           ; BSR set to: 0
 10396  001F04  0E80               	movlw	low _dbuf
 10397  001F06  25C1               	addwf	dtoa@i& (0+255),w,b
 10398  001F08  6ED9               	movwf	fsr2l,c
 10399  001F0A  0E02               	movlw	high _dbuf
 10400  001F0C  21C2               	addwfc	(dtoa@i+1)& (0+255),w,b
 10401  001F0E  6EDA               	movwf	fsr2h,c
 10402  001F10  C0B1  FFDF         	movff	_dtoa$1226,indf2
 10403  001F14                     l6819:
 10404                           
 10405                           ; BSR set to: 0
 10406                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 10407  001F14  C09F  F094         	movff	dtoa@fp,pad@fp
 10408  001F18  C0A0  F095         	movff	dtoa@fp+1,pad@fp+1
 10409  001F1C  0E80               	movlw	low _dbuf
 10410  001F1E  25C1               	addwf	dtoa@i& (0+255),w,b
 10411  001F20  6F96               	movwf	pad@buf& (0+255),b
 10412  001F22  0E02               	movlw	high _dbuf
 10413  001F24  21C2               	addwfc	(dtoa@i+1)& (0+255),w,b
 10414  001F26  6F97               	movwf	(pad@buf+1)& (0+255),b
 10415  001F28  C0B5  F098         	movff	dtoa@w,pad@p
 10416  001F2C  C0B6  F099         	movff	dtoa@w+1,pad@p+1
 10417  001F30  EC35  F01B         	call	_pad	;wreg free
 10418  001F34  C094  F09F         	movff	?_pad,?_dtoa
 10419  001F38  C095  F0A0         	movff	?_pad+1,?_dtoa+1
 10420  001F3C  0012               	return		;funcret
 10421  001F3E                     __end_of_dtoa:
 10422                           	opt callstack 0
 10423                           
 10424 ;; *************** function _pad *****************
 10425 ;; Defined at:
 10426 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 10427 ;; Parameters:    Size  Location     Type
 10428 ;;  fp              2   20[BANK0 ] PTR struct _IO_FILE
 10429 ;;		 -> NULL(0), 
 10430 ;;  buf             2   22[BANK0 ] PTR unsigned char 
 10431 ;;		 -> dbuf(32), 
 10432 ;;  p               2   24[BANK0 ] int 
 10433 ;; Auto vars:     Size  Location     Type
 10434 ;;  w               2   29[BANK0 ] int 
 10435 ;;  i               2   27[BANK0 ] int 
 10436 ;; Return value:  Size  Location     Type
 10437 ;;                  2   20[BANK0 ] int 
 10438 ;; Registers used:
 10439 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10440 ;; Tracked objects:
 10441 ;;		On entry : 0/0
 10442 ;;		On exit  : 0/0
 10443 ;;		Unchanged: 0/0
 10444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10445 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10446 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10447 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10448 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10449 ;;Total ram usage:       11 bytes
 10450 ;; Hardware stack levels used:    1
 10451 ;; Hardware stack levels required when called:    9
 10452 ;; This function calls:
 10453 ;;		_fputc
 10454 ;;		_fputs
 10455 ;;		_strlen
 10456 ;; This function is called by:
 10457 ;;		_dtoa
 10458 ;;		_xtoa
 10459 ;; This function uses a non-reentrant model
 10460 ;;
 10461                           
 10462                           	psect	text29
 10463  00366A                     __ptext29:
 10464                           	opt callstack 0
 10465  00366A                     _pad:
 10466                           	opt callstack 16
 10467                           
 10468                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 10469                           
 10470                           ;incstack = 0
 10471  00366A  A04E               	btfss	_flags,0,c
 10472  00366C  D00A               	goto	l6623
 10473                           
 10474                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 10475  00366E  C096  F08D         	movff	pad@buf,fputs@s
 10476  003672  C097  F08E         	movff	pad@buf+1,fputs@s+1
 10477  003676  C094  F08F         	movff	pad@fp,fputs@fp
 10478  00367A  C095  F090         	movff	pad@fp+1,fputs@fp+1
 10479  00367E  EC01  F01E         	call	_fputs	;wreg free
 10480  003682                     l6623:
 10481                           
 10482                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 10483  003682  0100               	movlb	0	; () banked
 10484  003684  BF99               	btfsc	(pad@p+1)& (0+255),7,b
 10485  003686  D005               	goto	l6627
 10486                           
 10487                           ; BSR set to: 0
 10488  003688  C098  F09D         	movff	pad@p,pad@w
 10489  00368C  C099  F09E         	movff	pad@p+1,pad@w+1
 10490  003690  D004               	goto	l629
 10491  003692                     l6627:
 10492                           
 10493                           ; BSR set to: 0
 10494  003692  0E00               	movlw	0
 10495  003694  6F9E               	movwf	(pad@w+1)& (0+255),b
 10496  003696  0E00               	movlw	0
 10497  003698  6F9D               	movwf	pad@w& (0+255),b
 10498  00369A                     l629:
 10499                           
 10500                           ; BSR set to: 0
 10501                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 10502  00369A  0E00               	movlw	0
 10503  00369C  6F9C               	movwf	(pad@i+1)& (0+255),b
 10504  00369E  0E00               	movlw	0
 10505  0036A0  6F9B               	movwf	pad@i& (0+255),b
 10506                           
 10507                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 10508  0036A2  D00D               	goto	l6633
 10509  0036A4                     l6629:
 10510                           
 10511                           ; BSR set to: 0
 10512                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 10513  0036A4  0E00               	movlw	0
 10514  0036A6  6F85               	movwf	(fputc@c+1)& (0+255),b
 10515  0036A8  0E20               	movlw	32
 10516  0036AA  6F84               	movwf	fputc@c& (0+255),b
 10517  0036AC  C094  F086         	movff	pad@fp,fputc@fp
 10518  0036B0  C095  F087         	movff	pad@fp+1,fputc@fp+1
 10519  0036B4  EC82  F01C         	call	_fputc	;wreg free
 10520                           
 10521                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 10522  0036B8  0100               	movlb	0	; () banked
 10523  0036BA  4B9B               	infsnz	pad@i& (0+255),f,b
 10524  0036BC  2B9C               	incf	(pad@i+1)& (0+255),f,b
 10525  0036BE                     l6633:
 10526                           
 10527                           ; BSR set to: 0
 10528                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 10529  0036BE  519D               	movf	pad@w& (0+255),w,b
 10530  0036C0  5D9B               	subwf	pad@i& (0+255),w,b
 10531  0036C2  519C               	movf	(pad@i+1)& (0+255),w,b
 10532  0036C4  0A80               	xorlw	128
 10533  0036C6  6F9A               	movwf	??_pad& (0+255),b
 10534  0036C8  519E               	movf	(pad@w+1)& (0+255),w,b
 10535  0036CA  0A80               	xorlw	128
 10536  0036CC  599A               	subwfb	??_pad& (0+255),w,b
 10537  0036CE  A0D8               	btfss	status,0,c
 10538  0036D0  D7E9               	goto	l6629
 10539                           
 10540                           ; BSR set to: 0
 10541                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 10542  0036D2  B04E               	btfsc	_flags,0,c
 10543  0036D4  D00A               	goto	l6637
 10544                           
 10545                           ; BSR set to: 0
 10546                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 10547  0036D6  C096  F08D         	movff	pad@buf,fputs@s
 10548  0036DA  C097  F08E         	movff	pad@buf+1,fputs@s+1
 10549  0036DE  C094  F08F         	movff	pad@fp,fputs@fp
 10550  0036E2  C095  F090         	movff	pad@fp+1,fputs@fp+1
 10551  0036E6  EC01  F01E         	call	_fputs	;wreg free
 10552  0036EA                     l6637:
 10553                           
 10554                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 10555  0036EA  C096  F080         	movff	pad@buf,strlen@s
 10556  0036EE  C097  F081         	movff	pad@buf+1,strlen@s+1
 10557  0036F2  ECB8  F01E         	call	_strlen	;wreg free
 10558  0036F6  0100               	movlb	0	; () banked
 10559  0036F8  519D               	movf	pad@w& (0+255),w,b
 10560  0036FA  2580               	addwf	?_strlen& (0+255),w,b
 10561  0036FC  6F94               	movwf	?_pad& (0+255),b
 10562  0036FE  519E               	movf	(pad@w+1)& (0+255),w,b
 10563  003700  2181               	addwfc	(?_strlen+1)& (0+255),w,b
 10564  003702  6F95               	movwf	(?_pad+1)& (0+255),b
 10565                           
 10566                           ; BSR set to: 0
 10567  003704  0012               	return		;funcret
 10568  003706                     __end_of_pad:
 10569                           	opt callstack 0
 10570                           
 10571 ;; *************** function _strlen *****************
 10572 ;; Defined at:
 10573 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
 10574 ;; Parameters:    Size  Location     Type
 10575 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 10576 ;;		 -> dbuf(32), 
 10577 ;; Auto vars:     Size  Location     Type
 10578 ;;  a               2    2[BANK0 ] PTR const unsigned char 
 10579 ;;		 -> dbuf(32), 
 10580 ;; Return value:  Size  Location     Type
 10581 ;;                  2    0[BANK0 ] unsigned int 
 10582 ;; Registers used:
 10583 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10584 ;; Tracked objects:
 10585 ;;		On entry : 0/0
 10586 ;;		On exit  : 0/0
 10587 ;;		Unchanged: 0/0
 10588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10589 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10590 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10592 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10593 ;;Total ram usage:        4 bytes
 10594 ;; Hardware stack levels used:    1
 10595 ;; Hardware stack levels required when called:    3
 10596 ;; This function calls:
 10597 ;;		Nothing
 10598 ;; This function is called by:
 10599 ;;		_pad
 10600 ;; This function uses a non-reentrant model
 10601 ;;
 10602                           
 10603                           	psect	text30
 10604  003D70                     __ptext30:
 10605                           	opt callstack 0
 10606  003D70                     _strlen:
 10607                           	opt callstack 21
 10608                           
 10609                           ; BSR set to: 0
 10610                           ;incstack = 0
 10611  003D70  C080  F082         	movff	strlen@s,strlen@a
 10612  003D74  C081  F083         	movff	strlen@s+1,strlen@a+1
 10613  003D78  D003               	goto	l6605
 10614  003D7A                     l6603:
 10615  003D7A  0100               	movlb	0	; () banked
 10616  003D7C  4B80               	infsnz	strlen@s& (0+255),f,b
 10617  003D7E  2B81               	incf	(strlen@s+1)& (0+255),f,b
 10618  003D80                     l6605:
 10619  003D80  C080  FFD9         	movff	strlen@s,fsr2l
 10620  003D84  C081  FFDA         	movff	strlen@s+1,fsr2h
 10621  003D88  50DF               	movf	indf2,w,c
 10622  003D8A  A4D8               	btfss	status,2,c
 10623  003D8C  D7F6               	goto	l6603
 10624  003D8E  0100               	movlb	0	; () banked
 10625  003D90  5182               	movf	strlen@a& (0+255),w,b
 10626  003D92  5D80               	subwf	strlen@s& (0+255),w,b
 10627  003D94  6F80               	movwf	?_strlen& (0+255),b
 10628  003D96  5183               	movf	(strlen@a+1)& (0+255),w,b
 10629  003D98  5981               	subwfb	(strlen@s+1)& (0+255),w,b
 10630  003D9A  6F81               	movwf	(?_strlen+1)& (0+255),b
 10631                           
 10632                           ; BSR set to: 0
 10633  003D9C  0012               	return		;funcret
 10634  003D9E                     __end_of_strlen:
 10635                           	opt callstack 0
 10636                           
 10637 ;; *************** function _fputs *****************
 10638 ;; Defined at:
 10639 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
 10640 ;; Parameters:    Size  Location     Type
 10641 ;;  s               2   13[BANK0 ] PTR const unsigned char 
 10642 ;;		 -> dbuf(32), 
 10643 ;;  fp              2   15[BANK0 ] PTR struct _IO_FILE
 10644 ;;		 -> NULL(0), 
 10645 ;; Auto vars:     Size  Location     Type
 10646 ;;  i               2   18[BANK0 ] int 
 10647 ;;  c               1   17[BANK0 ] unsigned char 
 10648 ;; Return value:  Size  Location     Type
 10649 ;;                  2   13[BANK0 ] int 
 10650 ;; Registers used:
 10651 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10652 ;; Tracked objects:
 10653 ;;		On entry : 0/0
 10654 ;;		On exit  : 0/0
 10655 ;;		Unchanged: 0/0
 10656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10657 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10658 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10660 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10661 ;;Total ram usage:        7 bytes
 10662 ;; Hardware stack levels used:    1
 10663 ;; Hardware stack levels required when called:    8
 10664 ;; This function calls:
 10665 ;;		_fputc
 10666 ;; This function is called by:
 10667 ;;		_pad
 10668 ;; This function uses a non-reentrant model
 10669 ;;
 10670                           
 10671                           	psect	text31
 10672  003C02                     __ptext31:
 10673                           	opt callstack 0
 10674  003C02                     _fputs:
 10675                           	opt callstack 16
 10676                           
 10677                           ; BSR set to: 0
 10678                           ;incstack = 0
 10679  003C02  0E00               	movlw	0
 10680  003C04  0100               	movlb	0	; () banked
 10681  003C06  6F93               	movwf	(fputs@i+1)& (0+255),b
 10682  003C08  0E00               	movlw	0
 10683  003C0A  6F92               	movwf	fputs@i& (0+255),b
 10684  003C0C  D00C               	goto	l6599
 10685  003C0E                     l6595:
 10686                           
 10687                           ; BSR set to: 0
 10688  003C0E  C091  F084         	movff	fputs@c,fputc@c
 10689  003C12  6B85               	clrf	(fputc@c+1)& (0+255),b
 10690  003C14  C08F  F086         	movff	fputs@fp,fputc@fp
 10691  003C18  C090  F087         	movff	fputs@fp+1,fputc@fp+1
 10692  003C1C  EC82  F01C         	call	_fputc	;wreg free
 10693  003C20  0100               	movlb	0	; () banked
 10694  003C22  4B92               	infsnz	fputs@i& (0+255),f,b
 10695  003C24  2B93               	incf	(fputs@i+1)& (0+255),f,b
 10696  003C26                     l6599:
 10697                           
 10698                           ; BSR set to: 0
 10699  003C26  5192               	movf	fputs@i& (0+255),w,b
 10700  003C28  258D               	addwf	fputs@s& (0+255),w,b
 10701  003C2A  6ED9               	movwf	fsr2l,c
 10702  003C2C  5193               	movf	(fputs@i+1)& (0+255),w,b
 10703  003C2E  218E               	addwfc	(fputs@s+1)& (0+255),w,b
 10704  003C30  6EDA               	movwf	fsr2h,c
 10705  003C32  50DF               	movf	indf2,w,c
 10706  003C34  6F91               	movwf	fputs@c& (0+255),b
 10707  003C36  5191               	movf	fputs@c& (0+255),w,b
 10708  003C38  B4D8               	btfsc	status,2,c
 10709  003C3A  0012               	return	
 10710  003C3C  D7E8               	goto	l6595
 10711  003C3E                     __end_of_fputs:
 10712                           	opt callstack 0
 10713                           
 10714 ;; *************** function _fputc *****************
 10715 ;; Defined at:
 10716 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
 10717 ;; Parameters:    Size  Location     Type
 10718 ;;  c               2    4[BANK0 ] int 
 10719 ;;  fp              2    6[BANK0 ] PTR struct _IO_FILE
 10720 ;;		 -> NULL(0), 
 10721 ;; Auto vars:     Size  Location     Type
 10722 ;;		None
 10723 ;; Return value:  Size  Location     Type
 10724 ;;                  2    4[BANK0 ] int 
 10725 ;; Registers used:
 10726 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10727 ;; Tracked objects:
 10728 ;;		On entry : 0/0
 10729 ;;		On exit  : 0/0
 10730 ;;		Unchanged: 0/0
 10731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10732 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10734 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10735 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10736 ;;Total ram usage:        9 bytes
 10737 ;; Hardware stack levels used:    1
 10738 ;; Hardware stack levels required when called:    7
 10739 ;; This function calls:
 10740 ;;		_putch
 10741 ;; This function is called by:
 10742 ;;		_pad
 10743 ;;		_vfpfcnvrt
 10744 ;;		_fputs
 10745 ;; This function uses a non-reentrant model
 10746 ;;
 10747                           
 10748                           	psect	text32
 10749  003904                     __ptext32:
 10750                           	opt callstack 0
 10751  003904                     _fputc:
 10752                           	opt callstack 16
 10753                           
 10754                           ; BSR set to: 0
 10755                           ;incstack = 0
 10756  003904  0100               	movlb	0	; () banked
 10757  003906  5186               	movf	fputc@fp& (0+255),w,b
 10758  003908  1187               	iorwf	(fputc@fp+1)& (0+255),w,b
 10759  00390A  B4D8               	btfsc	status,2,c
 10760  00390C  D004               	goto	u6780
 10761                           
 10762                           ; BSR set to: 0
 10763  00390E  5186               	movf	fputc@fp& (0+255),w,b
 10764  003910  1187               	iorwf	(fputc@fp+1)& (0+255),w,b
 10765  003912  A4D8               	btfss	status,2,c
 10766  003914  D004               	goto	l6585
 10767  003916                     u6780:
 10768                           
 10769                           ; BSR set to: 0
 10770  003916  5184               	movf	fputc@c& (0+255),w,b
 10771  003918  EC59  F01F         	call	_putch
 10772  00391C  0012               	return	
 10773  00391E                     l6585:
 10774                           
 10775                           ; BSR set to: 0
 10776  00391E  EE20 F004          	lfsr	2,4
 10777  003922  5186               	movf	fputc@fp& (0+255),w,b
 10778  003924  26D9               	addwf	fsr2l,f,c
 10779  003926  5187               	movf	(fputc@fp+1)& (0+255),w,b
 10780  003928  22DA               	addwfc	fsr2h,f,c
 10781  00392A  50DE               	movf	postinc2,w,c
 10782  00392C  10DE               	iorwf	postinc2,w,c
 10783  00392E  B4D8               	btfsc	status,2,c
 10784  003930  D016               	goto	u6800
 10785                           
 10786                           ; BSR set to: 0
 10787  003932  EE20 F004          	lfsr	2,4
 10788  003936  5186               	movf	fputc@fp& (0+255),w,b
 10789  003938  26D9               	addwf	fsr2l,f,c
 10790  00393A  5187               	movf	(fputc@fp+1)& (0+255),w,b
 10791  00393C  22DA               	addwfc	fsr2h,f,c
 10792  00393E  EE10 F002          	lfsr	1,2
 10793  003942  5186               	movf	fputc@fp& (0+255),w,b
 10794  003944  26E1               	addwf	fsr1l,f,c
 10795  003946  5187               	movf	(fputc@fp+1)& (0+255),w,b
 10796  003948  22E2               	addwfc	fsr1h,f,c
 10797  00394A  50DE               	movf	postinc2,w,c
 10798  00394C  5CE6               	subwf	postinc1,w,c
 10799  00394E  50E6               	movf	postinc1,w,c
 10800  003950  0A80               	xorlw	128
 10801  003952  6F8C               	movwf	(??_fputc+4)& (0+255),b
 10802  003954  50DE               	movf	postinc2,w,c
 10803  003956  0A80               	xorlw	128
 10804  003958  598C               	subwfb	(??_fputc+4)& (0+255),w,b
 10805  00395A  B0D8               	btfsc	status,0,c
 10806  00395C  0012               	return	
 10807  00395E                     u6800:
 10808                           
 10809                           ; BSR set to: 0
 10810  00395E  EE20 F002          	lfsr	2,2
 10811  003962  5186               	movf	fputc@fp& (0+255),w,b
 10812  003964  26D9               	addwf	fsr2l,f,c
 10813  003966  5187               	movf	(fputc@fp+1)& (0+255),w,b
 10814  003968  22DA               	addwfc	fsr2h,f,c
 10815  00396A  2ADE               	incf	postinc2,f,c
 10816  00396C  0E00               	movlw	0
 10817  00396E  22DD               	addwfc	postdec2,f,c
 10818  003970  0012               	return		;funcret
 10819  003972                     __end_of_fputc:
 10820                           	opt callstack 0
 10821                           
 10822 ;; *************** function _putch *****************
 10823 ;; Defined at:
 10824 ;;		line 102 in file "lcd.c"
 10825 ;; Parameters:    Size  Location     Type
 10826 ;;  data            1    wreg     unsigned char 
 10827 ;; Auto vars:     Size  Location     Type
 10828 ;;  data            1    3[BANK0 ] unsigned char 
 10829 ;; Return value:  Size  Location     Type
 10830 ;;                  1    wreg      void 
 10831 ;; Registers used:
 10832 ;;		wreg, status,2, status,0, cstack
 10833 ;; Tracked objects:
 10834 ;;		On entry : 0/0
 10835 ;;		On exit  : 0/0
 10836 ;;		Unchanged: 0/0
 10837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10839 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10841 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10842 ;;Total ram usage:        1 bytes
 10843 ;; Hardware stack levels used:    1
 10844 ;; Hardware stack levels required when called:    6
 10845 ;; This function calls:
 10846 ;;		_send_byte
 10847 ;; This function is called by:
 10848 ;;		_fputc
 10849 ;; This function uses a non-reentrant model
 10850 ;;
 10851                           
 10852                           	psect	text33
 10853  003EB2                     __ptext33:
 10854                           	opt callstack 0
 10855  003EB2                     _putch:
 10856                           	opt callstack 16
 10857                           
 10858                           ;incstack = 0
 10859                           ;putch@data stored from wreg
 10860  003EB2  0100               	movlb	0	; () banked
 10861  003EB4  6F83               	movwf	putch@data& (0+255),b
 10862                           
 10863                           ;lcd.c: 103:     LATDbits.LATD2 = 1;
 10864  003EB6  848C               	bsf	3980,2,c	;volatile
 10865                           
 10866                           ;lcd.c: 104:     send_byte((unsigned char)data);
 10867  003EB8  0100               	movlb	0	; () banked
 10868  003EBA  5183               	movf	putch@data& (0+255),w,b
 10869  003EBC  EC43  F01F         	call	_send_byte
 10870  003EC0  0012               	return		;funcret
 10871  003EC2                     __end_of_putch:
 10872                           	opt callstack 0
 10873                           
 10874 ;; *************** function _abs *****************
 10875 ;; Defined at:
 10876 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
 10877 ;; Parameters:    Size  Location     Type
 10878 ;;  a               2   18[BANK0 ] int 
 10879 ;; Auto vars:     Size  Location     Type
 10880 ;;		None
 10881 ;; Return value:  Size  Location     Type
 10882 ;;                  2   18[BANK0 ] int 
 10883 ;; Registers used:
 10884 ;;		wreg, status,2, status,0
 10885 ;; Tracked objects:
 10886 ;;		On entry : 0/0
 10887 ;;		On exit  : 0/0
 10888 ;;		Unchanged: 0/0
 10889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10890 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10892 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10893 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10894 ;;Total ram usage:        4 bytes
 10895 ;; Hardware stack levels used:    1
 10896 ;; Hardware stack levels required when called:    3
 10897 ;; This function calls:
 10898 ;;		Nothing
 10899 ;; This function is called by:
 10900 ;;		_ultrasonic_main
 10901 ;;		_dtoa
 10902 ;; This function uses a non-reentrant model
 10903 ;;
 10904                           
 10905                           	psect	text34
 10906  003C74                     __ptext34:
 10907                           	opt callstack 0
 10908  003C74                     _abs:
 10909                           	opt callstack 22
 10910                           
 10911                           ;incstack = 0
 10912  003C74  0100               	movlb	0	; () banked
 10913  003C76  BF93               	btfsc	(abs@a+1)& (0+255),7,b
 10914  003C78  D005               	goto	u6850
 10915  003C7A  5193               	movf	(abs@a+1)& (0+255),w,b
 10916  003C7C  E110               	bnz	l1407
 10917  003C7E  0592               	decf	abs@a& (0+255),w,b
 10918  003C80  B0D8               	btfsc	status,0,c
 10919  003C82  D00D               	goto	l1407
 10920  003C84                     u6850:
 10921                           
 10922                           ; BSR set to: 0
 10923  003C84  C092  F094         	movff	abs@a,??_abs
 10924  003C88  C093  F095         	movff	abs@a+1,??_abs+1
 10925  003C8C  1F94               	comf	??_abs& (0+255),f,b
 10926  003C8E  1F95               	comf	(??_abs+1)& (0+255),f,b
 10927  003C90  4B94               	infsnz	??_abs& (0+255),f,b
 10928  003C92  2B95               	incf	(??_abs+1)& (0+255),f,b
 10929  003C94  C094  F092         	movff	??_abs,?_abs
 10930  003C98  C095  F093         	movff	??_abs+1,?_abs+1
 10931  003C9C  0012               	return	
 10932  003C9E                     l1407:
 10933                           
 10934                           ; BSR set to: 0
 10935  003C9E  C092  F092         	movff	abs@a,?_abs
 10936  003CA2  C093  F093         	movff	abs@a+1,?_abs+1
 10937                           
 10938                           ; BSR set to: 0
 10939  003CA6  0012               	return		;funcret
 10940  003CA8                     __end_of_abs:
 10941                           	opt callstack 0
 10942                           
 10943 ;; *************** function ___aomod *****************
 10944 ;; Defined at:
 10945 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
 10946 ;; Parameters:    Size  Location     Type
 10947 ;;  dividend        8    0[BANK0 ] long long 
 10948 ;;  divisor         8    8[BANK0 ] long long 
 10949 ;; Auto vars:     Size  Location     Type
 10950 ;;  sign            1   17[BANK0 ] unsigned char 
 10951 ;;  counter         1   16[BANK0 ] unsigned char 
 10952 ;; Return value:  Size  Location     Type
 10953 ;;                  8    0[BANK0 ] long long 
 10954 ;; Registers used:
 10955 ;;		wreg, status,2, status,0
 10956 ;; Tracked objects:
 10957 ;;		On entry : 0/0
 10958 ;;		On exit  : 0/0
 10959 ;;		Unchanged: 0/0
 10960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10961 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10962 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10964 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10965 ;;Total ram usage:       18 bytes
 10966 ;; Hardware stack levels used:    1
 10967 ;; Hardware stack levels required when called:    3
 10968 ;; This function calls:
 10969 ;;		Nothing
 10970 ;; This function is called by:
 10971 ;;		_dtoa
 10972 ;; This function uses a non-reentrant model
 10973 ;;
 10974                           
 10975                           	psect	text35
 10976  002D96                     __ptext35:
 10977                           	opt callstack 0
 10978  002D96                     ___aomod:
 10979                           	opt callstack 22
 10980                           
 10981                           ; BSR set to: 0
 10982                           ;incstack = 0
 10983  002D96  0E00               	movlw	0
 10984  002D98  0100               	movlb	0	; () banked
 10985  002D9A  6F91               	movwf	___aomod@sign& (0+255),b
 10986                           
 10987                           ; BSR set to: 0
 10988  002D9C  AF87               	btfss	(___aomod@dividend+7)& (0+255),7,b
 10989  002D9E  D012               	goto	l6721
 10990                           
 10991                           ; BSR set to: 0
 10992  002DA0  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
 10993  002DA2  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
 10994  002DA4  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
 10995  002DA6  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
 10996  002DA8  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
 10997  002DAA  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
 10998  002DAC  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
 10999  002DAE  6D80               	negf	___aomod@dividend& (0+255),b
 11000  002DB0  0E00               	movlw	0
 11001  002DB2  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 11002  002DB4  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 11003  002DB6  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 11004  002DB8  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 11005  002DBA  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 11006  002DBC  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 11007  002DBE  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 11008                           
 11009                           ; BSR set to: 0
 11010  002DC0  0E01               	movlw	1
 11011  002DC2  6F91               	movwf	___aomod@sign& (0+255),b
 11012  002DC4                     l6721:
 11013                           
 11014                           ; BSR set to: 0
 11015  002DC4  AF8F               	btfss	(___aomod@divisor+7)& (0+255),7,b
 11016  002DC6  D010               	goto	l6725
 11017                           
 11018                           ; BSR set to: 0
 11019  002DC8  1F8F               	comf	(___aomod@divisor+7)& (0+255),f,b
 11020  002DCA  1F8E               	comf	(___aomod@divisor+6)& (0+255),f,b
 11021  002DCC  1F8D               	comf	(___aomod@divisor+5)& (0+255),f,b
 11022  002DCE  1F8C               	comf	(___aomod@divisor+4)& (0+255),f,b
 11023  002DD0  1F8B               	comf	(___aomod@divisor+3)& (0+255),f,b
 11024  002DD2  1F8A               	comf	(___aomod@divisor+2)& (0+255),f,b
 11025  002DD4  1F89               	comf	(___aomod@divisor+1)& (0+255),f,b
 11026  002DD6  6D88               	negf	___aomod@divisor& (0+255),b
 11027  002DD8  0E00               	movlw	0
 11028  002DDA  2389               	addwfc	(___aomod@divisor+1)& (0+255),f,b
 11029  002DDC  238A               	addwfc	(___aomod@divisor+2)& (0+255),f,b
 11030  002DDE  238B               	addwfc	(___aomod@divisor+3)& (0+255),f,b
 11031  002DE0  238C               	addwfc	(___aomod@divisor+4)& (0+255),f,b
 11032  002DE2  238D               	addwfc	(___aomod@divisor+5)& (0+255),f,b
 11033  002DE4  238E               	addwfc	(___aomod@divisor+6)& (0+255),f,b
 11034  002DE6  238F               	addwfc	(___aomod@divisor+7)& (0+255),f,b
 11035  002DE8                     l6725:
 11036                           
 11037                           ; BSR set to: 0
 11038  002DE8  5188               	movf	___aomod@divisor& (0+255),w,b
 11039  002DEA  1189               	iorwf	(___aomod@divisor+1)& (0+255),w,b
 11040  002DEC  118A               	iorwf	(___aomod@divisor+2)& (0+255),w,b
 11041  002DEE  118B               	iorwf	(___aomod@divisor+3)& (0+255),w,b
 11042  002DF0  118C               	iorwf	(___aomod@divisor+4)& (0+255),w,b
 11043  002DF2  118D               	iorwf	(___aomod@divisor+5)& (0+255),w,b
 11044  002DF4  118E               	iorwf	(___aomod@divisor+6)& (0+255),w,b
 11045  002DF6  118F               	iorwf	(___aomod@divisor+7)& (0+255),w,b
 11046  002DF8  B4D8               	btfsc	status,2,c
 11047  002DFA  D03C               	goto	l6741
 11048                           
 11049                           ; BSR set to: 0
 11050  002DFC  0E01               	movlw	1
 11051  002DFE  6F90               	movwf	___aomod@counter& (0+255),b
 11052  002E00  D00A               	goto	l6731
 11053  002E02                     l6729:
 11054                           
 11055                           ; BSR set to: 0
 11056  002E02  90D8               	bcf	status,0,c
 11057  002E04  3788               	rlcf	___aomod@divisor& (0+255),f,b
 11058  002E06  3789               	rlcf	(___aomod@divisor+1)& (0+255),f,b
 11059  002E08  378A               	rlcf	(___aomod@divisor+2)& (0+255),f,b
 11060  002E0A  378B               	rlcf	(___aomod@divisor+3)& (0+255),f,b
 11061  002E0C  378C               	rlcf	(___aomod@divisor+4)& (0+255),f,b
 11062  002E0E  378D               	rlcf	(___aomod@divisor+5)& (0+255),f,b
 11063  002E10  378E               	rlcf	(___aomod@divisor+6)& (0+255),f,b
 11064  002E12  378F               	rlcf	(___aomod@divisor+7)& (0+255),f,b
 11065  002E14  2B90               	incf	___aomod@counter& (0+255),f,b
 11066  002E16                     l6731:
 11067                           
 11068                           ; BSR set to: 0
 11069  002E16  AF8F               	btfss	(___aomod@divisor+7)& (0+255),7,b
 11070  002E18  D7F4               	goto	l6729
 11071  002E1A                     u7090:
 11072                           
 11073                           ; BSR set to: 0
 11074  002E1A  5188               	movf	___aomod@divisor& (0+255),w,b
 11075  002E1C  5D80               	subwf	___aomod@dividend& (0+255),w,b
 11076  002E1E  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
 11077  002E20  5981               	subwfb	(___aomod@dividend+1)& (0+255),w,b
 11078  002E22  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
 11079  002E24  5982               	subwfb	(___aomod@dividend+2)& (0+255),w,b
 11080  002E26  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
 11081  002E28  5983               	subwfb	(___aomod@dividend+3)& (0+255),w,b
 11082  002E2A  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
 11083  002E2C  5984               	subwfb	(___aomod@dividend+4)& (0+255),w,b
 11084  002E2E  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
 11085  002E30  5985               	subwfb	(___aomod@dividend+5)& (0+255),w,b
 11086  002E32  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
 11087  002E34  5986               	subwfb	(___aomod@dividend+6)& (0+255),w,b
 11088  002E36  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
 11089  002E38  5987               	subwfb	(___aomod@dividend+7)& (0+255),w,b
 11090  002E3A  A0D8               	btfss	status,0,c
 11091  002E3C  D010               	goto	l6737
 11092                           
 11093                           ; BSR set to: 0
 11094  002E3E  5188               	movf	___aomod@divisor& (0+255),w,b
 11095  002E40  5F80               	subwf	___aomod@dividend& (0+255),f,b
 11096  002E42  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
 11097  002E44  5B81               	subwfb	(___aomod@dividend+1)& (0+255),f,b
 11098  002E46  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
 11099  002E48  5B82               	subwfb	(___aomod@dividend+2)& (0+255),f,b
 11100  002E4A  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
 11101  002E4C  5B83               	subwfb	(___aomod@dividend+3)& (0+255),f,b
 11102  002E4E  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
 11103  002E50  5B84               	subwfb	(___aomod@dividend+4)& (0+255),f,b
 11104  002E52  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
 11105  002E54  5B85               	subwfb	(___aomod@dividend+5)& (0+255),f,b
 11106  002E56  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
 11107  002E58  5B86               	subwfb	(___aomod@dividend+6)& (0+255),f,b
 11108  002E5A  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
 11109  002E5C  5B87               	subwfb	(___aomod@dividend+7)& (0+255),f,b
 11110  002E5E                     l6737:
 11111                           
 11112                           ; BSR set to: 0
 11113  002E5E  90D8               	bcf	status,0,c
 11114  002E60  338F               	rrcf	(___aomod@divisor+7)& (0+255),f,b
 11115  002E62  338E               	rrcf	(___aomod@divisor+6)& (0+255),f,b
 11116  002E64  338D               	rrcf	(___aomod@divisor+5)& (0+255),f,b
 11117  002E66  338C               	rrcf	(___aomod@divisor+4)& (0+255),f,b
 11118  002E68  338B               	rrcf	(___aomod@divisor+3)& (0+255),f,b
 11119  002E6A  338A               	rrcf	(___aomod@divisor+2)& (0+255),f,b
 11120  002E6C  3389               	rrcf	(___aomod@divisor+1)& (0+255),f,b
 11121  002E6E  3388               	rrcf	___aomod@divisor& (0+255),f,b
 11122                           
 11123                           ; BSR set to: 0
 11124  002E70  2F90               	decfsz	___aomod@counter& (0+255),f,b
 11125  002E72  D7D3               	goto	u7090
 11126  002E74                     l6741:
 11127                           
 11128                           ; BSR set to: 0
 11129  002E74  5191               	movf	___aomod@sign& (0+255),w,b
 11130  002E76  B4D8               	btfsc	status,2,c
 11131  002E78  D010               	goto	l6745
 11132                           
 11133                           ; BSR set to: 0
 11134  002E7A  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
 11135  002E7C  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
 11136  002E7E  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
 11137  002E80  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
 11138  002E82  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
 11139  002E84  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
 11140  002E86  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
 11141  002E88  6D80               	negf	___aomod@dividend& (0+255),b
 11142  002E8A  0E00               	movlw	0
 11143  002E8C  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 11144  002E8E  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 11145  002E90  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 11146  002E92  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 11147  002E94  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 11148  002E96  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 11149  002E98  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 11150  002E9A                     l6745:
 11151                           
 11152                           ; BSR set to: 0
 11153  002E9A  C080  F080         	movff	___aomod@dividend,?___aomod
 11154  002E9E  C081  F081         	movff	___aomod@dividend+1,?___aomod+1
 11155  002EA2  C082  F082         	movff	___aomod@dividend+2,?___aomod+2
 11156  002EA6  C083  F083         	movff	___aomod@dividend+3,?___aomod+3
 11157  002EAA  C084  F084         	movff	___aomod@dividend+4,?___aomod+4
 11158  002EAE  C085  F085         	movff	___aomod@dividend+5,?___aomod+5
 11159  002EB2  C086  F086         	movff	___aomod@dividend+6,?___aomod+6
 11160  002EB6  C087  F087         	movff	___aomod@dividend+7,?___aomod+7
 11161                           
 11162                           ; BSR set to: 0
 11163  002EBA  0012               	return		;funcret
 11164  002EBC                     __end_of___aomod:
 11165                           	opt callstack 0
 11166                           
 11167 ;; *************** function ___aodiv *****************
 11168 ;; Defined at:
 11169 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
 11170 ;; Parameters:    Size  Location     Type
 11171 ;;  dividend        8    0[BANK0 ] long long 
 11172 ;;  divisor         8    8[BANK0 ] long long 
 11173 ;; Auto vars:     Size  Location     Type
 11174 ;;  quotient        8   18[BANK0 ] long long 
 11175 ;;  sign            1   17[BANK0 ] unsigned char 
 11176 ;;  counter         1   16[BANK0 ] unsigned char 
 11177 ;; Return value:  Size  Location     Type
 11178 ;;                  8    0[BANK0 ] long long 
 11179 ;; Registers used:
 11180 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11181 ;; Tracked objects:
 11182 ;;		On entry : 0/0
 11183 ;;		On exit  : 0/0
 11184 ;;		Unchanged: 0/0
 11185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11186 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11187 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11189 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11190 ;;Total ram usage:       26 bytes
 11191 ;; Hardware stack levels used:    1
 11192 ;; Hardware stack levels required when called:    3
 11193 ;; This function calls:
 11194 ;;		Nothing
 11195 ;; This function is called by:
 11196 ;;		_dtoa
 11197 ;; This function uses a non-reentrant model
 11198 ;;
 11199                           
 11200                           	psect	text36
 11201  0029C8                     __ptext36:
 11202                           	opt callstack 0
 11203  0029C8                     ___aodiv:
 11204                           	opt callstack 22
 11205                           
 11206                           ; BSR set to: 0
 11207                           ;incstack = 0
 11208  0029C8  0E00               	movlw	0
 11209  0029CA  0100               	movlb	0	; () banked
 11210  0029CC  6F91               	movwf	___aodiv@sign& (0+255),b
 11211                           
 11212                           ; BSR set to: 0
 11213  0029CE  AF8F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 11214  0029D0  D012               	goto	l6677
 11215                           
 11216                           ; BSR set to: 0
 11217  0029D2  1F8F               	comf	(___aodiv@divisor+7)& (0+255),f,b
 11218  0029D4  1F8E               	comf	(___aodiv@divisor+6)& (0+255),f,b
 11219  0029D6  1F8D               	comf	(___aodiv@divisor+5)& (0+255),f,b
 11220  0029D8  1F8C               	comf	(___aodiv@divisor+4)& (0+255),f,b
 11221  0029DA  1F8B               	comf	(___aodiv@divisor+3)& (0+255),f,b
 11222  0029DC  1F8A               	comf	(___aodiv@divisor+2)& (0+255),f,b
 11223  0029DE  1F89               	comf	(___aodiv@divisor+1)& (0+255),f,b
 11224  0029E0  6D88               	negf	___aodiv@divisor& (0+255),b
 11225  0029E2  0E00               	movlw	0
 11226  0029E4  2389               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
 11227  0029E6  238A               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
 11228  0029E8  238B               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
 11229  0029EA  238C               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
 11230  0029EC  238D               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
 11231  0029EE  238E               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
 11232  0029F0  238F               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
 11233                           
 11234                           ; BSR set to: 0
 11235  0029F2  0E01               	movlw	1
 11236  0029F4  6F91               	movwf	___aodiv@sign& (0+255),b
 11237  0029F6                     l6677:
 11238                           
 11239                           ; BSR set to: 0
 11240  0029F6  AF87               	btfss	(___aodiv@dividend+7)& (0+255),7,b
 11241  0029F8  D012               	goto	l6683
 11242                           
 11243                           ; BSR set to: 0
 11244  0029FA  1F87               	comf	(___aodiv@dividend+7)& (0+255),f,b
 11245  0029FC  1F86               	comf	(___aodiv@dividend+6)& (0+255),f,b
 11246  0029FE  1F85               	comf	(___aodiv@dividend+5)& (0+255),f,b
 11247  002A00  1F84               	comf	(___aodiv@dividend+4)& (0+255),f,b
 11248  002A02  1F83               	comf	(___aodiv@dividend+3)& (0+255),f,b
 11249  002A04  1F82               	comf	(___aodiv@dividend+2)& (0+255),f,b
 11250  002A06  1F81               	comf	(___aodiv@dividend+1)& (0+255),f,b
 11251  002A08  6D80               	negf	___aodiv@dividend& (0+255),b
 11252  002A0A  0E00               	movlw	0
 11253  002A0C  2381               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
 11254  002A0E  2382               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
 11255  002A10  2383               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
 11256  002A12  2384               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
 11257  002A14  2385               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
 11258  002A16  2386               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
 11259  002A18  2387               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
 11260                           
 11261                           ; BSR set to: 0
 11262  002A1A  0E01               	movlw	1
 11263  002A1C  1B91               	xorwf	___aodiv@sign& (0+255),f,b
 11264  002A1E                     l6683:
 11265                           
 11266                           ; BSR set to: 0
 11267  002A1E  EE20  F092         	lfsr	2,___aodiv@quotient
 11268  002A22  0E07               	movlw	7
 11269  002A24                     u7011:
 11270  002A24  6ADE               	clrf	postinc2,c
 11271  002A26  06E8               	decf	wreg,f,c
 11272  002A28  E2FD               	bc	u7011
 11273                           
 11274                           ; BSR set to: 0
 11275  002A2A  5188               	movf	___aodiv@divisor& (0+255),w,b
 11276  002A2C  1189               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
 11277  002A2E  118A               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
 11278  002A30  118B               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
 11279  002A32  118C               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
 11280  002A34  118D               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
 11281  002A36  118E               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
 11282  002A38  118F               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
 11283  002A3A  B4D8               	btfsc	status,2,c
 11284  002A3C  D046               	goto	l6705
 11285                           
 11286                           ; BSR set to: 0
 11287  002A3E  0E01               	movlw	1
 11288  002A40  6F90               	movwf	___aodiv@counter& (0+255),b
 11289  002A42  D00A               	goto	l6691
 11290  002A44                     l6689:
 11291                           
 11292                           ; BSR set to: 0
 11293  002A44  90D8               	bcf	status,0,c
 11294  002A46  3788               	rlcf	___aodiv@divisor& (0+255),f,b
 11295  002A48  3789               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
 11296  002A4A  378A               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
 11297  002A4C  378B               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
 11298  002A4E  378C               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
 11299  002A50  378D               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
 11300  002A52  378E               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
 11301  002A54  378F               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
 11302  002A56  2B90               	incf	___aodiv@counter& (0+255),f,b
 11303  002A58                     l6691:
 11304                           
 11305                           ; BSR set to: 0
 11306  002A58  AF8F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 11307  002A5A  D7F4               	goto	l6689
 11308  002A5C                     u7030:
 11309                           
 11310                           ; BSR set to: 0
 11311  002A5C  90D8               	bcf	status,0,c
 11312  002A5E  3792               	rlcf	___aodiv@quotient& (0+255),f,b
 11313  002A60  3793               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
 11314  002A62  3794               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
 11315  002A64  3795               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
 11316  002A66  3796               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
 11317  002A68  3797               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
 11318  002A6A  3798               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
 11319  002A6C  3799               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
 11320                           
 11321                           ; BSR set to: 0
 11322  002A6E  5188               	movf	___aodiv@divisor& (0+255),w,b
 11323  002A70  5D80               	subwf	___aodiv@dividend& (0+255),w,b
 11324  002A72  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
 11325  002A74  5981               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
 11326  002A76  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
 11327  002A78  5982               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
 11328  002A7A  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
 11329  002A7C  5983               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
 11330  002A7E  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
 11331  002A80  5984               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
 11332  002A82  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
 11333  002A84  5985               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
 11334  002A86  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
 11335  002A88  5986               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
 11336  002A8A  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
 11337  002A8C  5987               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
 11338  002A8E  A0D8               	btfss	status,0,c
 11339  002A90  D011               	goto	l6701
 11340                           
 11341                           ; BSR set to: 0
 11342  002A92  5188               	movf	___aodiv@divisor& (0+255),w,b
 11343  002A94  5F80               	subwf	___aodiv@dividend& (0+255),f,b
 11344  002A96  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
 11345  002A98  5B81               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
 11346  002A9A  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
 11347  002A9C  5B82               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
 11348  002A9E  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
 11349  002AA0  5B83               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
 11350  002AA2  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
 11351  002AA4  5B84               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
 11352  002AA6  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
 11353  002AA8  5B85               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
 11354  002AAA  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
 11355  002AAC  5B86               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
 11356  002AAE  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
 11357  002AB0  5B87               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
 11358                           
 11359                           ; BSR set to: 0
 11360  002AB2  8192               	bsf	___aodiv@quotient& (0+255),0,b
 11361  002AB4                     l6701:
 11362                           
 11363                           ; BSR set to: 0
 11364  002AB4  90D8               	bcf	status,0,c
 11365  002AB6  338F               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
 11366  002AB8  338E               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
 11367  002ABA  338D               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
 11368  002ABC  338C               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
 11369  002ABE  338B               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
 11370  002AC0  338A               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
 11371  002AC2  3389               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
 11372  002AC4  3388               	rrcf	___aodiv@divisor& (0+255),f,b
 11373                           
 11374                           ; BSR set to: 0
 11375  002AC6  2F90               	decfsz	___aodiv@counter& (0+255),f,b
 11376  002AC8  D7C9               	goto	u7030
 11377  002ACA                     l6705:
 11378                           
 11379                           ; BSR set to: 0
 11380  002ACA  5191               	movf	___aodiv@sign& (0+255),w,b
 11381  002ACC  B4D8               	btfsc	status,2,c
 11382  002ACE  D010               	goto	l6709
 11383                           
 11384                           ; BSR set to: 0
 11385  002AD0  1F99               	comf	(___aodiv@quotient+7)& (0+255),f,b
 11386  002AD2  1F98               	comf	(___aodiv@quotient+6)& (0+255),f,b
 11387  002AD4  1F97               	comf	(___aodiv@quotient+5)& (0+255),f,b
 11388  002AD6  1F96               	comf	(___aodiv@quotient+4)& (0+255),f,b
 11389  002AD8  1F95               	comf	(___aodiv@quotient+3)& (0+255),f,b
 11390  002ADA  1F94               	comf	(___aodiv@quotient+2)& (0+255),f,b
 11391  002ADC  1F93               	comf	(___aodiv@quotient+1)& (0+255),f,b
 11392  002ADE  6D92               	negf	___aodiv@quotient& (0+255),b
 11393  002AE0  0E00               	movlw	0
 11394  002AE2  2393               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
 11395  002AE4  2394               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
 11396  002AE6  2395               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
 11397  002AE8  2396               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
 11398  002AEA  2397               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
 11399  002AEC  2398               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
 11400  002AEE  2399               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
 11401  002AF0                     l6709:
 11402                           
 11403                           ; BSR set to: 0
 11404  002AF0  C092  F080         	movff	___aodiv@quotient,?___aodiv
 11405  002AF4  C093  F081         	movff	___aodiv@quotient+1,?___aodiv+1
 11406  002AF8  C094  F082         	movff	___aodiv@quotient+2,?___aodiv+2
 11407  002AFC  C095  F083         	movff	___aodiv@quotient+3,?___aodiv+3
 11408  002B00  C096  F084         	movff	___aodiv@quotient+4,?___aodiv+4
 11409  002B04  C097  F085         	movff	___aodiv@quotient+5,?___aodiv+5
 11410  002B08  C098  F086         	movff	___aodiv@quotient+6,?___aodiv+6
 11411  002B0C  C099  F087         	movff	___aodiv@quotient+7,?___aodiv+7
 11412                           
 11413                           ; BSR set to: 0
 11414  002B10  0012               	return		;funcret
 11415  002B12                     __end_of___aodiv:
 11416                           	opt callstack 0
 11417                           
 11418 ;; *************** function _atoi *****************
 11419 ;; Defined at:
 11420 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
 11421 ;; Parameters:    Size  Location     Type
 11422 ;;  s               2    7[BANK0 ] PTR const unsigned char 
 11423 ;;		 -> STR_63(10), STR_62(11), STR_61(11), STR_60(12), 
 11424 ;;		 -> STR_59(14), STR_58(17), STR_57(12), STR_56(10), 
 11425 ;;		 -> STR_55(10), STR_54(13), STR_53(8), STR_52(3), 
 11426 ;;		 -> STR_51(17), STR_50(15), STR_49(15), STR_48(12), 
 11427 ;;		 -> STR_47(17), STR_46(12), STR_45(15), STR_44(18), 
 11428 ;;		 -> STR_43(17), STR_42(12), STR_41(15), STR_40(18), 
 11429 ;;		 -> STR_39(17), STR_38(14), STR_37(14), STR_36(17), 
 11430 ;;		 -> STR_35(3), STR_34(9), STR_33(16), STR_32(3), 
 11431 ;;		 -> STR_31(9), STR_30(17), STR_29(15), STR_28(15), 
 11432 ;;		 -> STR_27(12), STR_26(10), STR_25(15), STR_24(12), 
 11433 ;;		 -> STR_23(10), STR_22(16), STR_21(12), STR_20(11), 
 11434 ;;		 -> STR_19(13), STR_18(8), STR_17(10), STR_16(17), 
 11435 ;;		 -> STR_15(10), STR_14(16), STR_13(10), STR_12(16), 
 11436 ;;		 -> STR_11(10), STR_10(17), STR_9(5), STR_8(10), 
 11437 ;;		 -> STR_7(14), STR_6(6), STR_5(10), STR_4(10), 
 11438 ;;		 -> STR_3(11), STR_2(13), STR_1(10), 
 11439 ;; Auto vars:     Size  Location     Type
 11440 ;;  n               2   20[BANK0 ] int 
 11441 ;;  neg             2   13[BANK0 ] int 
 11442 ;; Return value:  Size  Location     Type
 11443 ;;                  2    7[BANK0 ] int 
 11444 ;; Registers used:
 11445 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11446 ;; Tracked objects:
 11447 ;;		On entry : 0/0
 11448 ;;		On exit  : 0/0
 11449 ;;		Unchanged: 0/0
 11450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11451 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11452 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11453 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11454 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11455 ;;Total ram usage:       15 bytes
 11456 ;; Hardware stack levels used:    1
 11457 ;; Hardware stack levels required when called:    4
 11458 ;; This function calls:
 11459 ;;		___wmul
 11460 ;;		_isdigit
 11461 ;;		_isspace
 11462 ;; This function is called by:
 11463 ;;		_vfpfcnvrt
 11464 ;; This function uses a non-reentrant model
 11465 ;;
 11466                           
 11467                           	psect	text37
 11468  002B12                     __ptext37:
 11469                           	opt callstack 0
 11470  002B12                     _atoi:
 11471                           	opt callstack 22
 11472                           
 11473                           ; BSR set to: 0
 11474                           ;incstack = 0
 11475  002B12  0E00               	movlw	0
 11476  002B14  0100               	movlb	0	; () banked
 11477  002B16  6F95               	movwf	(atoi@n+1)& (0+255),b
 11478  002B18  0E00               	movlw	0
 11479  002B1A  6F94               	movwf	atoi@n& (0+255),b
 11480  002B1C  0E00               	movlw	0
 11481  002B1E  6F8E               	movwf	(atoi@neg+1)& (0+255),b
 11482  002B20  0E00               	movlw	0
 11483  002B22  6F8D               	movwf	atoi@neg& (0+255),b
 11484  002B24  D002               	goto	l6893
 11485  002B26                     l6891:
 11486                           
 11487                           ; BSR set to: 0
 11488  002B26  4B87               	infsnz	atoi@s& (0+255),f,b
 11489  002B28  2B88               	incf	(atoi@s+1)& (0+255),f,b
 11490  002B2A                     l6893:
 11491                           
 11492                           ; BSR set to: 0
 11493  002B2A  0E01               	movlw	1
 11494  002B2C  6F93               	movwf	_atoi$1711& (0+255),b
 11495                           
 11496                           ; BSR set to: 0
 11497  002B2E  C087  FFF6         	movff	atoi@s,tblptrl
 11498  002B32  C088  FFF7         	movff	atoi@s+1,tblptrh
 11499  002B36                     	if	0	;tblptru may be non-zero
 11500  002B36                     	endif
 11501  002B36                     	if	0	;tblptru may be non-zero
 11502  002B36                     	endif
 11503  002B36  0008               	tblrd		*
 11504  002B38  50F5               	movf	tablat,w,c
 11505  002B3A  0A20               	xorlw	32
 11506  002B3C  B4D8               	btfsc	status,2,c
 11507  002B3E  D018               	goto	l6901
 11508                           
 11509                           ; BSR set to: 0
 11510  002B40  0EF7               	movlw	247
 11511  002B42  6F89               	movwf	??_atoi& (0+255),b
 11512  002B44  0EFF               	movlw	255
 11513  002B46  6F8A               	movwf	(??_atoi+1)& (0+255),b
 11514  002B48  C087  FFF6         	movff	atoi@s,tblptrl
 11515  002B4C  C088  FFF7         	movff	atoi@s+1,tblptrh
 11516  002B50                     	if	0	;tblptru may be non-zero
 11517  002B50                     	endif
 11518  002B50                     	if	0	;tblptru may be non-zero
 11519  002B50                     	endif
 11520  002B50  0008               	tblrd		*
 11521  002B52  50F5               	movf	tablat,w,c
 11522  002B54  6F8B               	movwf	(??_atoi+2)& (0+255),b
 11523  002B56  6B8C               	clrf	(??_atoi+3)& (0+255),b
 11524  002B58  5189               	movf	??_atoi& (0+255),w,b
 11525  002B5A  278B               	addwf	(??_atoi+2)& (0+255),f,b
 11526  002B5C  518A               	movf	(??_atoi+1)& (0+255),w,b
 11527  002B5E  238C               	addwfc	(??_atoi+3)& (0+255),f,b
 11528  002B60  518C               	movf	(??_atoi+3)& (0+255),w,b
 11529  002B62  E104               	bnz	u7470
 11530  002B64  0E05               	movlw	5
 11531  002B66  5D8B               	subwf	(??_atoi+2)& (0+255),w,b
 11532  002B68  A0D8               	btfss	status,0,c
 11533  002B6A  D002               	goto	l6901
 11534  002B6C                     u7470:
 11535                           
 11536                           ; BSR set to: 0
 11537  002B6C  0E00               	movlw	0
 11538  002B6E  6F93               	movwf	_atoi$1711& (0+255),b
 11539  002B70                     l6901:
 11540                           
 11541                           ; BSR set to: 0
 11542  002B70  C093  F08F         	movff	_atoi$1711,_atoi$1710
 11543  002B74  6B90               	clrf	(_atoi$1710+1)& (0+255),b
 11544                           
 11545                           ; BSR set to: 0
 11546  002B76  518F               	movf	_atoi$1710& (0+255),w,b
 11547  002B78  1190               	iorwf	(_atoi$1710+1)& (0+255),w,b
 11548  002B7A  B4D8               	btfsc	status,2,c
 11549  002B7C  D008               	goto	l6911
 11550  002B7E  D7D3               	goto	l6891
 11551  002B80                     l6907:
 11552                           
 11553                           ; BSR set to: 0
 11554  002B80  0E00               	movlw	0
 11555  002B82  6F8E               	movwf	(atoi@neg+1)& (0+255),b
 11556  002B84  0E01               	movlw	1
 11557  002B86  6F8D               	movwf	atoi@neg& (0+255),b
 11558  002B88                     l6909:
 11559                           
 11560                           ; BSR set to: 0
 11561  002B88  4B87               	infsnz	atoi@s& (0+255),f,b
 11562  002B8A  2B88               	incf	(atoi@s+1)& (0+255),f,b
 11563  002B8C  D02F               	goto	l6917
 11564  002B8E                     l6911:
 11565                           
 11566                           ; BSR set to: 0
 11567  002B8E  C087  FFF6         	movff	atoi@s,tblptrl
 11568  002B92  C088  FFF7         	movff	atoi@s+1,tblptrh
 11569  002B96                     	if	0	;tblptru may be non-zero
 11570  002B96                     	endif
 11571  002B96                     	if	0	;tblptru may be non-zero
 11572  002B96                     	endif
 11573  002B96  0008               	tblrd		*
 11574  002B98  50F5               	movf	tablat,w,c
 11575  002B9A  6F89               	movwf	??_atoi& (0+255),b
 11576  002B9C  6B8A               	clrf	(??_atoi+1)& (0+255),b
 11577                           
 11578                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11579                           ; Switch size 1, requested type "simple"
 11580                           ; Number of cases is 1, Range of values is 0 to 0
 11581                           ; switch strategies available:
 11582                           ; Name         Instructions Cycles
 11583                           ; simple_byte            4     3 (average)
 11584                           ;	Chosen strategy is simple_byte
 11585  002B9E  518A               	movf	(??_atoi+1)& (0+255),w,b
 11586  002BA0  0A00               	xorlw	0	; case 0
 11587  002BA2  A4D8               	btfss	status,2,c
 11588  002BA4  D023               	goto	l6917
 11589                           
 11590                           ; BSR set to: 0
 11591                           ; Switch size 1, requested type "simple"
 11592                           ; Number of cases is 2, Range of values is 43 to 45
 11593                           ; switch strategies available:
 11594                           ; Name         Instructions Cycles
 11595                           ; simple_byte            7     4 (average)
 11596                           ;	Chosen strategy is simple_byte
 11597  002BA6  5189               	movf	??_atoi& (0+255),w,b
 11598  002BA8  0A2B               	xorlw	43	; case 43
 11599  002BAA  B4D8               	btfsc	status,2,c
 11600  002BAC  D7ED               	goto	l6909
 11601  002BAE  0A06               	xorlw	6	; case 45
 11602  002BB0  B4D8               	btfsc	status,2,c
 11603  002BB2  D7E6               	goto	l6907
 11604  002BB4  D01B               	goto	l6917
 11605  002BB6                     l6913:
 11606                           
 11607                           ; BSR set to: 0
 11608  002BB6  C094  F080         	movff	atoi@n,___wmul@multiplier
 11609  002BBA  C095  F081         	movff	atoi@n+1,___wmul@multiplier+1
 11610  002BBE  0E00               	movlw	0
 11611  002BC0  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11612  002BC2  0E0A               	movlw	10
 11613  002BC4  6F82               	movwf	___wmul@multiplicand& (0+255),b
 11614  002BC6  EC0F  F01F         	call	___wmul	;wreg free
 11615  002BCA  C087  FFF6         	movff	atoi@s,tblptrl
 11616  002BCE  C088  FFF7         	movff	atoi@s+1,tblptrh
 11617  002BD2                     	if	0	;tblptru may be non-zero
 11618  002BD2                     	endif
 11619  002BD2                     	if	0	;tblptru may be non-zero
 11620  002BD2                     	endif
 11621  002BD2  0008               	tblrd		*
 11622  002BD4  50F5               	movf	tablat,w,c
 11623  002BD6  0100               	movlb	0	; () banked
 11624  002BD8  5F80               	subwf	?___wmul& (0+255),f,b
 11625  002BDA  0E00               	movlw	0
 11626  002BDC  5B81               	subwfb	(?___wmul+1)& (0+255),f,b
 11627  002BDE  0E30               	movlw	48
 11628  002BE0  2580               	addwf	?___wmul& (0+255),w,b
 11629  002BE2  6F94               	movwf	atoi@n& (0+255),b
 11630  002BE4  0E00               	movlw	0
 11631  002BE6  2181               	addwfc	(?___wmul+1)& (0+255),w,b
 11632  002BE8  6F95               	movwf	(atoi@n+1)& (0+255),b
 11633  002BEA  D7CE               	goto	l6909
 11634  002BEC                     l6917:
 11635                           
 11636                           ; BSR set to: 0
 11637  002BEC  0ED0               	movlw	208
 11638  002BEE  6F89               	movwf	??_atoi& (0+255),b
 11639  002BF0  0EFF               	movlw	255
 11640  002BF2  6F8A               	movwf	(??_atoi+1)& (0+255),b
 11641  002BF4  C087  FFF6         	movff	atoi@s,tblptrl
 11642  002BF8  C088  FFF7         	movff	atoi@s+1,tblptrh
 11643  002BFC                     	if	0	;tblptru may be non-zero
 11644  002BFC                     	endif
 11645  002BFC                     	if	0	;tblptru may be non-zero
 11646  002BFC                     	endif
 11647  002BFC  0008               	tblrd		*
 11648  002BFE  50F5               	movf	tablat,w,c
 11649  002C00  6F8B               	movwf	(??_atoi+2)& (0+255),b
 11650  002C02  6B8C               	clrf	(??_atoi+3)& (0+255),b
 11651  002C04  5189               	movf	??_atoi& (0+255),w,b
 11652  002C06  278B               	addwf	(??_atoi+2)& (0+255),f,b
 11653  002C08  518A               	movf	(??_atoi+1)& (0+255),w,b
 11654  002C0A  238C               	addwfc	(??_atoi+3)& (0+255),f,b
 11655  002C0C  518C               	movf	(??_atoi+3)& (0+255),w,b
 11656  002C0E  E106               	bnz	u7490
 11657  002C10  0E0A               	movlw	10
 11658  002C12  5D8B               	subwf	(??_atoi+2)& (0+255),w,b
 11659  002C14  B0D8               	btfsc	status,0,c
 11660  002C16  D002               	goto	u7490
 11661  002C18  0E01               	movlw	1
 11662  002C1A  D001               	goto	u7500
 11663  002C1C                     u7490:
 11664  002C1C  0E00               	movlw	0
 11665  002C1E                     u7500:
 11666  002C1E  6F91               	movwf	_atoi$1712& (0+255),b
 11667  002C20  6B92               	clrf	(_atoi$1712+1)& (0+255),b
 11668                           
 11669                           ; BSR set to: 0
 11670  002C22  5191               	movf	_atoi$1712& (0+255),w,b
 11671  002C24  1192               	iorwf	(_atoi$1712+1)& (0+255),w,b
 11672  002C26  A4D8               	btfss	status,2,c
 11673  002C28  D7C6               	goto	l6913
 11674                           
 11675                           ; BSR set to: 0
 11676  002C2A  518D               	movf	atoi@neg& (0+255),w,b
 11677  002C2C  118E               	iorwf	(atoi@neg+1)& (0+255),w,b
 11678  002C2E  A4D8               	btfss	status,2,c
 11679  002C30  D00D               	goto	l1438
 11680                           
 11681                           ; BSR set to: 0
 11682  002C32  C094  F089         	movff	atoi@n,??_atoi
 11683  002C36  C095  F08A         	movff	atoi@n+1,??_atoi+1
 11684  002C3A  1F89               	comf	??_atoi& (0+255),f,b
 11685  002C3C  1F8A               	comf	(??_atoi+1)& (0+255),f,b
 11686  002C3E  4B89               	infsnz	??_atoi& (0+255),f,b
 11687  002C40  2B8A               	incf	(??_atoi+1)& (0+255),f,b
 11688  002C42  C089  F087         	movff	??_atoi,?_atoi
 11689  002C46  C08A  F088         	movff	??_atoi+1,?_atoi+1
 11690  002C4A  0012               	return	
 11691  002C4C                     l1438:
 11692                           
 11693                           ; BSR set to: 0
 11694  002C4C  C094  F087         	movff	atoi@n,?_atoi
 11695  002C50  C095  F088         	movff	atoi@n+1,?_atoi+1
 11696                           
 11697                           ; BSR set to: 0
 11698  002C54  0012               	return		;funcret
 11699  002C56                     __end_of_atoi:
 11700                           	opt callstack 0
 11701                           
 11702 ;; *************** function _isspace *****************
 11703 ;; Defined at:
 11704 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
 11705 ;; Parameters:    Size  Location     Type
 11706 ;;  c               2    0[BANK0 ] int 
 11707 ;; Auto vars:     Size  Location     Type
 11708 ;;		None
 11709 ;; Return value:  Size  Location     Type
 11710 ;;                  2    0[BANK0 ] int 
 11711 ;; Registers used:
 11712 ;;		wreg, status,2, status,0
 11713 ;; Tracked objects:
 11714 ;;		On entry : 0/0
 11715 ;;		On exit  : 0/0
 11716 ;;		Unchanged: 0/0
 11717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11718 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11719 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11720 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11721 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11722 ;;Total ram usage:        7 bytes
 11723 ;; Hardware stack levels used:    1
 11724 ;; Hardware stack levels required when called:    3
 11725 ;; This function calls:
 11726 ;;		Nothing
 11727 ;; This function is called by:
 11728 ;;		_atoi
 11729 ;; This function uses a non-reentrant model
 11730 ;;
 11731                           
 11732                           	psect	text38
 11733  003B84                     __ptext38:
 11734                           	opt callstack 0
 11735  003B84                     _isspace:
 11736                           	opt callstack 22
 11737                           
 11738                           ; BSR set to: 0
 11739                           ;incstack = 0
 11740  003B84  0E01               	movlw	1
 11741  003B86  0100               	movlb	0	; () banked
 11742  003B88  6F86               	movwf	_isspace$1737& (0+255),b
 11743                           
 11744                           ; BSR set to: 0
 11745  003B8A  0E20               	movlw	32
 11746  003B8C  1980               	xorwf	isspace@c& (0+255),w,b
 11747  003B8E  1181               	iorwf	(isspace@c+1)& (0+255),w,b
 11748  003B90  B4D8               	btfsc	status,2,c
 11749  003B92  D014               	goto	l6757
 11750                           
 11751                           ; BSR set to: 0
 11752  003B94  0EF7               	movlw	247
 11753  003B96  6F82               	movwf	??_isspace& (0+255),b
 11754  003B98  0EFF               	movlw	255
 11755  003B9A  6F83               	movwf	(??_isspace+1)& (0+255),b
 11756  003B9C  C080  F084         	movff	isspace@c,??_isspace+2
 11757  003BA0  C081  F085         	movff	isspace@c+1,??_isspace+3
 11758  003BA4  5182               	movf	??_isspace& (0+255),w,b
 11759  003BA6  2784               	addwf	(??_isspace+2)& (0+255),f,b
 11760  003BA8  5183               	movf	(??_isspace+1)& (0+255),w,b
 11761  003BAA  2385               	addwfc	(??_isspace+3)& (0+255),f,b
 11762  003BAC  5185               	movf	(??_isspace+3)& (0+255),w,b
 11763  003BAE  E104               	bnz	u7130
 11764  003BB0  0E05               	movlw	5
 11765  003BB2  5D84               	subwf	(??_isspace+2)& (0+255),w,b
 11766  003BB4  A0D8               	btfss	status,0,c
 11767  003BB6  D002               	goto	l6757
 11768  003BB8                     u7130:
 11769                           
 11770                           ; BSR set to: 0
 11771  003BB8  0E00               	movlw	0
 11772  003BBA  6F86               	movwf	_isspace$1737& (0+255),b
 11773  003BBC                     l6757:
 11774                           
 11775                           ; BSR set to: 0
 11776  003BBC  C086  F080         	movff	_isspace$1737,?_isspace
 11777  003BC0  6B81               	clrf	(?_isspace+1)& (0+255),b
 11778                           
 11779                           ; BSR set to: 0
 11780  003BC2  0012               	return		;funcret
 11781  003BC4                     __end_of_isspace:
 11782                           	opt callstack 0
 11783                           
 11784 ;; *************** function _isdigit *****************
 11785 ;; Defined at:
 11786 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
 11787 ;; Parameters:    Size  Location     Type
 11788 ;;  c               2    0[BANK0 ] int 
 11789 ;; Auto vars:     Size  Location     Type
 11790 ;;		None
 11791 ;; Return value:  Size  Location     Type
 11792 ;;                  2    0[BANK0 ] int 
 11793 ;; Registers used:
 11794 ;;		wreg, status,2, status,0
 11795 ;; Tracked objects:
 11796 ;;		On entry : 0/0
 11797 ;;		On exit  : 0/0
 11798 ;;		Unchanged: 0/0
 11799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11800 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11802 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11803 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11804 ;;Total ram usage:        6 bytes
 11805 ;; Hardware stack levels used:    1
 11806 ;; Hardware stack levels required when called:    3
 11807 ;; This function calls:
 11808 ;;		Nothing
 11809 ;; This function is called by:
 11810 ;;		_vfpfcnvrt
 11811 ;;		_atoi
 11812 ;; This function uses a non-reentrant model
 11813 ;;
 11814                           
 11815                           	psect	text39
 11816  003D3E                     __ptext39:
 11817                           	opt callstack 0
 11818  003D3E                     _isdigit:
 11819                           	opt callstack 23
 11820                           
 11821                           ; BSR set to: 0
 11822                           ;incstack = 0
 11823  003D3E  0ED0               	movlw	208
 11824  003D40  0100               	movlb	0	; () banked
 11825  003D42  6F82               	movwf	??_isdigit& (0+255),b
 11826  003D44  0EFF               	movlw	255
 11827  003D46  6F83               	movwf	(??_isdigit+1)& (0+255),b
 11828  003D48  C080  F084         	movff	isdigit@c,??_isdigit+2
 11829  003D4C  C081  F085         	movff	isdigit@c+1,??_isdigit+3
 11830  003D50  5182               	movf	??_isdigit& (0+255),w,b
 11831  003D52  2784               	addwf	(??_isdigit+2)& (0+255),f,b
 11832  003D54  5183               	movf	(??_isdigit+1)& (0+255),w,b
 11833  003D56  2385               	addwfc	(??_isdigit+3)& (0+255),f,b
 11834  003D58  5185               	movf	(??_isdigit+3)& (0+255),w,b
 11835  003D5A  E106               	bnz	u6970
 11836  003D5C  0E0A               	movlw	10
 11837  003D5E  5D84               	subwf	(??_isdigit+2)& (0+255),w,b
 11838  003D60  B0D8               	btfsc	status,0,c
 11839  003D62  D002               	goto	u6970
 11840  003D64  0E01               	movlw	1
 11841  003D66  D001               	goto	u6980
 11842  003D68                     u6970:
 11843  003D68  0E00               	movlw	0
 11844  003D6A                     u6980:
 11845  003D6A  6F80               	movwf	?_isdigit& (0+255),b
 11846  003D6C  6B81               	clrf	(?_isdigit+1)& (0+255),b
 11847                           
 11848                           ; BSR set to: 0
 11849  003D6E  0012               	return		;funcret
 11850  003D70                     __end_of_isdigit:
 11851                           	opt callstack 0
 11852                           
 11853 ;; *************** function ___wmul *****************
 11854 ;; Defined at:
 11855 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 11856 ;; Parameters:    Size  Location     Type
 11857 ;;  multiplier      2    0[BANK0 ] unsigned int 
 11858 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 11859 ;; Auto vars:     Size  Location     Type
 11860 ;;  product         2    4[BANK0 ] unsigned int 
 11861 ;; Return value:  Size  Location     Type
 11862 ;;                  2    0[BANK0 ] unsigned int 
 11863 ;; Registers used:
 11864 ;;		wreg, status,2, status,0, prodl, prodh
 11865 ;; Tracked objects:
 11866 ;;		On entry : 0/0
 11867 ;;		On exit  : 0/0
 11868 ;;		Unchanged: 0/0
 11869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11870 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11871 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11873 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11874 ;;Total ram usage:        6 bytes
 11875 ;; Hardware stack levels used:    1
 11876 ;; Hardware stack levels required when called:    3
 11877 ;; This function calls:
 11878 ;;		Nothing
 11879 ;; This function is called by:
 11880 ;;		_main
 11881 ;;		_atoi
 11882 ;; This function uses a non-reentrant model
 11883 ;;
 11884                           
 11885                           	psect	text40
 11886  003E1E                     __ptext40:
 11887                           	opt callstack 0
 11888  003E1E                     ___wmul:
 11889                           	opt callstack 22
 11890                           
 11891                           ; BSR set to: 0
 11892                           ;incstack = 0
 11893  003E1E  0100               	movlb	0	; () banked
 11894  003E20  5180               	movf	___wmul@multiplier& (0+255),w,b
 11895  003E22  0382               	mulwf	___wmul@multiplicand& (0+255),b
 11896  003E24  CFF3 F084          	movff	prodl,___wmul@product
 11897  003E28  CFF4 F085          	movff	prodh,___wmul@product+1
 11898  003E2C  5180               	movf	___wmul@multiplier& (0+255),w,b
 11899  003E2E  0383               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 11900  003E30  50F3               	movf	prodl,w,c
 11901  003E32  2785               	addwf	(___wmul@product+1)& (0+255),f,b
 11902  003E34  5181               	movf	(___wmul@multiplier+1)& (0+255),w,b
 11903  003E36  0382               	mulwf	___wmul@multiplicand& (0+255),b
 11904  003E38  50F3               	movf	prodl,w,c
 11905  003E3A  2785               	addwf	(___wmul@product+1)& (0+255),f,b
 11906                           
 11907                           ; BSR set to: 0
 11908  003E3C  C084  F080         	movff	___wmul@product,?___wmul
 11909  003E40  C085  F081         	movff	___wmul@product+1,?___wmul+1
 11910                           
 11911                           ; BSR set to: 0
 11912  003E44  0012               	return		;funcret
 11913  003E46                     __end_of___wmul:
 11914                           	opt callstack 0
 11915                           
 11916 ;; *************** function _initLCD *****************
 11917 ;; Defined at:
 11918 ;;		line 69 in file "lcd.c"
 11919 ;; Parameters:    Size  Location     Type
 11920 ;;		None
 11921 ;; Auto vars:     Size  Location     Type
 11922 ;;		None
 11923 ;; Return value:  Size  Location     Type
 11924 ;;                  1    wreg      void 
 11925 ;; Registers used:
 11926 ;;		wreg, status,2, status,0, cstack
 11927 ;; Tracked objects:
 11928 ;;		On entry : 0/0
 11929 ;;		On exit  : 0/0
 11930 ;;		Unchanged: 0/0
 11931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11934 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11935 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11936 ;;Total ram usage:        1 bytes
 11937 ;; Hardware stack levels used:    1
 11938 ;; Hardware stack levels required when called:    7
 11939 ;; This function calls:
 11940 ;;		_lcdInst
 11941 ;;		_send_byte
 11942 ;;		_send_nibble
 11943 ;; This function is called by:
 11944 ;;		_actuators_main
 11945 ;;		_UI_main
 11946 ;;		_main
 11947 ;; This function uses a non-reentrant model
 11948 ;;
 11949                           
 11950                           	psect	text41
 11951  003894                     __ptext41:
 11952                           	opt callstack 0
 11953  003894                     _initLCD:
 11954                           	opt callstack 23
 11955                           
 11956                           ;lcd.c: 70:     _delay((unsigned long)((15)*(10000000/4000.0)));
 11957                           
 11958                           ; BSR set to: 0
 11959                           ;incstack = 0
 11960  003894  0E31               	movlw	49
 11961  003896  0100               	movlb	0	; () banked
 11962  003898  6F84               	movwf	??_initLCD& (0+255),b
 11963  00389A  0EB2               	movlw	178
 11964  00389C                     u10167:
 11965  00389C  2EE8               	decfsz	wreg,f,c
 11966  00389E  D7FE               	bra	u10167
 11967  0038A0  2F84               	decfsz	??_initLCD& (0+255),f,b
 11968  0038A2  D7FC               	bra	u10167
 11969  0038A4  F000               	nop	
 11970                           
 11971                           ;lcd.c: 72:     LATDbits.LATD2 = 0;
 11972  0038A6  948C               	bcf	3980,2,c	;volatile
 11973                           
 11974                           ;lcd.c: 74:     send_nibble(0b0011);
 11975  0038A8  0E03               	movlw	3
 11976  0038AA  EC36  F01F         	call	_send_nibble
 11977                           
 11978                           ;lcd.c: 75:     _delay((unsigned long)((5)*(10000000/4000.0)));
 11979  0038AE  0E11               	movlw	17
 11980  0038B0  0100               	movlb	0	; () banked
 11981  0038B2  6F84               	movwf	??_initLCD& (0+255),b
 11982  0038B4  0E3A               	movlw	58
 11983  0038B6                     u10177:
 11984  0038B6  2EE8               	decfsz	wreg,f,c
 11985  0038B8  D7FE               	bra	u10177
 11986  0038BA  2F84               	decfsz	??_initLCD& (0+255),f,b
 11987  0038BC  D7FC               	bra	u10177
 11988  0038BE  F000               	nop	
 11989                           
 11990                           ;lcd.c: 76:     send_nibble(0b0011);
 11991  0038C0  0E03               	movlw	3
 11992  0038C2  EC36  F01F         	call	_send_nibble
 11993                           
 11994                           ;lcd.c: 77:     _delay((unsigned long)((150)*(10000000/4000000.0)));
 11995  0038C6  0E7D               	movlw	125
 11996  0038C8                     u10187:
 11997  0038C8  2EE8               	decfsz	wreg,f,c
 11998  0038CA  D7FE               	bra	u10187
 11999                           
 12000                           ;lcd.c: 78:     send_byte(0b00110010);
 12001  0038CC  0E32               	movlw	50
 12002  0038CE  EC43  F01F         	call	_send_byte
 12003                           
 12004                           ;lcd.c: 80:     send_byte(0b00101000);
 12005  0038D2  0E28               	movlw	40
 12006  0038D4  EC43  F01F         	call	_send_byte
 12007                           
 12008                           ;lcd.c: 81:     send_byte(0b00001000);
 12009  0038D8  0E08               	movlw	8
 12010  0038DA  EC43  F01F         	call	_send_byte
 12011                           
 12012                           ;lcd.c: 82:     send_byte(0b00000001);
 12013  0038DE  0E01               	movlw	1
 12014  0038E0  EC43  F01F         	call	_send_byte
 12015                           
 12016                           ;lcd.c: 83:     _delay((unsigned long)((5)*(10000000/4000.0)));
 12017  0038E4  0E11               	movlw	17
 12018  0038E6  0100               	movlb	0	; () banked
 12019  0038E8  6F84               	movwf	??_initLCD& (0+255),b
 12020  0038EA  0E3A               	movlw	58
 12021  0038EC                     u10197:
 12022  0038EC  2EE8               	decfsz	wreg,f,c
 12023  0038EE  D7FE               	bra	u10197
 12024  0038F0  2F84               	decfsz	??_initLCD& (0+255),f,b
 12025  0038F2  D7FC               	bra	u10197
 12026  0038F4  F000               	nop	
 12027                           
 12028                           ;lcd.c: 84:     send_byte(0b00000110);
 12029  0038F6  0E06               	movlw	6
 12030  0038F8  EC43  F01F         	call	_send_byte
 12031                           
 12032                           ;lcd.c: 87:     { lcdInst( (unsigned char)(8 | (1 << 2) | (1 << 1) | 1) );};
 12033  0038FC  0E0F               	movlw	15
 12034  0038FE  EC61  F01F         	call	_lcdInst
 12035  003902  0012               	return		;funcret
 12036  003904                     __end_of_initLCD:
 12037                           	opt callstack 0
 12038                           
 12039 ;; *************** function _lcdInst *****************
 12040 ;; Defined at:
 12041 ;;		line 64 in file "lcd.c"
 12042 ;; Parameters:    Size  Location     Type
 12043 ;;  data            1    wreg     unsigned char 
 12044 ;; Auto vars:     Size  Location     Type
 12045 ;;  data            1    3[BANK0 ] unsigned char 
 12046 ;; Return value:  Size  Location     Type
 12047 ;;                  1    wreg      void 
 12048 ;; Registers used:
 12049 ;;		wreg, status,2, status,0, cstack
 12050 ;; Tracked objects:
 12051 ;;		On entry : 0/0
 12052 ;;		On exit  : 0/0
 12053 ;;		Unchanged: 0/0
 12054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12056 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12058 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12059 ;;Total ram usage:        1 bytes
 12060 ;; Hardware stack levels used:    1
 12061 ;; Hardware stack levels required when called:    6
 12062 ;; This function calls:
 12063 ;;		_send_byte
 12064 ;; This function is called by:
 12065 ;;		_actuators_main
 12066 ;;		_stepper2
 12067 ;;		_stepper2_back
 12068 ;;		_initLCD
 12069 ;;		_print_echo
 12070 ;;		_ultrasonic_main
 12071 ;;		_number_deploy
 12072 ;;		_UI_main
 12073 ;;		_brake
 12074 ;;		_main
 12075 ;;		_lcd_shift_cursor
 12076 ;;		_lcd_shift_display
 12077 ;; This function uses a non-reentrant model
 12078 ;;
 12079                           
 12080                           	psect	text42
 12081  003EC2                     __ptext42:
 12082                           	opt callstack 0
 12083  003EC2                     _lcdInst:
 12084                           	opt callstack 22
 12085                           
 12086                           ;incstack = 0
 12087                           ;lcdInst@data stored from wreg
 12088  003EC2  0100               	movlb	0	; () banked
 12089  003EC4  6F83               	movwf	lcdInst@data& (0+255),b
 12090                           
 12091                           ;lcd.c: 65:     LATDbits.LATD2 = 0;
 12092  003EC6  948C               	bcf	3980,2,c	;volatile
 12093                           
 12094                           ;lcd.c: 66:     send_byte(data);
 12095  003EC8  0100               	movlb	0	; () banked
 12096  003ECA  5183               	movf	lcdInst@data& (0+255),w,b
 12097  003ECC  EC43  F01F         	call	_send_byte
 12098  003ED0  0012               	return		;funcret
 12099  003ED2                     __end_of_lcdInst:
 12100                           	opt callstack 0
 12101                           
 12102 ;; *************** function _send_byte *****************
 12103 ;; Defined at:
 12104 ;;		line 55 in file "lcd.c"
 12105 ;; Parameters:    Size  Location     Type
 12106 ;;  data            1    wreg     unsigned char 
 12107 ;; Auto vars:     Size  Location     Type
 12108 ;;  data            1    2[BANK0 ] unsigned char 
 12109 ;; Return value:  Size  Location     Type
 12110 ;;                  1    wreg      void 
 12111 ;; Registers used:
 12112 ;;		wreg, status,2, status,0, cstack
 12113 ;; Tracked objects:
 12114 ;;		On entry : 0/0
 12115 ;;		On exit  : 0/0
 12116 ;;		Unchanged: 0/0
 12117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12119 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12121 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12122 ;;Total ram usage:        1 bytes
 12123 ;; Hardware stack levels used:    1
 12124 ;; Hardware stack levels required when called:    5
 12125 ;; This function calls:
 12126 ;;		_send_nibble
 12127 ;; This function is called by:
 12128 ;;		_lcdInst
 12129 ;;		_initLCD
 12130 ;;		_putch
 12131 ;; This function uses a non-reentrant model
 12132 ;;
 12133                           
 12134                           	psect	text43
 12135  003E86                     __ptext43:
 12136                           	opt callstack 0
 12137  003E86                     _send_byte:
 12138                           	opt callstack 16
 12139                           
 12140                           ;incstack = 0
 12141                           ;send_byte@data stored from wreg
 12142  003E86  0100               	movlb	0	; () banked
 12143  003E88  6F82               	movwf	send_byte@data& (0+255),b
 12144                           
 12145                           ;lcd.c: 57:     send_nibble(data >> 4);
 12146  003E8A  0100               	movlb	0	; () banked
 12147  003E8C  3982               	swapf	send_byte@data& (0+255),w,b
 12148  003E8E  0B0F               	andlw	15
 12149  003E90  EC36  F01F         	call	_send_nibble
 12150                           
 12151                           ;lcd.c: 60:     send_nibble(data);
 12152  003E94  0100               	movlb	0	; () banked
 12153  003E96  5182               	movf	send_byte@data& (0+255),w,b
 12154  003E98  EC36  F01F         	call	_send_nibble
 12155  003E9C  0012               	return		;funcret
 12156  003E9E                     __end_of_send_byte:
 12157                           	opt callstack 0
 12158                           
 12159 ;; *************** function _send_nibble *****************
 12160 ;; Defined at:
 12161 ;;		line 44 in file "lcd.c"
 12162 ;; Parameters:    Size  Location     Type
 12163 ;;  data            1    wreg     unsigned char 
 12164 ;; Auto vars:     Size  Location     Type
 12165 ;;  data            1    1[BANK0 ] unsigned char 
 12166 ;; Return value:  Size  Location     Type
 12167 ;;                  1    wreg      void 
 12168 ;; Registers used:
 12169 ;;		wreg, status,2, status,0, cstack
 12170 ;; Tracked objects:
 12171 ;;		On entry : 0/0
 12172 ;;		On exit  : 0/0
 12173 ;;		Unchanged: 0/0
 12174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12176 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12178 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12179 ;;Total ram usage:        1 bytes
 12180 ;; Hardware stack levels used:    1
 12181 ;; Hardware stack levels required when called:    4
 12182 ;; This function calls:
 12183 ;;		_pulse_e
 12184 ;; This function is called by:
 12185 ;;		_send_byte
 12186 ;;		_initLCD
 12187 ;; This function uses a non-reentrant model
 12188 ;;
 12189                           
 12190                           	psect	text44
 12191  003E6C                     __ptext44:
 12192                           	opt callstack 0
 12193  003E6C                     _send_nibble:
 12194                           	opt callstack 16
 12195                           
 12196                           ;incstack = 0
 12197                           ;send_nibble@data stored from wreg
 12198  003E6C  0100               	movlb	0	; () banked
 12199  003E6E  6F81               	movwf	send_nibble@data& (0+255),b
 12200                           
 12201                           ;lcd.c: 46:     LATD = (unsigned char)(LATD & 0x0F);
 12202  003E70  508C               	movf	3980,w,c	;volatile
 12203  003E72  0B0F               	andlw	15
 12204  003E74  6E8C               	movwf	3980,c	;volatile
 12205                           
 12206                           ;lcd.c: 47:     LATD = (unsigned char)((data << 4) | LATD);
 12207  003E76  0100               	movlb	0	; () banked
 12208  003E78  3981               	swapf	send_nibble@data& (0+255),w,b
 12209  003E7A  0BF0               	andlw	240
 12210  003E7C  108C               	iorwf	3980,w,c	;volatile
 12211  003E7E  6E8C               	movwf	3980,c	;volatile
 12212                           
 12213                           ; BSR set to: 0
 12214                           ;lcd.c: 48:     pulse_e();
 12215  003E80  ECCF  F01E         	call	_pulse_e	;wreg free
 12216  003E84  0012               	return		;funcret
 12217  003E86                     __end_of_send_nibble:
 12218                           	opt callstack 0
 12219                           
 12220 ;; *************** function _pulse_e *****************
 12221 ;; Defined at:
 12222 ;;		line 28 in file "lcd.c"
 12223 ;; Parameters:    Size  Location     Type
 12224 ;;		None
 12225 ;; Auto vars:     Size  Location     Type
 12226 ;;  interruptSta    1    0[BANK0 ] unsigned char 
 12227 ;; Return value:  Size  Location     Type
 12228 ;;                  1    wreg      void 
 12229 ;; Registers used:
 12230 ;;		wreg
 12231 ;; Tracked objects:
 12232 ;;		On entry : 0/0
 12233 ;;		On exit  : 0/0
 12234 ;;		Unchanged: 0/0
 12235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12237 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12239 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12240 ;;Total ram usage:        1 bytes
 12241 ;; Hardware stack levels used:    1
 12242 ;; Hardware stack levels required when called:    3
 12243 ;; This function calls:
 12244 ;;		Nothing
 12245 ;; This function is called by:
 12246 ;;		_send_nibble
 12247 ;; This function uses a non-reentrant model
 12248 ;;
 12249                           
 12250                           	psect	text45
 12251  003D9E                     __ptext45:
 12252                           	opt callstack 0
 12253  003D9E                     _pulse_e:
 12254                           	opt callstack 16
 12255                           
 12256                           ;lcd.c: 29:     unsigned char interruptState = INTCONbits.GIE;
 12257                           
 12258                           ;incstack = 0
 12259  003D9E  0E00               	movlw	0
 12260  003DA0  BEF2               	btfsc	4082,7,c	;volatile
 12261  003DA2  0E01               	movlw	1
 12262  003DA4  0100               	movlb	0	; () banked
 12263  003DA6  6F80               	movwf	pulse_e@interruptState& (0+255),b
 12264                           
 12265                           ; BSR set to: 0
 12266                           ;lcd.c: 30:     (INTCONbits.GIE = 0);
 12267  003DA8  9EF2               	bcf	4082,7,c	;volatile
 12268                           
 12269                           ; BSR set to: 0
 12270                           ;lcd.c: 31:     LATDbits.LATD3 = 1;
 12271  003DAA  868C               	bsf	3980,3,c	;volatile
 12272                           
 12273                           ;lcd.c: 34:     _delay((unsigned long)((25)*(10000000/4000000.0)));
 12274  003DAC  0E14               	movlw	20
 12275  003DAE                     u10207:
 12276  003DAE  2EE8               	decfsz	wreg,f,c
 12277  003DB0  D7FE               	bra	u10207
 12278  003DB2  D000               	nop2	
 12279                           
 12280                           ;lcd.c: 35:     LATDbits.LATD3 = 0;
 12281  003DB4  968C               	bcf	3980,3,c	;volatile
 12282                           
 12283                           ;lcd.c: 36:     _delay((unsigned long)((100)*(10000000/4000000.0)));
 12284  003DB6  0E53               	movlw	83
 12285  003DB8                     u10217:
 12286  003DB8  2EE8               	decfsz	wreg,f,c
 12287  003DBA  D7FE               	bra	u10217
 12288  003DBC  F000               	nop	
 12289                           
 12290                           ;lcd.c: 37:     INTCONbits.GIE = interruptState;
 12291  003DBE  0100               	movlb	0	; () banked
 12292  003DC0  B180               	btfsc	pulse_e@interruptState& (0+255),0,b
 12293  003DC2  D002               	bra	u6765
 12294  003DC4  9EF2               	bcf	4082,7,c	;volatile
 12295  003DC6  D001               	bra	u6766
 12296  003DC8                     u6765:
 12297  003DC8  8EF2               	bsf	4082,7,c	;volatile
 12298  003DCA                     u6766:
 12299  003DCA  0012               	return		;funcret
 12300  003DCC                     __end_of_pulse_e:
 12301                           	opt callstack 0
 12302                           
 12303 ;; *************** function ___llmod *****************
 12304 ;; Defined at:
 12305 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\llmod.c"
 12306 ;; Parameters:    Size  Location     Type
 12307 ;;  dividend        4    0[BANK0 ] unsigned long 
 12308 ;;  divisor         4    4[BANK0 ] unsigned long 
 12309 ;; Auto vars:     Size  Location     Type
 12310 ;;  counter         1    8[BANK0 ] unsigned char 
 12311 ;; Return value:  Size  Location     Type
 12312 ;;                  4    0[BANK0 ] unsigned long 
 12313 ;; Registers used:
 12314 ;;		wreg, status,2, status,0
 12315 ;; Tracked objects:
 12316 ;;		On entry : 0/0
 12317 ;;		On exit  : 0/0
 12318 ;;		Unchanged: 0/0
 12319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12320 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12321 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12323 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12324 ;;Total ram usage:        9 bytes
 12325 ;; Hardware stack levels used:    1
 12326 ;; Hardware stack levels required when called:    3
 12327 ;; This function calls:
 12328 ;;		Nothing
 12329 ;; This function is called by:
 12330 ;;		_UI_main
 12331 ;; This function uses a non-reentrant model
 12332 ;;
 12333                           
 12334                           	psect	text46
 12335  003972                     __ptext46:
 12336                           	opt callstack 0
 12337  003972                     ___llmod:
 12338                           	opt callstack 26
 12339                           
 12340                           ;incstack = 0
 12341  003972  0100               	movlb	0	; () banked
 12342  003974  5184               	movf	___llmod@divisor& (0+255),w,b
 12343  003976  1185               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 12344  003978  1186               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 12345  00397A  1187               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 12346  00397C  B4D8               	btfsc	status,2,c
 12347  00397E  D024               	goto	l1152
 12348                           
 12349                           ; BSR set to: 0
 12350  003980  0E01               	movlw	1
 12351  003982  6F88               	movwf	___llmod@counter& (0+255),b
 12352  003984  D006               	goto	l7797
 12353  003986                     l7795:
 12354                           
 12355                           ; BSR set to: 0
 12356  003986  90D8               	bcf	status,0,c
 12357  003988  3784               	rlcf	___llmod@divisor& (0+255),f,b
 12358  00398A  3785               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 12359  00398C  3786               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 12360  00398E  3787               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 12361  003990  2B88               	incf	___llmod@counter& (0+255),f,b
 12362  003992                     l7797:
 12363                           
 12364                           ; BSR set to: 0
 12365  003992  AF87               	btfss	(___llmod@divisor+3)& (0+255),7,b
 12366  003994  D7F8               	goto	l7795
 12367  003996                     u8460:
 12368                           
 12369                           ; BSR set to: 0
 12370  003996  5184               	movf	___llmod@divisor& (0+255),w,b
 12371  003998  5D80               	subwf	___llmod@dividend& (0+255),w,b
 12372  00399A  5185               	movf	(___llmod@divisor+1)& (0+255),w,b
 12373  00399C  5981               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 12374  00399E  5186               	movf	(___llmod@divisor+2)& (0+255),w,b
 12375  0039A0  5982               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 12376  0039A2  5187               	movf	(___llmod@divisor+3)& (0+255),w,b
 12377  0039A4  5983               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 12378  0039A6  A0D8               	btfss	status,0,c
 12379  0039A8  D008               	goto	l7803
 12380                           
 12381                           ; BSR set to: 0
 12382  0039AA  5184               	movf	___llmod@divisor& (0+255),w,b
 12383  0039AC  5F80               	subwf	___llmod@dividend& (0+255),f,b
 12384  0039AE  5185               	movf	(___llmod@divisor+1)& (0+255),w,b
 12385  0039B0  5B81               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 12386  0039B2  5186               	movf	(___llmod@divisor+2)& (0+255),w,b
 12387  0039B4  5B82               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 12388  0039B6  5187               	movf	(___llmod@divisor+3)& (0+255),w,b
 12389  0039B8  5B83               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 12390  0039BA                     l7803:
 12391                           
 12392                           ; BSR set to: 0
 12393  0039BA  90D8               	bcf	status,0,c
 12394  0039BC  3387               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 12395  0039BE  3386               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 12396  0039C0  3385               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 12397  0039C2  3384               	rrcf	___llmod@divisor& (0+255),f,b
 12398                           
 12399                           ; BSR set to: 0
 12400  0039C4  2F88               	decfsz	___llmod@counter& (0+255),f,b
 12401  0039C6  D7E7               	goto	u8460
 12402  0039C8                     l1152:
 12403                           
 12404                           ; BSR set to: 0
 12405  0039C8  C080  F080         	movff	___llmod@dividend,?___llmod
 12406  0039CC  C081  F081         	movff	___llmod@dividend+1,?___llmod+1
 12407  0039D0  C082  F082         	movff	___llmod@dividend+2,?___llmod+2
 12408  0039D4  C083  F083         	movff	___llmod@dividend+3,?___llmod+3
 12409                           
 12410                           ; BSR set to: 0
 12411  0039D8  0012               	return		;funcret
 12412  0039DA                     __end_of___llmod:
 12413                           	opt callstack 0
 12414                           
 12415 ;; *************** function _I2C_Master_Write *****************
 12416 ;; Defined at:
 12417 ;;		line 70 in file "I2C.c"
 12418 ;; Parameters:    Size  Location     Type
 12419 ;;  byteToWrite     2    1[BANK0 ] unsigned int 
 12420 ;; Auto vars:     Size  Location     Type
 12421 ;;		None
 12422 ;; Return value:  Size  Location     Type
 12423 ;;                  1    wreg      void 
 12424 ;; Registers used:
 12425 ;;		wreg, status,2, status,0, cstack
 12426 ;; Tracked objects:
 12427 ;;		On entry : 0/0
 12428 ;;		On exit  : 0/0
 12429 ;;		Unchanged: 0/0
 12430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12431 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12434 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12435 ;;Total ram usage:        2 bytes
 12436 ;; Hardware stack levels used:    1
 12437 ;; Hardware stack levels required when called:    4
 12438 ;; This function calls:
 12439 ;;		_I2C_Master_Wait
 12440 ;; This function is called by:
 12441 ;;		_UI_main
 12442 ;;		_brake
 12443 ;;		_start
 12444 ;;		_backwards
 12445 ;; This function uses a non-reentrant model
 12446 ;;
 12447                           
 12448                           	psect	text47
 12449  003ED2                     __ptext47:
 12450                           	opt callstack 0
 12451  003ED2                     _I2C_Master_Write:
 12452                           	opt callstack 25
 12453                           
 12454                           ;I2C.c: 71:     I2C_Master_Wait();
 12455                           
 12456                           ; BSR set to: 0
 12457                           ;incstack = 0
 12458  003ED2  EC4F  F01F         	call	_I2C_Master_Wait	;wreg free
 12459                           
 12460                           ;I2C.c: 74:     SSPBUF = byteToWrite;
 12461  003ED6  C081  FFC9         	movff	I2C_Master_Write@byteToWrite,4041	;volatile
 12462  003EDA  0012               	return		;funcret
 12463  003EDC                     __end_of_I2C_Master_Write:
 12464                           	opt callstack 0
 12465                           
 12466 ;; *************** function _I2C_Master_Stop *****************
 12467 ;; Defined at:
 12468 ;;		line 65 in file "I2C.c"
 12469 ;; Parameters:    Size  Location     Type
 12470 ;;		None
 12471 ;; Auto vars:     Size  Location     Type
 12472 ;;		None
 12473 ;; Return value:  Size  Location     Type
 12474 ;;                  1    wreg      void 
 12475 ;; Registers used:
 12476 ;;		wreg, status,2, status,0, cstack
 12477 ;; Tracked objects:
 12478 ;;		On entry : 0/0
 12479 ;;		On exit  : 0/0
 12480 ;;		Unchanged: 0/0
 12481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12486 ;;Total ram usage:        0 bytes
 12487 ;; Hardware stack levels used:    1
 12488 ;; Hardware stack levels required when called:    4
 12489 ;; This function calls:
 12490 ;;		_I2C_Master_Wait
 12491 ;; This function is called by:
 12492 ;;		_UI_main
 12493 ;;		_brake
 12494 ;;		_start
 12495 ;;		_backwards
 12496 ;; This function uses a non-reentrant model
 12497 ;;
 12498                           
 12499                           	psect	text48
 12500  003EDC                     __ptext48:
 12501                           	opt callstack 0
 12502  003EDC                     _I2C_Master_Stop:
 12503                           	opt callstack 25
 12504                           
 12505                           ;I2C.c: 66:     I2C_Master_Wait();
 12506                           
 12507                           ;incstack = 0
 12508  003EDC  EC4F  F01F         	call	_I2C_Master_Wait	;wreg free
 12509                           
 12510                           ;I2C.c: 67:     SSPCON2bits.PEN = 1;
 12511  003EE0  84C5               	bsf	4037,2,c	;volatile
 12512  003EE2  0012               	return		;funcret
 12513  003EE4                     __end_of_I2C_Master_Stop:
 12514                           	opt callstack 0
 12515                           
 12516 ;; *************** function _I2C_Master_Start *****************
 12517 ;; Defined at:
 12518 ;;		line 55 in file "I2C.c"
 12519 ;; Parameters:    Size  Location     Type
 12520 ;;		None
 12521 ;; Auto vars:     Size  Location     Type
 12522 ;;		None
 12523 ;; Return value:  Size  Location     Type
 12524 ;;                  1    wreg      void 
 12525 ;; Registers used:
 12526 ;;		wreg, status,2, status,0, cstack
 12527 ;; Tracked objects:
 12528 ;;		On entry : 0/0
 12529 ;;		On exit  : 0/0
 12530 ;;		Unchanged: 0/0
 12531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12536 ;;Total ram usage:        0 bytes
 12537 ;; Hardware stack levels used:    1
 12538 ;; Hardware stack levels required when called:    4
 12539 ;; This function calls:
 12540 ;;		_I2C_Master_Wait
 12541 ;; This function is called by:
 12542 ;;		_UI_main
 12543 ;;		_brake
 12544 ;;		_start
 12545 ;;		_backwards
 12546 ;; This function uses a non-reentrant model
 12547 ;;
 12548                           
 12549                           	psect	text49
 12550  003EE4                     __ptext49:
 12551                           	opt callstack 0
 12552  003EE4                     _I2C_Master_Start:
 12553                           	opt callstack 25
 12554                           
 12555                           ;I2C.c: 56:     I2C_Master_Wait();
 12556                           
 12557                           ;incstack = 0
 12558  003EE4  EC4F  F01F         	call	_I2C_Master_Wait	;wreg free
 12559                           
 12560                           ;I2C.c: 57:     SSPCON2bits.SEN = 1;
 12561  003EE8  80C5               	bsf	4037,0,c	;volatile
 12562  003EEA  0012               	return		;funcret
 12563  003EEC                     __end_of_I2C_Master_Start:
 12564                           	opt callstack 0
 12565                           
 12566 ;; *************** function _I2C_Master_Read *****************
 12567 ;; Defined at:
 12568 ;;		line 77 in file "I2C.c"
 12569 ;; Parameters:    Size  Location     Type
 12570 ;;  ackBit          1    wreg     unsigned char 
 12571 ;; Auto vars:     Size  Location     Type
 12572 ;;  ackBit          1    1[BANK0 ] unsigned char 
 12573 ;;  receivedByte    1    2[BANK0 ] unsigned char 
 12574 ;; Return value:  Size  Location     Type
 12575 ;;                  1    wreg      unsigned char 
 12576 ;; Registers used:
 12577 ;;		wreg, status,2, status,0, cstack
 12578 ;; Tracked objects:
 12579 ;;		On entry : 0/0
 12580 ;;		On exit  : 0/0
 12581 ;;		Unchanged: 0/0
 12582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12584 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12586 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12587 ;;Total ram usage:        2 bytes
 12588 ;; Hardware stack levels used:    1
 12589 ;; Hardware stack levels required when called:    4
 12590 ;; This function calls:
 12591 ;;		_I2C_Master_Wait
 12592 ;; This function is called by:
 12593 ;;		_UI_main
 12594 ;;		_brake
 12595 ;; This function uses a non-reentrant model
 12596 ;;
 12597                           
 12598                           	psect	text50
 12599  003DCC                     __ptext50:
 12600                           	opt callstack 0
 12601  003DCC                     _I2C_Master_Read:
 12602                           	opt callstack 25
 12603                           
 12604                           ;incstack = 0
 12605                           ;I2C_Master_Read@ackBit stored from wreg
 12606  003DCC  0100               	movlb	0	; () banked
 12607  003DCE  6F81               	movwf	I2C_Master_Read@ackBit& (0+255),b
 12608                           
 12609                           ;I2C.c: 78:     I2C_Master_Wait();
 12610  003DD0  EC4F  F01F         	call	_I2C_Master_Wait	;wreg free
 12611                           
 12612                           ;I2C.c: 79:     SSPCON2bits.RCEN = 1;
 12613  003DD4  86C5               	bsf	4037,3,c	;volatile
 12614                           
 12615                           ;I2C.c: 81:     I2C_Master_Wait();
 12616  003DD6  EC4F  F01F         	call	_I2C_Master_Wait	;wreg free
 12617                           
 12618                           ;I2C.c: 84:     unsigned char receivedByte = SSPBUF;
 12619  003DDA  CFC9 F082          	movff	4041,I2C_Master_Read@receivedByte	;volatile
 12620                           
 12621                           ;I2C.c: 86:     I2C_Master_Wait();
 12622  003DDE  EC4F  F01F         	call	_I2C_Master_Wait	;wreg free
 12623                           
 12624                           ;I2C.c: 87:     SSPCON2bits.ACKDT = ackBit;
 12625  003DE2  0100               	movlb	0	; () banked
 12626  003DE4  B181               	btfsc	I2C_Master_Read@ackBit& (0+255),0,b
 12627  003DE6  D002               	bra	u7945
 12628  003DE8  9AC5               	bcf	4037,5,c	;volatile
 12629  003DEA  D001               	bra	u7946
 12630  003DEC                     u7945:
 12631  003DEC  8AC5               	bsf	4037,5,c	;volatile
 12632  003DEE                     u7946:
 12633                           
 12634                           ;I2C.c: 88:     SSPCON2bits.ACKEN = 1;
 12635  003DEE  88C5               	bsf	4037,4,c	;volatile
 12636                           
 12637                           ;I2C.c: 90:     return receivedByte;
 12638  003DF0  0100               	movlb	0	; () banked
 12639  003DF2  5182               	movf	I2C_Master_Read@receivedByte& (0+255),w,b
 12640                           
 12641                           ; BSR set to: 0
 12642  003DF4  0012               	return		;funcret
 12643  003DF6                     __end_of_I2C_Master_Read:
 12644                           	opt callstack 0
 12645                           
 12646 ;; *************** function _I2C_Master_Wait *****************
 12647 ;; Defined at:
 12648 ;;		line 21 in file "I2C.c"
 12649 ;; Parameters:    Size  Location     Type
 12650 ;;		None
 12651 ;; Auto vars:     Size  Location     Type
 12652 ;;		None
 12653 ;; Return value:  Size  Location     Type
 12654 ;;                  1    wreg      void 
 12655 ;; Registers used:
 12656 ;;		wreg, status,2, status,0
 12657 ;; Tracked objects:
 12658 ;;		On entry : 0/0
 12659 ;;		On exit  : 0/0
 12660 ;;		Unchanged: 0/0
 12661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12664 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12665 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12666 ;;Total ram usage:        1 bytes
 12667 ;; Hardware stack levels used:    1
 12668 ;; Hardware stack levels required when called:    3
 12669 ;; This function calls:
 12670 ;;		Nothing
 12671 ;; This function is called by:
 12672 ;;		_I2C_Master_Start
 12673 ;;		_I2C_Master_Stop
 12674 ;;		_I2C_Master_Write
 12675 ;;		_I2C_Master_Read
 12676 ;;		_I2C_Master_RepeatedStart
 12677 ;; This function uses a non-reentrant model
 12678 ;;
 12679                           
 12680                           	psect	text51
 12681  003E9E                     __ptext51:
 12682                           	opt callstack 0
 12683  003E9E                     _I2C_Master_Wait:
 12684                           	opt callstack 25
 12685                           
 12686                           ;I2C.c: 26:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F)){
 12687                           
 12688                           ;I2C.c: 28:     }
 12689                           
 12690                           ; BSR set to: 0
 12691                           ;incstack = 0
 12692  003E9E  B4C7               	btfsc	4039,2,c	;volatile
 12693  003EA0  D7FE               	goto	_I2C_Master_Wait
 12694  003EA2  CFC5 F080          	movff	4037,??_I2C_Master_Wait	;volatile
 12695  003EA6  0E1F               	movlw	31
 12696  003EA8  0100               	movlb	0	; () banked
 12697  003EAA  1780               	andwf	??_I2C_Master_Wait& (0+255),f,b
 12698  003EAC  B4D8               	btfsc	status,2,c
 12699  003EAE  0012               	return	
 12700  003EB0  D7F6               	goto	_I2C_Master_Wait
 12701  003EB2                     __end_of_I2C_Master_Wait:
 12702                           	opt callstack 0
 12703                           
 12704 ;; *************** function _I2C_Master_Init *****************
 12705 ;; Defined at:
 12706 ;;		line 32 in file "I2C.c"
 12707 ;; Parameters:    Size  Location     Type
 12708 ;;  clockFreq       4   13[BANK0 ] const unsigned long 
 12709 ;; Auto vars:     Size  Location     Type
 12710 ;;		None
 12711 ;; Return value:  Size  Location     Type
 12712 ;;                  1    wreg      void 
 12713 ;; Registers used:
 12714 ;;		wreg, status,2, status,0, cstack
 12715 ;; Tracked objects:
 12716 ;;		On entry : 0/0
 12717 ;;		On exit  : 0/0
 12718 ;;		Unchanged: 0/0
 12719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12720 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12722 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12723 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12724 ;;Total ram usage:        8 bytes
 12725 ;; Hardware stack levels used:    1
 12726 ;; Hardware stack levels required when called:    4
 12727 ;; This function calls:
 12728 ;;		___lldiv
 12729 ;; This function is called by:
 12730 ;;		_UI_main
 12731 ;;		_start
 12732 ;; This function uses a non-reentrant model
 12733 ;;
 12734                           
 12735                           	psect	text52
 12736  0039DA                     __ptext52:
 12737                           	opt callstack 0
 12738  0039DA                     _I2C_Master_Init:
 12739                           	opt callstack 25
 12740                           
 12741                           ;I2C.c: 34:     SSPCON1bits.SSPEN = 0;
 12742                           
 12743                           ; BSR set to: 0
 12744                           ;incstack = 0
 12745  0039DA  9AC6               	bcf	4038,5,c	;volatile
 12746                           
 12747                           ;I2C.c: 37:     TRISCbits.TRISC3 = 1;
 12748  0039DC  8694               	bsf	3988,3,c	;volatile
 12749                           
 12750                           ;I2C.c: 38:     TRISCbits.TRISC4 = 1;
 12751  0039DE  8894               	bsf	3988,4,c	;volatile
 12752                           
 12753                           ;I2C.c: 43:     SSPADD = (10000000 / (4 * clockFreq)) - 1;
 12754  0039E0  0E80               	movlw	128
 12755  0039E2  0100               	movlb	0	; () banked
 12756  0039E4  6F80               	movwf	___lldiv@dividend& (0+255),b
 12757  0039E6  0E96               	movlw	150
 12758  0039E8  6F81               	movwf	(___lldiv@dividend+1)& (0+255),b
 12759  0039EA  0E98               	movlw	152
 12760  0039EC  6F82               	movwf	(___lldiv@dividend+2)& (0+255),b
 12761  0039EE  0E00               	movlw	0
 12762  0039F0  6F83               	movwf	(___lldiv@dividend+3)& (0+255),b
 12763  0039F2  C08D  F091         	movff	I2C_Master_Init@clockFreq,??_I2C_Master_Init
 12764  0039F6  C08E  F092         	movff	I2C_Master_Init@clockFreq+1,??_I2C_Master_Init+1
 12765  0039FA  C08F  F093         	movff	I2C_Master_Init@clockFreq+2,??_I2C_Master_Init+2
 12766  0039FE  C090  F094         	movff	I2C_Master_Init@clockFreq+3,??_I2C_Master_Init+3
 12767  003A02  0E02               	movlw	2
 12768  003A04                     u7935:
 12769  003A04  90D8               	bcf	status,0,c
 12770  003A06  3791               	rlcf	??_I2C_Master_Init& (0+255),f,b
 12771  003A08  3792               	rlcf	(??_I2C_Master_Init+1)& (0+255),f,b
 12772  003A0A  3793               	rlcf	(??_I2C_Master_Init+2)& (0+255),f,b
 12773  003A0C  3794               	rlcf	(??_I2C_Master_Init+3)& (0+255),f,b
 12774  003A0E  2EE8               	decfsz	wreg,f,c
 12775  003A10  D7F9               	goto	u7935
 12776  003A12  C091  F084         	movff	??_I2C_Master_Init,___lldiv@divisor
 12777  003A16  C092  F085         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
 12778  003A1A  C093  F086         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
 12779  003A1E  C094  F087         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
 12780  003A22  ECC6  F01B         	call	___lldiv	;wreg free
 12781  003A26  0100               	movlb	0	; () banked
 12782  003A28  0580               	decf	?___lldiv& (0+255),w,b
 12783  003A2A  6EC8               	movwf	4040,c	;volatile
 12784                           
 12785                           ; BSR set to: 0
 12786                           ;I2C.c: 46:     SSPSTAT = 0b10000000;
 12787  003A2C  0E80               	movlw	128
 12788  003A2E  6EC7               	movwf	4039,c	;volatile
 12789                           
 12790                           ; BSR set to: 0
 12791                           ;I2C.c: 49:     SSPCON1 = 0b00101000;
 12792  003A30  0E28               	movlw	40
 12793  003A32  6EC6               	movwf	4038,c	;volatile
 12794                           
 12795                           ; BSR set to: 0
 12796                           ;I2C.c: 52:     SSPCON2 = 0b00000000;
 12797  003A34  0E00               	movlw	0
 12798  003A36  6EC5               	movwf	4037,c	;volatile
 12799                           
 12800                           ; BSR set to: 0
 12801  003A38  0012               	return		;funcret
 12802  003A3A                     __end_of_I2C_Master_Init:
 12803                           	opt callstack 0
 12804                           
 12805 ;; *************** function ___lldiv *****************
 12806 ;; Defined at:
 12807 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__lldiv.c"
 12808 ;; Parameters:    Size  Location     Type
 12809 ;;  dividend        4    0[BANK0 ] unsigned long 
 12810 ;;  divisor         4    4[BANK0 ] unsigned long 
 12811 ;; Auto vars:     Size  Location     Type
 12812 ;;  quotient        4    8[BANK0 ] unsigned long 
 12813 ;;  counter         1   12[BANK0 ] unsigned char 
 12814 ;; Return value:  Size  Location     Type
 12815 ;;                  4    0[BANK0 ] unsigned long 
 12816 ;; Registers used:
 12817 ;;		wreg, status,2, status,0
 12818 ;; Tracked objects:
 12819 ;;		On entry : 0/0
 12820 ;;		On exit  : 0/0
 12821 ;;		Unchanged: 0/0
 12822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12823 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12824 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12826 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12827 ;;Total ram usage:       13 bytes
 12828 ;; Hardware stack levels used:    1
 12829 ;; Hardware stack levels required when called:    3
 12830 ;; This function calls:
 12831 ;;		Nothing
 12832 ;; This function is called by:
 12833 ;;		_I2C_Master_Init
 12834 ;; This function uses a non-reentrant model
 12835 ;;
 12836                           
 12837                           	psect	text53
 12838  00378C                     __ptext53:
 12839                           	opt callstack 0
 12840  00378C                     ___lldiv:
 12841                           	opt callstack 25
 12842                           
 12843                           ; BSR set to: 0
 12844                           ;incstack = 0
 12845  00378C  0E00               	movlw	0
 12846  00378E  0100               	movlb	0	; () banked
 12847  003790  6F88               	movwf	___lldiv@quotient& (0+255),b
 12848  003792  0E00               	movlw	0
 12849  003794  6F89               	movwf	(___lldiv@quotient+1)& (0+255),b
 12850  003796  0E00               	movlw	0
 12851  003798  6F8A               	movwf	(___lldiv@quotient+2)& (0+255),b
 12852  00379A  0E00               	movlw	0
 12853  00379C  6F8B               	movwf	(___lldiv@quotient+3)& (0+255),b
 12854                           
 12855                           ; BSR set to: 0
 12856  00379E  5184               	movf	___lldiv@divisor& (0+255),w,b
 12857  0037A0  1185               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 12858  0037A2  1186               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 12859  0037A4  1187               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 12860  0037A6  B4D8               	btfsc	status,2,c
 12861  0037A8  D02A               	goto	l759
 12862                           
 12863                           ; BSR set to: 0
 12864  0037AA  0E01               	movlw	1
 12865  0037AC  6F8C               	movwf	___lldiv@counter& (0+255),b
 12866  0037AE  D006               	goto	l7373
 12867  0037B0                     l7371:
 12868                           
 12869                           ; BSR set to: 0
 12870  0037B0  90D8               	bcf	status,0,c
 12871  0037B2  3784               	rlcf	___lldiv@divisor& (0+255),f,b
 12872  0037B4  3785               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 12873  0037B6  3786               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 12874  0037B8  3787               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 12875  0037BA  2B8C               	incf	___lldiv@counter& (0+255),f,b
 12876  0037BC                     l7373:
 12877                           
 12878                           ; BSR set to: 0
 12879  0037BC  AF87               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 12880  0037BE  D7F8               	goto	l7371
 12881  0037C0                     u7910:
 12882                           
 12883                           ; BSR set to: 0
 12884  0037C0  90D8               	bcf	status,0,c
 12885  0037C2  3788               	rlcf	___lldiv@quotient& (0+255),f,b
 12886  0037C4  3789               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 12887  0037C6  378A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 12888  0037C8  378B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 12889                           
 12890                           ; BSR set to: 0
 12891  0037CA  5184               	movf	___lldiv@divisor& (0+255),w,b
 12892  0037CC  5D80               	subwf	___lldiv@dividend& (0+255),w,b
 12893  0037CE  5185               	movf	(___lldiv@divisor+1)& (0+255),w,b
 12894  0037D0  5981               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 12895  0037D2  5186               	movf	(___lldiv@divisor+2)& (0+255),w,b
 12896  0037D4  5982               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 12897  0037D6  5187               	movf	(___lldiv@divisor+3)& (0+255),w,b
 12898  0037D8  5983               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 12899  0037DA  A0D8               	btfss	status,0,c
 12900  0037DC  D009               	goto	l7383
 12901                           
 12902                           ; BSR set to: 0
 12903  0037DE  5184               	movf	___lldiv@divisor& (0+255),w,b
 12904  0037E0  5F80               	subwf	___lldiv@dividend& (0+255),f,b
 12905  0037E2  5185               	movf	(___lldiv@divisor+1)& (0+255),w,b
 12906  0037E4  5B81               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 12907  0037E6  5186               	movf	(___lldiv@divisor+2)& (0+255),w,b
 12908  0037E8  5B82               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 12909  0037EA  5187               	movf	(___lldiv@divisor+3)& (0+255),w,b
 12910  0037EC  5B83               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 12911                           
 12912                           ; BSR set to: 0
 12913  0037EE  8188               	bsf	___lldiv@quotient& (0+255),0,b
 12914  0037F0                     l7383:
 12915                           
 12916                           ; BSR set to: 0
 12917  0037F0  90D8               	bcf	status,0,c
 12918  0037F2  3387               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 12919  0037F4  3386               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 12920  0037F6  3385               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 12921  0037F8  3384               	rrcf	___lldiv@divisor& (0+255),f,b
 12922                           
 12923                           ; BSR set to: 0
 12924  0037FA  2F8C               	decfsz	___lldiv@counter& (0+255),f,b
 12925  0037FC  D7E1               	goto	u7910
 12926  0037FE                     l759:
 12927                           
 12928                           ; BSR set to: 0
 12929  0037FE  C088  F080         	movff	___lldiv@quotient,?___lldiv
 12930  003802  C089  F081         	movff	___lldiv@quotient+1,?___lldiv+1
 12931  003806  C08A  F082         	movff	___lldiv@quotient+2,?___lldiv+2
 12932  00380A  C08B  F083         	movff	___lldiv@quotient+3,?___lldiv+3
 12933                           
 12934                           ; BSR set to: 0
 12935  00380E  0012               	return		;funcret
 12936  003810                     __end_of___lldiv:
 12937                           	opt callstack 0
 12938                           
 12939 ;; *************** function _ISR *****************
 12940 ;; Defined at:
 12941 ;;		line 71 in file "main.c"
 12942 ;; Parameters:    Size  Location     Type
 12943 ;;		None
 12944 ;; Auto vars:     Size  Location     Type
 12945 ;;		None
 12946 ;; Return value:  Size  Location     Type
 12947 ;;                  1    wreg      void 
 12948 ;; Registers used:
 12949 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12950 ;; Tracked objects:
 12951 ;;		On entry : 0/0
 12952 ;;		On exit  : 0/0
 12953 ;;		Unchanged: 0/0
 12954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12957 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12958 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12959 ;;Total ram usage:        2 bytes
 12960 ;; Hardware stack levels used:    1
 12961 ;; Hardware stack levels required when called:    2
 12962 ;; This function calls:
 12963 ;;		_echo
 12964 ;; This function is called by:
 12965 ;;		Interrupt level 2
 12966 ;; This function uses a non-reentrant model
 12967 ;;
 12968                           
 12969                           	psect	intcode
 12970  000008                     __pintcode:
 12971                           	opt callstack 0
 12972  000008                     _ISR:
 12973                           	opt callstack 14
 12974                           
 12975                           ; BSR set to: 0
 12976                           ;incstack = 0
 12977  000008  826E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 12978  00000A  EDE2  F01D         	call	int_func,f	;refresh shadow registers
 12979                           
 12980                           	psect	intcode_body
 12981  003BC4                     __pintcode_body:
 12982                           	opt callstack 14
 12983  003BC4                     int_func:
 12984                           	opt callstack 14
 12985  003BC4  0006               	pop		; remove dummy address from shadow register refresh
 12986  003BC6  CFD9 F036          	movff	fsr2l,??_ISR
 12987  003BCA  CFDA F037          	movff	fsr2h,??_ISR+1
 12988                           
 12989                           ;main.c: 72:  if(RBIF == 1){
 12990  003BCE  A0F2               	btfss	4082,0,c	;volatile
 12991  003BD0  D012               	goto	i2l396
 12992                           
 12993                           ;main.c: 73:         if (sens){
 12994  003BD2  5058               	movf	_sens,w,c	;volatile
 12995  003BD4  1059               	iorwf	_sens+1,w,c	;volatile
 12996  003BD6  B4D8               	btfsc	status,2,c
 12997  003BD8  D005               	goto	i2l6263
 12998                           
 12999                           ;main.c: 74:             RBIE = 0;
 13000  003BDA  96F2               	bcf	4082,3,c	;volatile
 13001                           
 13002                           ;main.c: 75:             echo();
 13003  003BDC  EC28  F007         	call	_echo	;wreg free
 13004                           
 13005                           ;main.c: 76:             RBIF = 0;
 13006  003BE0  90F2               	bcf	4082,0,c	;volatile
 13007                           
 13008                           ;main.c: 77:             RBIE = 1;
 13009  003BE2  86F2               	bsf	4082,3,c	;volatile
 13010  003BE4                     i2l6263:
 13011                           
 13012                           ;main.c: 79:         if (~sens){
 13013  003BE4  2858               	incf	_sens,w,c	;volatile
 13014  003BE6  E103               	bnz	i2u650_40
 13015  003BE8  2859               	incf	_sens+1,w,c	;volatile
 13016  003BEA  B4D8               	btfsc	status,2,c
 13017  003BEC  D004               	goto	i2l396
 13018  003BEE                     i2u650_40:
 13019                           
 13020                           ;main.c: 80:             key_was_pressed = 1;
 13021  003BEE  0E01               	movlw	1
 13022  003BF0  0101               	movlb	1	; () banked
 13023  003BF2  6FE5               	movwf	_key_was_pressed& (0+255),b	;volatile
 13024                           
 13025                           ; BSR set to: 1
 13026                           ;main.c: 81:             INT1IF = 0;
 13027  003BF4  90F0               	bcf	4080,0,c	;volatile
 13028  003BF6                     i2l396:
 13029  003BF6  C037  FFDA         	movff	??_ISR+1,fsr2h
 13030  003BFA  C036  FFD9         	movff	??_ISR,fsr2l
 13031  003BFE  926E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 13032  003C00  0011               	retfie		f
 13033  003C02                     __end_of_ISR:
 13034                           	opt callstack 0
 13035                           
 13036 ;; *************** function _echo *****************
 13037 ;; Defined at:
 13038 ;;		line 99 in file "main.c"
 13039 ;; Parameters:    Size  Location     Type
 13040 ;;		None
 13041 ;; Auto vars:     Size  Location     Type
 13042 ;;		None
 13043 ;; Return value:  Size  Location     Type
 13044 ;;                  1    wreg      void 
 13045 ;; Registers used:
 13046 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13047 ;; Tracked objects:
 13048 ;;		On entry : 0/0
 13049 ;;		On exit  : 0/0
 13050 ;;		Unchanged: 0/0
 13051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13054 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13055 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13056 ;;Total ram usage:        4 bytes
 13057 ;; Hardware stack levels used:    1
 13058 ;; Hardware stack levels required when called:    1
 13059 ;; This function calls:
 13060 ;;		___fldiv
 13061 ;;		___fltol
 13062 ;;		___xxtofl
 13063 ;;		i2___awdiv
 13064 ;; This function is called by:
 13065 ;;		_ISR
 13066 ;; This function uses a non-reentrant model
 13067 ;;
 13068                           
 13069                           	psect	text55
 13070  000E50                     __ptext55:
 13071                           	opt callstack 0
 13072  000E50                     _echo:
 13073                           	opt callstack 14
 13074                           
 13075                           ;main.c: 100:     if (b==1){
 13076                           
 13077                           ;incstack = 0
 13078  000E50  045A               	decf	_b,w,c
 13079  000E52  105B               	iorwf	_b+1,w,c
 13080  000E54  A4D8               	btfss	status,2,c
 13081  000E56  D0A2               	goto	i2l5709
 13082                           
 13083                           ;main.c: 101:         if (RB7 == 1){
 13084  000E58  BE81               	btfsc	3969,7,c	;volatile
 13085                           
 13086                           ;main.c: 102:             TMR1ON = 1;
 13087  000E5A  80CD               	bsf	4045,0,c	;volatile
 13088                           
 13089                           ;main.c: 104:         if (RB7 == 0){
 13090                           
 13091                           ;main.c: 103:         }
 13092  000E5C  BE81               	btfsc	3969,7,c	;volatile
 13093  000E5E  D037               	goto	i2l5685
 13094                           
 13095                           ;main.c: 105:             TMR1ON = 0;
 13096  000E60  90CD               	bcf	4045,0,c	;volatile
 13097                           
 13098                           ;main.c: 106:             a[0] = (TMR1L | (TMR1H<<8))/58.82;
 13099  000E62  0EAE               	movlw	174
 13100  000E64  6E13               	movwf	___fldiv@a,c
 13101  000E66  0E47               	movlw	71
 13102  000E68  6E14               	movwf	___fldiv@a+1,c
 13103  000E6A  0E6B               	movlw	107
 13104  000E6C  6E15               	movwf	___fldiv@a+2,c
 13105  000E6E  0E42               	movlw	66
 13106  000E70  6E16               	movwf	___fldiv@a+3,c
 13107  000E72  50CF               	movf	4047,w,c	;volatile
 13108  000E74  6E33               	movwf	(??_echo+1)& (0+255),c
 13109  000E76  6A32               	clrf	??_echo& (0+255),c
 13110  000E78  50CE               	movf	4046,w,c	;volatile
 13111  000E7A  6E34               	movwf	(??_echo+2)& (0+255),c
 13112  000E7C  6A35               	clrf	(??_echo+3)& (0+255),c
 13113  000E7E  5032               	movf	??_echo,w,c
 13114  000E80  1234               	iorwf	??_echo+2,f,c
 13115  000E82  5033               	movf	??_echo+1,w,c
 13116  000E84  1235               	iorwf	??_echo+3,f,c
 13117  000E86  C034  F001         	movff	??_echo+2,___xxtofl@val
 13118  000E8A  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 13119  000E8E  0E00               	movlw	0
 13120  000E90  BE02               	btfsc	___xxtofl@val+1,7,c
 13121  000E92  0EFF               	movlw	-1
 13122  000E94  6E03               	movwf	___xxtofl@val+2,c
 13123  000E96  6E04               	movwf	___xxtofl@val+3,c
 13124  000E98  0E01               	movlw	1
 13125  000E9A  EC2B  F016         	call	___xxtofl
 13126  000E9E  C001  F00F         	movff	?___xxtofl,___fldiv@b
 13127  000EA2  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 13128  000EA6  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 13129  000EAA  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 13130  000EAE  EC37  F00D         	call	___fldiv	;wreg free
 13131  000EB2  C00F  F028         	movff	?___fldiv,___fltol@f1
 13132  000EB6  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 13133  000EBA  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 13134  000EBE  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 13135  000EC2  EC30  F01A         	call	___fltol	;wreg free
 13136  000EC6  C028  F061         	movff	?___fltol,_a
 13137  000ECA  C029  F062         	movff	?___fltol+1,_a+1
 13138  000ECE                     i2l5685:
 13139                           
 13140                           ;main.c: 110:         if (a[0]>=2 && a[0]<=200){
 13141  000ECE  BE62               	btfsc	_a+1,7,c
 13142  000ED0  D065               	goto	i2l5709
 13143  000ED2  5062               	movf	_a+1,w,c
 13144  000ED4  E104               	bnz	i2u563_40
 13145  000ED6  0E02               	movlw	2
 13146  000ED8  5C61               	subwf	_a,w,c
 13147  000EDA  A0D8               	btfss	status,0,c
 13148  000EDC  D05F               	goto	i2l5709
 13149  000EDE                     i2u563_40:
 13150  000EDE  BE62               	btfsc	_a+1,7,c
 13151  000EE0  D006               	goto	i2u564_40
 13152  000EE2  5062               	movf	_a+1,w,c
 13153  000EE4  E15B               	bnz	i2l5709
 13154  000EE6  0EC9               	movlw	201
 13155  000EE8  5C61               	subwf	_a,w,c
 13156  000EEA  B0D8               	btfsc	status,0,c
 13157  000EEC  D057               	goto	i2l5709
 13158  000EEE                     i2u564_40:
 13159                           
 13160                           ;main.c: 111:             if ((~sumf[0])&&(dist_final[0][0]!=0)&&(dist_final[0][1]!=0)&&
      +                          (dist_final[0][2]!=0)){
 13161  000EEE  0440               	decf	_sumf,w,c
 13162  000EF0  B4D8               	btfsc	status,2,c
 13163  000EF2  D01B               	goto	i2l5701
 13164  000EF4  0102               	movlb	2	; () banked
 13165  000EF6  5150               	movf	_dist_final& (0+255),w,b
 13166  000EF8  1151               	iorwf	(_dist_final+1)& (0+255),w,b
 13167  000EFA  B4D8               	btfsc	status,2,c
 13168  000EFC  D016               	goto	i2l5701
 13169                           
 13170                           ; BSR set to: 2
 13171  000EFE  5152               	movf	(_dist_final+2)& (0+255),w,b
 13172  000F00  1153               	iorwf	(_dist_final+3)& (0+255),w,b
 13173  000F02  B4D8               	btfsc	status,2,c
 13174  000F04  D012               	goto	i2l5701
 13175                           
 13176                           ; BSR set to: 2
 13177  000F06  5154               	movf	(_dist_final+4)& (0+255),w,b
 13178  000F08  1155               	iorwf	(_dist_final+5)& (0+255),w,b
 13179  000F0A  B4D8               	btfsc	status,2,c
 13180  000F0C  D00E               	goto	i2l5701
 13181                           
 13182                           ; BSR set to: 2
 13183                           ;main.c: 112:                 sum[0] = (dist_final[0][0]+dist_final[0][1]+dist_final[0][
      +                          2]);
 13184  000F0E  5154               	movf	(_dist_final+4)& (0+255),w,b
 13185  000F10  2552               	addwf	(_dist_final+2)& (0+255),w,b
 13186  000F12  6E32               	movwf	??_echo& (0+255),c
 13187  000F14  5155               	movf	(_dist_final+5)& (0+255),w,b
 13188  000F16  2153               	addwfc	(_dist_final+3)& (0+255),w,b
 13189  000F18  6E33               	movwf	(??_echo+1)& (0+255),c
 13190  000F1A  5150               	movf	_dist_final& (0+255),w,b
 13191  000F1C  2432               	addwf	??_echo,w,c
 13192  000F1E  6E38               	movwf	_sum,c
 13193  000F20  5151               	movf	(_dist_final+1)& (0+255),w,b
 13194  000F22  2033               	addwfc	??_echo+1,w,c
 13195  000F24  6E39               	movwf	_sum+1,c
 13196                           
 13197                           ; BSR set to: 2
 13198                           ;main.c: 113:                 sumf[0] = 1;
 13199  000F26  0E01               	movlw	1
 13200  000F28  6E40               	movwf	_sumf,c
 13201  000F2A                     i2l5701:
 13202                           
 13203                           ;main.c: 115:             if (sumf[0]){
 13204  000F2A  5040               	movf	_sumf,w,c
 13205  000F2C  B4D8               	btfsc	status,2,c
 13206  000F2E  D029               	goto	i2l5707
 13207                           
 13208                           ;main.c: 116:                 sum[0] = sum[0] - dist_final[0][meas] + a[0];
 13209  000F30  90D8               	bcf	status,0,c
 13210  000F32  3450               	rlcf	_meas,w,c	;volatile
 13211  000F34  6ED9               	movwf	fsr2l,c
 13212  000F36  3451               	rlcf	_meas+1,w,c	;volatile
 13213  000F38  6EDA               	movwf	fsr2h,c
 13214  000F3A  0E50               	movlw	low _dist_final
 13215  000F3C  26D9               	addwf	fsr2l,f,c
 13216  000F3E  0E02               	movlw	high _dist_final
 13217  000F40  22DA               	addwfc	fsr2h,f,c
 13218  000F42  CFDE F032          	movff	postinc2,??_echo
 13219  000F46  CFDD F033          	movff	postdec2,??_echo+1
 13220  000F4A  C038  F034         	movff	_sum,??_echo+2
 13221  000F4E  C039  F035         	movff	_sum+1,??_echo+3
 13222  000F52  5032               	movf	??_echo,w,c
 13223  000F54  5E34               	subwf	??_echo+2,f,c
 13224  000F56  5033               	movf	??_echo+1,w,c
 13225  000F58  5A35               	subwfb	??_echo+3,f,c
 13226  000F5A  5061               	movf	_a,w,c
 13227  000F5C  2434               	addwf	??_echo+2,w,c
 13228  000F5E  6E38               	movwf	_sum,c
 13229  000F60  5062               	movf	_a+1,w,c
 13230  000F62  2035               	addwfc	??_echo+3,w,c
 13231  000F64  6E39               	movwf	_sum+1,c
 13232                           
 13233                           ;main.c: 117:                 dist_final[0][5] = (sum[0]/5);
 13234  000F66  C038  F001         	movff	_sum,i2___awdiv@dividend
 13235  000F6A  C039  F002         	movff	_sum+1,i2___awdiv@dividend+1
 13236  000F6E  0E00               	movlw	0
 13237  000F70  6E04               	movwf	i2___awdiv@divisor+1,c
 13238  000F72  0E05               	movlw	5
 13239  000F74  6E03               	movwf	i2___awdiv@divisor,c
 13240  000F76  EC08  F01C         	call	i2___awdiv	;wreg free
 13241  000F7A  C001  F25A         	movff	?i2___awdiv,_dist_final+10
 13242  000F7E  C002  F25B         	movff	?i2___awdiv+1,_dist_final+11
 13243  000F82                     i2l5707:
 13244                           
 13245                           ;main.c: 119:             dist_final[0][meas] = a[0];
 13246  000F82  90D8               	bcf	status,0,c
 13247  000F84  3450               	rlcf	_meas,w,c	;volatile
 13248  000F86  6ED9               	movwf	fsr2l,c
 13249  000F88  3451               	rlcf	_meas+1,w,c	;volatile
 13250  000F8A  6EDA               	movwf	fsr2h,c
 13251  000F8C  0E50               	movlw	low _dist_final
 13252  000F8E  26D9               	addwf	fsr2l,f,c
 13253  000F90  0E02               	movlw	high _dist_final
 13254  000F92  22DA               	addwfc	fsr2h,f,c
 13255  000F94  C061  FFDE         	movff	_a,postinc2
 13256  000F98  C062  FFDD         	movff	_a+1,postdec2
 13257  000F9C                     i2l5709:
 13258                           
 13259                           ;main.c: 122:     if (b==2){
 13260  000F9C  0E02               	movlw	2
 13261  000F9E  185A               	xorwf	_b,w,c
 13262  000FA0  105B               	iorwf	_b+1,w,c
 13263  000FA2  A4D8               	btfss	status,2,c
 13264  000FA4  D0A4               	goto	i2l5743
 13265                           
 13266                           ;main.c: 123:         if (RB6 == 1){
 13267  000FA6  BC81               	btfsc	3969,6,c	;volatile
 13268                           
 13269                           ;main.c: 124:             TMR1ON = 1;
 13270  000FA8  80CD               	bsf	4045,0,c	;volatile
 13271                           
 13272                           ;main.c: 126:         if (RB6 == 0){
 13273                           
 13274                           ;main.c: 125:         }
 13275  000FAA  BC81               	btfsc	3969,6,c	;volatile
 13276  000FAC  D037               	goto	i2l5719
 13277                           
 13278                           ;main.c: 127:             TMR1ON = 0;
 13279  000FAE  90CD               	bcf	4045,0,c	;volatile
 13280                           
 13281                           ;main.c: 128:             a[1] = (TMR1L | (TMR1H<<8))/58.82;
 13282  000FB0  0EAE               	movlw	174
 13283  000FB2  6E13               	movwf	___fldiv@a,c
 13284  000FB4  0E47               	movlw	71
 13285  000FB6  6E14               	movwf	___fldiv@a+1,c
 13286  000FB8  0E6B               	movlw	107
 13287  000FBA  6E15               	movwf	___fldiv@a+2,c
 13288  000FBC  0E42               	movlw	66
 13289  000FBE  6E16               	movwf	___fldiv@a+3,c
 13290  000FC0  50CF               	movf	4047,w,c	;volatile
 13291  000FC2  6E33               	movwf	(??_echo+1)& (0+255),c
 13292  000FC4  6A32               	clrf	??_echo& (0+255),c
 13293  000FC6  50CE               	movf	4046,w,c	;volatile
 13294  000FC8  6E34               	movwf	(??_echo+2)& (0+255),c
 13295  000FCA  6A35               	clrf	(??_echo+3)& (0+255),c
 13296  000FCC  5032               	movf	??_echo,w,c
 13297  000FCE  1234               	iorwf	??_echo+2,f,c
 13298  000FD0  5033               	movf	??_echo+1,w,c
 13299  000FD2  1235               	iorwf	??_echo+3,f,c
 13300  000FD4  C034  F001         	movff	??_echo+2,___xxtofl@val
 13301  000FD8  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 13302  000FDC  0E00               	movlw	0
 13303  000FDE  BE02               	btfsc	___xxtofl@val+1,7,c
 13304  000FE0  0EFF               	movlw	-1
 13305  000FE2  6E03               	movwf	___xxtofl@val+2,c
 13306  000FE4  6E04               	movwf	___xxtofl@val+3,c
 13307  000FE6  0E01               	movlw	1
 13308  000FE8  EC2B  F016         	call	___xxtofl
 13309  000FEC  C001  F00F         	movff	?___xxtofl,___fldiv@b
 13310  000FF0  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 13311  000FF4  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 13312  000FF8  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 13313  000FFC  EC37  F00D         	call	___fldiv	;wreg free
 13314  001000  C00F  F028         	movff	?___fldiv,___fltol@f1
 13315  001004  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 13316  001008  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 13317  00100C  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 13318  001010  EC30  F01A         	call	___fltol	;wreg free
 13319  001014  C028  F063         	movff	?___fltol,_a+2
 13320  001018  C029  F064         	movff	?___fltol+1,_a+3
 13321  00101C                     i2l5719:
 13322                           
 13323                           ;main.c: 131:                 if (a[1]>=2 && a[1]<=200){
 13324  00101C  BE64               	btfsc	_a+3,7,c
 13325  00101E  D067               	goto	i2l5743
 13326  001020  5064               	movf	_a+3,w,c
 13327  001022  E104               	bnz	i2u573_40
 13328  001024  0E02               	movlw	2
 13329  001026  5C63               	subwf	_a+2,w,c
 13330  001028  A0D8               	btfss	status,0,c
 13331  00102A  D061               	goto	i2l5743
 13332  00102C                     i2u573_40:
 13333  00102C  BE64               	btfsc	_a+3,7,c
 13334  00102E  D006               	goto	i2u574_40
 13335  001030  5064               	movf	_a+3,w,c
 13336  001032  E15D               	bnz	i2l5743
 13337  001034  0EC9               	movlw	201
 13338  001036  5C63               	subwf	_a+2,w,c
 13339  001038  B0D8               	btfsc	status,0,c
 13340  00103A  D059               	goto	i2l5743
 13341  00103C                     i2u574_40:
 13342                           
 13343                           ;main.c: 133:                 if ((~sumf[1])&&(dist_final[1][0]!=0)&&(dist_final[1][1]!=
      +                          0)&&(dist_final[1][2]!=0)){
 13344  00103C  0441               	decf	_sumf+1,w,c
 13345  00103E  B4D8               	btfsc	status,2,c
 13346  001040  D01B               	goto	i2l5735
 13347  001042  0102               	movlb	2	; () banked
 13348  001044  515C               	movf	(_dist_final+12)& (0+255),w,b
 13349  001046  115D               	iorwf	(_dist_final+13)& (0+255),w,b
 13350  001048  B4D8               	btfsc	status,2,c
 13351  00104A  D016               	goto	i2l5735
 13352                           
 13353                           ; BSR set to: 2
 13354  00104C  515E               	movf	(_dist_final+14)& (0+255),w,b
 13355  00104E  115F               	iorwf	(_dist_final+15)& (0+255),w,b
 13356  001050  B4D8               	btfsc	status,2,c
 13357  001052  D012               	goto	i2l5735
 13358                           
 13359                           ; BSR set to: 2
 13360  001054  5160               	movf	(_dist_final+16)& (0+255),w,b
 13361  001056  1161               	iorwf	(_dist_final+17)& (0+255),w,b
 13362  001058  B4D8               	btfsc	status,2,c
 13363  00105A  D00E               	goto	i2l5735
 13364                           
 13365                           ; BSR set to: 2
 13366                           ;main.c: 134:             sum[1] = (dist_final[1][0]+dist_final[1][1]+dist_final[1][2]);
 13367  00105C  515E               	movf	(_dist_final+14)& (0+255),w,b
 13368  00105E  255C               	addwf	(_dist_final+12)& (0+255),w,b
 13369  001060  6E32               	movwf	??_echo& (0+255),c
 13370  001062  515F               	movf	(_dist_final+15)& (0+255),w,b
 13371  001064  215D               	addwfc	(_dist_final+13)& (0+255),w,b
 13372  001066  6E33               	movwf	(??_echo+1)& (0+255),c
 13373  001068  5160               	movf	(_dist_final+16)& (0+255),w,b
 13374  00106A  2432               	addwf	??_echo,w,c
 13375  00106C  6E3A               	movwf	_sum+2,c
 13376  00106E  5161               	movf	(_dist_final+17)& (0+255),w,b
 13377  001070  2033               	addwfc	??_echo+1,w,c
 13378  001072  6E3B               	movwf	_sum+3,c
 13379                           
 13380                           ; BSR set to: 2
 13381                           ;main.c: 135:             sumf[1] = 1;
 13382  001074  0E01               	movlw	1
 13383  001076  6E41               	movwf	_sumf+1,c
 13384  001078                     i2l5735:
 13385                           
 13386                           ;main.c: 137:         if (sumf[1]){
 13387  001078  5041               	movf	_sumf+1,w,c
 13388  00107A  B4D8               	btfsc	status,2,c
 13389  00107C  D02B               	goto	i2l5741
 13390                           
 13391                           ;main.c: 138:             sum[1] = sum[1] - dist_final[1][meas] + a[1];
 13392  00107E  90D8               	bcf	status,0,c
 13393  001080  3450               	rlcf	_meas,w,c	;volatile
 13394  001082  6ED9               	movwf	fsr2l,c
 13395  001084  3451               	rlcf	_meas+1,w,c	;volatile
 13396  001086  6EDA               	movwf	fsr2h,c
 13397  001088  0E5C               	movlw	low (_dist_final+12)
 13398  00108A  26D9               	addwf	fsr2l,f,c
 13399  00108C  0E02               	movlw	high (_dist_final+12)
 13400  00108E  22DA               	addwfc	fsr2h,f,c
 13401  001090  CFDE F032          	movff	postinc2,??_echo
 13402  001094  CFDD F033          	movff	postdec2,??_echo+1
 13403  001098  EE20  F03A         	lfsr	2,_sum+2
 13404  00109C  CFDE F034          	movff	postinc2,??_echo+2
 13405  0010A0  CFDD F035          	movff	postdec2,??_echo+3
 13406  0010A4  5032               	movf	??_echo,w,c
 13407  0010A6  5E34               	subwf	??_echo+2,f,c
 13408  0010A8  5033               	movf	??_echo+1,w,c
 13409  0010AA  5A35               	subwfb	??_echo+3,f,c
 13410  0010AC  5063               	movf	_a+2,w,c
 13411  0010AE  2434               	addwf	??_echo+2,w,c
 13412  0010B0  6E3A               	movwf	_sum+2,c
 13413  0010B2  5064               	movf	_a+3,w,c
 13414  0010B4  2035               	addwfc	??_echo+3,w,c
 13415  0010B6  6E3B               	movwf	_sum+3,c
 13416                           
 13417                           ;main.c: 139:             dist_final[1][5] = (sum[1]/5);
 13418  0010B8  C03A  F001         	movff	_sum+2,i2___awdiv@dividend
 13419  0010BC  C03B  F002         	movff	_sum+3,i2___awdiv@dividend+1
 13420  0010C0  0E00               	movlw	0
 13421  0010C2  6E04               	movwf	i2___awdiv@divisor+1,c
 13422  0010C4  0E05               	movlw	5
 13423  0010C6  6E03               	movwf	i2___awdiv@divisor,c
 13424  0010C8  EC08  F01C         	call	i2___awdiv	;wreg free
 13425  0010CC  C001  F266         	movff	?i2___awdiv,_dist_final+22
 13426  0010D0  C002  F267         	movff	?i2___awdiv+1,_dist_final+23
 13427  0010D4                     i2l5741:
 13428                           
 13429                           ;main.c: 141:         dist_final[1][meas] = a[1];
 13430  0010D4  90D8               	bcf	status,0,c
 13431  0010D6  3450               	rlcf	_meas,w,c	;volatile
 13432  0010D8  6ED9               	movwf	fsr2l,c
 13433  0010DA  3451               	rlcf	_meas+1,w,c	;volatile
 13434  0010DC  6EDA               	movwf	fsr2h,c
 13435  0010DE  0E5C               	movlw	low (_dist_final+12)
 13436  0010E0  26D9               	addwf	fsr2l,f,c
 13437  0010E2  0E02               	movlw	high (_dist_final+12)
 13438  0010E4  22DA               	addwfc	fsr2h,f,c
 13439  0010E6  C063  FFDE         	movff	_a+2,postinc2
 13440  0010EA  C064  FFDD         	movff	_a+3,postdec2
 13441  0010EE                     i2l5743:
 13442                           
 13443                           ;main.c: 144:     if (b==3){
 13444  0010EE  0E03               	movlw	3
 13445  0010F0  185A               	xorwf	_b,w,c
 13446  0010F2  105B               	iorwf	_b+1,w,c
 13447  0010F4  A4D8               	btfss	status,2,c
 13448  0010F6  D0A4               	goto	i2l5777
 13449                           
 13450                           ;main.c: 145:         if (RB5 == 1){
 13451  0010F8  BA81               	btfsc	3969,5,c	;volatile
 13452                           
 13453                           ;main.c: 146:             TMR1ON = 1;
 13454  0010FA  80CD               	bsf	4045,0,c	;volatile
 13455                           
 13456                           ;main.c: 148:         if (RB5 == 0){
 13457                           
 13458                           ;main.c: 147:         }
 13459  0010FC  BA81               	btfsc	3969,5,c	;volatile
 13460  0010FE  D037               	goto	i2l5753
 13461                           
 13462                           ;main.c: 149:             TMR1ON = 0;
 13463  001100  90CD               	bcf	4045,0,c	;volatile
 13464                           
 13465                           ;main.c: 150:             a[2] = (TMR1L | (TMR1H<<8))/58.82;
 13466  001102  0EAE               	movlw	174
 13467  001104  6E13               	movwf	___fldiv@a,c
 13468  001106  0E47               	movlw	71
 13469  001108  6E14               	movwf	___fldiv@a+1,c
 13470  00110A  0E6B               	movlw	107
 13471  00110C  6E15               	movwf	___fldiv@a+2,c
 13472  00110E  0E42               	movlw	66
 13473  001110  6E16               	movwf	___fldiv@a+3,c
 13474  001112  50CF               	movf	4047,w,c	;volatile
 13475  001114  6E33               	movwf	(??_echo+1)& (0+255),c
 13476  001116  6A32               	clrf	??_echo& (0+255),c
 13477  001118  50CE               	movf	4046,w,c	;volatile
 13478  00111A  6E34               	movwf	(??_echo+2)& (0+255),c
 13479  00111C  6A35               	clrf	(??_echo+3)& (0+255),c
 13480  00111E  5032               	movf	??_echo,w,c
 13481  001120  1234               	iorwf	??_echo+2,f,c
 13482  001122  5033               	movf	??_echo+1,w,c
 13483  001124  1235               	iorwf	??_echo+3,f,c
 13484  001126  C034  F001         	movff	??_echo+2,___xxtofl@val
 13485  00112A  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 13486  00112E  0E00               	movlw	0
 13487  001130  BE02               	btfsc	___xxtofl@val+1,7,c
 13488  001132  0EFF               	movlw	-1
 13489  001134  6E03               	movwf	___xxtofl@val+2,c
 13490  001136  6E04               	movwf	___xxtofl@val+3,c
 13491  001138  0E01               	movlw	1
 13492  00113A  EC2B  F016         	call	___xxtofl
 13493  00113E  C001  F00F         	movff	?___xxtofl,___fldiv@b
 13494  001142  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 13495  001146  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 13496  00114A  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 13497  00114E  EC37  F00D         	call	___fldiv	;wreg free
 13498  001152  C00F  F028         	movff	?___fldiv,___fltol@f1
 13499  001156  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 13500  00115A  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 13501  00115E  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 13502  001162  EC30  F01A         	call	___fltol	;wreg free
 13503  001166  C028  F065         	movff	?___fltol,_a+4
 13504  00116A  C029  F066         	movff	?___fltol+1,_a+5
 13505  00116E                     i2l5753:
 13506                           
 13507                           ;main.c: 153:                 if (a[2]>=2 && a[2]<=200){
 13508  00116E  BE66               	btfsc	_a+5,7,c
 13509  001170  D067               	goto	i2l5777
 13510  001172  5066               	movf	_a+5,w,c
 13511  001174  E104               	bnz	i2u583_40
 13512  001176  0E02               	movlw	2
 13513  001178  5C65               	subwf	_a+4,w,c
 13514  00117A  A0D8               	btfss	status,0,c
 13515  00117C  D061               	goto	i2l5777
 13516  00117E                     i2u583_40:
 13517  00117E  BE66               	btfsc	_a+5,7,c
 13518  001180  D006               	goto	i2u584_40
 13519  001182  5066               	movf	_a+5,w,c
 13520  001184  E15D               	bnz	i2l5777
 13521  001186  0EC9               	movlw	201
 13522  001188  5C65               	subwf	_a+4,w,c
 13523  00118A  B0D8               	btfsc	status,0,c
 13524  00118C  D059               	goto	i2l5777
 13525  00118E                     i2u584_40:
 13526                           
 13527                           ;main.c: 155:                 if ((~sumf[2])&&(dist_final[2][0]!=0)&&(dist_final[2][1]!=
      +                          0)&&(dist_final[2][2]!=0)){
 13528  00118E  0442               	decf	_sumf+2,w,c
 13529  001190  B4D8               	btfsc	status,2,c
 13530  001192  D01B               	goto	i2l5769
 13531  001194  0102               	movlb	2	; () banked
 13532  001196  5168               	movf	(_dist_final+24)& (0+255),w,b
 13533  001198  1169               	iorwf	(_dist_final+25)& (0+255),w,b
 13534  00119A  B4D8               	btfsc	status,2,c
 13535  00119C  D016               	goto	i2l5769
 13536                           
 13537                           ; BSR set to: 2
 13538  00119E  516A               	movf	(_dist_final+26)& (0+255),w,b
 13539  0011A0  116B               	iorwf	(_dist_final+27)& (0+255),w,b
 13540  0011A2  B4D8               	btfsc	status,2,c
 13541  0011A4  D012               	goto	i2l5769
 13542                           
 13543                           ; BSR set to: 2
 13544  0011A6  516C               	movf	(_dist_final+28)& (0+255),w,b
 13545  0011A8  116D               	iorwf	(_dist_final+29)& (0+255),w,b
 13546  0011AA  B4D8               	btfsc	status,2,c
 13547  0011AC  D00E               	goto	i2l5769
 13548                           
 13549                           ; BSR set to: 2
 13550                           ;main.c: 156:             sum[2] = (dist_final[2][0]+dist_final[2][1]+dist_final[2][2]);
 13551  0011AE  516A               	movf	(_dist_final+26)& (0+255),w,b
 13552  0011B0  2568               	addwf	(_dist_final+24)& (0+255),w,b
 13553  0011B2  6E32               	movwf	??_echo& (0+255),c
 13554  0011B4  516B               	movf	(_dist_final+27)& (0+255),w,b
 13555  0011B6  2169               	addwfc	(_dist_final+25)& (0+255),w,b
 13556  0011B8  6E33               	movwf	(??_echo+1)& (0+255),c
 13557  0011BA  516C               	movf	(_dist_final+28)& (0+255),w,b
 13558  0011BC  2432               	addwf	??_echo,w,c
 13559  0011BE  6E3C               	movwf	_sum+4,c
 13560  0011C0  516D               	movf	(_dist_final+29)& (0+255),w,b
 13561  0011C2  2033               	addwfc	??_echo+1,w,c
 13562  0011C4  6E3D               	movwf	_sum+5,c
 13563                           
 13564                           ; BSR set to: 2
 13565                           ;main.c: 157:             sumf[2] = 1;
 13566  0011C6  0E01               	movlw	1
 13567  0011C8  6E42               	movwf	_sumf+2,c
 13568  0011CA                     i2l5769:
 13569                           
 13570                           ;main.c: 159:         if (sumf[2]){
 13571  0011CA  5042               	movf	_sumf+2,w,c
 13572  0011CC  B4D8               	btfsc	status,2,c
 13573  0011CE  D02B               	goto	i2l5775
 13574                           
 13575                           ;main.c: 160:             sum[2] = sum[2] - dist_final[2][meas] + a[2];
 13576  0011D0  90D8               	bcf	status,0,c
 13577  0011D2  3450               	rlcf	_meas,w,c	;volatile
 13578  0011D4  6ED9               	movwf	fsr2l,c
 13579  0011D6  3451               	rlcf	_meas+1,w,c	;volatile
 13580  0011D8  6EDA               	movwf	fsr2h,c
 13581  0011DA  0E68               	movlw	low (_dist_final+24)
 13582  0011DC  26D9               	addwf	fsr2l,f,c
 13583  0011DE  0E02               	movlw	high (_dist_final+24)
 13584  0011E0  22DA               	addwfc	fsr2h,f,c
 13585  0011E2  CFDE F032          	movff	postinc2,??_echo
 13586  0011E6  CFDD F033          	movff	postdec2,??_echo+1
 13587  0011EA  EE20  F03C         	lfsr	2,_sum+4
 13588  0011EE  CFDE F034          	movff	postinc2,??_echo+2
 13589  0011F2  CFDD F035          	movff	postdec2,??_echo+3
 13590  0011F6  5032               	movf	??_echo,w,c
 13591  0011F8  5E34               	subwf	??_echo+2,f,c
 13592  0011FA  5033               	movf	??_echo+1,w,c
 13593  0011FC  5A35               	subwfb	??_echo+3,f,c
 13594  0011FE  5065               	movf	_a+4,w,c
 13595  001200  2434               	addwf	??_echo+2,w,c
 13596  001202  6E3C               	movwf	_sum+4,c
 13597  001204  5066               	movf	_a+5,w,c
 13598  001206  2035               	addwfc	??_echo+3,w,c
 13599  001208  6E3D               	movwf	_sum+5,c
 13600                           
 13601                           ;main.c: 161:             dist_final[2][5] = (sum[2]/5);
 13602  00120A  C03C  F001         	movff	_sum+4,i2___awdiv@dividend
 13603  00120E  C03D  F002         	movff	_sum+5,i2___awdiv@dividend+1
 13604  001212  0E00               	movlw	0
 13605  001214  6E04               	movwf	i2___awdiv@divisor+1,c
 13606  001216  0E05               	movlw	5
 13607  001218  6E03               	movwf	i2___awdiv@divisor,c
 13608  00121A  EC08  F01C         	call	i2___awdiv	;wreg free
 13609  00121E  C001  F272         	movff	?i2___awdiv,_dist_final+34
 13610  001222  C002  F273         	movff	?i2___awdiv+1,_dist_final+35
 13611  001226                     i2l5775:
 13612                           
 13613                           ;main.c: 163:         dist_final[2][meas] = a[2];
 13614  001226  90D8               	bcf	status,0,c
 13615  001228  3450               	rlcf	_meas,w,c	;volatile
 13616  00122A  6ED9               	movwf	fsr2l,c
 13617  00122C  3451               	rlcf	_meas+1,w,c	;volatile
 13618  00122E  6EDA               	movwf	fsr2h,c
 13619  001230  0E68               	movlw	low (_dist_final+24)
 13620  001232  26D9               	addwf	fsr2l,f,c
 13621  001234  0E02               	movlw	high (_dist_final+24)
 13622  001236  22DA               	addwfc	fsr2h,f,c
 13623  001238  C065  FFDE         	movff	_a+4,postinc2
 13624  00123C  C066  FFDD         	movff	_a+5,postdec2
 13625  001240                     i2l5777:
 13626                           
 13627                           ;main.c: 166:     if (b==4){
 13628  001240  0E04               	movlw	4
 13629  001242  185A               	xorwf	_b,w,c
 13630  001244  105B               	iorwf	_b+1,w,c
 13631  001246  A4D8               	btfss	status,2,c
 13632  001248  0012               	return	
 13633                           
 13634                           ;main.c: 167:         if (RB4 == 1){
 13635  00124A  B881               	btfsc	3969,4,c	;volatile
 13636                           
 13637                           ;main.c: 168:             TMR1ON = 1;
 13638  00124C  80CD               	bsf	4045,0,c	;volatile
 13639                           
 13640                           ;main.c: 170:         if (RB4 == 0){
 13641                           
 13642                           ;main.c: 169:         }
 13643  00124E  B881               	btfsc	3969,4,c	;volatile
 13644  001250  D037               	goto	i2l5787
 13645                           
 13646                           ;main.c: 171:             TMR1ON = 0;
 13647  001252  90CD               	bcf	4045,0,c	;volatile
 13648                           
 13649                           ;main.c: 172:             a[3] = (TMR1L | (TMR1H<<8))/58.82;
 13650  001254  0EAE               	movlw	174
 13651  001256  6E13               	movwf	___fldiv@a,c
 13652  001258  0E47               	movlw	71
 13653  00125A  6E14               	movwf	___fldiv@a+1,c
 13654  00125C  0E6B               	movlw	107
 13655  00125E  6E15               	movwf	___fldiv@a+2,c
 13656  001260  0E42               	movlw	66
 13657  001262  6E16               	movwf	___fldiv@a+3,c
 13658  001264  50CF               	movf	4047,w,c	;volatile
 13659  001266  6E33               	movwf	(??_echo+1)& (0+255),c
 13660  001268  6A32               	clrf	??_echo& (0+255),c
 13661  00126A  50CE               	movf	4046,w,c	;volatile
 13662  00126C  6E34               	movwf	(??_echo+2)& (0+255),c
 13663  00126E  6A35               	clrf	(??_echo+3)& (0+255),c
 13664  001270  5032               	movf	??_echo,w,c
 13665  001272  1234               	iorwf	??_echo+2,f,c
 13666  001274  5033               	movf	??_echo+1,w,c
 13667  001276  1235               	iorwf	??_echo+3,f,c
 13668  001278  C034  F001         	movff	??_echo+2,___xxtofl@val
 13669  00127C  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 13670  001280  0E00               	movlw	0
 13671  001282  BE02               	btfsc	___xxtofl@val+1,7,c
 13672  001284  0EFF               	movlw	-1
 13673  001286  6E03               	movwf	___xxtofl@val+2,c
 13674  001288  6E04               	movwf	___xxtofl@val+3,c
 13675  00128A  0E01               	movlw	1
 13676  00128C  EC2B  F016         	call	___xxtofl
 13677  001290  C001  F00F         	movff	?___xxtofl,___fldiv@b
 13678  001294  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 13679  001298  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 13680  00129C  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 13681  0012A0  EC37  F00D         	call	___fldiv	;wreg free
 13682  0012A4  C00F  F028         	movff	?___fldiv,___fltol@f1
 13683  0012A8  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 13684  0012AC  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 13685  0012B0  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 13686  0012B4  EC30  F01A         	call	___fltol	;wreg free
 13687  0012B8  C028  F067         	movff	?___fltol,_a+6
 13688  0012BC  C029  F068         	movff	?___fltol+1,_a+7
 13689  0012C0                     i2l5787:
 13690                           
 13691                           ;main.c: 175:                 if (a[3]>=2 && a[3]<=200){
 13692  0012C0  BE68               	btfsc	_a+7,7,c
 13693  0012C2  0012               	return	
 13694  0012C4  5068               	movf	_a+7,w,c
 13695  0012C6  E104               	bnz	i2u593_40
 13696  0012C8  0E02               	movlw	2
 13697  0012CA  5C67               	subwf	_a+6,w,c
 13698  0012CC  A0D8               	btfss	status,0,c
 13699  0012CE  0012               	return	
 13700  0012D0                     i2u593_40:
 13701  0012D0  BE68               	btfsc	_a+7,7,c
 13702  0012D2  D006               	goto	i2u594_40
 13703  0012D4  5068               	movf	_a+7,w,c
 13704  0012D6  E15D               	bnz	i2l423
 13705  0012D8  0EC9               	movlw	201
 13706  0012DA  5C67               	subwf	_a+6,w,c
 13707  0012DC  B0D8               	btfsc	status,0,c
 13708  0012DE  0012               	return	
 13709  0012E0                     i2u594_40:
 13710                           
 13711                           ;main.c: 177:                 if ((~sumf[3])&&(dist_final[3][0]!=0)&&(dist_final[3][1]!=
      +                          0)&&(dist_final[3][2]!=0)){
 13712  0012E0  0443               	decf	_sumf+3,w,c
 13713  0012E2  B4D8               	btfsc	status,2,c
 13714  0012E4  D01B               	goto	i2l5803
 13715  0012E6  0102               	movlb	2	; () banked
 13716  0012E8  5174               	movf	(_dist_final+36)& (0+255),w,b
 13717  0012EA  1175               	iorwf	(_dist_final+37)& (0+255),w,b
 13718  0012EC  B4D8               	btfsc	status,2,c
 13719  0012EE  D016               	goto	i2l5803
 13720                           
 13721                           ; BSR set to: 2
 13722  0012F0  5176               	movf	(_dist_final+38)& (0+255),w,b
 13723  0012F2  1177               	iorwf	(_dist_final+39)& (0+255),w,b
 13724  0012F4  B4D8               	btfsc	status,2,c
 13725  0012F6  D012               	goto	i2l5803
 13726                           
 13727                           ; BSR set to: 2
 13728  0012F8  5178               	movf	(_dist_final+40)& (0+255),w,b
 13729  0012FA  1179               	iorwf	(_dist_final+41)& (0+255),w,b
 13730  0012FC  B4D8               	btfsc	status,2,c
 13731  0012FE  D00E               	goto	i2l5803
 13732                           
 13733                           ; BSR set to: 2
 13734                           ;main.c: 178:             sum[3] = (dist_final[3][0]+dist_final[3][1]+dist_final[3][2]);
 13735  001300  5176               	movf	(_dist_final+38)& (0+255),w,b
 13736  001302  2574               	addwf	(_dist_final+36)& (0+255),w,b
 13737  001304  6E32               	movwf	??_echo& (0+255),c
 13738  001306  5177               	movf	(_dist_final+39)& (0+255),w,b
 13739  001308  2175               	addwfc	(_dist_final+37)& (0+255),w,b
 13740  00130A  6E33               	movwf	(??_echo+1)& (0+255),c
 13741  00130C  5178               	movf	(_dist_final+40)& (0+255),w,b
 13742  00130E  2432               	addwf	??_echo,w,c
 13743  001310  6E3E               	movwf	_sum+6,c
 13744  001312  5179               	movf	(_dist_final+41)& (0+255),w,b
 13745  001314  2033               	addwfc	??_echo+1,w,c
 13746  001316  6E3F               	movwf	_sum+7,c
 13747                           
 13748                           ; BSR set to: 2
 13749                           ;main.c: 179:             sumf[3] = 1;
 13750  001318  0E01               	movlw	1
 13751  00131A  6E43               	movwf	_sumf+3,c
 13752  00131C                     i2l5803:
 13753                           
 13754                           ;main.c: 181:         if (sumf[3]){
 13755  00131C  5043               	movf	_sumf+3,w,c
 13756  00131E  B4D8               	btfsc	status,2,c
 13757  001320  D02B               	goto	i2l5809
 13758                           
 13759                           ;main.c: 182:             sum[3] = sum[3] - dist_final[3][meas] + a[3];
 13760  001322  90D8               	bcf	status,0,c
 13761  001324  3450               	rlcf	_meas,w,c	;volatile
 13762  001326  6ED9               	movwf	fsr2l,c
 13763  001328  3451               	rlcf	_meas+1,w,c	;volatile
 13764  00132A  6EDA               	movwf	fsr2h,c
 13765  00132C  0E74               	movlw	low (_dist_final+36)
 13766  00132E  26D9               	addwf	fsr2l,f,c
 13767  001330  0E02               	movlw	high (_dist_final+36)
 13768  001332  22DA               	addwfc	fsr2h,f,c
 13769  001334  CFDE F032          	movff	postinc2,??_echo
 13770  001338  CFDD F033          	movff	postdec2,??_echo+1
 13771  00133C  EE20  F03E         	lfsr	2,_sum+6
 13772  001340  CFDE F034          	movff	postinc2,??_echo+2
 13773  001344  CFDD F035          	movff	postdec2,??_echo+3
 13774  001348  5032               	movf	??_echo,w,c
 13775  00134A  5E34               	subwf	??_echo+2,f,c
 13776  00134C  5033               	movf	??_echo+1,w,c
 13777  00134E  5A35               	subwfb	??_echo+3,f,c
 13778  001350  5067               	movf	_a+6,w,c
 13779  001352  2434               	addwf	??_echo+2,w,c
 13780  001354  6E3E               	movwf	_sum+6,c
 13781  001356  5068               	movf	_a+7,w,c
 13782  001358  2035               	addwfc	??_echo+3,w,c
 13783  00135A  6E3F               	movwf	_sum+7,c
 13784                           
 13785                           ;main.c: 183:             dist_final[3][5] = (sum[3]/5);
 13786  00135C  C03E  F001         	movff	_sum+6,i2___awdiv@dividend
 13787  001360  C03F  F002         	movff	_sum+7,i2___awdiv@dividend+1
 13788  001364  0E00               	movlw	0
 13789  001366  6E04               	movwf	i2___awdiv@divisor+1,c
 13790  001368  0E05               	movlw	5
 13791  00136A  6E03               	movwf	i2___awdiv@divisor,c
 13792  00136C  EC08  F01C         	call	i2___awdiv	;wreg free
 13793  001370  C001  F27E         	movff	?i2___awdiv,_dist_final+46
 13794  001374  C002  F27F         	movff	?i2___awdiv+1,_dist_final+47
 13795  001378                     i2l5809:
 13796                           
 13797                           ;main.c: 185:         dist_final[3][meas] = a[3];
 13798  001378  90D8               	bcf	status,0,c
 13799  00137A  3450               	rlcf	_meas,w,c	;volatile
 13800  00137C  6ED9               	movwf	fsr2l,c
 13801  00137E  3451               	rlcf	_meas+1,w,c	;volatile
 13802  001380  6EDA               	movwf	fsr2h,c
 13803  001382  0E74               	movlw	low (_dist_final+36)
 13804  001384  26D9               	addwf	fsr2l,f,c
 13805  001386  0E02               	movlw	high (_dist_final+36)
 13806  001388  22DA               	addwfc	fsr2h,f,c
 13807  00138A  C067  FFDE         	movff	_a+6,postinc2
 13808  00138E  C068  FFDD         	movff	_a+7,postdec2
 13809  001392                     i2l423:
 13810  001392  0012               	return		;funcret
 13811  001394                     __end_of_echo:
 13812                           	opt callstack 0
 13813                           
 13814 ;; *************** function i2___awdiv *****************
 13815 ;; Defined at:
 13816 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
 13817 ;; Parameters:    Size  Location     Type
 13818 ;;  dividend        2    0[COMRAM] int 
 13819 ;;  divisor         2    2[COMRAM] int 
 13820 ;; Auto vars:     Size  Location     Type
 13821 ;;  __awdiv         2    6[COMRAM] int 
 13822 ;;  __awdiv         1    5[COMRAM] unsigned char 
 13823 ;;  __awdiv         1    4[COMRAM] unsigned char 
 13824 ;; Return value:  Size  Location     Type
 13825 ;;                  2    0[COMRAM] int 
 13826 ;; Registers used:
 13827 ;;		wreg, status,2, status,0
 13828 ;; Tracked objects:
 13829 ;;		On entry : 0/0
 13830 ;;		On exit  : 0/0
 13831 ;;		Unchanged: 0/0
 13832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13833 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13834 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13836 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13837 ;;Total ram usage:        8 bytes
 13838 ;; Hardware stack levels used:    1
 13839 ;; This function calls:
 13840 ;;		Nothing
 13841 ;; This function is called by:
 13842 ;;		_echo
 13843 ;; This function uses a non-reentrant model
 13844 ;;
 13845                           
 13846                           	psect	text56
 13847  003810                     __ptext56:
 13848                           	opt callstack 0
 13849  003810                     i2___awdiv:
 13850                           	opt callstack 14
 13851                           
 13852                           ;incstack = 0
 13853  003810  0E00               	movlw	0
 13854  003812  6E06               	movwf	i2___awdiv@sign,c
 13855  003814  AE04               	btfss	i2___awdiv@divisor+1,7,c
 13856  003816  D006               	goto	i2l5541
 13857  003818  6C03               	negf	i2___awdiv@divisor,c
 13858  00381A  1E04               	comf	i2___awdiv@divisor+1,f,c
 13859  00381C  B0D8               	btfsc	status,0,c
 13860  00381E  2A04               	incf	i2___awdiv@divisor+1,f,c
 13861  003820  0E01               	movlw	1
 13862  003822  6E06               	movwf	i2___awdiv@sign,c
 13863  003824                     i2l5541:
 13864  003824  AE02               	btfss	i2___awdiv@dividend+1,7,c
 13865  003826  D006               	goto	i2l5547
 13866  003828  6C01               	negf	i2___awdiv@dividend,c
 13867  00382A  1E02               	comf	i2___awdiv@dividend+1,f,c
 13868  00382C  B0D8               	btfsc	status,0,c
 13869  00382E  2A02               	incf	i2___awdiv@dividend+1,f,c
 13870  003830  0E01               	movlw	1
 13871  003832  1A06               	xorwf	i2___awdiv@sign,f,c
 13872  003834                     i2l5547:
 13873  003834  0E00               	movlw	0
 13874  003836  6E08               	movwf	i2___awdiv@quotient+1,c
 13875  003838  0E00               	movlw	0
 13876  00383A  6E07               	movwf	i2___awdiv@quotient,c
 13877  00383C  5003               	movf	i2___awdiv@divisor,w,c
 13878  00383E  1004               	iorwf	i2___awdiv@divisor+1,w,c
 13879  003840  B4D8               	btfsc	status,2,c
 13880  003842  D01C               	goto	i2l5569
 13881  003844  0E01               	movlw	1
 13882  003846  6E05               	movwf	i2___awdiv@counter,c
 13883  003848  D004               	goto	i2l5555
 13884  00384A                     i2l5553:
 13885  00384A  90D8               	bcf	status,0,c
 13886  00384C  3603               	rlcf	i2___awdiv@divisor,f,c
 13887  00384E  3604               	rlcf	i2___awdiv@divisor+1,f,c
 13888  003850  2A05               	incf	i2___awdiv@counter,f,c
 13889  003852                     i2l5555:
 13890  003852  AE04               	btfss	i2___awdiv@divisor+1,7,c
 13891  003854  D7FA               	goto	i2l5553
 13892  003856                     i2u554_40:
 13893  003856  90D8               	bcf	status,0,c
 13894  003858  3607               	rlcf	i2___awdiv@quotient,f,c
 13895  00385A  3608               	rlcf	i2___awdiv@quotient+1,f,c
 13896  00385C  5003               	movf	i2___awdiv@divisor,w,c
 13897  00385E  5C01               	subwf	i2___awdiv@dividend,w,c
 13898  003860  5004               	movf	i2___awdiv@divisor+1,w,c
 13899  003862  5802               	subwfb	i2___awdiv@dividend+1,w,c
 13900  003864  A0D8               	btfss	status,0,c
 13901  003866  D005               	goto	i2l5565
 13902  003868  5003               	movf	i2___awdiv@divisor,w,c
 13903  00386A  5E01               	subwf	i2___awdiv@dividend,f,c
 13904  00386C  5004               	movf	i2___awdiv@divisor+1,w,c
 13905  00386E  5A02               	subwfb	i2___awdiv@dividend+1,f,c
 13906  003870  8007               	bsf	i2___awdiv@quotient,0,c
 13907  003872                     i2l5565:
 13908  003872  90D8               	bcf	status,0,c
 13909  003874  3204               	rrcf	i2___awdiv@divisor+1,f,c
 13910  003876  3203               	rrcf	i2___awdiv@divisor,f,c
 13911  003878  2E05               	decfsz	i2___awdiv@counter,f,c
 13912  00387A  D7ED               	goto	i2u554_40
 13913  00387C                     i2l5569:
 13914  00387C  5006               	movf	i2___awdiv@sign,w,c
 13915  00387E  B4D8               	btfsc	status,2,c
 13916  003880  D004               	goto	i2l5573
 13917  003882  6C07               	negf	i2___awdiv@quotient,c
 13918  003884  1E08               	comf	i2___awdiv@quotient+1,f,c
 13919  003886  B0D8               	btfsc	status,0,c
 13920  003888  2A08               	incf	i2___awdiv@quotient+1,f,c
 13921  00388A                     i2l5573:
 13922  00388A  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
 13923  00388E  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 13924  003892  0012               	return		;funcret
 13925  003894                     __end_ofi2___awdiv:
 13926                           	opt callstack 0
 13927                           
 13928 ;; *************** function ___xxtofl *****************
 13929 ;; Defined at:
 13930 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 13931 ;; Parameters:    Size  Location     Type
 13932 ;;  sign            1    wreg     unsigned char 
 13933 ;;  val             4    0[COMRAM] long 
 13934 ;; Auto vars:     Size  Location     Type
 13935 ;;  sign            1    8[COMRAM] unsigned char 
 13936 ;;  arg             4   10[COMRAM] unsigned long 
 13937 ;;  exp             1    9[COMRAM] unsigned char 
 13938 ;; Return value:  Size  Location     Type
 13939 ;;                  4    0[COMRAM] unsigned char 
 13940 ;; Registers used:
 13941 ;;		wreg, status,2, status,0
 13942 ;; Tracked objects:
 13943 ;;		On entry : 0/0
 13944 ;;		On exit  : 0/0
 13945 ;;		Unchanged: 0/0
 13946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13947 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13948 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13949 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13950 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13951 ;;Total ram usage:       14 bytes
 13952 ;; Hardware stack levels used:    1
 13953 ;; This function calls:
 13954 ;;		Nothing
 13955 ;; This function is called by:
 13956 ;;		_echo
 13957 ;; This function uses a non-reentrant model
 13958 ;;
 13959                           
 13960                           	psect	text57
 13961  002C56                     __ptext57:
 13962                           	opt callstack 0
 13963  002C56                     ___xxtofl:
 13964                           	opt callstack 14
 13965                           
 13966                           ;incstack = 0
 13967                           ;___xxtofl@sign stored from wreg
 13968  002C56  6E09               	movwf	___xxtofl@sign,c
 13969  002C58  5009               	movf	___xxtofl@sign,w,c
 13970  002C5A  A4D8               	btfss	status,2,c
 13971  002C5C  AE04               	btfss	___xxtofl@val+3,7,c
 13972  002C5E  D01A               	goto	i2l1387
 13973  002C60  C001  F005         	movff	___xxtofl@val,??___xxtofl
 13974  002C64  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 13975  002C68  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 13976  002C6C  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 13977  002C70  1E05               	comf	??___xxtofl,f,c
 13978  002C72  1E06               	comf	??___xxtofl+1,f,c
 13979  002C74  1E07               	comf	??___xxtofl+2,f,c
 13980  002C76  1E08               	comf	??___xxtofl+3,f,c
 13981  002C78  2A05               	incf	??___xxtofl,f,c
 13982  002C7A  0E00               	movlw	0
 13983  002C7C  2206               	addwfc	??___xxtofl+1,f,c
 13984  002C7E  2207               	addwfc	??___xxtofl+2,f,c
 13985  002C80  2208               	addwfc	??___xxtofl+3,f,c
 13986  002C82  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 13987  002C86  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 13988  002C8A  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 13989  002C8E  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 13990  002C92  D008               	goto	i2l5493
 13991  002C94                     i2l1387:
 13992  002C94  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 13993  002C98  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 13994  002C9C  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 13995  002CA0  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 13996  002CA4                     i2l5493:
 13997  002CA4  5001               	movf	___xxtofl@val,w,c
 13998  002CA6  1002               	iorwf	___xxtofl@val+1,w,c
 13999  002CA8  1003               	iorwf	___xxtofl@val+2,w,c
 14000  002CAA  1004               	iorwf	___xxtofl@val+3,w,c
 14001  002CAC  A4D8               	btfss	status,2,c
 14002  002CAE  D009               	goto	i2l5499
 14003  002CB0  0E00               	movlw	0
 14004  002CB2  6E01               	movwf	?___xxtofl,c
 14005  002CB4  0E00               	movlw	0
 14006  002CB6  6E02               	movwf	?___xxtofl+1,c
 14007  002CB8  0E00               	movlw	0
 14008  002CBA  6E03               	movwf	?___xxtofl+2,c
 14009  002CBC  0E00               	movlw	0
 14010  002CBE  6E04               	movwf	?___xxtofl+3,c
 14011  002CC0  0012               	return	
 14012  002CC2                     i2l5499:
 14013  002CC2  0E96               	movlw	150
 14014  002CC4  6E0A               	movwf	___xxtofl@exp,c
 14015  002CC6  D006               	goto	i2l5503
 14016  002CC8                     i2l5501:
 14017  002CC8  2A0A               	incf	___xxtofl@exp,f,c
 14018  002CCA  90D8               	bcf	status,0,c
 14019  002CCC  320E               	rrcf	___xxtofl@arg+3,f,c
 14020  002CCE  320D               	rrcf	___xxtofl@arg+2,f,c
 14021  002CD0  320C               	rrcf	___xxtofl@arg+1,f,c
 14022  002CD2  320B               	rrcf	___xxtofl@arg,f,c
 14023  002CD4                     i2l5503:
 14024  002CD4  0E00               	movlw	0
 14025  002CD6  140B               	andwf	___xxtofl@arg,w,c
 14026  002CD8  6E05               	movwf	??___xxtofl& (0+255),c
 14027  002CDA  0E00               	movlw	0
 14028  002CDC  140C               	andwf	___xxtofl@arg+1,w,c
 14029  002CDE  6E06               	movwf	(??___xxtofl+1)& (0+255),c
 14030  002CE0  0E00               	movlw	0
 14031  002CE2  140D               	andwf	___xxtofl@arg+2,w,c
 14032  002CE4  6E07               	movwf	(??___xxtofl+2)& (0+255),c
 14033  002CE6  0EFE               	movlw	254
 14034  002CE8  140E               	andwf	___xxtofl@arg+3,w,c
 14035  002CEA  6E08               	movwf	(??___xxtofl+3)& (0+255),c
 14036  002CEC  5005               	movf	??___xxtofl,w,c
 14037  002CEE  1006               	iorwf	??___xxtofl+1,w,c
 14038  002CF0  1007               	iorwf	??___xxtofl+2,w,c
 14039  002CF2  1008               	iorwf	??___xxtofl+3,w,c
 14040  002CF4  B4D8               	btfsc	status,2,c
 14041  002CF6  D00D               	goto	i2l1394
 14042  002CF8  D7E7               	goto	i2l5501
 14043  002CFA                     i2l5505:
 14044  002CFA  2A0A               	incf	___xxtofl@exp,f,c
 14045  002CFC  0E01               	movlw	1
 14046  002CFE  260B               	addwf	___xxtofl@arg,f,c
 14047  002D00  0E00               	movlw	0
 14048  002D02  220C               	addwfc	___xxtofl@arg+1,f,c
 14049  002D04  220D               	addwfc	___xxtofl@arg+2,f,c
 14050  002D06  220E               	addwfc	___xxtofl@arg+3,f,c
 14051  002D08  90D8               	bcf	status,0,c
 14052  002D0A  320E               	rrcf	___xxtofl@arg+3,f,c
 14053  002D0C  320D               	rrcf	___xxtofl@arg+2,f,c
 14054  002D0E  320C               	rrcf	___xxtofl@arg+1,f,c
 14055  002D10  320B               	rrcf	___xxtofl@arg,f,c
 14056  002D12                     i2l1394:
 14057  002D12  0E00               	movlw	0
 14058  002D14  140B               	andwf	___xxtofl@arg,w,c
 14059  002D16  6E05               	movwf	??___xxtofl& (0+255),c
 14060  002D18  0E00               	movlw	0
 14061  002D1A  140C               	andwf	___xxtofl@arg+1,w,c
 14062  002D1C  6E06               	movwf	(??___xxtofl+1)& (0+255),c
 14063  002D1E  0E00               	movlw	0
 14064  002D20  140D               	andwf	___xxtofl@arg+2,w,c
 14065  002D22  6E07               	movwf	(??___xxtofl+2)& (0+255),c
 14066  002D24  0EFF               	movlw	255
 14067  002D26  140E               	andwf	___xxtofl@arg+3,w,c
 14068  002D28  6E08               	movwf	(??___xxtofl+3)& (0+255),c
 14069  002D2A  5005               	movf	??___xxtofl,w,c
 14070  002D2C  1006               	iorwf	??___xxtofl+1,w,c
 14071  002D2E  1007               	iorwf	??___xxtofl+2,w,c
 14072  002D30  1008               	iorwf	??___xxtofl+3,w,c
 14073  002D32  B4D8               	btfsc	status,2,c
 14074  002D34  D007               	goto	i2l5513
 14075  002D36  D7E1               	goto	i2l5505
 14076  002D38                     i2l5511:
 14077  002D38  060A               	decf	___xxtofl@exp,f,c
 14078  002D3A  90D8               	bcf	status,0,c
 14079  002D3C  360B               	rlcf	___xxtofl@arg,f,c
 14080  002D3E  360C               	rlcf	___xxtofl@arg+1,f,c
 14081  002D40  360D               	rlcf	___xxtofl@arg+2,f,c
 14082  002D42  360E               	rlcf	___xxtofl@arg+3,f,c
 14083  002D44                     i2l5513:
 14084  002D44  BE0D               	btfsc	___xxtofl@arg+2,7,c
 14085  002D46  D003               	goto	i2u547_40
 14086  002D48  0E02               	movlw	2
 14087  002D4A  600A               	cpfslt	___xxtofl@exp,c
 14088  002D4C  D7F5               	goto	i2l5511
 14089  002D4E                     i2u547_40:
 14090  002D4E  A00A               	btfss	___xxtofl@exp,0,c
 14091  002D50  9E0D               	bcf	___xxtofl@arg+2,7,c
 14092  002D52  90D8               	bcf	status,0,c
 14093  002D54  320A               	rrcf	___xxtofl@exp,f,c
 14094  002D56  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 14095  002D5A  6A06               	clrf	(??___xxtofl+1)& (0+255),c
 14096  002D5C  6A07               	clrf	(??___xxtofl+2)& (0+255),c
 14097  002D5E  6A08               	clrf	(??___xxtofl+3)& (0+255),c
 14098  002D60  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 14099  002D64  6A07               	clrf	??___xxtofl+2,c
 14100  002D66  6A06               	clrf	??___xxtofl+1,c
 14101  002D68  6A05               	clrf	??___xxtofl,c
 14102  002D6A  5005               	movf	??___xxtofl,w,c
 14103  002D6C  120B               	iorwf	___xxtofl@arg,f,c
 14104  002D6E  5006               	movf	??___xxtofl+1,w,c
 14105  002D70  120C               	iorwf	___xxtofl@arg+1,f,c
 14106  002D72  5007               	movf	??___xxtofl+2,w,c
 14107  002D74  120D               	iorwf	___xxtofl@arg+2,f,c
 14108  002D76  5008               	movf	??___xxtofl+3,w,c
 14109  002D78  120E               	iorwf	___xxtofl@arg+3,f,c
 14110  002D7A  5009               	movf	___xxtofl@sign,w,c
 14111  002D7C  A4D8               	btfss	status,2,c
 14112  002D7E  AE04               	btfss	___xxtofl@val+3,7,c
 14113  002D80  D001               	goto	i2l5529
 14114  002D82  8E0E               	bsf	___xxtofl@arg+3,7,c
 14115  002D84                     i2l5529:
 14116  002D84  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 14117  002D88  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 14118  002D8C  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 14119  002D90  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 14120  002D94  0012               	return		;funcret
 14121  002D96                     __end_of___xxtofl:
 14122                           	opt callstack 0
 14123                           
 14124 ;; *************** function ___fltol *****************
 14125 ;; Defined at:
 14126 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 14127 ;; Parameters:    Size  Location     Type
 14128 ;;  f1              4   39[COMRAM] unsigned char 
 14129 ;; Auto vars:     Size  Location     Type
 14130 ;;  exp1            1   48[COMRAM] unsigned char 
 14131 ;;  sign1           1   47[COMRAM] unsigned char 
 14132 ;; Return value:  Size  Location     Type
 14133 ;;                  4   39[COMRAM] long 
 14134 ;; Registers used:
 14135 ;;		wreg, status,2, status,0
 14136 ;; Tracked objects:
 14137 ;;		On entry : 0/0
 14138 ;;		On exit  : 0/0
 14139 ;;		Unchanged: 0/0
 14140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14141 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14142 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14143 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14144 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14145 ;;Total ram usage:       10 bytes
 14146 ;; Hardware stack levels used:    1
 14147 ;; This function calls:
 14148 ;;		Nothing
 14149 ;; This function is called by:
 14150 ;;		_echo
 14151 ;; This function uses a non-reentrant model
 14152 ;;
 14153                           
 14154                           	psect	text58
 14155  003460                     __ptext58:
 14156                           	opt callstack 0
 14157  003460                     ___fltol:
 14158                           	opt callstack 14
 14159                           
 14160                           ;incstack = 0
 14161  003460  342A               	rlcf	___fltol@f1+2,w,c
 14162  003462  342B               	rlcf	___fltol@f1+3,w,c
 14163  003464  6E31               	movwf	___fltol@exp1,c
 14164  003466  5031               	movf	___fltol@exp1,w,c
 14165  003468  A4D8               	btfss	status,2,c
 14166  00346A  D009               	goto	i2l5433
 14167  00346C                     i2u531_40:
 14168  00346C  0E00               	movlw	0
 14169  00346E  6E28               	movwf	?___fltol,c
 14170  003470  0E00               	movlw	0
 14171  003472  6E29               	movwf	?___fltol+1,c
 14172  003474  0E00               	movlw	0
 14173  003476  6E2A               	movwf	?___fltol+2,c
 14174  003478  0E00               	movlw	0
 14175  00347A  6E2B               	movwf	?___fltol+3,c
 14176  00347C  0012               	return	
 14177  00347E                     i2l5433:
 14178  00347E  C028  F02C         	movff	___fltol@f1,??___fltol
 14179  003482  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
 14180  003486  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
 14181  00348A  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
 14182  00348E  0E20               	movlw	32
 14183  003490  D005               	goto	i2u532_40
 14184  003492                     i2u532_45:
 14185  003492  90D8               	bcf	status,0,c
 14186  003494  322F               	rrcf	??___fltol+3,f,c
 14187  003496  322E               	rrcf	??___fltol+2,f,c
 14188  003498  322D               	rrcf	??___fltol+1,f,c
 14189  00349A  322C               	rrcf	??___fltol,f,c
 14190  00349C                     i2u532_40:
 14191  00349C  2EE8               	decfsz	wreg,f,c
 14192  00349E  D7F9               	goto	i2u532_45
 14193  0034A0  502C               	movf	??___fltol,w,c
 14194  0034A2  6E30               	movwf	___fltol@sign1,c
 14195  0034A4  8E2A               	bsf	___fltol@f1+2,7,c
 14196  0034A6  0EFF               	movlw	255
 14197  0034A8  1628               	andwf	___fltol@f1,f,c
 14198  0034AA  0EFF               	movlw	255
 14199  0034AC  1629               	andwf	___fltol@f1+1,f,c
 14200  0034AE  0EFF               	movlw	255
 14201  0034B0  162A               	andwf	___fltol@f1+2,f,c
 14202  0034B2  0E00               	movlw	0
 14203  0034B4  162B               	andwf	___fltol@f1+3,f,c
 14204  0034B6  0E96               	movlw	150
 14205  0034B8  5E31               	subwf	___fltol@exp1,f,c
 14206  0034BA  AE31               	btfss	___fltol@exp1,7,c
 14207  0034BC  D00D               	goto	i2l5453
 14208  0034BE  5031               	movf	___fltol@exp1,w,c
 14209  0034C0  0A80               	xorlw	128
 14210  0034C2  0F97               	addlw	151
 14211  0034C4  A0D8               	btfss	status,0,c
 14212  0034C6  D7D2               	goto	i2u531_40
 14213  0034C8                     i2l5449:
 14214  0034C8  90D8               	bcf	status,0,c
 14215  0034CA  322B               	rrcf	___fltol@f1+3,f,c
 14216  0034CC  322A               	rrcf	___fltol@f1+2,f,c
 14217  0034CE  3229               	rrcf	___fltol@f1+1,f,c
 14218  0034D0  3228               	rrcf	___fltol@f1,f,c
 14219  0034D2  3E31               	incfsz	___fltol@exp1,f,c
 14220  0034D4  D7F9               	goto	i2l5449
 14221  0034D6  D00D               	goto	i2u536_40
 14222  0034D8                     i2l5453:
 14223  0034D8  0E1F               	movlw	31
 14224  0034DA  6431               	cpfsgt	___fltol@exp1,c
 14225  0034DC  D007               	goto	i2l5461
 14226  0034DE  D7C6               	goto	i2u531_40
 14227  0034E0                     i2l5459:
 14228  0034E0  90D8               	bcf	status,0,c
 14229  0034E2  3628               	rlcf	___fltol@f1,f,c
 14230  0034E4  3629               	rlcf	___fltol@f1+1,f,c
 14231  0034E6  362A               	rlcf	___fltol@f1+2,f,c
 14232  0034E8  362B               	rlcf	___fltol@f1+3,f,c
 14233  0034EA  0631               	decf	___fltol@exp1,f,c
 14234  0034EC                     i2l5461:
 14235  0034EC  5031               	movf	___fltol@exp1,w,c
 14236  0034EE  A4D8               	btfss	status,2,c
 14237  0034F0  D7F7               	goto	i2l5459
 14238  0034F2                     i2u536_40:
 14239  0034F2  5030               	movf	___fltol@sign1,w,c
 14240  0034F4  B4D8               	btfsc	status,2,c
 14241  0034F6  D008               	goto	i2l5467
 14242  0034F8  1E2B               	comf	___fltol@f1+3,f,c
 14243  0034FA  1E2A               	comf	___fltol@f1+2,f,c
 14244  0034FC  1E29               	comf	___fltol@f1+1,f,c
 14245  0034FE  6C28               	negf	___fltol@f1,c
 14246  003500  0E00               	movlw	0
 14247  003502  2229               	addwfc	___fltol@f1+1,f,c
 14248  003504  222A               	addwfc	___fltol@f1+2,f,c
 14249  003506  222B               	addwfc	___fltol@f1+3,f,c
 14250  003508                     i2l5467:
 14251  003508  C028  F028         	movff	___fltol@f1,?___fltol
 14252  00350C  C029  F029         	movff	___fltol@f1+1,?___fltol+1
 14253  003510  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
 14254  003514  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
 14255  003518  0012               	return		;funcret
 14256  00351A                     __end_of___fltol:
 14257                           	opt callstack 0
 14258                           
 14259 ;; *************** function ___fldiv *****************
 14260 ;; Defined at:
 14261 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 14262 ;; Parameters:    Size  Location     Type
 14263 ;;  b               4   14[COMRAM] long 
 14264 ;;  a               4   18[COMRAM] long 
 14265 ;; Auto vars:     Size  Location     Type
 14266 ;;  grs             4   33[COMRAM] unsigned long 
 14267 ;;  rem             4   26[COMRAM] unsigned long 
 14268 ;;  new_exp         2   31[COMRAM] short 
 14269 ;;  aexp            1   38[COMRAM] unsigned char 
 14270 ;;  bexp            1   37[COMRAM] unsigned char 
 14271 ;;  sign            1   30[COMRAM] unsigned char 
 14272 ;; Return value:  Size  Location     Type
 14273 ;;                  4   14[COMRAM] unsigned char 
 14274 ;; Registers used:
 14275 ;;		wreg, status,2, status,0
 14276 ;; Tracked objects:
 14277 ;;		On entry : 0/0
 14278 ;;		On exit  : 0/0
 14279 ;;		Unchanged: 0/0
 14280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14281 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14282 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14283 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14284 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14285 ;;Total ram usage:       25 bytes
 14286 ;; Hardware stack levels used:    1
 14287 ;; This function calls:
 14288 ;;		Nothing
 14289 ;; This function is called by:
 14290 ;;		_echo
 14291 ;; This function uses a non-reentrant model
 14292 ;;
 14293                           
 14294                           	psect	text59
 14295  001A6E                     __ptext59:
 14296                           	opt callstack 0
 14297  001A6E                     ___fldiv:
 14298                           	opt callstack 14
 14299                           
 14300                           ;incstack = 0
 14301  001A6E  5012               	movf	___fldiv@b+3,w,c
 14302  001A70  0B80               	andlw	128
 14303  001A72  6E1F               	movwf	___fldiv@sign,c
 14304  001A74  5012               	movf	___fldiv@b+3,w,c
 14305  001A76  2412               	addwf	___fldiv@b+3,w,c
 14306  001A78  6E26               	movwf	___fldiv@bexp,c
 14307  001A7A  BE11               	btfsc	___fldiv@b+2,7,c
 14308  001A7C  8026               	bsf	___fldiv@bexp,0,c
 14309  001A7E  5026               	movf	___fldiv@bexp,w,c
 14310  001A80  B4D8               	btfsc	status,2,c
 14311  001A82  D00D               	goto	i2l5261
 14312  001A84  2826               	incf	___fldiv@bexp,w,c
 14313  001A86  A4D8               	btfss	status,2,c
 14314  001A88  D008               	goto	i2l5257
 14315  001A8A  0E00               	movlw	0
 14316  001A8C  6E0F               	movwf	___fldiv@b,c
 14317  001A8E  0E00               	movlw	0
 14318  001A90  6E10               	movwf	___fldiv@b+1,c
 14319  001A92  0E00               	movlw	0
 14320  001A94  6E11               	movwf	___fldiv@b+2,c
 14321  001A96  0E00               	movlw	0
 14322  001A98  6E12               	movwf	___fldiv@b+3,c
 14323  001A9A                     i2l5257:
 14324  001A9A  8E11               	bsf	___fldiv@b+2,7,c
 14325  001A9C  D006               	goto	L6
 14326  001A9E                     i2l5261:
 14327  001A9E  0E00               	movlw	0
 14328  001AA0  6E0F               	movwf	___fldiv@b,c
 14329  001AA2  0E00               	movlw	0
 14330  001AA4  6E10               	movwf	___fldiv@b+1,c
 14331  001AA6  0E00               	movlw	0
 14332  001AA8  6E11               	movwf	___fldiv@b+2,c
 14333  001AAA                     L6:
 14334  001AAA  0E00               	movlw	0
 14335  001AAC  6E12               	movwf	___fldiv@b+3,c
 14336  001AAE  5016               	movf	___fldiv@a+3,w,c
 14337  001AB0  0B80               	andlw	128
 14338  001AB2  1A1F               	xorwf	___fldiv@sign,f,c
 14339  001AB4  5016               	movf	___fldiv@a+3,w,c
 14340  001AB6  2416               	addwf	___fldiv@a+3,w,c
 14341  001AB8  6E27               	movwf	___fldiv@aexp,c
 14342  001ABA  BE15               	btfsc	___fldiv@a+2,7,c
 14343  001ABC  8027               	bsf	___fldiv@aexp,0,c
 14344  001ABE  5027               	movf	___fldiv@aexp,w,c
 14345  001AC0  B4D8               	btfsc	status,2,c
 14346  001AC2  D00D               	goto	i2l5281
 14347  001AC4  2827               	incf	___fldiv@aexp,w,c
 14348  001AC6  A4D8               	btfss	status,2,c
 14349  001AC8  D008               	goto	i2l5277
 14350  001ACA  0E00               	movlw	0
 14351  001ACC  6E13               	movwf	___fldiv@a,c
 14352  001ACE  0E00               	movlw	0
 14353  001AD0  6E14               	movwf	___fldiv@a+1,c
 14354  001AD2  0E00               	movlw	0
 14355  001AD4  6E15               	movwf	___fldiv@a+2,c
 14356  001AD6  0E00               	movlw	0
 14357  001AD8  6E16               	movwf	___fldiv@a+3,c
 14358  001ADA                     i2l5277:
 14359  001ADA  8E15               	bsf	___fldiv@a+2,7,c
 14360  001ADC  D006               	goto	L7
 14361  001ADE                     i2l5281:
 14362  001ADE  0E00               	movlw	0
 14363  001AE0  6E13               	movwf	___fldiv@a,c
 14364  001AE2  0E00               	movlw	0
 14365  001AE4  6E14               	movwf	___fldiv@a+1,c
 14366  001AE6  0E00               	movlw	0
 14367  001AE8  6E15               	movwf	___fldiv@a+2,c
 14368  001AEA                     L7:
 14369  001AEA  0E00               	movlw	0
 14370  001AEC  6E16               	movwf	___fldiv@a+3,c
 14371  001AEE  5013               	movf	___fldiv@a,w,c
 14372  001AF0  1014               	iorwf	___fldiv@a+1,w,c
 14373  001AF2  1015               	iorwf	___fldiv@a+2,w,c
 14374  001AF4  1016               	iorwf	___fldiv@a+3,w,c
 14375  001AF6  A4D8               	btfss	status,2,c
 14376  001AF8  D017               	goto	i2l5295
 14377  001AFA  0E00               	movlw	0
 14378  001AFC  6E0F               	movwf	___fldiv@b,c
 14379  001AFE  0E00               	movlw	0
 14380  001B00  6E10               	movwf	___fldiv@b+1,c
 14381  001B02  0E00               	movlw	0
 14382  001B04  6E11               	movwf	___fldiv@b+2,c
 14383  001B06  0E00               	movlw	0
 14384  001B08  6E12               	movwf	___fldiv@b+3,c
 14385  001B0A  0E80               	movlw	128
 14386  001B0C  1211               	iorwf	___fldiv@b+2,f,c
 14387  001B0E  0E7F               	movlw	127
 14388  001B10  1212               	iorwf	___fldiv@b+3,f,c
 14389  001B12                     i2l5289:
 14390  001B12  501F               	movf	___fldiv@sign,w,c
 14391  001B14  1212               	iorwf	___fldiv@b+3,f,c
 14392  001B16  C00F  F00F         	movff	___fldiv@b,?___fldiv
 14393  001B1A  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
 14394  001B1E  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
 14395  001B22  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
 14396  001B26  0012               	return	
 14397  001B28                     i2l5295:
 14398  001B28  5026               	movf	___fldiv@bexp,w,c
 14399  001B2A  A4D8               	btfss	status,2,c
 14400  001B2C  D009               	goto	i2l5303
 14401  001B2E  0E00               	movlw	0
 14402  001B30  6E0F               	movwf	?___fldiv,c
 14403  001B32  0E00               	movlw	0
 14404  001B34  6E10               	movwf	?___fldiv+1,c
 14405  001B36  0E00               	movlw	0
 14406  001B38  6E11               	movwf	?___fldiv+2,c
 14407  001B3A  0E00               	movlw	0
 14408  001B3C  6E12               	movwf	?___fldiv+3,c
 14409  001B3E  0012               	return	
 14410  001B40                     i2l5303:
 14411  001B40  5027               	movf	___fldiv@aexp,w,c
 14412  001B42  C026  F017         	movff	___fldiv@bexp,??___fldiv
 14413  001B46  6A18               	clrf	(??___fldiv+1)& (0+255),c
 14414  001B48  5E17               	subwf	??___fldiv,f,c
 14415  001B4A  0E00               	movlw	0
 14416  001B4C  5A18               	subwfb	??___fldiv+1,f,c
 14417  001B4E  0E7F               	movlw	127
 14418  001B50  2417               	addwf	??___fldiv,w,c
 14419  001B52  6E20               	movwf	___fldiv@new_exp,c
 14420  001B54  0E00               	movlw	0
 14421  001B56  2018               	addwfc	??___fldiv+1,w,c
 14422  001B58  6E21               	movwf	___fldiv@new_exp+1,c
 14423  001B5A  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
 14424  001B5E  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
 14425  001B62  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
 14426  001B66  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
 14427  001B6A  0E00               	movlw	0
 14428  001B6C  6E0F               	movwf	___fldiv@b,c
 14429  001B6E  0E00               	movlw	0
 14430  001B70  6E10               	movwf	___fldiv@b+1,c
 14431  001B72  0E00               	movlw	0
 14432  001B74  6E11               	movwf	___fldiv@b+2,c
 14433  001B76  0E00               	movlw	0
 14434  001B78  6E12               	movwf	___fldiv@b+3,c
 14435  001B7A  0E00               	movlw	0
 14436  001B7C  6E22               	movwf	___fldiv@grs,c
 14437  001B7E  0E00               	movlw	0
 14438  001B80  6E23               	movwf	___fldiv@grs+1,c
 14439  001B82  0E00               	movlw	0
 14440  001B84  6E24               	movwf	___fldiv@grs+2,c
 14441  001B86  0E00               	movlw	0
 14442  001B88  6E25               	movwf	___fldiv@grs+3,c
 14443  001B8A  0E00               	movlw	0
 14444  001B8C  6E27               	movwf	___fldiv@aexp,c
 14445  001B8E  D028               	goto	i2l1316
 14446  001B90                     i2l5313:
 14447  001B90  5027               	movf	___fldiv@aexp,w,c
 14448  001B92  B4D8               	btfsc	status,2,c
 14449  001B94  D011               	goto	i2l5321
 14450  001B96  90D8               	bcf	status,0,c
 14451  001B98  361B               	rlcf	___fldiv@rem,f,c
 14452  001B9A  361C               	rlcf	___fldiv@rem+1,f,c
 14453  001B9C  361D               	rlcf	___fldiv@rem+2,f,c
 14454  001B9E  361E               	rlcf	___fldiv@rem+3,f,c
 14455  001BA0  90D8               	bcf	status,0,c
 14456  001BA2  360F               	rlcf	___fldiv@b,f,c
 14457  001BA4  3610               	rlcf	___fldiv@b+1,f,c
 14458  001BA6  3611               	rlcf	___fldiv@b+2,f,c
 14459  001BA8  3612               	rlcf	___fldiv@b+3,f,c
 14460  001BAA  BE25               	btfsc	___fldiv@grs+3,7,c
 14461  001BAC  800F               	bsf	___fldiv@b,0,c
 14462  001BAE  90D8               	bcf	status,0,c
 14463  001BB0  3622               	rlcf	___fldiv@grs,f,c
 14464  001BB2  3623               	rlcf	___fldiv@grs+1,f,c
 14465  001BB4  3624               	rlcf	___fldiv@grs+2,f,c
 14466  001BB6  3625               	rlcf	___fldiv@grs+3,f,c
 14467  001BB8                     i2l5321:
 14468  001BB8  5013               	movf	___fldiv@a,w,c
 14469  001BBA  5C1B               	subwf	___fldiv@rem,w,c
 14470  001BBC  5014               	movf	___fldiv@a+1,w,c
 14471  001BBE  581C               	subwfb	___fldiv@rem+1,w,c
 14472  001BC0  5015               	movf	___fldiv@a+2,w,c
 14473  001BC2  581D               	subwfb	___fldiv@rem+2,w,c
 14474  001BC4  5016               	movf	___fldiv@a+3,w,c
 14475  001BC6  581E               	subwfb	___fldiv@rem+3,w,c
 14476  001BC8  A0D8               	btfss	status,0,c
 14477  001BCA  D009               	goto	i2l5327
 14478  001BCC  8C25               	bsf	___fldiv@grs+3,6,c
 14479  001BCE  5013               	movf	___fldiv@a,w,c
 14480  001BD0  5E1B               	subwf	___fldiv@rem,f,c
 14481  001BD2  5014               	movf	___fldiv@a+1,w,c
 14482  001BD4  5A1C               	subwfb	___fldiv@rem+1,f,c
 14483  001BD6  5015               	movf	___fldiv@a+2,w,c
 14484  001BD8  5A1D               	subwfb	___fldiv@rem+2,f,c
 14485  001BDA  5016               	movf	___fldiv@a+3,w,c
 14486  001BDC  5A1E               	subwfb	___fldiv@rem+3,f,c
 14487  001BDE                     i2l5327:
 14488  001BDE  2A27               	incf	___fldiv@aexp,f,c
 14489  001BE0                     i2l1316:
 14490  001BE0  0E19               	movlw	25
 14491  001BE2  6427               	cpfsgt	___fldiv@aexp,c
 14492  001BE4  D7D5               	goto	i2l5313
 14493  001BE6  501B               	movf	___fldiv@rem,w,c
 14494  001BE8  101C               	iorwf	___fldiv@rem+1,w,c
 14495  001BEA  101D               	iorwf	___fldiv@rem+2,w,c
 14496  001BEC  101E               	iorwf	___fldiv@rem+3,w,c
 14497  001BEE  B4D8               	btfsc	status,2,c
 14498  001BF0  D011               	goto	i2l5339
 14499  001BF2  8022               	bsf	___fldiv@grs,0,c
 14500  001BF4  D00F               	goto	i2l5339
 14501  001BF6                     i2l5333:
 14502  001BF6  90D8               	bcf	status,0,c
 14503  001BF8  360F               	rlcf	___fldiv@b,f,c
 14504  001BFA  3610               	rlcf	___fldiv@b+1,f,c
 14505  001BFC  3611               	rlcf	___fldiv@b+2,f,c
 14506  001BFE  3612               	rlcf	___fldiv@b+3,f,c
 14507  001C00  BE25               	btfsc	___fldiv@grs+3,7,c
 14508  001C02  800F               	bsf	___fldiv@b,0,c
 14509  001C04  90D8               	bcf	status,0,c
 14510  001C06  3622               	rlcf	___fldiv@grs,f,c
 14511  001C08  3623               	rlcf	___fldiv@grs+1,f,c
 14512  001C0A  3624               	rlcf	___fldiv@grs+2,f,c
 14513  001C0C  3625               	rlcf	___fldiv@grs+3,f,c
 14514  001C0E  0620               	decf	___fldiv@new_exp,f,c
 14515  001C10  A0D8               	btfss	status,0,c
 14516  001C12  0621               	decf	___fldiv@new_exp+1,f,c
 14517  001C14                     i2l5339:
 14518  001C14  AE11               	btfss	___fldiv@b+2,7,c
 14519  001C16  D7EF               	goto	i2l5333
 14520  001C18  0E00               	movlw	0
 14521  001C1A  6E27               	movwf	___fldiv@aexp,c
 14522  001C1C  AE25               	btfss	___fldiv@grs+3,7,c
 14523  001C1E  D017               	goto	i2l1327
 14524  001C20  0EFF               	movlw	255
 14525  001C22  1422               	andwf	___fldiv@grs,w,c
 14526  001C24  6E17               	movwf	??___fldiv& (0+255),c
 14527  001C26  0EFF               	movlw	255
 14528  001C28  1423               	andwf	___fldiv@grs+1,w,c
 14529  001C2A  6E18               	movwf	(??___fldiv+1)& (0+255),c
 14530  001C2C  0EFF               	movlw	255
 14531  001C2E  1424               	andwf	___fldiv@grs+2,w,c
 14532  001C30  6E19               	movwf	(??___fldiv+2)& (0+255),c
 14533  001C32  0E7F               	movlw	127
 14534  001C34  1425               	andwf	___fldiv@grs+3,w,c
 14535  001C36  6E1A               	movwf	(??___fldiv+3)& (0+255),c
 14536  001C38  5017               	movf	??___fldiv,w,c
 14537  001C3A  1018               	iorwf	??___fldiv+1,w,c
 14538  001C3C  1019               	iorwf	??___fldiv+2,w,c
 14539  001C3E  101A               	iorwf	??___fldiv+3,w,c
 14540  001C40  B4D8               	btfsc	status,2,c
 14541  001C42  D003               	goto	i2l1328
 14542  001C44                     i2u518_40:
 14543  001C44  0E01               	movlw	1
 14544  001C46  6E27               	movwf	___fldiv@aexp,c
 14545  001C48  D002               	goto	i2l1327
 14546  001C4A                     i2l1328:
 14547  001C4A  B00F               	btfsc	___fldiv@b,0,c
 14548  001C4C  D7FB               	goto	i2u518_40
 14549  001C4E                     i2l1327:
 14550  001C4E  5027               	movf	___fldiv@aexp,w,c
 14551  001C50  B4D8               	btfsc	status,2,c
 14552  001C52  D01F               	goto	i2l5359
 14553  001C54  0E01               	movlw	1
 14554  001C56  260F               	addwf	___fldiv@b,f,c
 14555  001C58  0E00               	movlw	0
 14556  001C5A  2210               	addwfc	___fldiv@b+1,f,c
 14557  001C5C  2211               	addwfc	___fldiv@b+2,f,c
 14558  001C5E  2212               	addwfc	___fldiv@b+3,f,c
 14559  001C60  A012               	btfss	___fldiv@b+3,0,c
 14560  001C62  D017               	goto	i2l5359
 14561  001C64  C00F  F017         	movff	___fldiv@b,??___fldiv
 14562  001C68  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
 14563  001C6C  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
 14564  001C70  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
 14565  001C74  341A               	rlcf	??___fldiv+3,w,c
 14566  001C76  321A               	rrcf	??___fldiv+3,f,c
 14567  001C78  3219               	rrcf	??___fldiv+2,f,c
 14568  001C7A  3218               	rrcf	??___fldiv+1,f,c
 14569  001C7C  3217               	rrcf	??___fldiv,f,c
 14570  001C7E  C017  F00F         	movff	??___fldiv,___fldiv@b
 14571  001C82  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
 14572  001C86  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
 14573  001C8A  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
 14574  001C8E  4A20               	infsnz	___fldiv@new_exp,f,c
 14575  001C90  2A21               	incf	___fldiv@new_exp+1,f,c
 14576  001C92                     i2l5359:
 14577  001C92  BE21               	btfsc	___fldiv@new_exp+1,7,c
 14578  001C94  D010               	goto	i2l5363
 14579  001C96  5021               	movf	___fldiv@new_exp+1,w,c
 14580  001C98  E103               	bnz	i2u522_40
 14581  001C9A  2820               	incf	___fldiv@new_exp,w,c
 14582  001C9C  A0D8               	btfss	status,0,c
 14583  001C9E  D00B               	goto	i2l5363
 14584  001CA0                     i2u522_40:
 14585  001CA0  0E00               	movlw	0
 14586  001CA2  6E21               	movwf	___fldiv@new_exp+1,c
 14587  001CA4  6820               	setf	___fldiv@new_exp,c
 14588  001CA6  0E00               	movlw	0
 14589  001CA8  6E0F               	movwf	___fldiv@b,c
 14590  001CAA  0E00               	movlw	0
 14591  001CAC  6E10               	movwf	___fldiv@b+1,c
 14592  001CAE  0E00               	movlw	0
 14593  001CB0  6E11               	movwf	___fldiv@b+2,c
 14594  001CB2  0E00               	movlw	0
 14595  001CB4  6E12               	movwf	___fldiv@b+3,c
 14596  001CB6                     i2l5363:
 14597  001CB6  BE21               	btfsc	___fldiv@new_exp+1,7,c
 14598  001CB8  D005               	goto	i2u523_40
 14599  001CBA  5021               	movf	___fldiv@new_exp+1,w,c
 14600  001CBC  E111               	bnz	i2l5367
 14601  001CBE  0420               	decf	___fldiv@new_exp,w,c
 14602  001CC0  B0D8               	btfsc	status,0,c
 14603  001CC2  D00E               	goto	i2l5367
 14604  001CC4                     i2u523_40:
 14605  001CC4  0E00               	movlw	0
 14606  001CC6  6E21               	movwf	___fldiv@new_exp+1,c
 14607  001CC8  0E00               	movlw	0
 14608  001CCA  6E20               	movwf	___fldiv@new_exp,c
 14609  001CCC  0E00               	movlw	0
 14610  001CCE  6E0F               	movwf	___fldiv@b,c
 14611  001CD0  0E00               	movlw	0
 14612  001CD2  6E10               	movwf	___fldiv@b+1,c
 14613  001CD4  0E00               	movlw	0
 14614  001CD6  6E11               	movwf	___fldiv@b+2,c
 14615  001CD8  0E00               	movlw	0
 14616  001CDA  6E12               	movwf	___fldiv@b+3,c
 14617  001CDC  0E00               	movlw	0
 14618  001CDE  6E1F               	movwf	___fldiv@sign,c
 14619  001CE0                     i2l5367:
 14620  001CE0  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
 14621  001CE4  A026               	btfss	___fldiv@bexp,0,c
 14622  001CE6  D002               	goto	i2l5373
 14623  001CE8  8E11               	bsf	___fldiv@b+2,7,c
 14624  001CEA  D001               	goto	i2l5375
 14625  001CEC                     i2l5373:
 14626  001CEC  9E11               	bcf	___fldiv@b+2,7,c
 14627  001CEE                     i2l5375:
 14628  001CEE  90D8               	bcf	status,0,c
 14629  001CF0  3026               	rrcf	___fldiv@bexp,w,c
 14630  001CF2  6E12               	movwf	___fldiv@b+3,c
 14631  001CF4  D70E               	goto	i2l5289
 14632  001CF6                     __end_of___fldiv:
 14633                           	opt callstack 0
 14634                           
 14635                           	psect	rparam
 14636  0000                     
 14637                           	psect	temp
 14638  00006E                     btemp:
 14639                           	opt callstack 0
 14640  00006E                     	ds	1
 14641  0000                     int$flags	set	btemp
 14642  0000                     wtemp8	set	btemp+1
 14643  0000                     ttemp5	set	btemp+1
 14644  0000                     ttemp6	set	btemp+4
 14645  0000                     ttemp7	set	btemp+8
 14646                           tosu	equ	0xFFF
 14647                           tosh	equ	0xFFE
 14648                           tosl	equ	0xFFD
 14649                           stkptr	equ	0xFFC
 14650                           pclatu	equ	0xFFB
 14651                           pclath	equ	0xFFA
 14652                           pcl	equ	0xFF9
 14653                           tblptru	equ	0xFF8
 14654                           tblptrh	equ	0xFF7
 14655                           tblptrl	equ	0xFF6
 14656                           tablat	equ	0xFF5
 14657                           prodh	equ	0xFF4
 14658                           prodl	equ	0xFF3
 14659                           indf0	equ	0xFEF
 14660                           postinc0	equ	0xFEE
 14661                           postdec0	equ	0xFED
 14662                           preinc0	equ	0xFEC
 14663                           plusw0	equ	0xFEB
 14664                           fsr0h	equ	0xFEA
 14665                           fsr0l	equ	0xFE9
 14666                           wreg	equ	0xFE8
 14667                           indf1	equ	0xFE7
 14668                           postinc1	equ	0xFE6
 14669                           postdec1	equ	0xFE5
 14670                           preinc1	equ	0xFE4
 14671                           plusw1	equ	0xFE3
 14672                           fsr1h	equ	0xFE2
 14673                           fsr1l	equ	0xFE1
 14674                           bsr	equ	0xFE0
 14675                           indf2	equ	0xFDF
 14676                           postinc2	equ	0xFDE
 14677                           postdec2	equ	0xFDD
 14678                           preinc2	equ	0xFDC
 14679                           plusw2	equ	0xFDB
 14680                           fsr2h	equ	0xFDA
 14681                           fsr2l	equ	0xFD9
 14682                           status	equ	0xFD8


Data Sizes:
    Strings     587
    Constant    23
    Data        5
    BSS         238
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     55     109
    BANK0           128    127     128
    BANK1           256    202     230
    BANK2           256      0     160
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_63(CODE[10]), STR_62(CODE[11]), STR_61(CODE[11]), STR_60(CODE[12]), 
		 -> STR_59(CODE[14]), STR_58(CODE[17]), STR_57(CODE[12]), STR_56(CODE[10]), 
		 -> STR_55(CODE[10]), STR_54(CODE[13]), STR_53(CODE[8]), STR_52(CODE[3]), 
		 -> STR_51(CODE[17]), STR_50(CODE[15]), STR_49(CODE[15]), STR_48(CODE[12]), 
		 -> STR_47(CODE[17]), STR_46(CODE[12]), STR_45(CODE[15]), STR_44(CODE[18]), 
		 -> STR_43(CODE[17]), STR_42(CODE[12]), STR_41(CODE[15]), STR_40(CODE[18]), 
		 -> STR_39(CODE[17]), STR_38(CODE[14]), STR_37(CODE[14]), STR_36(CODE[17]), 
		 -> STR_35(CODE[3]), STR_34(CODE[9]), STR_33(CODE[16]), STR_32(CODE[3]), 
		 -> STR_31(CODE[9]), STR_30(CODE[17]), STR_29(CODE[15]), STR_28(CODE[15]), 
		 -> STR_27(CODE[12]), STR_26(CODE[10]), STR_25(CODE[15]), STR_24(CODE[12]), 
		 -> STR_23(CODE[10]), STR_22(CODE[16]), STR_21(CODE[12]), STR_20(CODE[11]), 
		 -> STR_19(CODE[13]), STR_18(CODE[8]), STR_17(CODE[10]), STR_16(CODE[17]), 
		 -> STR_15(CODE[10]), STR_14(CODE[16]), STR_13(CODE[10]), STR_12(CODE[16]), 
		 -> STR_11(CODE[10]), STR_10(CODE[17]), STR_9(CODE[5]), STR_8(CODE[10]), 
		 -> STR_7(CODE[14]), STR_6(CODE[6]), STR_5(CODE[10]), STR_4(CODE[10]), 
		 -> STR_3(CODE[11]), STR_2(CODE[13]), STR_1(CODE[10]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1750_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_63(CODE[10]), STR_62(CODE[11]), STR_61(CODE[11]), STR_60(CODE[12]), 
		 -> STR_59(CODE[14]), STR_58(CODE[17]), STR_57(CODE[12]), STR_56(CODE[10]), 
		 -> STR_55(CODE[10]), STR_54(CODE[13]), STR_53(CODE[8]), STR_52(CODE[3]), 
		 -> STR_51(CODE[17]), STR_50(CODE[15]), STR_49(CODE[15]), STR_48(CODE[12]), 
		 -> STR_47(CODE[17]), STR_46(CODE[12]), STR_45(CODE[15]), STR_44(CODE[18]), 
		 -> STR_43(CODE[17]), STR_42(CODE[12]), STR_41(CODE[15]), STR_40(CODE[18]), 
		 -> STR_39(CODE[17]), STR_38(CODE[14]), STR_37(CODE[14]), STR_36(CODE[17]), 
		 -> STR_35(CODE[3]), STR_34(CODE[9]), STR_33(CODE[16]), STR_32(CODE[3]), 
		 -> STR_31(CODE[9]), STR_30(CODE[17]), STR_29(CODE[15]), STR_28(CODE[15]), 
		 -> STR_27(CODE[12]), STR_26(CODE[10]), STR_25(CODE[15]), STR_24(CODE[12]), 
		 -> STR_23(CODE[10]), STR_22(CODE[16]), STR_21(CODE[12]), STR_20(CODE[11]), 
		 -> STR_19(CODE[13]), STR_18(CODE[8]), STR_17(CODE[10]), STR_16(CODE[17]), 
		 -> STR_15(CODE[10]), STR_14(CODE[16]), STR_13(CODE[10]), STR_12(CODE[16]), 
		 -> STR_11(CODE[10]), STR_10(CODE[17]), STR_9(CODE[5]), STR_8(CODE[10]), 
		 -> STR_7(CODE[14]), STR_6(CODE[6]), STR_5(CODE[10]), STR_4(CODE[10]), 
		 -> STR_3(CODE[11]), STR_2(CODE[13]), STR_1(CODE[10]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_63(CODE[10]), STR_62(CODE[11]), STR_61(CODE[11]), STR_60(CODE[12]), 
		 -> STR_59(CODE[14]), STR_58(CODE[17]), STR_57(CODE[12]), STR_56(CODE[10]), 
		 -> STR_55(CODE[10]), STR_54(CODE[13]), STR_53(CODE[8]), STR_52(CODE[3]), 
		 -> STR_51(CODE[17]), STR_50(CODE[15]), STR_49(CODE[15]), STR_48(CODE[12]), 
		 -> STR_47(CODE[17]), STR_46(CODE[12]), STR_45(CODE[15]), STR_44(CODE[18]), 
		 -> STR_43(CODE[17]), STR_42(CODE[12]), STR_41(CODE[15]), STR_40(CODE[18]), 
		 -> STR_39(CODE[17]), STR_38(CODE[14]), STR_37(CODE[14]), STR_36(CODE[17]), 
		 -> STR_35(CODE[3]), STR_34(CODE[9]), STR_33(CODE[16]), STR_32(CODE[3]), 
		 -> STR_31(CODE[9]), STR_30(CODE[17]), STR_29(CODE[15]), STR_28(CODE[15]), 
		 -> STR_27(CODE[12]), STR_26(CODE[10]), STR_25(CODE[15]), STR_24(CODE[12]), 
		 -> STR_23(CODE[10]), STR_22(CODE[16]), STR_21(CODE[12]), STR_20(CODE[11]), 
		 -> STR_19(CODE[13]), STR_18(CODE[8]), STR_17(CODE[10]), STR_16(CODE[17]), 
		 -> STR_15(CODE[10]), STR_14(CODE[16]), STR_13(CODE[10]), STR_12(CODE[16]), 
		 -> STR_11(CODE[10]), STR_10(CODE[17]), STR_9(CODE[5]), STR_8(CODE[10]), 
		 -> STR_7(CODE[14]), STR_6(CODE[6]), STR_5(CODE[10]), STR_4(CODE[10]), 
		 -> STR_3(CODE[11]), STR_2(CODE[13]), STR_1(CODE[10]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_63(CODE[10]), STR_62(CODE[11]), STR_61(CODE[11]), STR_60(CODE[12]), 
		 -> STR_59(CODE[14]), STR_58(CODE[17]), STR_57(CODE[12]), STR_56(CODE[10]), 
		 -> STR_55(CODE[10]), STR_54(CODE[13]), STR_53(CODE[8]), STR_52(CODE[3]), 
		 -> STR_51(CODE[17]), STR_50(CODE[15]), STR_49(CODE[15]), STR_48(CODE[12]), 
		 -> STR_47(CODE[17]), STR_46(CODE[12]), STR_45(CODE[15]), STR_44(CODE[18]), 
		 -> STR_43(CODE[17]), STR_42(CODE[12]), STR_41(CODE[15]), STR_40(CODE[18]), 
		 -> STR_39(CODE[17]), STR_38(CODE[14]), STR_37(CODE[14]), STR_36(CODE[17]), 
		 -> STR_35(CODE[3]), STR_34(CODE[9]), STR_33(CODE[16]), STR_32(CODE[3]), 
		 -> STR_31(CODE[9]), STR_30(CODE[17]), STR_29(CODE[15]), STR_28(CODE[15]), 
		 -> STR_27(CODE[12]), STR_26(CODE[10]), STR_25(CODE[15]), STR_24(CODE[12]), 
		 -> STR_23(CODE[10]), STR_22(CODE[16]), STR_21(CODE[12]), STR_20(CODE[11]), 
		 -> STR_19(CODE[13]), STR_18(CODE[8]), STR_17(CODE[10]), STR_16(CODE[17]), 
		 -> STR_15(CODE[10]), STR_14(CODE[16]), STR_13(CODE[10]), STR_12(CODE[16]), 
		 -> STR_11(CODE[10]), STR_10(CODE[17]), STR_9(CODE[5]), STR_8(CODE[10]), 
		 -> STR_7(CODE[14]), STR_6(CODE[6]), STR_5(CODE[10]), STR_4(CODE[10]), 
		 -> STR_3(CODE[11]), STR_2(CODE[13]), STR_1(CODE[10]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    min@array	PTR int  size(2) Largest target is 8
		 -> a(COMRAM[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_echo
    _echo->___fltol
    ___fltol->___fldiv
    ___fldiv->___xxtofl

Critical Paths under _main in BANK0

    _main->_UI_main
    _main->_number_deploy
    _ultrasonic_main->_print_echo
    _print_echo->_printf
    _start->_I2C_Master_Init
    _number_deploy->_printf
    _brake->_printf
    _backwards->_I2C_Master_Write
    _stepper2_back->_full_drive
    _stepper2->_full_drive
    _stepper->_full_drive
    _full_drive->_printf
    _servo->_servoRotate0
    _servo->_servoRotate180
    _UI_main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_send_byte
    _abs->___aomod
    _atoi->_isspace
    _initLCD->_lcdInst
    _lcdInst->_send_byte
    _send_byte->_send_nibble
    _send_nibble->_pulse_e
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_UI_main
    _actuators_main->_stepper

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               112   112      0  299406
                                             90 BANK1    112   112      0
                            _UI_main
                             ___wmul
                     _actuators_main
                          _backwards
                              _brake
                            _initLCD
                            _lcdInst
                      _number_deploy
                             _printf
                              _start
                    _ultrasonic_main
 ---------------------------------------------------------------------------------
 (1) _ultrasonic_main                                     14    12      2   47736
                                            124 BANK0      2     0      2
                                              0 BANK1     12    12      0
                                _abs
                            _lcdInst
                                _min
                         _print_echo
                             _printf
                               _trig
 ---------------------------------------------------------------------------------
 (2) _trig                                                 2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _print_echo                                           1     1      0   23233
                                            123 BANK0      1     1      0
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _min                                                 11     7      4     722
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 (1) _start                                                0     0      0    2013
                    _I2C_Master_Init
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _number_deploy                                       12     8      4   25184
                                            123 BANK0      4     0      4
                                              0 BANK1      8     8      0
                            ___awdiv
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1245
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _brake                                                2     2      0   24589
                                            123 BANK0      2     2      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _backwards                                            0     0      0    1291
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _actuators_main                                      10     4      6  145738
                                             18 BANK1     10     4      6
                            _initLCD
                            _lcdInst
                             _printf
                              _servo
                            _stepper
                           _stepper2
                      _stepper2_back
                        _system_init
 ---------------------------------------------------------------------------------
 (2) _system_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _stepper2_back                                        8     6      2   47474
                                              0 BANK1      8     6      2
                         _full_drive
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _stepper2                                            14    12      2   47759
                                              0 BANK1     14    12      2
                         _full_drive
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _stepper                                             18    14      4   24659
                                              0 BANK1     18    14      4
                         _full_drive
 ---------------------------------------------------------------------------------
 (3) _full_drive                                           4     2      2   23984
                                            123 BANK0      4     2      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _servo                                                2     2      0    1404
                                              5 BANK0      2     2      0
                       _servoRotate0
                     _servoRotate180
 ---------------------------------------------------------------------------------
 (3) _servoRotate180                                       5     3      2     657
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _servoRotate0                                         5     3      2     747
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _UI_main                                             94    90      4   26940
                                            123 BANK0      4     0      4
                                              0 BANK1     90    90      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___llmod
                            _initLCD
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              14     4     10   23075
                                            109 BANK0     14     4     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   17312
                                            101 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6   16767
                                             70 BANK0     31    25      6
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    5847
                                             31 BANK0     39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     512
                                              6 BANK0      8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     191
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     191
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     191
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6173
                                             31 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3817
                                             20 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1602
                                             13 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1102
                                              4 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0     158
                                              3 BANK0      1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     273
                                             18 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              0 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1895
                                              7 BANK0     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     281
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     792
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     350
                                              4 BANK0      1     1      0
                            _lcdInst
                          _send_byte
                        _send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcdInst                                              1     1      0     158
                                              3 BANK0      1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (10) _send_byte                                           1     1      0     127
                                              2 BANK0      1     1      0
                        _send_nibble
 ---------------------------------------------------------------------------------
 (11) _send_nibble                                         1     1      0      65
                                              1 BANK0      1     1      0
                            _pulse_e
 ---------------------------------------------------------------------------------
 (12) _pulse_e                                             1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     412
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1291
                                              1 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      2     2      0      65
                                              1 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     722
                                             13 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     421
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _ISR                                                 2     2      0    3522
                                             53 COMRAM     2     2      0
                               _echo
 ---------------------------------------------------------------------------------
 (16) _echo                                                4     4      0    3522
                                             49 COMRAM     4     4      0
                            ___fldiv
                            ___fltol
                           ___xxtofl
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (17) i2___awdiv                                           8     4      4     508
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (17) ___xxtofl                                           14    10      4     626
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (17) ___fltol                                            10     6      4     533
                                             39 COMRAM    10     6      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (17) ___fldiv                                            25    17      8    1855
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UI_main
     _I2C_Master_Init
       ___lldiv
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     ___llmod
     _initLCD
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _send_byte
         _send_nibble
           _pulse_e
       _send_nibble
         _pulse_e
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
   ___wmul
   _actuators_main
     _initLCD
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _send_byte
         _send_nibble
           _pulse_e
       _send_nibble
         _pulse_e
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
     _servo
       _servoRotate0
       _servoRotate180
     _stepper
       _full_drive
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _toupper
                   _islower
     _stepper2
       _full_drive
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _toupper
                   _islower
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _toupper
                 _islower
     _stepper2_back
       _full_drive
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _toupper
                   _islower
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _toupper
                 _islower
     _system_init
   _backwards
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _brake
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
   _initLCD
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _send_byte
       _send_nibble
         _pulse_e
     _send_nibble
       _pulse_e
   _lcdInst
     _send_byte
       _send_nibble
         _pulse_e
   _number_deploy
     ___awdiv
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _fputc
           _putch
             _send_byte
               _send_nibble
                 _pulse_e
         _isdigit
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
           _toupper
             _islower
   _start
     _I2C_Master_Init
       ___lldiv
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _ultrasonic_main
     _abs
       ___aomod (ARG)
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _min
     _print_echo
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _toupper
                 _islower
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
     _trig

 _ISR (ROOT)
   _echo
     ___fldiv
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     i2___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      A0       9       62.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100     CA      E6       7       89.8%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     7F      80       5      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     37      6D       1       86.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     273      34        0.0%
DATA                 0      0     273       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Apr 08 13:23:38 2019

                  ___fldiv@aexp 0027                    ___fldiv@bexp 0026                               _a 0061  
                             _b 005A                               _i 01DB                    ___fldiv@sign 001F  
                   __CFG_CPD$ON 000000                    ___awdiv@sign 0085             servoRotate180@servo 0080  
           ___wmul@multiplicand 0082                     __CFG_BORV$3 000000                 ??_number_deploy 0100  
             stepper2@direction 010D                   servoRotate0@i 0083                    __CFG_CP0$OFF 000000  
                  __CFG_CP1$OFF 000000                    __CFG_CP2$OFF 000000                    __CFG_CP3$OFF 000000  
                   __CFG_OSC$HS 000000             __end_of_system_init 3CDA                             l122 32CC  
                           l140 327C                             l125 3320                             l134 31DC  
               _ultrasonic_main 2582                             l128 336A                             l137 3234  
                           l519 0290                             l640 1D6A                             l464 26D6  
                           l642 1D72                             l629 369A                             l557 0AEA  
                           l665 1F5C                             l667 1F64                             l759 37FE  
                           _GIE 007F97                    __CFG_CPB$OFF 000000                             _RB2 007C0A  
                           _RC1 007C11                             _RB3 007C0B                             _RC2 007C12  
                           _RD0 007C18                             _RB4 007C0C                             _RD1 007C19  
                           _RB5 007C0D                             _RB6 007C0E                             _RB7 007C0F  
                           _ISR 0008          __size_of_stepper2_back 00A0                             _abs 3C74  
                           _cnt 01E3                             _pad 366A                             _min 2EBC  
                           _sum 0038                  stepper2_back@i 0106                             wreg 000FE8  
                  __CFG_LVP$OFF 000000                            ?_ISR 0001                    ___fltol@exp1 0031  
                  __CFG_WDT$OFF 000000                            ?_abs 0092                            l1152 39C8  
                          l1407 3C9E                            l1505 3B7A                            l1438 2C4C  
                          l7013 16A8                            ?_pad 0094                            l7023 16F0  
                          l7019 16E4                            l7051 3ACA                            l8011 2210  
                          l8003 21CA                            l7029 1708                            l8021 225A  
                          l8023 2264                            l8007 21FC                            l7049 3AA2  
                          l8121 015E                            l6603 3D7A                            l8035 22B0  
                          ?_min 0080                            l6701 2AB4                            l6605 3D80  
                          l8213 0378                            l7309 19D8                            l7229 18B6  
                          l7173 17B6                            l8053 237A                            l6623 3682  
                          l6705 2ACA                            l6721 2DC4                            l6633 36BE  
                          l8401 08F4                            l7371 37B0                            l6731 2E16  
                          l6627 3692                            l8307 0808                            l8171 0270  
                          l8091 00BC                            l7347 1A58                            l7267 1940  
                          l7507 299C                            l7523 30EC                            l7373 37BC  
                          l6901 2B70                            l6709 2AF0                            l6741 2E74  
                          l6725 2DE8                            l6637 36EA                            l6629 36A4  
                          l8309 0816                            l8237 051A                            l8181 02B0  
                          l8149 01EA                            l7189 1822                            l7533 3134  
                          l7383 37F0                            l6911 2B8E                            l6815 1EFC  
                          l8263 06CC                            l7463 28A8                            l7543 3180  
                          l7527 3104                            l7615 2FE0                            l6913 2BB6  
                          l6745 2E9A                            l6737 2E5E                            l6729 2E02  
                          l6585 391E                            l6833 1F7A                            l8417 094E  
                          l7803 39BA                            l6907 2B80                            l6691 2A58  
                          l6683 2A1E                            l6595 3C0E                            l6819 1F14  
                          l8291 0780                            l8259 06A6                            l7547 3198  
                          l7571 3624                            l7731 2EFC                            l7715 254C  
                          l7707 2508                            l7627 301A                            l8523 0D1E  
                          l8515 0CC2                            l8427 097E                            l6757 3BBC  
                          l6917 2BEC                            l6909 2B88                            l6677 29F6  
                          l6781 1D8C                            l6861 205C                            l6941 13DA  
                          l8197 0310                            l7493 2946                            l7477 28E6  
                          l7469 28CE                            l7901 2874                            l7821 2788  
                          l7637 304E                            l8533 0D7E                            l8461 0A50  
                          l8445 0A0A                            l8541 0DA8                            l6599 3C26  
                          l6767 1D4E                            l6847 1FCE                            l6839 1FAC  
                          l6943 13DC                            l8287 0778                            l7743 2FAA  
                          l7647 3082                            l8527 0D2E                            l8519 0CD2  
                          l6689 2A44                            l6785 1D9C                            l6961 13FC  
                          l6953 13F4                            l6945 13EC                            l8297 079A  
                          l7761 372C                            l7745 2FAE                            l7729 2EF2  
                          l7657 30B6                            l8537 0D84                            l8473 0AAC  
                          l8393 0896                            l6891 2B26                            l6795 1E96  
                          l7499 296C                            l7755 371C                            l7691 2490  
                          l7683 245C                            l7675 2418                            l7931 260E  
                          l8563 0E44                            l8467 0A76                            l6893 2B2A  
                          l6885 214A                            l6869 20D4                            l6981 14D2  
                          l6965 1406                            l6957 13F8                            l6949 13F0  
                          l7669 23EA                            l7925 25F6                            l8469 0A8A  
                          l6983 14E0                            l6967 1448                            l7767 3742  
                          l7783 3774                            l7951 2680                            l7927 25FE  
                          l8479 0AD2                            l7769 374A                            l7795 3986  
                          l6979 14B4                            l7787 3782                            l7779 376A  
                          l7699 24D4                            l7955 26AE                            l7963 26C6  
                          l7797 3992                            l6999 15DA                            l7879 284C  
                          l7969 26DC                            l7997 2190                            STR_1 FFD9  
                          STR_2 FF0A                            STR_3 FF74                            STR_4 FFD9  
                          STR_5 FFCF                            STR_6 FFF4                            STR_7 FEE2  
                          STR_8 FFD9                            STR_9 FFFA                            _LATA 000F89  
                          _LATB 000F8A                            _LATC 000F8B                            _LATD 000F8C  
                          _LATE 000F8D                            u7011 2A24                            u7030 2A5C  
                          _RBIE 007F93                            u7200 1D86                            _RBIF 007F90  
                          u7130 3BB8                            u7210 1EA6                            u8010 293E  
                          u7140 1D20                            u7300 1F50                            u8020 296C  
                          u8100 2FDE                            u7230 1EC8                            u7150 1D22  
                          u8030 2994                            u7231 1EC6                            u7240 1ED6  
                          u7400 20E6                            u7320 1FCA                            u8040 29C2  
                          u8200 2428                            u7090 2E1A                            u7250 1EDA  
                          u7330 2000                            u8210 2438                            u7500 2C1E  
                          u7180 1D60                            u7420 2108                            u7340 2002  
                          u8300 255C                            u8220 246C                            u9100 08B2  
                          u7421 2106                            u9101 08B0                            u7270 1EE6  
                          u7430 2116                            u8310 256C                            u8230 247C  
                          u8150 30CC                            u6800 395E                            u7440 211A  
                          u7360 203A                            u7600 1528                            u8320 2EE2  
                          u8240 24A0                            u8160 23BC                            u9200 0AE6  
                          u7370 203C                            u8090 364C                            u8250 24B0  
                          u8170 23CC                            u6900 3D36                            u7620 155C  
                          u7700 330E                            u8420 374E                            u8260 24E4  
                          u8180 23FA                            u7470 2B6C                            u6910 3D38  
                          u6830 3D04                            u7390 20B0                            u8270 24F4  
                          u8190 240A                            u6920 3C6C                            u6840 3D06  
                          u7640 160E                            u7720 3358                            u7800 32B8  
                          u8360 2F6A                            u8280 2518                            u8520 2678  
                          u9160 0A28                            u9080 0880                            u7490 2C1C  
                          u6850 3C84                            u6930 3C6E                            u8610 2220  
                          u8370 2F90                            u8290 2528                            u8530 2690  
                          u9170 0A38                            u7395 209E                            u9307 0C3E  
                          u9075 086E                            u8460 3996                            u6780 3916  
                          u6940 3B62                            u7580 151A                            u7740 33A4  
                          u8620 2230                            u9180 0A8A                            u6765 3DC8  
                          u9317 0C7A                            u9077 0870                            u7910 37C0  
                          u6766 3DCA                            u6950 3B64                            u7590 151C  
                          u8710 238A                            u8630 2240                            u8550 26DC  
                          u9190 0A9A                            u9407 26EA                            u9327 0D90  
                          u9247 090C                            u9095 089E                            u7760 3222  
                          u8640 2250                            u9417 2716                            u9337 0DBA  
                          u9257 0936                            u9097 08A0                            u6970 3D68  
                          u8810 0200                            u9507 23A2                            u9427 2FF6  
                          u9347 0DDE                            u9267 0960                            u6980 3D6A  
                          u8900 039A                            u7780 326A                            u8660 227C  
                          u8580 21C0                            u8901 0398                            u9517 2326  
                          u9437 300C                            u9357 0E12                            u9277 0994  
                          u8670 228C                            u8590 21F2                            u7935 3A04  
                          u9607 3148                            u9527 235A                            u9447 302A  
                          u9367 0E36                            u9287 09C6                            u7960 28A0  
                          u8680 229C                            u7945 3DEC                            u9617 175E  
                          u9537 3582                            u9457 3040                            u9377 2594  
                          u9297 0B76                            u7946 3DEE                            u7970 28CE  
                          u8690 22AC                            u9707 181A                            u9627 1772  
                          u9547 35B6                            u9467 305E                            u9387 25BE  
                          u8860 02AC                            u7980 28DE                            u9717 1844  
                          u9637 1786                            u9557 274E                            u9477 3074  
                          u9397 2646                            u8950 081C                            u7990 290C  
                          u9807 1936                            u9727 185E                            u9647 179A  
                          u9567 277A                            u9487 3092                            u9817 1970  
                          u9737 1878                            u9657 17AE                            u9577 27E4  
                          u9497 30A8                            u8890 038A                            u9907 1A50  
                          u9827 1988                            u9747 1892                            u9667 17CA  
                          u9587 280E                            u9917 33DE                            u9837 19A0  
                          u9757 18AC                            u9677 17DE                            u9597 35E6  
                          u9927 342C                            u9847 19B8                            u9767 18CE  
                          u9687 17F2                            u9937 31E2                            u9857 19D0  
                          u9777 18E8                            u9697 1806                            u9947 31F2  
                          u9867 19F0                            u9787 1902                            u9957 3206  
                          u9877 1A08                            u9797 191C                            u9967 3238  
                          u9887 1A20                            u9977 324E                            u9897 1A38  
                          u9987 3286                            u9997 329A                            _Pole 0200  
            main@poles_detected 01C4                     main@t_count 01BE                            abs@a 0092  
                          _data 005E                            _echo 0E50                            _dbuf 0280  
                          _disp 01DD                            _atoi 2B12                            _main 0826  
                          _dtoa 1CF6                            _meas 0050                            _keys FD9D  
                          _send 006D                            _tick 0056                            _prec 004C  
                          _sens 0058                            _temp 00FF                            _time 01D2  
                          _nout 0048                            pad@i 009B                            pad@p 0098  
                          fsr1h 000FE2                            fsr2h 000FDA                            indf2 000FDF  
                          fsr1l 000FE1                            pad@w 009D                            fsr2l 000FD9  
                          _trig 2FCC                            _sumf 0040                            btemp 006E  
                          min@i 0089                            _xtoa 1F3E                            prodh 000FF4  
                          prodl 000FF3                            start 000E         __size_of_actuators_main 0150  
                 __CFG_IESO$OFF 000000                 ___fldiv@new_exp 0020                 __end_of_UI_main 0826  
               servoRotate180@i 0083                   __CFG_MCLRE$ON 000000                    main@act_done 01B6  
                  ___param_bank 000000                           ??_ISR 0036                           ??_abs 0094  
                         ??_pad 009A                           ??_min 0084           actuators_main@act_cnt 011A  
         I2C_Master_Read@ackBit 0081                ?_I2C_Master_Init 008D                ?_I2C_Master_Read 0001  
              ?_I2C_Master_Wait 0001                ?_I2C_Master_Stop 0001                           ?_echo 0001  
                 ___fltol@sign1 0030                 __end_of___aodiv 2B12                           ?_atoi 0087  
                         ?_main 0001                           ?_dtoa 009F                 __end_of___aomod 2EBC  
               __end_of___fldiv 1CF6                 __end_of___awdiv 378C                           _EEADR 000FA9  
                         STR_10 FDE8                           STR_11 FF7F                           STR_20 FF5E  
                         STR_12 FE4D                           STR_13 FF89                           STR_21 FF23  
                         STR_14 FE5D                           STR_22 FE3D                           STR_30 FDC6  
                         STR_31 FFE3                           STR_23 FFC5                           STR_15 FF93  
                         STR_32 FEC3                           STR_24 FF47                           STR_16 FDF9  
                         STR_40 FDB4                           STR_33 FE0B                           STR_17 FF9D  
                         STR_41 FE7C                           STR_25 FE6D                           STR_34 FFE3  
                         STR_26 FFC5                           STR_18 FFEC                           STR_42 FF3B  
                         STR_50 FEA9                           STR_51 FDC6                           STR_43 FE1B  
                         STR_35 FEC3                           STR_27 FF47                           STR_19 FEF0  
                         STR_28 FE6D                           STR_52 FEC3                           STR_44 FDB4  
                         STR_60 FF2F                           STR_36 FE0A                           STR_45 FE7C  
                         STR_53 FF02                           STR_61 FF53                           STR_37 FED4  
                         STR_29 FE8B                           STR_46 FF3B                           STR_62 FF69  
                         STR_54 FEFD                           STR_38 FEC6                           STR_55 FFBB  
                         STR_63 FFB1                           STR_39 FE1B                           STR_47 FDD7  
                         STR_56 FFA7                           STR_48 FF17                           STR_57 FF23  
                         STR_49 FE9A                           STR_58 FE2C                           STR_59 FEB8  
               __end_of___fltol 351A                           ?_trig 0001                 __end_of___lldiv 3810  
                         u10007 32D8                           u10017 32E4                           u10107 0228  
                         u10027 32F2                           u10117 02C8                           u10037 332A  
                         u10207 3DAE                           u10127 0328                           u10047 333E  
                         u10217 3DB8                           u10137 03B4                           u10057 3374  
                         u10147 0540                           u10067 3386                           u10157 070E  
                         u10077 007A                           u10167 389C                           u10087 011E  
                         u10177 38B6                           u10097 0192                           u10187 38C8  
               ___awdiv@divisor 0082                           u10197 38EC                           ?_xtoa 009F  
                         _T1CON 000FCD                 __end_of___llmod 39DA                           i2l423 1392  
                         i2l396 3BF6                 ___awdiv@counter 0084                    vfpfcnvrt@fmt 00C8  
                  vfpfcnvrt@llu 00D8                           _TMR1H 000FCF                           _TMR1L 000FCE  
                         _PORTB 000F81                           _TRISA 000F92                           _TRISB 000F93  
                         _TRISC 000F94                           _TRISD 000F95                           _TRISE 000F96  
                 __CFG_PWRT$OFF 000000                   __CFG_WRT0$OFF 000000                   __CFG_WRT1$OFF 000000  
                 __CFG_WRT2$OFF 000000                   __CFG_WRT3$OFF 000000                 __end_of_lcdInst 3ED2  
                __CFG_EBTR0$OFF 000000                  __CFG_FCMEN$OFF 000000                  __CFG_EBTR1$OFF 000000  
                __CFG_EBTR2$OFF 000000                  __CFG_EBTR3$OFF 000000                   __CFG_WRTB$OFF 000000  
                 __CFG_WRTC$OFF 000000                   __CFG_WRTD$OFF 000000                 __end_of_initLCD 3904  
                __CFG_EBTRB$OFF 000000                           _brake 351A                           _flags 004E  
                         _dists 0069                           _fputc 3904                 __end_of_isalpha 3C74  
                         _fputs 3C02                 __end_of_isdigit 3D70                           _servo 33A6  
                         atoi@n 0094                           pad@fp 0094                           atoi@s 0087  
                         _width 004A                           _state 01DF                           _putch 3EB2  
                         _start 3AE6                           main@i 01B2                           main@k 01BC  
                         dtoa@d 00A1                           dtoa@i 00C1                           dtoa@n 00B9  
                         dtoa@p 00B3                           dtoa@s 00B7                           dtoa@w 00B5  
               __end_of_islower 3D0C                 __end_of_isspace 3BC4                 __end_of_isupper 3D3E  
                         tablat 000FF5                 send_nibble@data 0081                           plusw2 000FDB  
               __end_of_pulse_e 3DCC                           ttemp5 006F                           ttemp6 0072  
                         ttemp7 0076                           status 000FD8     I2C_Master_Read@receivedByte 0082  
               __end_of_stepper 29C8                           wtemp8 006F                           xtoa@c 00C4  
                         xtoa@d 00A1                           xtoa@i 00C2                           xtoa@n 00BA  
                         xtoa@p 00B6                           xtoa@w 00B8                           xtoa@x 00A9  
                 _stepper2_back 35CA                 __end_of_toupper 3B84                ??_servoRotate180 0082  
            __size_ofi2___awdiv 0084                  __CFG_PBADEN$ON 000000                    _toupper$1802 008C  
               __initialization 3A3A                    __end_of_echo 1394                     _system_init 3CA8  
                  __end_of_atoi 2C56                    __end_of_main 0E50                    __end_of_dtoa 1F3E  
                  __end_of_keys FDAE         __end_of_ultrasonic_main 272E                    __end_of_trig 30CE  
                  __end_of_xtoa 2174                          ??_echo 0032                          ??_atoi 0089  
                        ??_main 015A                          ??_dtoa 00A9                          ??_trig 0080  
                        ??_xtoa 00AA                   __activetblptr 000002            number_deploy@t_count 0106  
             ?_I2C_Master_Start 0001               ?_I2C_Master_Write 0081            number_deploy@tires_t 0102  
            ??_I2C_Master_Start 0081                          ?_brake 0001                          _ADCON1 000FC1  
            ??_I2C_Master_Write 0083                    ?_send_nibble 0001                          ?_fputc 0084  
              ___llmod@dividend 0080                          ?_fputs 008D                          _EEDATA 000FA8  
                        _EECON2 000FA7                ___awdiv@dividend 0080                          ?_servo 0001  
                        ?_putch 0001                          ?_start 0001                          _INT1IE 007F83  
                        _INT1IF 007F80              stepper2@steps2_adj 0100                          i2l1316 1BE0  
                        i2l1327 1C4E                          i2l1328 1C4A                          i2l1394 2D12  
                        i2l1387 2C94                          i2l5303 1B40                          i2l5321 1BB8  
                        i2l5313 1B90                          i2l5333 1BF6                          i2l5261 1A9E  
                        i2l5501 2CC8                          i2l5327 1BDE                          i2l5511 2D38  
                        i2l5503 2CD4                          i2l5281 1ADE                          i2l5257 1A9A  
                        i2l5433 347E                          i2l5513 2D44                          i2l5505 2CFA  
                        i2l5363 1CB6                          i2l5339 1C14                          i2l5373 1CEC  
                        i2l5277 1ADA                          i2l5461 34EC                          i2l5453 34D8  
                        i2l5541 3824                          i2l5701 0F2A                          i2l5375 1CEE  
                        i2l5367 1CE0                          i2l5359 1C92                          i2l5295 1B28  
                        i2l6263 3BE4                          i2l5289 1B12                          i2l5449 34C8  
                        i2l5529 2D84                          i2l5553 384A                          i2l5467 3508  
                        i2l5459 34E0                          i2l5555 3852                          i2l5547 3834  
                        i2l5803 131C                          i2l5707 0F82                          i2l5493 2CA4  
                        i2l5573 388A                          i2l5565 3872                          i2l5741 10D4  
                        i2l5709 0F9C                          i2l5735 1078                          i2l5719 101C  
                        i2l5743 10EE                          i2l5569 387C                          i2l5809 1378  
                        i2l5753 116E                          i2l5499 2CC2                          i2l5685 0ECE  
                        i2l5775 1226                          i2l5769 11CA                          i2l5777 1240  
                        i2l5787 12C0                       ??_UI_main 0100                   vfpfcnvrt@done 00E1  
                        _TMR1ON 007E68                  ?_stepper2_back 0100                          _SSPADD 000FC8  
                        _SSPBUF 000FC9                __end_of___xxtofl 2D96     number_deploy@poles_detected 00FD  
                __CFG_XINST$OFF 000000                    vfprintf@cfmt 00EB                       ??___aodiv 0090  
                     ??___aomod 0090                          ___wmul 3E1E                       ??___fldiv 0017  
                     ??___awdiv 0084                       ??___fltol 002C                       ??___lldiv 0088  
                     ??___llmod 0088                          clear_0 3A60                          clear_1 3A6C  
                        clear_2 3A7C                ___awdiv@quotient 0086                       ??_lcdInst 0083  
                        _printf 3DF6                          pad@buf 0096                          dtoa@fp 009F  
                        _strlen 3D70                  i2___awdiv@sign 0006                       ??_initLCD 0084  
                        fputc@c 0084                          fputs@c 0091                          fputs@i 0092  
                  __pdataCOMRAM 0069                          fputs@s 008D                       ??_isalpha 0082  
                     ??_isdigit 0082               __end_ofi2___awdiv 3894                       ??_islower 0082  
                  __mediumconst FD9C                       ??_isspace 0082                          tblptrh 000FF7  
                     ??_isupper 0082                          tblptrl 000FF6                          tblptru 000FF8  
              __end_of_vfprintf 3AE6                       ??_pulse_e 0080                __end_of_stepper2 31CA  
ultrasonic_main@min_us_dist_967 010A                       ??_stepper 0104                          xtoa@fp 009F  
                     ??_toupper 0088                    ___xxtofl@arg 000B           pulse_e@interruptState 0080  
                  ___xxtofl@exp 000A                    ___xxtofl@val 0001                      __accesstop 0080  
       __end_of__initialization 3A82                  _actuators_main 272E                   ___rparam_used 000001  
                    ___fltol@f1 0028                    stepper@i_480 010E                    stepper@i_481 0110  
                  stepper@i_479 010C              __size_of_backwards 0026             full_drive@direction 00FE  
                __pcstackCOMRAM 0001                    stepper@t_dep 0102                    stepper@stack 0100  
              ?_ultrasonic_main 00FC                   __end_of_brake 35CA                   __end_of_fputc 3972  
                 __end_of_fputs 3C3E                   __end_of_servo 3460               servoRotate0@servo 0080  
                 __end_of_putch 3EC2                   __end_of_start 3B38                 _key_was_pressed 01E5  
         number_deploy@avg_dist 00FB                         ??_brake 00FB                         ??_fputc 0088  
                       ??_fputs 0091                         ??_servo 0085                         ??_putch 0083  
                       ??_start 0095                 ??_stepper2_back 0102                      __pbssBANK0 00FF  
                    __pbssBANK1 01CA                      __pbssBANK2 0200          __end_of_actuators_main 287E  
                       ?___wmul 0080              __size_of_send_byte 0018                         ?_printf 00ED  
        stepper2_back@direction 0103                         ?_strlen 0080           __end_of_number_deploy 2394  
                     ?___xxtofl 0001               __end_of_backwards 3E6C              __size_of_vfpfcnvrt 03AA  
                    _dist_final 0250                         _SSPCON1 000FC6                         _SSPCON2 000FC5  
                       _SSPSTAT 000FC7                         _UI_main 0012            __size_of_send_nibble 001A  
               ?_actuators_main 0112                         __Hparam 0000                         __Lparam 0000  
                  ?_system_init 0001                         ___aodiv 29C8                         ___aomod 2D96  
                       ___fldiv 1A6E                         ___awdiv 3706                         ___fltol 3460  
                       ___lldiv 378C                 __size_of___wmul 0028                         ___llmod 3972  
                     ?_vfprintf 00E5                       ?_stepper2 0100                 __CFG_STVREN$OFF 000000  
                       __pcinit 3A3A                      _full_drive 173E                         __ramtop 1000  
                       _lcdInst 3EC2                         __ptext0 0826                         __ptext1 2582  
                       __ptext2 2FCC                         __ptext3 2394                         __ptext4 2EBC  
                       __ptext5 3AE6                         __ptext6 2174                         __ptext7 3706  
                       __ptext8 351A                         __ptext9 3E46                 __size_of_printf 0028  
               __size_of_strlen 002E                         _initLCD 3894                    __size_of_ISR 3BFA  
                       _counter 0060                    __size_of_abs 0034                    __size_of_pad 009C  
                       _isalpha 3C3E                    __size_of_min 0110                         _isdigit 3D3E  
                    ??___xxtofl 0005                         _islower 3CDA                         _isspace 3B84  
                       _isupper 3D0C        __size_of_I2C_Master_Init 0060        __size_of_I2C_Master_Read 002A  
      __size_of_I2C_Master_Wait 0014        __size_of_I2C_Master_Stop 0008                 _prev_dist_final 01CA  
                       _pressed 01D9                         atoi@neg 008D                         _pulse_e 3D9E  
                       _stepper 287E                  __pintcode_body 3BC4                         _toupper 3B38  
          end_of_initialization 3A82                         min@size 0082             main@arduino_stopped 01B7  
         __end_of_LCD_SIZE_HORZ FDB3               __end_of_send_byte 3E9E           __end_of_LCD_SIZE_VERT FDB2  
                       fputc@fp 0086                   __Lmediumconst FD9C                         int_func 3BC4  
                       fputs@fp 008F       __size_of_I2C_Master_Start 0008       __size_of_I2C_Master_Write 000A  
               ___lldiv@divisor 0084                 ___lldiv@counter 008C               __end_of_vfpfcnvrt 173E  
                 ?_servoRotate0 0080                  main@steps2_adj 01BA                         postdec1 000FE5  
                       postdec2 000FDD                         postinc0 000FEE                         postinc1 000FE6  
                       postinc2 000FDE                      ??_vfprintf 00EB                      ??_stepper2 0102  
                       strlen@a 0082                         strlen@s 0080                       _PORTAbits 000F80  
                    _print_echo 2394                   stepper2@i_489 0109                   ___xxtofl@sign 0009  
                     _TRISAbits 000F92                       _TRISBbits 000F93                       _TRISCbits 000F94  
                   ___fldiv@grs 0022                     ___fldiv@rem 001B                      main@i_1081 01C0  
                    main@i_1075 01B4                       i2___awdiv 3810     ultrasonic_main@step2_offset 0106  
                 send_byte@data 0082              i2___awdiv@dividend 0001           UI_main@poles_detected 00FD  
                ??_servoRotate0 0082     number_deploy@tires_detected 0104                     vfpfcnvrt@ap 00CA  
                   vfpfcnvrt@fp 00C6                     vfpfcnvrt@ll 00D0                  __end_of___wmul 3E46  
                   ?_full_drive 00FB         __size_of_servoRotate180 00F0                   __pidataCOMRAM 3EEC  
                __end_of_printf 3E1E                  __end_of_strlen 3D9E             start_initialization 3A3A  
                    min@minimum 0087              i2___awdiv@quotient 0007                     __end_of_ISR 3C02  
                   __end_of_abs 3CA8                     __end_of_pad 3706                     __end_of_min 2FCC  
         stepper2@count_stepper 010B                      ?i2___awdiv 0001               ??_I2C_Master_Init 0091  
             ??_I2C_Master_Read 0081               ??_I2C_Master_Wait 0080               ??_I2C_Master_Stop 0081  
             main@prev_avg_dist 01C6                  _poles_detected 0052                 ___llmod@divisor 0084  
               ___llmod@counter 0088                    UI_main@t_dep 00FB                     vfprintf@fmt 00E7  
                      ??___wmul 0084        I2C_Master_Init@clockFreq 008D                __CFG_LPT1OSC$OFF 000000  
          __size_of_system_init 0032                        ??_printf 00F7                        ??_strlen 0082  
                   ?_print_echo 0001                       ___fldiv@a 0013                       ___fldiv@b 000F  
      __size_of_ultrasonic_main 01AC                     __pbssCOMRAM 0038                   __pcstackBANK0 0080  
                 __pcstackBANK1 0100                ___aodiv@dividend 0080                ??_actuators_main 0118  
             __size_of___xxtofl 0140                       _backwards 3E46                        ?_UI_main 00FB  
         __end_of_stepper2_back 366A             __size_of_full_drive 0330                       _atoi$1710 008F  
                     _atoi$1711 0093                       _atoi$1712 0091                _I2C_Master_Start 3EE4  
              _I2C_Master_Write 3ED2                       _dtoa$1226 00B1               __CFG_CCP2MX$PORTC 000000  
                     __pintcode 0008                   __pmediumconst FD9C                        ?___aodiv 0080  
                      ?___aomod 0080                        ?___fldiv 000F                        ?___awdiv 0080  
              ___aodiv@quotient 0092                        ?___fltol 0028                        ?___lldiv 0080  
                      ?___llmod 0080                        ?_lcdInst 0001               __size_of_vfprintf 0056  
             __size_of_stepper2 00FC            full_drive@stepper_no 00FB                        ?_initLCD 0001  
                      ?_isalpha 0080                        ?_isdigit 0080                        ?_islower 0080  
                      ?_isspace 0080                        ?_isupper 0080            __end_of_servoRotate0 33A6  
                 ??_send_nibble 0081                        ?_pulse_e 0001                  __size_of_brake 00B0  
                   ??i2___awdiv 0005                        ?_stepper 0100                  __size_of_fputc 006E  
                __size_of_fputs 003C                        ?_toupper 0086                  __size_of_servo 00BA  
                    ?_backwards 0001                  __size_of_putch 0010                  __size_of_start 0052  
                ___wmul@product 0084                        _LATAbits 000F89                        _LATBbits 000F8A  
                      _LATCbits 000F8B                        _LATDbits 000F8C                        _LATEbits 000F8D  
                      UI_main@i 0159                       _send_byte 3E86             __size_of_print_echo 01EE  
        __size_of_number_deploy 0220                  _LCD_LINE1_ADDR FDB0                  _LCD_LINE2_ADDR FDB3  
                _LCD_LINE3_ADDR FDAF                  _LCD_LINE4_ADDR FDAE                        i2u522_40 1CA0  
                      i2u523_40 1CC4                        i2u531_40 346C                        i2u532_40 349C  
                      i2u532_45 3492                        i2u518_40 1C44                        i2u536_40 34F2  
                      i2u554_40 3856                        i2u650_40 3BEE                        i2u547_40 2D4E  
                      i2u563_40 0EDE                        i2u564_40 0EEE                        i2u573_40 102C  
                      i2u574_40 103C                        i2u583_40 117E                        i2u584_40 118E  
                      i2u593_40 12D0                        i2u594_40 12E0                __CFG_WDTPS$32768 000000  
    stepper2_back@count_stepper 0104                  _servoRotate180 31CA                       _vfpfcnvrt 1394  
                     _xtoa$1237 00B2                       _xtoa$1238 00B4               ___wmul@multiplier 0080  
                     main@t_dep 01C2               i2___awdiv@divisor 0003                       main@stack 01B8  
             i2___awdiv@counter 0005                    _isspace$1737 0086                      vfpfcnvrt@c 00E0  
           actuators_main@t_dep 0116             actuators_main@stack 0112                       copy_data0 3A4E  
             ??_ultrasonic_main 0100                 UI_main@keypress 0154          __end_of_LCD_LINE1_ADDR FDB1  
              __size_of_UI_main 0814          __end_of_LCD_LINE2_ADDR FDB4          __end_of_LCD_LINE3_ADDR FDB0  
        __end_of_LCD_LINE4_ADDR FDAF             __end_of_send_nibble 3E86                      _EECON1bits 000FA6  
                    ?_send_byte 0001                     UI_main@Pole 0104                        __Hrparam 0000  
                   UI_main@tick 0155                      vfprintf@ap 00E9                        __Lrparam 0000  
                    vfprintf@fp 00E5              __CFG_BOREN$SBORDIS 000000          __end_of_servoRotate180 32BA  
              __size_of___aodiv 014A                __size_of___aomod 0126                __size_of___fldiv 0288  
              __size_of___awdiv 0086                __size_of___fltol 00BA                __size_of___lldiv 0084  
              __size_of___llmod 0068                    ??_full_drive 00FD                      ?_vfpfcnvrt 00C6  
               ___aodiv@divisor 0088                 ___aodiv@counter 0090                __size_of_lcdInst 0010  
      actuators_main@steps2_adj 0114                   _number_deploy 2174                 _I2C_Master_Init 39DA  
               _I2C_Master_Read 3DCC                __size_of_initLCD 0070                        ___xxtofl 2C56  
               _I2C_Master_Wait 3E9E                 _I2C_Master_Stop 3EDC                __size_of_isalpha 0036  
              __size_of_isdigit 0032                __size_of_islower 0032                __size_of_isspace 0040  
                      __ptext10 272E                        __ptext11 3CA8                        __ptext20 3DF6  
                      __ptext12 35CA                        __ptext21 3A90                        __ptext13 30CE  
                      __ptext30 3D70                        __ptext22 1394                        __ptext14 287E  
                      __ptext31 3C02                        __ptext23 1F3E                        __ptext15 173E  
                      __ptext40 3E1E                        __ptext32 3904                        __ptext24 3B38  
                      __ptext16 33A6                        __ptext41 3894                        __ptext33 3EB2  
                      __ptext25 3CDA                        __ptext17 31CA                        __ptext50 3DCC  
                      __ptext42 3EC2                        __ptext34 3C74                        __ptext26 3D0C  
                      __ptext18 32BA                        __ptext51 3E9E                        __ptext43 3E86  
                      __ptext35 2D96                        __ptext27 3C3E                        __ptext19 0012  
                      __ptext52 39DA                        __ptext44 3E6C                        __ptext36 29C8  
                      __ptext28 1CF6                        __ptext53 378C                        __ptext45 3D9E  
                      __ptext37 2B12                        __ptext29 366A                        __ptext46 3972  
                      __ptext38 3B84                        __ptext55 0E50                        __ptext47 3ED2  
                      __ptext39 3D3E                        __ptext56 3810                        __ptext48 3EDC  
                      __ptext57 2C56                        __ptext49 3EE4                        __ptext58 3460  
                      __ptext59 1A6E                __size_of_isupper 0032                        _avg_dist 0044  
              __size_of_pulse_e 002E                     ??_backwards 0083                __size_of_stepper 014A  
              __size_of_toupper 004C                   __size_of_echo 0544                   __size_of_atoi 0144  
                 __size_of_main 062A                   __size_of_dtoa 0248         stepper2_back@steps2_adj 0100  
                 __size_of_trig 0102                   __size_of_xtoa 0236              __end_of_full_drive 1A6E  
                      _keypress 005F                        _temp_int 01E1                 ?_servoRotate180 0080  
                      int$flags 006E                        _vfprintf 3A90                        main@Pole 0162  
                      _stepper2 30CE                       printf@fmt 00ED     I2C_Master_Write@byteToWrite 0081  
              ___aomod@dividend 0080           __size_of_servoRotate0 00EC                        min@array 0080  
                  ??_print_echo 00FB                  ?_number_deploy 00FB                       putch@data 0083  
                _vfpfcnvrt$1252 00E3        __end_of_I2C_Master_Start 3EEC        __end_of_I2C_Master_Write 3EDC  
                    _INTCONbits 000FF2           ultrasonic_main@sensed 0104                        isalpha@c 0080  
                      isdigit@c 0080                       stepper2@i 0107                     _send_nibble 3E6C  
                      intlevel2 0000                   _LCD_SIZE_HORZ FDB2                        islower@c 0080  
                 _LCD_SIZE_VERT FDB1                        isspace@c 0080                ___lldiv@dividend 0080  
                   ??_send_byte 0082                        isupper@c 0080                  _tires_deployed 0054  
            __end_of_print_echo 2582                   ??_system_init 0080                    _servoRotate0 32BA  
                      printf@ap 00F9         __end_of_I2C_Master_Init 3A3A                 ___aomod@divisor 0088  
       __end_of_I2C_Master_Read 3DF6         __end_of_I2C_Master_Wait 3EB2         __end_of_I2C_Master_Stop 3EE4  
                   ??_vfpfcnvrt 00CC                     lcdInst@data 0083                 ___aomod@counter 0090  
                      stepper@i 010A       ultrasonic_main@steps2_adj 0108                ___lldiv@quotient 0088  
                      toupper@c 0086                     _SSPCON1bits 000FC6                     _SSPCON2bits 000FC5  
                   _timer_count 005C                    ___aodiv@sign 0091                    ___aomod@sign 0091  
          stepper@count_stepper 0108  
