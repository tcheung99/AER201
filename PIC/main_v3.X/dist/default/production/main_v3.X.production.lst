

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Apr 08 19:25:58 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1,inline
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1,inline
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    71                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    78                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    79                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    80  0000                     
    81                           ; Version 2.05
    82                           ; Generated 20/12/2018 GMT
    83                           ; 
    84                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    85                           ; All rights reserved.
    86                           ; 
    87                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    88                           ; 
    89                           ; Redistribution and use in source and binary forms, with or without modification, are
    90                           ; permitted provided that the following conditions are met:
    91                           ; 
    92                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    93                           ;        conditions and the following disclaimer.
    94                           ; 
    95                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    96                           ;        of conditions and the following disclaimer in the documentation and/or other
    97                           ;        materials provided with the distribution.
    98                           ; 
    99                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   100                           ;        software without specific prior written permission.
   101                           ; 
   102                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   103                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   104                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   105                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   106                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   107                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   108                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   109                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   110                           ; 
   111                           ; 
   112                           ; Code-generator required, PIC18F4620 Definitions
   113                           ; 
   114                           ; SFR Addresses
   115  0000                     
   116                           	psect	idataCOMRAM
   117  003EEC                     __pidataCOMRAM:
   118                           	opt callstack 0
   119                           
   120                           ;initializer for _dists
   121  003EEC  0000               	dw	0
   122  003EEE  FFFF               	dw	65535
   123                           
   124                           ;initializer for _send
   125  003EF0  01                 	db	1
   126                           
   127                           	psect	mediumconst
   128  00FD9C                     __pmediumconst:
   129                           	opt callstack 0
   130  00FD9C  00                 	db	0
   131  00FD9D                     _keys:
   132                           	opt callstack 0
   133  00FD9D  31                 	db	49
   134  00FD9E  32                 	db	50
   135  00FD9F  33                 	db	51
   136  00FDA0  41                 	db	65
   137  00FDA1  34                 	db	52
   138  00FDA2  35                 	db	53
   139  00FDA3  36                 	db	54
   140  00FDA4  42                 	db	66
   141  00FDA5  37                 	db	55
   142  00FDA6  38                 	db	56
   143  00FDA7  39                 	db	57
   144  00FDA8  43                 	db	67
   145  00FDA9  2A                 	db	42
   146  00FDAA  30                 	db	48
   147  00FDAB  23                 	db	35
   148  00FDAC  44                 	db	68
   149  00FDAD  00                 	db	0
   150  00FDAE                     __end_of_keys:
   151                           	opt callstack 0
   152  00FDAE  50                 	db	80
   153  00FDAF                     __end_of_LCD_LINE4_ADDR:
   154                           	opt callstack 0
   155  00FDAF  10                 	db	16
   156  00FDB0                     __end_of_LCD_LINE3_ADDR:
   157                           	opt callstack 0
   158  00FDB0                     _LCD_LINE1_ADDR:
   159                           	opt callstack 0
   160  00FDB0  00                 	db	0
   161  00FDB1                     __end_of_LCD_LINE1_ADDR:
   162                           	opt callstack 0
   163  00FDB1                     _LCD_SIZE_VERT:
   164                           	opt callstack 0
   165  00FDB1  04                 	db	4
   166  00FDB2                     __end_of_LCD_SIZE_VERT:
   167                           	opt callstack 0
   168  00FDB2                     _LCD_SIZE_HORZ:
   169                           	opt callstack 0
   170  00FDB2  10                 	db	16
   171  00FDB3                     __end_of_LCD_SIZE_HORZ:
   172                           	opt callstack 0
   173  00FDB3  40                 	db	64
   174  00FDB4                     __end_of_LCD_LINE2_ADDR:
   175                           	opt callstack 0
   176  0000                     _EECON2	set	4007
   177  0000                     _EECON1bits	set	4006
   178  0000                     _EEADR	set	4009
   179  0000                     _EEDATA	set	4008
   180  0000                     _PORTAbits	set	3968
   181  0000                     _TRISAbits	set	3986
   182  0000                     _T1CON	set	4045
   183  0000                     _PORTB	set	3969
   184  0000                     _TMR1H	set	4047
   185  0000                     _TMR1L	set	4046
   186  0000                     _LATDbits	set	3980
   187  0000                     _INTCONbits	set	4082
   188  0000                     _LATBbits	set	3978
   189  0000                     _TRISBbits	set	3987
   190  0000                     _LATE	set	3981
   191  0000                     _TRISE	set	3990
   192  0000                     _LATC	set	3979
   193  0000                     _TRISC	set	3988
   194  0000                     _ADCON1	set	4033
   195  0000                     _TRISD	set	3989
   196  0000                     _LATD	set	3980
   197  0000                     _TRISA	set	3986
   198  0000                     _LATB	set	3978
   199  0000                     _TRISB	set	3987
   200  0000                     _LATAbits	set	3977
   201  0000                     _LATEbits	set	3981
   202  0000                     _LATCbits	set	3979
   203  0000                     _LATA	set	3977
   204  0000                     _SSPBUF	set	4041
   205  0000                     _SSPCON2bits	set	4037
   206  0000                     _SSPCON1	set	4038
   207  0000                     _SSPADD	set	4040
   208  0000                     _TRISCbits	set	3988
   209  0000                     _SSPCON1bits	set	4038
   210  0000                     _SSPCON2	set	4037
   211  0000                     _SSPSTAT	set	4039
   212  0000                     _GIE	set	32663
   213  0000                     _INT1IE	set	32643
   214  0000                     _RB2	set	31754
   215  0000                     _RB3	set	31755
   216  0000                     _RB4	set	31756
   217  0000                     _RB5	set	31757
   218  0000                     _RB6	set	31758
   219  0000                     _TMR1ON	set	32360
   220  0000                     _RB7	set	31759
   221  0000                     _INT1IF	set	32640
   222  0000                     _RBIE	set	32659
   223  0000                     _RBIF	set	32656
   224  0000                     _RD0	set	31768
   225  0000                     _RD1	set	31769
   226  0000                     _RC2	set	31762
   227  0000                     _RC1	set	31761
   228  00FDB4                     STR_40:
   229  00FDB4  50                 	db	80	;'P'
   230  00FDB5  25                 	db	37
   231  00FDB6  64                 	db	100	;'d'
   232  00FDB7  20                 	db	32
   233  00FDB8  44                 	db	68	;'D'
   234  00FDB9  65                 	db	101	;'e'
   235  00FDBA  70                 	db	112	;'p'
   236  00FDBB  3A                 	db	58	;':'
   237  00FDBC  25                 	db	37
   238  00FDBD  64                 	db	100	;'d'
   239  00FDBE  2C                 	db	44
   240  00FDBF  54                 	db	84	;'T'
   241  00FDC0  6F                 	db	111	;'o'
   242  00FDC1  74                 	db	116	;'t'
   243  00FDC2  3A                 	db	58	;':'
   244  00FDC3  25                 	db	37
   245  00FDC4  64                 	db	100	;'d'
   246  00FDC5  00                 	db	0
   247  00FDC6                     STR_30:
   248  00FDC6  20                 	db	32
   249  00FDC7  20                 	db	32
   250  00FDC8  20                 	db	32
   251  00FDC9  20                 	db	32
   252  00FDCA  20                 	db	32
   253  00FDCB  30                 	db	48	;'0'
   254  00FDCC  2D                 	db	45
   255  00FDCD  4D                 	db	77	;'M'
   256  00FDCE  65                 	db	101	;'e'
   257  00FDCF  6E                 	db	110	;'n'
   258  00FDD0  75                 	db	117	;'u'
   259  00FDD1  20                 	db	32
   260  00FDD2  20                 	db	32
   261  00FDD3  20                 	db	32
   262  00FDD4  20                 	db	32
   263  00FDD5  20                 	db	32
   264  00FDD6  00                 	db	0
   265  00FDD7                     STR_47:
   266  00FDD7  3C                 	db	60	;'<'
   267  00FDD8  2A                 	db	42
   268  00FDD9  20                 	db	32
   269  00FDDA  20                 	db	32
   270  00FDDB  20                 	db	32
   271  00FDDC  30                 	db	48	;'0'
   272  00FDDD  2D                 	db	45
   273  00FDDE  4D                 	db	77	;'M'
   274  00FDDF  65                 	db	101	;'e'
   275  00FDE0  6E                 	db	110	;'n'
   276  00FDE1  75                 	db	117	;'u'
   277  00FDE2  20                 	db	32
   278  00FDE3  20                 	db	32
   279  00FDE4  20                 	db	32
   280  00FDE5  20                 	db	32
   281  00FDE6  20                 	db	32
   282  00FDE7  00                 	db	0
   283  00FDE8                     STR_10:
   284  00FDE8  44                 	db	68	;'D'
   285  00FDE9  69                 	db	105	;'i'
   286  00FDEA  73                 	db	115	;'s'
   287  00FDEB  74                 	db	116	;'t'
   288  00FDEC  31                 	db	49	;'1'
   289  00FDED  3D                 	db	61	;'='
   290  00FDEE  25                 	db	37
   291  00FDEF  64                 	db	100	;'d'
   292  00FDF0  2C                 	db	44
   293  00FDF1  41                 	db	65	;'A'
   294  00FDF2  76                 	db	118	;'v'
   295  00FDF3  67                 	db	103	;'g'
   296  00FDF4  3D                 	db	61	;'='
   297  00FDF5  25                 	db	37
   298  00FDF6  64                 	db	100	;'d'
   299  00FDF7  20                 	db	32
   300  00FDF8  00                 	db	0
   301  00FDF9                     STR_16:
   302  00FDF9  44                 	db	68	;'D'
   303  00FDFA  69                 	db	105	;'i'
   304  00FDFB  73                 	db	115	;'s'
   305  00FDFC  74                 	db	116	;'t'
   306  00FDFD  34                 	db	52	;'4'
   307  00FDFE  3D                 	db	61	;'='
   308  00FDFF  25                 	db	37
   309  00FE00  64                 	db	100	;'d'
   310  00FE01  2C                 	db	44
   311  00FE02  41                 	db	65	;'A'
   312  00FE03  76                 	db	118	;'v'
   313  00FE04  67                 	db	103	;'g'
   314  00FE05  3D                 	db	61	;'='
   315  00FE06  25                 	db	37
   316  00FE07  64                 	db	100	;'d'
   317  00FE08  20                 	db	32
   318  00FE09  00                 	db	0
   319  00FE0A                     STR_36:
   320  00FE0A  20                 	db	32
   321  00FE0B  20                 	db	32
   322  00FE0C  20                 	db	32
   323  00FE0D  20                 	db	32
   324  00FE0E  20                 	db	32
   325  00FE0F  30                 	db	48	;'0'
   326  00FE10  2D                 	db	45
   327  00FE11  4D                 	db	77	;'M'
   328  00FE12  65                 	db	101	;'e'
   329  00FE13  6E                 	db	110	;'n'
   330  00FE14  75                 	db	117	;'u'
   331  00FE15  20                 	db	32
   332  00FE16  20                 	db	32
   333  00FE17  20                 	db	32
   334  00FE18  23                 	db	35
   335  00FE19  3E                 	db	62	;'>'
   336  00FE1A  00                 	db	0
   337  00FE1B                     STR_39:
   338  00FE1B  3C                 	db	60	;'<'
   339  00FE1C  2A                 	db	42
   340  00FE1D  20                 	db	32
   341  00FE1E  20                 	db	32
   342  00FE1F  20                 	db	32
   343  00FE20  30                 	db	48	;'0'
   344  00FE21  2D                 	db	45
   345  00FE22  4D                 	db	77	;'M'
   346  00FE23  65                 	db	101	;'e'
   347  00FE24  6E                 	db	110	;'n'
   348  00FE25  75                 	db	117	;'u'
   349  00FE26  20                 	db	32
   350  00FE27  20                 	db	32
   351  00FE28  20                 	db	32
   352  00FE29  23                 	db	35
   353  00FE2A  3E                 	db	62	;'>'
   354  00FE2B  00                 	db	0
   355  00FE2C                     STR_58:
   356  00FE2C  64                 	db	100	;'d'
   357  00FE2D  69                 	db	105	;'i'
   358  00FE2E  73                 	db	115	;'s'
   359  00FE2F  74                 	db	116	;'t'
   360  00FE30  20                 	db	32
   361  00FE31  70                 	db	112	;'p'
   362  00FE32  5B                 	db	91	;'['
   363  00FE33  25                 	db	37
   364  00FE34  64                 	db	100	;'d'
   365  00FE35  5D                 	db	93	;']'
   366  00FE36  3A                 	db	58	;':'
   367  00FE37  25                 	db	37
   368  00FE38  64                 	db	100	;'d'
   369  00FE39  2C                 	db	44
   370  00FE3A  25                 	db	37
   371  00FE3B  64                 	db	100	;'d'
   372  00FE3C  00                 	db	0
   373  00FE3D                     STR_22:
   374  00FE3D  64                 	db	100	;'d'
   375  00FE3E  65                 	db	101	;'e'
   376  00FE3F  74                 	db	116	;'t'
   377  00FE40  2C                 	db	44
   378  00FE41  25                 	db	37
   379  00FE42  64                 	db	100	;'d'
   380  00FE43  2C                 	db	44
   381  00FE44  20                 	db	32
   382  00FE45  74                 	db	116	;'t'
   383  00FE46  63                 	db	99	;'c'
   384  00FE47  6E                 	db	110	;'n'
   385  00FE48  74                 	db	116	;'t'
   386  00FE49  20                 	db	32
   387  00FE4A  25                 	db	37
   388  00FE4B  64                 	db	100	;'d'
   389  00FE4C  00                 	db	0
   390  00FE4D                     STR_12:
   391  00FE4D  44                 	db	68	;'D'
   392  00FE4E  69                 	db	105	;'i'
   393  00FE4F  73                 	db	115	;'s'
   394  00FE50  74                 	db	116	;'t'
   395  00FE51  32                 	db	50	;'2'
   396  00FE52  3D                 	db	61	;'='
   397  00FE53  25                 	db	37
   398  00FE54  64                 	db	100	;'d'
   399  00FE55  2C                 	db	44
   400  00FE56  41                 	db	65	;'A'
   401  00FE57  76                 	db	118	;'v'
   402  00FE58  67                 	db	103	;'g'
   403  00FE59  3D                 	db	61	;'='
   404  00FE5A  25                 	db	37
   405  00FE5B  64                 	db	100	;'d'
   406  00FE5C  00                 	db	0
   407  00FE5D                     STR_14:
   408  00FE5D  44                 	db	68	;'D'
   409  00FE5E  69                 	db	105	;'i'
   410  00FE5F  73                 	db	115	;'s'
   411  00FE60  74                 	db	116	;'t'
   412  00FE61  33                 	db	51	;'3'
   413  00FE62  3D                 	db	61	;'='
   414  00FE63  25                 	db	37
   415  00FE64  64                 	db	100	;'d'
   416  00FE65  2C                 	db	44
   417  00FE66  41                 	db	65	;'A'
   418  00FE67  76                 	db	118	;'v'
   419  00FE68  67                 	db	103	;'g'
   420  00FE69  3D                 	db	61	;'='
   421  00FE6A  25                 	db	37
   422  00FE6B  64                 	db	100	;'d'
   423  00FE6C  00                 	db	0
   424  00FE6D                     STR_25:
   425  00FE6D  33                 	db	51	;'3'
   426  00FE6E  20                 	db	32
   427  00FE6F  2D                 	db	45
   428  00FE70  20                 	db	32
   429  00FE71  44                 	db	68	;'D'
   430  00FE72  61                 	db	97	;'a'
   431  00FE73  74                 	db	116	;'t'
   432  00FE74  65                 	db	101	;'e'
   433  00FE75  26                 	db	38
   434  00FE76  54                 	db	84	;'T'
   435  00FE77  69                 	db	105	;'i'
   436  00FE78  6D                 	db	109	;'m'
   437  00FE79  65                 	db	101	;'e'
   438  00FE7A  20                 	db	32
   439  00FE7B  00                 	db	0
   440  00FE7C                     STR_41:
   441  00FE7C  44                 	db	68	;'D'
   442  00FE7D  69                 	db	105	;'i'
   443  00FE7E  73                 	db	115	;'s'
   444  00FE7F  74                 	db	116	;'t'
   445  00FE80  54                 	db	84	;'T'
   446  00FE81  6F                 	db	111	;'o'
   447  00FE82  53                 	db	83	;'S'
   448  00FE83  74                 	db	116	;'t'
   449  00FE84  61                 	db	97	;'a'
   450  00FE85  72                 	db	114	;'r'
   451  00FE86  74                 	db	116	;'t'
   452  00FE87  3A                 	db	58	;':'
   453  00FE88  25                 	db	37
   454  00FE89  64                 	db	100	;'d'
   455  00FE8A  00                 	db	0
   456  00FE8B                     STR_29:
   457  00FE8B  4D                 	db	77	;'M'
   458  00FE8C  61                 	db	97	;'a'
   459  00FE8D  63                 	db	99	;'c'
   460  00FE8E  68                 	db	104	;'h'
   461  00FE8F  69                 	db	105	;'i'
   462  00FE90  6E                 	db	110	;'n'
   463  00FE91  65                 	db	101	;'e'
   464  00FE92  20                 	db	32
   465  00FE93  49                 	db	73	;'I'
   466  00FE94  6E                 	db	110	;'n'
   467  00FE95  20                 	db	32
   468  00FE96  55                 	db	85	;'U'
   469  00FE97  73                 	db	115	;'s'
   470  00FE98  65                 	db	101	;'e'
   471  00FE99  00                 	db	0
   472  00FE9A                     STR_49:
   473  00FE9A  25                 	db	37
   474  00FE9B  30                 	db	48	;'0'
   475  00FE9C  32                 	db	50	;'2'
   476  00FE9D  78                 	db	120	;'x'
   477  00FE9E  2F                 	db	47
   478  00FE9F  25                 	db	37
   479  00FEA0  30                 	db	48	;'0'
   480  00FEA1  32                 	db	50	;'2'
   481  00FEA2  78                 	db	120	;'x'
   482  00FEA3  2F                 	db	47
   483  00FEA4  25                 	db	37
   484  00FEA5  30                 	db	48	;'0'
   485  00FEA6  32                 	db	50	;'2'
   486  00FEA7  78                 	db	120	;'x'
   487  00FEA8  00                 	db	0
   488  00FEA9                     STR_50:
   489  00FEA9  25                 	db	37
   490  00FEAA  30                 	db	48	;'0'
   491  00FEAB  32                 	db	50	;'2'
   492  00FEAC  78                 	db	120	;'x'
   493  00FEAD  3A                 	db	58	;':'
   494  00FEAE  25                 	db	37
   495  00FEAF  30                 	db	48	;'0'
   496  00FEB0  32                 	db	50	;'2'
   497  00FEB1  78                 	db	120	;'x'
   498  00FEB2  3A                 	db	58	;':'
   499  00FEB3  25                 	db	37
   500  00FEB4  30                 	db	48	;'0'
   501  00FEB5  32                 	db	50	;'2'
   502  00FEB6  78                 	db	120	;'x'
   503  00FEB7  00                 	db	0
   504  00FEB8                     STR_59:
   505  00FEB8  70                 	db	112	;'p'
   506  00FEB9  5B                 	db	91	;'['
   507  00FEBA  25                 	db	37
   508  00FEBB  64                 	db	100	;'d'
   509  00FEBC  5D                 	db	93	;']'
   510  00FEBD  20                 	db	32
   511  00FEBE  66                 	db	102	;'f'
   512  00FEBF  73                 	db	115	;'s'
   513  00FEC0  20                 	db	32
   514  00FEC1  3A                 	db	58	;':'
   515  00FEC2  20                 	db	32
   516  00FEC3  25                 	db	37
   517  00FEC4  64                 	db	100	;'d'
   518  00FEC5  00                 	db	0
   519  00FEC6                     STR_38:
   520  00FEC6  4E                 	db	78	;'N'
   521  00FEC7  6F                 	db	111	;'o'
   522  00FEC8  2E                 	db	46
   523  00FEC9  20                 	db	32
   524  00FECA  50                 	db	80	;'P'
   525  00FECB  6F                 	db	111	;'o'
   526  00FECC  6C                 	db	108	;'l'
   527  00FECD  65                 	db	101	;'e'
   528  00FECE  73                 	db	115	;'s'
   529  00FECF  3A                 	db	58	;':'
   530  00FED0  20                 	db	32
   531  00FED1  25                 	db	37
   532  00FED2  64                 	db	100	;'d'
   533  00FED3  00                 	db	0
   534  00FED4                     STR_37:
   535  00FED4  4E                 	db	78	;'N'
   536  00FED5  6F                 	db	111	;'o'
   537  00FED6  2E                 	db	46
   538  00FED7  20                 	db	32
   539  00FED8  54                 	db	84	;'T'
   540  00FED9  69                 	db	105	;'i'
   541  00FEDA  72                 	db	114	;'r'
   542  00FEDB  65                 	db	101	;'e'
   543  00FEDC  73                 	db	115	;'s'
   544  00FEDD  3A                 	db	58	;':'
   545  00FEDE  20                 	db	32
   546  00FEDF  25                 	db	37
   547  00FEE0  64                 	db	100	;'d'
   548  00FEE1  00                 	db	0
   549  00FEE2                     STR_7:
   550  00FEE2  53                 	db	83	;'S'
   551  00FEE3  74                 	db	116	;'t'
   552  00FEE4  65                 	db	101	;'e'
   553  00FEE5  70                 	db	112	;'p'
   554  00FEE6  20                 	db	32
   555  00FEE7  73                 	db	115	;'s'
   556  00FEE8  70                 	db	112	;'p'
   557  00FEE9  65                 	db	101	;'e'
   558  00FEEA  65                 	db	101	;'e'
   559  00FEEB  64                 	db	100	;'d'
   560  00FEEC  20                 	db	32
   561  00FEED  25                 	db	37
   562  00FEEE  64                 	db	100	;'d'
   563  00FEEF  00                 	db	0
   564  00FEF0                     STR_19:
   565  00FEF0  62                 	db	98	;'b'
   566  00FEF1  72                 	db	114	;'r'
   567  00FEF2  65                 	db	101	;'e'
   568  00FEF3  61                 	db	97	;'a'
   569  00FEF4  6B                 	db	107	;'k'
   570  00FEF5  20                 	db	32
   571  00FEF6  68                 	db	104	;'h'
   572  00FEF7  65                 	db	101	;'e'
   573  00FEF8  72                 	db	114	;'r'
   574  00FEF9  65                 	db	101	;'e'
   575  00FEFA  65                 	db	101	;'e'
   576  00FEFB  3F                 	db	63	;'?'
   577  00FEFC  00                 	db	0
   578  00FEFD                     STR_54:
   579  00FEFD  6D                 	db	109	;'m'
   580  00FEFE  6F                 	db	111	;'o'
   581  00FEFF  72                 	db	114	;'r'
   582  00FF00  65                 	db	101	;'e'
   583  00FF01  20                 	db	32
   584  00FF02  77                 	db	119	;'w'
   585  00FF03  61                 	db	97	;'a'
   586  00FF04  69                 	db	105	;'i'
   587  00FF05  74                 	db	116	;'t'
   588  00FF06  69                 	db	105	;'i'
   589  00FF07  6E                 	db	110	;'n'
   590  00FF08  67                 	db	103	;'g'
   591  00FF09  00                 	db	0
   592  00FF0A                     STR_2:
   593  00FF0A  53                 	db	83	;'S'
   594  00FF0B  74                 	db	116	;'t'
   595  00FF0C  65                 	db	101	;'e'
   596  00FF0D  70                 	db	112	;'p'
   597  00FF0E  70                 	db	112	;'p'
   598  00FF0F  65                 	db	101	;'e'
   599  00FF10  72                 	db	114	;'r'
   600  00FF11  20                 	db	32
   601  00FF12  64                 	db	100	;'d'
   602  00FF13  6F                 	db	111	;'o'
   603  00FF14  6E                 	db	110	;'n'
   604  00FF15  65                 	db	101	;'e'
   605  00FF16  00                 	db	0
   606  00FF17                     STR_48:
   607  00FF17  44                 	db	68	;'D'
   608  00FF18  41                 	db	65	;'A'
   609  00FF19  54                 	db	84	;'T'
   610  00FF1A  45                 	db	69	;'E'
   611  00FF1B  20                 	db	32
   612  00FF1C  26                 	db	38
   613  00FF1D  20                 	db	32
   614  00FF1E  54                 	db	84	;'T'
   615  00FF1F  49                 	db	73	;'I'
   616  00FF20  4D                 	db	77	;'M'
   617  00FF21  45                 	db	69	;'E'
   618  00FF22  00                 	db	0
   619  00FF23                     STR_21:
   620  00FF23  73                 	db	115	;'s'
   621  00FF24  74                 	db	116	;'t'
   622  00FF25  65                 	db	101	;'e'
   623  00FF26  70                 	db	112	;'p'
   624  00FF27  73                 	db	115	;'s'
   625  00FF28  61                 	db	97	;'a'
   626  00FF29  64                 	db	100	;'d'
   627  00FF2A  6A                 	db	106	;'j'
   628  00FF2B  20                 	db	32
   629  00FF2C  25                 	db	37
   630  00FF2D  64                 	db	100	;'d'
   631  00FF2E  00                 	db	0
   632  00FF2F                     STR_60:
   633  00FF2F  61                 	db	97	;'a'
   634  00FF30  76                 	db	118	;'v'
   635  00FF31  67                 	db	103	;'g'
   636  00FF32  20                 	db	32
   637  00FF33  64                 	db	100	;'d'
   638  00FF34  69                 	db	105	;'i'
   639  00FF35  73                 	db	115	;'s'
   640  00FF36  74                 	db	116	;'t'
   641  00FF37  20                 	db	32
   642  00FF38  25                 	db	37
   643  00FF39  64                 	db	100	;'d'
   644  00FF3A  00                 	db	0
   645  00FF3B                     STR_42:
   646  00FF3B  44                 	db	68	;'D'
   647  00FF3C  69                 	db	105	;'i'
   648  00FF3D  73                 	db	115	;'s'
   649  00FF3E  74                 	db	116	;'t'
   650  00FF3F  54                 	db	84	;'T'
   651  00FF40  6F                 	db	111	;'o'
   652  00FF41  43                 	db	67	;'C'
   653  00FF42  4C                 	db	76	;'L'
   654  00FF43  3A                 	db	58	;':'
   655  00FF44  25                 	db	37
   656  00FF45  64                 	db	100	;'d'
   657  00FF46  00                 	db	0
   658  00FF47                     STR_24:
   659  00FF47  32                 	db	50	;'2'
   660  00FF48  20                 	db	32
   661  00FF49  2D                 	db	45
   662  00FF4A  20                 	db	32
   663  00FF4B  53                 	db	83	;'S'
   664  00FF4C  75                 	db	117	;'u'
   665  00FF4D  6D                 	db	109	;'m'
   666  00FF4E  6D                 	db	109	;'m'
   667  00FF4F  61                 	db	97	;'a'
   668  00FF50  72                 	db	114	;'r'
   669  00FF51  79                 	db	121	;'y'
   670  00FF52  00                 	db	0
   671  00FF53                     STR_61:
   672  00FF53  70                 	db	112	;'p'
   673  00FF54  6F                 	db	111	;'o'
   674  00FF55  6C                 	db	108	;'l'
   675  00FF56  65                 	db	101	;'e'
   676  00FF57  73                 	db	115	;'s'
   677  00FF58  20                 	db	32
   678  00FF59  64                 	db	100	;'d'
   679  00FF5A  20                 	db	32
   680  00FF5B  25                 	db	37
   681  00FF5C  64                 	db	100	;'d'
   682  00FF5D  00                 	db	0
   683  00FF5E                     STR_20:
   684  00FF5E  6D                 	db	109	;'m'
   685  00FF5F  69                 	db	105	;'i'
   686  00FF60  6E                 	db	110	;'n'
   687  00FF61  69                 	db	105	;'i'
   688  00FF62  6D                 	db	109	;'m'
   689  00FF63  75                 	db	117	;'u'
   690  00FF64  6D                 	db	109	;'m'
   691  00FF65  20                 	db	32
   692  00FF66  25                 	db	37
   693  00FF67  64                 	db	100	;'d'
   694  00FF68  00                 	db	0
   695  00FF69                     STR_62:
   696  00FF69  70                 	db	112	;'p'
   697  00FF6A  6F                 	db	111	;'o'
   698  00FF6B  6C                 	db	108	;'l'
   699  00FF6C  65                 	db	101	;'e'
   700  00FF6D  73                 	db	115	;'s'
   701  00FF6E  20                 	db	32
   702  00FF6F  64                 	db	100	;'d'
   703  00FF70  6F                 	db	111	;'o'
   704  00FF71  6E                 	db	110	;'n'
   705  00FF72  65                 	db	101	;'e'
   706  00FF73  00                 	db	0
   707  00FF74                     STR_3:
   708  00FF74  53                 	db	83	;'S'
   709  00FF75  65                 	db	101	;'e'
   710  00FF76  72                 	db	114	;'r'
   711  00FF77  76                 	db	118	;'v'
   712  00FF78  6F                 	db	111	;'o'
   713  00FF79  20                 	db	32
   714  00FF7A  64                 	db	100	;'d'
   715  00FF7B  6F                 	db	111	;'o'
   716  00FF7C  6E                 	db	110	;'n'
   717  00FF7D  65                 	db	101	;'e'
   718  00FF7E  00                 	db	0
   719  00FF7F                     STR_11:
   720  00FF7F  44                 	db	68	;'D'
   721  00FF80  69                 	db	105	;'i'
   722  00FF81  73                 	db	115	;'s'
   723  00FF82  74                 	db	116	;'t'
   724  00FF83  31                 	db	49	;'1'
   725  00FF84  20                 	db	32
   726  00FF85  3D                 	db	61	;'='
   727  00FF86  20                 	db	32
   728  00FF87  58                 	db	88	;'X'
   729  00FF88  00                 	db	0
   730  00FF89                     STR_13:
   731  00FF89  44                 	db	68	;'D'
   732  00FF8A  69                 	db	105	;'i'
   733  00FF8B  73                 	db	115	;'s'
   734  00FF8C  74                 	db	116	;'t'
   735  00FF8D  32                 	db	50	;'2'
   736  00FF8E  20                 	db	32
   737  00FF8F  3D                 	db	61	;'='
   738  00FF90  20                 	db	32
   739  00FF91  58                 	db	88	;'X'
   740  00FF92  00                 	db	0
   741  00FF93                     STR_15:
   742  00FF93  44                 	db	68	;'D'
   743  00FF94  69                 	db	105	;'i'
   744  00FF95  73                 	db	115	;'s'
   745  00FF96  74                 	db	116	;'t'
   746  00FF97  33                 	db	51	;'3'
   747  00FF98  20                 	db	32
   748  00FF99  3D                 	db	61	;'='
   749  00FF9A  20                 	db	32
   750  00FF9B  58                 	db	88	;'X'
   751  00FF9C  00                 	db	0
   752  00FF9D                     STR_17:
   753  00FF9D  44                 	db	68	;'D'
   754  00FF9E  69                 	db	105	;'i'
   755  00FF9F  73                 	db	115	;'s'
   756  00FFA0  74                 	db	116	;'t'
   757  00FFA1  34                 	db	52	;'4'
   758  00FFA2  20                 	db	32
   759  00FFA3  3D                 	db	61	;'='
   760  00FFA4  20                 	db	32
   761  00FFA5  58                 	db	88	;'X'
   762  00FFA6  00                 	db	0
   763  00FFA7                     STR_56:
   764  00FFA7  64                 	db	100	;'d'
   765  00FFA8  75                 	db	117	;'u'
   766  00FFA9  6E                 	db	110	;'n'
   767  00FFAA  20                 	db	32
   768  00FFAB  62                 	db	98	;'b'
   769  00FFAC  72                 	db	114	;'r'
   770  00FFAD  65                 	db	101	;'e'
   771  00FFAE  61                 	db	97	;'a'
   772  00FFAF  6B                 	db	107	;'k'
   773  00FFB0  00                 	db	0
   774  00FFB1                     STR_63:
   775  00FFB1  62                 	db	98	;'b'
   776  00FFB2  61                 	db	97	;'a'
   777  00FFB3  63                 	db	99	;'c'
   778  00FFB4  6B                 	db	107	;'k'
   779  00FFB5  77                 	db	119	;'w'
   780  00FFB6  61                 	db	97	;'a'
   781  00FFB7  72                 	db	114	;'r'
   782  00FFB8  64                 	db	100	;'d'
   783  00FFB9  73                 	db	115	;'s'
   784  00FFBA  00                 	db	0
   785  00FFBB                     STR_55:
   786  00FFBB  64                 	db	100	;'d'
   787  00FFBC  6F                 	db	111	;'o'
   788  00FFBD  6E                 	db	110	;'n'
   789  00FFBE  65                 	db	101	;'e'
   790  00FFBF  20                 	db	32
   791  00FFC0  77                 	db	119	;'w'
   792  00FFC1  61                 	db	97	;'a'
   793  00FFC2  69                 	db	105	;'i'
   794  00FFC3  74                 	db	116	;'t'
   795  00FFC4  00                 	db	0
   796  00FFC5                     STR_23:
   797  00FFC5  31                 	db	49	;'1'
   798  00FFC6  20                 	db	32
   799  00FFC7  2D                 	db	45
   800  00FFC8  20                 	db	32
   801  00FFC9  53                 	db	83	;'S'
   802  00FFCA  74                 	db	116	;'t'
   803  00FFCB  61                 	db	97	;'a'
   804  00FFCC  72                 	db	114	;'r'
   805  00FFCD  74                 	db	116	;'t'
   806  00FFCE  00                 	db	0
   807  00FFCF                     STR_5:
   808  00FFCF  73                 	db	115	;'s'
   809  00FFD0  74                 	db	116	;'t'
   810  00FFD1  65                 	db	101	;'e'
   811  00FFD2  70                 	db	112	;'p'
   812  00FFD3  70                 	db	112	;'p'
   813  00FFD4  70                 	db	112	;'p'
   814  00FFD5  20                 	db	32
   815  00FFD6  25                 	db	37
   816  00FFD7  64                 	db	100	;'d'
   817  00FFD8  00                 	db	0
   818  00FFD9                     STR_1:
   819  00FFD9  63                 	db	99	;'c'
   820  00FFDA  6E                 	db	110	;'n'
   821  00FFDB  74                 	db	116	;'t'
   822  00FFDC  20                 	db	32
   823  00FFDD  69                 	db	105	;'i'
   824  00FFDE  73                 	db	115	;'s'
   825  00FFDF  20                 	db	32
   826  00FFE0  25                 	db	37
   827  00FFE1  64                 	db	100	;'d'
   828  00FFE2  00                 	db	0
   829  00FFE3                     STR_31:
   830  00FFE3  4F                 	db	79	;'O'
   831  00FFE4  70                 	db	112	;'p'
   832  00FFE5  20                 	db	32
   833  00FFE6  54                 	db	84	;'T'
   834  00FFE7  69                 	db	105	;'i'
   835  00FFE8  6D                 	db	109	;'m'
   836  00FFE9  65                 	db	101	;'e'
   837  00FFEA  3A                 	db	58	;':'
   838  00FFEB  00                 	db	0
   839  00FFEC                     STR_18:
   840  00FFEC  6F                 	db	111	;'o'
   841  00FFED  72                 	db	114	;'r'
   842  00FFEE  20                 	db	32
   843  00FFEF  68                 	db	104	;'h'
   844  00FFF0  65                 	db	101	;'e'
   845  00FFF1  72                 	db	114	;'r'
   846  00FFF2  65                 	db	101	;'e'
   847  00FFF3  00                 	db	0
   848  00FFF4                     STR_6:
   849  00FFF4  73                 	db	115	;'s'
   850  00FFF5  74                 	db	116	;'t'
   851  00FFF6  65                 	db	101	;'e'
   852  00FFF7  70                 	db	112	;'p'
   853  00FFF8  31                 	db	49	;'1'
   854  00FFF9  00                 	db	0
   855  00FFFA                     STR_9:
   856  00FFFA  77                 	db	119	;'w'
   857  00FFFB  68                 	db	104	;'h'
   858  00FFFC  61                 	db	97	;'a'
   859  00FFFD  74                 	db	116	;'t'
   860  00FFFE  00                 	db	0
   861  0000                     
   862                           ; #config settings
   863  00FFFF  00                 	db	0	; dummy byte at the end
   864  0000                     
   865                           	psect	cinit
   866  003A3A                     __pcinit:
   867                           	opt callstack 0
   868  003A3A                     start_initialization:
   869                           	opt callstack 0
   870  003A3A                     __initialization:
   871                           	opt callstack 0
   872                           
   873                           ; Initialize objects allocated to COMRAM (5 bytes)
   874                           ; load TBLPTR registers with __pidataCOMRAM
   875  003A3A  0EEC               	movlw	low __pidataCOMRAM
   876  003A3C  6EF6               	movwf	tblptrl,c
   877  003A3E  0E3E               	movlw	high __pidataCOMRAM
   878  003A40  6EF7               	movwf	tblptrh,c
   879  003A42  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   880  003A44  6EF8               	movwf	tblptru,c
   881  003A46  EE00  F069         	lfsr	0,__pdataCOMRAM
   882  003A4A  EE10 F005          	lfsr	1,5
   883  003A4E                     copy_data0:
   884  003A4E  0009               	tblrd		*+
   885  003A50  CFF5 FFEE          	movff	tablat,postinc0
   886  003A54  50E5               	movf	postdec1,w,c
   887  003A56  50E1               	movf	fsr1l,w,c
   888  003A58  E1FA               	bnz	copy_data0
   889                           
   890                           ; Clear objects allocated to BANK2 (160 bytes)
   891  003A5A  EE02  F000         	lfsr	0,__pbssBANK2
   892  003A5E  0EA0               	movlw	160
   893  003A60                     clear_0:
   894  003A60  6AEE               	clrf	postinc0,c
   895  003A62  06E8               	decf	wreg,f,c
   896  003A64  E1FD               	bnz	clear_0
   897                           
   898                           ; Clear objects allocated to BANK1 (28 bytes)
   899  003A66  EE01  F0CA         	lfsr	0,__pbssBANK1
   900  003A6A  0E1C               	movlw	28
   901  003A6C                     clear_1:
   902  003A6C  6AEE               	clrf	postinc0,c
   903  003A6E  06E8               	decf	wreg,f,c
   904  003A70  E1FD               	bnz	clear_1
   905                           
   906                           ; Clear objects allocated to BANK0 (1 bytes)
   907  003A72  0100               	movlb	0
   908  003A74  6BFF               	clrf	__pbssBANK0& (0+255),b
   909                           
   910                           ; Clear objects allocated to COMRAM (49 bytes)
   911  003A76  EE00  F038         	lfsr	0,__pbssCOMRAM
   912  003A7A  0E31               	movlw	49
   913  003A7C                     clear_2:
   914  003A7C  6AEE               	clrf	postinc0,c
   915  003A7E  06E8               	decf	wreg,f,c
   916  003A80  E1FD               	bnz	clear_2
   917  003A82                     end_of_initialization:
   918                           	opt callstack 0
   919  003A82                     __end_of__initialization:
   920                           	opt callstack 0
   921  003A82  906E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   922  003A84  926E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   923  003A86  0E00               	movlw	low (__Lmediumconst shr (0+16))
   924  003A88  6EF8               	movwf	tblptru,c
   925  003A8A  0100               	movlb	0
   926  003A8C  EF13  F004         	goto	_main	;jump to C main() function
   927                           
   928                           	psect	bssCOMRAM
   929  000038                     __pbssCOMRAM:
   930                           	opt callstack 0
   931  000038                     _sum:
   932                           	opt callstack 0
   933  000038                     	ds	8
   934  000040                     _sumf:
   935                           	opt callstack 0
   936  000040                     	ds	4
   937  000044                     _avg_dist:
   938                           	opt callstack 0
   939  000044                     	ds	4
   940  000048                     _nout:
   941                           	opt callstack 0
   942  000048                     	ds	2
   943  00004A                     _width:
   944                           	opt callstack 0
   945  00004A                     	ds	2
   946  00004C                     _prec:
   947                           	opt callstack 0
   948  00004C                     	ds	2
   949  00004E                     _flags:
   950                           	opt callstack 0
   951  00004E                     	ds	2
   952  000050                     _meas:
   953                           	opt callstack 0
   954  000050                     	ds	2
   955  000052                     _poles_detected:
   956                           	opt callstack 0
   957  000052                     	ds	2
   958  000054                     _tires_deployed:
   959                           	opt callstack 0
   960  000054                     	ds	2
   961  000056                     _tick:
   962                           	opt callstack 0
   963  000056                     	ds	2
   964  000058                     _sens:
   965                           	opt callstack 0
   966  000058                     	ds	2
   967  00005A                     _b:
   968                           	opt callstack 0
   969  00005A                     	ds	2
   970  00005C                     _timer_count:
   971                           	opt callstack 0
   972  00005C                     	ds	2
   973  00005E                     _data:
   974                           	opt callstack 0
   975  00005E                     	ds	1
   976  00005F                     _keypress:
   977                           	opt callstack 0
   978  00005F                     	ds	1
   979  000060                     _counter:
   980                           	opt callstack 0
   981  000060                     	ds	1
   982  000061                     _a:
   983                           	opt callstack 0
   984  000061                     	ds	8
   985                           
   986                           	psect	dataCOMRAM
   987  000069                     __pdataCOMRAM:
   988                           	opt callstack 0
   989  000069                     _dists:
   990                           	opt callstack 0
   991  000069                     	ds	4
   992  00006D                     _send:
   993                           	opt callstack 0
   994  00006D                     	ds	1
   995                           
   996                           	psect	bssBANK0
   997  0000FF                     __pbssBANK0:
   998                           	opt callstack 0
   999  0000FF                     _temp:
  1000                           	opt callstack 0
  1001  0000FF                     	ds	1
  1002                           
  1003                           	psect	bssBANK1
  1004  0001CA                     __pbssBANK1:
  1005                           	opt callstack 0
  1006  0001CA                     _prev_dist_final:
  1007                           	opt callstack 0
  1008  0001CA                     	ds	8
  1009  0001D2                     _time:
  1010                           	opt callstack 0
  1011  0001D2                     	ds	7
  1012  0001D9                     _pressed:
  1013                           	opt callstack 0
  1014  0001D9                     	ds	2
  1015  0001DB                     _i:
  1016                           	opt callstack 0
  1017  0001DB                     	ds	2
  1018  0001DD                     _disp:
  1019                           	opt callstack 0
  1020  0001DD                     	ds	2
  1021  0001DF                     _state:
  1022                           	opt callstack 0
  1023  0001DF                     	ds	2
  1024  0001E1                     _temp_int:
  1025                           	opt callstack 0
  1026  0001E1                     	ds	2
  1027  0001E3                     _cnt:
  1028                           	opt callstack 0
  1029  0001E3                     	ds	2
  1030  0001E5                     _key_was_pressed:
  1031                           	opt callstack 0
  1032  0001E5                     	ds	1
  1033                           
  1034                           	psect	bssBANK2
  1035  000200                     __pbssBANK2:
  1036                           	opt callstack 0
  1037  000200                     _Pole:
  1038                           	opt callstack 0
  1039  000200                     	ds	80
  1040  000250                     _dist_final:
  1041                           	opt callstack 0
  1042  000250                     	ds	48
  1043  000280                     _dbuf:
  1044                           	opt callstack 0
  1045  000280                     	ds	32
  1046                           
  1047                           	psect	cstackBANK1
  1048  000100                     __pcstackBANK1:
  1049                           	opt callstack 0
  1050  000100                     ??_ultrasonic_main:
  1051  000100                     ??_number_deploy:
  1052  000100                     ??_UI_main:
  1053  000100                     stepper@stack:
  1054                           	opt callstack 0
  1055  000100                     stepper2@steps2_adj:
  1056                           	opt callstack 0
  1057  000100                     stepper2_back@steps2_adj:
  1058                           	opt callstack 0
  1059                           
  1060                           ; 2 bytes @ 0x0
  1061  000100                     	ds	2
  1062  000102                     ??_stepper2:
  1063  000102                     ??_stepper2_back:
  1064  000102                     stepper@t_dep:
  1065                           	opt callstack 0
  1066  000102                     number_deploy@tires_t:
  1067                           	opt callstack 0
  1068                           
  1069                           ; 2 bytes @ 0x2
  1070  000102                     	ds	1
  1071  000103                     stepper2_back@direction:
  1072                           	opt callstack 0
  1073                           
  1074                           ; 1 bytes @ 0x3
  1075  000103                     	ds	1
  1076  000104                     ??_stepper:
  1077  000104                     stepper2_back@count_stepper:
  1078                           	opt callstack 0
  1079  000104                     ultrasonic_main@sensed:
  1080                           	opt callstack 0
  1081  000104                     number_deploy@tires_detected:
  1082                           	opt callstack 0
  1083  000104                     UI_main@Pole:
  1084                           	opt callstack 0
  1085                           
  1086                           ; 80 bytes @ 0x4
  1087  000104                     	ds	2
  1088  000106                     stepper2_back@i:
  1089                           	opt callstack 0
  1090  000106                     ultrasonic_main@step2_offset:
  1091                           	opt callstack 0
  1092  000106                     number_deploy@t_count:
  1093                           	opt callstack 0
  1094                           
  1095                           ; 2 bytes @ 0x6
  1096  000106                     	ds	1
  1097  000107                     stepper2@i:
  1098                           	opt callstack 0
  1099                           
  1100                           ; 2 bytes @ 0x7
  1101  000107                     	ds	1
  1102  000108                     stepper@count_stepper:
  1103                           	opt callstack 0
  1104  000108                     ultrasonic_main@steps2_adj:
  1105                           	opt callstack 0
  1106                           
  1107                           ; 2 bytes @ 0x8
  1108  000108                     	ds	1
  1109  000109                     stepper2@i_489:
  1110                           	opt callstack 0
  1111                           
  1112                           ; 2 bytes @ 0x9
  1113  000109                     	ds	1
  1114  00010A                     stepper@i:
  1115                           	opt callstack 0
  1116  00010A                     ultrasonic_main@min_us_dist_967:
  1117                           	opt callstack 0
  1118                           
  1119                           ; 2 bytes @ 0xA
  1120  00010A                     	ds	1
  1121  00010B                     stepper2@count_stepper:
  1122                           	opt callstack 0
  1123                           
  1124                           ; 2 bytes @ 0xB
  1125  00010B                     	ds	1
  1126  00010C                     stepper@i_479:
  1127                           	opt callstack 0
  1128                           
  1129                           ; 2 bytes @ 0xC
  1130  00010C                     	ds	1
  1131  00010D                     stepper2@direction:
  1132                           	opt callstack 0
  1133                           
  1134                           ; 1 bytes @ 0xD
  1135  00010D                     	ds	1
  1136  00010E                     stepper@i_480:
  1137                           	opt callstack 0
  1138                           
  1139                           ; 2 bytes @ 0xE
  1140  00010E                     	ds	2
  1141  000110                     stepper@i_481:
  1142                           	opt callstack 0
  1143                           
  1144                           ; 2 bytes @ 0x10
  1145  000110                     	ds	2
  1146  000112                     actuators_main@stack:
  1147                           	opt callstack 0
  1148                           
  1149                           ; 2 bytes @ 0x12
  1150  000112                     	ds	2
  1151  000114                     actuators_main@steps2_adj:
  1152                           	opt callstack 0
  1153                           
  1154                           ; 2 bytes @ 0x14
  1155  000114                     	ds	2
  1156  000116                     actuators_main@t_dep:
  1157                           	opt callstack 0
  1158                           
  1159                           ; 2 bytes @ 0x16
  1160  000116                     	ds	2
  1161  000118                     ??_actuators_main:
  1162                           
  1163                           ; 1 bytes @ 0x18
  1164  000118                     	ds	2
  1165  00011A                     actuators_main@act_cnt:
  1166                           	opt callstack 0
  1167                           
  1168                           ; 2 bytes @ 0x1A
  1169  00011A                     	ds	58
  1170  000154                     UI_main@keypress:
  1171                           	opt callstack 0
  1172                           
  1173                           ; 1 bytes @ 0x54
  1174  000154                     	ds	1
  1175  000155                     UI_main@tick:
  1176                           	opt callstack 0
  1177                           
  1178                           ; 4 bytes @ 0x55
  1179  000155                     	ds	4
  1180  000159                     UI_main@i:
  1181                           	opt callstack 0
  1182                           
  1183                           ; 1 bytes @ 0x59
  1184  000159                     	ds	1
  1185  00015A                     ??_main:
  1186                           
  1187                           ; 1 bytes @ 0x5A
  1188  00015A                     	ds	8
  1189  000162                     main@Pole:
  1190                           	opt callstack 0
  1191                           
  1192                           ; 80 bytes @ 0x62
  1193  000162                     	ds	80
  1194  0001B2                     main@i:
  1195                           	opt callstack 0
  1196                           
  1197                           ; 2 bytes @ 0xB2
  1198  0001B2                     	ds	2
  1199  0001B4                     main@i_1075:
  1200                           	opt callstack 0
  1201                           
  1202                           ; 2 bytes @ 0xB4
  1203  0001B4                     	ds	2
  1204  0001B6                     main@act_done:
  1205                           	opt callstack 0
  1206                           
  1207                           ; 1 bytes @ 0xB6
  1208  0001B6                     	ds	1
  1209  0001B7                     main@arduino_stopped:
  1210                           	opt callstack 0
  1211                           
  1212                           ; 1 bytes @ 0xB7
  1213  0001B7                     	ds	1
  1214  0001B8                     main@stack:
  1215                           	opt callstack 0
  1216                           
  1217                           ; 2 bytes @ 0xB8
  1218  0001B8                     	ds	2
  1219  0001BA                     main@steps2_adj:
  1220                           	opt callstack 0
  1221                           
  1222                           ; 2 bytes @ 0xBA
  1223  0001BA                     	ds	2
  1224  0001BC                     main@k:
  1225                           	opt callstack 0
  1226                           
  1227                           ; 2 bytes @ 0xBC
  1228  0001BC                     	ds	2
  1229  0001BE                     main@t_count:
  1230                           	opt callstack 0
  1231                           
  1232                           ; 2 bytes @ 0xBE
  1233  0001BE                     	ds	2
  1234  0001C0                     main@t_dep:
  1235                           	opt callstack 0
  1236                           
  1237                           ; 2 bytes @ 0xC0
  1238  0001C0                     	ds	2
  1239  0001C2                     main@i_1081:
  1240                           	opt callstack 0
  1241                           
  1242                           ; 2 bytes @ 0xC2
  1243  0001C2                     	ds	2
  1244  0001C4                     main@poles_detected:
  1245                           	opt callstack 0
  1246                           
  1247                           ; 2 bytes @ 0xC4
  1248  0001C4                     	ds	2
  1249  0001C6                     main@prev_avg_dist:
  1250                           	opt callstack 0
  1251                           
  1252                           ; 4 bytes @ 0xC6
  1253  0001C6                     	ds	4
  1254                           
  1255                           	psect	cstackBANK0
  1256  000080                     __pcstackBANK0:
  1257                           	opt callstack 0
  1258  000080                     ??_I2C_Master_Wait:
  1259  000080                     ??_trig:
  1260  000080                     ?_strlen:
  1261                           	opt callstack 0
  1262  000080                     ?_isupper:
  1263                           	opt callstack 0
  1264  000080                     ?_isalpha:
  1265                           	opt callstack 0
  1266  000080                     ?_isdigit:
  1267                           	opt callstack 0
  1268  000080                     ?_isspace:
  1269                           	opt callstack 0
  1270  000080                     ?_islower:
  1271                           	opt callstack 0
  1272  000080                     ?_min:
  1273                           	opt callstack 0
  1274  000080                     ?___wmul:
  1275                           	opt callstack 0
  1276  000080                     ?___awdiv:
  1277                           	opt callstack 0
  1278  000080                     ?___lldiv:
  1279                           	opt callstack 0
  1280  000080                     ?___llmod:
  1281                           	opt callstack 0
  1282  000080                     ?___aodiv:
  1283                           	opt callstack 0
  1284  000080                     ?___aomod:
  1285                           	opt callstack 0
  1286  000080                     pulse_e@interruptState:
  1287                           	opt callstack 0
  1288  000080                     servoRotate0@servo:
  1289                           	opt callstack 0
  1290  000080                     servoRotate180@servo:
  1291                           	opt callstack 0
  1292  000080                     min@array:
  1293                           	opt callstack 0
  1294  000080                     ___wmul@multiplier:
  1295                           	opt callstack 0
  1296  000080                     ___awdiv@dividend:
  1297                           	opt callstack 0
  1298  000080                     isalpha@c:
  1299                           	opt callstack 0
  1300  000080                     isdigit@c:
  1301                           	opt callstack 0
  1302  000080                     isspace@c:
  1303                           	opt callstack 0
  1304  000080                     isupper@c:
  1305                           	opt callstack 0
  1306  000080                     strlen@s:
  1307                           	opt callstack 0
  1308  000080                     islower@c:
  1309                           	opt callstack 0
  1310  000080                     ___lldiv@dividend:
  1311                           	opt callstack 0
  1312  000080                     ___llmod@dividend:
  1313                           	opt callstack 0
  1314  000080                     ___aodiv@dividend:
  1315                           	opt callstack 0
  1316  000080                     ___aomod@dividend:
  1317                           	opt callstack 0
  1318                           
  1319                           ; 8 bytes @ 0x0
  1320  000080                     	ds	1
  1321  000081                     I2C_Master_Read@ackBit:
  1322                           	opt callstack 0
  1323  000081                     send_nibble@data:
  1324                           	opt callstack 0
  1325  000081                     I2C_Master_Write@byteToWrite:
  1326                           	opt callstack 0
  1327                           
  1328                           ; 2 bytes @ 0x1
  1329  000081                     	ds	1
  1330  000082                     ??_isupper:
  1331  000082                     ??_isalpha:
  1332  000082                     ??_isdigit:
  1333  000082                     ??_isspace:
  1334  000082                     ??_islower:
  1335  000082                     ??_servoRotate0:
  1336  000082                     ??_servoRotate180:
  1337  000082                     I2C_Master_Read@receivedByte:
  1338                           	opt callstack 0
  1339  000082                     send_byte@data:
  1340                           	opt callstack 0
  1341  000082                     min@size:
  1342                           	opt callstack 0
  1343  000082                     ___wmul@multiplicand:
  1344                           	opt callstack 0
  1345  000082                     ___awdiv@divisor:
  1346                           	opt callstack 0
  1347  000082                     strlen@a:
  1348                           	opt callstack 0
  1349                           
  1350                           ; 2 bytes @ 0x2
  1351  000082                     	ds	1
  1352  000083                     lcdInst@data:
  1353                           	opt callstack 0
  1354  000083                     putch@data:
  1355                           	opt callstack 0
  1356  000083                     servoRotate0@i:
  1357                           	opt callstack 0
  1358  000083                     servoRotate180@i:
  1359                           	opt callstack 0
  1360                           
  1361                           ; 2 bytes @ 0x3
  1362  000083                     	ds	1
  1363  000084                     ??_initLCD:
  1364  000084                     ??_min:
  1365  000084                     ___awdiv@counter:
  1366                           	opt callstack 0
  1367  000084                     ___wmul@product:
  1368                           	opt callstack 0
  1369  000084                     fputc@c:
  1370                           	opt callstack 0
  1371  000084                     ___lldiv@divisor:
  1372                           	opt callstack 0
  1373  000084                     ___llmod@divisor:
  1374                           	opt callstack 0
  1375                           
  1376                           ; 4 bytes @ 0x4
  1377  000084                     	ds	1
  1378  000085                     ??_servo:
  1379  000085                     ___awdiv@sign:
  1380                           	opt callstack 0
  1381                           
  1382                           ; 1 bytes @ 0x5
  1383  000085                     	ds	1
  1384  000086                     ?_toupper:
  1385                           	opt callstack 0
  1386  000086                     _isspace$1737:
  1387                           	opt callstack 0
  1388  000086                     ___awdiv@quotient:
  1389                           	opt callstack 0
  1390  000086                     fputc@fp:
  1391                           	opt callstack 0
  1392  000086                     toupper@c:
  1393                           	opt callstack 0
  1394                           
  1395                           ; 2 bytes @ 0x6
  1396  000086                     	ds	1
  1397  000087                     ?_atoi:
  1398                           	opt callstack 0
  1399  000087                     min@minimum:
  1400                           	opt callstack 0
  1401  000087                     atoi@s:
  1402                           	opt callstack 0
  1403                           
  1404                           ; 2 bytes @ 0x7
  1405  000087                     	ds	1
  1406  000088                     ??_fputc:
  1407  000088                     ??_toupper:
  1408  000088                     ___llmod@counter:
  1409                           	opt callstack 0
  1410  000088                     ___lldiv@quotient:
  1411                           	opt callstack 0
  1412  000088                     ___aodiv@divisor:
  1413                           	opt callstack 0
  1414  000088                     ___aomod@divisor:
  1415                           	opt callstack 0
  1416                           
  1417                           ; 8 bytes @ 0x8
  1418  000088                     	ds	1
  1419  000089                     ??_atoi:
  1420  000089                     min@i:
  1421                           	opt callstack 0
  1422                           
  1423                           ; 2 bytes @ 0x9
  1424  000089                     	ds	3
  1425  00008C                     ___lldiv@counter:
  1426                           	opt callstack 0
  1427  00008C                     _toupper$1802:
  1428                           	opt callstack 0
  1429                           
  1430                           ; 2 bytes @ 0xC
  1431  00008C                     	ds	1
  1432  00008D                     atoi@neg:
  1433                           	opt callstack 0
  1434  00008D                     fputs@s:
  1435                           	opt callstack 0
  1436  00008D                     I2C_Master_Init@clockFreq:
  1437                           	opt callstack 0
  1438                           
  1439                           ; 4 bytes @ 0xD
  1440  00008D                     	ds	2
  1441  00008F                     _atoi$1710:
  1442                           	opt callstack 0
  1443  00008F                     fputs@fp:
  1444                           	opt callstack 0
  1445                           
  1446                           ; 2 bytes @ 0xF
  1447  00008F                     	ds	1
  1448  000090                     ___aodiv@counter:
  1449                           	opt callstack 0
  1450  000090                     ___aomod@counter:
  1451                           	opt callstack 0
  1452                           
  1453                           ; 1 bytes @ 0x10
  1454  000090                     	ds	1
  1455  000091                     ??_I2C_Master_Init:
  1456  000091                     ___aodiv@sign:
  1457                           	opt callstack 0
  1458  000091                     ___aomod@sign:
  1459                           	opt callstack 0
  1460  000091                     fputs@c:
  1461                           	opt callstack 0
  1462  000091                     _atoi$1712:
  1463                           	opt callstack 0
  1464                           
  1465                           ; 2 bytes @ 0x11
  1466  000091                     	ds	1
  1467  000092                     ?_abs:
  1468                           	opt callstack 0
  1469  000092                     abs@a:
  1470                           	opt callstack 0
  1471  000092                     fputs@i:
  1472                           	opt callstack 0
  1473  000092                     ___aodiv@quotient:
  1474                           	opt callstack 0
  1475                           
  1476                           ; 8 bytes @ 0x12
  1477  000092                     	ds	1
  1478  000093                     _atoi$1711:
  1479                           	opt callstack 0
  1480                           
  1481                           ; 1 bytes @ 0x13
  1482  000093                     	ds	1
  1483  000094                     ??_abs:
  1484  000094                     ?_pad:
  1485                           	opt callstack 0
  1486  000094                     pad@fp:
  1487                           	opt callstack 0
  1488  000094                     atoi@n:
  1489                           	opt callstack 0
  1490                           
  1491                           ; 2 bytes @ 0x14
  1492  000094                     	ds	1
  1493  000095                     
  1494                           ; 1 bytes @ 0x15
  1495  000095                     	ds	1
  1496  000096                     pad@buf:
  1497                           	opt callstack 0
  1498                           
  1499                           ; 2 bytes @ 0x16
  1500  000096                     	ds	2
  1501  000098                     pad@p:
  1502                           	opt callstack 0
  1503                           
  1504                           ; 2 bytes @ 0x18
  1505  000098                     	ds	2
  1506  00009A                     ??_pad:
  1507                           
  1508                           ; 1 bytes @ 0x1A
  1509  00009A                     	ds	1
  1510  00009B                     pad@i:
  1511                           	opt callstack 0
  1512                           
  1513                           ; 2 bytes @ 0x1B
  1514  00009B                     	ds	2
  1515  00009D                     pad@w:
  1516                           	opt callstack 0
  1517                           
  1518                           ; 2 bytes @ 0x1D
  1519  00009D                     	ds	2
  1520  00009F                     ?_dtoa:
  1521                           	opt callstack 0
  1522  00009F                     ?_xtoa:
  1523                           	opt callstack 0
  1524  00009F                     dtoa@fp:
  1525                           	opt callstack 0
  1526  00009F                     xtoa@fp:
  1527                           	opt callstack 0
  1528                           
  1529                           ; 2 bytes @ 0x1F
  1530  00009F                     	ds	2
  1531  0000A1                     dtoa@d:
  1532                           	opt callstack 0
  1533  0000A1                     xtoa@d:
  1534                           	opt callstack 0
  1535                           
  1536                           ; 8 bytes @ 0x21
  1537  0000A1                     	ds	8
  1538  0000A9                     ??_dtoa:
  1539  0000A9                     xtoa@x:
  1540                           	opt callstack 0
  1541                           
  1542                           ; 1 bytes @ 0x29
  1543  0000A9                     	ds	1
  1544  0000AA                     ??_xtoa:
  1545                           
  1546                           ; 1 bytes @ 0x2A
  1547  0000AA                     	ds	7
  1548  0000B1                     _dtoa$1226:
  1549                           	opt callstack 0
  1550                           
  1551                           ; 2 bytes @ 0x31
  1552  0000B1                     	ds	1
  1553  0000B2                     _xtoa$1237:
  1554                           	opt callstack 0
  1555                           
  1556                           ; 2 bytes @ 0x32
  1557  0000B2                     	ds	1
  1558  0000B3                     dtoa@p:
  1559                           	opt callstack 0
  1560                           
  1561                           ; 2 bytes @ 0x33
  1562  0000B3                     	ds	1
  1563  0000B4                     _xtoa$1238:
  1564                           	opt callstack 0
  1565                           
  1566                           ; 2 bytes @ 0x34
  1567  0000B4                     	ds	1
  1568  0000B5                     dtoa@w:
  1569                           	opt callstack 0
  1570                           
  1571                           ; 2 bytes @ 0x35
  1572  0000B5                     	ds	1
  1573  0000B6                     xtoa@p:
  1574                           	opt callstack 0
  1575                           
  1576                           ; 2 bytes @ 0x36
  1577  0000B6                     	ds	1
  1578  0000B7                     dtoa@s:
  1579                           	opt callstack 0
  1580                           
  1581                           ; 2 bytes @ 0x37
  1582  0000B7                     	ds	1
  1583  0000B8                     xtoa@w:
  1584                           	opt callstack 0
  1585                           
  1586                           ; 2 bytes @ 0x38
  1587  0000B8                     	ds	1
  1588  0000B9                     dtoa@n:
  1589                           	opt callstack 0
  1590                           
  1591                           ; 8 bytes @ 0x39
  1592  0000B9                     	ds	1
  1593  0000BA                     xtoa@n:
  1594                           	opt callstack 0
  1595                           
  1596                           ; 8 bytes @ 0x3A
  1597  0000BA                     	ds	7
  1598  0000C1                     dtoa@i:
  1599                           	opt callstack 0
  1600                           
  1601                           ; 2 bytes @ 0x41
  1602  0000C1                     	ds	1
  1603  0000C2                     xtoa@i:
  1604                           	opt callstack 0
  1605                           
  1606                           ; 2 bytes @ 0x42
  1607  0000C2                     	ds	2
  1608  0000C4                     xtoa@c:
  1609                           	opt callstack 0
  1610                           
  1611                           ; 2 bytes @ 0x44
  1612  0000C4                     	ds	2
  1613  0000C6                     ?_vfpfcnvrt:
  1614                           	opt callstack 0
  1615  0000C6                     vfpfcnvrt@fp:
  1616                           	opt callstack 0
  1617                           
  1618                           ; 2 bytes @ 0x46
  1619  0000C6                     	ds	2
  1620  0000C8                     vfpfcnvrt@fmt:
  1621                           	opt callstack 0
  1622                           
  1623                           ; 2 bytes @ 0x48
  1624  0000C8                     	ds	2
  1625  0000CA                     vfpfcnvrt@ap:
  1626                           	opt callstack 0
  1627                           
  1628                           ; 2 bytes @ 0x4A
  1629  0000CA                     	ds	2
  1630  0000CC                     ??_vfpfcnvrt:
  1631                           
  1632                           ; 1 bytes @ 0x4C
  1633  0000CC                     	ds	4
  1634  0000D0                     vfpfcnvrt@ll:
  1635                           	opt callstack 0
  1636                           
  1637                           ; 8 bytes @ 0x50
  1638  0000D0                     	ds	8
  1639  0000D8                     vfpfcnvrt@llu:
  1640                           	opt callstack 0
  1641                           
  1642                           ; 8 bytes @ 0x58
  1643  0000D8                     	ds	8
  1644  0000E0                     vfpfcnvrt@c:
  1645                           	opt callstack 0
  1646                           
  1647                           ; 1 bytes @ 0x60
  1648  0000E0                     	ds	1
  1649  0000E1                     vfpfcnvrt@done:
  1650                           	opt callstack 0
  1651                           
  1652                           ; 2 bytes @ 0x61
  1653  0000E1                     	ds	2
  1654  0000E3                     _vfpfcnvrt$1252:
  1655                           	opt callstack 0
  1656                           
  1657                           ; 2 bytes @ 0x63
  1658  0000E3                     	ds	2
  1659  0000E5                     ?_vfprintf:
  1660                           	opt callstack 0
  1661  0000E5                     vfprintf@fp:
  1662                           	opt callstack 0
  1663                           
  1664                           ; 2 bytes @ 0x65
  1665  0000E5                     	ds	2
  1666  0000E7                     vfprintf@fmt:
  1667                           	opt callstack 0
  1668                           
  1669                           ; 2 bytes @ 0x67
  1670  0000E7                     	ds	2
  1671  0000E9                     vfprintf@ap:
  1672                           	opt callstack 0
  1673                           
  1674                           ; 2 bytes @ 0x69
  1675  0000E9                     	ds	2
  1676  0000EB                     vfprintf@cfmt:
  1677                           	opt callstack 0
  1678                           
  1679                           ; 2 bytes @ 0x6B
  1680  0000EB                     	ds	2
  1681  0000ED                     ?_printf:
  1682                           	opt callstack 0
  1683  0000ED                     printf@fmt:
  1684                           	opt callstack 0
  1685                           
  1686                           ; 2 bytes @ 0x6D
  1687  0000ED                     	ds	10
  1688  0000F7                     
  1689                           ; 1 bytes @ 0x77
  1690  0000F7                     	ds	2
  1691  0000F9                     printf@ap:
  1692                           	opt callstack 0
  1693                           
  1694                           ; 2 bytes @ 0x79
  1695  0000F9                     	ds	2
  1696  0000FB                     ??_brake:
  1697  0000FB                     ??_print_echo:
  1698  0000FB                     ?_number_deploy:
  1699                           	opt callstack 0
  1700  0000FB                     full_drive@stepper_no:
  1701                           	opt callstack 0
  1702  0000FB                     number_deploy@avg_dist:
  1703                           	opt callstack 0
  1704  0000FB                     UI_main@t_dep:
  1705                           	opt callstack 0
  1706                           
  1707                           ; 2 bytes @ 0x7B
  1708  0000FB                     	ds	1
  1709  0000FC                     ?_ultrasonic_main:
  1710                           	opt callstack 0
  1711                           
  1712                           ; 2 bytes @ 0x7C
  1713  0000FC                     	ds	1
  1714  0000FD                     ??_full_drive:
  1715  0000FD                     number_deploy@poles_detected:
  1716                           	opt callstack 0
  1717  0000FD                     UI_main@poles_detected:
  1718                           	opt callstack 0
  1719                           
  1720                           ; 2 bytes @ 0x7D
  1721  0000FD                     	ds	1
  1722  0000FE                     full_drive@direction:
  1723                           	opt callstack 0
  1724                           
  1725                           ; 1 bytes @ 0x7E
  1726  0000FE                     	ds	1
  1727                           
  1728                           	psect	cstackCOMRAM
  1729  000001                     __pcstackCOMRAM:
  1730                           	opt callstack 0
  1731  000001                     ?i2___awdiv:
  1732                           	opt callstack 0
  1733  000001                     ?___xxtofl:
  1734                           	opt callstack 0
  1735  000001                     i2___awdiv@dividend:
  1736                           	opt callstack 0
  1737  000001                     ___xxtofl@val:
  1738                           	opt callstack 0
  1739                           
  1740                           ; 4 bytes @ 0x0
  1741  000001                     	ds	2
  1742  000003                     i2___awdiv@divisor:
  1743                           	opt callstack 0
  1744                           
  1745                           ; 2 bytes @ 0x2
  1746  000003                     	ds	2
  1747  000005                     ??___xxtofl:
  1748  000005                     i2___awdiv@counter:
  1749                           	opt callstack 0
  1750                           
  1751                           ; 1 bytes @ 0x4
  1752  000005                     	ds	1
  1753  000006                     i2___awdiv@sign:
  1754                           	opt callstack 0
  1755                           
  1756                           ; 1 bytes @ 0x5
  1757  000006                     	ds	1
  1758  000007                     i2___awdiv@quotient:
  1759                           	opt callstack 0
  1760                           
  1761                           ; 2 bytes @ 0x6
  1762  000007                     	ds	2
  1763  000009                     ___xxtofl@sign:
  1764                           	opt callstack 0
  1765                           
  1766                           ; 1 bytes @ 0x8
  1767  000009                     	ds	1
  1768  00000A                     ___xxtofl@exp:
  1769                           	opt callstack 0
  1770                           
  1771                           ; 1 bytes @ 0x9
  1772  00000A                     	ds	1
  1773  00000B                     ___xxtofl@arg:
  1774                           	opt callstack 0
  1775                           
  1776                           ; 4 bytes @ 0xA
  1777  00000B                     	ds	4
  1778  00000F                     ?___fldiv:
  1779                           	opt callstack 0
  1780  00000F                     ___fldiv@b:
  1781                           	opt callstack 0
  1782                           
  1783                           ; 4 bytes @ 0xE
  1784  00000F                     	ds	4
  1785  000013                     ___fldiv@a:
  1786                           	opt callstack 0
  1787                           
  1788                           ; 4 bytes @ 0x12
  1789  000013                     	ds	4
  1790  000017                     ??___fldiv:
  1791                           
  1792                           ; 1 bytes @ 0x16
  1793  000017                     	ds	4
  1794  00001B                     ___fldiv@rem:
  1795                           	opt callstack 0
  1796                           
  1797                           ; 4 bytes @ 0x1A
  1798  00001B                     	ds	4
  1799  00001F                     ___fldiv@sign:
  1800                           	opt callstack 0
  1801                           
  1802                           ; 1 bytes @ 0x1E
  1803  00001F                     	ds	1
  1804  000020                     ___fldiv@new_exp:
  1805                           	opt callstack 0
  1806                           
  1807                           ; 2 bytes @ 0x1F
  1808  000020                     	ds	2
  1809  000022                     ___fldiv@grs:
  1810                           	opt callstack 0
  1811                           
  1812                           ; 4 bytes @ 0x21
  1813  000022                     	ds	4
  1814  000026                     ___fldiv@bexp:
  1815                           	opt callstack 0
  1816                           
  1817                           ; 1 bytes @ 0x25
  1818  000026                     	ds	1
  1819  000027                     ___fldiv@aexp:
  1820                           	opt callstack 0
  1821                           
  1822                           ; 1 bytes @ 0x26
  1823  000027                     	ds	1
  1824  000028                     ?___fltol:
  1825                           	opt callstack 0
  1826  000028                     ___fltol@f1:
  1827                           	opt callstack 0
  1828                           
  1829                           ; 4 bytes @ 0x27
  1830  000028                     	ds	4
  1831  00002C                     ??___fltol:
  1832                           
  1833                           ; 1 bytes @ 0x2B
  1834  00002C                     	ds	4
  1835  000030                     ___fltol@sign1:
  1836                           	opt callstack 0
  1837                           
  1838                           ; 1 bytes @ 0x2F
  1839  000030                     	ds	1
  1840  000031                     ___fltol@exp1:
  1841                           	opt callstack 0
  1842                           
  1843                           ; 1 bytes @ 0x30
  1844  000031                     	ds	1
  1845  000032                     ??_echo:
  1846                           
  1847                           ; 1 bytes @ 0x31
  1848  000032                     	ds	4
  1849  000036                     ??_ISR:
  1850                           
  1851                           ; 1 bytes @ 0x35
  1852  000036                     	ds	2
  1853                           
  1854 ;;
  1855 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1856 ;;
  1857 ;; *************** function _main *****************
  1858 ;; Defined at:
  1859 ;;		line 715 in file "main.c"
  1860 ;; Parameters:    Size  Location     Type
  1861 ;;		None
  1862 ;; Auto vars:     Size  Location     Type
  1863 ;;  k               2  188[BANK1 ] int 
  1864 ;;  i               2  180[BANK1 ] int 
  1865 ;;  i               2  178[BANK1 ] int 
  1866 ;;  i               2  194[BANK1 ] int 
  1867 ;;  pole_cl_dist    2    0        int 
  1868 ;;  Pole           80   98[BANK1 ] struct Poles[10]
  1869 ;;  prev_avg_dis    4  198[BANK1 ] volatile long 
  1870 ;;  poles_detect    2  196[BANK1 ] int 
  1871 ;;  t_dep           2  192[BANK1 ] int 
  1872 ;;  t_count         2  190[BANK1 ] int 
  1873 ;;  steps2_adj      2  186[BANK1 ] int 
  1874 ;;  stack           2  184[BANK1 ] int 
  1875 ;;  read            2    0        int 
  1876 ;;  arduino_stop    1  183[BANK1 ] _Bool 
  1877 ;;  act_done        1  182[BANK1 ] _Bool 
  1878 ;; Return value:  Size  Location     Type
  1879 ;;                  1    wreg      void 
  1880 ;; Registers used:
  1881 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1882 ;; Tracked objects:
  1883 ;;		On entry : 0/0
  1884 ;;		On exit  : 0/0
  1885 ;;		Unchanged: 0/0
  1886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1888 ;;      Locals:         0       0     108       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1889 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1890 ;;      Totals:         0       0     112       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1891 ;;Total ram usage:      112 bytes
  1892 ;; Hardware stack levels required when called:   17
  1893 ;; This function calls:
  1894 ;;		_UI_main
  1895 ;;		___wmul
  1896 ;;		_actuators_main
  1897 ;;		_backwards
  1898 ;;		_brake
  1899 ;;		_initLCD
  1900 ;;		_lcdInst
  1901 ;;		_number_deploy
  1902 ;;		_printf
  1903 ;;		_start
  1904 ;;		_ultrasonic_main
  1905 ;; This function is called by:
  1906 ;;		Startup code after reset
  1907 ;; This function uses a non-reentrant model
  1908 ;;
  1909                           
  1910                           	psect	text0
  1911  000826                     __ptext0:
  1912                           	opt callstack 0
  1913  000826                     _main:
  1914                           	opt callstack 14
  1915                           
  1916                           ;main.c: 717:     int t_dep=0;
  1917                           
  1918                           ;incstack = 0
  1919  000826  0E00               	movlw	0
  1920  000828  0101               	movlb	1	; () banked
  1921  00082A  6FC1               	movwf	(main@t_dep+1)& (0+255),b
  1922  00082C  0E00               	movlw	0
  1923  00082E  6FC0               	movwf	main@t_dep& (0+255),b
  1924                           
  1925                           ;main.c: 718:     int t_count;;main.c: 719:  TRISD = 0x00;
  1926  000830  0E00               	movlw	0
  1927  000832  6E95               	movwf	3989,c	;volatile
  1928                           
  1929                           ; BSR set to: 1
  1930                           ;main.c: 720:  GIE = 1;
  1931  000834  8EF2               	bsf	4082,7,c	;volatile
  1932                           
  1933                           ;main.c: 721:      int steps2_adj =0;
  1934  000836  0E00               	movlw	0
  1935  000838  6FBB               	movwf	(main@steps2_adj+1)& (0+255),b
  1936  00083A  0E00               	movlw	0
  1937  00083C  6FBA               	movwf	main@steps2_adj& (0+255),b
  1938                           
  1939                           ;main.c: 722:     ADCON1=0x0F;
  1940  00083E  0E0F               	movlw	15
  1941  000840  6EC1               	movwf	4033,c	;volatile
  1942                           
  1943                           ; BSR set to: 1
  1944                           ;main.c: 724:  initLCD();
  1945  000842  EC4A  F01C         	call	_initLCD	;wreg free
  1946                           
  1947                           ;main.c: 726:  T1CON = 0x10;
  1948  000846  0E10               	movlw	16
  1949  000848  6ECD               	movwf	4045,c	;volatile
  1950                           
  1951                           ;main.c: 727:     int poles_detected=0;
  1952  00084A  0E00               	movlw	0
  1953  00084C  0101               	movlb	1	; () banked
  1954  00084E  6FC5               	movwf	(main@poles_detected+1)& (0+255),b
  1955  000850  0E00               	movlw	0
  1956  000852  6FC4               	movwf	main@poles_detected& (0+255),b
  1957                           
  1958                           ; BSR set to: 1
  1959                           ;main.c: 729:     volatile long prev_avg_dist=0;
  1960                           
  1961                           ; BSR set to: 1
  1962  000854  0E00               	movlw	0
  1963  000856  6FC6               	movwf	main@prev_avg_dist& (0+255),b	;volatile
  1964  000858  0E00               	movlw	0
  1965  00085A  6FC7               	movwf	(main@prev_avg_dist+1)& (0+255),b	;volatile
  1966  00085C  0E00               	movlw	0
  1967  00085E  6FC8               	movwf	(main@prev_avg_dist+2)& (0+255),b	;volatile
  1968  000860  0E00               	movlw	0
  1969  000862  6FC9               	movwf	(main@prev_avg_dist+3)& (0+255),b	;volatile
  1970                           
  1971                           ; BSR set to: 1
  1972                           ;main.c: 731:     TRISAbits.RA4 = 0;
  1973  000864  9892               	bcf	3986,4,c	;volatile
  1974                           
  1975                           ; BSR set to: 1
  1976                           ;main.c: 732:     PORTAbits.RA4 = LATAbits.LATA4;
  1977  000866  A889               	btfss	3977,4,c	;volatile
  1978  000868  D002               	bra	u9075
  1979  00086A  8880               	bsf	3968,4,c	;volatile
  1980  00086C  D001               	bra	u9077
  1981  00086E                     u9075:
  1982  00086E  9880               	bcf	3968,4,c	;volatile
  1983  000870                     u9077:
  1984                           
  1985                           ;main.c: 735:     _Bool arduino_stopped = 0;
  1986  000870  0E00               	movlw	0
  1987  000872  0101               	movlb	1	; () banked
  1988  000874  6FB7               	movwf	main@arduino_stopped& (0+255),b
  1989                           
  1990                           ; BSR set to: 1
  1991                           ;main.c: 737:     Poles Pole[10];;main.c: 745:     if (~sens){
  1992  000876  2858               	incf	_sens,w,c	;volatile
  1993  000878  E103               	bnz	u9080
  1994  00087A  2859               	incf	_sens+1,w,c	;volatile
  1995  00087C  B4D8               	btfsc	status,2,c
  1996  00087E  D00E               	goto	l8395
  1997  000880                     u9080:
  1998                           
  1999                           ; BSR set to: 1
  2000                           ;main.c: 746:         TRISBbits.RB0 = 0;
  2001  000880  9093               	bcf	3987,0,c	;volatile
  2002                           
  2003                           ;main.c: 747:         LATBbits.LATB0 = 0;
  2004  000882  908A               	bcf	3978,0,c	;volatile
  2005                           
  2006                           ;main.c: 749:         TRISB = 0b11111111;
  2007  000884  6893               	setf	3987,c	;volatile
  2008                           
  2009                           ; BSR set to: 1
  2010                           ;main.c: 750:         UI_main( t_dep, poles_detected);
  2011  000886  0E00               	movlw	0
  2012  000888  0100               	movlb	0	; () banked
  2013  00088A  6FFC               	movwf	(UI_main@t_dep+1)& (0+255),b
  2014  00088C  0E00               	movlw	0
  2015  00088E  6FFB               	movwf	UI_main@t_dep& (0+255),b
  2016  000890  0E00               	movlw	0
  2017  000892  6FFE               	movwf	(UI_main@poles_detected+1)& (0+255),b
  2018  000894  0E00               	movlw	0
  2019  000896  6FFD               	movwf	UI_main@poles_detected& (0+255),b
  2020  000898  EC09  F000         	call	_UI_main	;wreg free
  2021  00089C                     l8395:
  2022                           
  2023                           ;main.c: 753:         PORTAbits.RA4 = LATAbits.LATA4;
  2024  00089C  A889               	btfss	3977,4,c	;volatile
  2025  00089E  D002               	bra	u9095
  2026  0008A0  8880               	bsf	3968,4,c	;volatile
  2027  0008A2  D001               	bra	u9097
  2028  0008A4                     u9095:
  2029  0008A4  9880               	bcf	3968,4,c	;volatile
  2030  0008A6                     u9097:
  2031                           
  2032                           ;main.c: 760:         if ((poles_detected <1)&&((Pole[poles_detected].dist_from_start )<
      +                          4000)){
  2033  0008A6  0101               	movlb	1	; () banked
  2034  0008A8  BFC5               	btfsc	(main@poles_detected+1)& (0+255),7,b
  2035  0008AA  D005               	goto	u9100
  2036  0008AC  51C5               	movf	(main@poles_detected+1)& (0+255),w,b
  2037  0008AE  E102               	bnz	u9101
  2038  0008B0  05C4               	decf	main@poles_detected& (0+255),w,b
  2039  0008B2  B0D8               	btfsc	status,0,c
  2040  0008B4                     u9101:
  2041  0008B4  D27B               	goto	l8543
  2042  0008B6                     u9100:
  2043                           
  2044                           ; BSR set to: 1
  2045  0008B6  C1C4  F15A         	movff	main@poles_detected,??_main
  2046  0008BA  C1C5  F15B         	movff	main@poles_detected+1,??_main+1
  2047  0008BE  90D8               	bcf	status,0,c
  2048  0008C0  375A               	rlcf	??_main& (0+255),f,b
  2049  0008C2  375B               	rlcf	(??_main+1)& (0+255),f,b
  2050  0008C4  90D8               	bcf	status,0,c
  2051  0008C6  375A               	rlcf	??_main& (0+255),f,b
  2052  0008C8  375B               	rlcf	(??_main+1)& (0+255),f,b
  2053  0008CA  90D8               	bcf	status,0,c
  2054  0008CC  375A               	rlcf	??_main& (0+255),f,b
  2055  0008CE  375B               	rlcf	(??_main+1)& (0+255),f,b
  2056  0008D0  0E04               	movlw	4
  2057  0008D2  275A               	addwf	??_main& (0+255),f,b
  2058  0008D4  0E00               	movlw	0
  2059  0008D6  235B               	addwfc	(??_main+1)& (0+255),f,b
  2060  0008D8  0E62               	movlw	low main@Pole
  2061  0008DA  255A               	addwf	??_main& (0+255),w,b
  2062  0008DC  6ED9               	movwf	fsr2l,c
  2063  0008DE  0E01               	movlw	high main@Pole
  2064  0008E0  215B               	addwfc	(??_main+1)& (0+255),w,b
  2065  0008E2  6EDA               	movwf	fsr2h,c
  2066  0008E4  0E01               	movlw	1
  2067  0008E6  BEDB               	btfsc	plusw2,7,c
  2068  0008E8  D092               	goto	l8447
  2069  0008EA  0EA0               	movlw	160
  2070  0008EC  5CDE               	subwf	postinc2,w,c
  2071  0008EE  0E0F               	movlw	15
  2072  0008F0  58DE               	subwfb	postinc2,w,c
  2073  0008F2  A0D8               	btfss	status,0,c
  2074  0008F4  D08C               	goto	l8447
  2075  0008F6  D25A               	goto	l8543
  2076  0008F8                     l8403:
  2077                           
  2078                           ;main.c: 771:                 t_count = 5;
  2079  0008F8  0E00               	movlw	0
  2080  0008FA  0101               	movlb	1	; () banked
  2081  0008FC  6FBF               	movwf	(main@t_count+1)& (0+255),b
  2082  0008FE  0E05               	movlw	5
  2083  000900  6FBE               	movwf	main@t_count& (0+255),b
  2084                           
  2085                           ; BSR set to: 1
  2086                           ;main.c: 772:                     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/
      +                          4000.0)));};
  2087  000902  0E01               	movlw	1
  2088  000904  EC61  F01F         	call	_lcdInst
  2089  000908  0E11               	movlw	17
  2090  00090A  0101               	movlb	1	; () banked
  2091  00090C  6F5A               	movwf	??_main& (0+255),b
  2092  00090E  0E3A               	movlw	58
  2093  000910                     u9247:
  2094  000910  2EE8               	decfsz	wreg,f,c
  2095  000912  D7FE               	bra	u9247
  2096  000914  2F5A               	decfsz	??_main& (0+255),f,b
  2097  000916  D7FC               	bra	u9247
  2098  000918  F000               	nop	
  2099                           
  2100                           ;main.c: 773:                     printf("waiting");
  2101  00091A  0E02               	movlw	low (STR_54+5)
  2102  00091C  0100               	movlb	0	; () banked
  2103  00091E  6FED               	movwf	printf@fmt& (0+255),b
  2104  000920  0EFF               	movlw	high (STR_54+5)
  2105  000922  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2106  000924  ECFB  F01E         	call	_printf	;wreg free
  2107                           
  2108                           ;main.c: 775:                     if (!PORTAbits.RA4){
  2109  000928  B880               	btfsc	3968,4,c	;volatile
  2110  00092A  D013               	goto	l8419
  2111                           
  2112                           ;main.c: 776:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  2113  00092C  0E01               	movlw	1
  2114  00092E  EC61  F01F         	call	_lcdInst
  2115  000932  0E11               	movlw	17
  2116  000934  0101               	movlb	1	; () banked
  2117  000936  6F5A               	movwf	??_main& (0+255),b
  2118  000938  0E3A               	movlw	58
  2119  00093A                     u9257:
  2120  00093A  2EE8               	decfsz	wreg,f,c
  2121  00093C  D7FE               	bra	u9257
  2122  00093E  2F5A               	decfsz	??_main& (0+255),f,b
  2123  000940  D7FC               	bra	u9257
  2124  000942  F000               	nop	
  2125                           
  2126                           ;main.c: 777:                         printf("more waiting");
  2127  000944  0EFD               	movlw	low STR_54
  2128  000946  0100               	movlb	0	; () banked
  2129  000948  6FED               	movwf	printf@fmt& (0+255),b
  2130  00094A  0EFE               	movlw	high STR_54
  2131  00094C  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2132  00094E  ECFB  F01E         	call	_printf	;wreg free
  2133  000952                     l8419:
  2134                           
  2135                           ;main.c: 779:                     if (PORTAbits.RA4){
  2136  000952  A880               	btfss	3968,4,c	;volatile
  2137  000954  D016               	goto	l8429
  2138                           
  2139                           ;main.c: 782:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  2140  000956  0E01               	movlw	1
  2141  000958  EC61  F01F         	call	_lcdInst
  2142  00095C  0E11               	movlw	17
  2143  00095E  0101               	movlb	1	; () banked
  2144  000960  6F5A               	movwf	??_main& (0+255),b
  2145  000962  0E3A               	movlw	58
  2146  000964                     u9267:
  2147  000964  2EE8               	decfsz	wreg,f,c
  2148  000966  D7FE               	bra	u9267
  2149  000968  2F5A               	decfsz	??_main& (0+255),f,b
  2150  00096A  D7FC               	bra	u9267
  2151  00096C  F000               	nop	
  2152                           
  2153                           ;main.c: 783:                         printf("done wait");
  2154  00096E  0EBB               	movlw	low STR_55
  2155  000970  0100               	movlb	0	; () banked
  2156  000972  6FED               	movwf	printf@fmt& (0+255),b
  2157  000974  0EFF               	movlw	high STR_55
  2158  000976  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2159  000978  ECFB  F01E         	call	_printf	;wreg free
  2160                           
  2161                           ;main.c: 784:                         arduino_stopped = 1;
  2162  00097C  0E01               	movlw	1
  2163  00097E  0101               	movlb	1	; () banked
  2164  000980  6FB7               	movwf	main@arduino_stopped& (0+255),b
  2165  000982                     l8429:
  2166                           
  2167                           ;main.c: 786:                     if (arduino_stopped){
  2168  000982  0101               	movlb	1	; () banked
  2169  000984  51B7               	movf	main@arduino_stopped& (0+255),w,b
  2170  000986  B4D8               	btfsc	status,2,c
  2171  000988  D042               	goto	l8447
  2172                           
  2173                           ; BSR set to: 1
  2174                           ;main.c: 787:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  2175  00098A  0E01               	movlw	1
  2176  00098C  EC61  F01F         	call	_lcdInst
  2177  000990  0E11               	movlw	17
  2178  000992  0101               	movlb	1	; () banked
  2179  000994  6F5A               	movwf	??_main& (0+255),b
  2180  000996  0E3A               	movlw	58
  2181  000998                     u9277:
  2182  000998  2EE8               	decfsz	wreg,f,c
  2183  00099A  D7FE               	bra	u9277
  2184  00099C  2F5A               	decfsz	??_main& (0+255),f,b
  2185  00099E  D7FC               	bra	u9277
  2186  0009A0  F000               	nop	
  2187                           
  2188                           ;main.c: 788:                         printf("dun break");
  2189  0009A2  0EA7               	movlw	low STR_56
  2190  0009A4  0100               	movlb	0	; () banked
  2191  0009A6  6FED               	movwf	printf@fmt& (0+255),b
  2192  0009A8  0EFF               	movlw	high STR_56
  2193  0009AA  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2194  0009AC  ECFB  F01E         	call	_printf	;wreg free
  2195                           
  2196                           ;main.c: 789:                         steps2_adj=ultrasonic_main();
  2197  0009B0  ECC1  F012         	call	_ultrasonic_main	;wreg free
  2198  0009B4  C0FC  F1BA         	movff	?_ultrasonic_main,main@steps2_adj
  2199  0009B8  C0FD  F1BB         	movff	?_ultrasonic_main+1,main@steps2_adj+1
  2200                           
  2201                           ;main.c: 790:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  2202  0009BC  0E01               	movlw	1
  2203  0009BE  EC61  F01F         	call	_lcdInst
  2204  0009C2  0E11               	movlw	17
  2205  0009C4  0101               	movlb	1	; () banked
  2206  0009C6  6F5A               	movwf	??_main& (0+255),b
  2207  0009C8  0E3A               	movlw	58
  2208  0009CA                     u9287:
  2209  0009CA  2EE8               	decfsz	wreg,f,c
  2210  0009CC  D7FE               	bra	u9287
  2211  0009CE  2F5A               	decfsz	??_main& (0+255),f,b
  2212  0009D0  D7FC               	bra	u9287
  2213  0009D2  F000               	nop	
  2214                           
  2215                           ;main.c: 791:                         printf("stepsadj %d", steps2_adj);
  2216  0009D4  0E23               	movlw	low STR_21
  2217  0009D6  0100               	movlb	0	; () banked
  2218  0009D8  6FED               	movwf	printf@fmt& (0+255),b
  2219  0009DA  0EFF               	movlw	high STR_21
  2220  0009DC  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2221  0009DE  C1BA  F0EF         	movff	main@steps2_adj,?_printf+2
  2222  0009E2  C1BB  F0F0         	movff	main@steps2_adj+1,?_printf+3
  2223  0009E6  ECFB  F01E         	call	_printf	;wreg free
  2224                           
  2225                           ;main.c: 792:                         t_count = number_deploy(avg_dist, poles_detected);
  2226  0009EA  C044  F0FB         	movff	_avg_dist,number_deploy@avg_dist	;volatile
  2227  0009EE  C045  F0FC         	movff	_avg_dist+1,number_deploy@avg_dist+1	;volatile
  2228  0009F2  C1C4  F0FD         	movff	main@poles_detected,number_deploy@poles_detected
  2229  0009F6  C1C5  F0FE         	movff	main@poles_detected+1,number_deploy@poles_detected+1
  2230  0009FA  ECBA  F010         	call	_number_deploy	;wreg free
  2231  0009FE  C0FB  F1BE         	movff	?_number_deploy,main@t_count
  2232  000A02  C0FC  F1BF         	movff	?_number_deploy+1,main@t_count+1
  2233                           
  2234                           ;main.c: 793:                         sens = 0;
  2235  000A06  0E00               	movlw	0
  2236  000A08  6E59               	movwf	_sens+1,c	;volatile
  2237  000A0A  0E00               	movlw	0
  2238  000A0C  6E58               	movwf	_sens,c	;volatile
  2239  000A0E                     l8447:
  2240                           
  2241                           ;main.c: 768:             while (sens){
  2242  000A0E  5058               	movf	_sens,w,c	;volatile
  2243  000A10  1059               	iorwf	_sens+1,w,c	;volatile
  2244  000A12  A4D8               	btfss	status,2,c
  2245  000A14  D771               	goto	l8403
  2246                           
  2247                           ;main.c: 803:             act_done = 0;
  2248  000A16  0E00               	movlw	0
  2249  000A18  0101               	movlb	1	; () banked
  2250  000A1A  6FB6               	movwf	main@act_done& (0+255),b
  2251                           
  2252                           ; BSR set to: 1
  2253                           ;main.c: 804:             if (t_count<=2){
  2254  000A1C  BFBF               	btfsc	(main@t_count+1)& (0+255),7,b
  2255  000A1E  D006               	goto	u9160
  2256  000A20  51BF               	movf	(main@t_count+1)& (0+255),w,b
  2257  000A22  E165               	bnz	l557
  2258  000A24  0E03               	movlw	3
  2259  000A26  5DBE               	subwf	main@t_count& (0+255),w,b
  2260  000A28  B0D8               	btfsc	status,0,c
  2261  000A2A  D061               	goto	l557
  2262  000A2C                     u9160:
  2263                           
  2264                           ; BSR set to: 1
  2265                           ;main.c: 805:                 if (t_dep <8){
  2266  000A2C  BFC1               	btfsc	(main@t_dep+1)& (0+255),7,b
  2267  000A2E  D006               	goto	u9170
  2268  000A30  51C1               	movf	(main@t_dep+1)& (0+255),w,b
  2269  000A32  E12D               	bnz	l8471
  2270  000A34  0E08               	movlw	8
  2271  000A36  5DC0               	subwf	main@t_dep& (0+255),w,b
  2272  000A38  B0D8               	btfsc	status,0,c
  2273  000A3A  D029               	goto	u9180
  2274  000A3C                     u9170:
  2275                           
  2276                           ; BSR set to: 1
  2277                           ;main.c: 808:                     stack = 1;
  2278  000A3C  0E00               	movlw	0
  2279  000A3E  6FB9               	movwf	(main@stack+1)& (0+255),b
  2280  000A40  0E01               	movlw	1
  2281  000A42  6FB8               	movwf	main@stack& (0+255),b
  2282                           
  2283                           ; BSR set to: 1
  2284                           ;main.c: 809:                                     brake();
  2285  000A44  EC8D  F01A         	call	_brake	;wreg free
  2286                           
  2287                           ;main.c: 811:                     for(int i=0; i<(t_count); i++){
  2288  000A48  0E00               	movlw	0
  2289  000A4A  0101               	movlb	1	; () banked
  2290  000A4C  6FB3               	movwf	(main@i+1)& (0+255),b
  2291  000A4E  0E00               	movlw	0
  2292  000A50  6FB2               	movwf	main@i& (0+255),b
  2293  000A52  D013               	goto	l8469
  2294  000A54                     l8463:
  2295                           
  2296                           ; BSR set to: 1
  2297                           ;main.c: 812:                         actuators_main(stack, steps2_adj, t_dep);
  2298  000A54  C1B8  F112         	movff	main@stack,actuators_main@stack
  2299  000A58  C1B9  F113         	movff	main@stack+1,actuators_main@stack+1
  2300  000A5C  C1BA  F114         	movff	main@steps2_adj,actuators_main@steps2_adj
  2301  000A60  C1BB  F115         	movff	main@steps2_adj+1,actuators_main@steps2_adj+1
  2302  000A64  C1C0  F116         	movff	main@t_dep,actuators_main@t_dep
  2303  000A68  C1C1  F117         	movff	main@t_dep+1,actuators_main@t_dep+1
  2304  000A6C  EC97  F013         	call	_actuators_main	;wreg free
  2305                           
  2306                           ;main.c: 814:                         t_dep++;
  2307  000A70  0101               	movlb	1	; () banked
  2308  000A72  4BC0               	infsnz	main@t_dep& (0+255),f,b
  2309  000A74  2BC1               	incf	(main@t_dep+1)& (0+255),f,b
  2310                           
  2311                           ; BSR set to: 1
  2312                           ;main.c: 815:                     }
  2313  000A76  4BB2               	infsnz	main@i& (0+255),f,b
  2314  000A78  2BB3               	incf	(main@i+1)& (0+255),f,b
  2315  000A7A                     l8469:
  2316                           
  2317                           ; BSR set to: 1
  2318  000A7A  51BE               	movf	main@t_count& (0+255),w,b
  2319  000A7C  5DB2               	subwf	main@i& (0+255),w,b
  2320  000A7E  51B3               	movf	(main@i+1)& (0+255),w,b
  2321  000A80  0A80               	xorlw	128
  2322  000A82  6F5A               	movwf	??_main& (0+255),b
  2323  000A84  51BF               	movf	(main@t_count+1)& (0+255),w,b
  2324  000A86  0A80               	xorlw	128
  2325  000A88  595A               	subwfb	??_main& (0+255),w,b
  2326  000A8A  A0D8               	btfss	status,0,c
  2327  000A8C  D7E3               	goto	l8463
  2328  000A8E                     u9180:
  2329  000A8E                     l8471:
  2330                           
  2331                           ; BSR set to: 1
  2332                           ;main.c: 817:                 if (t_dep >= 8){
  2333  000A8E  BFC1               	btfsc	(main@t_dep+1)& (0+255),7,b
  2334  000A90  D02C               	goto	u9200
  2335  000A92  51C1               	movf	(main@t_dep+1)& (0+255),w,b
  2336  000A94  E104               	bnz	u9190
  2337  000A96  0E08               	movlw	8
  2338  000A98  5DC0               	subwf	main@t_dep& (0+255),w,b
  2339  000A9A  A0D8               	btfss	status,0,c
  2340  000A9C  D026               	goto	u9200
  2341  000A9E                     u9190:
  2342                           
  2343                           ; BSR set to: 1
  2344                           ;main.c: 818:                     stack = 2;
  2345  000A9E  0E00               	movlw	0
  2346  000AA0  6FB9               	movwf	(main@stack+1)& (0+255),b
  2347  000AA2  0E02               	movlw	2
  2348  000AA4  6FB8               	movwf	main@stack& (0+255),b
  2349                           
  2350                           ;main.c: 819:                     for(int i=0; i<(t_count); i++){
  2351  000AA6  0E00               	movlw	0
  2352  000AA8  6FB5               	movwf	(main@i_1075+1)& (0+255),b
  2353  000AAA  0E00               	movlw	0
  2354  000AAC  6FB4               	movwf	main@i_1075& (0+255),b
  2355  000AAE  D013               	goto	l8481
  2356  000AB0                     l8475:
  2357                           
  2358                           ; BSR set to: 1
  2359                           ;main.c: 820:                         actuators_main(stack, steps2_adj, t_dep);
  2360  000AB0  C1B8  F112         	movff	main@stack,actuators_main@stack
  2361  000AB4  C1B9  F113         	movff	main@stack+1,actuators_main@stack+1
  2362  000AB8  C1BA  F114         	movff	main@steps2_adj,actuators_main@steps2_adj
  2363  000ABC  C1BB  F115         	movff	main@steps2_adj+1,actuators_main@steps2_adj+1
  2364  000AC0  C1C0  F116         	movff	main@t_dep,actuators_main@t_dep
  2365  000AC4  C1C1  F117         	movff	main@t_dep+1,actuators_main@t_dep+1
  2366  000AC8  EC97  F013         	call	_actuators_main	;wreg free
  2367                           
  2368                           ;main.c: 822:                         t_dep++;
  2369  000ACC  0101               	movlb	1	; () banked
  2370  000ACE  4BC0               	infsnz	main@t_dep& (0+255),f,b
  2371  000AD0  2BC1               	incf	(main@t_dep+1)& (0+255),f,b
  2372                           
  2373                           ; BSR set to: 1
  2374                           ;main.c: 823:                     }
  2375  000AD2  4BB4               	infsnz	main@i_1075& (0+255),f,b
  2376  000AD4  2BB5               	incf	(main@i_1075+1)& (0+255),f,b
  2377  000AD6                     l8481:
  2378                           
  2379                           ; BSR set to: 1
  2380  000AD6  51BE               	movf	main@t_count& (0+255),w,b
  2381  000AD8  5DB4               	subwf	main@i_1075& (0+255),w,b
  2382  000ADA  51B5               	movf	(main@i_1075+1)& (0+255),w,b
  2383  000ADC  0A80               	xorlw	128
  2384  000ADE  6F5A               	movwf	??_main& (0+255),b
  2385  000AE0  51BF               	movf	(main@t_count+1)& (0+255),w,b
  2386  000AE2  0A80               	xorlw	128
  2387  000AE4  595A               	subwfb	??_main& (0+255),w,b
  2388  000AE6  A0D8               	btfss	status,0,c
  2389  000AE8  D7E3               	goto	l8475
  2390  000AEA                     u9200:
  2391                           
  2392                           ; BSR set to: 1
  2393                           ;main.c: 825:                 act_done = 1;
  2394  000AEA  0E01               	movlw	1
  2395  000AEC  6FB6               	movwf	main@act_done& (0+255),b
  2396  000AEE                     l557:
  2397                           
  2398                           ; BSR set to: 1
  2399                           ;main.c: 827:             if (act_done){
  2400  000AEE  51B6               	movf	main@act_done& (0+255),w,b
  2401  000AF0  B4D8               	btfsc	status,2,c
  2402  000AF2  D1A8               	goto	l8563
  2403                           
  2404                           ; BSR set to: 1
  2405                           ;main.c: 828:             Pole[poles_detected].dist_from_cl = avg_dist;
  2406  000AF4  C1C4  F15A         	movff	main@poles_detected,??_main
  2407  000AF8  C1C5  F15B         	movff	main@poles_detected+1,??_main+1
  2408  000AFC  90D8               	bcf	status,0,c
  2409  000AFE  375A               	rlcf	??_main& (0+255),f,b
  2410  000B00  375B               	rlcf	(??_main+1)& (0+255),f,b
  2411  000B02  90D8               	bcf	status,0,c
  2412  000B04  375A               	rlcf	??_main& (0+255),f,b
  2413  000B06  375B               	rlcf	(??_main+1)& (0+255),f,b
  2414  000B08  90D8               	bcf	status,0,c
  2415  000B0A  375A               	rlcf	??_main& (0+255),f,b
  2416  000B0C  375B               	rlcf	(??_main+1)& (0+255),f,b
  2417  000B0E  0E06               	movlw	6
  2418  000B10  275A               	addwf	??_main& (0+255),f,b
  2419  000B12  0E00               	movlw	0
  2420  000B14  235B               	addwfc	(??_main+1)& (0+255),f,b
  2421  000B16  0E62               	movlw	low main@Pole
  2422  000B18  255A               	addwf	??_main& (0+255),w,b
  2423  000B1A  6ED9               	movwf	fsr2l,c
  2424  000B1C  0E01               	movlw	high main@Pole
  2425  000B1E  215B               	addwfc	(??_main+1)& (0+255),w,b
  2426  000B20  6EDA               	movwf	fsr2h,c
  2427  000B22  C044  FFDE         	movff	_avg_dist,postinc2	;volatile
  2428  000B26  C045  FFDD         	movff	_avg_dist+1,postdec2	;volatile
  2429                           
  2430                           ;main.c: 829:             Pole[poles_detected].dist_from_start = avg_dist+prev_avg_dist;
  2431  000B2A  51C6               	movf	main@prev_avg_dist& (0+255),w,b	;volatile
  2432  000B2C  2444               	addwf	_avg_dist,w,c	;volatile
  2433  000B2E  6F5A               	movwf	??_main& (0+255),b
  2434  000B30  51C7               	movf	(main@prev_avg_dist+1)& (0+255),w,b	;volatile
  2435  000B32  2045               	addwfc	_avg_dist+1,w,c	;volatile
  2436  000B34  6F5B               	movwf	(??_main+1)& (0+255),b
  2437  000B36  C1C4  F15C         	movff	main@poles_detected,??_main+2
  2438  000B3A  C1C5  F15D         	movff	main@poles_detected+1,??_main+3
  2439  000B3E  90D8               	bcf	status,0,c
  2440  000B40  375C               	rlcf	(??_main+2)& (0+255),f,b
  2441  000B42  375D               	rlcf	(??_main+3)& (0+255),f,b
  2442  000B44  90D8               	bcf	status,0,c
  2443  000B46  375C               	rlcf	(??_main+2)& (0+255),f,b
  2444  000B48  375D               	rlcf	(??_main+3)& (0+255),f,b
  2445  000B4A  90D8               	bcf	status,0,c
  2446  000B4C  375C               	rlcf	(??_main+2)& (0+255),f,b
  2447  000B4E  375D               	rlcf	(??_main+3)& (0+255),f,b
  2448  000B50  0E04               	movlw	4
  2449  000B52  275C               	addwf	(??_main+2)& (0+255),f,b
  2450  000B54  0E00               	movlw	0
  2451  000B56  235D               	addwfc	(??_main+3)& (0+255),f,b
  2452  000B58  0E62               	movlw	low main@Pole
  2453  000B5A  255C               	addwf	(??_main+2)& (0+255),w,b
  2454  000B5C  6ED9               	movwf	fsr2l,c
  2455  000B5E  0E01               	movlw	high main@Pole
  2456  000B60  215D               	addwfc	(??_main+3)& (0+255),w,b
  2457  000B62  6EDA               	movwf	fsr2h,c
  2458  000B64  C15A  FFDE         	movff	??_main,postinc2
  2459  000B68  C15B  FFDD         	movff	??_main+1,postdec2
  2460                           
  2461                           ; BSR set to: 1
  2462                           ;main.c: 831:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  2463  000B6C  0E01               	movlw	1
  2464  000B6E  EC61  F01F         	call	_lcdInst
  2465  000B72  0E11               	movlw	17
  2466  000B74  0101               	movlb	1	; () banked
  2467  000B76  6F5A               	movwf	??_main& (0+255),b
  2468  000B78  0E3A               	movlw	58
  2469  000B7A                     u9297:
  2470  000B7A  2EE8               	decfsz	wreg,f,c
  2471  000B7C  D7FE               	bra	u9297
  2472  000B7E  2F5A               	decfsz	??_main& (0+255),f,b
  2473  000B80  D7FC               	bra	u9297
  2474  000B82  F000               	nop	
  2475                           
  2476                           ;main.c: 832:             printf("dist p[%d]:%d,%d", poles_detected,Pole[poles_detected]
      +                          .dist_from_cl, avg_dist);
  2477  000B84  0E2C               	movlw	low STR_58
  2478  000B86  0100               	movlb	0	; () banked
  2479  000B88  6FED               	movwf	printf@fmt& (0+255),b
  2480  000B8A  0EFE               	movlw	high STR_58
  2481  000B8C  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2482  000B8E  C1C4  F0EF         	movff	main@poles_detected,?_printf+2
  2483  000B92  C1C5  F0F0         	movff	main@poles_detected+1,?_printf+3
  2484  000B96  C1C4  F15A         	movff	main@poles_detected,??_main
  2485  000B9A  C1C5  F15B         	movff	main@poles_detected+1,??_main+1
  2486  000B9E  0101               	movlb	1	; () banked
  2487  000BA0  90D8               	bcf	status,0,c
  2488  000BA2  375A               	rlcf	??_main& (0+255),f,b
  2489  000BA4  375B               	rlcf	(??_main+1)& (0+255),f,b
  2490  000BA6  90D8               	bcf	status,0,c
  2491  000BA8  375A               	rlcf	??_main& (0+255),f,b
  2492  000BAA  375B               	rlcf	(??_main+1)& (0+255),f,b
  2493  000BAC  90D8               	bcf	status,0,c
  2494  000BAE  375A               	rlcf	??_main& (0+255),f,b
  2495  000BB0  375B               	rlcf	(??_main+1)& (0+255),f,b
  2496  000BB2  0E06               	movlw	6
  2497  000BB4  275A               	addwf	??_main& (0+255),f,b
  2498  000BB6  0E00               	movlw	0
  2499  000BB8  235B               	addwfc	(??_main+1)& (0+255),f,b
  2500  000BBA  0E62               	movlw	low main@Pole
  2501  000BBC  255A               	addwf	??_main& (0+255),w,b
  2502  000BBE  6ED9               	movwf	fsr2l,c
  2503  000BC0  0E01               	movlw	high main@Pole
  2504  000BC2  215B               	addwfc	(??_main+1)& (0+255),w,b
  2505  000BC4  6EDA               	movwf	fsr2h,c
  2506  000BC6  CFDE F0F1          	movff	postinc2,?_printf+4
  2507  000BCA  CFDD F0F2          	movff	postdec2,?_printf+5
  2508  000BCE  C044  F0F3         	movff	_avg_dist,?_printf+6	;volatile
  2509  000BD2  C045  F0F4         	movff	_avg_dist+1,?_printf+7	;volatile
  2510  000BD6  C046  F0F5         	movff	_avg_dist+2,?_printf+8	;volatile
  2511  000BDA  C047  F0F6         	movff	_avg_dist+3,?_printf+9	;volatile
  2512  000BDE  ECFB  F01E         	call	_printf	;wreg free
  2513  000BE2  0EC0               	movlw	192
  2514  000BE4  EC61  F01F         	call	_lcdInst
  2515                           
  2516                           ;main.c: 834:             printf("p[%d] fs : %d",poles_detected, Pole[poles_detected].di
      +                          st_from_start);
  2517  000BE8  0EB8               	movlw	low STR_59
  2518  000BEA  0100               	movlb	0	; () banked
  2519  000BEC  6FED               	movwf	printf@fmt& (0+255),b
  2520  000BEE  0EFE               	movlw	high STR_59
  2521  000BF0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2522  000BF2  C1C4  F0EF         	movff	main@poles_detected,?_printf+2
  2523  000BF6  C1C5  F0F0         	movff	main@poles_detected+1,?_printf+3
  2524  000BFA  C1C4  F15A         	movff	main@poles_detected,??_main
  2525  000BFE  C1C5  F15B         	movff	main@poles_detected+1,??_main+1
  2526  000C02  0101               	movlb	1	; () banked
  2527  000C04  90D8               	bcf	status,0,c
  2528  000C06  375A               	rlcf	??_main& (0+255),f,b
  2529  000C08  375B               	rlcf	(??_main+1)& (0+255),f,b
  2530  000C0A  90D8               	bcf	status,0,c
  2531  000C0C  375A               	rlcf	??_main& (0+255),f,b
  2532  000C0E  375B               	rlcf	(??_main+1)& (0+255),f,b
  2533  000C10  90D8               	bcf	status,0,c
  2534  000C12  375A               	rlcf	??_main& (0+255),f,b
  2535  000C14  375B               	rlcf	(??_main+1)& (0+255),f,b
  2536  000C16  0E04               	movlw	4
  2537  000C18  275A               	addwf	??_main& (0+255),f,b
  2538  000C1A  0E00               	movlw	0
  2539  000C1C  235B               	addwfc	(??_main+1)& (0+255),f,b
  2540  000C1E  0E62               	movlw	low main@Pole
  2541  000C20  255A               	addwf	??_main& (0+255),w,b
  2542  000C22  6ED9               	movwf	fsr2l,c
  2543  000C24  0E01               	movlw	high main@Pole
  2544  000C26  215B               	addwfc	(??_main+1)& (0+255),w,b
  2545  000C28  6EDA               	movwf	fsr2h,c
  2546  000C2A  CFDE F0F1          	movff	postinc2,?_printf+4
  2547  000C2E  CFDD F0F2          	movff	postdec2,?_printf+5
  2548  000C32  ECFB  F01E         	call	_printf	;wreg free
  2549                           
  2550                           ;main.c: 835:             _delay((unsigned long)((3000)*(10000000/4000.0)));
  2551  000C36  0E27               	movlw	39
  2552  000C38  0101               	movlb	1	; () banked
  2553  000C3A  6F5B               	movwf	(??_main+1)& (0+255),b
  2554  000C3C  0E0D               	movlw	13
  2555  000C3E  6F5A               	movwf	??_main& (0+255),b
  2556  000C40  0E26               	movlw	38
  2557  000C42                     u9307:
  2558  000C42  2EE8               	decfsz	wreg,f,c
  2559  000C44  D7FE               	bra	u9307
  2560  000C46  2F5A               	decfsz	??_main& (0+255),f,b
  2561  000C48  D7FC               	bra	u9307
  2562  000C4A  2F5B               	decfsz	(??_main+1)& (0+255),f,b
  2563  000C4C  D7FA               	bra	u9307
  2564  000C4E  F000               	nop	
  2565                           
  2566                           ;main.c: 837:             prev_avg_dist = avg_dist ;
  2567  000C50  C044  F1C6         	movff	_avg_dist,main@prev_avg_dist	;volatile
  2568  000C54  C045  F1C7         	movff	_avg_dist+1,main@prev_avg_dist+1	;volatile
  2569  000C58  C046  F1C8         	movff	_avg_dist+2,main@prev_avg_dist+2	;volatile
  2570  000C5C  C047  F1C9         	movff	_avg_dist+3,main@prev_avg_dist+3	;volatile
  2571                           
  2572                           ;main.c: 838:             poles_detected++;
  2573  000C60  0101               	movlb	1	; () banked
  2574  000C62  4BC4               	infsnz	main@poles_detected& (0+255),f,b
  2575  000C64  2BC5               	incf	(main@poles_detected+1)& (0+255),f,b
  2576                           
  2577                           ; BSR set to: 1
  2578                           ;main.c: 839:             start();
  2579  000C66  EC73  F01D         	call	_start	;wreg free
  2580                           
  2581                           ;main.c: 840:             arduino_stopped = 0;
  2582  000C6A  0E00               	movlw	0
  2583  000C6C  0101               	movlb	1	; () banked
  2584  000C6E  6FB7               	movwf	main@arduino_stopped& (0+255),b
  2585                           
  2586                           ; BSR set to: 1
  2587                           ;main.c: 842:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  2588  000C70  0E01               	movlw	1
  2589  000C72  EC61  F01F         	call	_lcdInst
  2590  000C76  0E11               	movlw	17
  2591  000C78  0101               	movlb	1	; () banked
  2592  000C7A  6F5A               	movwf	??_main& (0+255),b
  2593  000C7C  0E3A               	movlw	58
  2594  000C7E                     u9317:
  2595  000C7E  2EE8               	decfsz	wreg,f,c
  2596  000C80  D7FE               	bra	u9317
  2597  000C82  2F5A               	decfsz	??_main& (0+255),f,b
  2598  000C84  D7FC               	bra	u9317
  2599  000C86  F000               	nop	
  2600                           
  2601                           ;main.c: 843:             printf("avg dist %d", avg_dist);
  2602  000C88  0E2F               	movlw	low STR_60
  2603  000C8A  0100               	movlb	0	; () banked
  2604  000C8C  6FED               	movwf	printf@fmt& (0+255),b
  2605  000C8E  0EFF               	movlw	high STR_60
  2606  000C90  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2607  000C92  C044  F0EF         	movff	_avg_dist,?_printf+2	;volatile
  2608  000C96  C045  F0F0         	movff	_avg_dist+1,?_printf+3	;volatile
  2609  000C9A  C046  F0F1         	movff	_avg_dist+2,?_printf+4	;volatile
  2610  000C9E  C047  F0F2         	movff	_avg_dist+3,?_printf+5	;volatile
  2611  000CA2  ECFB  F01E         	call	_printf	;wreg free
  2612                           
  2613                           ;main.c: 844:             printf("poles d %d", poles_detected);
  2614  000CA6  0E53               	movlw	low STR_61
  2615  000CA8  0100               	movlb	0	; () banked
  2616  000CAA  6FED               	movwf	printf@fmt& (0+255),b
  2617  000CAC  0EFF               	movlw	high STR_61
  2618  000CAE  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2619  000CB0  C1C4  F0EF         	movff	main@poles_detected,?_printf+2
  2620  000CB4  C1C5  F0F0         	movff	main@poles_detected+1,?_printf+3
  2621  000CB8  ECFB  F01E         	call	_printf	;wreg free
  2622                           
  2623                           ;main.c: 845:             for (int i=0;i<4;i++){
  2624  000CBC  0E00               	movlw	0
  2625  000CBE  0101               	movlb	1	; () banked
  2626  000CC0  6FC3               	movwf	(main@i_1081+1)& (0+255),b
  2627  000CC2  0E00               	movlw	0
  2628  000CC4  6FC2               	movwf	main@i_1081& (0+255),b
  2629  000CC6                     l8517:
  2630                           
  2631                           ; BSR set to: 1
  2632  000CC6  BFC3               	btfsc	(main@i_1081+1)& (0+255),7,b
  2633  000CC8  D006               	goto	l8521
  2634  000CCA  51C3               	movf	(main@i_1081+1)& (0+255),w,b
  2635  000CCC  E15D               	bnz	l8539
  2636  000CCE  0E04               	movlw	4
  2637  000CD0  5DC2               	subwf	main@i_1081& (0+255),w,b
  2638  000CD2  B0D8               	btfsc	status,0,c
  2639  000CD4  D059               	goto	l8539
  2640  000CD6                     l8521:
  2641                           
  2642                           ; BSR set to: 1
  2643                           ;main.c: 846:                 sum[i] = 0 ;
  2644  000CD6  90D8               	bcf	status,0,c
  2645  000CD8  35C2               	rlcf	main@i_1081& (0+255),w,b
  2646  000CDA  6ED9               	movwf	fsr2l,c
  2647  000CDC  35C3               	rlcf	(main@i_1081+1)& (0+255),w,b
  2648  000CDE  6EDA               	movwf	fsr2h,c
  2649  000CE0  0E38               	movlw	low _sum
  2650  000CE2  26D9               	addwf	fsr2l,f,c
  2651  000CE4  0E00               	movlw	high _sum
  2652  000CE6  22DA               	addwfc	fsr2h,f,c
  2653  000CE8  0E00               	movlw	0
  2654  000CEA  6EDE               	movwf	postinc2,c
  2655  000CEC  0E00               	movlw	0
  2656  000CEE  6EDD               	movwf	postdec2,c
  2657                           
  2658                           ;main.c: 847:                 a[i] =0 ;
  2659  000CF0  90D8               	bcf	status,0,c
  2660  000CF2  35C2               	rlcf	main@i_1081& (0+255),w,b
  2661  000CF4  6ED9               	movwf	fsr2l,c
  2662  000CF6  35C3               	rlcf	(main@i_1081+1)& (0+255),w,b
  2663  000CF8  6EDA               	movwf	fsr2h,c
  2664  000CFA  0E61               	movlw	low _a
  2665  000CFC  26D9               	addwf	fsr2l,f,c
  2666  000CFE  0E00               	movlw	high _a
  2667  000D00  22DA               	addwfc	fsr2h,f,c
  2668  000D02  0E00               	movlw	0
  2669  000D04  6EDE               	movwf	postinc2,c
  2670  000D06  0E00               	movlw	0
  2671  000D08  6EDD               	movwf	postdec2,c
  2672                           
  2673                           ;main.c: 848:                 sumf[i] = 0 ;
  2674  000D0A  0E40               	movlw	low _sumf
  2675  000D0C  25C2               	addwf	main@i_1081& (0+255),w,b
  2676  000D0E  6ED9               	movwf	fsr2l,c
  2677  000D10  0E00               	movlw	high _sumf
  2678  000D12  21C3               	addwfc	(main@i_1081+1)& (0+255),w,b
  2679  000D14  6EDA               	movwf	fsr2h,c
  2680  000D16  0E00               	movlw	0
  2681  000D18  6EDF               	movwf	indf2,c
  2682                           
  2683                           ; BSR set to: 1
  2684                           ;main.c: 849:                 for (int k=0;k<6;k++){
  2685  000D1A  0E00               	movlw	0
  2686  000D1C  6FBD               	movwf	(main@k+1)& (0+255),b
  2687  000D1E  0E00               	movlw	0
  2688  000D20  6FBC               	movwf	main@k& (0+255),b
  2689  000D22                     l8525:
  2690                           
  2691                           ; BSR set to: 1
  2692  000D22  BFBD               	btfsc	(main@k+1)& (0+255),7,b
  2693  000D24  D006               	goto	l8529
  2694  000D26  51BD               	movf	(main@k+1)& (0+255),w,b
  2695  000D28  E12C               	bnz	l8535
  2696  000D2A  0E06               	movlw	6
  2697  000D2C  5DBC               	subwf	main@k& (0+255),w,b
  2698  000D2E  B0D8               	btfsc	status,0,c
  2699  000D30  D028               	goto	l8535
  2700  000D32                     l8529:
  2701                           
  2702                           ; BSR set to: 1
  2703                           ;main.c: 850:                     dist_final[i][k] = 0;
  2704  000D32  C1C2  F080         	movff	main@i_1081,___wmul@multiplier
  2705  000D36  C1C3  F081         	movff	main@i_1081+1,___wmul@multiplier+1
  2706  000D3A  0E00               	movlw	0
  2707  000D3C  0100               	movlb	0	; () banked
  2708  000D3E  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2709  000D40  0E0C               	movlw	12
  2710  000D42  6F82               	movwf	___wmul@multiplicand& (0+255),b
  2711  000D44  EC0F  F01F         	call	___wmul	;wreg free
  2712  000D48  0E50               	movlw	low _dist_final
  2713  000D4A  0101               	movlb	1	; () banked
  2714  000D4C  6F5A               	movwf	??_main& (0+255),b
  2715  000D4E  0E02               	movlw	high _dist_final
  2716  000D50  6F5B               	movwf	(??_main+1)& (0+255),b
  2717  000D52  0100               	movlb	0	; () banked
  2718  000D54  5180               	movf	?___wmul& (0+255),w,b
  2719  000D56  0101               	movlb	1	; () banked
  2720  000D58  275A               	addwf	??_main& (0+255),f,b
  2721  000D5A  0100               	movlb	0	; () banked
  2722  000D5C  5181               	movf	(?___wmul+1)& (0+255),w,b
  2723  000D5E  0101               	movlb	1	; () banked
  2724  000D60  235B               	addwfc	(??_main+1)& (0+255),f,b
  2725  000D62  90D8               	bcf	status,0,c
  2726  000D64  35BC               	rlcf	main@k& (0+255),w,b
  2727  000D66  6ED9               	movwf	fsr2l,c
  2728  000D68  35BD               	rlcf	(main@k+1)& (0+255),w,b
  2729  000D6A  6EDA               	movwf	fsr2h,c
  2730  000D6C  515A               	movf	??_main& (0+255),w,b
  2731  000D6E  26D9               	addwf	fsr2l,f,c
  2732  000D70  515B               	movf	(??_main+1)& (0+255),w,b
  2733  000D72  22DA               	addwfc	fsr2h,f,c
  2734  000D74  0E00               	movlw	0
  2735  000D76  6EDE               	movwf	postinc2,c
  2736  000D78  0E00               	movlw	0
  2737  000D7A  6EDD               	movwf	postdec2,c
  2738                           
  2739                           ; BSR set to: 1
  2740                           ;main.c: 851:                     }
  2741  000D7C  4BBC               	infsnz	main@k& (0+255),f,b
  2742  000D7E  2BBD               	incf	(main@k+1)& (0+255),f,b
  2743  000D80  D7D0               	goto	l8525
  2744  000D82                     l8535:
  2745                           
  2746                           ; BSR set to: 1
  2747                           ;main.c: 852:                 }
  2748  000D82  4BC2               	infsnz	main@i_1081& (0+255),f,b
  2749  000D84  2BC3               	incf	(main@i_1081+1)& (0+255),f,b
  2750  000D86  D79F               	goto	l8517
  2751  000D88                     l8539:
  2752                           
  2753                           ; BSR set to: 1
  2754                           ;main.c: 853:                 _delay((unsigned long)((1000)*(10000000/4000.0)));
  2755  000D88  0E0D               	movlw	13
  2756  000D8A  0101               	movlb	1	; () banked
  2757  000D8C  6F5B               	movwf	(??_main+1)& (0+255),b
  2758  000D8E  0EAF               	movlw	175
  2759  000D90  6F5A               	movwf	??_main& (0+255),b
  2760  000D92  0EB6               	movlw	182
  2761  000D94                     u9327:
  2762  000D94  2EE8               	decfsz	wreg,f,c
  2763  000D96  D7FE               	bra	u9327
  2764  000D98  2F5A               	decfsz	??_main& (0+255),f,b
  2765  000D9A  D7FC               	bra	u9327
  2766  000D9C  2F5B               	decfsz	(??_main+1)& (0+255),f,b
  2767  000D9E  D7FA               	bra	u9327
  2768  000DA0  F000               	nop	
  2769                           
  2770                           ;main.c: 854:                 sens = 1;
  2771  000DA2  0E00               	movlw	0
  2772  000DA4  6E59               	movwf	_sens+1,c	;volatile
  2773  000DA6  0E01               	movlw	1
  2774  000DA8  6E58               	movwf	_sens,c	;volatile
  2775  000DAA  D04C               	goto	l8563
  2776  000DAC                     l8543:
  2777                           
  2778                           ; BSR set to: 1
  2779                           ;main.c: 858:             brake();
  2780  000DAC  EC8D  F01A         	call	_brake	;wreg free
  2781                           
  2782                           ;main.c: 859:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  2783  000DB0  0E01               	movlw	1
  2784  000DB2  EC61  F01F         	call	_lcdInst
  2785  000DB6  0E11               	movlw	17
  2786  000DB8  0101               	movlb	1	; () banked
  2787  000DBA  6F5A               	movwf	??_main& (0+255),b
  2788  000DBC  0E3A               	movlw	58
  2789  000DBE                     u9337:
  2790  000DBE  2EE8               	decfsz	wreg,f,c
  2791  000DC0  D7FE               	bra	u9337
  2792  000DC2  2F5A               	decfsz	??_main& (0+255),f,b
  2793  000DC4  D7FC               	bra	u9337
  2794  000DC6  F000               	nop	
  2795                           
  2796                           ;main.c: 860:             printf("poles done");
  2797  000DC8  0E69               	movlw	low STR_62
  2798  000DCA  0100               	movlb	0	; () banked
  2799  000DCC  6FED               	movwf	printf@fmt& (0+255),b
  2800  000DCE  0EFF               	movlw	high STR_62
  2801  000DD0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2802  000DD2  ECFB  F01E         	call	_printf	;wreg free
  2803                           
  2804                           ;main.c: 861:             _delay((unsigned long)((1000)*(10000000/4000.0)));
  2805  000DD6  0E0D               	movlw	13
  2806  000DD8  0101               	movlb	1	; () banked
  2807  000DDA  6F5B               	movwf	(??_main+1)& (0+255),b
  2808  000DDC  0EAF               	movlw	175
  2809  000DDE  6F5A               	movwf	??_main& (0+255),b
  2810  000DE0  0EB6               	movlw	182
  2811  000DE2                     u9347:
  2812  000DE2  2EE8               	decfsz	wreg,f,c
  2813  000DE4  D7FE               	bra	u9347
  2814  000DE6  2F5A               	decfsz	??_main& (0+255),f,b
  2815  000DE8  D7FC               	bra	u9347
  2816  000DEA  2F5B               	decfsz	(??_main+1)& (0+255),f,b
  2817  000DEC  D7FA               	bra	u9347
  2818  000DEE  F000               	nop	
  2819                           
  2820                           ;main.c: 867:             backwards();
  2821  000DF0  EC23  F01F         	call	_backwards	;wreg free
  2822                           
  2823                           ;main.c: 868:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  2824  000DF4  0E01               	movlw	1
  2825  000DF6  EC61  F01F         	call	_lcdInst
  2826  000DFA  0E11               	movlw	17
  2827  000DFC  0101               	movlb	1	; () banked
  2828  000DFE  6F5A               	movwf	??_main& (0+255),b
  2829  000E00  0E3A               	movlw	58
  2830  000E02                     u9357:
  2831  000E02  2EE8               	decfsz	wreg,f,c
  2832  000E04  D7FE               	bra	u9357
  2833  000E06  2F5A               	decfsz	??_main& (0+255),f,b
  2834  000E08  D7FC               	bra	u9357
  2835  000E0A  F000               	nop	
  2836                           
  2837                           ;main.c: 869:             printf("backwards");
  2838  000E0C  0EB1               	movlw	low STR_63
  2839  000E0E  0100               	movlb	0	; () banked
  2840  000E10  6FED               	movwf	printf@fmt& (0+255),b
  2841  000E12  0EFF               	movlw	high STR_63
  2842  000E14  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2843  000E16  ECFB  F01E         	call	_printf	;wreg free
  2844                           
  2845                           ;main.c: 870:             _delay((unsigned long)((1000)*(10000000/4000.0)));
  2846  000E1A  0E0D               	movlw	13
  2847  000E1C  0101               	movlb	1	; () banked
  2848  000E1E  6F5B               	movwf	(??_main+1)& (0+255),b
  2849  000E20  0EAF               	movlw	175
  2850  000E22  6F5A               	movwf	??_main& (0+255),b
  2851  000E24  0EB6               	movlw	182
  2852  000E26                     u9367:
  2853  000E26  2EE8               	decfsz	wreg,f,c
  2854  000E28  D7FE               	bra	u9367
  2855  000E2A  2F5A               	decfsz	??_main& (0+255),f,b
  2856  000E2C  D7FC               	bra	u9367
  2857  000E2E  2F5B               	decfsz	(??_main+1)& (0+255),f,b
  2858  000E30  D7FA               	bra	u9367
  2859  000E32  F000               	nop	
  2860                           
  2861                           ;main.c: 871:             sens = 0;
  2862  000E34  0E00               	movlw	0
  2863  000E36  6E59               	movwf	_sens+1,c	;volatile
  2864  000E38  0E00               	movlw	0
  2865  000E3A  6E58               	movwf	_sens,c	;volatile
  2866                           
  2867                           ;main.c: 872:             send = 1;
  2868  000E3C  0E01               	movlw	1
  2869  000E3E  6E6D               	movwf	_send,c
  2870                           
  2871                           ;main.c: 873:             break;
  2872  000E40  EF07  F000         	goto	start
  2873  000E44                     l8563:
  2874                           
  2875                           ;main.c: 875:         t_count = 5;
  2876  000E44  0E00               	movlw	0
  2877  000E46  0101               	movlb	1	; () banked
  2878  000E48  6FBF               	movwf	(main@t_count+1)& (0+255),b
  2879  000E4A  0E05               	movlw	5
  2880  000E4C  6FBE               	movwf	main@t_count& (0+255),b
  2881  000E4E  D526               	goto	l8395
  2882  000E50                     __end_of_main:
  2883                           	opt callstack 0
  2884                           
  2885 ;; *************** function _ultrasonic_main *****************
  2886 ;; Defined at:
  2887 ;;		line 291 in file "main.c"
  2888 ;; Parameters:    Size  Location     Type
  2889 ;;		None
  2890 ;; Auto vars:     Size  Location     Type
  2891 ;;  min_us_dist     2   10[BANK1 ] int 
  2892 ;;  steps2_adj      2    8[BANK1 ] int 
  2893 ;;  step2_offset    2    6[BANK1 ] int 
  2894 ;;  sensed          2    4[BANK1 ] int 
  2895 ;;  min_us_dist     2    0        int 
  2896 ;; Return value:  Size  Location     Type
  2897 ;;                  2  124[BANK0 ] int 
  2898 ;; Registers used:
  2899 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2900 ;; Tracked objects:
  2901 ;;		On entry : 0/0
  2902 ;;		On exit  : 0/0
  2903 ;;		Unchanged: 0/0
  2904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2905 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2906 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2907 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2908 ;;      Totals:         0       2      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2909 ;;Total ram usage:       14 bytes
  2910 ;; Hardware stack levels used:    1
  2911 ;; Hardware stack levels required when called:   15
  2912 ;; This function calls:
  2913 ;;		_abs
  2914 ;;		_lcdInst
  2915 ;;		_min
  2916 ;;		_print_echo
  2917 ;;		_printf
  2918 ;;		_trig
  2919 ;; This function is called by:
  2920 ;;		_main
  2921 ;; This function uses a non-reentrant model
  2922 ;;
  2923                           
  2924                           	psect	text1
  2925  002582                     __ptext1:
  2926                           	opt callstack 0
  2927  002582                     _ultrasonic_main:
  2928                           	opt callstack 15
  2929                           
  2930                           ;main.c: 292:     TRISBbits.RB0 = 0;
  2931                           
  2932                           ;incstack = 0
  2933  002582  9093               	bcf	3987,0,c	;volatile
  2934                           
  2935                           ;main.c: 293:     LATBbits.LATB0 = 1;
  2936  002584  808A               	bsf	3978,0,c	;volatile
  2937                           
  2938                           ;main.c: 295:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  2939  002586  0E01               	movlw	1
  2940  002588  EC61  F01F         	call	_lcdInst
  2941  00258C  0E11               	movlw	17
  2942  00258E  0101               	movlb	1	; () banked
  2943  002590  6F00               	movwf	??_ultrasonic_main& (0+255),b
  2944  002592  0E3A               	movlw	58
  2945  002594                     u9377:
  2946  002594  2EE8               	decfsz	wreg,f,c
  2947  002596  D7FE               	bra	u9377
  2948  002598  2F00               	decfsz	??_ultrasonic_main& (0+255),f,b
  2949  00259A  D7FC               	bra	u9377
  2950  00259C  F000               	nop	
  2951                           
  2952                           ;main.c: 296:     printf("or here");
  2953  00259E  0EEC               	movlw	low STR_18
  2954  0025A0  0100               	movlb	0	; () banked
  2955  0025A2  6FED               	movwf	printf@fmt& (0+255),b
  2956  0025A4  0EFF               	movlw	high STR_18
  2957  0025A6  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2958  0025A8  ECFB  F01E         	call	_printf	;wreg free
  2959                           
  2960                           ;main.c: 297:  TRISB = 0b11110000;
  2961  0025AC  0EF0               	movlw	240
  2962  0025AE  6E93               	movwf	3987,c	;volatile
  2963                           
  2964                           ;main.c: 298:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  2965  0025B0  0E01               	movlw	1
  2966  0025B2  EC61  F01F         	call	_lcdInst
  2967  0025B6  0E11               	movlw	17
  2968  0025B8  0101               	movlb	1	; () banked
  2969  0025BA  6F00               	movwf	??_ultrasonic_main& (0+255),b
  2970  0025BC  0E3A               	movlw	58
  2971  0025BE                     u9387:
  2972  0025BE  2EE8               	decfsz	wreg,f,c
  2973  0025C0  D7FE               	bra	u9387
  2974  0025C2  2F00               	decfsz	??_ultrasonic_main& (0+255),f,b
  2975  0025C4  D7FC               	bra	u9387
  2976  0025C6  F000               	nop	
  2977                           
  2978                           ;main.c: 299:     printf("break heree?");
  2979  0025C8  0EF0               	movlw	low STR_19
  2980  0025CA  0100               	movlb	0	; () banked
  2981  0025CC  6FED               	movwf	printf@fmt& (0+255),b
  2982  0025CE  0EFE               	movlw	high STR_19
  2983  0025D0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2984  0025D2  ECFB  F01E         	call	_printf	;wreg free
  2985                           
  2986                           ;main.c: 300:     RBIF = 0;
  2987  0025D6  90F2               	bcf	4082,0,c	;volatile
  2988                           
  2989                           ;main.c: 301:  RBIE = 1;
  2990  0025D8  86F2               	bsf	4082,3,c	;volatile
  2991                           
  2992                           ;main.c: 303:     int sensed = 0;
  2993  0025DA  0E00               	movlw	0
  2994  0025DC  0101               	movlb	1	; () banked
  2995  0025DE  6F05               	movwf	(ultrasonic_main@sensed+1)& (0+255),b
  2996  0025E0  0E00               	movlw	0
  2997  0025E2  6F04               	movwf	ultrasonic_main@sensed& (0+255),b
  2998                           
  2999                           ;main.c: 305:     int steps2_adj=0;
  3000  0025E4  0E00               	movlw	0
  3001  0025E6  6F09               	movwf	(ultrasonic_main@steps2_adj+1)& (0+255),b
  3002  0025E8  0E00               	movlw	0
  3003  0025EA  6F08               	movwf	ultrasonic_main@steps2_adj& (0+255),b
  3004                           
  3005                           ;main.c: 306:     int step2_offset=0;
  3006  0025EC  0E00               	movlw	0
  3007  0025EE  6F07               	movwf	(ultrasonic_main@step2_offset+1)& (0+255),b
  3008  0025F0  0E00               	movlw	0
  3009  0025F2  6F06               	movwf	ultrasonic_main@step2_offset& (0+255),b
  3010                           
  3011                           ;main.c: 307:     while(send){
  3012  0025F4  D070               	goto	l464
  3013  0025F6                     l7925:
  3014                           
  3015                           ; BSR set to: 1
  3016                           ;main.c: 308:         for (meas=0; meas<3;meas++){
  3017  0025F6  0E00               	movlw	0
  3018  0025F8  6E51               	movwf	_meas+1,c	;volatile
  3019  0025FA  0E00               	movlw	0
  3020  0025FC  6E50               	movwf	_meas,c	;volatile
  3021  0025FE                     l7927:
  3022                           
  3023                           ; BSR set to: 1
  3024  0025FE  BE51               	btfsc	_meas+1,7,c	;volatile
  3025  002600  D006               	goto	l7931
  3026  002602  5051               	movf	_meas+1,w,c	;volatile
  3027  002604  E160               	bnz	l7963
  3028  002606  0E03               	movlw	3
  3029  002608  5C50               	subwf	_meas,w,c	;volatile
  3030  00260A  B0D8               	btfsc	status,0,c
  3031  00260C  D05C               	goto	l7963
  3032  00260E                     l7931:
  3033                           
  3034                           ; BSR set to: 1
  3035                           ;main.c: 309:         trig();
  3036  00260E  ECE6  F017         	call	_trig	;wreg free
  3037                           
  3038                           ;main.c: 310:         RBIE = 0;
  3039  002612  96F2               	bcf	4082,3,c	;volatile
  3040                           
  3041                           ;main.c: 311:         print_echo();
  3042  002614  ECCA  F011         	call	_print_echo	;wreg free
  3043                           
  3044                           ;main.c: 312:         RBIE = 1;
  3045  002618  86F2               	bsf	4082,3,c	;volatile
  3046                           
  3047                           ;main.c: 313:         int min_us_dist = min(a, 4);
  3048  00261A  0E61               	movlw	low _a
  3049  00261C  0100               	movlb	0	; () banked
  3050  00261E  6F80               	movwf	min@array& (0+255),b
  3051  002620  0E00               	movlw	high _a
  3052  002622  6F81               	movwf	(min@array+1)& (0+255),b
  3053  002624  0E00               	movlw	0
  3054  002626  6F83               	movwf	(min@size+1)& (0+255),b
  3055  002628  0E04               	movlw	4
  3056  00262A  6F82               	movwf	min@size& (0+255),b
  3057  00262C  EC5E  F017         	call	_min	;wreg free
  3058  002630  C080  F10A         	movff	?_min,ultrasonic_main@min_us_dist_967
  3059  002634  C081  F10B         	movff	?_min+1,ultrasonic_main@min_us_dist_967+1
  3060                           
  3061                           ;main.c: 314:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  3062  002638  0E01               	movlw	1
  3063  00263A  EC61  F01F         	call	_lcdInst
  3064  00263E  0E11               	movlw	17
  3065  002640  0101               	movlb	1	; () banked
  3066  002642  6F00               	movwf	??_ultrasonic_main& (0+255),b
  3067  002644  0E3A               	movlw	58
  3068  002646                     u9397:
  3069  002646  2EE8               	decfsz	wreg,f,c
  3070  002648  D7FE               	bra	u9397
  3071  00264A  2F00               	decfsz	??_ultrasonic_main& (0+255),f,b
  3072  00264C  D7FC               	bra	u9397
  3073  00264E  F000               	nop	
  3074                           
  3075                           ;main.c: 315:         printf("minimum %d", min_us_dist);
  3076  002650  0E5E               	movlw	low STR_20
  3077  002652  0100               	movlb	0	; () banked
  3078  002654  6FED               	movwf	printf@fmt& (0+255),b
  3079  002656  0EFF               	movlw	high STR_20
  3080  002658  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3081  00265A  C10A  F0EF         	movff	ultrasonic_main@min_us_dist_967,?_printf+2
  3082  00265E  C10B  F0F0         	movff	ultrasonic_main@min_us_dist_967+1,?_printf+3
  3083  002662  ECFB  F01E         	call	_printf	;wreg free
  3084                           
  3085                           ;main.c: 317:         if (min_us_dist<14){
  3086  002666  0101               	movlb	1	; () banked
  3087  002668  BF0B               	btfsc	(ultrasonic_main@min_us_dist_967+1)& (0+255),7,b
  3088  00266A  D006               	goto	u8520
  3089  00266C  510B               	movf	(ultrasonic_main@min_us_dist_967+1)& (0+255),w,b
  3090  00266E  E108               	bnz	l7951
  3091  002670  0E0E               	movlw	14
  3092  002672  5D0A               	subwf	ultrasonic_main@min_us_dist_967& (0+255),w,b
  3093  002674  B0D8               	btfsc	status,0,c
  3094  002676  D004               	goto	l7951
  3095  002678                     u8520:
  3096                           
  3097                           ; BSR set to: 1
  3098                           ;main.c: 318:             step2_offset = 0;
  3099  002678  0E00               	movlw	0
  3100  00267A  6F07               	movwf	(ultrasonic_main@step2_offset+1)& (0+255),b
  3101  00267C  0E00               	movlw	0
  3102  00267E  6F06               	movwf	ultrasonic_main@step2_offset& (0+255),b
  3103  002680                     l7951:
  3104                           
  3105                           ; BSR set to: 1
  3106                           ;main.c: 320:         if (min_us_dist>=14){
  3107  002680  BF0B               	btfsc	(ultrasonic_main@min_us_dist_967+1)& (0+255),7,b
  3108  002682  D015               	goto	l7955
  3109  002684  510B               	movf	(ultrasonic_main@min_us_dist_967+1)& (0+255),w,b
  3110  002686  E104               	bnz	u8530
  3111  002688  0E0E               	movlw	14
  3112  00268A  5D0A               	subwf	ultrasonic_main@min_us_dist_967& (0+255),w,b
  3113  00268C  A0D8               	btfss	status,0,c
  3114  00268E  D00F               	goto	l7955
  3115  002690                     u8530:
  3116                           
  3117                           ; BSR set to: 1
  3118                           ;main.c: 321:         step2_offset = abs(min_us_dist - 14);
  3119  002690  0EF2               	movlw	242
  3120  002692  250A               	addwf	ultrasonic_main@min_us_dist_967& (0+255),w,b
  3121  002694  0100               	movlb	0	; () banked
  3122  002696  6F92               	movwf	abs@a& (0+255),b
  3123  002698  0EFF               	movlw	255
  3124  00269A  0101               	movlb	1	; () banked
  3125  00269C  210B               	addwfc	(ultrasonic_main@min_us_dist_967+1)& (0+255),w,b
  3126  00269E  0100               	movlb	0	; () banked
  3127  0026A0  6F93               	movwf	(abs@a+1)& (0+255),b
  3128  0026A2  EC3A  F01E         	call	_abs	;wreg free
  3129  0026A6  C092  F106         	movff	?_abs,ultrasonic_main@step2_offset
  3130  0026AA  C093  F107         	movff	?_abs+1,ultrasonic_main@step2_offset+1
  3131  0026AE                     l7955:
  3132                           
  3133                           ;main.c: 323:         steps2_adj = 110 + step2_offset;
  3134  0026AE  0E6E               	movlw	110
  3135  0026B0  0101               	movlb	1	; () banked
  3136  0026B2  2506               	addwf	ultrasonic_main@step2_offset& (0+255),w,b
  3137  0026B4  6F08               	movwf	ultrasonic_main@steps2_adj& (0+255),b
  3138  0026B6  0E00               	movlw	0
  3139  0026B8  2107               	addwfc	(ultrasonic_main@step2_offset+1)& (0+255),w,b
  3140  0026BA  6F09               	movwf	(ultrasonic_main@steps2_adj+1)& (0+255),b
  3141                           
  3142                           ; BSR set to: 1
  3143                           ;main.c: 324:         sensed++;
  3144  0026BC  4B04               	infsnz	ultrasonic_main@sensed& (0+255),f,b
  3145  0026BE  2B05               	incf	(ultrasonic_main@sensed+1)& (0+255),f,b
  3146                           
  3147                           ; BSR set to: 1
  3148                           ;main.c: 327:         }
  3149  0026C0  4A50               	infsnz	_meas,f,c	;volatile
  3150  0026C2  2A51               	incf	_meas+1,f,c	;volatile
  3151  0026C4  D79C               	goto	l7927
  3152  0026C6                     l7963:
  3153                           
  3154                           ; BSR set to: 1
  3155                           ;main.c: 328:         if (sensed>2){
  3156  0026C6  BF05               	btfsc	(ultrasonic_main@sensed+1)& (0+255),7,b
  3157  0026C8  D006               	goto	l464
  3158  0026CA  5105               	movf	(ultrasonic_main@sensed+1)& (0+255),w,b
  3159  0026CC  E107               	bnz	l7969
  3160  0026CE  0E03               	movlw	3
  3161  0026D0  5D04               	subwf	ultrasonic_main@sensed& (0+255),w,b
  3162  0026D2  B0D8               	btfsc	status,0,c
  3163  0026D4  D003               	goto	u8550
  3164  0026D6                     l464:
  3165                           
  3166                           ; BSR set to: 1
  3167                           ;main.c: 307:     while(send){
  3168  0026D6  506D               	movf	_send,w,c
  3169  0026D8  A4D8               	btfss	status,2,c
  3170  0026DA  D78D               	goto	l7925
  3171  0026DC                     u8550:
  3172  0026DC                     l7969:
  3173                           
  3174                           ; BSR set to: 1
  3175                           ;main.c: 375:          { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));}
      +                          ;
  3176  0026DC  0E01               	movlw	1
  3177  0026DE  EC61  F01F         	call	_lcdInst
  3178  0026E2  0E11               	movlw	17
  3179  0026E4  0101               	movlb	1	; () banked
  3180  0026E6  6F00               	movwf	??_ultrasonic_main& (0+255),b
  3181  0026E8  0E3A               	movlw	58
  3182  0026EA                     u9407:
  3183  0026EA  2EE8               	decfsz	wreg,f,c
  3184  0026EC  D7FE               	bra	u9407
  3185  0026EE  2F00               	decfsz	??_ultrasonic_main& (0+255),f,b
  3186  0026F0  D7FC               	bra	u9407
  3187  0026F2  F000               	nop	
  3188                           
  3189                           ;main.c: 376:     printf("stepsadj %d", steps2_adj);
  3190  0026F4  0E23               	movlw	low STR_21
  3191  0026F6  0100               	movlb	0	; () banked
  3192  0026F8  6FED               	movwf	printf@fmt& (0+255),b
  3193  0026FA  0EFF               	movlw	high STR_21
  3194  0026FC  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3195  0026FE  C108  F0EF         	movff	ultrasonic_main@steps2_adj,?_printf+2
  3196  002702  C109  F0F0         	movff	ultrasonic_main@steps2_adj+1,?_printf+3
  3197  002706  ECFB  F01E         	call	_printf	;wreg free
  3198                           
  3199                           ;main.c: 377:     _delay((unsigned long)((1000)*(10000000/4000.0)));
  3200  00270A  0E0D               	movlw	13
  3201  00270C  0101               	movlb	1	; () banked
  3202  00270E  6F01               	movwf	(??_ultrasonic_main+1)& (0+255),b
  3203  002710  0EAF               	movlw	175
  3204  002712  6F00               	movwf	??_ultrasonic_main& (0+255),b
  3205  002714  0EB6               	movlw	182
  3206  002716                     u9417:
  3207  002716  2EE8               	decfsz	wreg,f,c
  3208  002718  D7FE               	bra	u9417
  3209  00271A  2F00               	decfsz	??_ultrasonic_main& (0+255),f,b
  3210  00271C  D7FC               	bra	u9417
  3211  00271E  2F01               	decfsz	(??_ultrasonic_main+1)& (0+255),f,b
  3212  002720  D7FA               	bra	u9417
  3213  002722  F000               	nop	
  3214                           
  3215                           ;main.c: 378:     return steps2_adj;
  3216  002724  C108  F0FC         	movff	ultrasonic_main@steps2_adj,?_ultrasonic_main
  3217  002728  C109  F0FD         	movff	ultrasonic_main@steps2_adj+1,?_ultrasonic_main+1
  3218  00272C  0012               	return		;funcret
  3219  00272E                     __end_of_ultrasonic_main:
  3220                           	opt callstack 0
  3221                           
  3222 ;; *************** function _trig *****************
  3223 ;; Defined at:
  3224 ;;		line 190 in file "main.c"
  3225 ;; Parameters:    Size  Location     Type
  3226 ;;		None
  3227 ;; Auto vars:     Size  Location     Type
  3228 ;;		None
  3229 ;; Return value:  Size  Location     Type
  3230 ;;                  1    wreg      void 
  3231 ;; Registers used:
  3232 ;;		wreg, status,2, status,0
  3233 ;; Tracked objects:
  3234 ;;		On entry : 0/0
  3235 ;;		On exit  : 0/0
  3236 ;;		Unchanged: 0/0
  3237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3240 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3241 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3242 ;;Total ram usage:        2 bytes
  3243 ;; Hardware stack levels used:    1
  3244 ;; Hardware stack levels required when called:    3
  3245 ;; This function calls:
  3246 ;;		Nothing
  3247 ;; This function is called by:
  3248 ;;		_ultrasonic_main
  3249 ;; This function uses a non-reentrant model
  3250 ;;
  3251                           
  3252                           	psect	text2
  3253  002FCC                     __ptext2:
  3254                           	opt callstack 0
  3255  002FCC                     _trig:
  3256                           	opt callstack 26
  3257                           
  3258                           ;main.c: 191:     for(b=1; b<5; b++){
  3259                           
  3260                           ;incstack = 0
  3261  002FCC  0E00               	movlw	0
  3262  002FCE  6E5B               	movwf	_b+1,c
  3263  002FD0  0E01               	movlw	1
  3264  002FD2  6E5A               	movwf	_b,c
  3265  002FD4  BE5B               	btfsc	_b+1,7,c
  3266  002FD6  D004               	goto	l7615
  3267  002FD8  505B               	movf	_b+1,w,c
  3268  002FDA  E101               	bnz	u8100
  3269  002FDC  D072               	goto	L1
  3270  002FDE                     u8100:
  3271  002FDE  0012               	return	
  3272  002FE0                     l7615:
  3273                           
  3274                           ;main.c: 192:         TMR1H = 0;
  3275  002FE0  0E00               	movlw	0
  3276  002FE2  6ECF               	movwf	4047,c	;volatile
  3277                           
  3278                           ;main.c: 193:         TMR1L = 0;
  3279  002FE4  0E00               	movlw	0
  3280  002FE6  6ECE               	movwf	4046,c	;volatile
  3281                           
  3282                           ;main.c: 194:         if(b==1){
  3283  002FE8  045A               	decf	_b,w,c
  3284  002FEA  105B               	iorwf	_b+1,w,c
  3285  002FEC  A4D8               	btfss	status,2,c
  3286  002FEE  D015               	goto	l7627
  3287                           
  3288                           ;main.c: 195:             RBIE = 0;
  3289  002FF0  96F2               	bcf	4082,3,c	;volatile
  3290                           
  3291                           ;main.c: 196:             RD1 = 1;
  3292  002FF2  8283               	bsf	3971,1,c	;volatile
  3293                           
  3294                           ;main.c: 197:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  3295  002FF4  0E08               	movlw	8
  3296  002FF6                     u9427:
  3297  002FF6  2EE8               	decfsz	wreg,f,c
  3298  002FF8  D7FE               	bra	u9427
  3299  002FFA  F000               	nop	
  3300                           
  3301                           ;main.c: 198:             RD1 = 0;
  3302  002FFC  9283               	bcf	3971,1,c	;volatile
  3303                           
  3304                           ;main.c: 200:             RBIE = 1;
  3305  002FFE  86F2               	bsf	4082,3,c	;volatile
  3306                           
  3307                           ;main.c: 201:             _delay((unsigned long)((135)*(10000000/4000.0)));
  3308  003000  0E02               	movlw	2
  3309  003002  0100               	movlb	0	; () banked
  3310  003004  6F81               	movwf	(??_trig+1)& (0+255),b
  3311  003006  0EB7               	movlw	183
  3312  003008  6F80               	movwf	??_trig& (0+255),b
  3313  00300A  0E4C               	movlw	76
  3314  00300C                     u9437:
  3315  00300C  2EE8               	decfsz	wreg,f,c
  3316  00300E  D7FE               	bra	u9437
  3317  003010  2F80               	decfsz	??_trig& (0+255),f,b
  3318  003012  D7FC               	bra	u9437
  3319  003014  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  3320  003016  D7FA               	bra	u9437
  3321  003018  F000               	nop	
  3322  00301A                     l7627:
  3323                           
  3324                           ;main.c: 203:         if(b==2){
  3325  00301A  0E02               	movlw	2
  3326  00301C  185A               	xorwf	_b,w,c
  3327  00301E  105B               	iorwf	_b+1,w,c
  3328  003020  A4D8               	btfss	status,2,c
  3329  003022  D015               	goto	l7637
  3330                           
  3331                           ;main.c: 204:             RBIE = 0;
  3332  003024  96F2               	bcf	4082,3,c	;volatile
  3333                           
  3334                           ;main.c: 205:             RD0 = 1;
  3335  003026  8083               	bsf	3971,0,c	;volatile
  3336                           
  3337                           ;main.c: 206:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  3338  003028  0E08               	movlw	8
  3339  00302A                     u9447:
  3340  00302A  2EE8               	decfsz	wreg,f,c
  3341  00302C  D7FE               	bra	u9447
  3342  00302E  F000               	nop	
  3343                           
  3344                           ;main.c: 207:             RD0 = 0;
  3345  003030  9083               	bcf	3971,0,c	;volatile
  3346                           
  3347                           ;main.c: 209:             RBIE = 1;
  3348  003032  86F2               	bsf	4082,3,c	;volatile
  3349                           
  3350                           ;main.c: 210:             _delay((unsigned long)((135)*(10000000/4000.0)));
  3351  003034  0E02               	movlw	2
  3352  003036  0100               	movlb	0	; () banked
  3353  003038  6F81               	movwf	(??_trig+1)& (0+255),b
  3354  00303A  0EB7               	movlw	183
  3355  00303C  6F80               	movwf	??_trig& (0+255),b
  3356  00303E  0E4C               	movlw	76
  3357  003040                     u9457:
  3358  003040  2EE8               	decfsz	wreg,f,c
  3359  003042  D7FE               	bra	u9457
  3360  003044  2F80               	decfsz	??_trig& (0+255),f,b
  3361  003046  D7FC               	bra	u9457
  3362  003048  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  3363  00304A  D7FA               	bra	u9457
  3364  00304C  F000               	nop	
  3365  00304E                     l7637:
  3366                           
  3367                           ;main.c: 212:         if(b==3){
  3368  00304E  0E03               	movlw	3
  3369  003050  185A               	xorwf	_b,w,c
  3370  003052  105B               	iorwf	_b+1,w,c
  3371  003054  A4D8               	btfss	status,2,c
  3372  003056  D015               	goto	l7647
  3373                           
  3374                           ;main.c: 213:             RBIE = 0;
  3375  003058  96F2               	bcf	4082,3,c	;volatile
  3376                           
  3377                           ;main.c: 214:             RB3 = 1;
  3378  00305A  8681               	bsf	3969,3,c	;volatile
  3379                           
  3380                           ;main.c: 215:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  3381  00305C  0E08               	movlw	8
  3382  00305E                     u9467:
  3383  00305E  2EE8               	decfsz	wreg,f,c
  3384  003060  D7FE               	bra	u9467
  3385  003062  F000               	nop	
  3386                           
  3387                           ;main.c: 216:             RB3 = 0;
  3388  003064  9681               	bcf	3969,3,c	;volatile
  3389                           
  3390                           ;main.c: 218:             RBIE = 1;
  3391  003066  86F2               	bsf	4082,3,c	;volatile
  3392                           
  3393                           ;main.c: 219:             _delay((unsigned long)((135)*(10000000/4000.0)));
  3394  003068  0E02               	movlw	2
  3395  00306A  0100               	movlb	0	; () banked
  3396  00306C  6F81               	movwf	(??_trig+1)& (0+255),b
  3397  00306E  0EB7               	movlw	183
  3398  003070  6F80               	movwf	??_trig& (0+255),b
  3399  003072  0E4C               	movlw	76
  3400  003074                     u9477:
  3401  003074  2EE8               	decfsz	wreg,f,c
  3402  003076  D7FE               	bra	u9477
  3403  003078  2F80               	decfsz	??_trig& (0+255),f,b
  3404  00307A  D7FC               	bra	u9477
  3405  00307C  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  3406  00307E  D7FA               	bra	u9477
  3407  003080  F000               	nop	
  3408  003082                     l7647:
  3409                           
  3410                           ;main.c: 221:         if(b==4){
  3411  003082  0E04               	movlw	4
  3412  003084  185A               	xorwf	_b,w,c
  3413  003086  105B               	iorwf	_b+1,w,c
  3414  003088  A4D8               	btfss	status,2,c
  3415  00308A  D015               	goto	l7657
  3416                           
  3417                           ;main.c: 222:             RBIE = 0;
  3418  00308C  96F2               	bcf	4082,3,c	;volatile
  3419                           
  3420                           ;main.c: 223:             RB2 = 1;
  3421  00308E  8481               	bsf	3969,2,c	;volatile
  3422                           
  3423                           ;main.c: 224:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  3424  003090  0E08               	movlw	8
  3425  003092                     u9487:
  3426  003092  2EE8               	decfsz	wreg,f,c
  3427  003094  D7FE               	bra	u9487
  3428  003096  F000               	nop	
  3429                           
  3430                           ;main.c: 225:             RB2 = 0;
  3431  003098  9481               	bcf	3969,2,c	;volatile
  3432                           
  3433                           ;main.c: 227:             RBIE = 1;
  3434  00309A  86F2               	bsf	4082,3,c	;volatile
  3435                           
  3436                           ;main.c: 228:             _delay((unsigned long)((135)*(10000000/4000.0)));
  3437  00309C  0E02               	movlw	2
  3438  00309E  0100               	movlb	0	; () banked
  3439  0030A0  6F81               	movwf	(??_trig+1)& (0+255),b
  3440  0030A2  0EB7               	movlw	183
  3441  0030A4  6F80               	movwf	??_trig& (0+255),b
  3442  0030A6  0E4C               	movlw	76
  3443  0030A8                     u9497:
  3444  0030A8  2EE8               	decfsz	wreg,f,c
  3445  0030AA  D7FE               	bra	u9497
  3446  0030AC  2F80               	decfsz	??_trig& (0+255),f,b
  3447  0030AE  D7FC               	bra	u9497
  3448  0030B0  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  3449  0030B2  D7FA               	bra	u9497
  3450  0030B4  F000               	nop	
  3451  0030B6                     l7657:
  3452                           
  3453                           ;main.c: 230:     }
  3454  0030B6  4A5A               	infsnz	_b,f,c
  3455  0030B8  2A5B               	incf	_b+1,f,c
  3456  0030BA  BE5B               	btfsc	_b+1,7,c
  3457  0030BC  D791               	goto	l7615
  3458  0030BE  505B               	movf	_b+1,w,c
  3459  0030C0  E105               	bnz	u8150
  3460  0030C2                     L1:
  3461  0030C2  0E05               	movlw	5
  3462  0030C4  5C5A               	subwf	_b,w,c
  3463  0030C6  B0D8               	btfsc	status,0,c
  3464  0030C8  0012               	return	
  3465  0030CA  D78A               	goto	l7615
  3466  0030CC                     u8150:
  3467  0030CC  0012               	return		;funcret
  3468  0030CE                     __end_of_trig:
  3469                           	opt callstack 0
  3470                           
  3471 ;; *************** function _print_echo *****************
  3472 ;; Defined at:
  3473 ;;		line 233 in file "main.c"
  3474 ;; Parameters:    Size  Location     Type
  3475 ;;		None
  3476 ;; Auto vars:     Size  Location     Type
  3477 ;;		None
  3478 ;; Return value:  Size  Location     Type
  3479 ;;                  1    wreg      void 
  3480 ;; Registers used:
  3481 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3482 ;; Tracked objects:
  3483 ;;		On entry : 0/0
  3484 ;;		On exit  : 0/0
  3485 ;;		Unchanged: 0/0
  3486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3489 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3490 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3491 ;;Total ram usage:        1 bytes
  3492 ;; Hardware stack levels used:    1
  3493 ;; Hardware stack levels required when called:   14
  3494 ;; This function calls:
  3495 ;;		_lcdInst
  3496 ;;		_printf
  3497 ;; This function is called by:
  3498 ;;		_ultrasonic_main
  3499 ;; This function uses a non-reentrant model
  3500 ;;
  3501                           
  3502                           	psect	text3
  3503  002394                     __ptext3:
  3504                           	opt callstack 0
  3505  002394                     _print_echo:
  3506                           	opt callstack 15
  3507                           
  3508                           ;main.c: 234:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  3509                           
  3510                           ;incstack = 0
  3511  002394  0E01               	movlw	1
  3512  002396  EC61  F01F         	call	_lcdInst
  3513  00239A  0E11               	movlw	17
  3514  00239C  0100               	movlb	0	; () banked
  3515  00239E  6FFB               	movwf	??_print_echo& (0+255),b
  3516  0023A0  0E3A               	movlw	58
  3517  0023A2                     u9507:
  3518  0023A2  2EE8               	decfsz	wreg,f,c
  3519  0023A4  D7FE               	bra	u9507
  3520  0023A6  2FFB               	decfsz	??_print_echo& (0+255),f,b
  3521  0023A8  D7FC               	bra	u9507
  3522  0023AA  F000               	nop	
  3523                           
  3524                           ;main.c: 235:     if(a[0]>=2 && a[0]<=400){
  3525  0023AC  BE62               	btfsc	_a+1,7,c
  3526  0023AE  D01D               	goto	l7669
  3527  0023B0  5062               	movf	_a+1,w,c
  3528  0023B2  E104               	bnz	u8160
  3529  0023B4  0E02               	movlw	2
  3530  0023B6  5C61               	subwf	_a,w,c
  3531  0023B8  A0D8               	btfss	status,0,c
  3532  0023BA  D017               	goto	l7669
  3533  0023BC                     u8160:
  3534  0023BC  BE62               	btfsc	_a+1,7,c
  3535  0023BE  D006               	goto	u8170
  3536  0023C0  0E91               	movlw	145
  3537  0023C2  5C61               	subwf	_a,w,c
  3538  0023C4  0E01               	movlw	1
  3539  0023C6  5862               	subwfb	_a+1,w,c
  3540  0023C8  B0D8               	btfsc	status,0,c
  3541  0023CA  D00F               	goto	l7669
  3542  0023CC                     u8170:
  3543                           
  3544                           ;main.c: 236:         printf("Dist1=%d,Avg=%d ",a[0],dist_final[0][5]);
  3545  0023CC  0EE8               	movlw	low STR_10
  3546  0023CE  0100               	movlb	0	; () banked
  3547  0023D0  6FED               	movwf	printf@fmt& (0+255),b
  3548  0023D2  0EFD               	movlw	high STR_10
  3549  0023D4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3550  0023D6  C061  F0EF         	movff	_a,?_printf+2
  3551  0023DA  C062  F0F0         	movff	_a+1,?_printf+3
  3552  0023DE  C25A  F0F1         	movff	_dist_final+10,?_printf+4
  3553  0023E2  C25B  F0F2         	movff	_dist_final+11,?_printf+5
  3554  0023E6  ECFB  F01E         	call	_printf	;wreg free
  3555  0023EA                     l7669:
  3556                           
  3557                           ;main.c: 238:     if(!(a[0]>=2 && a[0]<=400)){
  3558  0023EA  BE62               	btfsc	_a+1,7,c
  3559  0023EC  D00E               	goto	u8190
  3560  0023EE  5062               	movf	_a+1,w,c
  3561  0023F0  E104               	bnz	u8180
  3562  0023F2  0E02               	movlw	2
  3563  0023F4  5C61               	subwf	_a,w,c
  3564  0023F6  A0D8               	btfss	status,0,c
  3565  0023F8  D008               	goto	u8190
  3566  0023FA                     u8180:
  3567  0023FA  BE62               	btfsc	_a+1,7,c
  3568  0023FC  D00D               	goto	l7675
  3569  0023FE  0E91               	movlw	145
  3570  002400  5C61               	subwf	_a,w,c
  3571  002402  0E01               	movlw	1
  3572  002404  5862               	subwfb	_a+1,w,c
  3573  002406  A0D8               	btfss	status,0,c
  3574  002408  D007               	goto	l7675
  3575  00240A                     u8190:
  3576                           
  3577                           ;main.c: 239:         printf("Dist1 = X");
  3578  00240A  0E7F               	movlw	low STR_11
  3579  00240C  0100               	movlb	0	; () banked
  3580  00240E  6FED               	movwf	printf@fmt& (0+255),b
  3581  002410  0EFF               	movlw	high STR_11
  3582  002412  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3583  002414  ECFB  F01E         	call	_printf	;wreg free
  3584  002418                     l7675:
  3585                           
  3586                           ;main.c: 241:     if(a[1]>=2 && a[1]<=400){
  3587  002418  BE64               	btfsc	_a+3,7,c
  3588  00241A  D020               	goto	l7683
  3589  00241C  5064               	movf	_a+3,w,c
  3590  00241E  E104               	bnz	u8200
  3591  002420  0E02               	movlw	2
  3592  002422  5C63               	subwf	_a+2,w,c
  3593  002424  A0D8               	btfss	status,0,c
  3594  002426  D01A               	goto	l7683
  3595  002428                     u8200:
  3596  002428  BE64               	btfsc	_a+3,7,c
  3597  00242A  D006               	goto	u8210
  3598  00242C  0E91               	movlw	145
  3599  00242E  5C63               	subwf	_a+2,w,c
  3600  002430  0E01               	movlw	1
  3601  002432  5864               	subwfb	_a+3,w,c
  3602  002434  B0D8               	btfsc	status,0,c
  3603  002436  D012               	goto	l7683
  3604  002438                     u8210:
  3605  002438  0EC0               	movlw	192
  3606  00243A  EC61  F01F         	call	_lcdInst
  3607                           
  3608                           ;main.c: 243:         printf("Dist2=%d,Avg=%d",a[1],dist_final[1][5]);
  3609  00243E  0E4D               	movlw	low STR_12
  3610  002440  0100               	movlb	0	; () banked
  3611  002442  6FED               	movwf	printf@fmt& (0+255),b
  3612  002444  0EFE               	movlw	high STR_12
  3613  002446  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3614  002448  C063  F0EF         	movff	_a+2,?_printf+2
  3615  00244C  C064  F0F0         	movff	_a+3,?_printf+3
  3616  002450  C266  F0F1         	movff	_dist_final+22,?_printf+4
  3617  002454  C267  F0F2         	movff	_dist_final+23,?_printf+5
  3618  002458  ECFB  F01E         	call	_printf	;wreg free
  3619  00245C                     l7683:
  3620                           
  3621                           ;main.c: 245:     if(!(a[1]>=2 && a[1]<=400)){
  3622  00245C  BE64               	btfsc	_a+3,7,c
  3623  00245E  D00E               	goto	u8230
  3624  002460  5064               	movf	_a+3,w,c
  3625  002462  E104               	bnz	u8220
  3626  002464  0E02               	movlw	2
  3627  002466  5C63               	subwf	_a+2,w,c
  3628  002468  A0D8               	btfss	status,0,c
  3629  00246A  D008               	goto	u8230
  3630  00246C                     u8220:
  3631  00246C  BE64               	btfsc	_a+3,7,c
  3632  00246E  D010               	goto	l7691
  3633  002470  0E91               	movlw	145
  3634  002472  5C63               	subwf	_a+2,w,c
  3635  002474  0E01               	movlw	1
  3636  002476  5864               	subwfb	_a+3,w,c
  3637  002478  A0D8               	btfss	status,0,c
  3638  00247A  D00A               	goto	l7691
  3639  00247C                     u8230:
  3640  00247C  0EC0               	movlw	192
  3641  00247E  EC61  F01F         	call	_lcdInst
  3642                           
  3643                           ;main.c: 247:         printf("Dist2 = X");
  3644  002482  0E89               	movlw	low STR_13
  3645  002484  0100               	movlb	0	; () banked
  3646  002486  6FED               	movwf	printf@fmt& (0+255),b
  3647  002488  0EFF               	movlw	high STR_13
  3648  00248A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3649  00248C  ECFB  F01E         	call	_printf	;wreg free
  3650  002490                     l7691:
  3651                           
  3652                           ;main.c: 249:     if(a[2]>=2 && a[2]<=400){
  3653  002490  BE66               	btfsc	_a+5,7,c
  3654  002492  D020               	goto	l7699
  3655  002494  5066               	movf	_a+5,w,c
  3656  002496  E104               	bnz	u8240
  3657  002498  0E02               	movlw	2
  3658  00249A  5C65               	subwf	_a+4,w,c
  3659  00249C  A0D8               	btfss	status,0,c
  3660  00249E  D01A               	goto	l7699
  3661  0024A0                     u8240:
  3662  0024A0  BE66               	btfsc	_a+5,7,c
  3663  0024A2  D006               	goto	u8250
  3664  0024A4  0E91               	movlw	145
  3665  0024A6  5C65               	subwf	_a+4,w,c
  3666  0024A8  0E01               	movlw	1
  3667  0024AA  5866               	subwfb	_a+5,w,c
  3668  0024AC  B0D8               	btfsc	status,0,c
  3669  0024AE  D012               	goto	l7699
  3670  0024B0                     u8250:
  3671  0024B0  0E90               	movlw	144
  3672  0024B2  EC61  F01F         	call	_lcdInst
  3673                           
  3674                           ;main.c: 251:         printf("Dist3=%d,Avg=%d",a[2],dist_final[2][5]);
  3675  0024B6  0E5D               	movlw	low STR_14
  3676  0024B8  0100               	movlb	0	; () banked
  3677  0024BA  6FED               	movwf	printf@fmt& (0+255),b
  3678  0024BC  0EFE               	movlw	high STR_14
  3679  0024BE  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3680  0024C0  C065  F0EF         	movff	_a+4,?_printf+2
  3681  0024C4  C066  F0F0         	movff	_a+5,?_printf+3
  3682  0024C8  C272  F0F1         	movff	_dist_final+34,?_printf+4
  3683  0024CC  C273  F0F2         	movff	_dist_final+35,?_printf+5
  3684  0024D0  ECFB  F01E         	call	_printf	;wreg free
  3685  0024D4                     l7699:
  3686                           
  3687                           ;main.c: 253:     if(!(a[2]>=2 && a[2]<=400)){
  3688  0024D4  BE66               	btfsc	_a+5,7,c
  3689  0024D6  D00E               	goto	u8270
  3690  0024D8  5066               	movf	_a+5,w,c
  3691  0024DA  E104               	bnz	u8260
  3692  0024DC  0E02               	movlw	2
  3693  0024DE  5C65               	subwf	_a+4,w,c
  3694  0024E0  A0D8               	btfss	status,0,c
  3695  0024E2  D008               	goto	u8270
  3696  0024E4                     u8260:
  3697  0024E4  BE66               	btfsc	_a+5,7,c
  3698  0024E6  D010               	goto	l7707
  3699  0024E8  0E91               	movlw	145
  3700  0024EA  5C65               	subwf	_a+4,w,c
  3701  0024EC  0E01               	movlw	1
  3702  0024EE  5866               	subwfb	_a+5,w,c
  3703  0024F0  A0D8               	btfss	status,0,c
  3704  0024F2  D00A               	goto	l7707
  3705  0024F4                     u8270:
  3706  0024F4  0E90               	movlw	144
  3707  0024F6  EC61  F01F         	call	_lcdInst
  3708                           
  3709                           ;main.c: 255:         printf("Dist3 = X");
  3710  0024FA  0E93               	movlw	low STR_15
  3711  0024FC  0100               	movlb	0	; () banked
  3712  0024FE  6FED               	movwf	printf@fmt& (0+255),b
  3713  002500  0EFF               	movlw	high STR_15
  3714  002502  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3715  002504  ECFB  F01E         	call	_printf	;wreg free
  3716  002508                     l7707:
  3717                           
  3718                           ;main.c: 257:     if(a[3]>=2 && a[3]<=400){
  3719  002508  BE68               	btfsc	_a+7,7,c
  3720  00250A  D020               	goto	l7715
  3721  00250C  5068               	movf	_a+7,w,c
  3722  00250E  E104               	bnz	u8280
  3723  002510  0E02               	movlw	2
  3724  002512  5C67               	subwf	_a+6,w,c
  3725  002514  A0D8               	btfss	status,0,c
  3726  002516  D01A               	goto	l7715
  3727  002518                     u8280:
  3728  002518  BE68               	btfsc	_a+7,7,c
  3729  00251A  D006               	goto	u8290
  3730  00251C  0E91               	movlw	145
  3731  00251E  5C67               	subwf	_a+6,w,c
  3732  002520  0E01               	movlw	1
  3733  002522  5868               	subwfb	_a+7,w,c
  3734  002524  B0D8               	btfsc	status,0,c
  3735  002526  D012               	goto	l7715
  3736  002528                     u8290:
  3737  002528  0ED0               	movlw	208
  3738  00252A  EC61  F01F         	call	_lcdInst
  3739                           
  3740                           ;main.c: 259:         printf("Dist4=%d,Avg=%d ",a[3],dist_final[3][5]);
  3741  00252E  0EF9               	movlw	low STR_16
  3742  002530  0100               	movlb	0	; () banked
  3743  002532  6FED               	movwf	printf@fmt& (0+255),b
  3744  002534  0EFD               	movlw	high STR_16
  3745  002536  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3746  002538  C067  F0EF         	movff	_a+6,?_printf+2
  3747  00253C  C068  F0F0         	movff	_a+7,?_printf+3
  3748  002540  C27E  F0F1         	movff	_dist_final+46,?_printf+4
  3749  002544  C27F  F0F2         	movff	_dist_final+47,?_printf+5
  3750  002548  ECFB  F01E         	call	_printf	;wreg free
  3751  00254C                     l7715:
  3752                           
  3753                           ;main.c: 262:     if(!(a[3]>=2 && a[3]<=400)){
  3754  00254C  BE68               	btfsc	_a+7,7,c
  3755  00254E  D00E               	goto	u8310
  3756  002550  5068               	movf	_a+7,w,c
  3757  002552  E104               	bnz	u8300
  3758  002554  0E02               	movlw	2
  3759  002556  5C67               	subwf	_a+6,w,c
  3760  002558  A0D8               	btfss	status,0,c
  3761  00255A  D008               	goto	u8310
  3762  00255C                     u8300:
  3763  00255C  BE68               	btfsc	_a+7,7,c
  3764  00255E  0012               	return	
  3765  002560  0E91               	movlw	145
  3766  002562  5C67               	subwf	_a+6,w,c
  3767  002564  0E01               	movlw	1
  3768  002566  5868               	subwfb	_a+7,w,c
  3769  002568  A0D8               	btfss	status,0,c
  3770  00256A  0012               	return	
  3771  00256C                     u8310:
  3772  00256C  0ED0               	movlw	208
  3773  00256E  EC61  F01F         	call	_lcdInst
  3774                           
  3775                           ;main.c: 264:         printf("Dist4 = X");
  3776  002572  0E9D               	movlw	low STR_17
  3777  002574  0100               	movlb	0	; () banked
  3778  002576  6FED               	movwf	printf@fmt& (0+255),b
  3779  002578  0EFF               	movlw	high STR_17
  3780  00257A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3781  00257C  ECFB  F01E         	call	_printf	;wreg free
  3782  002580  0012               	return		;funcret
  3783  002582                     __end_of_print_echo:
  3784                           	opt callstack 0
  3785                           
  3786 ;; *************** function _min *****************
  3787 ;; Defined at:
  3788 ;;		line 267 in file "main.c"
  3789 ;; Parameters:    Size  Location     Type
  3790 ;;  array           2    0[BANK0 ] PTR int 
  3791 ;;		 -> a(8), 
  3792 ;;  size            2    2[BANK0 ] int 
  3793 ;; Auto vars:     Size  Location     Type
  3794 ;;  i               2    9[BANK0 ] int 
  3795 ;;  minimum         2    7[BANK0 ] int 
  3796 ;; Return value:  Size  Location     Type
  3797 ;;                  2    0[BANK0 ] int 
  3798 ;; Registers used:
  3799 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3800 ;; Tracked objects:
  3801 ;;		On entry : 0/0
  3802 ;;		On exit  : 0/0
  3803 ;;		Unchanged: 0/0
  3804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3805 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3806 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3807 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3808 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3809 ;;Total ram usage:       11 bytes
  3810 ;; Hardware stack levels used:    1
  3811 ;; Hardware stack levels required when called:    3
  3812 ;; This function calls:
  3813 ;;		Nothing
  3814 ;; This function is called by:
  3815 ;;		_ultrasonic_main
  3816 ;; This function uses a non-reentrant model
  3817 ;;
  3818                           
  3819                           	psect	text4
  3820  002EBC                     __ptext4:
  3821                           	opt callstack 0
  3822  002EBC                     _min:
  3823                           	opt callstack 26
  3824                           
  3825                           ;main.c: 268:     int minimum =0 ;
  3826                           
  3827                           ;incstack = 0
  3828  002EBC  0E00               	movlw	0
  3829  002EBE  0100               	movlb	0	; () banked
  3830  002EC0  6F88               	movwf	(min@minimum+1)& (0+255),b
  3831  002EC2  0E00               	movlw	0
  3832  002EC4  6F87               	movwf	min@minimum& (0+255),b
  3833                           
  3834                           ; BSR set to: 0
  3835                           ;main.c: 269:     if (array[0]<=23){
  3836  002EC6  C080  FFD9         	movff	min@array,fsr2l
  3837  002ECA  C081  FFDA         	movff	min@array+1,fsr2h
  3838  002ECE  0E01               	movlw	1
  3839  002ED0  BEDB               	btfsc	plusw2,7,c
  3840  002ED2  D007               	goto	u8320
  3841  002ED4  0E01               	movlw	1
  3842  002ED6  50DB               	movf	plusw2,w,c
  3843  002ED8  E10C               	bnz	l7729
  3844  002EDA  0E18               	movlw	24
  3845  002EDC  5CDE               	subwf	postinc2,w,c
  3846  002EDE  B0D8               	btfsc	status,0,c
  3847  002EE0  D008               	goto	l7729
  3848  002EE2                     u8320:
  3849                           
  3850                           ; BSR set to: 0
  3851                           ;main.c: 270:          minimum = array[0];}
  3852  002EE2  C080  FFD9         	movff	min@array,fsr2l
  3853  002EE6  C081  FFDA         	movff	min@array+1,fsr2h
  3854  002EEA  CFDE F087          	movff	postinc2,min@minimum
  3855  002EEE  CFDD F088          	movff	postdec2,min@minimum+1
  3856  002EF2                     l7729:
  3857                           
  3858                           ; BSR set to: 0
  3859                           ;main.c: 274:     for (int i = 0; i<size; i++){
  3860  002EF2  0E00               	movlw	0
  3861  002EF4  6F8A               	movwf	(min@i+1)& (0+255),b
  3862  002EF6  0E00               	movlw	0
  3863  002EF8  6F89               	movwf	min@i& (0+255),b
  3864  002EFA  D059               	goto	l7745
  3865  002EFC                     l7731:
  3866                           
  3867                           ; BSR set to: 0
  3868                           ;main.c: 278:         if ((minimum==0)||(minimum>=array[i])&&(array[i]!=0)&&(array[i]>=1
      +                          4)&&(array[i]<=23)){
  3869  002EFC  5187               	movf	min@minimum& (0+255),w,b
  3870  002EFE  1188               	iorwf	(min@minimum+1)& (0+255),w,b
  3871  002F00  B4D8               	btfsc	status,2,c
  3872  002F02  D046               	goto	u8370
  3873                           
  3874                           ; BSR set to: 0
  3875  002F04  90D8               	bcf	status,0,c
  3876  002F06  3589               	rlcf	min@i& (0+255),w,b
  3877  002F08  6ED9               	movwf	fsr2l,c
  3878  002F0A  358A               	rlcf	(min@i+1)& (0+255),w,b
  3879  002F0C  6EDA               	movwf	fsr2h,c
  3880  002F0E  5180               	movf	min@array& (0+255),w,b
  3881  002F10  26D9               	addwf	fsr2l,f,c
  3882  002F12  5181               	movf	(min@array+1)& (0+255),w,b
  3883  002F14  22DA               	addwfc	fsr2h,f,c
  3884  002F16  50DE               	movf	postinc2,w,c
  3885  002F18  5D87               	subwf	min@minimum& (0+255),w,b
  3886  002F1A  5188               	movf	(min@minimum+1)& (0+255),w,b
  3887  002F1C  0A80               	xorlw	128
  3888  002F1E  6F86               	movwf	(??_min+2)& (0+255),b
  3889  002F20  50DE               	movf	postinc2,w,c
  3890  002F22  0A80               	xorlw	128
  3891  002F24  5986               	subwfb	(??_min+2)& (0+255),w,b
  3892  002F26  A0D8               	btfss	status,0,c
  3893  002F28  D040               	goto	l7743
  3894                           
  3895                           ; BSR set to: 0
  3896  002F2A  90D8               	bcf	status,0,c
  3897  002F2C  3589               	rlcf	min@i& (0+255),w,b
  3898  002F2E  6ED9               	movwf	fsr2l,c
  3899  002F30  358A               	rlcf	(min@i+1)& (0+255),w,b
  3900  002F32  6EDA               	movwf	fsr2h,c
  3901  002F34  5180               	movf	min@array& (0+255),w,b
  3902  002F36  26D9               	addwf	fsr2l,f,c
  3903  002F38  5181               	movf	(min@array+1)& (0+255),w,b
  3904  002F3A  22DA               	addwfc	fsr2h,f,c
  3905  002F3C  50DE               	movf	postinc2,w,c
  3906  002F3E  10DE               	iorwf	postinc2,w,c
  3907  002F40  B4D8               	btfsc	status,2,c
  3908  002F42  D033               	goto	l7743
  3909                           
  3910                           ; BSR set to: 0
  3911  002F44  90D8               	bcf	status,0,c
  3912  002F46  3589               	rlcf	min@i& (0+255),w,b
  3913  002F48  6ED9               	movwf	fsr2l,c
  3914  002F4A  358A               	rlcf	(min@i+1)& (0+255),w,b
  3915  002F4C  6EDA               	movwf	fsr2h,c
  3916  002F4E  5180               	movf	min@array& (0+255),w,b
  3917  002F50  26D9               	addwf	fsr2l,f,c
  3918  002F52  5181               	movf	(min@array+1)& (0+255),w,b
  3919  002F54  22DA               	addwfc	fsr2h,f,c
  3920  002F56  0E01               	movlw	1
  3921  002F58  BEDB               	btfsc	plusw2,7,c
  3922  002F5A  D027               	goto	l7743
  3923  002F5C  0E01               	movlw	1
  3924  002F5E  50DB               	movf	plusw2,w,c
  3925  002F60  E104               	bnz	u8360
  3926  002F62  0E0E               	movlw	14
  3927  002F64  5CDE               	subwf	postinc2,w,c
  3928  002F66  A0D8               	btfss	status,0,c
  3929  002F68  D020               	goto	l7743
  3930  002F6A                     u8360:
  3931                           
  3932                           ; BSR set to: 0
  3933  002F6A  90D8               	bcf	status,0,c
  3934  002F6C  3589               	rlcf	min@i& (0+255),w,b
  3935  002F6E  6ED9               	movwf	fsr2l,c
  3936  002F70  358A               	rlcf	(min@i+1)& (0+255),w,b
  3937  002F72  6EDA               	movwf	fsr2h,c
  3938  002F74  5180               	movf	min@array& (0+255),w,b
  3939  002F76  26D9               	addwf	fsr2l,f,c
  3940  002F78  5181               	movf	(min@array+1)& (0+255),w,b
  3941  002F7A  22DA               	addwfc	fsr2h,f,c
  3942  002F7C  0E01               	movlw	1
  3943  002F7E  BEDB               	btfsc	plusw2,7,c
  3944  002F80  D007               	goto	u8370
  3945  002F82  0E01               	movlw	1
  3946  002F84  50DB               	movf	plusw2,w,c
  3947  002F86  E111               	bnz	l7743
  3948  002F88  0E18               	movlw	24
  3949  002F8A  5CDE               	subwf	postinc2,w,c
  3950  002F8C  B0D8               	btfsc	status,0,c
  3951  002F8E  D00D               	goto	l7743
  3952  002F90                     u8370:
  3953                           
  3954                           ; BSR set to: 0
  3955                           ;main.c: 282:             minimum = array[i];
  3956  002F90  90D8               	bcf	status,0,c
  3957  002F92  3589               	rlcf	min@i& (0+255),w,b
  3958  002F94  6ED9               	movwf	fsr2l,c
  3959  002F96  358A               	rlcf	(min@i+1)& (0+255),w,b
  3960  002F98  6EDA               	movwf	fsr2h,c
  3961  002F9A  5180               	movf	min@array& (0+255),w,b
  3962  002F9C  26D9               	addwf	fsr2l,f,c
  3963  002F9E  5181               	movf	(min@array+1)& (0+255),w,b
  3964  002FA0  22DA               	addwfc	fsr2h,f,c
  3965  002FA2  CFDE F087          	movff	postinc2,min@minimum
  3966  002FA6  CFDD F088          	movff	postdec2,min@minimum+1
  3967  002FAA                     l7743:
  3968                           
  3969                           ; BSR set to: 0
  3970                           ;main.c: 287:     }
  3971  002FAA  4B89               	infsnz	min@i& (0+255),f,b
  3972  002FAC  2B8A               	incf	(min@i+1)& (0+255),f,b
  3973  002FAE                     l7745:
  3974                           
  3975                           ; BSR set to: 0
  3976  002FAE  5182               	movf	min@size& (0+255),w,b
  3977  002FB0  5D89               	subwf	min@i& (0+255),w,b
  3978  002FB2  518A               	movf	(min@i+1)& (0+255),w,b
  3979  002FB4  0A80               	xorlw	128
  3980  002FB6  6F84               	movwf	??_min& (0+255),b
  3981  002FB8  5183               	movf	(min@size+1)& (0+255),w,b
  3982  002FBA  0A80               	xorlw	128
  3983  002FBC  5984               	subwfb	??_min& (0+255),w,b
  3984  002FBE  A0D8               	btfss	status,0,c
  3985  002FC0  D79D               	goto	l7731
  3986                           
  3987                           ; BSR set to: 0
  3988                           ;main.c: 288:     return minimum;
  3989  002FC2  C087  F080         	movff	min@minimum,?_min
  3990  002FC6  C088  F081         	movff	min@minimum+1,?_min+1
  3991                           
  3992                           ; BSR set to: 0
  3993  002FCA  0012               	return		;funcret
  3994  002FCC                     __end_of_min:
  3995                           	opt callstack 0
  3996                           
  3997 ;; *************** function _start *****************
  3998 ;; Defined at:
  3999 ;;		line 697 in file "main.c"
  4000 ;; Parameters:    Size  Location     Type
  4001 ;;		None
  4002 ;; Auto vars:     Size  Location     Type
  4003 ;;		None
  4004 ;; Return value:  Size  Location     Type
  4005 ;;                  1    wreg      void 
  4006 ;; Registers used:
  4007 ;;		wreg, status,2, status,0, cstack
  4008 ;; Tracked objects:
  4009 ;;		On entry : 0/0
  4010 ;;		On exit  : 0/0
  4011 ;;		Unchanged: 0/0
  4012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4017 ;;Total ram usage:        0 bytes
  4018 ;; Hardware stack levels used:    1
  4019 ;; Hardware stack levels required when called:    5
  4020 ;; This function calls:
  4021 ;;		_I2C_Master_Init
  4022 ;;		_I2C_Master_Start
  4023 ;;		_I2C_Master_Stop
  4024 ;;		_I2C_Master_Write
  4025 ;; This function is called by:
  4026 ;;		_main
  4027 ;; This function uses a non-reentrant model
  4028 ;;
  4029                           
  4030                           	psect	text5
  4031  003AE6                     __ptext5:
  4032                           	opt callstack 0
  4033  003AE6                     _start:
  4034                           	opt callstack 25
  4035                           
  4036                           ;main.c: 698:     I2C_Master_Init(100000);
  4037                           
  4038                           ; BSR set to: 0
  4039                           ;incstack = 0
  4040  003AE6  0EA0               	movlw	160
  4041  003AE8  0100               	movlb	0	; () banked
  4042  003AEA  6F8D               	movwf	I2C_Master_Init@clockFreq& (0+255),b
  4043  003AEC  0E86               	movlw	134
  4044  003AEE  6F8E               	movwf	(I2C_Master_Init@clockFreq+1)& (0+255),b
  4045  003AF0  0E01               	movlw	1
  4046  003AF2  6F8F               	movwf	(I2C_Master_Init@clockFreq+2)& (0+255),b
  4047  003AF4  0E00               	movlw	0
  4048  003AF6  6F90               	movwf	(I2C_Master_Init@clockFreq+3)& (0+255),b
  4049  003AF8  ECED  F01C         	call	_I2C_Master_Init	;wreg free
  4050                           
  4051                           ;main.c: 699:     I2C_Master_Start();
  4052  003AFC  EC72  F01F         	call	_I2C_Master_Start	;wreg free
  4053                           
  4054                           ;main.c: 700:     I2C_Master_Write(0b00010000);
  4055  003B00  0E00               	movlw	0
  4056  003B02  0100               	movlb	0	; () banked
  4057  003B04  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4058  003B06  0E10               	movlw	16
  4059  003B08  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4060  003B0A  EC69  F01F         	call	_I2C_Master_Write	;wreg free
  4061                           
  4062                           ;main.c: 701:     I2C_Master_Stop();
  4063  003B0E  EC6E  F01F         	call	_I2C_Master_Stop	;wreg free
  4064                           
  4065                           ;main.c: 703:     I2C_Master_Start();
  4066  003B12  EC72  F01F         	call	_I2C_Master_Start	;wreg free
  4067                           
  4068                           ;main.c: 704:     I2C_Master_Write(0b00010000);
  4069  003B16  0E00               	movlw	0
  4070  003B18  0100               	movlb	0	; () banked
  4071  003B1A  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4072  003B1C  0E10               	movlw	16
  4073  003B1E  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4074  003B20  EC69  F01F         	call	_I2C_Master_Write	;wreg free
  4075                           
  4076                           ;main.c: 705:     I2C_Master_Write('2');
  4077  003B24  0E00               	movlw	0
  4078  003B26  0100               	movlb	0	; () banked
  4079  003B28  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4080  003B2A  0E32               	movlw	50
  4081  003B2C  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4082  003B2E  EC69  F01F         	call	_I2C_Master_Write	;wreg free
  4083                           
  4084                           ;main.c: 706:     I2C_Master_Stop();
  4085  003B32  EC6E  F01F         	call	_I2C_Master_Stop	;wreg free
  4086  003B36  0012               	return		;funcret
  4087  003B38                     __end_of_start:
  4088                           	opt callstack 0
  4089                           
  4090 ;; *************** function _number_deploy *****************
  4091 ;; Defined at:
  4092 ;;		line 416 in file "main.c"
  4093 ;; Parameters:    Size  Location     Type
  4094 ;;  avg_dist        2  123[BANK0 ] int 
  4095 ;;  poles_detect    2  125[BANK0 ] int 
  4096 ;; Auto vars:     Size  Location     Type
  4097 ;;  t_count         2    6[BANK1 ] int 
  4098 ;;  tires_detect    2    4[BANK1 ] int 
  4099 ;;  tires_t         2    2[BANK1 ] int 
  4100 ;; Return value:  Size  Location     Type
  4101 ;;                  2  123[BANK0 ] int 
  4102 ;; Registers used:
  4103 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4104 ;; Tracked objects:
  4105 ;;		On entry : 0/0
  4106 ;;		On exit  : 0/0
  4107 ;;		Unchanged: 0/0
  4108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4109 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4110 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4111 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4112 ;;      Totals:         0       4       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4113 ;;Total ram usage:       12 bytes
  4114 ;; Hardware stack levels used:    1
  4115 ;; Hardware stack levels required when called:   14
  4116 ;; This function calls:
  4117 ;;		___awdiv
  4118 ;;		_lcdInst
  4119 ;;		_printf
  4120 ;; This function is called by:
  4121 ;;		_main
  4122 ;; This function uses a non-reentrant model
  4123 ;;
  4124                           
  4125                           	psect	text6
  4126  002174                     __ptext6:
  4127                           	opt callstack 0
  4128  002174                     _number_deploy:
  4129                           	opt callstack 16
  4130                           
  4131                           ;main.c: 417:     int tires_t=0;
  4132                           
  4133                           ;incstack = 0
  4134  002174  0E00               	movlw	0
  4135  002176  0101               	movlb	1	; () banked
  4136  002178  6F03               	movwf	(number_deploy@tires_t+1)& (0+255),b
  4137  00217A  0E00               	movlw	0
  4138  00217C  6F02               	movwf	number_deploy@tires_t& (0+255),b
  4139                           
  4140                           ;main.c: 418:     int tires_detected=0;
  4141  00217E  0E00               	movlw	0
  4142  002180  6F05               	movwf	(number_deploy@tires_detected+1)& (0+255),b
  4143  002182  0E00               	movlw	0
  4144  002184  6F04               	movwf	number_deploy@tires_detected& (0+255),b
  4145                           
  4146                           ;main.c: 419:     int t_count = 0;
  4147  002186  0E00               	movlw	0
  4148  002188  6F07               	movwf	(number_deploy@t_count+1)& (0+255),b
  4149  00218A  0E00               	movlw	0
  4150  00218C  6F06               	movwf	number_deploy@t_count& (0+255),b
  4151                           
  4152                           ;main.c: 422:     while (t_count<3){
  4153  00218E  D0F5               	goto	l8053
  4154  002190                     l7997:
  4155                           
  4156                           ; BSR set to: 1
  4157                           ;main.c: 423:   if (poles_detected != 0){
  4158  002190  0100               	movlb	0	; () banked
  4159  002192  51FD               	movf	number_deploy@poles_detected& (0+255),w,b
  4160  002194  11FE               	iorwf	(number_deploy@poles_detected+1)& (0+255),w,b
  4161  002196  B4D8               	btfsc	status,2,c
  4162  002198  D031               	goto	l8007
  4163                           
  4164                           ; BSR set to: 0
  4165                           ;main.c: 424:    if ((avg_dist/1000)<30){
  4166  00219A  C0FB  F080         	movff	number_deploy@avg_dist,___awdiv@dividend
  4167  00219E  C0FC  F081         	movff	number_deploy@avg_dist+1,___awdiv@dividend+1
  4168  0021A2  0E03               	movlw	3
  4169  0021A4  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  4170  0021A6  0EE8               	movlw	232
  4171  0021A8  6F82               	movwf	___awdiv@divisor& (0+255),b
  4172  0021AA  EC83  F01B         	call	___awdiv	;wreg free
  4173  0021AE  0100               	movlb	0	; () banked
  4174  0021B0  BF81               	btfsc	(?___awdiv+1)& (0+255),7,b
  4175  0021B2  D006               	goto	u8580
  4176  0021B4  5181               	movf	(?___awdiv+1)& (0+255),w,b
  4177  0021B6  E109               	bnz	l8003
  4178  0021B8  0E1E               	movlw	30
  4179  0021BA  5D80               	subwf	?___awdiv& (0+255),w,b
  4180  0021BC  B0D8               	btfsc	status,0,c
  4181  0021BE  D005               	goto	l8003
  4182  0021C0                     u8580:
  4183                           
  4184                           ; BSR set to: 0
  4185                           ;main.c: 426:     tires_t = 1;
  4186  0021C0  0E00               	movlw	0
  4187  0021C2  0101               	movlb	1	; () banked
  4188  0021C4  6F03               	movwf	(number_deploy@tires_t+1)& (0+255),b
  4189  0021C6  0E01               	movlw	1
  4190  0021C8  6F02               	movwf	number_deploy@tires_t& (0+255),b
  4191  0021CA                     l8003:
  4192                           
  4193                           ;main.c: 428:    if ((avg_dist/1000)>30){
  4194  0021CA  C0FB  F080         	movff	number_deploy@avg_dist,___awdiv@dividend
  4195  0021CE  C0FC  F081         	movff	number_deploy@avg_dist+1,___awdiv@dividend+1
  4196  0021D2  0E03               	movlw	3
  4197  0021D4  0100               	movlb	0	; () banked
  4198  0021D6  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  4199  0021D8  0EE8               	movlw	232
  4200  0021DA  6F82               	movwf	___awdiv@divisor& (0+255),b
  4201  0021DC  EC83  F01B         	call	___awdiv	;wreg free
  4202  0021E0  0100               	movlb	0	; () banked
  4203  0021E2  BF81               	btfsc	(?___awdiv+1)& (0+255),7,b
  4204  0021E4  D00B               	goto	l8007
  4205  0021E6  5181               	movf	(?___awdiv+1)& (0+255),w,b
  4206  0021E8  E104               	bnz	u8590
  4207  0021EA  0E1F               	movlw	31
  4208  0021EC  5D80               	subwf	?___awdiv& (0+255),w,b
  4209  0021EE  A0D8               	btfss	status,0,c
  4210  0021F0  D005               	goto	l8007
  4211  0021F2                     u8590:
  4212                           
  4213                           ; BSR set to: 0
  4214                           ;main.c: 429:     tires_t = 2;
  4215  0021F2  0E00               	movlw	0
  4216  0021F4  0101               	movlb	1	; () banked
  4217  0021F6  6F03               	movwf	(number_deploy@tires_t+1)& (0+255),b
  4218  0021F8  0E02               	movlw	2
  4219  0021FA  6F02               	movwf	number_deploy@tires_t& (0+255),b
  4220  0021FC                     l8007:
  4221                           
  4222                           ;main.c: 433:   if (poles_detected == 0){
  4223  0021FC  0100               	movlb	0	; () banked
  4224  0021FE  51FD               	movf	number_deploy@poles_detected& (0+255),w,b
  4225  002200  11FE               	iorwf	(number_deploy@poles_detected+1)& (0+255),w,b
  4226  002202  A4D8               	btfss	status,2,c
  4227  002204  D005               	goto	l8011
  4228                           
  4229                           ; BSR set to: 0
  4230                           ;main.c: 434:    tires_t = 2;
  4231  002206  0E00               	movlw	0
  4232  002208  0101               	movlb	1	; () banked
  4233  00220A  6F03               	movwf	(number_deploy@tires_t+1)& (0+255),b
  4234  00220C  0E02               	movlw	2
  4235  00220E  6F02               	movwf	number_deploy@tires_t& (0+255),b
  4236  002210                     l8011:
  4237                           
  4238                           ;main.c: 437:   if ((a[0]>=2 && a[0] <= 15)){
  4239  002210  BE62               	btfsc	_a+1,7,c
  4240  002212  D028               	goto	l8023
  4241  002214  5062               	movf	_a+1,w,c
  4242  002216  E104               	bnz	u8610
  4243  002218  0E02               	movlw	2
  4244  00221A  5C61               	subwf	_a,w,c
  4245  00221C  A0D8               	btfss	status,0,c
  4246  00221E  D022               	goto	l8023
  4247  002220                     u8610:
  4248  002220  BE62               	btfsc	_a+1,7,c
  4249  002222  D006               	goto	u8620
  4250  002224  5062               	movf	_a+1,w,c
  4251  002226  E11E               	bnz	l8023
  4252  002228  0E10               	movlw	16
  4253  00222A  5C61               	subwf	_a,w,c
  4254  00222C  B0D8               	btfsc	status,0,c
  4255  00222E  D01A               	goto	l8023
  4256  002230                     u8620:
  4257                           
  4258                           ;main.c: 439:             if ((a[1]>=2 && a[1] <= 15)){
  4259  002230  BE64               	btfsc	_a+3,7,c
  4260  002232  D013               	goto	l8021
  4261  002234  5064               	movf	_a+3,w,c
  4262  002236  E104               	bnz	u8630
  4263  002238  0E02               	movlw	2
  4264  00223A  5C63               	subwf	_a+2,w,c
  4265  00223C  A0D8               	btfss	status,0,c
  4266  00223E  D00D               	goto	l8021
  4267  002240                     u8630:
  4268  002240  BE64               	btfsc	_a+3,7,c
  4269  002242  D006               	goto	u8640
  4270  002244  5064               	movf	_a+3,w,c
  4271  002246  E109               	bnz	l8021
  4272  002248  0E10               	movlw	16
  4273  00224A  5C63               	subwf	_a+2,w,c
  4274  00224C  B0D8               	btfsc	status,0,c
  4275  00224E  D005               	goto	l8021
  4276  002250                     u8640:
  4277                           
  4278                           ;main.c: 441:                 tires_detected = 1;
  4279  002250  0E00               	movlw	0
  4280  002252  0101               	movlb	1	; () banked
  4281  002254  6F05               	movwf	(number_deploy@tires_detected+1)& (0+255),b
  4282  002256  0E01               	movlw	1
  4283  002258  D004               	goto	L2
  4284  00225A                     l8021:
  4285                           
  4286                           ;main.c: 444:                 tires_detected = 0;
  4287  00225A  0E00               	movlw	0
  4288  00225C  0101               	movlb	1	; () banked
  4289  00225E  6F05               	movwf	(number_deploy@tires_detected+1)& (0+255),b
  4290  002260  0E00               	movlw	0
  4291  002262                     L2:
  4292  002262  6F04               	movwf	number_deploy@tires_detected& (0+255),b
  4293  002264                     l8023:
  4294                           
  4295                           ;main.c: 447:         if ((tires_detected==1)){
  4296  002264  0101               	movlb	1	; () banked
  4297  002266  0504               	decf	number_deploy@tires_detected& (0+255),w,b
  4298  002268  1105               	iorwf	(number_deploy@tires_detected+1)& (0+255),w,b
  4299  00226A  B4D8               	btfsc	status,2,c
  4300                           
  4301                           ; BSR set to: 1
  4302                           ;main.c: 448:             if((a[2]>=2 && a[2] <= 15)&&(a[3] >=2 && a[3]<= 15)){
  4303  00226C  BE66               	btfsc	_a+5,7,c
  4304  00226E  D020               	goto	l8035
  4305  002270  5066               	movf	_a+5,w,c
  4306  002272  E104               	bnz	u8660
  4307  002274  0E02               	movlw	2
  4308  002276  5C65               	subwf	_a+4,w,c
  4309  002278  A0D8               	btfss	status,0,c
  4310  00227A  D01A               	goto	l8035
  4311  00227C                     u8660:
  4312                           
  4313                           ; BSR set to: 1
  4314  00227C  BE66               	btfsc	_a+5,7,c
  4315  00227E  D006               	goto	u8670
  4316  002280  5066               	movf	_a+5,w,c
  4317  002282  E116               	bnz	l8035
  4318  002284  0E10               	movlw	16
  4319  002286  5C65               	subwf	_a+4,w,c
  4320  002288  B0D8               	btfsc	status,0,c
  4321  00228A  D012               	goto	l8035
  4322  00228C                     u8670:
  4323                           
  4324                           ; BSR set to: 1
  4325  00228C  BE68               	btfsc	_a+7,7,c
  4326  00228E  D010               	goto	l8035
  4327  002290  5068               	movf	_a+7,w,c
  4328  002292  E104               	bnz	u8680
  4329  002294  0E02               	movlw	2
  4330  002296  5C67               	subwf	_a+6,w,c
  4331  002298  A0D8               	btfss	status,0,c
  4332  00229A  D00A               	goto	l8035
  4333  00229C                     u8680:
  4334                           
  4335                           ; BSR set to: 1
  4336  00229C  BE68               	btfsc	_a+7,7,c
  4337  00229E  D006               	goto	u8690
  4338  0022A0  5068               	movf	_a+7,w,c
  4339  0022A2  E106               	bnz	l8035
  4340  0022A4  0E10               	movlw	16
  4341  0022A6  5C67               	subwf	_a+6,w,c
  4342  0022A8  B0D8               	btfsc	status,0,c
  4343  0022AA  D002               	goto	l8035
  4344  0022AC                     u8690:
  4345                           
  4346                           ; BSR set to: 1
  4347                           ;main.c: 449:                 tires_detected++;
  4348  0022AC  4B04               	infsnz	number_deploy@tires_detected& (0+255),f,b
  4349  0022AE  2B05               	incf	(number_deploy@tires_detected+1)& (0+255),f,b
  4350  0022B0                     l8035:
  4351                           
  4352                           ; BSR set to: 1
  4353                           ;main.c: 453:         t_count = tires_t - tires_detected;
  4354  0022B0  5104               	movf	number_deploy@tires_detected& (0+255),w,b
  4355  0022B2  5D02               	subwf	number_deploy@tires_t& (0+255),w,b
  4356  0022B4  6F06               	movwf	number_deploy@t_count& (0+255),b
  4357  0022B6  5105               	movf	(number_deploy@tires_detected+1)& (0+255),w,b
  4358  0022B8  5903               	subwfb	(number_deploy@tires_t+1)& (0+255),w,b
  4359  0022BA  6F07               	movwf	(number_deploy@t_count+1)& (0+255),b
  4360                           
  4361                           ; BSR set to: 1
  4362                           ;main.c: 454:         Pole[poles_detected].tires_deployed = t_count;
  4363  0022BC  C0FD  F100         	movff	number_deploy@poles_detected,??_number_deploy
  4364  0022C0  C0FE  F101         	movff	number_deploy@poles_detected+1,??_number_deploy+1
  4365  0022C4  90D8               	bcf	status,0,c
  4366  0022C6  3700               	rlcf	??_number_deploy& (0+255),f,b
  4367  0022C8  3701               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4368  0022CA  90D8               	bcf	status,0,c
  4369  0022CC  3700               	rlcf	??_number_deploy& (0+255),f,b
  4370  0022CE  3701               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4371  0022D0  90D8               	bcf	status,0,c
  4372  0022D2  3700               	rlcf	??_number_deploy& (0+255),f,b
  4373  0022D4  3701               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4374  0022D6  0E00               	movlw	low _Pole
  4375  0022D8  2500               	addwf	??_number_deploy& (0+255),w,b
  4376  0022DA  6ED9               	movwf	fsr2l,c
  4377  0022DC  0E02               	movlw	high _Pole
  4378  0022DE  2101               	addwfc	(??_number_deploy+1)& (0+255),w,b
  4379  0022E0  6EDA               	movwf	fsr2h,c
  4380  0022E2  C106  FFDE         	movff	number_deploy@t_count,postinc2
  4381  0022E6  C107  FFDD         	movff	number_deploy@t_count+1,postdec2
  4382                           
  4383                           ; BSR set to: 1
  4384                           ;main.c: 455:         Pole[poles_detected].tires_final = tires_t;
  4385  0022EA  C0FD  F100         	movff	number_deploy@poles_detected,??_number_deploy
  4386  0022EE  C0FE  F101         	movff	number_deploy@poles_detected+1,??_number_deploy+1
  4387  0022F2  90D8               	bcf	status,0,c
  4388  0022F4  3700               	rlcf	??_number_deploy& (0+255),f,b
  4389  0022F6  3701               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4390  0022F8  90D8               	bcf	status,0,c
  4391  0022FA  3700               	rlcf	??_number_deploy& (0+255),f,b
  4392  0022FC  3701               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4393  0022FE  90D8               	bcf	status,0,c
  4394  002300  3700               	rlcf	??_number_deploy& (0+255),f,b
  4395  002302  3701               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4396  002304  0E02               	movlw	low (_Pole+2)
  4397  002306  2500               	addwf	??_number_deploy& (0+255),w,b
  4398  002308  6ED9               	movwf	fsr2l,c
  4399  00230A  0E02               	movlw	high (_Pole+2)
  4400  00230C  2101               	addwfc	(??_number_deploy+1)& (0+255),w,b
  4401  00230E  6EDA               	movwf	fsr2h,c
  4402  002310  C102  FFDE         	movff	number_deploy@tires_t,postinc2
  4403  002314  C103  FFDD         	movff	number_deploy@tires_t+1,postdec2
  4404                           
  4405                           ; BSR set to: 1
  4406                           ;main.c: 456:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  4407  002318  0E01               	movlw	1
  4408  00231A  EC61  F01F         	call	_lcdInst
  4409  00231E  0E11               	movlw	17
  4410  002320  0101               	movlb	1	; () banked
  4411  002322  6F00               	movwf	??_number_deploy& (0+255),b
  4412  002324  0E3A               	movlw	58
  4413  002326                     u9517:
  4414  002326  2EE8               	decfsz	wreg,f,c
  4415  002328  D7FE               	bra	u9517
  4416  00232A  2F00               	decfsz	??_number_deploy& (0+255),f,b
  4417  00232C  D7FC               	bra	u9517
  4418  00232E  F000               	nop	
  4419                           
  4420                           ;main.c: 457:         printf("det,%d, tcnt %d",tires_detected,t_count);
  4421  002330  0E3D               	movlw	low STR_22
  4422  002332  0100               	movlb	0	; () banked
  4423  002334  6FED               	movwf	printf@fmt& (0+255),b
  4424  002336  0EFE               	movlw	high STR_22
  4425  002338  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4426  00233A  C104  F0EF         	movff	number_deploy@tires_detected,?_printf+2
  4427  00233E  C105  F0F0         	movff	number_deploy@tires_detected+1,?_printf+3
  4428  002342  C106  F0F1         	movff	number_deploy@t_count,?_printf+4
  4429  002346  C107  F0F2         	movff	number_deploy@t_count+1,?_printf+5
  4430  00234A  ECFB  F01E         	call	_printf	;wreg free
  4431                           
  4432                           ;main.c: 458:         _delay((unsigned long)((1000)*(10000000/4000.0)));
  4433  00234E  0E0D               	movlw	13
  4434  002350  0101               	movlb	1	; () banked
  4435  002352  6F01               	movwf	(??_number_deploy+1)& (0+255),b
  4436  002354  0EAF               	movlw	175
  4437  002356  6F00               	movwf	??_number_deploy& (0+255),b
  4438  002358  0EB6               	movlw	182
  4439  00235A                     u9527:
  4440  00235A  2EE8               	decfsz	wreg,f,c
  4441  00235C  D7FE               	bra	u9527
  4442  00235E  2F00               	decfsz	??_number_deploy& (0+255),f,b
  4443  002360  D7FC               	bra	u9527
  4444  002362  2F01               	decfsz	(??_number_deploy+1)& (0+255),f,b
  4445  002364  D7FA               	bra	u9527
  4446  002366  F000               	nop	
  4447                           
  4448                           ;main.c: 460:         if (t_count<=2){
  4449  002368  0101               	movlb	1	; () banked
  4450  00236A  BF07               	btfsc	(number_deploy@t_count+1)& (0+255),7,b
  4451  00236C  D00E               	goto	u8710
  4452  00236E  5107               	movf	(number_deploy@t_count+1)& (0+255),w,b
  4453  002370  E104               	bnz	l8053
  4454  002372  0E03               	movlw	3
  4455  002374  5D06               	subwf	number_deploy@t_count& (0+255),w,b
  4456  002376  A0D8               	btfss	status,0,c
  4457  002378  D008               	goto	u8710
  4458  00237A                     l8053:
  4459                           
  4460                           ; BSR set to: 1
  4461                           ;main.c: 422:     while (t_count<3){
  4462  00237A  BF07               	btfsc	(number_deploy@t_count+1)& (0+255),7,b
  4463  00237C  D709               	goto	l7997
  4464  00237E  5107               	movf	(number_deploy@t_count+1)& (0+255),w,b
  4465  002380  E104               	bnz	u8710
  4466  002382  0E03               	movlw	3
  4467  002384  5D06               	subwf	number_deploy@t_count& (0+255),w,b
  4468  002386  A0D8               	btfss	status,0,c
  4469  002388  D703               	goto	l7997
  4470  00238A                     u8710:
  4471                           
  4472                           ; BSR set to: 1
  4473                           ;main.c: 468:     return (int) t_count;
  4474  00238A  C106  F0FB         	movff	number_deploy@t_count,?_number_deploy
  4475  00238E  C107  F0FC         	movff	number_deploy@t_count+1,?_number_deploy+1
  4476                           
  4477                           ; BSR set to: 1
  4478  002392  0012               	return		;funcret
  4479  002394                     __end_of_number_deploy:
  4480                           	opt callstack 0
  4481                           
  4482 ;; *************** function ___awdiv *****************
  4483 ;; Defined at:
  4484 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  4485 ;; Parameters:    Size  Location     Type
  4486 ;;  dividend        2    0[BANK0 ] int 
  4487 ;;  divisor         2    2[BANK0 ] int 
  4488 ;; Auto vars:     Size  Location     Type
  4489 ;;  quotient        2    6[BANK0 ] int 
  4490 ;;  sign            1    5[BANK0 ] unsigned char 
  4491 ;;  counter         1    4[BANK0 ] unsigned char 
  4492 ;; Return value:  Size  Location     Type
  4493 ;;                  2    0[BANK0 ] int 
  4494 ;; Registers used:
  4495 ;;		wreg, status,2, status,0
  4496 ;; Tracked objects:
  4497 ;;		On entry : 0/0
  4498 ;;		On exit  : 0/0
  4499 ;;		Unchanged: 0/0
  4500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4501 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4502 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4504 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4505 ;;Total ram usage:        8 bytes
  4506 ;; Hardware stack levels used:    1
  4507 ;; Hardware stack levels required when called:    3
  4508 ;; This function calls:
  4509 ;;		Nothing
  4510 ;; This function is called by:
  4511 ;;		_number_deploy
  4512 ;; This function uses a non-reentrant model
  4513 ;;
  4514                           
  4515                           	psect	text7
  4516  003706                     __ptext7:
  4517                           	opt callstack 0
  4518  003706                     ___awdiv:
  4519                           	opt callstack 26
  4520                           
  4521                           ; BSR set to: 1
  4522                           ;incstack = 0
  4523  003706  0E00               	movlw	0
  4524  003708  0100               	movlb	0	; () banked
  4525  00370A  6F85               	movwf	___awdiv@sign& (0+255),b
  4526                           
  4527                           ; BSR set to: 0
  4528  00370C  AF83               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  4529  00370E  D006               	goto	l7755
  4530                           
  4531                           ; BSR set to: 0
  4532  003710  6D82               	negf	___awdiv@divisor& (0+255),b
  4533  003712  1F83               	comf	(___awdiv@divisor+1)& (0+255),f,b
  4534  003714  B0D8               	btfsc	status,0,c
  4535  003716  2B83               	incf	(___awdiv@divisor+1)& (0+255),f,b
  4536                           
  4537                           ; BSR set to: 0
  4538  003718  0E01               	movlw	1
  4539  00371A  6F85               	movwf	___awdiv@sign& (0+255),b
  4540  00371C                     l7755:
  4541                           
  4542                           ; BSR set to: 0
  4543  00371C  AF81               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  4544  00371E  D006               	goto	l7761
  4545                           
  4546                           ; BSR set to: 0
  4547  003720  6D80               	negf	___awdiv@dividend& (0+255),b
  4548  003722  1F81               	comf	(___awdiv@dividend+1)& (0+255),f,b
  4549  003724  B0D8               	btfsc	status,0,c
  4550  003726  2B81               	incf	(___awdiv@dividend+1)& (0+255),f,b
  4551                           
  4552                           ; BSR set to: 0
  4553  003728  0E01               	movlw	1
  4554  00372A  1B85               	xorwf	___awdiv@sign& (0+255),f,b
  4555  00372C                     l7761:
  4556                           
  4557                           ; BSR set to: 0
  4558  00372C  0E00               	movlw	0
  4559  00372E  6F87               	movwf	(___awdiv@quotient+1)& (0+255),b
  4560  003730  0E00               	movlw	0
  4561  003732  6F86               	movwf	___awdiv@quotient& (0+255),b
  4562                           
  4563                           ; BSR set to: 0
  4564  003734  5182               	movf	___awdiv@divisor& (0+255),w,b
  4565  003736  1183               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  4566  003738  B4D8               	btfsc	status,2,c
  4567  00373A  D01C               	goto	l7783
  4568                           
  4569                           ; BSR set to: 0
  4570  00373C  0E01               	movlw	1
  4571  00373E  6F84               	movwf	___awdiv@counter& (0+255),b
  4572  003740  D004               	goto	l7769
  4573  003742                     l7767:
  4574                           
  4575                           ; BSR set to: 0
  4576  003742  90D8               	bcf	status,0,c
  4577  003744  3782               	rlcf	___awdiv@divisor& (0+255),f,b
  4578  003746  3783               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  4579  003748  2B84               	incf	___awdiv@counter& (0+255),f,b
  4580  00374A                     l7769:
  4581                           
  4582                           ; BSR set to: 0
  4583  00374A  AF83               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  4584  00374C  D7FA               	goto	l7767
  4585  00374E                     u8420:
  4586                           
  4587                           ; BSR set to: 0
  4588  00374E  90D8               	bcf	status,0,c
  4589  003750  3786               	rlcf	___awdiv@quotient& (0+255),f,b
  4590  003752  3787               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  4591                           
  4592                           ; BSR set to: 0
  4593  003754  5182               	movf	___awdiv@divisor& (0+255),w,b
  4594  003756  5D80               	subwf	___awdiv@dividend& (0+255),w,b
  4595  003758  5183               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4596  00375A  5981               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  4597  00375C  A0D8               	btfss	status,0,c
  4598  00375E  D005               	goto	l7779
  4599                           
  4600                           ; BSR set to: 0
  4601  003760  5182               	movf	___awdiv@divisor& (0+255),w,b
  4602  003762  5F80               	subwf	___awdiv@dividend& (0+255),f,b
  4603  003764  5183               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4604  003766  5B81               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  4605                           
  4606                           ; BSR set to: 0
  4607  003768  8186               	bsf	___awdiv@quotient& (0+255),0,b
  4608  00376A                     l7779:
  4609                           
  4610                           ; BSR set to: 0
  4611  00376A  90D8               	bcf	status,0,c
  4612  00376C  3383               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  4613  00376E  3382               	rrcf	___awdiv@divisor& (0+255),f,b
  4614                           
  4615                           ; BSR set to: 0
  4616  003770  2F84               	decfsz	___awdiv@counter& (0+255),f,b
  4617  003772  D7ED               	goto	u8420
  4618  003774                     l7783:
  4619                           
  4620                           ; BSR set to: 0
  4621  003774  5185               	movf	___awdiv@sign& (0+255),w,b
  4622  003776  B4D8               	btfsc	status,2,c
  4623  003778  D004               	goto	l7787
  4624                           
  4625                           ; BSR set to: 0
  4626  00377A  6D86               	negf	___awdiv@quotient& (0+255),b
  4627  00377C  1F87               	comf	(___awdiv@quotient+1)& (0+255),f,b
  4628  00377E  B0D8               	btfsc	status,0,c
  4629  003780  2B87               	incf	(___awdiv@quotient+1)& (0+255),f,b
  4630  003782                     l7787:
  4631                           
  4632                           ; BSR set to: 0
  4633  003782  C086  F080         	movff	___awdiv@quotient,?___awdiv
  4634  003786  C087  F081         	movff	___awdiv@quotient+1,?___awdiv+1
  4635                           
  4636                           ; BSR set to: 0
  4637  00378A  0012               	return		;funcret
  4638  00378C                     __end_of___awdiv:
  4639                           	opt callstack 0
  4640                           
  4641 ;; *************** function _brake *****************
  4642 ;; Defined at:
  4643 ;;		line 666 in file "main.c"
  4644 ;; Parameters:    Size  Location     Type
  4645 ;;		None
  4646 ;; Auto vars:     Size  Location     Type
  4647 ;;		None
  4648 ;; Return value:  Size  Location     Type
  4649 ;;                  1    wreg      void 
  4650 ;; Registers used:
  4651 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4652 ;; Tracked objects:
  4653 ;;		On entry : 0/0
  4654 ;;		On exit  : 0/0
  4655 ;;		Unchanged: 0/0
  4656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4659 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4660 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4661 ;;Total ram usage:        2 bytes
  4662 ;; Hardware stack levels used:    1
  4663 ;; Hardware stack levels required when called:   14
  4664 ;; This function calls:
  4665 ;;		_I2C_Master_Read
  4666 ;;		_I2C_Master_Start
  4667 ;;		_I2C_Master_Stop
  4668 ;;		_I2C_Master_Write
  4669 ;;		_lcdInst
  4670 ;;		_printf
  4671 ;; This function is called by:
  4672 ;;		_main
  4673 ;;		_sense_tires
  4674 ;; This function uses a non-reentrant model
  4675 ;;
  4676                           
  4677                           	psect	text8
  4678  00351A                     __ptext8:
  4679                           	opt callstack 0
  4680  00351A                     _brake:
  4681                           	opt callstack 16
  4682                           
  4683                           ;main.c: 667:     I2C_Master_Start();
  4684                           
  4685                           ; BSR set to: 0
  4686                           ;incstack = 0
  4687  00351A  EC72  F01F         	call	_I2C_Master_Start	;wreg free
  4688                           
  4689                           ;main.c: 668:     I2C_Master_Write(0b00010000);
  4690  00351E  0E00               	movlw	0
  4691  003520  0100               	movlb	0	; () banked
  4692  003522  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4693  003524  0E10               	movlw	16
  4694  003526  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4695  003528  EC69  F01F         	call	_I2C_Master_Write	;wreg free
  4696                           
  4697                           ;main.c: 669:     I2C_Master_Write('9');
  4698  00352C  0E00               	movlw	0
  4699  00352E  0100               	movlb	0	; () banked
  4700  003530  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4701  003532  0E39               	movlw	57
  4702  003534  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4703  003536  EC69  F01F         	call	_I2C_Master_Write	;wreg free
  4704                           
  4705                           ;main.c: 670:     I2C_Master_Stop();
  4706  00353A  EC6E  F01F         	call	_I2C_Master_Stop	;wreg free
  4707                           
  4708                           ;main.c: 671:     I2C_Master_Start();
  4709  00353E  EC72  F01F         	call	_I2C_Master_Start	;wreg free
  4710                           
  4711                           ;main.c: 672:     I2C_Master_Write(0b00010001);
  4712  003542  0E00               	movlw	0
  4713  003544  0100               	movlb	0	; () banked
  4714  003546  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4715  003548  0E11               	movlw	17
  4716  00354A  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4717  00354C  EC69  F01F         	call	_I2C_Master_Write	;wreg free
  4718                           
  4719                           ;main.c: 673:     avg_dist = I2C_Master_Read(1);
  4720  003550  0E01               	movlw	1
  4721  003552  ECE6  F01E         	call	_I2C_Master_Read
  4722  003556  0100               	movlb	0	; () banked
  4723  003558  6FFB               	movwf	??_brake& (0+255),b
  4724  00355A  51FB               	movf	??_brake& (0+255),w,b
  4725  00355C  6E44               	movwf	_avg_dist,c	;volatile
  4726  00355E  6A45               	clrf	_avg_dist+1,c	;volatile
  4727  003560  6A46               	clrf	_avg_dist+2,c	;volatile
  4728  003562  6A47               	clrf	_avg_dist+3,c	;volatile
  4729                           
  4730                           ;main.c: 674:     I2C_Master_Stop();
  4731  003564  EC6E  F01F         	call	_I2C_Master_Stop	;wreg free
  4732                           
  4733                           ;main.c: 675:     if(avg_dist){
  4734  003568  5044               	movf	_avg_dist,w,c	;volatile
  4735  00356A  1045               	iorwf	_avg_dist+1,w,c	;volatile
  4736  00356C  1046               	iorwf	_avg_dist+2,w,c	;volatile
  4737  00356E  1047               	iorwf	_avg_dist+3,w,c	;volatile
  4738  003570  B4D8               	btfsc	status,2,c
  4739  003572  0012               	return	
  4740                           
  4741                           ;main.c: 678:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  4742  003574  0E01               	movlw	1
  4743  003576  EC61  F01F         	call	_lcdInst
  4744  00357A  0E11               	movlw	17
  4745  00357C  0100               	movlb	0	; () banked
  4746  00357E  6FFB               	movwf	??_brake& (0+255),b
  4747  003580  0E3A               	movlw	58
  4748  003582                     u9537:
  4749  003582  2EE8               	decfsz	wreg,f,c
  4750  003584  D7FE               	bra	u9537
  4751  003586  2FFB               	decfsz	??_brake& (0+255),f,b
  4752  003588  D7FC               	bra	u9537
  4753  00358A  F000               	nop	
  4754                           
  4755                           ;main.c: 686:         printf("%d",avg_dist);
  4756  00358C  0EC3               	movlw	low (STR_59+11)
  4757  00358E  0100               	movlb	0	; () banked
  4758  003590  6FED               	movwf	printf@fmt& (0+255),b
  4759  003592  0EFE               	movlw	high (STR_59+11)
  4760  003594  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4761  003596  C044  F0EF         	movff	_avg_dist,?_printf+2	;volatile
  4762  00359A  C045  F0F0         	movff	_avg_dist+1,?_printf+3	;volatile
  4763  00359E  C046  F0F1         	movff	_avg_dist+2,?_printf+4	;volatile
  4764  0035A2  C047  F0F2         	movff	_avg_dist+3,?_printf+5	;volatile
  4765  0035A6  ECFB  F01E         	call	_printf	;wreg free
  4766                           
  4767                           ;main.c: 691:         _delay((unsigned long)((1000)*(10000000/4000.0)));
  4768  0035AA  0E0D               	movlw	13
  4769  0035AC  0100               	movlb	0	; () banked
  4770  0035AE  6FFC               	movwf	(??_brake+1)& (0+255),b
  4771  0035B0  0EAF               	movlw	175
  4772  0035B2  6FFB               	movwf	??_brake& (0+255),b
  4773  0035B4  0EB6               	movlw	182
  4774  0035B6                     u9547:
  4775  0035B6  2EE8               	decfsz	wreg,f,c
  4776  0035B8  D7FE               	bra	u9547
  4777  0035BA  2FFB               	decfsz	??_brake& (0+255),f,b
  4778  0035BC  D7FC               	bra	u9547
  4779  0035BE  2FFC               	decfsz	(??_brake+1)& (0+255),f,b
  4780  0035C0  D7FA               	bra	u9547
  4781  0035C2  F000               	nop	
  4782                           
  4783                           ;main.c: 693:     send = 1;
  4784  0035C4  0E01               	movlw	1
  4785  0035C6  6E6D               	movwf	_send,c
  4786  0035C8  0012               	return		;funcret
  4787  0035CA                     __end_of_brake:
  4788                           	opt callstack 0
  4789                           
  4790 ;; *************** function _backwards *****************
  4791 ;; Defined at:
  4792 ;;		line 708 in file "main.c"
  4793 ;; Parameters:    Size  Location     Type
  4794 ;;		None
  4795 ;; Auto vars:     Size  Location     Type
  4796 ;;		None
  4797 ;; Return value:  Size  Location     Type
  4798 ;;                  1    wreg      void 
  4799 ;; Registers used:
  4800 ;;		wreg, status,2, status,0, cstack
  4801 ;; Tracked objects:
  4802 ;;		On entry : 0/0
  4803 ;;		On exit  : 0/0
  4804 ;;		Unchanged: 0/0
  4805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4810 ;;Total ram usage:        0 bytes
  4811 ;; Hardware stack levels used:    1
  4812 ;; Hardware stack levels required when called:    5
  4813 ;; This function calls:
  4814 ;;		_I2C_Master_Start
  4815 ;;		_I2C_Master_Stop
  4816 ;;		_I2C_Master_Write
  4817 ;; This function is called by:
  4818 ;;		_main
  4819 ;; This function uses a non-reentrant model
  4820 ;;
  4821                           
  4822                           	psect	text9
  4823  003E46                     __ptext9:
  4824                           	opt callstack 0
  4825  003E46                     _backwards:
  4826                           	opt callstack 25
  4827                           
  4828                           ;main.c: 709:     I2C_Master_Start();
  4829                           
  4830                           ;incstack = 0
  4831  003E46  EC72  F01F         	call	_I2C_Master_Start	;wreg free
  4832                           
  4833                           ;main.c: 710:     I2C_Master_Write(0b00010000);
  4834  003E4A  0E00               	movlw	0
  4835  003E4C  0100               	movlb	0	; () banked
  4836  003E4E  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4837  003E50  0E10               	movlw	16
  4838  003E52  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4839  003E54  EC69  F01F         	call	_I2C_Master_Write	;wreg free
  4840                           
  4841                           ;main.c: 711:     I2C_Master_Write('5');
  4842  003E58  0E00               	movlw	0
  4843  003E5A  0100               	movlb	0	; () banked
  4844  003E5C  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4845  003E5E  0E35               	movlw	53
  4846  003E60  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4847  003E62  EC69  F01F         	call	_I2C_Master_Write	;wreg free
  4848                           
  4849                           ;main.c: 712:     I2C_Master_Stop();
  4850  003E66  EC6E  F01F         	call	_I2C_Master_Stop	;wreg free
  4851  003E6A  0012               	return		;funcret
  4852  003E6C                     __end_of_backwards:
  4853                           	opt callstack 0
  4854                           
  4855 ;; *************** function _actuators_main *****************
  4856 ;; Defined at:
  4857 ;;		line 3 in file "actuators_main.c"
  4858 ;; Parameters:    Size  Location     Type
  4859 ;;  stack           2   18[BANK1 ] int 
  4860 ;;  steps2_adj      2   20[BANK1 ] int 
  4861 ;;  t_dep           2   22[BANK1 ] int 
  4862 ;; Auto vars:     Size  Location     Type
  4863 ;;  act_cnt         2   26[BANK1 ] int 
  4864 ;; Return value:  Size  Location     Type
  4865 ;;                  1    wreg      void 
  4866 ;; Registers used:
  4867 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4868 ;; Tracked objects:
  4869 ;;		On entry : 0/0
  4870 ;;		On exit  : 0/0
  4871 ;;		Unchanged: 0/0
  4872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4873 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4874 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4875 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4876 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4877 ;;Total ram usage:       10 bytes
  4878 ;; Hardware stack levels used:    1
  4879 ;; Hardware stack levels required when called:   16
  4880 ;; This function calls:
  4881 ;;		_initLCD
  4882 ;;		_lcdInst
  4883 ;;		_printf
  4884 ;;		_servo
  4885 ;;		_stepper
  4886 ;;		_stepper2
  4887 ;;		_stepper2_back
  4888 ;;		_system_init
  4889 ;; This function is called by:
  4890 ;;		_main
  4891 ;; This function uses a non-reentrant model
  4892 ;;
  4893                           
  4894                           	psect	text10
  4895  00272E                     __ptext10:
  4896                           	opt callstack 0
  4897  00272E                     _actuators_main:
  4898                           	opt callstack 14
  4899                           
  4900                           ;actuators_main.c: 4:     int act_cnt = 0;
  4901                           
  4902                           ;incstack = 0
  4903  00272E  0E00               	movlw	0
  4904  002730  0101               	movlb	1	; () banked
  4905  002732  6F1B               	movwf	(actuators_main@act_cnt+1)& (0+255),b
  4906  002734  0E00               	movlw	0
  4907  002736  6F1A               	movwf	actuators_main@act_cnt& (0+255),b
  4908                           
  4909                           ; BSR set to: 1
  4910                           ;actuators_main.c: 5:     system_init();
  4911  002738  EC54  F01E         	call	_system_init	;wreg free
  4912                           
  4913                           ;actuators_main.c: 6:     initLCD();
  4914  00273C  EC4A  F01C         	call	_initLCD	;wreg free
  4915                           
  4916                           ;actuators_main.c: 7:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  4917  002740  0E01               	movlw	1
  4918  002742  EC61  F01F         	call	_lcdInst
  4919  002746  0E11               	movlw	17
  4920  002748  0101               	movlb	1	; () banked
  4921  00274A  6F18               	movwf	??_actuators_main& (0+255),b
  4922  00274C  0E3A               	movlw	58
  4923  00274E                     u9557:
  4924  00274E  2EE8               	decfsz	wreg,f,c
  4925  002750  D7FE               	bra	u9557
  4926  002752  2F18               	decfsz	??_actuators_main& (0+255),f,b
  4927  002754  D7FC               	bra	u9557
  4928  002756  F000               	nop	
  4929                           
  4930                           ;actuators_main.c: 8:     printf("cnt is %d",act_cnt);
  4931  002758  0ED9               	movlw	low STR_1
  4932  00275A  0100               	movlb	0	; () banked
  4933  00275C  6FED               	movwf	printf@fmt& (0+255),b
  4934  00275E  0EFF               	movlw	high STR_1
  4935  002760  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4936  002762  0E00               	movlw	0
  4937  002764  6FF0               	movwf	(?_printf+3)& (0+255),b
  4938  002766  0E00               	movlw	0
  4939  002768  6FEF               	movwf	(?_printf+2)& (0+255),b
  4940  00276A  ECFB  F01E         	call	_printf	;wreg free
  4941                           
  4942                           ;actuators_main.c: 9:     _delay((unsigned long)((200)*(10000000/4000.0)));
  4943  00276E  0E03               	movlw	3
  4944  002770  0101               	movlb	1	; () banked
  4945  002772  6F19               	movwf	(??_actuators_main+1)& (0+255),b
  4946  002774  0E8A               	movlw	138
  4947  002776  6F18               	movwf	??_actuators_main& (0+255),b
  4948  002778  0E55               	movlw	85
  4949  00277A                     u9567:
  4950  00277A  2EE8               	decfsz	wreg,f,c
  4951  00277C  D7FE               	bra	u9567
  4952  00277E  2F18               	decfsz	??_actuators_main& (0+255),f,b
  4953  002780  D7FC               	bra	u9567
  4954  002782  2F19               	decfsz	(??_actuators_main+1)& (0+255),f,b
  4955  002784  D7FA               	bra	u9567
  4956  002786  D000               	nop2	
  4957  002788                     l7821:
  4958                           
  4959                           ;actuators_main.c: 11:     if (act_cnt==0){
  4960  002788  0101               	movlb	1	; () banked
  4961  00278A  511A               	movf	actuators_main@act_cnt& (0+255),w,b
  4962  00278C  111B               	iorwf	(actuators_main@act_cnt+1)& (0+255),w,b
  4963  00278E  A4D8               	btfss	status,2,c
  4964  002790  D071               	goto	l7901
  4965                           
  4966                           ; BSR set to: 1
  4967                           ;actuators_main.c: 15:         stepper(stack, t_dep);
  4968  002792  C112  F100         	movff	actuators_main@stack,stepper@stack
  4969  002796  C113  F101         	movff	actuators_main@stack+1,stepper@stack+1
  4970  00279A  C116  F102         	movff	actuators_main@t_dep,stepper@t_dep
  4971  00279E  C117  F103         	movff	actuators_main@t_dep+1,stepper@t_dep+1
  4972  0027A2  EC3F  F014         	call	_stepper	;wreg free
  4973                           
  4974                           ;actuators_main.c: 16:         stepper2(0, steps2_adj);
  4975  0027A6  C114  F100         	movff	actuators_main@steps2_adj,stepper2@steps2_adj
  4976  0027AA  C115  F101         	movff	actuators_main@steps2_adj+1,stepper2@steps2_adj+1
  4977  0027AE  0E00               	movlw	0
  4978  0027B0  EC67  F018         	call	_stepper2
  4979                           
  4980                           ;actuators_main.c: 17:                 stepper2_back(1, steps2_adj);
  4981  0027B4  C114  F100         	movff	actuators_main@steps2_adj,stepper2_back@steps2_adj
  4982  0027B8  C115  F101         	movff	actuators_main@steps2_adj+1,stepper2_back@steps2_adj+1
  4983  0027BC  0E01               	movlw	1
  4984  0027BE  ECE5  F01A         	call	_stepper2_back
  4985                           
  4986                           ;actuators_main.c: 20:                 LATA = 0b00000000;
  4987  0027C2  0E00               	movlw	0
  4988  0027C4  6E89               	movwf	3977,c	;volatile
  4989                           
  4990                           ;actuators_main.c: 21:         LATCbits.LATC0 = 0;
  4991  0027C6  908B               	bcf	3979,0,c	;volatile
  4992                           
  4993                           ;actuators_main.c: 22:         LATEbits.LATE0 = 0;
  4994  0027C8  908D               	bcf	3981,0,c	;volatile
  4995                           
  4996                           ;actuators_main.c: 23:         LATEbits.LATE1 = 0;
  4997  0027CA  928D               	bcf	3981,1,c	;volatile
  4998                           
  4999                           ;actuators_main.c: 24:         LATEbits.LATE2 = 0;
  5000  0027CC  948D               	bcf	3981,2,c	;volatile
  5001                           
  5002                           ;actuators_main.c: 25:         LATCbits.LATC5 = 0;
  5003  0027CE  9A8B               	bcf	3979,5,c	;volatile
  5004                           
  5005                           ;actuators_main.c: 26:         LATCbits.LATC6 = 0;
  5006  0027D0  9C8B               	bcf	3979,6,c	;volatile
  5007                           
  5008                           ;actuators_main.c: 27:         LATCbits.LATC7 = 0;
  5009  0027D2  9E8B               	bcf	3979,7,c	;volatile
  5010                           
  5011                           ;actuators_main.c: 28:         LATAbits.LATA5 = 0;
  5012  0027D4  9A89               	bcf	3977,5,c	;volatile
  5013                           
  5014                           ;actuators_main.c: 30:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/400
      +                          0.0)));};
  5015  0027D6  0E01               	movlw	1
  5016  0027D8  EC61  F01F         	call	_lcdInst
  5017  0027DC  0E11               	movlw	17
  5018  0027DE  0101               	movlb	1	; () banked
  5019  0027E0  6F18               	movwf	??_actuators_main& (0+255),b
  5020  0027E2  0E3A               	movlw	58
  5021  0027E4                     u9577:
  5022  0027E4  2EE8               	decfsz	wreg,f,c
  5023  0027E6  D7FE               	bra	u9577
  5024  0027E8  2F18               	decfsz	??_actuators_main& (0+255),f,b
  5025  0027EA  D7FC               	bra	u9577
  5026  0027EC  F000               	nop	
  5027                           
  5028                           ;actuators_main.c: 31:         printf("Stepper done");
  5029  0027EE  0E0A               	movlw	low STR_2
  5030  0027F0  0100               	movlb	0	; () banked
  5031  0027F2  6FED               	movwf	printf@fmt& (0+255),b
  5032  0027F4  0EFF               	movlw	high STR_2
  5033  0027F6  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5034  0027F8  ECFB  F01E         	call	_printf	;wreg free
  5035                           
  5036                           ;actuators_main.c: 33:         servo();
  5037  0027FC  ECD3  F019         	call	_servo	;wreg free
  5038                           
  5039                           ;actuators_main.c: 34:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/400
      +                          0.0)));};
  5040  002800  0E01               	movlw	1
  5041  002802  EC61  F01F         	call	_lcdInst
  5042  002806  0E11               	movlw	17
  5043  002808  0101               	movlb	1	; () banked
  5044  00280A  6F18               	movwf	??_actuators_main& (0+255),b
  5045  00280C  0E3A               	movlw	58
  5046  00280E                     u9587:
  5047  00280E  2EE8               	decfsz	wreg,f,c
  5048  002810  D7FE               	bra	u9587
  5049  002812  2F18               	decfsz	??_actuators_main& (0+255),f,b
  5050  002814  D7FC               	bra	u9587
  5051  002816  F000               	nop	
  5052                           
  5053                           ;actuators_main.c: 35:         printf("Servo done");
  5054  002818  0E74               	movlw	low STR_3
  5055  00281A  0100               	movlb	0	; () banked
  5056  00281C  6FED               	movwf	printf@fmt& (0+255),b
  5057  00281E  0EFF               	movlw	high STR_3
  5058  002820  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5059  002822  ECFB  F01E         	call	_printf	;wreg free
  5060                           
  5061                           ;actuators_main.c: 36:                 LATA = 0b00000000;
  5062  002826  0E00               	movlw	0
  5063  002828  6E89               	movwf	3977,c	;volatile
  5064                           
  5065                           ;actuators_main.c: 37:         LATCbits.LATC0 = 0;
  5066  00282A  908B               	bcf	3979,0,c	;volatile
  5067                           
  5068                           ;actuators_main.c: 38:         LATEbits.LATE0 = 0;
  5069  00282C  908D               	bcf	3981,0,c	;volatile
  5070                           
  5071                           ;actuators_main.c: 39:         LATEbits.LATE1 = 0;
  5072  00282E  928D               	bcf	3981,1,c	;volatile
  5073                           
  5074                           ;actuators_main.c: 40:         LATEbits.LATE2 = 0;
  5075  002830  948D               	bcf	3981,2,c	;volatile
  5076                           
  5077                           ;actuators_main.c: 41:         LATCbits.LATC5 = 0;
  5078  002832  9A8B               	bcf	3979,5,c	;volatile
  5079                           
  5080                           ;actuators_main.c: 42:         LATCbits.LATC6 = 0;
  5081  002834  9C8B               	bcf	3979,6,c	;volatile
  5082                           
  5083                           ;actuators_main.c: 43:         LATCbits.LATC7 = 0;
  5084  002836  9E8B               	bcf	3979,7,c	;volatile
  5085                           
  5086                           ;actuators_main.c: 44:         LATAbits.LATA5 = 0;
  5087  002838  9A89               	bcf	3977,5,c	;volatile
  5088                           
  5089                           ;actuators_main.c: 48:         if (t_dep%2!=0){
  5090  00283A  0101               	movlb	1	; () banked
  5091  00283C  A116               	btfss	actuators_main@t_dep& (0+255),0,b
  5092  00283E  D006               	goto	l7879
  5093                           
  5094                           ; BSR set to: 1
  5095                           ;actuators_main.c: 49:             steps2_adj = steps2_adj+1;
  5096  002840  0E01               	movlw	1
  5097  002842  2514               	addwf	actuators_main@steps2_adj& (0+255),w,b
  5098  002844  6F14               	movwf	actuators_main@steps2_adj& (0+255),b
  5099  002846  0E00               	movlw	0
  5100  002848  2115               	addwfc	(actuators_main@steps2_adj+1)& (0+255),w,b
  5101  00284A  6F15               	movwf	(actuators_main@steps2_adj+1)& (0+255),b
  5102  00284C                     l7879:
  5103                           
  5104                           ; BSR set to: 1
  5105                           ;actuators_main.c: 51:         stepper2(1, steps2_adj);
  5106  00284C  C114  F100         	movff	actuators_main@steps2_adj,stepper2@steps2_adj
  5107  002850  C115  F101         	movff	actuators_main@steps2_adj+1,stepper2@steps2_adj+1
  5108  002854  0E01               	movlw	1
  5109  002856  EC67  F018         	call	_stepper2
  5110                           
  5111                           ;actuators_main.c: 52:                         LATA = 0b00000000;
  5112  00285A  0E00               	movlw	0
  5113  00285C  6E89               	movwf	3977,c	;volatile
  5114                           
  5115                           ;actuators_main.c: 53:         LATCbits.LATC0 = 0;
  5116  00285E  908B               	bcf	3979,0,c	;volatile
  5117                           
  5118                           ;actuators_main.c: 54:         LATEbits.LATE0 = 0;
  5119  002860  908D               	bcf	3981,0,c	;volatile
  5120                           
  5121                           ;actuators_main.c: 55:         LATEbits.LATE1 = 0;
  5122  002862  928D               	bcf	3981,1,c	;volatile
  5123                           
  5124                           ;actuators_main.c: 56:         LATEbits.LATE2 = 0;
  5125  002864  948D               	bcf	3981,2,c	;volatile
  5126                           
  5127                           ;actuators_main.c: 57:         LATCbits.LATC5 = 0;
  5128  002866  9A8B               	bcf	3979,5,c	;volatile
  5129                           
  5130                           ;actuators_main.c: 58:         LATCbits.LATC6 = 0;
  5131  002868  9C8B               	bcf	3979,6,c	;volatile
  5132                           
  5133                           ;actuators_main.c: 59:         LATCbits.LATC7 = 0;
  5134  00286A  9E8B               	bcf	3979,7,c	;volatile
  5135                           
  5136                           ;actuators_main.c: 60:         LATAbits.LATA5 = 0;
  5137  00286C  9A89               	bcf	3977,5,c	;volatile
  5138                           
  5139                           ;actuators_main.c: 61:         act_cnt++;
  5140  00286E  0101               	movlb	1	; () banked
  5141  002870  4B1A               	infsnz	actuators_main@act_cnt& (0+255),f,b
  5142  002872  2B1B               	incf	(actuators_main@act_cnt+1)& (0+255),f,b
  5143  002874                     l7901:
  5144                           
  5145                           ; BSR set to: 1
  5146                           ;actuators_main.c: 64:     if(act_cnt){
  5147  002874  511A               	movf	actuators_main@act_cnt& (0+255),w,b
  5148  002876  111B               	iorwf	(actuators_main@act_cnt+1)& (0+255),w,b
  5149  002878  A4D8               	btfss	status,2,c
  5150  00287A  0012               	return	
  5151  00287C  D785               	goto	l7821
  5152  00287E                     __end_of_actuators_main:
  5153                           	opt callstack 0
  5154                           
  5155 ;; *************** function _system_init *****************
  5156 ;; Defined at:
  5157 ;;		line 74 in file "actuators_main.c"
  5158 ;; Parameters:    Size  Location     Type
  5159 ;;		None
  5160 ;; Auto vars:     Size  Location     Type
  5161 ;;		None
  5162 ;; Return value:  Size  Location     Type
  5163 ;;                  1    wreg      void 
  5164 ;; Registers used:
  5165 ;;		wreg, status,2
  5166 ;; Tracked objects:
  5167 ;;		On entry : 0/0
  5168 ;;		On exit  : 0/0
  5169 ;;		Unchanged: 0/0
  5170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5175 ;;Total ram usage:        0 bytes
  5176 ;; Hardware stack levels used:    1
  5177 ;; Hardware stack levels required when called:    3
  5178 ;; This function calls:
  5179 ;;		Nothing
  5180 ;; This function is called by:
  5181 ;;		_actuators_main
  5182 ;; This function uses a non-reentrant model
  5183 ;;
  5184                           
  5185                           	psect	text11
  5186  003CA8                     __ptext11:
  5187                           	opt callstack 0
  5188  003CA8                     _system_init:
  5189                           	opt callstack 26
  5190                           
  5191                           ;actuators_main.c: 75:     TRISB = 0x00;
  5192                           
  5193                           ; BSR set to: 1
  5194                           ;incstack = 0
  5195  003CA8  0E00               	movlw	0
  5196  003CAA  6E93               	movwf	3987,c	;volatile
  5197                           
  5198                           ;actuators_main.c: 77:     LATB = 0x0F;
  5199  003CAC  0E0F               	movlw	15
  5200  003CAE  6E8A               	movwf	3978,c	;volatile
  5201                           
  5202                           ;actuators_main.c: 78:     TRISA = 0x00;
  5203  003CB0  0E00               	movlw	0
  5204  003CB2  6E92               	movwf	3986,c	;volatile
  5205                           
  5206                           ;actuators_main.c: 79:     LATA = 0x0F;
  5207  003CB4  0E0F               	movlw	15
  5208  003CB6  6E89               	movwf	3977,c	;volatile
  5209                           
  5210                           ;actuators_main.c: 81:     TRISCbits.TRISC1 = 0;
  5211  003CB8  9294               	bcf	3988,1,c	;volatile
  5212                           
  5213                           ;actuators_main.c: 84:     TRISCbits.TRISC2 = 0;
  5214  003CBA  9494               	bcf	3988,2,c	;volatile
  5215                           
  5216                           ;actuators_main.c: 87:     LATD = 0x00;
  5217  003CBC  0E00               	movlw	0
  5218  003CBE  6E8C               	movwf	3980,c	;volatile
  5219                           
  5220                           ;actuators_main.c: 88:     TRISD = 0x00;
  5221  003CC0  0E00               	movlw	0
  5222  003CC2  6E95               	movwf	3989,c	;volatile
  5223                           
  5224                           ;actuators_main.c: 90:     ADCON1 = 0b00001111;
  5225  003CC4  0E0F               	movlw	15
  5226  003CC6  6EC1               	movwf	4033,c	;volatile
  5227                           
  5228                           ;actuators_main.c: 92:     TRISC = 0x00;
  5229  003CC8  0E00               	movlw	0
  5230  003CCA  6E94               	movwf	3988,c	;volatile
  5231                           
  5232                           ;actuators_main.c: 93:     LATC = 0x00;
  5233  003CCC  0E00               	movlw	0
  5234  003CCE  6E8B               	movwf	3979,c	;volatile
  5235                           
  5236                           ;actuators_main.c: 94:     TRISE = 0x00;
  5237  003CD0  0E00               	movlw	0
  5238  003CD2  6E96               	movwf	3990,c	;volatile
  5239                           
  5240                           ;actuators_main.c: 95:     LATE = 0x00;
  5241  003CD4  0E00               	movlw	0
  5242  003CD6  6E8D               	movwf	3981,c	;volatile
  5243  003CD8  0012               	return		;funcret
  5244  003CDA                     __end_of_system_init:
  5245                           	opt callstack 0
  5246                           
  5247 ;; *************** function _stepper2_back *****************
  5248 ;; Defined at:
  5249 ;;		line 453 in file "actuators_main.c"
  5250 ;; Parameters:    Size  Location     Type
  5251 ;;  direction       1    wreg     unsigned char 
  5252 ;;  steps2_adj      2    0[BANK1 ] int 
  5253 ;; Auto vars:     Size  Location     Type
  5254 ;;  direction       1    3[BANK1 ] unsigned char 
  5255 ;;  i               2    6[BANK1 ] int 
  5256 ;;  count_steppe    2    4[BANK1 ] int 
  5257 ;; Return value:  Size  Location     Type
  5258 ;;                  1    wreg      void 
  5259 ;; Registers used:
  5260 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5261 ;; Tracked objects:
  5262 ;;		On entry : 0/0
  5263 ;;		On exit  : 0/0
  5264 ;;		Unchanged: 0/0
  5265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5266 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5267 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5268 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5269 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5270 ;;Total ram usage:        8 bytes
  5271 ;; Hardware stack levels used:    1
  5272 ;; Hardware stack levels required when called:   15
  5273 ;; This function calls:
  5274 ;;		_full_drive
  5275 ;;		_lcdInst
  5276 ;;		_printf
  5277 ;; This function is called by:
  5278 ;;		_actuators_main
  5279 ;; This function uses a non-reentrant model
  5280 ;;
  5281                           
  5282                           	psect	text12
  5283  0035CA                     __ptext12:
  5284                           	opt callstack 0
  5285  0035CA                     _stepper2_back:
  5286                           	opt callstack 14
  5287                           
  5288                           ;incstack = 0
  5289                           ;stepper2_back@direction stored from wreg
  5290  0035CA  0101               	movlb	1	; () banked
  5291  0035CC  6F03               	movwf	stepper2_back@direction& (0+255),b
  5292                           
  5293                           ;actuators_main.c: 471:     int count_stepper = 0;
  5294  0035CE  0E00               	movlw	0
  5295  0035D0  0101               	movlb	1	; () banked
  5296  0035D2  6F05               	movwf	(stepper2_back@count_stepper+1)& (0+255),b
  5297  0035D4  0E00               	movlw	0
  5298  0035D6  6F04               	movwf	stepper2_back@count_stepper& (0+255),b
  5299                           
  5300                           ; BSR set to: 1
  5301                           ;actuators_main.c: 474:             { lcdInst(0x01); _delay((unsigned long)((5)*(1000000
      +                          0/4000.0)));};
  5302                           
  5303                           ; BSR set to: 1
  5304                           ;actuators_main.c: 473:         if (count_stepper<1){
  5305  0035D8  0E01               	movlw	1
  5306  0035DA  EC61  F01F         	call	_lcdInst
  5307  0035DE  0E11               	movlw	17
  5308  0035E0  0101               	movlb	1	; () banked
  5309  0035E2  6F02               	movwf	??_stepper2_back& (0+255),b
  5310  0035E4  0E3A               	movlw	58
  5311  0035E6                     u9597:
  5312  0035E6  2EE8               	decfsz	wreg,f,c
  5313  0035E8  D7FE               	bra	u9597
  5314  0035EA  2F02               	decfsz	??_stepper2_back& (0+255),f,b
  5315  0035EC  D7FC               	bra	u9597
  5316  0035EE  F000               	nop	
  5317                           
  5318                           ;actuators_main.c: 475:             printf("step1");
  5319  0035F0  0EF4               	movlw	low STR_6
  5320  0035F2  0100               	movlb	0	; () banked
  5321  0035F4  6FED               	movwf	printf@fmt& (0+255),b
  5322  0035F6  0EFF               	movlw	high STR_6
  5323  0035F8  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5324  0035FA  ECFB  F01E         	call	_printf	;wreg free
  5325  0035FE  0EC0               	movlw	192
  5326  003600  EC61  F01F         	call	_lcdInst
  5327                           
  5328                           ;actuators_main.c: 477:             printf("Step speed %d",4);
  5329  003604  0EE2               	movlw	low STR_7
  5330  003606  0100               	movlb	0	; () banked
  5331  003608  6FED               	movwf	printf@fmt& (0+255),b
  5332  00360A  0EFE               	movlw	high STR_7
  5333  00360C  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5334  00360E  0E00               	movlw	0
  5335  003610  6FF0               	movwf	(?_printf+3)& (0+255),b
  5336  003612  0E04               	movlw	4
  5337  003614  6FEF               	movwf	(?_printf+2)& (0+255),b
  5338  003616  ECFB  F01E         	call	_printf	;wreg free
  5339                           
  5340                           ;actuators_main.c: 478:             for(int i=0;i<5;i++){
  5341  00361A  0E00               	movlw	0
  5342  00361C  0101               	movlb	1	; () banked
  5343  00361E  6F07               	movwf	(stepper2_back@i+1)& (0+255),b
  5344  003620  0E00               	movlw	0
  5345  003622  6F06               	movwf	stepper2_back@i& (0+255),b
  5346  003624                     l7571:
  5347                           
  5348                           ; BSR set to: 1
  5349                           ;actuators_main.c: 480:                 full_drive(direction, 2);
  5350  003624  0E00               	movlw	0
  5351  003626  0100               	movlb	0	; () banked
  5352  003628  6FFC               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5353  00362A  0E02               	movlw	2
  5354  00362C  6FFB               	movwf	full_drive@stepper_no& (0+255),b
  5355  00362E  0101               	movlb	1	; () banked
  5356  003630  5103               	movf	stepper2_back@direction& (0+255),w,b
  5357  003632  EC9F  F00B         	call	_full_drive
  5358                           
  5359                           ;actuators_main.c: 482:             }
  5360  003636  0101               	movlb	1	; () banked
  5361  003638  4B06               	infsnz	stepper2_back@i& (0+255),f,b
  5362  00363A  2B07               	incf	(stepper2_back@i+1)& (0+255),f,b
  5363                           
  5364                           ; BSR set to: 1
  5365  00363C  BF07               	btfsc	(stepper2_back@i+1)& (0+255),7,b
  5366  00363E  D7F2               	goto	l7571
  5367  003640  5107               	movf	(stepper2_back@i+1)& (0+255),w,b
  5368  003642  E104               	bnz	u8090
  5369  003644  0E05               	movlw	5
  5370  003646  5D06               	subwf	stepper2_back@i& (0+255),w,b
  5371  003648  A0D8               	btfss	status,0,c
  5372  00364A  D7EC               	goto	l7571
  5373  00364C                     u8090:
  5374                           
  5375                           ; BSR set to: 1
  5376                           ;actuators_main.c: 483:             printf("cnt is %d", count_stepper);
  5377  00364C  0ED9               	movlw	low STR_1
  5378  00364E  0100               	movlb	0	; () banked
  5379  003650  6FED               	movwf	printf@fmt& (0+255),b
  5380  003652  0EFF               	movlw	high STR_1
  5381  003654  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5382  003656  C104  F0EF         	movff	stepper2_back@count_stepper,?_printf+2
  5383  00365A  C105  F0F0         	movff	stepper2_back@count_stepper+1,?_printf+3
  5384  00365E  ECFB  F01E         	call	_printf	;wreg free
  5385                           
  5386                           ;actuators_main.c: 484:             count_stepper++;
  5387  003662  0101               	movlb	1	; () banked
  5388  003664  4B04               	infsnz	stepper2_back@count_stepper& (0+255),f,b
  5389  003666  2B05               	incf	(stepper2_back@count_stepper+1)& (0+255),f,b
  5390                           
  5391                           ; BSR set to: 1
  5392  003668  0012               	return		;funcret
  5393  00366A                     __end_of_stepper2_back:
  5394                           	opt callstack 0
  5395                           
  5396 ;; *************** function _stepper2 *****************
  5397 ;; Defined at:
  5398 ;;		line 368 in file "actuators_main.c"
  5399 ;; Parameters:    Size  Location     Type
  5400 ;;  direction       1    wreg     unsigned char 
  5401 ;;  steps2_adj      2    0[BANK1 ] int 
  5402 ;; Auto vars:     Size  Location     Type
  5403 ;;  direction       1   13[BANK1 ] unsigned char 
  5404 ;;  i               2    9[BANK1 ] int 
  5405 ;;  i               2    7[BANK1 ] int 
  5406 ;;  count_steppe    2   11[BANK1 ] int 
  5407 ;; Return value:  Size  Location     Type
  5408 ;;                  1    wreg      void 
  5409 ;; Registers used:
  5410 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5411 ;; Tracked objects:
  5412 ;;		On entry : 0/0
  5413 ;;		On exit  : 0/0
  5414 ;;		Unchanged: 0/0
  5415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5416 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5417 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5418 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5419 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5420 ;;Total ram usage:       14 bytes
  5421 ;; Hardware stack levels used:    1
  5422 ;; Hardware stack levels required when called:   15
  5423 ;; This function calls:
  5424 ;;		_full_drive
  5425 ;;		_lcdInst
  5426 ;;		_printf
  5427 ;; This function is called by:
  5428 ;;		_actuators_main
  5429 ;; This function uses a non-reentrant model
  5430 ;;
  5431                           
  5432                           	psect	text13
  5433  0030CE                     __ptext13:
  5434                           	opt callstack 0
  5435  0030CE                     _stepper2:
  5436                           	opt callstack 14
  5437                           
  5438                           ; BSR set to: 1
  5439                           ;incstack = 0
  5440                           ;stepper2@direction stored from wreg
  5441  0030CE  0101               	movlb	1	; () banked
  5442  0030D0  6F0D               	movwf	stepper2@direction& (0+255),b
  5443                           
  5444                           ;actuators_main.c: 386:     int count_stepper = 0;
  5445  0030D2  0E00               	movlw	0
  5446  0030D4  0101               	movlb	1	; () banked
  5447  0030D6  6F0C               	movwf	(stepper2@count_stepper+1)& (0+255),b
  5448  0030D8  0E00               	movlw	0
  5449  0030DA  6F0B               	movwf	stepper2@count_stepper& (0+255),b
  5450                           
  5451                           ; BSR set to: 1
  5452                           ;actuators_main.c: 389:     if (direction == 0){
  5453                           
  5454                           ; BSR set to: 1
  5455                           ;actuators_main.c: 388:         if (count_stepper<1){
  5456  0030DC  510D               	movf	stepper2@direction& (0+255),w,b
  5457  0030DE  A4D8               	btfss	status,2,c
  5458  0030E0  D029               	goto	l7533
  5459                           
  5460                           ; BSR set to: 1
  5461                           ;actuators_main.c: 394:             for(int i=0;i<steps2_adj;i++){
  5462  0030E2  0E00               	movlw	0
  5463  0030E4  6F08               	movwf	(stepper2@i+1)& (0+255),b
  5464  0030E6  0E00               	movlw	0
  5465  0030E8  6F07               	movwf	stepper2@i& (0+255),b
  5466  0030EA  D00C               	goto	l7527
  5467  0030EC                     l7523:
  5468                           
  5469                           ; BSR set to: 1
  5470                           ;actuators_main.c: 396:                 full_drive(direction, 2);
  5471  0030EC  0E00               	movlw	0
  5472  0030EE  0100               	movlb	0	; () banked
  5473  0030F0  6FFC               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5474  0030F2  0E02               	movlw	2
  5475  0030F4  6FFB               	movwf	full_drive@stepper_no& (0+255),b
  5476  0030F6  0101               	movlb	1	; () banked
  5477  0030F8  510D               	movf	stepper2@direction& (0+255),w,b
  5478  0030FA  EC9F  F00B         	call	_full_drive
  5479                           
  5480                           ;actuators_main.c: 398:             }
  5481  0030FE  0101               	movlb	1	; () banked
  5482  003100  4B07               	infsnz	stepper2@i& (0+255),f,b
  5483  003102  2B08               	incf	(stepper2@i+1)& (0+255),f,b
  5484  003104                     l7527:
  5485                           
  5486                           ; BSR set to: 1
  5487  003104  5100               	movf	stepper2@steps2_adj& (0+255),w,b
  5488  003106  5D07               	subwf	stepper2@i& (0+255),w,b
  5489  003108  5108               	movf	(stepper2@i+1)& (0+255),w,b
  5490  00310A  0A80               	xorlw	128
  5491  00310C  6F02               	movwf	??_stepper2& (0+255),b
  5492  00310E  5101               	movf	(stepper2@steps2_adj+1)& (0+255),w,b
  5493  003110  0A80               	xorlw	128
  5494  003112  5902               	subwfb	??_stepper2& (0+255),w,b
  5495  003114  A0D8               	btfss	status,0,c
  5496  003116  D7EA               	goto	l7523
  5497                           
  5498                           ; BSR set to: 1
  5499                           ;actuators_main.c: 399:             printf("cnt is %d", count_stepper);
  5500  003118  0ED9               	movlw	low STR_1
  5501  00311A  0100               	movlb	0	; () banked
  5502  00311C  6FED               	movwf	printf@fmt& (0+255),b
  5503  00311E  0EFF               	movlw	high STR_1
  5504  003120  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5505  003122  C10B  F0EF         	movff	stepper2@count_stepper,?_printf+2
  5506  003126  C10C  F0F0         	movff	stepper2@count_stepper+1,?_printf+3
  5507  00312A  ECFB  F01E         	call	_printf	;wreg free
  5508                           
  5509                           ;actuators_main.c: 400:             count_stepper++;
  5510  00312E  0101               	movlb	1	; () banked
  5511  003130  4B0B               	infsnz	stepper2@count_stepper& (0+255),f,b
  5512  003132  2B0C               	incf	(stepper2@count_stepper+1)& (0+255),f,b
  5513  003134                     l7533:
  5514                           
  5515                           ; BSR set to: 1
  5516                           ;actuators_main.c: 402:     if (direction == 1){
  5517  003134  050D               	decf	stepper2@direction& (0+255),w,b
  5518  003136  A4D8               	btfss	status,2,c
  5519  003138  0012               	return	
  5520                           
  5521                           ; BSR set to: 1
  5522                           ;actuators_main.c: 403:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/40
      +                          00.0)));};
  5523  00313A  0E01               	movlw	1
  5524  00313C  EC61  F01F         	call	_lcdInst
  5525  003140  0E11               	movlw	17
  5526  003142  0101               	movlb	1	; () banked
  5527  003144  6F02               	movwf	??_stepper2& (0+255),b
  5528  003146  0E3A               	movlw	58
  5529  003148                     u9607:
  5530  003148  2EE8               	decfsz	wreg,f,c
  5531  00314A  D7FE               	bra	u9607
  5532  00314C  2F02               	decfsz	??_stepper2& (0+255),f,b
  5533  00314E  D7FC               	bra	u9607
  5534  003150  F000               	nop	
  5535                           
  5536                           ;actuators_main.c: 404:                         printf("steppp %d", steps2_adj-(5));
  5537  003152  0ECF               	movlw	low STR_5
  5538  003154  0100               	movlb	0	; () banked
  5539  003156  6FED               	movwf	printf@fmt& (0+255),b
  5540  003158  0EFF               	movlw	high STR_5
  5541  00315A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5542  00315C  0EFB               	movlw	251
  5543  00315E  0101               	movlb	1	; () banked
  5544  003160  2500               	addwf	stepper2@steps2_adj& (0+255),w,b
  5545  003162  0100               	movlb	0	; () banked
  5546  003164  6FEF               	movwf	(?_printf+2)& (0+255),b
  5547  003166  0EFF               	movlw	255
  5548  003168  0101               	movlb	1	; () banked
  5549  00316A  2101               	addwfc	(stepper2@steps2_adj+1)& (0+255),w,b
  5550  00316C  0100               	movlb	0	; () banked
  5551  00316E  6FF0               	movwf	(?_printf+3)& (0+255),b
  5552  003170  ECFB  F01E         	call	_printf	;wreg free
  5553                           
  5554                           ;actuators_main.c: 406:                 for(int i=0;i<(steps2_adj-(5));i++){
  5555  003174  0E00               	movlw	0
  5556  003176  0101               	movlb	1	; () banked
  5557  003178  6F0A               	movwf	(stepper2@i_489+1)& (0+255),b
  5558  00317A  0E00               	movlw	0
  5559  00317C  6F09               	movwf	stepper2@i_489& (0+255),b
  5560  00317E  D00C               	goto	l7547
  5561  003180                     l7543:
  5562                           
  5563                           ; BSR set to: 1
  5564                           ;actuators_main.c: 408:                     full_drive(direction, 2);
  5565  003180  0E00               	movlw	0
  5566  003182  0100               	movlb	0	; () banked
  5567  003184  6FFC               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5568  003186  0E02               	movlw	2
  5569  003188  6FFB               	movwf	full_drive@stepper_no& (0+255),b
  5570  00318A  0101               	movlb	1	; () banked
  5571  00318C  510D               	movf	stepper2@direction& (0+255),w,b
  5572  00318E  EC9F  F00B         	call	_full_drive
  5573                           
  5574                           ;actuators_main.c: 410:                 }
  5575  003192  0101               	movlb	1	; () banked
  5576  003194  4B09               	infsnz	stepper2@i_489& (0+255),f,b
  5577  003196  2B0A               	incf	(stepper2@i_489+1)& (0+255),f,b
  5578  003198                     l7547:
  5579                           
  5580                           ; BSR set to: 1
  5581  003198  0EFB               	movlw	251
  5582  00319A  6F02               	movwf	??_stepper2& (0+255),b
  5583  00319C  0EFF               	movlw	255
  5584  00319E  6F03               	movwf	(??_stepper2+1)& (0+255),b
  5585  0031A0  C100  F104         	movff	stepper2@steps2_adj,??_stepper2+2
  5586  0031A4  C101  F105         	movff	stepper2@steps2_adj+1,??_stepper2+3
  5587  0031A8  5102               	movf	??_stepper2& (0+255),w,b
  5588  0031AA  2704               	addwf	(??_stepper2+2)& (0+255),f,b
  5589  0031AC  5103               	movf	(??_stepper2+1)& (0+255),w,b
  5590  0031AE  2305               	addwfc	(??_stepper2+3)& (0+255),f,b
  5591  0031B0  5104               	movf	(??_stepper2+2)& (0+255),w,b
  5592  0031B2  5D09               	subwf	stepper2@i_489& (0+255),w,b
  5593  0031B4  510A               	movf	(stepper2@i_489+1)& (0+255),w,b
  5594  0031B6  0A80               	xorlw	128
  5595  0031B8  6F06               	movwf	(??_stepper2+4)& (0+255),b
  5596  0031BA  5105               	movf	(??_stepper2+3)& (0+255),w,b
  5597  0031BC  0A80               	xorlw	128
  5598  0031BE  5906               	subwfb	(??_stepper2+4)& (0+255),w,b
  5599  0031C0  A0D8               	btfss	status,0,c
  5600  0031C2  D7DE               	goto	l7543
  5601                           
  5602                           ; BSR set to: 1
  5603                           ;actuators_main.c: 411:                 count_stepper++;
  5604  0031C4  4B0B               	infsnz	stepper2@count_stepper& (0+255),f,b
  5605  0031C6  2B0C               	incf	(stepper2@count_stepper+1)& (0+255),f,b
  5606                           
  5607                           ; BSR set to: 1
  5608  0031C8  0012               	return		;funcret
  5609  0031CA                     __end_of_stepper2:
  5610                           	opt callstack 0
  5611                           
  5612 ;; *************** function _stepper *****************
  5613 ;; Defined at:
  5614 ;;		line 303 in file "actuators_main.c"
  5615 ;; Parameters:    Size  Location     Type
  5616 ;;  stack           2    0[BANK1 ] int 
  5617 ;;  t_dep           2    2[BANK1 ] int 
  5618 ;; Auto vars:     Size  Location     Type
  5619 ;;  i               2   16[BANK1 ] int 
  5620 ;;  i               2   14[BANK1 ] int 
  5621 ;;  i               2   12[BANK1 ] int 
  5622 ;;  i               2   10[BANK1 ] int 
  5623 ;;  count_steppe    2    8[BANK1 ] int 
  5624 ;; Return value:  Size  Location     Type
  5625 ;;                  1    wreg      void 
  5626 ;; Registers used:
  5627 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5628 ;; Tracked objects:
  5629 ;;		On entry : 0/0
  5630 ;;		On exit  : 0/0
  5631 ;;		Unchanged: 0/0
  5632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5633 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5634 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5635 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5636 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5637 ;;Total ram usage:       18 bytes
  5638 ;; Hardware stack levels used:    1
  5639 ;; Hardware stack levels required when called:   15
  5640 ;; This function calls:
  5641 ;;		_full_drive
  5642 ;; This function is called by:
  5643 ;;		_actuators_main
  5644 ;; This function uses a non-reentrant model
  5645 ;;
  5646                           
  5647                           	psect	text14
  5648  00287E                     __ptext14:
  5649                           	opt callstack 0
  5650  00287E                     _stepper:
  5651                           	opt callstack 14
  5652                           
  5653                           ;actuators_main.c: 304:     int count_stepper = 0;
  5654                           
  5655                           ; BSR set to: 1
  5656                           ;incstack = 0
  5657  00287E  0E00               	movlw	0
  5658  002880  0101               	movlb	1	; () banked
  5659  002882  6F09               	movwf	(stepper@count_stepper+1)& (0+255),b
  5660  002884  0E00               	movlw	0
  5661  002886  6F08               	movwf	stepper@count_stepper& (0+255),b
  5662                           
  5663                           ; BSR set to: 1
  5664                           ;actuators_main.c: 313:             if (stack == 1){
  5665                           
  5666                           ; BSR set to: 1
  5667                           ;actuators_main.c: 307:         if (count_stepper<1){
  5668  002888  0500               	decf	stepper@stack& (0+255),w,b
  5669  00288A  1101               	iorwf	(stepper@stack+1)& (0+255),w,b
  5670  00288C  A4D8               	btfss	status,2,c
  5671  00288E  D03E               	goto	u7990
  5672                           
  5673                           ; BSR set to: 1
  5674                           ;actuators_main.c: 314:                 if (t_dep<=3){
  5675  002890  BF03               	btfsc	(stepper@t_dep+1)& (0+255),7,b
  5676  002892  D006               	goto	u7960
  5677  002894  5103               	movf	(stepper@t_dep+1)& (0+255),w,b
  5678  002896  E11B               	bnz	l7469
  5679  002898  0E04               	movlw	4
  5680  00289A  5D02               	subwf	stepper@t_dep& (0+255),w,b
  5681  00289C  B0D8               	btfsc	status,0,c
  5682  00289E  D017               	goto	u7970
  5683  0028A0                     u7960:
  5684                           
  5685                           ; BSR set to: 1
  5686                           ;actuators_main.c: 315:                     for(int i=0;i<14;i++){
  5687  0028A0  0E00               	movlw	0
  5688  0028A2  6F0B               	movwf	(stepper@i+1)& (0+255),b
  5689  0028A4  0E00               	movlw	0
  5690  0028A6  6F0A               	movwf	stepper@i& (0+255),b
  5691  0028A8                     l7463:
  5692                           
  5693                           ; BSR set to: 1
  5694                           ;actuators_main.c: 317:                         full_drive(0, 1);
  5695  0028A8  0E00               	movlw	0
  5696  0028AA  0100               	movlb	0	; () banked
  5697  0028AC  6FFC               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5698  0028AE  0E01               	movlw	1
  5699  0028B0  6FFB               	movwf	full_drive@stepper_no& (0+255),b
  5700  0028B2  0E00               	movlw	0
  5701  0028B4  EC9F  F00B         	call	_full_drive
  5702                           
  5703                           ;actuators_main.c: 319:                     }
  5704  0028B8  0101               	movlb	1	; () banked
  5705  0028BA  4B0A               	infsnz	stepper@i& (0+255),f,b
  5706  0028BC  2B0B               	incf	(stepper@i+1)& (0+255),f,b
  5707                           
  5708                           ; BSR set to: 1
  5709  0028BE  BF0B               	btfsc	(stepper@i+1)& (0+255),7,b
  5710  0028C0  D7F3               	goto	l7463
  5711  0028C2  510B               	movf	(stepper@i+1)& (0+255),w,b
  5712  0028C4  E104               	bnz	u7970
  5713  0028C6  0E0E               	movlw	14
  5714  0028C8  5D0A               	subwf	stepper@i& (0+255),w,b
  5715  0028CA  A0D8               	btfss	status,0,c
  5716  0028CC  D7ED               	goto	l7463
  5717  0028CE                     u7970:
  5718  0028CE                     l7469:
  5719                           
  5720                           ; BSR set to: 1
  5721                           ;actuators_main.c: 321:                 if (t_dep>3){
  5722  0028CE  BF03               	btfsc	(stepper@t_dep+1)& (0+255),7,b
  5723  0028D0  D01D               	goto	u7990
  5724  0028D2  5103               	movf	(stepper@t_dep+1)& (0+255),w,b
  5725  0028D4  E104               	bnz	u7980
  5726  0028D6  0E04               	movlw	4
  5727  0028D8  5D02               	subwf	stepper@t_dep& (0+255),w,b
  5728  0028DA  A0D8               	btfss	status,0,c
  5729  0028DC  D017               	goto	u7990
  5730  0028DE                     u7980:
  5731                           
  5732                           ; BSR set to: 1
  5733                           ;actuators_main.c: 322:                     for(int i=0;i<14 -1;i++){
  5734  0028DE  0E00               	movlw	0
  5735  0028E0  6F0D               	movwf	(stepper@i_479+1)& (0+255),b
  5736  0028E2  0E00               	movlw	0
  5737  0028E4  6F0C               	movwf	stepper@i_479& (0+255),b
  5738  0028E6                     l7477:
  5739                           
  5740                           ; BSR set to: 1
  5741                           ;actuators_main.c: 324:                         full_drive(0, 1);
  5742  0028E6  0E00               	movlw	0
  5743  0028E8  0100               	movlb	0	; () banked
  5744  0028EA  6FFC               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5745  0028EC  0E01               	movlw	1
  5746  0028EE  6FFB               	movwf	full_drive@stepper_no& (0+255),b
  5747  0028F0  0E00               	movlw	0
  5748  0028F2  EC9F  F00B         	call	_full_drive
  5749                           
  5750                           ;actuators_main.c: 326:                     }
  5751  0028F6  0101               	movlb	1	; () banked
  5752  0028F8  4B0C               	infsnz	stepper@i_479& (0+255),f,b
  5753  0028FA  2B0D               	incf	(stepper@i_479+1)& (0+255),f,b
  5754                           
  5755                           ; BSR set to: 1
  5756  0028FC  BF0D               	btfsc	(stepper@i_479+1)& (0+255),7,b
  5757  0028FE  D7F3               	goto	l7477
  5758  002900  510D               	movf	(stepper@i_479+1)& (0+255),w,b
  5759  002902  E104               	bnz	u7990
  5760  002904  0E0D               	movlw	13
  5761  002906  5D0C               	subwf	stepper@i_479& (0+255),w,b
  5762  002908  A0D8               	btfss	status,0,c
  5763  00290A  D7ED               	goto	l7477
  5764  00290C                     u7990:
  5765                           
  5766                           ; BSR set to: 1
  5767                           ;actuators_main.c: 329:             if (stack == 2){
  5768  00290C  0E02               	movlw	2
  5769  00290E  1900               	xorwf	stepper@stack& (0+255),w,b
  5770  002910  1101               	iorwf	(stepper@stack+1)& (0+255),w,b
  5771  002912  A4D8               	btfss	status,2,c
  5772  002914  D056               	goto	u8040
  5773                           
  5774                           ; BSR set to: 1
  5775                           ;actuators_main.c: 330:                 if ((t_dep-8)<=3){
  5776  002916  0EF8               	movlw	248
  5777  002918  6F04               	movwf	??_stepper& (0+255),b
  5778  00291A  0EFF               	movlw	255
  5779  00291C  6F05               	movwf	(??_stepper+1)& (0+255),b
  5780  00291E  C102  F106         	movff	stepper@t_dep,??_stepper+2
  5781  002922  C103  F107         	movff	stepper@t_dep+1,??_stepper+3
  5782  002926  5104               	movf	??_stepper& (0+255),w,b
  5783  002928  2706               	addwf	(??_stepper+2)& (0+255),f,b
  5784  00292A  5105               	movf	(??_stepper+1)& (0+255),w,b
  5785  00292C  2307               	addwfc	(??_stepper+3)& (0+255),f,b
  5786  00292E  BF07               	btfsc	(??_stepper+3)& (0+255),7,b
  5787  002930  D006               	goto	u8010
  5788  002932  5107               	movf	(??_stepper+3)& (0+255),w,b
  5789  002934  E11B               	bnz	l7499
  5790  002936  0E04               	movlw	4
  5791  002938  5D06               	subwf	(??_stepper+2)& (0+255),w,b
  5792  00293A  B0D8               	btfsc	status,0,c
  5793  00293C  D017               	goto	u8020
  5794  00293E                     u8010:
  5795                           
  5796                           ; BSR set to: 1
  5797                           ;actuators_main.c: 331:                     for(int i=0;i<14;i++){
  5798  00293E  0E00               	movlw	0
  5799  002940  6F0F               	movwf	(stepper@i_480+1)& (0+255),b
  5800  002942  0E00               	movlw	0
  5801  002944  6F0E               	movwf	stepper@i_480& (0+255),b
  5802  002946                     l7493:
  5803                           
  5804                           ; BSR set to: 1
  5805                           ;actuators_main.c: 332:                         full_drive(0, 3);
  5806  002946  0E00               	movlw	0
  5807  002948  0100               	movlb	0	; () banked
  5808  00294A  6FFC               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5809  00294C  0E03               	movlw	3
  5810  00294E  6FFB               	movwf	full_drive@stepper_no& (0+255),b
  5811  002950  0E00               	movlw	0
  5812  002952  EC9F  F00B         	call	_full_drive
  5813                           
  5814                           ;actuators_main.c: 335:                     }
  5815  002956  0101               	movlb	1	; () banked
  5816  002958  4B0E               	infsnz	stepper@i_480& (0+255),f,b
  5817  00295A  2B0F               	incf	(stepper@i_480+1)& (0+255),f,b
  5818                           
  5819                           ; BSR set to: 1
  5820  00295C  BF0F               	btfsc	(stepper@i_480+1)& (0+255),7,b
  5821  00295E  D7F3               	goto	l7493
  5822  002960  510F               	movf	(stepper@i_480+1)& (0+255),w,b
  5823  002962  E104               	bnz	u8020
  5824  002964  0E0E               	movlw	14
  5825  002966  5D0E               	subwf	stepper@i_480& (0+255),w,b
  5826  002968  A0D8               	btfss	status,0,c
  5827  00296A  D7ED               	goto	l7493
  5828  00296C                     u8020:
  5829  00296C                     l7499:
  5830                           
  5831                           ; BSR set to: 1
  5832                           ;actuators_main.c: 337:                 if ((t_dep-8)>3){
  5833  00296C  0EF8               	movlw	248
  5834  00296E  6F04               	movwf	??_stepper& (0+255),b
  5835  002970  0EFF               	movlw	255
  5836  002972  6F05               	movwf	(??_stepper+1)& (0+255),b
  5837  002974  C102  F106         	movff	stepper@t_dep,??_stepper+2
  5838  002978  C103  F107         	movff	stepper@t_dep+1,??_stepper+3
  5839  00297C  5104               	movf	??_stepper& (0+255),w,b
  5840  00297E  2706               	addwf	(??_stepper+2)& (0+255),f,b
  5841  002980  5105               	movf	(??_stepper+1)& (0+255),w,b
  5842  002982  2307               	addwfc	(??_stepper+3)& (0+255),f,b
  5843  002984  BF07               	btfsc	(??_stepper+3)& (0+255),7,b
  5844  002986  D01D               	goto	u8040
  5845  002988  5107               	movf	(??_stepper+3)& (0+255),w,b
  5846  00298A  E104               	bnz	u8030
  5847  00298C  0E04               	movlw	4
  5848  00298E  5D06               	subwf	(??_stepper+2)& (0+255),w,b
  5849  002990  A0D8               	btfss	status,0,c
  5850  002992  D017               	goto	u8040
  5851  002994                     u8030:
  5852                           
  5853                           ; BSR set to: 1
  5854                           ;actuators_main.c: 338:                     for(int i=0;i<14 -1;i++){
  5855  002994  0E00               	movlw	0
  5856  002996  6F11               	movwf	(stepper@i_481+1)& (0+255),b
  5857  002998  0E00               	movlw	0
  5858  00299A  6F10               	movwf	stepper@i_481& (0+255),b
  5859  00299C                     l7507:
  5860                           
  5861                           ; BSR set to: 1
  5862                           ;actuators_main.c: 339:                         full_drive(0, 3);
  5863  00299C  0E00               	movlw	0
  5864  00299E  0100               	movlb	0	; () banked
  5865  0029A0  6FFC               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5866  0029A2  0E03               	movlw	3
  5867  0029A4  6FFB               	movwf	full_drive@stepper_no& (0+255),b
  5868  0029A6  0E00               	movlw	0
  5869  0029A8  EC9F  F00B         	call	_full_drive
  5870                           
  5871                           ;actuators_main.c: 342:                     }
  5872  0029AC  0101               	movlb	1	; () banked
  5873  0029AE  4B10               	infsnz	stepper@i_481& (0+255),f,b
  5874  0029B0  2B11               	incf	(stepper@i_481+1)& (0+255),f,b
  5875                           
  5876                           ; BSR set to: 1
  5877  0029B2  BF11               	btfsc	(stepper@i_481+1)& (0+255),7,b
  5878  0029B4  D7F3               	goto	l7507
  5879  0029B6  5111               	movf	(stepper@i_481+1)& (0+255),w,b
  5880  0029B8  E104               	bnz	u8040
  5881  0029BA  0E0D               	movlw	13
  5882  0029BC  5D10               	subwf	stepper@i_481& (0+255),w,b
  5883  0029BE  A0D8               	btfss	status,0,c
  5884  0029C0  D7ED               	goto	l7507
  5885  0029C2                     u8040:
  5886                           
  5887                           ; BSR set to: 1
  5888                           ;actuators_main.c: 346:             count_stepper++;
  5889  0029C2  4B08               	infsnz	stepper@count_stepper& (0+255),f,b
  5890  0029C4  2B09               	incf	(stepper@count_stepper+1)& (0+255),f,b
  5891                           
  5892                           ; BSR set to: 1
  5893                           
  5894                           ;actuators_main.c: 347:         }
  5895  0029C6  0012               	return		;funcret
  5896  0029C8                     __end_of_stepper:
  5897                           	opt callstack 0
  5898                           
  5899 ;; *************** function _full_drive *****************
  5900 ;; Defined at:
  5901 ;;		line 502 in file "actuators_main.c"
  5902 ;; Parameters:    Size  Location     Type
  5903 ;;  direction       1    wreg     unsigned char 
  5904 ;;  stepper_no      2  123[BANK0 ] int 
  5905 ;; Auto vars:     Size  Location     Type
  5906 ;;  direction       1  126[BANK0 ] unsigned char 
  5907 ;; Return value:  Size  Location     Type
  5908 ;;                  1    wreg      void 
  5909 ;; Registers used:
  5910 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5911 ;; Tracked objects:
  5912 ;;		On entry : 0/0
  5913 ;;		On exit  : 0/0
  5914 ;;		Unchanged: 0/0
  5915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5916 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5917 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5918 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5919 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5920 ;;Total ram usage:        4 bytes
  5921 ;; Hardware stack levels used:    1
  5922 ;; Hardware stack levels required when called:   14
  5923 ;; This function calls:
  5924 ;;		_printf
  5925 ;; This function is called by:
  5926 ;;		_stepper
  5927 ;;		_stepper2
  5928 ;;		_stepper2_back
  5929 ;; This function uses a non-reentrant model
  5930 ;;
  5931                           
  5932                           	psect	text15
  5933  00173E                     __ptext15:
  5934                           	opt callstack 0
  5935  00173E                     _full_drive:
  5936                           	opt callstack 14
  5937                           
  5938                           ; BSR set to: 1
  5939                           ;incstack = 0
  5940                           ;full_drive@direction stored from wreg
  5941  00173E  0100               	movlb	0	; () banked
  5942  001740  6FFE               	movwf	full_drive@direction& (0+255),b
  5943                           
  5944                           ;actuators_main.c: 503:     if (stepper_no == 1){
  5945  001742  0100               	movlb	0	; () banked
  5946  001744  05FB               	decf	full_drive@stepper_no& (0+255),w,b
  5947  001746  11FC               	iorwf	(full_drive@stepper_no+1)& (0+255),w,b
  5948  001748  A4D8               	btfss	status,2,c
  5949  00174A  D06B               	goto	l7189
  5950                           
  5951                           ; BSR set to: 0
  5952                           ;actuators_main.c: 504:         if (direction == 1){
  5953  00174C  05FE               	decf	full_drive@direction& (0+255),w,b
  5954  00174E  A4D8               	btfss	status,2,c
  5955  001750  D032               	goto	l7173
  5956                           
  5957                           ; BSR set to: 0
  5958                           ;actuators_main.c: 505:             LATA = 0b00000011;
  5959  001752  0E03               	movlw	3
  5960  001754  6E89               	movwf	3977,c	;volatile
  5961                           
  5962                           ; BSR set to: 0
  5963                           ;actuators_main.c: 506:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5964  001756  0E1E               	movlw	30
  5965  001758  0100               	movlb	0	; () banked
  5966  00175A  6FFD               	movwf	??_full_drive& (0+255),b
  5967  00175C  0E37               	movlw	55
  5968  00175E                     u9617:
  5969  00175E  2EE8               	decfsz	wreg,f,c
  5970  001760  D7FE               	bra	u9617
  5971  001762  2FFD               	decfsz	??_full_drive& (0+255),f,b
  5972  001764  D7FC               	bra	u9617
  5973                           
  5974                           ;actuators_main.c: 507:             LATA = 0b00000110;
  5975  001766  0E06               	movlw	6
  5976  001768  6E89               	movwf	3977,c	;volatile
  5977                           
  5978                           ;actuators_main.c: 508:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5979  00176A  0E1E               	movlw	30
  5980  00176C  0100               	movlb	0	; () banked
  5981  00176E  6FFD               	movwf	??_full_drive& (0+255),b
  5982  001770  0E37               	movlw	55
  5983  001772                     u9627:
  5984  001772  2EE8               	decfsz	wreg,f,c
  5985  001774  D7FE               	bra	u9627
  5986  001776  2FFD               	decfsz	??_full_drive& (0+255),f,b
  5987  001778  D7FC               	bra	u9627
  5988                           
  5989                           ;actuators_main.c: 509:             LATA = 0b00001100;
  5990  00177A  0E0C               	movlw	12
  5991  00177C  6E89               	movwf	3977,c	;volatile
  5992                           
  5993                           ;actuators_main.c: 510:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5994  00177E  0E1E               	movlw	30
  5995  001780  0100               	movlb	0	; () banked
  5996  001782  6FFD               	movwf	??_full_drive& (0+255),b
  5997  001784  0E37               	movlw	55
  5998  001786                     u9637:
  5999  001786  2EE8               	decfsz	wreg,f,c
  6000  001788  D7FE               	bra	u9637
  6001  00178A  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6002  00178C  D7FC               	bra	u9637
  6003                           
  6004                           ;actuators_main.c: 511:             LATA = 0b00001001;
  6005  00178E  0E09               	movlw	9
  6006  001790  6E89               	movwf	3977,c	;volatile
  6007                           
  6008                           ;actuators_main.c: 512:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6009  001792  0E1E               	movlw	30
  6010  001794  0100               	movlb	0	; () banked
  6011  001796  6FFD               	movwf	??_full_drive& (0+255),b
  6012  001798  0E37               	movlw	55
  6013  00179A                     u9647:
  6014  00179A  2EE8               	decfsz	wreg,f,c
  6015  00179C  D7FE               	bra	u9647
  6016  00179E  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6017  0017A0  D7FC               	bra	u9647
  6018                           
  6019                           ;actuators_main.c: 513:             LATA = 0b00000011;
  6020  0017A2  0E03               	movlw	3
  6021  0017A4  6E89               	movwf	3977,c	;volatile
  6022                           
  6023                           ;actuators_main.c: 514:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6024  0017A6  0E1E               	movlw	30
  6025  0017A8  0100               	movlb	0	; () banked
  6026  0017AA  6FFD               	movwf	??_full_drive& (0+255),b
  6027  0017AC  0E37               	movlw	55
  6028  0017AE                     u9657:
  6029  0017AE  2EE8               	decfsz	wreg,f,c
  6030  0017B0  D7FE               	bra	u9657
  6031  0017B2  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6032  0017B4  D7FC               	bra	u9657
  6033  0017B6                     l7173:
  6034                           
  6035                           ;actuators_main.c: 516:         if (direction == 0){
  6036  0017B6  0100               	movlb	0	; () banked
  6037  0017B8  51FE               	movf	full_drive@direction& (0+255),w,b
  6038  0017BA  A4D8               	btfss	status,2,c
  6039  0017BC  D032               	goto	l7189
  6040                           
  6041                           ; BSR set to: 0
  6042                           ;actuators_main.c: 517:             LATA = 0b00001001;
  6043  0017BE  0E09               	movlw	9
  6044  0017C0  6E89               	movwf	3977,c	;volatile
  6045                           
  6046                           ; BSR set to: 0
  6047                           ;actuators_main.c: 518:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6048  0017C2  0E1E               	movlw	30
  6049  0017C4  0100               	movlb	0	; () banked
  6050  0017C6  6FFD               	movwf	??_full_drive& (0+255),b
  6051  0017C8  0E37               	movlw	55
  6052  0017CA                     u9667:
  6053  0017CA  2EE8               	decfsz	wreg,f,c
  6054  0017CC  D7FE               	bra	u9667
  6055  0017CE  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6056  0017D0  D7FC               	bra	u9667
  6057                           
  6058                           ;actuators_main.c: 519:             LATA = 0b00001100;
  6059  0017D2  0E0C               	movlw	12
  6060  0017D4  6E89               	movwf	3977,c	;volatile
  6061                           
  6062                           ;actuators_main.c: 520:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6063  0017D6  0E1E               	movlw	30
  6064  0017D8  0100               	movlb	0	; () banked
  6065  0017DA  6FFD               	movwf	??_full_drive& (0+255),b
  6066  0017DC  0E37               	movlw	55
  6067  0017DE                     u9677:
  6068  0017DE  2EE8               	decfsz	wreg,f,c
  6069  0017E0  D7FE               	bra	u9677
  6070  0017E2  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6071  0017E4  D7FC               	bra	u9677
  6072                           
  6073                           ;actuators_main.c: 521:             LATA = 0b00000110;
  6074  0017E6  0E06               	movlw	6
  6075  0017E8  6E89               	movwf	3977,c	;volatile
  6076                           
  6077                           ;actuators_main.c: 522:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6078  0017EA  0E1E               	movlw	30
  6079  0017EC  0100               	movlb	0	; () banked
  6080  0017EE  6FFD               	movwf	??_full_drive& (0+255),b
  6081  0017F0  0E37               	movlw	55
  6082  0017F2                     u9687:
  6083  0017F2  2EE8               	decfsz	wreg,f,c
  6084  0017F4  D7FE               	bra	u9687
  6085  0017F6  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6086  0017F8  D7FC               	bra	u9687
  6087                           
  6088                           ;actuators_main.c: 523:             LATA = 0b00000011;
  6089  0017FA  0E03               	movlw	3
  6090  0017FC  6E89               	movwf	3977,c	;volatile
  6091                           
  6092                           ;actuators_main.c: 524:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6093  0017FE  0E1E               	movlw	30
  6094  001800  0100               	movlb	0	; () banked
  6095  001802  6FFD               	movwf	??_full_drive& (0+255),b
  6096  001804  0E37               	movlw	55
  6097  001806                     u9697:
  6098  001806  2EE8               	decfsz	wreg,f,c
  6099  001808  D7FE               	bra	u9697
  6100  00180A  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6101  00180C  D7FC               	bra	u9697
  6102                           
  6103                           ;actuators_main.c: 525:             LATA = 0b00001001;
  6104  00180E  0E09               	movlw	9
  6105  001810  6E89               	movwf	3977,c	;volatile
  6106                           
  6107                           ;actuators_main.c: 526:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6108  001812  0E1E               	movlw	30
  6109  001814  0100               	movlb	0	; () banked
  6110  001816  6FFD               	movwf	??_full_drive& (0+255),b
  6111  001818  0E37               	movlw	55
  6112  00181A                     u9707:
  6113  00181A  2EE8               	decfsz	wreg,f,c
  6114  00181C  D7FE               	bra	u9707
  6115  00181E  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6116  001820  D7FC               	bra	u9707
  6117  001822                     l7189:
  6118                           
  6119                           ;actuators_main.c: 529:     if (stepper_no == 2){
  6120  001822  0E02               	movlw	2
  6121  001824  0100               	movlb	0	; () banked
  6122  001826  19FB               	xorwf	full_drive@stepper_no& (0+255),w,b
  6123  001828  11FC               	iorwf	(full_drive@stepper_no+1)& (0+255),w,b
  6124  00182A  A4D8               	btfss	status,2,c
  6125  00182C  D089               	goto	l7267
  6126                           
  6127                           ; BSR set to: 0
  6128                           ;actuators_main.c: 530:         if (direction == 1){
  6129  00182E  05FE               	decf	full_drive@direction& (0+255),w,b
  6130  001830  A4D8               	btfss	status,2,c
  6131  001832  D041               	goto	l7229
  6132                           
  6133                           ; BSR set to: 0
  6134                           ;actuators_main.c: 531:             LATCbits.LATC0 = 1;
  6135  001834  808B               	bsf	3979,0,c	;volatile
  6136                           
  6137                           ;actuators_main.c: 532:             LATEbits.LATE0 = 1;
  6138  001836  808D               	bsf	3981,0,c	;volatile
  6139                           
  6140                           ;actuators_main.c: 533:             LATEbits.LATE1 = 0;
  6141  001838  928D               	bcf	3981,1,c	;volatile
  6142                           
  6143                           ;actuators_main.c: 534:             LATEbits.LATE2 = 0;
  6144  00183A  948D               	bcf	3981,2,c	;volatile
  6145                           
  6146                           ; BSR set to: 0
  6147                           ;actuators_main.c: 535:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6148  00183C  0E0D               	movlw	13
  6149  00183E  0100               	movlb	0	; () banked
  6150  001840  6FFD               	movwf	??_full_drive& (0+255),b
  6151  001842  0EFB               	movlw	251
  6152  001844                     u9717:
  6153  001844  2EE8               	decfsz	wreg,f,c
  6154  001846  D7FE               	bra	u9717
  6155  001848  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6156  00184A  D7FC               	bra	u9717
  6157  00184C  D000               	nop2	
  6158                           
  6159                           ;actuators_main.c: 536:             LATCbits.LATC0 = 0;
  6160  00184E  908B               	bcf	3979,0,c	;volatile
  6161                           
  6162                           ;actuators_main.c: 537:             LATEbits.LATE0 = 1;
  6163  001850  808D               	bsf	3981,0,c	;volatile
  6164                           
  6165                           ;actuators_main.c: 538:             LATEbits.LATE1 = 1;
  6166  001852  828D               	bsf	3981,1,c	;volatile
  6167                           
  6168                           ;actuators_main.c: 539:             LATEbits.LATE2 = 0;
  6169  001854  948D               	bcf	3981,2,c	;volatile
  6170                           
  6171                           ;actuators_main.c: 540:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6172  001856  0E0D               	movlw	13
  6173  001858  0100               	movlb	0	; () banked
  6174  00185A  6FFD               	movwf	??_full_drive& (0+255),b
  6175  00185C  0EFB               	movlw	251
  6176  00185E                     u9727:
  6177  00185E  2EE8               	decfsz	wreg,f,c
  6178  001860  D7FE               	bra	u9727
  6179  001862  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6180  001864  D7FC               	bra	u9727
  6181  001866  D000               	nop2	
  6182                           
  6183                           ;actuators_main.c: 541:             LATCbits.LATC0 = 0;
  6184  001868  908B               	bcf	3979,0,c	;volatile
  6185                           
  6186                           ;actuators_main.c: 542:             LATEbits.LATE0 = 0;
  6187  00186A  908D               	bcf	3981,0,c	;volatile
  6188                           
  6189                           ;actuators_main.c: 543:             LATEbits.LATE1 = 1;
  6190  00186C  828D               	bsf	3981,1,c	;volatile
  6191                           
  6192                           ;actuators_main.c: 544:             LATEbits.LATE2 = 1;
  6193  00186E  848D               	bsf	3981,2,c	;volatile
  6194                           
  6195                           ;actuators_main.c: 545:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6196  001870  0E0D               	movlw	13
  6197  001872  0100               	movlb	0	; () banked
  6198  001874  6FFD               	movwf	??_full_drive& (0+255),b
  6199  001876  0EFB               	movlw	251
  6200  001878                     u9737:
  6201  001878  2EE8               	decfsz	wreg,f,c
  6202  00187A  D7FE               	bra	u9737
  6203  00187C  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6204  00187E  D7FC               	bra	u9737
  6205  001880  D000               	nop2	
  6206                           
  6207                           ;actuators_main.c: 546:             LATCbits.LATC0 = 1;
  6208  001882  808B               	bsf	3979,0,c	;volatile
  6209                           
  6210                           ;actuators_main.c: 547:             LATEbits.LATE0 = 0;
  6211  001884  908D               	bcf	3981,0,c	;volatile
  6212                           
  6213                           ;actuators_main.c: 548:             LATEbits.LATE1 = 0;
  6214  001886  928D               	bcf	3981,1,c	;volatile
  6215                           
  6216                           ;actuators_main.c: 549:             LATEbits.LATE2 = 1;
  6217  001888  848D               	bsf	3981,2,c	;volatile
  6218                           
  6219                           ;actuators_main.c: 550:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6220  00188A  0E0D               	movlw	13
  6221  00188C  0100               	movlb	0	; () banked
  6222  00188E  6FFD               	movwf	??_full_drive& (0+255),b
  6223  001890  0EFB               	movlw	251
  6224  001892                     u9747:
  6225  001892  2EE8               	decfsz	wreg,f,c
  6226  001894  D7FE               	bra	u9747
  6227  001896  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6228  001898  D7FC               	bra	u9747
  6229  00189A  D000               	nop2	
  6230                           
  6231                           ;actuators_main.c: 551:             LATCbits.LATC0 = 1;
  6232  00189C  808B               	bsf	3979,0,c	;volatile
  6233                           
  6234                           ;actuators_main.c: 552:             LATEbits.LATE0 = 1;
  6235  00189E  808D               	bsf	3981,0,c	;volatile
  6236                           
  6237                           ;actuators_main.c: 553:             LATEbits.LATE1 = 0;
  6238  0018A0  928D               	bcf	3981,1,c	;volatile
  6239                           
  6240                           ;actuators_main.c: 554:             LATEbits.LATE2 = 0;
  6241  0018A2  948D               	bcf	3981,2,c	;volatile
  6242                           
  6243                           ;actuators_main.c: 555:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6244  0018A4  0E0D               	movlw	13
  6245  0018A6  0100               	movlb	0	; () banked
  6246  0018A8  6FFD               	movwf	??_full_drive& (0+255),b
  6247  0018AA  0EFB               	movlw	251
  6248  0018AC                     u9757:
  6249  0018AC  2EE8               	decfsz	wreg,f,c
  6250  0018AE  D7FE               	bra	u9757
  6251  0018B0  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6252  0018B2  D7FC               	bra	u9757
  6253  0018B4  D000               	nop2	
  6254  0018B6                     l7229:
  6255                           
  6256                           ;actuators_main.c: 557:         if (direction == 0){
  6257  0018B6  0100               	movlb	0	; () banked
  6258  0018B8  51FE               	movf	full_drive@direction& (0+255),w,b
  6259  0018BA  A4D8               	btfss	status,2,c
  6260  0018BC  D041               	goto	l7267
  6261                           
  6262                           ; BSR set to: 0
  6263                           ;actuators_main.c: 558:             LATCbits.LATC0 = 1;
  6264  0018BE  808B               	bsf	3979,0,c	;volatile
  6265                           
  6266                           ;actuators_main.c: 559:             LATEbits.LATE0 = 0;
  6267  0018C0  908D               	bcf	3981,0,c	;volatile
  6268                           
  6269                           ;actuators_main.c: 560:             LATEbits.LATE1 = 0;
  6270  0018C2  928D               	bcf	3981,1,c	;volatile
  6271                           
  6272                           ;actuators_main.c: 561:             LATEbits.LATE2 = 1;
  6273  0018C4  848D               	bsf	3981,2,c	;volatile
  6274                           
  6275                           ; BSR set to: 0
  6276                           ;actuators_main.c: 562:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6277  0018C6  0E0D               	movlw	13
  6278  0018C8  0100               	movlb	0	; () banked
  6279  0018CA  6FFD               	movwf	??_full_drive& (0+255),b
  6280  0018CC  0EFB               	movlw	251
  6281  0018CE                     u9767:
  6282  0018CE  2EE8               	decfsz	wreg,f,c
  6283  0018D0  D7FE               	bra	u9767
  6284  0018D2  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6285  0018D4  D7FC               	bra	u9767
  6286  0018D6  D000               	nop2	
  6287                           
  6288                           ;actuators_main.c: 563:             LATCbits.LATC0 = 0;
  6289  0018D8  908B               	bcf	3979,0,c	;volatile
  6290                           
  6291                           ;actuators_main.c: 564:             LATEbits.LATE0 = 0;
  6292  0018DA  908D               	bcf	3981,0,c	;volatile
  6293                           
  6294                           ;actuators_main.c: 565:             LATEbits.LATE1 = 1;
  6295  0018DC  828D               	bsf	3981,1,c	;volatile
  6296                           
  6297                           ;actuators_main.c: 566:             LATEbits.LATE2 = 1;
  6298  0018DE  848D               	bsf	3981,2,c	;volatile
  6299                           
  6300                           ;actuators_main.c: 567:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6301  0018E0  0E0D               	movlw	13
  6302  0018E2  0100               	movlb	0	; () banked
  6303  0018E4  6FFD               	movwf	??_full_drive& (0+255),b
  6304  0018E6  0EFB               	movlw	251
  6305  0018E8                     u9777:
  6306  0018E8  2EE8               	decfsz	wreg,f,c
  6307  0018EA  D7FE               	bra	u9777
  6308  0018EC  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6309  0018EE  D7FC               	bra	u9777
  6310  0018F0  D000               	nop2	
  6311                           
  6312                           ;actuators_main.c: 568:             LATCbits.LATC0 = 0;
  6313  0018F2  908B               	bcf	3979,0,c	;volatile
  6314                           
  6315                           ;actuators_main.c: 569:             LATEbits.LATE0 = 1;
  6316  0018F4  808D               	bsf	3981,0,c	;volatile
  6317                           
  6318                           ;actuators_main.c: 570:             LATEbits.LATE1 = 1;
  6319  0018F6  828D               	bsf	3981,1,c	;volatile
  6320                           
  6321                           ;actuators_main.c: 571:             LATEbits.LATE2 = 0;
  6322  0018F8  948D               	bcf	3981,2,c	;volatile
  6323                           
  6324                           ;actuators_main.c: 572:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6325  0018FA  0E0D               	movlw	13
  6326  0018FC  0100               	movlb	0	; () banked
  6327  0018FE  6FFD               	movwf	??_full_drive& (0+255),b
  6328  001900  0EFB               	movlw	251
  6329  001902                     u9787:
  6330  001902  2EE8               	decfsz	wreg,f,c
  6331  001904  D7FE               	bra	u9787
  6332  001906  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6333  001908  D7FC               	bra	u9787
  6334  00190A  D000               	nop2	
  6335                           
  6336                           ;actuators_main.c: 573:             LATCbits.LATC0 = 1;
  6337  00190C  808B               	bsf	3979,0,c	;volatile
  6338                           
  6339                           ;actuators_main.c: 574:             LATEbits.LATE0 = 1;
  6340  00190E  808D               	bsf	3981,0,c	;volatile
  6341                           
  6342                           ;actuators_main.c: 575:             LATEbits.LATE1 = 0;
  6343  001910  928D               	bcf	3981,1,c	;volatile
  6344                           
  6345                           ;actuators_main.c: 576:             LATEbits.LATE2 = 0;
  6346  001912  948D               	bcf	3981,2,c	;volatile
  6347                           
  6348                           ;actuators_main.c: 577:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6349  001914  0E0D               	movlw	13
  6350  001916  0100               	movlb	0	; () banked
  6351  001918  6FFD               	movwf	??_full_drive& (0+255),b
  6352  00191A  0EFB               	movlw	251
  6353  00191C                     u9797:
  6354  00191C  2EE8               	decfsz	wreg,f,c
  6355  00191E  D7FE               	bra	u9797
  6356  001920  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6357  001922  D7FC               	bra	u9797
  6358  001924  D000               	nop2	
  6359                           
  6360                           ;actuators_main.c: 578:             LATCbits.LATC0 = 1;
  6361  001926  808B               	bsf	3979,0,c	;volatile
  6362                           
  6363                           ;actuators_main.c: 579:             LATEbits.LATE0 = 0;
  6364  001928  908D               	bcf	3981,0,c	;volatile
  6365                           
  6366                           ;actuators_main.c: 580:             LATEbits.LATE1 = 0;
  6367  00192A  928D               	bcf	3981,1,c	;volatile
  6368                           
  6369                           ;actuators_main.c: 581:             LATEbits.LATE2 = 1;
  6370  00192C  848D               	bsf	3981,2,c	;volatile
  6371                           
  6372                           ;actuators_main.c: 582:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6373  00192E  0E0D               	movlw	13
  6374  001930  0100               	movlb	0	; () banked
  6375  001932  6FFD               	movwf	??_full_drive& (0+255),b
  6376  001934  0EFB               	movlw	251
  6377  001936                     u9807:
  6378  001936  2EE8               	decfsz	wreg,f,c
  6379  001938  D7FE               	bra	u9807
  6380  00193A  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6381  00193C  D7FC               	bra	u9807
  6382  00193E  D000               	nop2	
  6383  001940                     l7267:
  6384                           
  6385                           ;actuators_main.c: 585:     if (stepper_no == 3){
  6386  001940  0E03               	movlw	3
  6387  001942  0100               	movlb	0	; () banked
  6388  001944  19FB               	xorwf	full_drive@stepper_no& (0+255),w,b
  6389  001946  11FC               	iorwf	(full_drive@stepper_no+1)& (0+255),w,b
  6390  001948  A4D8               	btfss	status,2,c
  6391  00194A  D086               	goto	l7347
  6392                           
  6393                           ; BSR set to: 0
  6394                           ;actuators_main.c: 586:         printf("what");
  6395  00194C  0EFA               	movlw	low STR_9
  6396  00194E  6FED               	movwf	printf@fmt& (0+255),b
  6397  001950  0EFF               	movlw	high STR_9
  6398  001952  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6399  001954  ECFB  F01E         	call	_printf	;wreg free
  6400                           
  6401                           ;actuators_main.c: 587:         if (direction == 0){
  6402  001958  0100               	movlb	0	; () banked
  6403  00195A  51FE               	movf	full_drive@direction& (0+255),w,b
  6404  00195C  A4D8               	btfss	status,2,c
  6405  00195E  D03C               	goto	l7309
  6406                           
  6407                           ; BSR set to: 0
  6408                           ;actuators_main.c: 588:             LATCbits.LATC5 = 1;
  6409  001960  8A8B               	bsf	3979,5,c	;volatile
  6410                           
  6411                           ;actuators_main.c: 589:             LATCbits.LATC6 = 0;
  6412  001962  9C8B               	bcf	3979,6,c	;volatile
  6413                           
  6414                           ;actuators_main.c: 590:             LATCbits.LATC7 = 0;
  6415  001964  9E8B               	bcf	3979,7,c	;volatile
  6416                           
  6417                           ;actuators_main.c: 591:             LATAbits.LATA5 = 1;
  6418  001966  8A89               	bsf	3977,5,c	;volatile
  6419                           
  6420                           ; BSR set to: 0
  6421                           ;actuators_main.c: 592:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6422  001968  0E1E               	movlw	30
  6423  00196A  0100               	movlb	0	; () banked
  6424  00196C  6FFD               	movwf	??_full_drive& (0+255),b
  6425  00196E  0E37               	movlw	55
  6426  001970                     u9817:
  6427  001970  2EE8               	decfsz	wreg,f,c
  6428  001972  D7FE               	bra	u9817
  6429  001974  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6430  001976  D7FC               	bra	u9817
  6431                           
  6432                           ;actuators_main.c: 593:             LATCbits.LATC5 = 1;
  6433  001978  8A8B               	bsf	3979,5,c	;volatile
  6434                           
  6435                           ;actuators_main.c: 594:             LATCbits.LATC6 = 1;
  6436  00197A  8C8B               	bsf	3979,6,c	;volatile
  6437                           
  6438                           ;actuators_main.c: 595:             LATCbits.LATC7 = 0;
  6439  00197C  9E8B               	bcf	3979,7,c	;volatile
  6440                           
  6441                           ;actuators_main.c: 596:             LATAbits.LATA5 = 0;
  6442  00197E  9A89               	bcf	3977,5,c	;volatile
  6443                           
  6444                           ;actuators_main.c: 597:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6445  001980  0E1E               	movlw	30
  6446  001982  0100               	movlb	0	; () banked
  6447  001984  6FFD               	movwf	??_full_drive& (0+255),b
  6448  001986  0E37               	movlw	55
  6449  001988                     u9827:
  6450  001988  2EE8               	decfsz	wreg,f,c
  6451  00198A  D7FE               	bra	u9827
  6452  00198C  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6453  00198E  D7FC               	bra	u9827
  6454                           
  6455                           ;actuators_main.c: 598:             LATCbits.LATC5 = 0;
  6456  001990  9A8B               	bcf	3979,5,c	;volatile
  6457                           
  6458                           ;actuators_main.c: 599:             LATCbits.LATC6 = 1;
  6459  001992  8C8B               	bsf	3979,6,c	;volatile
  6460                           
  6461                           ;actuators_main.c: 600:             LATCbits.LATC7 = 1;
  6462  001994  8E8B               	bsf	3979,7,c	;volatile
  6463                           
  6464                           ;actuators_main.c: 601:             LATAbits.LATA5 = 0;
  6465  001996  9A89               	bcf	3977,5,c	;volatile
  6466                           
  6467                           ;actuators_main.c: 602:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6468  001998  0E1E               	movlw	30
  6469  00199A  0100               	movlb	0	; () banked
  6470  00199C  6FFD               	movwf	??_full_drive& (0+255),b
  6471  00199E  0E37               	movlw	55
  6472  0019A0                     u9837:
  6473  0019A0  2EE8               	decfsz	wreg,f,c
  6474  0019A2  D7FE               	bra	u9837
  6475  0019A4  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6476  0019A6  D7FC               	bra	u9837
  6477                           
  6478                           ;actuators_main.c: 603:             LATCbits.LATC5 = 0;
  6479  0019A8  9A8B               	bcf	3979,5,c	;volatile
  6480                           
  6481                           ;actuators_main.c: 604:             LATCbits.LATC6 = 0;
  6482  0019AA  9C8B               	bcf	3979,6,c	;volatile
  6483                           
  6484                           ;actuators_main.c: 605:             LATCbits.LATC7 = 1;
  6485  0019AC  8E8B               	bsf	3979,7,c	;volatile
  6486                           
  6487                           ;actuators_main.c: 606:             LATAbits.LATA5 = 1;
  6488  0019AE  8A89               	bsf	3977,5,c	;volatile
  6489                           
  6490                           ;actuators_main.c: 607:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6491  0019B0  0E1E               	movlw	30
  6492  0019B2  0100               	movlb	0	; () banked
  6493  0019B4  6FFD               	movwf	??_full_drive& (0+255),b
  6494  0019B6  0E37               	movlw	55
  6495  0019B8                     u9847:
  6496  0019B8  2EE8               	decfsz	wreg,f,c
  6497  0019BA  D7FE               	bra	u9847
  6498  0019BC  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6499  0019BE  D7FC               	bra	u9847
  6500                           
  6501                           ;actuators_main.c: 608:             LATCbits.LATC5 = 1;
  6502  0019C0  8A8B               	bsf	3979,5,c	;volatile
  6503                           
  6504                           ;actuators_main.c: 609:             LATCbits.LATC6 = 0;
  6505  0019C2  9C8B               	bcf	3979,6,c	;volatile
  6506                           
  6507                           ;actuators_main.c: 610:             LATCbits.LATC7 = 0;
  6508  0019C4  9E8B               	bcf	3979,7,c	;volatile
  6509                           
  6510                           ;actuators_main.c: 611:             LATAbits.LATA5 = 1;
  6511  0019C6  8A89               	bsf	3977,5,c	;volatile
  6512                           
  6513                           ;actuators_main.c: 612:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6514  0019C8  0E1E               	movlw	30
  6515  0019CA  0100               	movlb	0	; () banked
  6516  0019CC  6FFD               	movwf	??_full_drive& (0+255),b
  6517  0019CE  0E37               	movlw	55
  6518  0019D0                     u9857:
  6519  0019D0  2EE8               	decfsz	wreg,f,c
  6520  0019D2  D7FE               	bra	u9857
  6521  0019D4  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6522  0019D6  D7FC               	bra	u9857
  6523  0019D8                     l7309:
  6524                           
  6525                           ;actuators_main.c: 614:         if (direction == 1){
  6526  0019D8  0100               	movlb	0	; () banked
  6527  0019DA  05FE               	decf	full_drive@direction& (0+255),w,b
  6528  0019DC  A4D8               	btfss	status,2,c
  6529  0019DE  D03C               	goto	l7347
  6530                           
  6531                           ; BSR set to: 0
  6532                           ;actuators_main.c: 615:             LATCbits.LATC5 = 1;
  6533  0019E0  8A8B               	bsf	3979,5,c	;volatile
  6534                           
  6535                           ;actuators_main.c: 616:             LATCbits.LATC6 = 1;
  6536  0019E2  8C8B               	bsf	3979,6,c	;volatile
  6537                           
  6538                           ;actuators_main.c: 617:             LATCbits.LATC7 = 0;
  6539  0019E4  9E8B               	bcf	3979,7,c	;volatile
  6540                           
  6541                           ;actuators_main.c: 618:             LATAbits.LATA5 = 0;
  6542  0019E6  9A89               	bcf	3977,5,c	;volatile
  6543                           
  6544                           ; BSR set to: 0
  6545                           ;actuators_main.c: 619:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6546  0019E8  0E1E               	movlw	30
  6547  0019EA  0100               	movlb	0	; () banked
  6548  0019EC  6FFD               	movwf	??_full_drive& (0+255),b
  6549  0019EE  0E37               	movlw	55
  6550  0019F0                     u9867:
  6551  0019F0  2EE8               	decfsz	wreg,f,c
  6552  0019F2  D7FE               	bra	u9867
  6553  0019F4  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6554  0019F6  D7FC               	bra	u9867
  6555                           
  6556                           ;actuators_main.c: 620:             LATCbits.LATC5 = 0;
  6557  0019F8  9A8B               	bcf	3979,5,c	;volatile
  6558                           
  6559                           ;actuators_main.c: 621:             LATCbits.LATC6 = 1;
  6560  0019FA  8C8B               	bsf	3979,6,c	;volatile
  6561                           
  6562                           ;actuators_main.c: 622:             LATCbits.LATC7 = 1;
  6563  0019FC  8E8B               	bsf	3979,7,c	;volatile
  6564                           
  6565                           ;actuators_main.c: 623:             LATAbits.LATA5 = 0;
  6566  0019FE  9A89               	bcf	3977,5,c	;volatile
  6567                           
  6568                           ;actuators_main.c: 624:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6569  001A00  0E1E               	movlw	30
  6570  001A02  0100               	movlb	0	; () banked
  6571  001A04  6FFD               	movwf	??_full_drive& (0+255),b
  6572  001A06  0E37               	movlw	55
  6573  001A08                     u9877:
  6574  001A08  2EE8               	decfsz	wreg,f,c
  6575  001A0A  D7FE               	bra	u9877
  6576  001A0C  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6577  001A0E  D7FC               	bra	u9877
  6578                           
  6579                           ;actuators_main.c: 625:             LATCbits.LATC5 = 0;
  6580  001A10  9A8B               	bcf	3979,5,c	;volatile
  6581                           
  6582                           ;actuators_main.c: 626:             LATCbits.LATC6 = 0;
  6583  001A12  9C8B               	bcf	3979,6,c	;volatile
  6584                           
  6585                           ;actuators_main.c: 627:             LATCbits.LATC7 = 1;
  6586  001A14  8E8B               	bsf	3979,7,c	;volatile
  6587                           
  6588                           ;actuators_main.c: 628:             LATAbits.LATA5 = 1;
  6589  001A16  8A89               	bsf	3977,5,c	;volatile
  6590                           
  6591                           ;actuators_main.c: 629:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6592  001A18  0E1E               	movlw	30
  6593  001A1A  0100               	movlb	0	; () banked
  6594  001A1C  6FFD               	movwf	??_full_drive& (0+255),b
  6595  001A1E  0E37               	movlw	55
  6596  001A20                     u9887:
  6597  001A20  2EE8               	decfsz	wreg,f,c
  6598  001A22  D7FE               	bra	u9887
  6599  001A24  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6600  001A26  D7FC               	bra	u9887
  6601                           
  6602                           ;actuators_main.c: 630:             LATCbits.LATC5 = 1;
  6603  001A28  8A8B               	bsf	3979,5,c	;volatile
  6604                           
  6605                           ;actuators_main.c: 631:             LATCbits.LATC6 = 0;
  6606  001A2A  9C8B               	bcf	3979,6,c	;volatile
  6607                           
  6608                           ;actuators_main.c: 632:             LATCbits.LATC7 = 0;
  6609  001A2C  9E8B               	bcf	3979,7,c	;volatile
  6610                           
  6611                           ;actuators_main.c: 633:             LATAbits.LATA5 = 1;
  6612  001A2E  8A89               	bsf	3977,5,c	;volatile
  6613                           
  6614                           ;actuators_main.c: 634:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6615  001A30  0E1E               	movlw	30
  6616  001A32  0100               	movlb	0	; () banked
  6617  001A34  6FFD               	movwf	??_full_drive& (0+255),b
  6618  001A36  0E37               	movlw	55
  6619  001A38                     u9897:
  6620  001A38  2EE8               	decfsz	wreg,f,c
  6621  001A3A  D7FE               	bra	u9897
  6622  001A3C  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6623  001A3E  D7FC               	bra	u9897
  6624                           
  6625                           ;actuators_main.c: 635:             LATCbits.LATC5 = 1;
  6626  001A40  8A8B               	bsf	3979,5,c	;volatile
  6627                           
  6628                           ;actuators_main.c: 636:             LATCbits.LATC6 = 1;
  6629  001A42  8C8B               	bsf	3979,6,c	;volatile
  6630                           
  6631                           ;actuators_main.c: 637:             LATCbits.LATC7 = 0;
  6632  001A44  9E8B               	bcf	3979,7,c	;volatile
  6633                           
  6634                           ;actuators_main.c: 638:             LATAbits.LATA5 = 0;
  6635  001A46  9A89               	bcf	3977,5,c	;volatile
  6636                           
  6637                           ;actuators_main.c: 639:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6638  001A48  0E1E               	movlw	30
  6639  001A4A  0100               	movlb	0	; () banked
  6640  001A4C  6FFD               	movwf	??_full_drive& (0+255),b
  6641  001A4E  0E37               	movlw	55
  6642  001A50                     u9907:
  6643  001A50  2EE8               	decfsz	wreg,f,c
  6644  001A52  D7FE               	bra	u9907
  6645  001A54  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6646  001A56  D7FC               	bra	u9907
  6647  001A58                     l7347:
  6648                           
  6649                           ;actuators_main.c: 642:                     LATA = 0b00000000;
  6650  001A58  0E00               	movlw	0
  6651  001A5A  6E89               	movwf	3977,c	;volatile
  6652                           
  6653                           ;actuators_main.c: 643:         LATCbits.LATC0 = 0;
  6654  001A5C  908B               	bcf	3979,0,c	;volatile
  6655                           
  6656                           ;actuators_main.c: 644:         LATEbits.LATE0 = 0;
  6657  001A5E  908D               	bcf	3981,0,c	;volatile
  6658                           
  6659                           ;actuators_main.c: 645:         LATEbits.LATE1 = 0;
  6660  001A60  928D               	bcf	3981,1,c	;volatile
  6661                           
  6662                           ;actuators_main.c: 646:         LATEbits.LATE2 = 0;
  6663  001A62  948D               	bcf	3981,2,c	;volatile
  6664                           
  6665                           ;actuators_main.c: 647:         LATCbits.LATC5 = 0;
  6666  001A64  9A8B               	bcf	3979,5,c	;volatile
  6667                           
  6668                           ;actuators_main.c: 648:         LATCbits.LATC6 = 0;
  6669  001A66  9C8B               	bcf	3979,6,c	;volatile
  6670                           
  6671                           ;actuators_main.c: 649:         LATCbits.LATC7 = 0;
  6672  001A68  9E8B               	bcf	3979,7,c	;volatile
  6673                           
  6674                           ;actuators_main.c: 650:         LATAbits.LATA5 = 0;
  6675  001A6A  9A89               	bcf	3977,5,c	;volatile
  6676  001A6C  0012               	return		;funcret
  6677  001A6E                     __end_of_full_drive:
  6678                           	opt callstack 0
  6679                           
  6680 ;; *************** function _servo *****************
  6681 ;; Defined at:
  6682 ;;		line 188 in file "actuators_main.c"
  6683 ;; Parameters:    Size  Location     Type
  6684 ;;		None
  6685 ;; Auto vars:     Size  Location     Type
  6686 ;;		None
  6687 ;; Return value:  Size  Location     Type
  6688 ;;                  1    wreg      void 
  6689 ;; Registers used:
  6690 ;;		wreg, status,2, status,0, cstack
  6691 ;; Tracked objects:
  6692 ;;		On entry : 0/0
  6693 ;;		On exit  : 0/0
  6694 ;;		Unchanged: 0/0
  6695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6698 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6699 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6700 ;;Total ram usage:        2 bytes
  6701 ;; Hardware stack levels used:    1
  6702 ;; Hardware stack levels required when called:    4
  6703 ;; This function calls:
  6704 ;;		_servoRotate0
  6705 ;;		_servoRotate180
  6706 ;; This function is called by:
  6707 ;;		_actuators_main
  6708 ;; This function uses a non-reentrant model
  6709 ;;
  6710                           
  6711                           	psect	text16
  6712  0033A6                     __ptext16:
  6713                           	opt callstack 0
  6714  0033A6                     _servo:
  6715                           	opt callstack 25
  6716                           
  6717                           ;actuators_main.c: 190:   TRISB = 0;
  6718                           
  6719                           ;incstack = 0
  6720  0033A6  0E00               	movlw	0
  6721  0033A8  6E93               	movwf	3987,c	;volatile
  6722                           
  6723                           ;actuators_main.c: 191:     TRISC = 0;
  6724  0033AA  0E00               	movlw	0
  6725  0033AC  6E94               	movwf	3988,c	;volatile
  6726                           
  6727                           ;actuators_main.c: 192:     TRISD = 0;
  6728  0033AE  0E00               	movlw	0
  6729  0033B0  6E95               	movwf	3989,c	;volatile
  6730                           
  6731                           ;actuators_main.c: 194:       TRISBbits.RB0 = 0;
  6732  0033B2  9093               	bcf	3987,0,c	;volatile
  6733                           
  6734                           ;actuators_main.c: 195:     LATBbits.LATB0 = 1;
  6735  0033B4  808A               	bsf	3978,0,c	;volatile
  6736                           
  6737                           ;actuators_main.c: 196:     {;actuators_main.c: 198:     servoRotate0(1);
  6738  0033B6  0E00               	movlw	0
  6739  0033B8  0100               	movlb	0	; () banked
  6740  0033BA  6F81               	movwf	(servoRotate0@servo+1)& (0+255),b
  6741  0033BC  0E01               	movlw	1
  6742  0033BE  6F80               	movwf	servoRotate0@servo& (0+255),b
  6743  0033C0  EC5D  F019         	call	_servoRotate0	;wreg free
  6744                           
  6745                           ;actuators_main.c: 202:     servoRotate180(1);
  6746  0033C4  0E00               	movlw	0
  6747  0033C6  0100               	movlb	0	; () banked
  6748  0033C8  6F81               	movwf	(servoRotate180@servo+1)& (0+255),b
  6749  0033CA  0E01               	movlw	1
  6750  0033CC  6F80               	movwf	servoRotate180@servo& (0+255),b
  6751  0033CE  ECE5  F018         	call	_servoRotate180	;wreg free
  6752                           
  6753                           ;actuators_main.c: 203:     _delay((unsigned long)((400)*(10000000/4000.0)));
  6754  0033D2  0E06               	movlw	6
  6755  0033D4  0100               	movlb	0	; () banked
  6756  0033D6  6F86               	movwf	(??_servo+1)& (0+255),b
  6757  0033D8  0E13               	movlw	19
  6758  0033DA  6F85               	movwf	??_servo& (0+255),b
  6759  0033DC  0EAD               	movlw	173
  6760  0033DE                     u9917:
  6761  0033DE  2EE8               	decfsz	wreg,f,c
  6762  0033E0  D7FE               	bra	u9917
  6763  0033E2  2F85               	decfsz	??_servo& (0+255),f,b
  6764  0033E4  D7FC               	bra	u9917
  6765  0033E6  2F86               	decfsz	(??_servo+1)& (0+255),f,b
  6766  0033E8  D7FA               	bra	u9917
  6767  0033EA  D000               	nop2	
  6768                           
  6769                           ;actuators_main.c: 204:     servoRotate0(1);
  6770  0033EC  0E00               	movlw	0
  6771  0033EE  0100               	movlb	0	; () banked
  6772  0033F0  6F81               	movwf	(servoRotate0@servo+1)& (0+255),b
  6773  0033F2  0E01               	movlw	1
  6774  0033F4  6F80               	movwf	servoRotate0@servo& (0+255),b
  6775  0033F6  EC5D  F019         	call	_servoRotate0	;wreg free
  6776                           
  6777                           ;actuators_main.c: 206:     servoRotate180(2);
  6778  0033FA  0E00               	movlw	0
  6779  0033FC  0100               	movlb	0	; () banked
  6780  0033FE  6F81               	movwf	(servoRotate180@servo+1)& (0+255),b
  6781  003400  0E02               	movlw	2
  6782  003402  6F80               	movwf	servoRotate180@servo& (0+255),b
  6783  003404  ECE5  F018         	call	_servoRotate180	;wreg free
  6784                           
  6785                           ;actuators_main.c: 207:     servoRotate0(2);
  6786  003408  0E00               	movlw	0
  6787  00340A  0100               	movlb	0	; () banked
  6788  00340C  6F81               	movwf	(servoRotate0@servo+1)& (0+255),b
  6789  00340E  0E02               	movlw	2
  6790  003410  6F80               	movwf	servoRotate0@servo& (0+255),b
  6791  003412  EC5D  F019         	call	_servoRotate0	;wreg free
  6792                           
  6793                           ;actuators_main.c: 208:     servoRotate180(2);
  6794  003416  0E00               	movlw	0
  6795  003418  0100               	movlb	0	; () banked
  6796  00341A  6F81               	movwf	(servoRotate180@servo+1)& (0+255),b
  6797  00341C  0E02               	movlw	2
  6798  00341E  6F80               	movwf	servoRotate180@servo& (0+255),b
  6799  003420  ECE5  F018         	call	_servoRotate180	;wreg free
  6800                           
  6801                           ;actuators_main.c: 210:     _delay((unsigned long)((50)*(10000000/4000.0)));
  6802  003424  0EA3               	movlw	163
  6803  003426  0100               	movlb	0	; () banked
  6804  003428  6F85               	movwf	??_servo& (0+255),b
  6805  00342A  0E55               	movlw	85
  6806  00342C                     u9927:
  6807  00342C  2EE8               	decfsz	wreg,f,c
  6808  00342E  D7FE               	bra	u9927
  6809  003430  2F85               	decfsz	??_servo& (0+255),f,b
  6810  003432  D7FC               	bra	u9927
  6811                           
  6812                           ;actuators_main.c: 211:         servoRotate0(3);
  6813  003434  0E00               	movlw	0
  6814  003436  0100               	movlb	0	; () banked
  6815  003438  6F81               	movwf	(servoRotate0@servo+1)& (0+255),b
  6816  00343A  0E03               	movlw	3
  6817  00343C  6F80               	movwf	servoRotate0@servo& (0+255),b
  6818  00343E  EC5D  F019         	call	_servoRotate0	;wreg free
  6819                           
  6820                           ;actuators_main.c: 212:     servoRotate0(3);
  6821  003442  0E00               	movlw	0
  6822  003444  0100               	movlb	0	; () banked
  6823  003446  6F81               	movwf	(servoRotate0@servo+1)& (0+255),b
  6824  003448  0E03               	movlw	3
  6825  00344A  6F80               	movwf	servoRotate0@servo& (0+255),b
  6826  00344C  EC5D  F019         	call	_servoRotate0	;wreg free
  6827                           
  6828                           ;actuators_main.c: 213:     servoRotate180(3);
  6829  003450  0E00               	movlw	0
  6830  003452  0100               	movlb	0	; () banked
  6831  003454  6F81               	movwf	(servoRotate180@servo+1)& (0+255),b
  6832  003456  0E03               	movlw	3
  6833  003458  6F80               	movwf	servoRotate180@servo& (0+255),b
  6834  00345A  ECE5  F018         	call	_servoRotate180	;wreg free
  6835  00345E  0012               	return		;funcret
  6836  003460                     __end_of_servo:
  6837                           	opt callstack 0
  6838                           
  6839 ;; *************** function _servoRotate180 *****************
  6840 ;; Defined at:
  6841 ;;		line 142 in file "actuators_main.c"
  6842 ;; Parameters:    Size  Location     Type
  6843 ;;  servo           2    0[BANK0 ] int 
  6844 ;; Auto vars:     Size  Location     Type
  6845 ;;  i               2    3[BANK0 ] unsigned int 
  6846 ;; Return value:  Size  Location     Type
  6847 ;;                  1    wreg      void 
  6848 ;; Registers used:
  6849 ;;		wreg, status,2, status,0
  6850 ;; Tracked objects:
  6851 ;;		On entry : 0/0
  6852 ;;		On exit  : 0/0
  6853 ;;		Unchanged: 0/0
  6854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6855 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6856 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6857 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6858 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6859 ;;Total ram usage:        5 bytes
  6860 ;; Hardware stack levels used:    1
  6861 ;; Hardware stack levels required when called:    3
  6862 ;; This function calls:
  6863 ;;		Nothing
  6864 ;; This function is called by:
  6865 ;;		_servo
  6866 ;; This function uses a non-reentrant model
  6867 ;;
  6868                           
  6869                           	psect	text17
  6870  0031CA                     __ptext17:
  6871                           	opt callstack 0
  6872  0031CA                     _servoRotate180:
  6873                           	opt callstack 25
  6874                           
  6875                           ;actuators_main.c: 142: void servoRotate180(int servo);actuators_main.c: 143: {;actuator
      +                          s_main.c: 144:   unsigned int i;;actuators_main.c: 145:     if (servo==1){
  6876                           
  6877                           ;incstack = 0
  6878  0031CA  0100               	movlb	0	; () banked
  6879  0031CC  0580               	decf	servoRotate180@servo& (0+255),w,b
  6880  0031CE  1181               	iorwf	(servoRotate180@servo+1)& (0+255),w,b
  6881  0031D0  A4D8               	btfss	status,2,c
  6882  0031D2  D027               	goto	u7760
  6883                           
  6884                           ; BSR set to: 0
  6885                           ;actuators_main.c: 146:     for(i=0;i<30;i++)
  6886  0031D4  0E00               	movlw	0
  6887  0031D6  6F84               	movwf	(servoRotate180@i+1)& (0+255),b
  6888  0031D8  0E00               	movlw	0
  6889  0031DA  6F83               	movwf	servoRotate180@i& (0+255),b
  6890  0031DC                     l134:
  6891                           
  6892                           ; BSR set to: 0
  6893                           ;actuators_main.c: 147:         {;actuators_main.c: 148:           RC1 = 1;
  6894  0031DC  8282               	bsf	3970,1,c	;volatile
  6895                           
  6896                           ;actuators_main.c: 149:             RC2 = 1;
  6897  0031DE  8482               	bsf	3970,2,c	;volatile
  6898                           
  6899                           ; BSR set to: 0
  6900                           ;actuators_main.c: 150:           _delay((unsigned long)((450)*(10000000/4000000.0)));
  6901  0031E0  0EE1               	movlw	225
  6902  0031E2                     u9937:
  6903  0031E2  D000               	nop2	
  6904  0031E4  2EE8               	decfsz	wreg,f,c
  6905  0031E6  D7FD               	bra	u9937
  6906                           
  6907                           ;actuators_main.c: 152:           RC2 =0;
  6908  0031E8  9482               	bcf	3970,2,c	;volatile
  6909                           
  6910                           ;actuators_main.c: 153:           _delay((unsigned long)((2100)*(10000000/4000000.0)));
  6911  0031EA  0E07               	movlw	7
  6912  0031EC  0100               	movlb	0	; () banked
  6913  0031EE  6F82               	movwf	??_servoRotate180& (0+255),b
  6914  0031F0  0ED0               	movlw	208
  6915  0031F2                     u9947:
  6916  0031F2  2EE8               	decfsz	wreg,f,c
  6917  0031F4  D7FE               	bra	u9947
  6918  0031F6  2F82               	decfsz	??_servoRotate180& (0+255),f,b
  6919  0031F8  D7FC               	bra	u9947
  6920  0031FA  F000               	nop	
  6921                           
  6922                           ;actuators_main.c: 155:           RC1 = 0;
  6923  0031FC  9282               	bcf	3970,1,c	;volatile
  6924                           
  6925                           ;actuators_main.c: 156:           _delay((unsigned long)((13550)*(10000000/4000000.0)));
  6926  0031FE  0E2C               	movlw	44
  6927  003200  0100               	movlb	0	; () banked
  6928  003202  6F82               	movwf	??_servoRotate180& (0+255),b
  6929  003204  0EFD               	movlw	253
  6930  003206                     u9957:
  6931  003206  2EE8               	decfsz	wreg,f,c
  6932  003208  D7FE               	bra	u9957
  6933  00320A  2F82               	decfsz	??_servoRotate180& (0+255),f,b
  6934  00320C  D7FC               	bra	u9957
  6935  00320E  F000               	nop	
  6936                           
  6937                           ;actuators_main.c: 157:         }
  6938  003210  0100               	movlb	0	; () banked
  6939  003212  4B83               	infsnz	servoRotate180@i& (0+255),f,b
  6940  003214  2B84               	incf	(servoRotate180@i+1)& (0+255),f,b
  6941  003216  5184               	movf	(servoRotate180@i+1)& (0+255),w,b
  6942  003218  E104               	bnz	u7760
  6943  00321A  0E1E               	movlw	30
  6944  00321C  5D83               	subwf	servoRotate180@i& (0+255),w,b
  6945  00321E  A0D8               	btfss	status,0,c
  6946  003220  D7DD               	goto	l134
  6947  003222                     u7760:
  6948                           
  6949                           ; BSR set to: 0
  6950                           ;actuators_main.c: 159:   if (servo==2){
  6951  003222  0E02               	movlw	2
  6952  003224  1980               	xorwf	servoRotate180@servo& (0+255),w,b
  6953  003226  1181               	iorwf	(servoRotate180@servo+1)& (0+255),w,b
  6954  003228  A4D8               	btfss	status,2,c
  6955  00322A  D01F               	goto	u7780
  6956                           
  6957                           ; BSR set to: 0
  6958                           ;actuators_main.c: 160:     for(i=0;i<30;i++)
  6959  00322C  0E00               	movlw	0
  6960  00322E  6F84               	movwf	(servoRotate180@i+1)& (0+255),b
  6961  003230  0E00               	movlw	0
  6962  003232  6F83               	movwf	servoRotate180@i& (0+255),b
  6963  003234                     l137:
  6964                           
  6965                           ; BSR set to: 0
  6966                           ;actuators_main.c: 161:           {;actuators_main.c: 163:     RD1 = 1;
  6967  003234  8283               	bsf	3971,1,c	;volatile
  6968                           
  6969                           ; BSR set to: 0
  6970                           ;actuators_main.c: 166:     _delay((unsigned long)((525)*(10000000/4000000.0)));
  6971  003236  0EBB               	movlw	187
  6972  003238                     u9967:
  6973  003238  D000               	nop2	
  6974  00323A  D000               	nop2	
  6975  00323C  2EE8               	decfsz	wreg,f,c
  6976  00323E  D7FC               	bra	u9967
  6977  003240  D000               	nop2	
  6978  003242  F000               	nop	
  6979                           
  6980                           ;actuators_main.c: 168:     RD1 = 0;
  6981  003244  9283               	bcf	3971,1,c	;volatile
  6982                           
  6983                           ;actuators_main.c: 171:     _delay((unsigned long)((27075)*(10000000/4000000.0)));
  6984  003246  0E58               	movlw	88
  6985  003248  0100               	movlb	0	; () banked
  6986  00324A  6F82               	movwf	??_servoRotate180& (0+255),b
  6987  00324C  0EE6               	movlw	230
  6988  00324E                     u9977:
  6989  00324E  2EE8               	decfsz	wreg,f,c
  6990  003250  D7FE               	bra	u9977
  6991  003252  2F82               	decfsz	??_servoRotate180& (0+255),f,b
  6992  003254  D7FC               	bra	u9977
  6993  003256  D000               	nop2	
  6994                           
  6995                           ;actuators_main.c: 172:           }
  6996  003258  0100               	movlb	0	; () banked
  6997  00325A  4B83               	infsnz	servoRotate180@i& (0+255),f,b
  6998  00325C  2B84               	incf	(servoRotate180@i+1)& (0+255),f,b
  6999  00325E  5184               	movf	(servoRotate180@i+1)& (0+255),w,b
  7000  003260  E104               	bnz	u7780
  7001  003262  0E1E               	movlw	30
  7002  003264  5D83               	subwf	servoRotate180@i& (0+255),w,b
  7003  003266  A0D8               	btfss	status,0,c
  7004  003268  D7E5               	goto	l137
  7005  00326A                     u7780:
  7006                           
  7007                           ; BSR set to: 0
  7008                           ;actuators_main.c: 174:     if (servo==3){
  7009  00326A  0E03               	movlw	3
  7010  00326C  1980               	xorwf	servoRotate180@servo& (0+255),w,b
  7011  00326E  1181               	iorwf	(servoRotate180@servo+1)& (0+255),w,b
  7012  003270  A4D8               	btfss	status,2,c
  7013  003272  0012               	return	
  7014                           
  7015                           ; BSR set to: 0
  7016                           ;actuators_main.c: 175:       for(i=0;i<30;i++)
  7017  003274  0E00               	movlw	0
  7018  003276  6F84               	movwf	(servoRotate180@i+1)& (0+255),b
  7019  003278  0E00               	movlw	0
  7020  00327A  6F83               	movwf	servoRotate180@i& (0+255),b
  7021  00327C                     l140:
  7022                           
  7023                           ; BSR set to: 0
  7024                           ;actuators_main.c: 176:         {;actuators_main.c: 177:         RD0 = 1;
  7025  00327C  8083               	bsf	3971,0,c	;volatile
  7026                           
  7027                           ; BSR set to: 0
  7028                           ;actuators_main.c: 179:         _delay((unsigned long)((2500)*(10000000/4000000.0)));
  7029  00327E  0E09               	movlw	9
  7030  003280  0100               	movlb	0	; () banked
  7031  003282  6F82               	movwf	??_servoRotate180& (0+255),b
  7032  003284  0E1C               	movlw	28
  7033  003286                     u9987:
  7034  003286  2EE8               	decfsz	wreg,f,c
  7035  003288  D7FE               	bra	u9987
  7036  00328A  2F82               	decfsz	??_servoRotate180& (0+255),f,b
  7037  00328C  D7FC               	bra	u9987
  7038  00328E  F000               	nop	
  7039                           
  7040                           ;actuators_main.c: 182:             RD0 = 0;
  7041  003290  9083               	bcf	3971,0,c	;volatile
  7042                           
  7043                           ;actuators_main.c: 184:         _delay((unsigned long)((10500)*(10000000/4000000.0)));
  7044  003292  0E23               	movlw	35
  7045  003294  0100               	movlb	0	; () banked
  7046  003296  6F82               	movwf	??_servoRotate180& (0+255),b
  7047  003298  0E15               	movlw	21
  7048  00329A                     u9997:
  7049  00329A  2EE8               	decfsz	wreg,f,c
  7050  00329C  D7FE               	bra	u9997
  7051  00329E  2F82               	decfsz	??_servoRotate180& (0+255),f,b
  7052  0032A0  D7FC               	bra	u9997
  7053  0032A2  D000               	nop2	
  7054                           
  7055                           ;actuators_main.c: 185:         }
  7056  0032A4  0100               	movlb	0	; () banked
  7057  0032A6  4B83               	infsnz	servoRotate180@i& (0+255),f,b
  7058  0032A8  2B84               	incf	(servoRotate180@i+1)& (0+255),f,b
  7059  0032AA  5184               	movf	(servoRotate180@i+1)& (0+255),w,b
  7060  0032AC  E105               	bnz	u7800
  7061  0032AE  0E1E               	movlw	30
  7062  0032B0  5D83               	subwf	servoRotate180@i& (0+255),w,b
  7063  0032B2  B0D8               	btfsc	status,0,c
  7064  0032B4  0012               	return	
  7065  0032B6  D7E2               	goto	l140
  7066  0032B8                     u7800:
  7067                           
  7068                           ; BSR set to: 0
  7069  0032B8  0012               	return		;funcret
  7070  0032BA                     __end_of_servoRotate180:
  7071                           	opt callstack 0
  7072                           
  7073 ;; *************** function _servoRotate0 *****************
  7074 ;; Defined at:
  7075 ;;		line 98 in file "actuators_main.c"
  7076 ;; Parameters:    Size  Location     Type
  7077 ;;  servo           2    0[BANK0 ] int 
  7078 ;; Auto vars:     Size  Location     Type
  7079 ;;  i               2    3[BANK0 ] unsigned int 
  7080 ;; Return value:  Size  Location     Type
  7081 ;;                  1    wreg      void 
  7082 ;; Registers used:
  7083 ;;		wreg, status,2, status,0
  7084 ;; Tracked objects:
  7085 ;;		On entry : 0/0
  7086 ;;		On exit  : 0/0
  7087 ;;		Unchanged: 0/0
  7088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7089 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7090 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7091 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7092 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7093 ;;Total ram usage:        5 bytes
  7094 ;; Hardware stack levels used:    1
  7095 ;; Hardware stack levels required when called:    3
  7096 ;; This function calls:
  7097 ;;		Nothing
  7098 ;; This function is called by:
  7099 ;;		_servo
  7100 ;; This function uses a non-reentrant model
  7101 ;;
  7102                           
  7103                           	psect	text18
  7104  0032BA                     __ptext18:
  7105                           	opt callstack 0
  7106  0032BA                     _servoRotate0:
  7107                           	opt callstack 25
  7108                           
  7109                           ;actuators_main.c: 99:     unsigned int i;;actuators_main.c: 100:     if (servo==1){
  7110                           
  7111                           ; BSR set to: 0
  7112                           ;incstack = 0
  7113  0032BA  0100               	movlb	0	; () banked
  7114  0032BC  0580               	decf	servoRotate0@servo& (0+255),w,b
  7115  0032BE  1181               	iorwf	(servoRotate0@servo+1)& (0+255),w,b
  7116  0032C0  A4D8               	btfss	status,2,c
  7117  0032C2  D025               	goto	u7700
  7118                           
  7119                           ; BSR set to: 0
  7120                           ;actuators_main.c: 101:       for(i=0;i<30;i++)
  7121  0032C4  0E00               	movlw	0
  7122  0032C6  6F84               	movwf	(servoRotate0@i+1)& (0+255),b
  7123  0032C8  0E00               	movlw	0
  7124  0032CA  6F83               	movwf	servoRotate0@i& (0+255),b
  7125  0032CC                     l122:
  7126                           
  7127                           ; BSR set to: 0
  7128                           ;actuators_main.c: 102:           {;actuators_main.c: 103:             RC1 = 1;
  7129  0032CC  8282               	bsf	3970,1,c	;volatile
  7130                           
  7131                           ;actuators_main.c: 104:             RC2 = 1;
  7132  0032CE  8482               	bsf	3970,2,c	;volatile
  7133                           
  7134                           ; BSR set to: 0
  7135                           ;actuators_main.c: 105:             _delay((unsigned long)((1100)*(10000000/4000000.0)))
      +                          ;
  7136  0032D0  0E04               	movlw	4
  7137  0032D2  0100               	movlb	0	; () banked
  7138  0032D4  6F82               	movwf	??_servoRotate0& (0+255),b
  7139  0032D6  0E91               	movlw	145
  7140  0032D8                     u10007:
  7141  0032D8  2EE8               	decfsz	wreg,f,c
  7142  0032DA  D7FE               	bra	u10007
  7143  0032DC  2F82               	decfsz	??_servoRotate0& (0+255),f,b
  7144  0032DE  D7FC               	bra	u10007
  7145                           
  7146                           ;actuators_main.c: 106:             RC2 = 0;
  7147  0032E0  9482               	bcf	3970,2,c	;volatile
  7148                           
  7149                           ;actuators_main.c: 107:             _delay((unsigned long)((300)*(10000000/4000000.0)));
  7150  0032E2  0EFA               	movlw	250
  7151  0032E4                     u10017:
  7152  0032E4  2EE8               	decfsz	wreg,f,c
  7153  0032E6  D7FE               	bra	u10017
  7154                           
  7155                           ;actuators_main.c: 108:             RC1 = 0;
  7156  0032E8  9282               	bcf	3970,1,c	;volatile
  7157                           
  7158                           ;actuators_main.c: 112:             _delay((unsigned long)((18600)*(10000000/4000000.0))
      +                          );
  7159  0032EA  0E3D               	movlw	61
  7160  0032EC  0100               	movlb	0	; () banked
  7161  0032EE  6F82               	movwf	??_servoRotate0& (0+255),b
  7162  0032F0  0E62               	movlw	98
  7163  0032F2                     u10027:
  7164  0032F2  2EE8               	decfsz	wreg,f,c
  7165  0032F4  D7FE               	bra	u10027
  7166  0032F6  2F82               	decfsz	??_servoRotate0& (0+255),f,b
  7167  0032F8  D7FC               	bra	u10027
  7168  0032FA  F000               	nop	
  7169                           
  7170                           ;actuators_main.c: 113:           }
  7171  0032FC  0100               	movlb	0	; () banked
  7172  0032FE  4B83               	infsnz	servoRotate0@i& (0+255),f,b
  7173  003300  2B84               	incf	(servoRotate0@i+1)& (0+255),f,b
  7174  003302  5184               	movf	(servoRotate0@i+1)& (0+255),w,b
  7175  003304  E104               	bnz	u7700
  7176  003306  0E1E               	movlw	30
  7177  003308  5D83               	subwf	servoRotate0@i& (0+255),w,b
  7178  00330A  A0D8               	btfss	status,0,c
  7179  00330C  D7DF               	goto	l122
  7180  00330E                     u7700:
  7181                           
  7182                           ; BSR set to: 0
  7183                           ;actuators_main.c: 115:     if (servo==2){
  7184  00330E  0E02               	movlw	2
  7185  003310  1980               	xorwf	servoRotate0@servo& (0+255),w,b
  7186  003312  1181               	iorwf	(servoRotate0@servo+1)& (0+255),w,b
  7187  003314  A4D8               	btfss	status,2,c
  7188  003316  D020               	goto	u7720
  7189                           
  7190                           ; BSR set to: 0
  7191                           ;actuators_main.c: 116:       for(i=0;i<30;i++)
  7192  003318  0E00               	movlw	0
  7193  00331A  6F84               	movwf	(servoRotate0@i+1)& (0+255),b
  7194  00331C  0E00               	movlw	0
  7195  00331E  6F83               	movwf	servoRotate0@i& (0+255),b
  7196  003320                     l125:
  7197                           
  7198                           ; BSR set to: 0
  7199                           ;actuators_main.c: 117:         {;actuators_main.c: 119:         RD1 = 1;
  7200  003320  8283               	bsf	3971,1,c	;volatile
  7201                           
  7202                           ; BSR set to: 0
  7203                           ;actuators_main.c: 122:           _delay((unsigned long)((1000)*(10000000/4000000.0)));
  7204  003322  0E04               	movlw	4
  7205  003324  0100               	movlb	0	; () banked
  7206  003326  6F82               	movwf	??_servoRotate0& (0+255),b
  7207  003328  0E3D               	movlw	61
  7208  00332A                     u10037:
  7209  00332A  2EE8               	decfsz	wreg,f,c
  7210  00332C  D7FE               	bra	u10037
  7211  00332E  2F82               	decfsz	??_servoRotate0& (0+255),f,b
  7212  003330  D7FC               	bra	u10037
  7213  003332  D000               	nop2	
  7214                           
  7215                           ;actuators_main.c: 124:         RD1 = 0;
  7216  003334  9283               	bcf	3971,1,c	;volatile
  7217                           
  7218                           ;actuators_main.c: 127:           _delay((unsigned long)((19000)*(10000000/4000000.0)));
  7219  003336  0E3E               	movlw	62
  7220  003338  0100               	movlb	0	; () banked
  7221  00333A  6F82               	movwf	??_servoRotate0& (0+255),b
  7222  00333C  0EAF               	movlw	175
  7223  00333E                     u10047:
  7224  00333E  2EE8               	decfsz	wreg,f,c
  7225  003340  D7FE               	bra	u10047
  7226  003342  2F82               	decfsz	??_servoRotate0& (0+255),f,b
  7227  003344  D7FC               	bra	u10047
  7228                           
  7229                           ;actuators_main.c: 128:         }
  7230  003346  0100               	movlb	0	; () banked
  7231  003348  4B83               	infsnz	servoRotate0@i& (0+255),f,b
  7232  00334A  2B84               	incf	(servoRotate0@i+1)& (0+255),f,b
  7233  00334C  5184               	movf	(servoRotate0@i+1)& (0+255),w,b
  7234  00334E  E104               	bnz	u7720
  7235  003350  0E1E               	movlw	30
  7236  003352  5D83               	subwf	servoRotate0@i& (0+255),w,b
  7237  003354  A0D8               	btfss	status,0,c
  7238  003356  D7E4               	goto	l125
  7239  003358                     u7720:
  7240                           
  7241                           ; BSR set to: 0
  7242                           ;actuators_main.c: 130:     if (servo==3){
  7243  003358  0E03               	movlw	3
  7244  00335A  1980               	xorwf	servoRotate0@servo& (0+255),w,b
  7245  00335C  1181               	iorwf	(servoRotate0@servo+1)& (0+255),w,b
  7246  00335E  A4D8               	btfss	status,2,c
  7247  003360  0012               	return	
  7248                           
  7249                           ; BSR set to: 0
  7250                           ;actuators_main.c: 131:       for(i=0;i<30;i++)
  7251  003362  0E00               	movlw	0
  7252  003364  6F84               	movwf	(servoRotate0@i+1)& (0+255),b
  7253  003366  0E00               	movlw	0
  7254  003368  6F83               	movwf	servoRotate0@i& (0+255),b
  7255  00336A                     l128:
  7256                           
  7257                           ; BSR set to: 0
  7258                           ;actuators_main.c: 132:         {;actuators_main.c: 133:         RD0 = 1;
  7259  00336A  8083               	bsf	3971,0,c	;volatile
  7260                           
  7261                           ; BSR set to: 0
  7262                           ;actuators_main.c: 134:         _delay((unsigned long)((2000)*(10000000/4000000.0)));
  7263  00336C  0E07               	movlw	7
  7264  00336E  0100               	movlb	0	; () banked
  7265  003370  6F82               	movwf	??_servoRotate0& (0+255),b
  7266  003372  0E7D               	movlw	125
  7267  003374                     u10057:
  7268  003374  2EE8               	decfsz	wreg,f,c
  7269  003376  D7FE               	bra	u10057
  7270  003378  2F82               	decfsz	??_servoRotate0& (0+255),f,b
  7271  00337A  D7FC               	bra	u10057
  7272                           
  7273                           ;actuators_main.c: 137:         RD0 = 0;
  7274  00337C  9083               	bcf	3971,0,c	;volatile
  7275                           
  7276                           ;actuators_main.c: 138:         _delay((unsigned long)((11000)*(10000000/4000000.0)));
  7277  00337E  0E24               	movlw	36
  7278  003380  0100               	movlb	0	; () banked
  7279  003382  6F82               	movwf	??_servoRotate0& (0+255),b
  7280  003384  0EB5               	movlw	181
  7281  003386                     u10067:
  7282  003386  2EE8               	decfsz	wreg,f,c
  7283  003388  D7FE               	bra	u10067
  7284  00338A  2F82               	decfsz	??_servoRotate0& (0+255),f,b
  7285  00338C  D7FC               	bra	u10067
  7286  00338E  D000               	nop2	
  7287                           
  7288                           ;actuators_main.c: 139:         }
  7289  003390  0100               	movlb	0	; () banked
  7290  003392  4B83               	infsnz	servoRotate0@i& (0+255),f,b
  7291  003394  2B84               	incf	(servoRotate0@i+1)& (0+255),f,b
  7292  003396  5184               	movf	(servoRotate0@i+1)& (0+255),w,b
  7293  003398  E105               	bnz	u7740
  7294  00339A  0E1E               	movlw	30
  7295  00339C  5D83               	subwf	servoRotate0@i& (0+255),w,b
  7296  00339E  B0D8               	btfsc	status,0,c
  7297  0033A0  0012               	return	
  7298  0033A2  D7E3               	goto	l128
  7299  0033A4                     u7740:
  7300                           
  7301                           ; BSR set to: 0
  7302  0033A4  0012               	return		;funcret
  7303  0033A6                     __end_of_servoRotate0:
  7304                           	opt callstack 0
  7305                           
  7306 ;; *************** function _UI_main *****************
  7307 ;; Defined at:
  7308 ;;		line 482 in file "main.c"
  7309 ;; Parameters:    Size  Location     Type
  7310 ;;  t_dep           2  123[BANK0 ] int 
  7311 ;;  poles_detect    2  125[BANK0 ] int 
  7312 ;; Auto vars:     Size  Location     Type
  7313 ;;  i               1   89[BANK1 ] unsigned char 
  7314 ;;  keypress        1   84[BANK1 ] unsigned char 
  7315 ;;  Pole           80    4[BANK1 ] struct Poles[10]
  7316 ;;  tick            4   85[BANK1 ] unsigned long 
  7317 ;; Return value:  Size  Location     Type
  7318 ;;                  1    wreg      void 
  7319 ;; Registers used:
  7320 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7321 ;; Tracked objects:
  7322 ;;		On entry : 0/0
  7323 ;;		On exit  : 0/0
  7324 ;;		Unchanged: 0/0
  7325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7326 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7327 ;;      Locals:         0       0      86       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7328 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7329 ;;      Totals:         0       4      90       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7330 ;;Total ram usage:       94 bytes
  7331 ;; Hardware stack levels used:    1
  7332 ;; Hardware stack levels required when called:   14
  7333 ;; This function calls:
  7334 ;;		_I2C_Master_Init
  7335 ;;		_I2C_Master_Read
  7336 ;;		_I2C_Master_Start
  7337 ;;		_I2C_Master_Stop
  7338 ;;		_I2C_Master_Write
  7339 ;;		___llmod
  7340 ;;		_initLCD
  7341 ;;		_lcdInst
  7342 ;;		_printf
  7343 ;; This function is called by:
  7344 ;;		_main
  7345 ;; This function uses a non-reentrant model
  7346 ;;
  7347                           
  7348                           	psect	text19
  7349  000012                     __ptext19:
  7350                           	opt callstack 0
  7351  000012                     _UI_main:
  7352                           	opt callstack 16
  7353                           
  7354                           ;main.c: 483:     sens = 0;
  7355                           
  7356                           ; BSR set to: 0
  7357                           ;incstack = 0
  7358  000012  0E00               	movlw	0
  7359  000014  6E59               	movwf	_sens+1,c	;volatile
  7360  000016  0E00               	movlw	0
  7361  000018  6E58               	movwf	_sens,c	;volatile
  7362                           
  7363                           ;main.c: 488:     LATD = 0x00;
  7364  00001A  0E00               	movlw	0
  7365  00001C  6E8C               	movwf	3980,c	;volatile
  7366                           
  7367                           ;main.c: 489:     TRISD = 0x00;
  7368  00001E  0E00               	movlw	0
  7369  000020  6E95               	movwf	3989,c	;volatile
  7370                           
  7371                           ;main.c: 492:     TRISD = 0x00;
  7372  000022  0E00               	movlw	0
  7373  000024  6E95               	movwf	3989,c	;volatile
  7374                           
  7375                           ;main.c: 495:     INT1IE = 1;
  7376  000026  86F0               	bsf	4080,3,c	;volatile
  7377                           
  7378                           ;main.c: 498:     initLCD();
  7379  000028  EC4A  F01C         	call	_initLCD	;wreg free
  7380                           
  7381                           ;main.c: 501:     (INTCONbits.GIE = 1);
  7382  00002C  8EF2               	bsf	4082,7,c	;volatile
  7383                           
  7384                           ;main.c: 503:     I2C_Master_Init(100000);
  7385  00002E  0EA0               	movlw	160
  7386  000030  0100               	movlb	0	; () banked
  7387  000032  6F8D               	movwf	I2C_Master_Init@clockFreq& (0+255),b
  7388  000034  0E86               	movlw	134
  7389  000036  6F8E               	movwf	(I2C_Master_Init@clockFreq+1)& (0+255),b
  7390  000038  0E01               	movlw	1
  7391  00003A  6F8F               	movwf	(I2C_Master_Init@clockFreq+2)& (0+255),b
  7392  00003C  0E00               	movlw	0
  7393  00003E  6F90               	movwf	(I2C_Master_Init@clockFreq+3)& (0+255),b
  7394  000040  ECED  F01C         	call	_I2C_Master_Init	;wreg free
  7395                           
  7396                           ;main.c: 504:     I2C_Master_Start();
  7397  000044  EC72  F01F         	call	_I2C_Master_Start	;wreg free
  7398                           
  7399                           ;main.c: 505:     I2C_Master_Write(0b00010000);
  7400  000048  0E00               	movlw	0
  7401  00004A  0100               	movlb	0	; () banked
  7402  00004C  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  7403  00004E  0E10               	movlw	16
  7404  000050  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  7405  000052  EC69  F01F         	call	_I2C_Master_Write	;wreg free
  7406                           
  7407                           ;main.c: 506:     I2C_Master_Stop();
  7408  000056  EC6E  F01F         	call	_I2C_Master_Stop	;wreg free
  7409                           
  7410                           ;main.c: 516:     if((pressed == 0)&&(sens==0)){
  7411  00005A  0101               	movlb	1	; () banked
  7412  00005C  51D9               	movf	_pressed& (0+255),w,b
  7413  00005E  11DA               	iorwf	(_pressed+1)& (0+255),w,b
  7414  000060  A4D8               	btfss	status,2,c
  7415  000062  D3DC               	goto	u8950
  7416                           
  7417                           ; BSR set to: 1
  7418  000064  5058               	movf	_sens,w,c	;volatile
  7419  000066  1059               	iorwf	_sens+1,w,c	;volatile
  7420  000068  A4D8               	btfss	status,2,c
  7421  00006A  D3D8               	goto	u8950
  7422                           
  7423                           ; BSR set to: 1
  7424                           ;main.c: 517:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  7425  00006C  0E01               	movlw	1
  7426  00006E  EC61  F01F         	call	_lcdInst
  7427  000072  0E11               	movlw	17
  7428  000074  0101               	movlb	1	; () banked
  7429  000076  6F00               	movwf	??_UI_main& (0+255),b
  7430  000078  0E3A               	movlw	58
  7431  00007A                     u10077:
  7432  00007A  2EE8               	decfsz	wreg,f,c
  7433  00007C  D7FE               	bra	u10077
  7434  00007E  2F00               	decfsz	??_UI_main& (0+255),f,b
  7435  000080  D7FC               	bra	u10077
  7436  000082  F000               	nop	
  7437                           
  7438                           ;main.c: 518:         printf("1 - Start");
  7439  000084  0EC5               	movlw	low STR_23
  7440  000086  0100               	movlb	0	; () banked
  7441  000088  6FED               	movwf	printf@fmt& (0+255),b
  7442  00008A  0EFF               	movlw	high STR_23
  7443  00008C  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7444  00008E  ECFB  F01E         	call	_printf	;wreg free
  7445  000092  0EC0               	movlw	192
  7446  000094  EC61  F01F         	call	_lcdInst
  7447                           
  7448                           ;main.c: 520:         printf("2 - Summary");
  7449  000098  0E47               	movlw	low STR_24
  7450  00009A  0100               	movlb	0	; () banked
  7451  00009C  6FED               	movwf	printf@fmt& (0+255),b
  7452  00009E  0EFF               	movlw	high STR_24
  7453  0000A0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7454  0000A2  ECFB  F01E         	call	_printf	;wreg free
  7455  0000A6  0E90               	movlw	144
  7456  0000A8  EC61  F01F         	call	_lcdInst
  7457                           
  7458                           ;main.c: 522:         printf("3 - Date&Time ");
  7459  0000AC  0E6D               	movlw	low STR_25
  7460  0000AE  0100               	movlb	0	; () banked
  7461  0000B0  6FED               	movwf	printf@fmt& (0+255),b
  7462  0000B2  0EFE               	movlw	high STR_25
  7463  0000B4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7464  0000B6  ECFB  F01E         	call	_printf	;wreg free
  7465  0000BA  D3B0               	goto	u8950
  7466  0000BC                     l8091:
  7467                           
  7468                           ;main.c: 533:         if (send){
  7469  0000BC  506D               	movf	_send,w,c
  7470  0000BE  B4D8               	btfsc	status,2,c
  7471  0000C0  D3AD               	goto	u8950
  7472                           
  7473                           ;main.c: 534:         if(key_was_pressed){
  7474  0000C2  0101               	movlb	1	; () banked
  7475  0000C4  51E5               	movf	_key_was_pressed& (0+255),w,b	;volatile
  7476  0000C6  B4D8               	btfsc	status,2,c
  7477  0000C8  D3A9               	goto	u8950
  7478                           
  7479                           ; BSR set to: 1
  7480                           ;main.c: 535:             pressed = 1;
  7481  0000CA  0E00               	movlw	0
  7482  0000CC  6FDA               	movwf	(_pressed+1)& (0+255),b
  7483  0000CE  0E01               	movlw	1
  7484  0000D0  6FD9               	movwf	_pressed& (0+255),b
  7485                           
  7486                           ;main.c: 536:             key_was_pressed = 0;
  7487  0000D2  0E00               	movlw	0
  7488  0000D4  6FE5               	movwf	_key_was_pressed& (0+255),b	;volatile
  7489                           
  7490                           ; BSR set to: 1
  7491                           ;main.c: 537:             unsigned char keypress = (PORTB & 0xF0) >> 4;
  7492  0000D6  3881               	swapf	3969,w,c	;volatile
  7493  0000D8  0B0F               	andlw	15
  7494  0000DA  0B0F               	andlw	15
  7495  0000DC  6F54               	movwf	UI_main@keypress& (0+255),b
  7496                           
  7497                           ; BSR set to: 1
  7498                           ;main.c: 538:             temp = keys[keypress];
  7499  0000DE  0E9D               	movlw	low _keys
  7500  0000E0  2554               	addwf	UI_main@keypress& (0+255),w,b
  7501  0000E2  6EF6               	movwf	tblptrl,c
  7502  0000E4  6AF7               	clrf	tblptrh,c
  7503  0000E6  0EFD               	movlw	high _keys
  7504  0000E8  22F7               	addwfc	tblptrh,f,c
  7505  0000EA                     	if	0	;There are less than 3 active tblptr bytes
  7506  0000EA                     	endif
  7507  0000EA  0008               	tblrd		*
  7508  0000EC  CFF5 F0FF          	movff	tablat,_temp
  7509                           
  7510                           ; BSR set to: 1
  7511                           ;main.c: 539:             temp_int = (temp-'0');
  7512  0000F0  0ED0               	movlw	208
  7513  0000F2  0100               	movlb	0	; () banked
  7514  0000F4  25FF               	addwf	_temp& (0+255),w,b
  7515  0000F6  0101               	movlb	1	; () banked
  7516  0000F8  6FE1               	movwf	_temp_int& (0+255),b
  7517  0000FA  6BE2               	clrf	(_temp_int+1)& (0+255),b
  7518  0000FC  0EFF               	movlw	255
  7519  0000FE  23E2               	addwfc	(_temp_int+1)& (0+255),f,b
  7520                           
  7521                           ; BSR set to: 1
  7522                           ;main.c: 541:             if (temp_int == 0){
  7523  000100  51E1               	movf	_temp_int& (0+255),w,b
  7524  000102  11E2               	iorwf	(_temp_int+1)& (0+255),w,b
  7525  000104  A4D8               	btfss	status,2,c
  7526  000106  D02B               	goto	l8121
  7527                           
  7528                           ; BSR set to: 1
  7529                           ;main.c: 542:                 state = 0;
  7530  000108  0E00               	movlw	0
  7531  00010A  6FE0               	movwf	(_state+1)& (0+255),b
  7532  00010C  0E00               	movlw	0
  7533  00010E  6FDF               	movwf	_state& (0+255),b
  7534                           
  7535                           ; BSR set to: 1
  7536                           ;main.c: 543:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  7537  000110  0E01               	movlw	1
  7538  000112  EC61  F01F         	call	_lcdInst
  7539  000116  0E11               	movlw	17
  7540  000118  0101               	movlb	1	; () banked
  7541  00011A  6F00               	movwf	??_UI_main& (0+255),b
  7542  00011C  0E3A               	movlw	58
  7543  00011E                     u10087:
  7544  00011E  2EE8               	decfsz	wreg,f,c
  7545  000120  D7FE               	bra	u10087
  7546  000122  2F00               	decfsz	??_UI_main& (0+255),f,b
  7547  000124  D7FC               	bra	u10087
  7548  000126  F000               	nop	
  7549                           
  7550                           ;main.c: 544:                 printf("1 - Start");
  7551  000128  0EC5               	movlw	low STR_23
  7552  00012A  0100               	movlb	0	; () banked
  7553  00012C  6FED               	movwf	printf@fmt& (0+255),b
  7554  00012E  0EFF               	movlw	high STR_23
  7555  000130  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7556  000132  ECFB  F01E         	call	_printf	;wreg free
  7557  000136  0EC0               	movlw	192
  7558  000138  EC61  F01F         	call	_lcdInst
  7559                           
  7560                           ;main.c: 546:                 printf("2 - Summary");
  7561  00013C  0E47               	movlw	low STR_24
  7562  00013E  0100               	movlb	0	; () banked
  7563  000140  6FED               	movwf	printf@fmt& (0+255),b
  7564  000142  0EFF               	movlw	high STR_24
  7565  000144  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7566  000146  ECFB  F01E         	call	_printf	;wreg free
  7567  00014A  0E90               	movlw	144
  7568  00014C  EC61  F01F         	call	_lcdInst
  7569                           
  7570                           ;main.c: 548:                 printf("3 - Date&Time ");
  7571  000150  0E6D               	movlw	low STR_25
  7572  000152  0100               	movlb	0	; () banked
  7573  000154  6FED               	movwf	printf@fmt& (0+255),b
  7574  000156  0EFE               	movlw	high STR_25
  7575  000158  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7576  00015A  ECFB  F01E         	call	_printf	;wreg free
  7577  00015E                     l8121:
  7578                           
  7579                           ;main.c: 551:             if ((temp_int == 1)&&(temp!= '*')&&(temp!= '#')){
  7580  00015E  0101               	movlb	1	; () banked
  7581  000160  05E1               	decf	_temp_int& (0+255),w,b
  7582  000162  11E2               	iorwf	(_temp_int+1)& (0+255),w,b
  7583  000164  A4D8               	btfss	status,2,c
  7584  000166  D041               	goto	l8149
  7585                           
  7586                           ; BSR set to: 1
  7587  000168  0E2A               	movlw	42
  7588  00016A  0100               	movlb	0	; () banked
  7589  00016C  19FF               	xorwf	_temp& (0+255),w,b
  7590  00016E  B4D8               	btfsc	status,2,c
  7591  000170  D03C               	goto	l8149
  7592                           
  7593                           ; BSR set to: 0
  7594  000172  0E23               	movlw	35
  7595  000174  19FF               	xorwf	_temp& (0+255),w,b
  7596  000176  B4D8               	btfsc	status,2,c
  7597  000178  D038               	goto	l8149
  7598                           
  7599                           ; BSR set to: 0
  7600                           ;main.c: 552:                 state = 0;
  7601  00017A  0E00               	movlw	0
  7602  00017C  0101               	movlb	1	; () banked
  7603  00017E  6FE0               	movwf	(_state+1)& (0+255),b
  7604  000180  0E00               	movlw	0
  7605  000182  6FDF               	movwf	_state& (0+255),b
  7606                           
  7607                           ; BSR set to: 1
  7608                           ;main.c: 553:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  7609  000184  0E01               	movlw	1
  7610  000186  EC61  F01F         	call	_lcdInst
  7611  00018A  0E11               	movlw	17
  7612  00018C  0101               	movlb	1	; () banked
  7613  00018E  6F00               	movwf	??_UI_main& (0+255),b
  7614  000190  0E3A               	movlw	58
  7615  000192                     u10097:
  7616  000192  2EE8               	decfsz	wreg,f,c
  7617  000194  D7FE               	bra	u10097
  7618  000196  2F00               	decfsz	??_UI_main& (0+255),f,b
  7619  000198  D7FC               	bra	u10097
  7620  00019A  F000               	nop	
  7621                           
  7622                           ;main.c: 554:                 printf("Machine In Use");
  7623  00019C  0E8B               	movlw	low STR_29
  7624  00019E  0100               	movlb	0	; () banked
  7625  0001A0  6FED               	movwf	printf@fmt& (0+255),b
  7626  0001A2  0EFE               	movlw	high STR_29
  7627  0001A4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7628  0001A6  ECFB  F01E         	call	_printf	;wreg free
  7629  0001AA  0ED0               	movlw	208
  7630  0001AC  EC61  F01F         	call	_lcdInst
  7631                           
  7632                           ;main.c: 556:                 printf("     0-Menu     ");
  7633  0001B0  0EC6               	movlw	low STR_30
  7634  0001B2  0100               	movlb	0	; () banked
  7635  0001B4  6FED               	movwf	printf@fmt& (0+255),b
  7636  0001B6  0EFD               	movlw	high STR_30
  7637  0001B8  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7638  0001BA  ECFB  F01E         	call	_printf	;wreg free
  7639                           
  7640                           ;main.c: 560:                 I2C_Master_Start();
  7641  0001BE  EC72  F01F         	call	_I2C_Master_Start	;wreg free
  7642                           
  7643                           ;main.c: 561:                 I2C_Master_Write(0b00010000);
  7644  0001C2  0E00               	movlw	0
  7645  0001C4  0100               	movlb	0	; () banked
  7646  0001C6  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  7647  0001C8  0E10               	movlw	16
  7648  0001CA  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  7649  0001CC  EC69  F01F         	call	_I2C_Master_Write	;wreg free
  7650                           
  7651                           ;main.c: 562:                 I2C_Master_Write('1');
  7652  0001D0  0E00               	movlw	0
  7653  0001D2  0100               	movlb	0	; () banked
  7654  0001D4  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  7655  0001D6  0E31               	movlw	49
  7656  0001D8  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  7657  0001DA  EC69  F01F         	call	_I2C_Master_Write	;wreg free
  7658                           
  7659                           ;main.c: 563:                 I2C_Master_Stop();
  7660  0001DE  EC6E  F01F         	call	_I2C_Master_Stop	;wreg free
  7661                           
  7662                           ;main.c: 565:                 sens = 1;
  7663  0001E2  0E00               	movlw	0
  7664  0001E4  6E59               	movwf	_sens+1,c	;volatile
  7665  0001E6  0E01               	movlw	1
  7666  0001E8  6E58               	movwf	_sens,c	;volatile
  7667  0001EA                     l8149:
  7668                           
  7669                           ;main.c: 568:                 if ((temp_int == 2)||(state == 2)){
  7670  0001EA  0E02               	movlw	2
  7671  0001EC  0101               	movlb	1	; () banked
  7672  0001EE  19E1               	xorwf	_temp_int& (0+255),w,b
  7673  0001F0  11E2               	iorwf	(_temp_int+1)& (0+255),w,b
  7674  0001F2  B4D8               	btfsc	status,2,c
  7675  0001F4  D005               	goto	u8810
  7676                           
  7677                           ; BSR set to: 1
  7678  0001F6  0E02               	movlw	2
  7679  0001F8  19DF               	xorwf	_state& (0+255),w,b
  7680  0001FA  11E0               	iorwf	(_state+1)& (0+255),w,b
  7681  0001FC  A4D8               	btfss	status,2,c
  7682  0001FE  D253               	goto	l8259
  7683  000200                     u8810:
  7684                           
  7685                           ; BSR set to: 1
  7686                           ;main.c: 569:                     if ((temp_int == 2)){
  7687  000200  0E02               	movlw	2
  7688  000202  19E1               	xorwf	_temp_int& (0+255),w,b
  7689  000204  11E2               	iorwf	(_temp_int+1)& (0+255),w,b
  7690  000206  A4D8               	btfss	status,2,c
  7691  000208  D033               	goto	l8171
  7692                           
  7693                           ; BSR set to: 1
  7694                           ;main.c: 570:                         state = 2;
  7695  00020A  0E00               	movlw	0
  7696  00020C  6FE0               	movwf	(_state+1)& (0+255),b
  7697  00020E  0E02               	movlw	2
  7698  000210  6FDF               	movwf	_state& (0+255),b
  7699                           
  7700                           ;main.c: 571:                         disp = 0;
  7701  000212  0E00               	movlw	0
  7702  000214  6FDE               	movwf	(_disp+1)& (0+255),b
  7703  000216  0E00               	movlw	0
  7704  000218  6FDD               	movwf	_disp& (0+255),b
  7705                           
  7706                           ; BSR set to: 1
  7707                           ;main.c: 572:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  7708  00021A  0E01               	movlw	1
  7709  00021C  EC61  F01F         	call	_lcdInst
  7710  000220  0E11               	movlw	17
  7711  000222  0101               	movlb	1	; () banked
  7712  000224  6F00               	movwf	??_UI_main& (0+255),b
  7713  000226  0E3A               	movlw	58
  7714  000228                     u10107:
  7715  000228  2EE8               	decfsz	wreg,f,c
  7716  00022A  D7FE               	bra	u10107
  7717  00022C  2F00               	decfsz	??_UI_main& (0+255),f,b
  7718  00022E  D7FC               	bra	u10107
  7719  000230  F000               	nop	
  7720                           
  7721                           ;main.c: 573:                         printf("Op Time:");
  7722  000232  0EE3               	movlw	low STR_31
  7723  000234  0100               	movlb	0	; () banked
  7724  000236  6FED               	movwf	printf@fmt& (0+255),b
  7725  000238  0EFF               	movlw	high STR_31
  7726  00023A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7727  00023C  ECFB  F01E         	call	_printf	;wreg free
  7728  000240  0EC0               	movlw	192
  7729  000242  EC61  F01F         	call	_lcdInst
  7730                           
  7731                           ;main.c: 575:                         printf("%d", cnt);
  7732  000246  0EC3               	movlw	low (STR_59+11)
  7733  000248  0100               	movlb	0	; () banked
  7734  00024A  6FED               	movwf	printf@fmt& (0+255),b
  7735  00024C  0EFE               	movlw	high (STR_59+11)
  7736  00024E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7737  000250  0E00               	movlw	0
  7738  000252  6FF0               	movwf	(?_printf+3)& (0+255),b
  7739  000254  0E00               	movlw	0
  7740  000256  6FEF               	movwf	(?_printf+2)& (0+255),b
  7741  000258  ECFB  F01E         	call	_printf	;wreg free
  7742  00025C  0ED0               	movlw	208
  7743  00025E  EC61  F01F         	call	_lcdInst
  7744                           
  7745                           ;main.c: 577:                         printf("    0-Menu   #>");
  7746  000262  0E0B               	movlw	low (STR_36+1)
  7747  000264  0100               	movlb	0	; () banked
  7748  000266  6FED               	movwf	printf@fmt& (0+255),b
  7749  000268  0EFE               	movlw	high (STR_36+1)
  7750  00026A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7751  00026C  ECFB  F01E         	call	_printf	;wreg free
  7752  000270                     l8171:
  7753                           
  7754                           ;main.c: 579:                     if ((temp == '*') && (disp != 0)){
  7755  000270  0E2A               	movlw	42
  7756  000272  0100               	movlb	0	; () banked
  7757  000274  19FF               	xorwf	_temp& (0+255),w,b
  7758  000276  A4D8               	btfss	status,2,c
  7759  000278  D00B               	goto	l519
  7760                           
  7761                           ; BSR set to: 0
  7762  00027A  0101               	movlb	1	; () banked
  7763  00027C  51DD               	movf	_disp& (0+255),w,b
  7764  00027E  11DE               	iorwf	(_disp+1)& (0+255),w,b
  7765  000280  B4D8               	btfsc	status,2,c
  7766  000282  D006               	goto	l519
  7767                           
  7768                           ; BSR set to: 1
  7769                           ;main.c: 580:                         disp = disp - 1;
  7770  000284  0EFF               	movlw	255
  7771  000286  25DD               	addwf	_disp& (0+255),w,b
  7772  000288  6FDD               	movwf	_disp& (0+255),b
  7773  00028A  0EFF               	movlw	255
  7774  00028C  21DE               	addwfc	(_disp+1)& (0+255),w,b
  7775  00028E  6FDE               	movwf	(_disp+1)& (0+255),b
  7776  000290                     l519:
  7777                           
  7778                           ;main.c: 582:                     if ((temp == '#')&& (disp <12)){
  7779  000290  0E23               	movlw	35
  7780  000292  0100               	movlb	0	; () banked
  7781  000294  19FF               	xorwf	_temp& (0+255),w,b
  7782  000296  A4D8               	btfss	status,2,c
  7783  000298  D00B               	goto	l8181
  7784                           
  7785                           ; BSR set to: 0
  7786  00029A  0101               	movlb	1	; () banked
  7787  00029C  BFDE               	btfsc	(_disp+1)& (0+255),7,b
  7788  00029E  D006               	goto	u8860
  7789  0002A0  51DE               	movf	(_disp+1)& (0+255),w,b
  7790  0002A2  E106               	bnz	l8181
  7791  0002A4  0E0C               	movlw	12
  7792  0002A6  5DDD               	subwf	_disp& (0+255),w,b
  7793  0002A8  B0D8               	btfsc	status,0,c
  7794  0002AA  D002               	goto	l8181
  7795  0002AC                     u8860:
  7796                           
  7797                           ; BSR set to: 1
  7798                           ;main.c: 583:                         disp++;
  7799  0002AC  4BDD               	infsnz	_disp& (0+255),f,b
  7800  0002AE  2BDE               	incf	(_disp+1)& (0+255),f,b
  7801  0002B0                     l8181:
  7802                           
  7803                           ;main.c: 585:                     if (disp == 0){
  7804  0002B0  0101               	movlb	1	; () banked
  7805  0002B2  51DD               	movf	_disp& (0+255),w,b
  7806  0002B4  11DE               	iorwf	(_disp+1)& (0+255),w,b
  7807  0002B6  A4D8               	btfss	status,2,c
  7808  0002B8  D02B               	goto	l8197
  7809                           
  7810                           ; BSR set to: 1
  7811                           ;main.c: 586:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  7812  0002BA  0E01               	movlw	1
  7813  0002BC  EC61  F01F         	call	_lcdInst
  7814  0002C0  0E11               	movlw	17
  7815  0002C2  0101               	movlb	1	; () banked
  7816  0002C4  6F00               	movwf	??_UI_main& (0+255),b
  7817  0002C6  0E3A               	movlw	58
  7818  0002C8                     u10117:
  7819  0002C8  2EE8               	decfsz	wreg,f,c
  7820  0002CA  D7FE               	bra	u10117
  7821  0002CC  2F00               	decfsz	??_UI_main& (0+255),f,b
  7822  0002CE  D7FC               	bra	u10117
  7823  0002D0  F000               	nop	
  7824                           
  7825                           ;main.c: 587:                         printf("Op Time:");
  7826  0002D2  0EE3               	movlw	low STR_31
  7827  0002D4  0100               	movlb	0	; () banked
  7828  0002D6  6FED               	movwf	printf@fmt& (0+255),b
  7829  0002D8  0EFF               	movlw	high STR_31
  7830  0002DA  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7831  0002DC  ECFB  F01E         	call	_printf	;wreg free
  7832  0002E0  0EC0               	movlw	192
  7833  0002E2  EC61  F01F         	call	_lcdInst
  7834                           
  7835                           ;main.c: 589:                         printf("%d", cnt);
  7836  0002E6  0EC3               	movlw	low (STR_59+11)
  7837  0002E8  0100               	movlb	0	; () banked
  7838  0002EA  6FED               	movwf	printf@fmt& (0+255),b
  7839  0002EC  0EFE               	movlw	high (STR_59+11)
  7840  0002EE  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7841  0002F0  0E00               	movlw	0
  7842  0002F2  6FF0               	movwf	(?_printf+3)& (0+255),b
  7843  0002F4  0E00               	movlw	0
  7844  0002F6  6FEF               	movwf	(?_printf+2)& (0+255),b
  7845  0002F8  ECFB  F01E         	call	_printf	;wreg free
  7846  0002FC  0ED0               	movlw	208
  7847  0002FE  EC61  F01F         	call	_lcdInst
  7848                           
  7849                           ;main.c: 591:                         printf("     0-Menu   #>");
  7850  000302  0E0A               	movlw	low STR_36
  7851  000304  0100               	movlb	0	; () banked
  7852  000306  6FED               	movwf	printf@fmt& (0+255),b
  7853  000308  0EFE               	movlw	high STR_36
  7854  00030A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7855  00030C  ECFB  F01E         	call	_printf	;wreg free
  7856  000310                     l8197:
  7857                           
  7858                           ;main.c: 594:                     if (disp == 1){
  7859  000310  0101               	movlb	1	; () banked
  7860  000312  05DD               	decf	_disp& (0+255),w,b
  7861  000314  11DE               	iorwf	(_disp+1)& (0+255),w,b
  7862  000316  A4D8               	btfss	status,2,c
  7863  000318  D02F               	goto	l8213
  7864                           
  7865                           ; BSR set to: 1
  7866                           ;main.c: 595:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  7867  00031A  0E01               	movlw	1
  7868  00031C  EC61  F01F         	call	_lcdInst
  7869  000320  0E11               	movlw	17
  7870  000322  0101               	movlb	1	; () banked
  7871  000324  6F00               	movwf	??_UI_main& (0+255),b
  7872  000326  0E3A               	movlw	58
  7873  000328                     u10127:
  7874  000328  2EE8               	decfsz	wreg,f,c
  7875  00032A  D7FE               	bra	u10127
  7876  00032C  2F00               	decfsz	??_UI_main& (0+255),f,b
  7877  00032E  D7FC               	bra	u10127
  7878  000330  F000               	nop	
  7879                           
  7880                           ;main.c: 596:                         printf("No. Tires: %d",t_dep);
  7881  000332  0ED4               	movlw	low STR_37
  7882  000334  0100               	movlb	0	; () banked
  7883  000336  6FED               	movwf	printf@fmt& (0+255),b
  7884  000338  0EFE               	movlw	high STR_37
  7885  00033A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7886  00033C  C0FB  F0EF         	movff	UI_main@t_dep,?_printf+2
  7887  000340  C0FC  F0F0         	movff	UI_main@t_dep+1,?_printf+3
  7888  000344  ECFB  F01E         	call	_printf	;wreg free
  7889  000348  0EC0               	movlw	192
  7890  00034A  EC61  F01F         	call	_lcdInst
  7891                           
  7892                           ;main.c: 598:                         printf("No. Poles: %d", poles_detected);
  7893  00034E  0EC6               	movlw	low STR_38
  7894  000350  0100               	movlb	0	; () banked
  7895  000352  6FED               	movwf	printf@fmt& (0+255),b
  7896  000354  0EFE               	movlw	high STR_38
  7897  000356  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7898  000358  C0FD  F0EF         	movff	UI_main@poles_detected,?_printf+2
  7899  00035C  C0FE  F0F0         	movff	UI_main@poles_detected+1,?_printf+3
  7900  000360  ECFB  F01E         	call	_printf	;wreg free
  7901  000364  0ED0               	movlw	208
  7902  000366  EC61  F01F         	call	_lcdInst
  7903                           
  7904                           ;main.c: 600:                         printf("<*   0-Menu   #>");
  7905  00036A  0E1B               	movlw	low STR_39
  7906  00036C  0100               	movlb	0	; () banked
  7907  00036E  6FED               	movwf	printf@fmt& (0+255),b
  7908  000370  0EFE               	movlw	high STR_39
  7909  000372  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7910  000374  ECFB  F01E         	call	_printf	;wreg free
  7911  000378                     l8213:
  7912                           
  7913                           ;main.c: 603:                     if (disp > 1 && disp <11){
  7914  000378  0101               	movlb	1	; () banked
  7915  00037A  BFDE               	btfsc	(_disp+1)& (0+255),7,b
  7916  00037C  D0CE               	goto	l8237
  7917  00037E  51DE               	movf	(_disp+1)& (0+255),w,b
  7918  000380  E104               	bnz	u8890
  7919  000382  0E02               	movlw	2
  7920  000384  5DDD               	subwf	_disp& (0+255),w,b
  7921  000386  A0D8               	btfss	status,0,c
  7922  000388  D0C8               	goto	l8237
  7923  00038A                     u8890:
  7924                           
  7925                           ; BSR set to: 1
  7926  00038A  BFDE               	btfsc	(_disp+1)& (0+255),7,b
  7927  00038C  D006               	goto	u8900
  7928  00038E  51DE               	movf	(_disp+1)& (0+255),w,b
  7929  000390  E103               	bnz	u8901
  7930  000392  0E0B               	movlw	11
  7931  000394  5DDD               	subwf	_disp& (0+255),w,b
  7932  000396  B0D8               	btfsc	status,0,c
  7933  000398                     u8901:
  7934  000398  D0C0               	goto	l8237
  7935  00039A                     u8900:
  7936                           
  7937                           ; BSR set to: 1
  7938                           ;main.c: 604:                         i = disp - 2;
  7939  00039A  0EFE               	movlw	254
  7940  00039C  25DD               	addwf	_disp& (0+255),w,b
  7941  00039E  6FDB               	movwf	_i& (0+255),b
  7942  0003A0  0EFF               	movlw	255
  7943  0003A2  21DE               	addwfc	(_disp+1)& (0+255),w,b
  7944  0003A4  6FDC               	movwf	(_i+1)& (0+255),b
  7945                           
  7946                           ; BSR set to: 1
  7947                           ;main.c: 605:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  7948  0003A6  0E01               	movlw	1
  7949  0003A8  EC61  F01F         	call	_lcdInst
  7950  0003AC  0E11               	movlw	17
  7951  0003AE  0101               	movlb	1	; () banked
  7952  0003B0  6F00               	movwf	??_UI_main& (0+255),b
  7953  0003B2  0E3A               	movlw	58
  7954  0003B4                     u10137:
  7955  0003B4  2EE8               	decfsz	wreg,f,c
  7956  0003B6  D7FE               	bra	u10137
  7957  0003B8  2F00               	decfsz	??_UI_main& (0+255),f,b
  7958  0003BA  D7FC               	bra	u10137
  7959  0003BC  F000               	nop	
  7960                           
  7961                           ;main.c: 606:                         printf("P%d Dep:%d,Tot:%d", i+1 , Pole[i].tires_de
      +                          ployed,Pole[i].tires_final);
  7962  0003BE  0EB4               	movlw	low STR_40
  7963  0003C0  0100               	movlb	0	; () banked
  7964  0003C2  6FED               	movwf	printf@fmt& (0+255),b
  7965  0003C4  0EFD               	movlw	high STR_40
  7966  0003C6  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7967  0003C8  0E01               	movlw	1
  7968  0003CA  0101               	movlb	1	; () banked
  7969  0003CC  25DB               	addwf	_i& (0+255),w,b
  7970  0003CE  0100               	movlb	0	; () banked
  7971  0003D0  6FEF               	movwf	(?_printf+2)& (0+255),b
  7972  0003D2  0E00               	movlw	0
  7973  0003D4  0101               	movlb	1	; () banked
  7974  0003D6  21DC               	addwfc	(_i+1)& (0+255),w,b
  7975  0003D8  0100               	movlb	0	; () banked
  7976  0003DA  6FF0               	movwf	(?_printf+3)& (0+255),b
  7977  0003DC  C1DB  F100         	movff	_i,??_UI_main
  7978  0003E0  C1DC  F101         	movff	_i+1,??_UI_main+1
  7979  0003E4  0101               	movlb	1	; () banked
  7980  0003E6  90D8               	bcf	status,0,c
  7981  0003E8  3700               	rlcf	??_UI_main& (0+255),f,b
  7982  0003EA  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7983  0003EC  90D8               	bcf	status,0,c
  7984  0003EE  3700               	rlcf	??_UI_main& (0+255),f,b
  7985  0003F0  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7986  0003F2  90D8               	bcf	status,0,c
  7987  0003F4  3700               	rlcf	??_UI_main& (0+255),f,b
  7988  0003F6  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7989  0003F8  0E04               	movlw	low UI_main@Pole
  7990  0003FA  2500               	addwf	??_UI_main& (0+255),w,b
  7991  0003FC  6ED9               	movwf	fsr2l,c
  7992  0003FE  0E01               	movlw	high UI_main@Pole
  7993  000400  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  7994  000402  6EDA               	movwf	fsr2h,c
  7995  000404  CFDE F0F1          	movff	postinc2,?_printf+4
  7996  000408  CFDD F0F2          	movff	postdec2,?_printf+5
  7997  00040C  C1DB  F102         	movff	_i,??_UI_main+2
  7998  000410  C1DC  F103         	movff	_i+1,??_UI_main+3
  7999  000414  90D8               	bcf	status,0,c
  8000  000416  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  8001  000418  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  8002  00041A  90D8               	bcf	status,0,c
  8003  00041C  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  8004  00041E  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  8005  000420  90D8               	bcf	status,0,c
  8006  000422  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  8007  000424  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  8008  000426  0E02               	movlw	2
  8009  000428  2702               	addwf	(??_UI_main+2)& (0+255),f,b
  8010  00042A  0E00               	movlw	0
  8011  00042C  2303               	addwfc	(??_UI_main+3)& (0+255),f,b
  8012  00042E  0E04               	movlw	low UI_main@Pole
  8013  000430  2502               	addwf	(??_UI_main+2)& (0+255),w,b
  8014  000432  6ED9               	movwf	fsr2l,c
  8015  000434  0E01               	movlw	high UI_main@Pole
  8016  000436  2103               	addwfc	(??_UI_main+3)& (0+255),w,b
  8017  000438  6EDA               	movwf	fsr2h,c
  8018  00043A  CFDE F0F3          	movff	postinc2,?_printf+6
  8019  00043E  CFDD F0F4          	movff	postdec2,?_printf+7
  8020  000442  ECFB  F01E         	call	_printf	;wreg free
  8021  000446  0EC0               	movlw	192
  8022  000448  EC61  F01F         	call	_lcdInst
  8023                           
  8024                           ;main.c: 608:                         printf("DistToStart:%d",i+1 , Pole[i].dist_from_st
      +                          art);
  8025  00044C  0E7C               	movlw	low STR_41
  8026  00044E  0100               	movlb	0	; () banked
  8027  000450  6FED               	movwf	printf@fmt& (0+255),b
  8028  000452  0EFE               	movlw	high STR_41
  8029  000454  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8030  000456  0E01               	movlw	1
  8031  000458  0101               	movlb	1	; () banked
  8032  00045A  25DB               	addwf	_i& (0+255),w,b
  8033  00045C  0100               	movlb	0	; () banked
  8034  00045E  6FEF               	movwf	(?_printf+2)& (0+255),b
  8035  000460  0E00               	movlw	0
  8036  000462  0101               	movlb	1	; () banked
  8037  000464  21DC               	addwfc	(_i+1)& (0+255),w,b
  8038  000466  0100               	movlb	0	; () banked
  8039  000468  6FF0               	movwf	(?_printf+3)& (0+255),b
  8040  00046A  C1DB  F100         	movff	_i,??_UI_main
  8041  00046E  C1DC  F101         	movff	_i+1,??_UI_main+1
  8042  000472  0101               	movlb	1	; () banked
  8043  000474  90D8               	bcf	status,0,c
  8044  000476  3700               	rlcf	??_UI_main& (0+255),f,b
  8045  000478  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8046  00047A  90D8               	bcf	status,0,c
  8047  00047C  3700               	rlcf	??_UI_main& (0+255),f,b
  8048  00047E  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8049  000480  90D8               	bcf	status,0,c
  8050  000482  3700               	rlcf	??_UI_main& (0+255),f,b
  8051  000484  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8052  000486  0E04               	movlw	4
  8053  000488  2700               	addwf	??_UI_main& (0+255),f,b
  8054  00048A  0E00               	movlw	0
  8055  00048C  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  8056  00048E  0E04               	movlw	low UI_main@Pole
  8057  000490  2500               	addwf	??_UI_main& (0+255),w,b
  8058  000492  6ED9               	movwf	fsr2l,c
  8059  000494  0E01               	movlw	high UI_main@Pole
  8060  000496  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  8061  000498  6EDA               	movwf	fsr2h,c
  8062  00049A  CFDE F0F1          	movff	postinc2,?_printf+4
  8063  00049E  CFDD F0F2          	movff	postdec2,?_printf+5
  8064  0004A2  ECFB  F01E         	call	_printf	;wreg free
  8065  0004A6  0E90               	movlw	144
  8066  0004A8  EC61  F01F         	call	_lcdInst
  8067                           
  8068                           ;main.c: 610:                         printf("DistToCL:%d",i+1 , Pole[i].dist_from_cl);
  8069  0004AC  0E3B               	movlw	low STR_42
  8070  0004AE  0100               	movlb	0	; () banked
  8071  0004B0  6FED               	movwf	printf@fmt& (0+255),b
  8072  0004B2  0EFF               	movlw	high STR_42
  8073  0004B4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8074  0004B6  0E01               	movlw	1
  8075  0004B8  0101               	movlb	1	; () banked
  8076  0004BA  25DB               	addwf	_i& (0+255),w,b
  8077  0004BC  0100               	movlb	0	; () banked
  8078  0004BE  6FEF               	movwf	(?_printf+2)& (0+255),b
  8079  0004C0  0E00               	movlw	0
  8080  0004C2  0101               	movlb	1	; () banked
  8081  0004C4  21DC               	addwfc	(_i+1)& (0+255),w,b
  8082  0004C6  0100               	movlb	0	; () banked
  8083  0004C8  6FF0               	movwf	(?_printf+3)& (0+255),b
  8084  0004CA  C1DB  F100         	movff	_i,??_UI_main
  8085  0004CE  C1DC  F101         	movff	_i+1,??_UI_main+1
  8086  0004D2  0101               	movlb	1	; () banked
  8087  0004D4  90D8               	bcf	status,0,c
  8088  0004D6  3700               	rlcf	??_UI_main& (0+255),f,b
  8089  0004D8  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8090  0004DA  90D8               	bcf	status,0,c
  8091  0004DC  3700               	rlcf	??_UI_main& (0+255),f,b
  8092  0004DE  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8093  0004E0  90D8               	bcf	status,0,c
  8094  0004E2  3700               	rlcf	??_UI_main& (0+255),f,b
  8095  0004E4  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8096  0004E6  0E06               	movlw	6
  8097  0004E8  2700               	addwf	??_UI_main& (0+255),f,b
  8098  0004EA  0E00               	movlw	0
  8099  0004EC  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  8100  0004EE  0E04               	movlw	low UI_main@Pole
  8101  0004F0  2500               	addwf	??_UI_main& (0+255),w,b
  8102  0004F2  6ED9               	movwf	fsr2l,c
  8103  0004F4  0E01               	movlw	high UI_main@Pole
  8104  0004F6  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  8105  0004F8  6EDA               	movwf	fsr2h,c
  8106  0004FA  CFDE F0F1          	movff	postinc2,?_printf+4
  8107  0004FE  CFDD F0F2          	movff	postdec2,?_printf+5
  8108  000502  ECFB  F01E         	call	_printf	;wreg free
  8109  000506  0ED0               	movlw	208
  8110  000508  EC61  F01F         	call	_lcdInst
  8111                           
  8112                           ;main.c: 612:                         printf("<*   0-Menu   #>");
  8113  00050C  0E1B               	movlw	low STR_39
  8114  00050E  0100               	movlb	0	; () banked
  8115  000510  6FED               	movwf	printf@fmt& (0+255),b
  8116  000512  0EFE               	movlw	high STR_39
  8117  000514  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8118  000516  ECFB  F01E         	call	_printf	;wreg free
  8119  00051A                     l8237:
  8120                           
  8121                           ;main.c: 614:                     if (disp == 11){
  8122  00051A  0E0B               	movlw	11
  8123  00051C  0101               	movlb	1	; () banked
  8124  00051E  19DD               	xorwf	_disp& (0+255),w,b
  8125  000520  11DE               	iorwf	(_disp+1)& (0+255),w,b
  8126  000522  A4D8               	btfss	status,2,c
  8127  000524  D0C0               	goto	l8259
  8128                           
  8129                           ; BSR set to: 1
  8130                           ;main.c: 615:                         i = disp - 2;
  8131  000526  0EFE               	movlw	254
  8132  000528  25DD               	addwf	_disp& (0+255),w,b
  8133  00052A  6FDB               	movwf	_i& (0+255),b
  8134  00052C  0EFF               	movlw	255
  8135  00052E  21DE               	addwfc	(_disp+1)& (0+255),w,b
  8136  000530  6FDC               	movwf	(_i+1)& (0+255),b
  8137                           
  8138                           ; BSR set to: 1
  8139                           ;main.c: 616:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  8140  000532  0E01               	movlw	1
  8141  000534  EC61  F01F         	call	_lcdInst
  8142  000538  0E11               	movlw	17
  8143  00053A  0101               	movlb	1	; () banked
  8144  00053C  6F00               	movwf	??_UI_main& (0+255),b
  8145  00053E  0E3A               	movlw	58
  8146  000540                     u10147:
  8147  000540  2EE8               	decfsz	wreg,f,c
  8148  000542  D7FE               	bra	u10147
  8149  000544  2F00               	decfsz	??_UI_main& (0+255),f,b
  8150  000546  D7FC               	bra	u10147
  8151  000548  F000               	nop	
  8152                           
  8153                           ;main.c: 617:                         printf("P%d Dep:%d,Tot:%d", i+1 , Pole[i].tires_de
      +                          ployed,Pole[i].tires_final);
  8154  00054A  0EB4               	movlw	low STR_40
  8155  00054C  0100               	movlb	0	; () banked
  8156  00054E  6FED               	movwf	printf@fmt& (0+255),b
  8157  000550  0EFD               	movlw	high STR_40
  8158  000552  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8159  000554  0E01               	movlw	1
  8160  000556  0101               	movlb	1	; () banked
  8161  000558  25DB               	addwf	_i& (0+255),w,b
  8162  00055A  0100               	movlb	0	; () banked
  8163  00055C  6FEF               	movwf	(?_printf+2)& (0+255),b
  8164  00055E  0E00               	movlw	0
  8165  000560  0101               	movlb	1	; () banked
  8166  000562  21DC               	addwfc	(_i+1)& (0+255),w,b
  8167  000564  0100               	movlb	0	; () banked
  8168  000566  6FF0               	movwf	(?_printf+3)& (0+255),b
  8169  000568  C1DB  F100         	movff	_i,??_UI_main
  8170  00056C  C1DC  F101         	movff	_i+1,??_UI_main+1
  8171  000570  0101               	movlb	1	; () banked
  8172  000572  90D8               	bcf	status,0,c
  8173  000574  3700               	rlcf	??_UI_main& (0+255),f,b
  8174  000576  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8175  000578  90D8               	bcf	status,0,c
  8176  00057A  3700               	rlcf	??_UI_main& (0+255),f,b
  8177  00057C  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8178  00057E  90D8               	bcf	status,0,c
  8179  000580  3700               	rlcf	??_UI_main& (0+255),f,b
  8180  000582  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8181  000584  0E04               	movlw	low UI_main@Pole
  8182  000586  2500               	addwf	??_UI_main& (0+255),w,b
  8183  000588  6ED9               	movwf	fsr2l,c
  8184  00058A  0E01               	movlw	high UI_main@Pole
  8185  00058C  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  8186  00058E  6EDA               	movwf	fsr2h,c
  8187  000590  CFDE F0F1          	movff	postinc2,?_printf+4
  8188  000594  CFDD F0F2          	movff	postdec2,?_printf+5
  8189  000598  C1DB  F102         	movff	_i,??_UI_main+2
  8190  00059C  C1DC  F103         	movff	_i+1,??_UI_main+3
  8191  0005A0  90D8               	bcf	status,0,c
  8192  0005A2  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  8193  0005A4  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  8194  0005A6  90D8               	bcf	status,0,c
  8195  0005A8  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  8196  0005AA  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  8197  0005AC  90D8               	bcf	status,0,c
  8198  0005AE  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  8199  0005B0  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  8200  0005B2  0E02               	movlw	2
  8201  0005B4  2702               	addwf	(??_UI_main+2)& (0+255),f,b
  8202  0005B6  0E00               	movlw	0
  8203  0005B8  2303               	addwfc	(??_UI_main+3)& (0+255),f,b
  8204  0005BA  0E04               	movlw	low UI_main@Pole
  8205  0005BC  2502               	addwf	(??_UI_main+2)& (0+255),w,b
  8206  0005BE  6ED9               	movwf	fsr2l,c
  8207  0005C0  0E01               	movlw	high UI_main@Pole
  8208  0005C2  2103               	addwfc	(??_UI_main+3)& (0+255),w,b
  8209  0005C4  6EDA               	movwf	fsr2h,c
  8210  0005C6  CFDE F0F3          	movff	postinc2,?_printf+6
  8211  0005CA  CFDD F0F4          	movff	postdec2,?_printf+7
  8212  0005CE  ECFB  F01E         	call	_printf	;wreg free
  8213  0005D2  0EC0               	movlw	192
  8214  0005D4  EC61  F01F         	call	_lcdInst
  8215                           
  8216                           ;main.c: 619:                         printf("DistToStart:%d",i+1 , Pole[i].dist_from_st
      +                          art);
  8217  0005D8  0E7C               	movlw	low STR_41
  8218  0005DA  0100               	movlb	0	; () banked
  8219  0005DC  6FED               	movwf	printf@fmt& (0+255),b
  8220  0005DE  0EFE               	movlw	high STR_41
  8221  0005E0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8222  0005E2  0E01               	movlw	1
  8223  0005E4  0101               	movlb	1	; () banked
  8224  0005E6  25DB               	addwf	_i& (0+255),w,b
  8225  0005E8  0100               	movlb	0	; () banked
  8226  0005EA  6FEF               	movwf	(?_printf+2)& (0+255),b
  8227  0005EC  0E00               	movlw	0
  8228  0005EE  0101               	movlb	1	; () banked
  8229  0005F0  21DC               	addwfc	(_i+1)& (0+255),w,b
  8230  0005F2  0100               	movlb	0	; () banked
  8231  0005F4  6FF0               	movwf	(?_printf+3)& (0+255),b
  8232  0005F6  C1DB  F100         	movff	_i,??_UI_main
  8233  0005FA  C1DC  F101         	movff	_i+1,??_UI_main+1
  8234  0005FE  0101               	movlb	1	; () banked
  8235  000600  90D8               	bcf	status,0,c
  8236  000602  3700               	rlcf	??_UI_main& (0+255),f,b
  8237  000604  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8238  000606  90D8               	bcf	status,0,c
  8239  000608  3700               	rlcf	??_UI_main& (0+255),f,b
  8240  00060A  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8241  00060C  90D8               	bcf	status,0,c
  8242  00060E  3700               	rlcf	??_UI_main& (0+255),f,b
  8243  000610  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8244  000612  0E04               	movlw	4
  8245  000614  2700               	addwf	??_UI_main& (0+255),f,b
  8246  000616  0E00               	movlw	0
  8247  000618  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  8248  00061A  0E04               	movlw	low UI_main@Pole
  8249  00061C  2500               	addwf	??_UI_main& (0+255),w,b
  8250  00061E  6ED9               	movwf	fsr2l,c
  8251  000620  0E01               	movlw	high UI_main@Pole
  8252  000622  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  8253  000624  6EDA               	movwf	fsr2h,c
  8254  000626  CFDE F0F1          	movff	postinc2,?_printf+4
  8255  00062A  CFDD F0F2          	movff	postdec2,?_printf+5
  8256  00062E  ECFB  F01E         	call	_printf	;wreg free
  8257  000632  0E90               	movlw	144
  8258  000634  EC61  F01F         	call	_lcdInst
  8259                           
  8260                           ;main.c: 621:                         printf("DistToCL:%d",i+1 , Pole[i].dist_from_cl);
  8261  000638  0E3B               	movlw	low STR_42
  8262  00063A  0100               	movlb	0	; () banked
  8263  00063C  6FED               	movwf	printf@fmt& (0+255),b
  8264  00063E  0EFF               	movlw	high STR_42
  8265  000640  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8266  000642  0E01               	movlw	1
  8267  000644  0101               	movlb	1	; () banked
  8268  000646  25DB               	addwf	_i& (0+255),w,b
  8269  000648  0100               	movlb	0	; () banked
  8270  00064A  6FEF               	movwf	(?_printf+2)& (0+255),b
  8271  00064C  0E00               	movlw	0
  8272  00064E  0101               	movlb	1	; () banked
  8273  000650  21DC               	addwfc	(_i+1)& (0+255),w,b
  8274  000652  0100               	movlb	0	; () banked
  8275  000654  6FF0               	movwf	(?_printf+3)& (0+255),b
  8276  000656  C1DB  F100         	movff	_i,??_UI_main
  8277  00065A  C1DC  F101         	movff	_i+1,??_UI_main+1
  8278  00065E  0101               	movlb	1	; () banked
  8279  000660  90D8               	bcf	status,0,c
  8280  000662  3700               	rlcf	??_UI_main& (0+255),f,b
  8281  000664  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8282  000666  90D8               	bcf	status,0,c
  8283  000668  3700               	rlcf	??_UI_main& (0+255),f,b
  8284  00066A  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8285  00066C  90D8               	bcf	status,0,c
  8286  00066E  3700               	rlcf	??_UI_main& (0+255),f,b
  8287  000670  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8288  000672  0E06               	movlw	6
  8289  000674  2700               	addwf	??_UI_main& (0+255),f,b
  8290  000676  0E00               	movlw	0
  8291  000678  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  8292  00067A  0E04               	movlw	low UI_main@Pole
  8293  00067C  2500               	addwf	??_UI_main& (0+255),w,b
  8294  00067E  6ED9               	movwf	fsr2l,c
  8295  000680  0E01               	movlw	high UI_main@Pole
  8296  000682  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  8297  000684  6EDA               	movwf	fsr2h,c
  8298  000686  CFDE F0F1          	movff	postinc2,?_printf+4
  8299  00068A  CFDD F0F2          	movff	postdec2,?_printf+5
  8300  00068E  ECFB  F01E         	call	_printf	;wreg free
  8301  000692  0ED0               	movlw	208
  8302  000694  EC61  F01F         	call	_lcdInst
  8303                           
  8304                           ;main.c: 623:                         printf("<*   0-Menu     ");
  8305  000698  0ED7               	movlw	low STR_47
  8306  00069A  0100               	movlb	0	; () banked
  8307  00069C  6FED               	movwf	printf@fmt& (0+255),b
  8308  00069E  0EFD               	movlw	high STR_47
  8309  0006A0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8310  0006A2  ECFB  F01E         	call	_printf	;wreg free
  8311  0006A6                     l8259:
  8312                           
  8313                           ;main.c: 626:             if (temp_int == 3){
  8314  0006A6  0E03               	movlw	3
  8315  0006A8  0101               	movlb	1	; () banked
  8316  0006AA  19E1               	xorwf	_temp_int& (0+255),w,b
  8317  0006AC  11E2               	iorwf	(_temp_int+1)& (0+255),w,b
  8318  0006AE  A4D8               	btfss	status,2,c
  8319  0006B0  D0B5               	goto	u8950
  8320                           
  8321                           ; BSR set to: 1
  8322                           ;main.c: 627:                 state = 0;
  8323  0006B2  0E00               	movlw	0
  8324  0006B4  6FE0               	movwf	(_state+1)& (0+255),b
  8325  0006B6  0E00               	movlw	0
  8326  0006B8  6FDF               	movwf	_state& (0+255),b
  8327                           
  8328                           ;main.c: 628:                 tick = 0;
  8329  0006BA  0E00               	movlw	0
  8330  0006BC  6F55               	movwf	UI_main@tick& (0+255),b
  8331  0006BE  0E00               	movlw	0
  8332  0006C0  6F56               	movwf	(UI_main@tick+1)& (0+255),b
  8333  0006C2  0E00               	movlw	0
  8334  0006C4  6F57               	movwf	(UI_main@tick+2)& (0+255),b
  8335  0006C6  0E00               	movlw	0
  8336  0006C8  6F58               	movwf	(UI_main@tick+3)& (0+255),b
  8337                           
  8338                           ;main.c: 629:                 while(~key_was_pressed){
  8339  0006CA  D0A5               	goto	l8309
  8340  0006CC                     l8263:
  8341                           
  8342                           ; BSR set to: 1
  8343                           ;main.c: 630:                     if(tick % 1000 == 0){
  8344  0006CC  C155  F080         	movff	UI_main@tick,___llmod@dividend
  8345  0006D0  C156  F081         	movff	UI_main@tick+1,___llmod@dividend+1
  8346  0006D4  C157  F082         	movff	UI_main@tick+2,___llmod@dividend+2
  8347  0006D8  C158  F083         	movff	UI_main@tick+3,___llmod@dividend+3
  8348  0006DC  0EE8               	movlw	232
  8349  0006DE  0100               	movlb	0	; () banked
  8350  0006E0  6F84               	movwf	___llmod@divisor& (0+255),b
  8351  0006E2  0E03               	movlw	3
  8352  0006E4  6F85               	movwf	(___llmod@divisor+1)& (0+255),b
  8353  0006E6  0E00               	movlw	0
  8354  0006E8  6F86               	movwf	(___llmod@divisor+2)& (0+255),b
  8355  0006EA  0E00               	movlw	0
  8356  0006EC  6F87               	movwf	(___llmod@divisor+3)& (0+255),b
  8357  0006EE  ECB9  F01C         	call	___llmod	;wreg free
  8358  0006F2  0100               	movlb	0	; () banked
  8359  0006F4  5180               	movf	?___llmod& (0+255),w,b
  8360  0006F6  1181               	iorwf	(?___llmod+1)& (0+255),w,b
  8361  0006F8  1182               	iorwf	(?___llmod+2)& (0+255),w,b
  8362  0006FA  1183               	iorwf	(?___llmod+3)& (0+255),w,b
  8363  0006FC  A4D8               	btfss	status,2,c
  8364  0006FE  D084               	goto	l8307
  8365                           
  8366                           ; BSR set to: 0
  8367                           ;main.c: 631:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  8368  000700  0E01               	movlw	1
  8369  000702  EC61  F01F         	call	_lcdInst
  8370  000706  0E11               	movlw	17
  8371  000708  0101               	movlb	1	; () banked
  8372  00070A  6F00               	movwf	??_UI_main& (0+255),b
  8373  00070C  0E3A               	movlw	58
  8374  00070E                     u10157:
  8375  00070E  2EE8               	decfsz	wreg,f,c
  8376  000710  D7FE               	bra	u10157
  8377  000712  2F00               	decfsz	??_UI_main& (0+255),f,b
  8378  000714  D7FC               	bra	u10157
  8379  000716  F000               	nop	
  8380                           
  8381                           ;main.c: 632:                         printf("DATE & TIME");
  8382  000718  0E17               	movlw	low STR_48
  8383  00071A  0100               	movlb	0	; () banked
  8384  00071C  6FED               	movwf	printf@fmt& (0+255),b
  8385  00071E  0EFF               	movlw	high STR_48
  8386  000720  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8387  000722  ECFB  F01E         	call	_printf	;wreg free
  8388                           
  8389                           ;main.c: 633:                         I2C_Master_Init(100000);
  8390  000726  0EA0               	movlw	160
  8391  000728  0100               	movlb	0	; () banked
  8392  00072A  6F8D               	movwf	I2C_Master_Init@clockFreq& (0+255),b
  8393  00072C  0E86               	movlw	134
  8394  00072E  6F8E               	movwf	(I2C_Master_Init@clockFreq+1)& (0+255),b
  8395  000730  0E01               	movlw	1
  8396  000732  6F8F               	movwf	(I2C_Master_Init@clockFreq+2)& (0+255),b
  8397  000734  0E00               	movlw	0
  8398  000736  6F90               	movwf	(I2C_Master_Init@clockFreq+3)& (0+255),b
  8399  000738  ECED  F01C         	call	_I2C_Master_Init	;wreg free
  8400                           
  8401                           ;main.c: 634:                         I2C_Master_Start();
  8402  00073C  EC72  F01F         	call	_I2C_Master_Start	;wreg free
  8403                           
  8404                           ;main.c: 635:                         I2C_Master_Write(0b11010000);
  8405  000740  0E00               	movlw	0
  8406  000742  0100               	movlb	0	; () banked
  8407  000744  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  8408  000746  0ED0               	movlw	208
  8409  000748  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  8410  00074A  EC69  F01F         	call	_I2C_Master_Write	;wreg free
  8411                           
  8412                           ;main.c: 636:                         I2C_Master_Write(0x00);
  8413  00074E  0E00               	movlw	0
  8414  000750  0100               	movlb	0	; () banked
  8415  000752  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  8416  000754  0E00               	movlw	0
  8417  000756  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  8418  000758  EC69  F01F         	call	_I2C_Master_Write	;wreg free
  8419                           
  8420                           ;main.c: 637:                         I2C_Master_Stop();
  8421  00075C  EC6E  F01F         	call	_I2C_Master_Stop	;wreg free
  8422                           
  8423                           ;main.c: 639:                         I2C_Master_Start();
  8424  000760  EC72  F01F         	call	_I2C_Master_Start	;wreg free
  8425                           
  8426                           ;main.c: 640:                         I2C_Master_Write(0b11010001);
  8427  000764  0E00               	movlw	0
  8428  000766  0100               	movlb	0	; () banked
  8429  000768  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  8430  00076A  0ED1               	movlw	209
  8431  00076C  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  8432  00076E  EC69  F01F         	call	_I2C_Master_Write	;wreg free
  8433                           
  8434                           ;main.c: 641:                         for(unsigned char i = 0; i < 6; i++){
  8435  000772  0E00               	movlw	0
  8436  000774  0101               	movlb	1	; () banked
  8437  000776  6F59               	movwf	UI_main@i& (0+255),b
  8438  000778                     l8287:
  8439                           
  8440                           ; BSR set to: 1
  8441  000778  0E05               	movlw	5
  8442  00077A  6559               	cpfsgt	UI_main@i& (0+255),b
  8443  00077C  D001               	goto	l8291
  8444  00077E  D00D               	goto	l8297
  8445  000780                     l8291:
  8446                           
  8447                           ; BSR set to: 1
  8448                           ;main.c: 642:                             time[i] = I2C_Master_Read(0);
  8449  000780  0ED2               	movlw	low _time
  8450  000782  2559               	addwf	UI_main@i& (0+255),w,b
  8451  000784  6ED9               	movwf	fsr2l,c
  8452  000786  6ADA               	clrf	fsr2h,c
  8453  000788  0E01               	movlw	high _time
  8454  00078A  22DA               	addwfc	fsr2h,f,c
  8455  00078C  0E00               	movlw	0
  8456  00078E  ECE6  F01E         	call	_I2C_Master_Read
  8457  000792  6EDF               	movwf	indf2,c
  8458                           
  8459                           ;main.c: 643:                         }
  8460  000794  0101               	movlb	1	; () banked
  8461  000796  2B59               	incf	UI_main@i& (0+255),f,b
  8462  000798  D7EF               	goto	l8287
  8463  00079A                     l8297:
  8464                           
  8465                           ; BSR set to: 1
  8466                           ;main.c: 644:                         time[6] = I2C_Master_Read(1);
  8467  00079A  0E01               	movlw	1
  8468  00079C  ECE6  F01E         	call	_I2C_Master_Read
  8469  0007A0  0101               	movlb	1	; () banked
  8470  0007A2  6FD8               	movwf	(_time+6)& (0+255),b
  8471                           
  8472                           ;main.c: 645:                         I2C_Master_Stop();
  8473  0007A4  EC6E  F01F         	call	_I2C_Master_Stop	;wreg free
  8474  0007A8  0EC0               	movlw	192
  8475  0007AA  EC61  F01F         	call	_lcdInst
  8476                           
  8477                           ;main.c: 649:                         printf("%02x/%02x/%02x", time[6],time[5],time[4]);
  8478  0007AE  0E9A               	movlw	low STR_49
  8479  0007B0  0100               	movlb	0	; () banked
  8480  0007B2  6FED               	movwf	printf@fmt& (0+255),b
  8481  0007B4  0EFE               	movlw	high STR_49
  8482  0007B6  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8483  0007B8  C1D8  F0EF         	movff	_time+6,?_printf+2
  8484  0007BC  6BF0               	clrf	(?_printf+3)& (0+255),b
  8485  0007BE  C1D7  F0F1         	movff	_time+5,?_printf+4
  8486  0007C2  6BF2               	clrf	(?_printf+5)& (0+255),b
  8487  0007C4  C1D6  F0F3         	movff	_time+4,?_printf+6
  8488  0007C8  6BF4               	clrf	(?_printf+7)& (0+255),b
  8489  0007CA  ECFB  F01E         	call	_printf	;wreg free
  8490  0007CE  0E90               	movlw	144
  8491  0007D0  EC61  F01F         	call	_lcdInst
  8492                           
  8493                           ;main.c: 651:                         printf("%02x:%02x:%02x", time[2],time[1],time[0]);
  8494  0007D4  0EA9               	movlw	low STR_50
  8495  0007D6  0100               	movlb	0	; () banked
  8496  0007D8  6FED               	movwf	printf@fmt& (0+255),b
  8497  0007DA  0EFE               	movlw	high STR_50
  8498  0007DC  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8499  0007DE  C1D4  F0EF         	movff	_time+2,?_printf+2
  8500  0007E2  6BF0               	clrf	(?_printf+3)& (0+255),b
  8501  0007E4  C1D3  F0F1         	movff	_time+1,?_printf+4
  8502  0007E8  6BF2               	clrf	(?_printf+5)& (0+255),b
  8503  0007EA  C1D2  F0F3         	movff	_time,?_printf+6
  8504  0007EE  6BF4               	clrf	(?_printf+7)& (0+255),b
  8505  0007F0  ECFB  F01E         	call	_printf	;wreg free
  8506  0007F4  0ED0               	movlw	208
  8507  0007F6  EC61  F01F         	call	_lcdInst
  8508                           
  8509                           ;main.c: 653:                         printf("     0-Menu     ");
  8510  0007FA  0EC6               	movlw	low STR_30
  8511  0007FC  0100               	movlb	0	; () banked
  8512  0007FE  6FED               	movwf	printf@fmt& (0+255),b
  8513  000800  0EFD               	movlw	high STR_30
  8514  000802  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8515  000804  ECFB  F01E         	call	_printf	;wreg free
  8516  000808                     l8307:
  8517                           
  8518                           ;main.c: 656:                     tick++;
  8519  000808  0E01               	movlw	1
  8520  00080A  0101               	movlb	1	; () banked
  8521  00080C  2755               	addwf	UI_main@tick& (0+255),f,b
  8522  00080E  0E00               	movlw	0
  8523  000810  2356               	addwfc	(UI_main@tick+1)& (0+255),f,b
  8524  000812  2357               	addwfc	(UI_main@tick+2)& (0+255),f,b
  8525  000814  2358               	addwfc	(UI_main@tick+3)& (0+255),f,b
  8526  000816                     l8309:
  8527                           
  8528                           ; BSR set to: 1
  8529                           ;main.c: 629:                 while(~key_was_pressed){
  8530  000816  05E5               	decf	_key_was_pressed& (0+255),w,b	;volatile
  8531  000818  A4D8               	btfss	status,2,c
  8532  00081A  D758               	goto	l8263
  8533  00081C                     u8950:
  8534                           
  8535                           ;main.c: 524:     while(sens==0){
  8536  00081C  5058               	movf	_sens,w,c	;volatile
  8537  00081E  1059               	iorwf	_sens+1,w,c	;volatile
  8538  000820  A4D8               	btfss	status,2,c
  8539  000822  0012               	return	
  8540  000824  D44B               	goto	l8091
  8541  000826                     __end_of_UI_main:
  8542                           	opt callstack 0
  8543                           
  8544 ;; *************** function _printf *****************
  8545 ;; Defined at:
  8546 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  8547 ;; Parameters:    Size  Location     Type
  8548 ;;  fmt             2  109[BANK0 ] PTR const unsigned char 
  8549 ;;		 -> STR_63(10), STR_62(11), STR_61(11), STR_60(12), 
  8550 ;;		 -> STR_59(14), STR_58(17), STR_57(12), STR_56(10), 
  8551 ;;		 -> STR_55(10), STR_54(13), STR_53(8), STR_52(3), 
  8552 ;;		 -> STR_51(17), STR_50(15), STR_49(15), STR_48(12), 
  8553 ;;		 -> STR_47(17), STR_46(12), STR_45(15), STR_44(18), 
  8554 ;;		 -> STR_43(17), STR_42(12), STR_41(15), STR_40(18), 
  8555 ;;		 -> STR_39(17), STR_38(14), STR_37(14), STR_36(17), 
  8556 ;;		 -> STR_35(3), STR_34(9), STR_33(16), STR_32(3), 
  8557 ;;		 -> STR_31(9), STR_30(17), STR_29(15), STR_28(15), 
  8558 ;;		 -> STR_27(12), STR_26(10), STR_25(15), STR_24(12), 
  8559 ;;		 -> STR_23(10), STR_22(16), STR_21(12), STR_20(11), 
  8560 ;;		 -> STR_19(13), STR_18(8), STR_17(10), STR_16(17), 
  8561 ;;		 -> STR_15(10), STR_14(16), STR_13(10), STR_12(16), 
  8562 ;;		 -> STR_11(10), STR_10(17), STR_9(5), STR_8(10), 
  8563 ;;		 -> STR_7(14), STR_6(6), STR_5(10), STR_4(10), 
  8564 ;;		 -> STR_3(11), STR_2(13), STR_1(10), 
  8565 ;; Auto vars:     Size  Location     Type
  8566 ;;  ap              2  121[BANK0 ] PTR void [1]
  8567 ;;		 -> ?_printf(2), 
  8568 ;;  ret             2    0        int 
  8569 ;; Return value:  Size  Location     Type
  8570 ;;                  2  109[BANK0 ] int 
  8571 ;; Registers used:
  8572 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8573 ;; Tracked objects:
  8574 ;;		On entry : 0/0
  8575 ;;		On exit  : 0/0
  8576 ;;		Unchanged: 0/0
  8577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8578 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8579 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8581 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8582 ;;Total ram usage:       14 bytes
  8583 ;; Hardware stack levels used:    1
  8584 ;; Hardware stack levels required when called:   13
  8585 ;; This function calls:
  8586 ;;		_vfprintf
  8587 ;; This function is called by:
  8588 ;;		_actuators_main
  8589 ;;		_stepper2
  8590 ;;		_stepper2_back
  8591 ;;		_full_drive
  8592 ;;		_print_echo
  8593 ;;		_ultrasonic_main
  8594 ;;		_number_deploy
  8595 ;;		_UI_main
  8596 ;;		_brake
  8597 ;;		_main
  8598 ;; This function uses a non-reentrant model
  8599 ;;
  8600                           
  8601                           	psect	text20
  8602  003DF6                     __ptext20:
  8603                           	opt callstack 0
  8604  003DF6                     _printf:
  8605                           	opt callstack 16
  8606                           
  8607                           ;incstack = 0
  8608  003DF6  0EEF               	movlw	low (?_printf+2)
  8609  003DF8  0100               	movlb	0	; () banked
  8610  003DFA  6FF9               	movwf	printf@ap& (0+255),b
  8611  003DFC  0E00               	movlw	high (?_printf+2)
  8612  003DFE  6FFA               	movwf	(printf@ap+1)& (0+255),b
  8613                           
  8614                           ; BSR set to: 0
  8615  003E00  0E00               	movlw	0
  8616  003E02  6FE5               	movwf	vfprintf@fp& (0+255),b
  8617  003E04  0E00               	movlw	0
  8618  003E06  6FE6               	movwf	(vfprintf@fp+1)& (0+255),b
  8619  003E08  C0ED  F0E7         	movff	printf@fmt,vfprintf@fmt
  8620  003E0C  C0EE  F0E8         	movff	printf@fmt+1,vfprintf@fmt+1
  8621  003E10  0EF9               	movlw	low printf@ap
  8622  003E12  6FE9               	movwf	vfprintf@ap& (0+255),b
  8623  003E14  0E00               	movlw	high printf@ap
  8624  003E16  6FEA               	movwf	(vfprintf@ap+1)& (0+255),b
  8625  003E18  EC48  F01D         	call	_vfprintf	;wreg free
  8626  003E1C  0012               	return		;funcret
  8627  003E1E                     __end_of_printf:
  8628                           	opt callstack 0
  8629                           
  8630 ;; *************** function _vfprintf *****************
  8631 ;; Defined at:
  8632 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8633 ;; Parameters:    Size  Location     Type
  8634 ;;  fp              2  101[BANK0 ] PTR struct _IO_FILE
  8635 ;;		 -> NULL(0), 
  8636 ;;  fmt             2  103[BANK0 ] PTR const unsigned char 
  8637 ;;		 -> STR_63(10), STR_62(11), STR_61(11), STR_60(12), 
  8638 ;;		 -> STR_59(14), STR_58(17), STR_57(12), STR_56(10), 
  8639 ;;		 -> STR_55(10), STR_54(13), STR_53(8), STR_52(3), 
  8640 ;;		 -> STR_51(17), STR_50(15), STR_49(15), STR_48(12), 
  8641 ;;		 -> STR_47(17), STR_46(12), STR_45(15), STR_44(18), 
  8642 ;;		 -> STR_43(17), STR_42(12), STR_41(15), STR_40(18), 
  8643 ;;		 -> STR_39(17), STR_38(14), STR_37(14), STR_36(17), 
  8644 ;;		 -> STR_35(3), STR_34(9), STR_33(16), STR_32(3), 
  8645 ;;		 -> STR_31(9), STR_30(17), STR_29(15), STR_28(15), 
  8646 ;;		 -> STR_27(12), STR_26(10), STR_25(15), STR_24(12), 
  8647 ;;		 -> STR_23(10), STR_22(16), STR_21(12), STR_20(11), 
  8648 ;;		 -> STR_19(13), STR_18(8), STR_17(10), STR_16(17), 
  8649 ;;		 -> STR_15(10), STR_14(16), STR_13(10), STR_12(16), 
  8650 ;;		 -> STR_11(10), STR_10(17), STR_9(5), STR_8(10), 
  8651 ;;		 -> STR_7(14), STR_6(6), STR_5(10), STR_4(10), 
  8652 ;;		 -> STR_3(11), STR_2(13), STR_1(10), 
  8653 ;;  ap              2  105[BANK0 ] PTR PTR void 
  8654 ;;		 -> printf@ap(2), 
  8655 ;; Auto vars:     Size  Location     Type
  8656 ;;  cfmt            2  107[BANK0 ] PTR unsigned char 
  8657 ;;		 -> STR_63(10), STR_62(11), STR_61(11), STR_60(12), 
  8658 ;;		 -> STR_59(14), STR_58(17), STR_57(12), STR_56(10), 
  8659 ;;		 -> STR_55(10), STR_54(13), STR_53(8), STR_52(3), 
  8660 ;;		 -> STR_51(17), STR_50(15), STR_49(15), STR_48(12), 
  8661 ;;		 -> STR_47(17), STR_46(12), STR_45(15), STR_44(18), 
  8662 ;;		 -> STR_43(17), STR_42(12), STR_41(15), STR_40(18), 
  8663 ;;		 -> STR_39(17), STR_38(14), STR_37(14), STR_36(17), 
  8664 ;;		 -> STR_35(3), STR_34(9), STR_33(16), STR_32(3), 
  8665 ;;		 -> STR_31(9), STR_30(17), STR_29(15), STR_28(15), 
  8666 ;;		 -> STR_27(12), STR_26(10), STR_25(15), STR_24(12), 
  8667 ;;		 -> STR_23(10), STR_22(16), STR_21(12), STR_20(11), 
  8668 ;;		 -> STR_19(13), STR_18(8), STR_17(10), STR_16(17), 
  8669 ;;		 -> STR_15(10), STR_14(16), STR_13(10), STR_12(16), 
  8670 ;;		 -> STR_11(10), STR_10(17), STR_9(5), STR_8(10), 
  8671 ;;		 -> STR_7(14), STR_6(6), STR_5(10), STR_4(10), 
  8672 ;;		 -> STR_3(11), STR_2(13), STR_1(10), 
  8673 ;; Return value:  Size  Location     Type
  8674 ;;                  2  101[BANK0 ] int 
  8675 ;; Registers used:
  8676 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8677 ;; Tracked objects:
  8678 ;;		On entry : 0/0
  8679 ;;		On exit  : 0/0
  8680 ;;		Unchanged: 0/0
  8681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8682 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8683 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8685 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8686 ;;Total ram usage:        8 bytes
  8687 ;; Hardware stack levels used:    1
  8688 ;; Hardware stack levels required when called:   12
  8689 ;; This function calls:
  8690 ;;		_vfpfcnvrt
  8691 ;; This function is called by:
  8692 ;;		_printf
  8693 ;; This function uses a non-reentrant model
  8694 ;;
  8695                           
  8696                           	psect	text21
  8697  003A90                     __ptext21:
  8698                           	opt callstack 0
  8699  003A90                     _vfprintf:
  8700                           	opt callstack 16
  8701                           
  8702                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  8703                           
  8704                           ;incstack = 0
  8705  003A90  C0E7  F0EB         	movff	vfprintf@fmt,vfprintf@cfmt
  8706  003A94  C0E8  F0EC         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  8707                           
  8708                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  8709  003A98  0E00               	movlw	0
  8710  003A9A  6E49               	movwf	_nout+1,c
  8711  003A9C  0E00               	movlw	0
  8712  003A9E  6E48               	movwf	_nout,c
  8713                           
  8714                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  8715  003AA0  D014               	goto	l7051
  8716  003AA2                     l7049:
  8717                           
  8718                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  8719  003AA2  C0E5  F0C6         	movff	vfprintf@fp,vfpfcnvrt@fp
  8720  003AA6  C0E6  F0C7         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  8721  003AAA  0EEB               	movlw	low vfprintf@cfmt
  8722  003AAC  0100               	movlb	0	; () banked
  8723  003AAE  6FC8               	movwf	vfpfcnvrt@fmt& (0+255),b
  8724  003AB0  0E00               	movlw	high vfprintf@cfmt
  8725  003AB2  6FC9               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  8726  003AB4  C0E9  F0CA         	movff	vfprintf@ap,vfpfcnvrt@ap
  8727  003AB8  C0EA  F0CB         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  8728  003ABC  ECCA  F009         	call	_vfpfcnvrt	;wreg free
  8729  003AC0  0100               	movlb	0	; () banked
  8730  003AC2  51C6               	movf	?_vfpfcnvrt& (0+255),w,b
  8731  003AC4  2648               	addwf	_nout,f,c
  8732  003AC6  51C7               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  8733  003AC8  2249               	addwfc	_nout+1,f,c
  8734  003ACA                     l7051:
  8735                           
  8736                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  8737  003ACA  C0EB  FFF6         	movff	vfprintf@cfmt,tblptrl
  8738  003ACE  C0EC  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  8739  003AD2                     	if	0	;tblptru may be non-zero
  8740  003AD2                     	endif
  8741  003AD2                     	if	0	;tblptru may be non-zero
  8742  003AD2                     	endif
  8743  003AD2  0008               	tblrd		*
  8744  003AD4  50F5               	movf	tablat,w,c
  8745  003AD6  0900               	iorlw	0
  8746  003AD8  A4D8               	btfss	status,2,c
  8747  003ADA  D7E3               	goto	l7049
  8748                           
  8749                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  8750  003ADC  C048  F0E5         	movff	_nout,?_vfprintf
  8751  003AE0  C049  F0E6         	movff	_nout+1,?_vfprintf+1
  8752  003AE4  0012               	return		;funcret
  8753  003AE6                     __end_of_vfprintf:
  8754                           	opt callstack 0
  8755                           
  8756 ;; *************** function _vfpfcnvrt *****************
  8757 ;; Defined at:
  8758 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8759 ;; Parameters:    Size  Location     Type
  8760 ;;  fp              2   70[BANK0 ] PTR struct _IO_FILE
  8761 ;;		 -> NULL(0), 
  8762 ;;  fmt             2   72[BANK0 ] PTR PTR unsigned char 
  8763 ;;		 -> vfprintf@cfmt(2), 
  8764 ;;  ap              2   74[BANK0 ] PTR PTR void 
  8765 ;;		 -> printf@ap(2), 
  8766 ;; Auto vars:     Size  Location     Type
  8767 ;;  llu             8   88[BANK0 ] unsigned long long 
  8768 ;;  ll              8   80[BANK0 ] long long 
  8769 ;;  f               4    0        long long 
  8770 ;;  vp              3    0        PTR void 
  8771 ;;  ct              3    0        unsigned char [3]
  8772 ;;  cp              3    0        PTR unsigned char 
  8773 ;;  done            2   97[BANK0 ] int 
  8774 ;;  i               2    0        int 
  8775 ;;  c               1   96[BANK0 ] unsigned char 
  8776 ;; Return value:  Size  Location     Type
  8777 ;;                  2   70[BANK0 ] int 
  8778 ;; Registers used:
  8779 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8780 ;; Tracked objects:
  8781 ;;		On entry : 0/0
  8782 ;;		On exit  : 0/0
  8783 ;;		Unchanged: 0/0
  8784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8785 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8786 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8787 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8788 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8789 ;;Total ram usage:       31 bytes
  8790 ;; Hardware stack levels used:    1
  8791 ;; Hardware stack levels required when called:   11
  8792 ;; This function calls:
  8793 ;;		_atoi
  8794 ;;		_dtoa
  8795 ;;		_fputc
  8796 ;;		_isdigit
  8797 ;;		_xtoa
  8798 ;; This function is called by:
  8799 ;;		_vfprintf
  8800 ;; This function uses a non-reentrant model
  8801 ;;
  8802                           
  8803                           	psect	text22
  8804  001394                     __ptext22:
  8805                           	opt callstack 0
  8806  001394                     _vfpfcnvrt:
  8807                           	opt callstack 16
  8808                           
  8809                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  8810                           
  8811                           ;incstack = 0
  8812  001394  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8813  001398  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8814  00139C  CFDE FFF6          	movff	postinc2,tblptrl
  8815  0013A0  CFDD FFF7          	movff	postdec2,tblptrh
  8816  0013A4                     	if	0	;tblptru may be non-zero
  8817  0013A4                     	endif
  8818  0013A4                     	if	0	;tblptru may be non-zero
  8819  0013A4                     	endif
  8820  0013A4  0008               	tblrd		*
  8821  0013A6  50F5               	movf	tablat,w,c
  8822  0013A8  0A25               	xorlw	37
  8823  0013AA  A4D8               	btfss	status,2,c
  8824  0013AC  D1AD               	goto	l7029
  8825                           
  8826                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  8827  0013AE  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8828  0013B2  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8829  0013B6  2ADE               	incf	postinc2,f,c
  8830  0013B8  0E00               	movlw	0
  8831  0013BA  22DD               	addwfc	postdec2,f,c
  8832                           
  8833                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  8834  0013BC  0E00               	movlw	0
  8835  0013BE  6E4B               	movwf	_width+1,c
  8836  0013C0  0E00               	movlw	0
  8837  0013C2  6E4A               	movwf	_width,c
  8838  0013C4  C04A  F04E         	movff	_width,_flags
  8839  0013C8  C04B  F04F         	movff	_width+1,_flags+1
  8840                           
  8841                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  8842  0013CC  684C               	setf	_prec,c
  8843  0013CE  684D               	setf	_prec+1,c
  8844                           
  8845                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  8846  0013D0  0E00               	movlw	0
  8847  0013D2  0100               	movlb	0	; () banked
  8848  0013D4  6FE2               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  8849  0013D6  0E00               	movlw	0
  8850  0013D8  D014               	goto	L3
  8851  0013DA                     l6941:
  8852                           
  8853                           ; BSR set to: 0
  8854                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  8855  0013DA  804E               	bsf	_flags,0,c
  8856  0013DC                     l6943:
  8857                           
  8858                           ; BSR set to: 0
  8859                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  8860  0013DC  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8861  0013E0  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8862  0013E4  2ADE               	incf	postinc2,f,c
  8863  0013E6  0E00               	movlw	0
  8864  0013E8  22DD               	addwfc	postdec2,f,c
  8865                           
  8866                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  8867  0013EA  D02E               	goto	l6967
  8868  0013EC                     l6945:
  8869                           
  8870                           ; BSR set to: 0
  8871                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  8872  0013EC  824E               	bsf	_flags,1,c
  8873  0013EE  D7F6               	goto	l6943
  8874  0013F0                     l6949:
  8875                           
  8876                           ; BSR set to: 0
  8877                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  8878  0013F0  844E               	bsf	_flags,2,c
  8879  0013F2  D7F4               	goto	l6943
  8880  0013F4                     l6953:
  8881                           
  8882                           ; BSR set to: 0
  8883                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  8884  0013F4  864E               	bsf	_flags,3,c
  8885  0013F6  D7F2               	goto	l6943
  8886  0013F8                     l6957:
  8887                           
  8888                           ; BSR set to: 0
  8889                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  8890  0013F8  884E               	bsf	_flags,4,c
  8891  0013FA  D7F0               	goto	l6943
  8892  0013FC                     l6961:
  8893                           
  8894                           ; BSR set to: 0
  8895                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  8896  0013FC  0E00               	movlw	0
  8897  0013FE  6FE2               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  8898  001400  0E01               	movlw	1
  8899  001402                     L3:
  8900  001402  6FE1               	movwf	vfpfcnvrt@done& (0+255),b
  8901                           
  8902                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  8903  001404  D021               	goto	l6967
  8904  001406                     l6965:
  8905                           
  8906                           ; BSR set to: 0
  8907  001406  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8908  00140A  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8909  00140E  CFDE FFF6          	movff	postinc2,tblptrl
  8910  001412  CFDD FFF7          	movff	postdec2,tblptrh
  8911  001416                     	if	0	;tblptru may be non-zero
  8912  001416                     	endif
  8913  001416                     	if	0	;tblptru may be non-zero
  8914  001416                     	endif
  8915  001416  0008               	tblrd		*
  8916  001418  50F5               	movf	tablat,w,c
  8917  00141A  6FCC               	movwf	??_vfpfcnvrt& (0+255),b
  8918  00141C  6BCD               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  8919                           
  8920                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8921                           ; Switch size 1, requested type "simple"
  8922                           ; Number of cases is 1, Range of values is 0 to 0
  8923                           ; switch strategies available:
  8924                           ; Name         Instructions Cycles
  8925                           ; simple_byte            4     3 (average)
  8926                           ;	Chosen strategy is simple_byte
  8927  00141E  51CD               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  8928  001420  0A00               	xorlw	0	; case 0
  8929  001422  A4D8               	btfss	status,2,c
  8930  001424  D7EB               	goto	l6961
  8931                           
  8932                           ; BSR set to: 0
  8933                           ; Switch size 1, requested type "simple"
  8934                           ; Number of cases is 5, Range of values is 32 to 48
  8935                           ; switch strategies available:
  8936                           ; Name         Instructions Cycles
  8937                           ; simple_byte           16     9 (average)
  8938                           ;	Chosen strategy is simple_byte
  8939  001426  51CC               	movf	??_vfpfcnvrt& (0+255),w,b
  8940  001428  0A20               	xorlw	32	; case 32
  8941  00142A  B4D8               	btfsc	status,2,c
  8942  00142C  D7E3               	goto	l6953
  8943  00142E  0A03               	xorlw	3	; case 35
  8944  001430  B4D8               	btfsc	status,2,c
  8945  001432  D7E2               	goto	l6957
  8946  001434  0A08               	xorlw	8	; case 43
  8947  001436  B4D8               	btfsc	status,2,c
  8948  001438  D7DB               	goto	l6949
  8949  00143A  0A06               	xorlw	6	; case 45
  8950  00143C  B4D8               	btfsc	status,2,c
  8951  00143E  D7CD               	goto	l6941
  8952  001440  0A1D               	xorlw	29	; case 48
  8953  001442  B4D8               	btfsc	status,2,c
  8954  001444  D7D3               	goto	l6945
  8955  001446  D7DA               	goto	l6961
  8956  001448                     l6967:
  8957                           
  8958                           ; BSR set to: 0
  8959                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  8960  001448  51E1               	movf	vfpfcnvrt@done& (0+255),w,b
  8961  00144A  11E2               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  8962  00144C  B4D8               	btfsc	status,2,c
  8963  00144E  D7DB               	goto	l6965
  8964                           
  8965                           ; BSR set to: 0
  8966                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  8967  001450  B04E               	btfsc	_flags,0,c
  8968                           
  8969                           ; BSR set to: 0
  8970                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  8971  001452  924E               	bcf	_flags,1,c
  8972                           
  8973                           ; BSR set to: 0
  8974                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  8975  001454  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8976  001458  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8977  00145C  CFDE FFF6          	movff	postinc2,tblptrl
  8978  001460  CFDD FFF7          	movff	postdec2,tblptrh
  8979  001464                     	if	0	;tblptru may be non-zero
  8980  001464                     	endif
  8981  001464                     	if	0	;tblptru may be non-zero
  8982  001464                     	endif
  8983  001464  0008               	tblrd		*
  8984  001466  50F5               	movf	tablat,w,c
  8985  001468  0A2A               	xorlw	42
  8986  00146A  A4D8               	btfss	status,2,c
  8987  00146C  D023               	goto	l6979
  8988                           
  8989                           ; BSR set to: 0
  8990                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  8991  00146E  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8992  001472  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8993  001476  2ADE               	incf	postinc2,f,c
  8994  001478  0E00               	movlw	0
  8995  00147A  22DD               	addwfc	postdec2,f,c
  8996                           
  8997                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  8998  00147C  C0CA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8999  001480  C0CB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9000  001484  CFDF F0CC          	movff	indf2,??_vfpfcnvrt
  9001  001488  0E02               	movlw	2
  9002  00148A  26DE               	addwf	postinc2,f,c
  9003  00148C  CFDF F0CD          	movff	indf2,??_vfpfcnvrt+1
  9004  001490  0E00               	movlw	0
  9005  001492  22DD               	addwfc	postdec2,f,c
  9006  001494  C0CC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9007  001498  C0CD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9008  00149C  CFDE F04A          	movff	postinc2,_width
  9009  0014A0  CFDD F04B          	movff	postdec2,_width+1
  9010                           
  9011                           ; BSR set to: 0
  9012                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  9013  0014A4  AE4B               	btfss	_width+1,7,c
  9014  0014A6  D040               	goto	u7600
  9015                           
  9016                           ; BSR set to: 0
  9017                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  9018  0014A8  804E               	bsf	_flags,0,c
  9019                           
  9020                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  9021  0014AA  6C4A               	negf	_width,c
  9022  0014AC  1E4B               	comf	_width+1,f,c
  9023  0014AE  B0D8               	btfsc	status,0,c
  9024  0014B0  2A4B               	incf	_width+1,f,c
  9025  0014B2  D03A               	goto	u7600
  9026  0014B4                     l6979:
  9027                           
  9028                           ; BSR set to: 0
  9029                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  9030  0014B4  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9031  0014B8  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9032  0014BC  CFDE F087          	movff	postinc2,atoi@s
  9033  0014C0  CFDD F088          	movff	postdec2,atoi@s+1
  9034  0014C4  EC89  F015         	call	_atoi	;wreg free
  9035  0014C8  C087  F04A         	movff	?_atoi,_width
  9036  0014CC  C088  F04B         	movff	?_atoi+1,_width+1
  9037                           
  9038                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  9039  0014D0  D007               	goto	l6983
  9040  0014D2                     l6981:
  9041                           
  9042                           ; BSR set to: 0
  9043                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  9044  0014D2  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9045  0014D6  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9046  0014DA  2ADE               	incf	postinc2,f,c
  9047  0014DC  0E00               	movlw	0
  9048  0014DE  22DD               	addwfc	postdec2,f,c
  9049  0014E0                     l6983:
  9050  0014E0  0ED0               	movlw	208
  9051  0014E2  0100               	movlb	0	; () banked
  9052  0014E4  6FCC               	movwf	??_vfpfcnvrt& (0+255),b
  9053  0014E6  0EFF               	movlw	255
  9054  0014E8  6FCD               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  9055  0014EA  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9056  0014EE  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9057  0014F2  CFDE FFF6          	movff	postinc2,tblptrl
  9058  0014F6  CFDD FFF7          	movff	postdec2,tblptrh
  9059  0014FA                     	if	0	;tblptru may be non-zero
  9060  0014FA                     	endif
  9061  0014FA                     	if	0	;tblptru may be non-zero
  9062  0014FA                     	endif
  9063  0014FA  0008               	tblrd		*
  9064  0014FC  50F5               	movf	tablat,w,c
  9065  0014FE  6FCE               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  9066  001500  6BCF               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  9067  001502  51CC               	movf	??_vfpfcnvrt& (0+255),w,b
  9068  001504  27CE               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  9069  001506  51CD               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  9070  001508  23CF               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  9071  00150A  51CF               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  9072  00150C  E106               	bnz	u7580
  9073  00150E  0E0A               	movlw	10
  9074  001510  5DCE               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  9075  001512  B0D8               	btfsc	status,0,c
  9076  001514  D002               	goto	u7580
  9077  001516  0E01               	movlw	1
  9078  001518  D001               	goto	u7590
  9079  00151A                     u7580:
  9080  00151A  0E00               	movlw	0
  9081  00151C                     u7590:
  9082  00151C  6FE3               	movwf	_vfpfcnvrt$1252& (0+255),b
  9083  00151E  6BE4               	clrf	(_vfpfcnvrt$1252+1)& (0+255),b
  9084                           
  9085                           ; BSR set to: 0
  9086  001520  51E3               	movf	_vfpfcnvrt$1252& (0+255),w,b
  9087  001522  11E4               	iorwf	(_vfpfcnvrt$1252+1)& (0+255),w,b
  9088  001524  A4D8               	btfss	status,2,c
  9089  001526  D7D5               	goto	l6981
  9090  001528                     u7600:
  9091                           
  9092                           ; BSR set to: 0
  9093                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  9094  001528  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9095  00152C  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9096  001530  CFDE FFF6          	movff	postinc2,tblptrl
  9097  001534  CFDD FFF7          	movff	postdec2,tblptrh
  9098  001538                     	if	0	;tblptru may be non-zero
  9099  001538                     	endif
  9100  001538                     	if	0	;tblptru may be non-zero
  9101  001538                     	endif
  9102  001538  0008               	tblrd		*
  9103  00153A  50F5               	movf	tablat,w,c
  9104  00153C  0A64               	xorlw	100
  9105  00153E  B4D8               	btfsc	status,2,c
  9106  001540  D00D               	goto	u7620
  9107                           
  9108                           ; BSR set to: 0
  9109  001542  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9110  001546  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9111  00154A  CFDE FFF6          	movff	postinc2,tblptrl
  9112  00154E  CFDD FFF7          	movff	postdec2,tblptrh
  9113  001552                     	if	0	;tblptru may be non-zero
  9114  001552                     	endif
  9115  001552                     	if	0	;tblptru may be non-zero
  9116  001552                     	endif
  9117  001552  0008               	tblrd		*
  9118  001554  50F5               	movf	tablat,w,c
  9119  001556  0A69               	xorlw	105
  9120  001558  A4D8               	btfss	status,2,c
  9121  00155A  D03F               	goto	l6999
  9122  00155C                     u7620:
  9123                           
  9124                           ; BSR set to: 0
  9125                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  9126  00155C  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9127  001560  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9128  001564  2ADE               	incf	postinc2,f,c
  9129  001566  0E00               	movlw	0
  9130  001568  22DD               	addwfc	postdec2,f,c
  9131                           
  9132                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  9133  00156A  C0CA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9134  00156E  C0CB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9135  001572  CFDF F0CC          	movff	indf2,??_vfpfcnvrt
  9136  001576  0E02               	movlw	2
  9137  001578  26DE               	addwf	postinc2,f,c
  9138  00157A  CFDF F0CD          	movff	indf2,??_vfpfcnvrt+1
  9139  00157E  0E00               	movlw	0
  9140  001580  22DD               	addwfc	postdec2,f,c
  9141  001582  C0CC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9142  001586  C0CD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9143  00158A  CFDE F0D0          	movff	postinc2,vfpfcnvrt@ll
  9144  00158E  CFDD F0D1          	movff	postdec2,vfpfcnvrt@ll+1
  9145  001592  0E00               	movlw	0
  9146  001594  BFD1               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  9147  001596  0EFF               	movlw	-1
  9148  001598  6FD2               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  9149  00159A  6FD3               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  9150  00159C  6FD4               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  9151  00159E  6FD5               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  9152  0015A0  6FD6               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  9153  0015A2  6FD7               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  9154                           
  9155                           ; BSR set to: 0
  9156                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  9157  0015A4  C0C6  F09F         	movff	vfpfcnvrt@fp,dtoa@fp
  9158  0015A8  C0C7  F0A0         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  9159  0015AC  C0D0  F0A1         	movff	vfpfcnvrt@ll,dtoa@d
  9160  0015B0  C0D1  F0A2         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  9161  0015B4  C0D2  F0A3         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  9162  0015B8  C0D3  F0A4         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  9163  0015BC  C0D4  F0A5         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  9164  0015C0  C0D5  F0A6         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  9165  0015C4  C0D6  F0A7         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  9166  0015C8  C0D7  F0A8         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  9167  0015CC  EC7B  F00E         	call	_dtoa	;wreg free
  9168  0015D0  C09F  F0C6         	movff	?_dtoa,?_vfpfcnvrt
  9169  0015D4  C0A0  F0C7         	movff	?_dtoa+1,?_vfpfcnvrt+1
  9170  0015D8  0012               	return	
  9171  0015DA                     l6999:
  9172                           
  9173                           ; BSR set to: 0
  9174                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  9175  0015DA  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9176  0015DE  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9177  0015E2  CFDE FFF6          	movff	postinc2,tblptrl
  9178  0015E6  CFDD FFF7          	movff	postdec2,tblptrh
  9179  0015EA                     	if	0	;tblptru may be non-zero
  9180  0015EA                     	endif
  9181  0015EA                     	if	0	;tblptru may be non-zero
  9182  0015EA                     	endif
  9183  0015EA  0008               	tblrd		*
  9184  0015EC  50F5               	movf	tablat,w,c
  9185  0015EE  0A78               	xorlw	120
  9186  0015F0  B4D8               	btfsc	status,2,c
  9187  0015F2  D00D               	goto	u7640
  9188                           
  9189                           ; BSR set to: 0
  9190  0015F4  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9191  0015F8  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9192  0015FC  CFDE FFF6          	movff	postinc2,tblptrl
  9193  001600  CFDD FFF7          	movff	postdec2,tblptrh
  9194  001604                     	if	0	;tblptru may be non-zero
  9195  001604                     	endif
  9196  001604                     	if	0	;tblptru may be non-zero
  9197  001604                     	endif
  9198  001604  0008               	tblrd		*
  9199  001606  50F5               	movf	tablat,w,c
  9200  001608  0A58               	xorlw	88
  9201  00160A  A4D8               	btfss	status,2,c
  9202  00160C  D04D               	goto	l7013
  9203  00160E                     u7640:
  9204                           
  9205                           ; BSR set to: 0
  9206                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  9207  00160E  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9208  001612  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9209  001616  CFDE FFF6          	movff	postinc2,tblptrl
  9210  00161A  CFDD FFF7          	movff	postdec2,tblptrh
  9211  00161E                     	if	0	;tblptru may be non-zero
  9212  00161E                     	endif
  9213  00161E                     	if	0	;tblptru may be non-zero
  9214  00161E                     	endif
  9215  00161E  0008               	tblrd		*
  9216  001620  CFF5 F0E0          	movff	tablat,vfpfcnvrt@c
  9217                           
  9218                           ; BSR set to: 0
  9219                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  9220  001624  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9221  001628  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9222  00162C  2ADE               	incf	postinc2,f,c
  9223  00162E  0E00               	movlw	0
  9224  001630  22DD               	addwfc	postdec2,f,c
  9225                           
  9226                           ; BSR set to: 0
  9227                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  9228  001632  C0CA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9229  001636  C0CB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9230  00163A  CFDF F0CC          	movff	indf2,??_vfpfcnvrt
  9231  00163E  0E02               	movlw	2
  9232  001640  26DE               	addwf	postinc2,f,c
  9233  001642  CFDF F0CD          	movff	indf2,??_vfpfcnvrt+1
  9234  001646  0E00               	movlw	0
  9235  001648  22DD               	addwfc	postdec2,f,c
  9236  00164A  C0CC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9237  00164E  C0CD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9238  001652  CFDE F0CE          	movff	postinc2,??_vfpfcnvrt+2
  9239  001656  CFDD F0CF          	movff	postdec2,??_vfpfcnvrt+3
  9240  00165A  C0CE  F0D8         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  9241  00165E  C0CF  F0D9         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  9242  001662  6BDA               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  9243  001664  6BDB               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  9244  001666  6BDC               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  9245  001668  6BDD               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  9246  00166A  6BDE               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  9247  00166C  6BDF               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  9248                           
  9249                           ; BSR set to: 0
  9250                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
  9251  00166E  C0C6  F09F         	movff	vfpfcnvrt@fp,xtoa@fp
  9252  001672  C0C7  F0A0         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  9253  001676  C0D8  F0A1         	movff	vfpfcnvrt@llu,xtoa@d
  9254  00167A  C0D9  F0A2         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  9255  00167E  C0DA  F0A3         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  9256  001682  C0DB  F0A4         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  9257  001686  C0DC  F0A5         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  9258  00168A  C0DD  F0A6         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  9259  00168E  C0DE  F0A7         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  9260  001692  C0DF  F0A8         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  9261  001696  C0E0  F0A9         	movff	vfpfcnvrt@c,xtoa@x
  9262  00169A  EC9F  F00F         	call	_xtoa	;wreg free
  9263  00169E  C09F  F0C6         	movff	?_xtoa,?_vfpfcnvrt
  9264  0016A2  C0A0  F0C7         	movff	?_xtoa+1,?_vfpfcnvrt+1
  9265  0016A6  0012               	return	
  9266  0016A8                     l7013:
  9267                           
  9268                           ; BSR set to: 0
  9269                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  9270  0016A8  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9271  0016AC  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9272  0016B0  CFDE FFF6          	movff	postinc2,tblptrl
  9273  0016B4  CFDD FFF7          	movff	postdec2,tblptrh
  9274  0016B8                     	if	0	;tblptru may be non-zero
  9275  0016B8                     	endif
  9276  0016B8                     	if	0	;tblptru may be non-zero
  9277  0016B8                     	endif
  9278  0016B8  0008               	tblrd		*
  9279  0016BA  50F5               	movf	tablat,w,c
  9280  0016BC  0A25               	xorlw	37
  9281  0016BE  A4D8               	btfss	status,2,c
  9282  0016C0  D017               	goto	l7023
  9283                           
  9284                           ; BSR set to: 0
  9285                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  9286  0016C2  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9287  0016C6  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9288  0016CA  2ADE               	incf	postinc2,f,c
  9289  0016CC  0E00               	movlw	0
  9290  0016CE  22DD               	addwfc	postdec2,f,c
  9291                           
  9292                           ; BSR set to: 0
  9293                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  9294  0016D0  0E00               	movlw	0
  9295  0016D2  6F85               	movwf	(fputc@c+1)& (0+255),b
  9296  0016D4  0E25               	movlw	37
  9297  0016D6  6F84               	movwf	fputc@c& (0+255),b
  9298  0016D8  C0C6  F086         	movff	vfpfcnvrt@fp,fputc@fp
  9299  0016DC  C0C7  F087         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  9300  0016E0  EC82  F01C         	call	_fputc	;wreg free
  9301  0016E4                     l7019:
  9302                           
  9303                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  9304  0016E4  0E00               	movlw	0
  9305  0016E6  0100               	movlb	0	; () banked
  9306  0016E8  6FC7               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  9307  0016EA  0E01               	movlw	1
  9308  0016EC  6FC6               	movwf	?_vfpfcnvrt& (0+255),b
  9309  0016EE  0012               	return	
  9310  0016F0                     l7023:
  9311                           
  9312                           ; BSR set to: 0
  9313                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  9314  0016F0  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9315  0016F4  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9316  0016F8  2ADE               	incf	postinc2,f,c
  9317  0016FA  0E00               	movlw	0
  9318  0016FC  22DD               	addwfc	postdec2,f,c
  9319                           
  9320                           ; BSR set to: 0
  9321                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  9322  0016FE  0E00               	movlw	0
  9323  001700  6FC7               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  9324  001702  0E00               	movlw	0
  9325  001704  6FC6               	movwf	?_vfpfcnvrt& (0+255),b
  9326  001706  0012               	return	
  9327  001708                     l7029:
  9328                           
  9329                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  9330  001708  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9331  00170C  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9332  001710  CFDE FFF6          	movff	postinc2,tblptrl
  9333  001714  CFDD FFF7          	movff	postdec2,tblptrh
  9334  001718                     	if	0	;tblptru may be non-zero
  9335  001718                     	endif
  9336  001718                     	if	0	;tblptru may be non-zero
  9337  001718                     	endif
  9338  001718  0008               	tblrd		*
  9339  00171A  50F5               	movf	tablat,w,c
  9340  00171C  0100               	movlb	0	; () banked
  9341  00171E  6F84               	movwf	fputc@c& (0+255),b
  9342  001720  6B85               	clrf	(fputc@c+1)& (0+255),b
  9343  001722  C0C6  F086         	movff	vfpfcnvrt@fp,fputc@fp
  9344  001726  C0C7  F087         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  9345  00172A  EC82  F01C         	call	_fputc	;wreg free
  9346                           
  9347                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  9348  00172E  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9349  001732  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9350  001736  2ADE               	incf	postinc2,f,c
  9351  001738  0E00               	movlw	0
  9352  00173A  22DD               	addwfc	postdec2,f,c
  9353  00173C  D7D3               	goto	l7019
  9354  00173E                     __end_of_vfpfcnvrt:
  9355                           	opt callstack 0
  9356                           
  9357 ;; *************** function _xtoa *****************
  9358 ;; Defined at:
  9359 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9360 ;; Parameters:    Size  Location     Type
  9361 ;;  fp              2   31[BANK0 ] PTR struct _IO_FILE
  9362 ;;		 -> NULL(0), 
  9363 ;;  d               8   33[BANK0 ] unsigned long long 
  9364 ;;  x               1   41[BANK0 ] unsigned char 
  9365 ;; Auto vars:     Size  Location     Type
  9366 ;;  n               8   58[BANK0 ] unsigned long long 
  9367 ;;  c               2   68[BANK0 ] int 
  9368 ;;  i               2   66[BANK0 ] int 
  9369 ;;  w               2   56[BANK0 ] int 
  9370 ;;  p               2   54[BANK0 ] int 
  9371 ;; Return value:  Size  Location     Type
  9372 ;;                  2   31[BANK0 ] int 
  9373 ;; Registers used:
  9374 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9375 ;; Tracked objects:
  9376 ;;		On entry : 0/0
  9377 ;;		On exit  : 0/0
  9378 ;;		Unchanged: 0/0
  9379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9380 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9381 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9382 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9383 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9384 ;;Total ram usage:       39 bytes
  9385 ;; Hardware stack levels used:    1
  9386 ;; Hardware stack levels required when called:   10
  9387 ;; This function calls:
  9388 ;;		_isalpha
  9389 ;;		_isupper
  9390 ;;		_pad
  9391 ;;		_toupper
  9392 ;; This function is called by:
  9393 ;;		_vfpfcnvrt
  9394 ;; This function uses a non-reentrant model
  9395 ;;
  9396                           
  9397                           	psect	text23
  9398  001F3E                     __ptext23:
  9399                           	opt callstack 0
  9400  001F3E                     _xtoa:
  9401                           	opt callstack 16
  9402                           
  9403                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  9404                           
  9405                           ;incstack = 0
  9406  001F3E  AE4D               	btfss	_prec+1,7,c
  9407                           
  9408                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  9409  001F40  924E               	bcf	_flags,1,c
  9410                           
  9411                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  9412  001F42  BE4D               	btfsc	_prec+1,7,c
  9413  001F44  D005               	goto	u7300
  9414  001F46  504D               	movf	_prec+1,w,c
  9415  001F48  E109               	bnz	l665
  9416  001F4A  044C               	decf	_prec,w,c
  9417  001F4C  B0D8               	btfsc	status,0,c
  9418  001F4E  D006               	goto	l665
  9419  001F50                     u7300:
  9420  001F50  0E00               	movlw	0
  9421  001F52  0100               	movlb	0	; () banked
  9422  001F54  6FB7               	movwf	(xtoa@p+1)& (0+255),b
  9423  001F56  0E01               	movlw	1
  9424  001F58  6FB6               	movwf	xtoa@p& (0+255),b
  9425  001F5A  D004               	goto	l667
  9426  001F5C                     l665:
  9427  001F5C  C04C  F0B6         	movff	_prec,xtoa@p
  9428  001F60  C04D  F0B7         	movff	_prec+1,xtoa@p+1
  9429  001F64                     l667:
  9430                           
  9431                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  9432  001F64  C04A  F0B8         	movff	_width,xtoa@w
  9433  001F68  C04B  F0B9         	movff	_width+1,xtoa@w+1
  9434                           
  9435                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  9436  001F6C  A84E               	btfss	_flags,4,c
  9437  001F6E  D005               	goto	l6833
  9438                           
  9439                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  9440  001F70  0100               	movlb	0	; () banked
  9441  001F72  0EFE               	movlw	254
  9442  001F74  27B8               	addwf	xtoa@w& (0+255),f,b
  9443  001F76  0EFF               	movlw	255
  9444  001F78  23B9               	addwfc	(xtoa@w+1)& (0+255),f,b
  9445  001F7A                     l6833:
  9446                           
  9447                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  9448  001F7A  C0A1  F0BA         	movff	xtoa@d,xtoa@n
  9449  001F7E  C0A2  F0BB         	movff	xtoa@d+1,xtoa@n+1
  9450  001F82  C0A3  F0BC         	movff	xtoa@d+2,xtoa@n+2
  9451  001F86  C0A4  F0BD         	movff	xtoa@d+3,xtoa@n+3
  9452  001F8A  C0A5  F0BE         	movff	xtoa@d+4,xtoa@n+4
  9453  001F8E  C0A6  F0BF         	movff	xtoa@d+5,xtoa@n+5
  9454  001F92  C0A7  F0C0         	movff	xtoa@d+6,xtoa@n+6
  9455  001F96  C0A8  F0C1         	movff	xtoa@d+7,xtoa@n+7
  9456                           
  9457                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  9458  001F9A  0E00               	movlw	0
  9459  001F9C  0100               	movlb	0	; () banked
  9460  001F9E  6FC3               	movwf	(xtoa@i+1)& (0+255),b
  9461  001FA0  0E1F               	movlw	31
  9462  001FA2  6FC2               	movwf	xtoa@i& (0+255),b
  9463                           
  9464                           ; BSR set to: 0
  9465                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  9466  001FA4  0E00               	movlw	0
  9467  001FA6  0102               	movlb	2	; () banked
  9468  001FA8  6F9F               	movwf	(_dbuf+31)& (0+255),b
  9469                           
  9470                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9471  001FAA  D094               	goto	l6869
  9472  001FAC                     l6839:
  9473                           
  9474                           ; BSR set to: 0
  9475                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  9476  001FAC  07C2               	decf	xtoa@i& (0+255),f,b
  9477  001FAE  A0D8               	btfss	status,0,c
  9478  001FB0  07C3               	decf	(xtoa@i+1)& (0+255),f,b
  9479                           
  9480                           ; BSR set to: 0
  9481                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  9482  001FB2  0E0F               	movlw	15
  9483  001FB4  15BA               	andwf	xtoa@n& (0+255),w,b
  9484  001FB6  6FC4               	movwf	xtoa@c& (0+255),b
  9485  001FB8  6BC5               	clrf	(xtoa@c+1)& (0+255),b
  9486                           
  9487                           ; BSR set to: 0
  9488                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  9489  001FBA  BFC5               	btfsc	(xtoa@c+1)& (0+255),7,b
  9490  001FBC  D008               	goto	l6847
  9491  001FBE  51C5               	movf	(xtoa@c+1)& (0+255),w,b
  9492  001FC0  E104               	bnz	u7320
  9493  001FC2  0E0A               	movlw	10
  9494  001FC4  5DC4               	subwf	xtoa@c& (0+255),w,b
  9495  001FC6  A0D8               	btfss	status,0,c
  9496  001FC8  D002               	goto	l6847
  9497  001FCA                     u7320:
  9498                           
  9499                           ; BSR set to: 0
  9500  001FCA  0E57               	movlw	87
  9501  001FCC  D001               	goto	L4
  9502  001FCE                     l6847:
  9503                           
  9504                           ; BSR set to: 0
  9505  001FCE  0E30               	movlw	48
  9506  001FD0                     L4:
  9507  001FD0  25C4               	addwf	xtoa@c& (0+255),w,b
  9508  001FD2  6FC4               	movwf	xtoa@c& (0+255),b
  9509  001FD4  0E00               	movlw	0
  9510  001FD6  21C5               	addwfc	(xtoa@c+1)& (0+255),w,b
  9511  001FD8  6FC5               	movwf	(xtoa@c+1)& (0+255),b
  9512                           
  9513                           ; BSR set to: 0
  9514                           
  9515                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 646:       
      +                            if ((0 ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsi
      +                          gned)(c)|32)-'a') < 26)) {
  9516  001FDA  0EBF               	movlw	191
  9517  001FDC  6FAA               	movwf	??_xtoa& (0+255),b
  9518  001FDE  0EFF               	movlw	255
  9519  001FE0  6FAB               	movwf	(??_xtoa+1)& (0+255),b
  9520  001FE2  51A9               	movf	xtoa@x& (0+255),w,b
  9521  001FE4  6FAC               	movwf	(??_xtoa+2)& (0+255),b
  9522  001FE6  6BAD               	clrf	(??_xtoa+3)& (0+255),b
  9523  001FE8  51AA               	movf	??_xtoa& (0+255),w,b
  9524  001FEA  27AC               	addwf	(??_xtoa+2)& (0+255),f,b
  9525  001FEC  51AB               	movf	(??_xtoa+1)& (0+255),w,b
  9526  001FEE  23AD               	addwfc	(??_xtoa+3)& (0+255),f,b
  9527  001FF0  51AD               	movf	(??_xtoa+3)& (0+255),w,b
  9528  001FF2  E106               	bnz	u7330
  9529  001FF4  0E1A               	movlw	26
  9530  001FF6  5DAC               	subwf	(??_xtoa+2)& (0+255),w,b
  9531  001FF8  B0D8               	btfsc	status,0,c
  9532  001FFA  D002               	goto	u7330
  9533  001FFC  0E01               	movlw	1
  9534  001FFE  D001               	goto	u7340
  9535  002000                     u7330:
  9536  002000  0E00               	movlw	0
  9537  002002                     u7340:
  9538  002002  6FB2               	movwf	_xtoa$1237& (0+255),b
  9539  002004  6BB3               	clrf	(_xtoa$1237+1)& (0+255),b
  9540                           
  9541                           ; BSR set to: 0
  9542  002006  51B2               	movf	_xtoa$1237& (0+255),w,b
  9543  002008  11B3               	iorwf	(_xtoa$1237+1)& (0+255),w,b
  9544  00200A  B4D8               	btfsc	status,2,c
  9545  00200C  D027               	goto	l6861
  9546                           
  9547                           ; BSR set to: 0
  9548  00200E  0E9F               	movlw	159
  9549  002010  6FAA               	movwf	??_xtoa& (0+255),b
  9550  002012  0EFF               	movlw	255
  9551  002014  6FAB               	movwf	(??_xtoa+1)& (0+255),b
  9552  002016  0E20               	movlw	32
  9553  002018  11C4               	iorwf	xtoa@c& (0+255),w,b
  9554  00201A  6FAC               	movwf	(??_xtoa+2)& (0+255),b
  9555  00201C  0E00               	movlw	0
  9556  00201E  11C5               	iorwf	(xtoa@c+1)& (0+255),w,b
  9557  002020  6FAD               	movwf	(??_xtoa+3)& (0+255),b
  9558  002022  51AA               	movf	??_xtoa& (0+255),w,b
  9559  002024  27AC               	addwf	(??_xtoa+2)& (0+255),f,b
  9560  002026  51AB               	movf	(??_xtoa+1)& (0+255),w,b
  9561  002028  23AD               	addwfc	(??_xtoa+3)& (0+255),f,b
  9562  00202A  51AD               	movf	(??_xtoa+3)& (0+255),w,b
  9563  00202C  E106               	bnz	u7360
  9564  00202E  0E1A               	movlw	26
  9565  002030  5DAC               	subwf	(??_xtoa+2)& (0+255),w,b
  9566  002032  B0D8               	btfsc	status,0,c
  9567  002034  D002               	goto	u7360
  9568  002036  0E01               	movlw	1
  9569  002038  D001               	goto	u7370
  9570  00203A                     u7360:
  9571  00203A  0E00               	movlw	0
  9572  00203C                     u7370:
  9573  00203C  6FB4               	movwf	_xtoa$1238& (0+255),b
  9574  00203E  6BB5               	clrf	(_xtoa$1238+1)& (0+255),b
  9575                           
  9576                           ; BSR set to: 0
  9577  002040  51B4               	movf	_xtoa$1238& (0+255),w,b
  9578  002042  11B5               	iorwf	(_xtoa$1238+1)& (0+255),w,b
  9579  002044  B4D8               	btfsc	status,2,c
  9580  002046  D00A               	goto	l6861
  9581                           
  9582                           ; BSR set to: 0
  9583                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  9584  002048  C0C4  F086         	movff	xtoa@c,toupper@c
  9585  00204C  C0C5  F087         	movff	xtoa@c+1,toupper@c+1
  9586  002050  EC9C  F01D         	call	_toupper	;wreg free
  9587  002054  C086  F0C4         	movff	?_toupper,xtoa@c
  9588  002058  C087  F0C5         	movff	?_toupper+1,xtoa@c+1
  9589  00205C                     l6861:
  9590                           
  9591                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  9592  00205C  0E80               	movlw	low _dbuf
  9593  00205E  0100               	movlb	0	; () banked
  9594  002060  25C2               	addwf	xtoa@i& (0+255),w,b
  9595  002062  6ED9               	movwf	fsr2l,c
  9596  002064  0E02               	movlw	high _dbuf
  9597  002066  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
  9598  002068  6EDA               	movwf	fsr2h,c
  9599  00206A  C0C4  FFDF         	movff	xtoa@c,indf2
  9600                           
  9601                           ; BSR set to: 0
  9602                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  9603  00206E  07B6               	decf	xtoa@p& (0+255),f,b
  9604  002070  A0D8               	btfss	status,0,c
  9605  002072  07B7               	decf	(xtoa@p+1)& (0+255),f,b
  9606                           
  9607                           ; BSR set to: 0
  9608                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  9609  002074  07B8               	decf	xtoa@w& (0+255),f,b
  9610  002076  A0D8               	btfss	status,0,c
  9611  002078  07B9               	decf	(xtoa@w+1)& (0+255),f,b
  9612                           
  9613                           ; BSR set to: 0
  9614                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  9615  00207A  C0BA  F0AA         	movff	xtoa@n,??_xtoa
  9616  00207E  C0BB  F0AB         	movff	xtoa@n+1,??_xtoa+1
  9617  002082  C0BC  F0AC         	movff	xtoa@n+2,??_xtoa+2
  9618  002086  C0BD  F0AD         	movff	xtoa@n+3,??_xtoa+3
  9619  00208A  C0BE  F0AE         	movff	xtoa@n+4,??_xtoa+4
  9620  00208E  C0BF  F0AF         	movff	xtoa@n+5,??_xtoa+5
  9621  002092  C0C0  F0B0         	movff	xtoa@n+6,??_xtoa+6
  9622  002096  C0C1  F0B1         	movff	xtoa@n+7,??_xtoa+7
  9623  00209A  0E05               	movlw	5
  9624  00209C  D009               	goto	u7390
  9625  00209E                     u7395:
  9626  00209E  90D8               	bcf	status,0,c
  9627  0020A0  33B1               	rrcf	(??_xtoa+7)& (0+255),f,b
  9628  0020A2  33B0               	rrcf	(??_xtoa+6)& (0+255),f,b
  9629  0020A4  33AF               	rrcf	(??_xtoa+5)& (0+255),f,b
  9630  0020A6  33AE               	rrcf	(??_xtoa+4)& (0+255),f,b
  9631  0020A8  33AD               	rrcf	(??_xtoa+3)& (0+255),f,b
  9632  0020AA  33AC               	rrcf	(??_xtoa+2)& (0+255),f,b
  9633  0020AC  33AB               	rrcf	(??_xtoa+1)& (0+255),f,b
  9634  0020AE  33AA               	rrcf	??_xtoa& (0+255),f,b
  9635  0020B0                     u7390:
  9636  0020B0  2EE8               	decfsz	wreg,f,c
  9637  0020B2  D7F5               	goto	u7395
  9638  0020B4  C0AA  F0BA         	movff	??_xtoa,xtoa@n
  9639  0020B8  C0AB  F0BB         	movff	??_xtoa+1,xtoa@n+1
  9640  0020BC  C0AC  F0BC         	movff	??_xtoa+2,xtoa@n+2
  9641  0020C0  C0AD  F0BD         	movff	??_xtoa+3,xtoa@n+3
  9642  0020C4  C0AE  F0BE         	movff	??_xtoa+4,xtoa@n+4
  9643  0020C8  C0AF  F0BF         	movff	??_xtoa+5,xtoa@n+5
  9644  0020CC  C0B0  F0C0         	movff	??_xtoa+6,xtoa@n+6
  9645  0020D0  C0B1  F0C1         	movff	??_xtoa+7,xtoa@n+7
  9646  0020D4                     l6869:
  9647                           
  9648                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9649  0020D4  0100               	movlb	0	; () banked
  9650  0020D6  BFC3               	btfsc	(xtoa@i+1)& (0+255),7,b
  9651  0020D8  D020               	goto	u7440
  9652  0020DA  51C3               	movf	(xtoa@i+1)& (0+255),w,b
  9653  0020DC  E104               	bnz	u7400
  9654  0020DE  0E02               	movlw	2
  9655  0020E0  5DC2               	subwf	xtoa@i& (0+255),w,b
  9656  0020E2  A0D8               	btfss	status,0,c
  9657  0020E4  D01A               	goto	u7440
  9658  0020E6                     u7400:
  9659                           
  9660                           ; BSR set to: 0
  9661  0020E6  51BA               	movf	xtoa@n& (0+255),w,b
  9662  0020E8  11BB               	iorwf	(xtoa@n+1)& (0+255),w,b
  9663  0020EA  11BC               	iorwf	(xtoa@n+2)& (0+255),w,b
  9664  0020EC  11BD               	iorwf	(xtoa@n+3)& (0+255),w,b
  9665  0020EE  11BE               	iorwf	(xtoa@n+4)& (0+255),w,b
  9666  0020F0  11BF               	iorwf	(xtoa@n+5)& (0+255),w,b
  9667  0020F2  11C0               	iorwf	(xtoa@n+6)& (0+255),w,b
  9668  0020F4  11C1               	iorwf	(xtoa@n+7)& (0+255),w,b
  9669  0020F6  A4D8               	btfss	status,2,c
  9670  0020F8  D759               	goto	l6839
  9671                           
  9672                           ; BSR set to: 0
  9673  0020FA  BFB7               	btfsc	(xtoa@p+1)& (0+255),7,b
  9674  0020FC  D005               	goto	u7420
  9675  0020FE  51B7               	movf	(xtoa@p+1)& (0+255),w,b
  9676  002100  E102               	bnz	u7421
  9677  002102  05B6               	decf	xtoa@p& (0+255),w,b
  9678  002104  B0D8               	btfsc	status,0,c
  9679  002106                     u7421:
  9680  002106  D752               	goto	l6839
  9681  002108                     u7420:
  9682                           
  9683                           ; BSR set to: 0
  9684  002108  BFB9               	btfsc	(xtoa@w+1)& (0+255),7,b
  9685  00210A  D007               	goto	u7440
  9686  00210C  51B9               	movf	(xtoa@w+1)& (0+255),w,b
  9687  00210E  E103               	bnz	u7430
  9688  002110  05B8               	decf	xtoa@w& (0+255),w,b
  9689  002112  A0D8               	btfss	status,0,c
  9690  002114  D002               	goto	u7440
  9691  002116                     u7430:
  9692                           
  9693                           ; BSR set to: 0
  9694  002116  B24E               	btfsc	_flags,1,c
  9695  002118  D749               	goto	l6839
  9696  00211A                     u7440:
  9697                           
  9698                           ; BSR set to: 0
  9699                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  9700  00211A  A84E               	btfss	_flags,4,c
  9701  00211C  D016               	goto	l6885
  9702                           
  9703                           ; BSR set to: 0
  9704                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  9705  00211E  07C2               	decf	xtoa@i& (0+255),f,b
  9706  002120  A0D8               	btfss	status,0,c
  9707  002122  07C3               	decf	(xtoa@i+1)& (0+255),f,b
  9708                           
  9709                           ; BSR set to: 0
  9710                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  9711  002124  0E80               	movlw	low _dbuf
  9712  002126  25C2               	addwf	xtoa@i& (0+255),w,b
  9713  002128  6ED9               	movwf	fsr2l,c
  9714  00212A  0E02               	movlw	high _dbuf
  9715  00212C  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
  9716  00212E  6EDA               	movwf	fsr2h,c
  9717  002130  C0A9  FFDF         	movff	xtoa@x,indf2
  9718                           
  9719                           ; BSR set to: 0
  9720                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  9721  002134  07C2               	decf	xtoa@i& (0+255),f,b
  9722  002136  A0D8               	btfss	status,0,c
  9723  002138  07C3               	decf	(xtoa@i+1)& (0+255),f,b
  9724                           
  9725                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  9726  00213A  0E80               	movlw	low _dbuf
  9727  00213C  25C2               	addwf	xtoa@i& (0+255),w,b
  9728  00213E  6ED9               	movwf	fsr2l,c
  9729  002140  0E02               	movlw	high _dbuf
  9730  002142  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
  9731  002144  6EDA               	movwf	fsr2h,c
  9732  002146  0E30               	movlw	48
  9733  002148  6EDF               	movwf	indf2,c
  9734  00214A                     l6885:
  9735                           
  9736                           ; BSR set to: 0
  9737                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  9738  00214A  C09F  F094         	movff	xtoa@fp,pad@fp
  9739  00214E  C0A0  F095         	movff	xtoa@fp+1,pad@fp+1
  9740  002152  0E80               	movlw	low _dbuf
  9741  002154  25C2               	addwf	xtoa@i& (0+255),w,b
  9742  002156  6F96               	movwf	pad@buf& (0+255),b
  9743  002158  0E02               	movlw	high _dbuf
  9744  00215A  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
  9745  00215C  6F97               	movwf	(pad@buf+1)& (0+255),b
  9746  00215E  C0B8  F098         	movff	xtoa@w,pad@p
  9747  002162  C0B9  F099         	movff	xtoa@w+1,pad@p+1
  9748  002166  EC35  F01B         	call	_pad	;wreg free
  9749  00216A  C094  F09F         	movff	?_pad,?_xtoa
  9750  00216E  C095  F0A0         	movff	?_pad+1,?_xtoa+1
  9751  002172  0012               	return		;funcret
  9752  002174                     __end_of_xtoa:
  9753                           	opt callstack 0
  9754                           
  9755 ;; *************** function _toupper *****************
  9756 ;; Defined at:
  9757 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  9758 ;; Parameters:    Size  Location     Type
  9759 ;;  c               2    6[BANK0 ] int 
  9760 ;; Auto vars:     Size  Location     Type
  9761 ;;		None
  9762 ;; Return value:  Size  Location     Type
  9763 ;;                  2    6[BANK0 ] int 
  9764 ;; Registers used:
  9765 ;;		wreg, status,2, status,0
  9766 ;; Tracked objects:
  9767 ;;		On entry : 0/0
  9768 ;;		On exit  : 0/0
  9769 ;;		Unchanged: 0/0
  9770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9771 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9772 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9773 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9774 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9775 ;;Total ram usage:        8 bytes
  9776 ;; Hardware stack levels used:    1
  9777 ;; Hardware stack levels required when called:    4
  9778 ;; This function calls:
  9779 ;;		_islower
  9780 ;; This function is called by:
  9781 ;;		_xtoa
  9782 ;; This function uses a non-reentrant model
  9783 ;;
  9784                           
  9785                           	psect	text24
  9786  003B38                     __ptext24:
  9787                           	opt callstack 0
  9788  003B38                     _toupper:
  9789                           	opt callstack 21
  9790                           
  9791                           ;incstack = 0
  9792  003B38  0E9F               	movlw	159
  9793  003B3A  0100               	movlb	0	; () banked
  9794  003B3C  6F88               	movwf	??_toupper& (0+255),b
  9795  003B3E  0EFF               	movlw	255
  9796  003B40  6F89               	movwf	(??_toupper+1)& (0+255),b
  9797  003B42  C086  F08A         	movff	toupper@c,??_toupper+2
  9798  003B46  C087  F08B         	movff	toupper@c+1,??_toupper+3
  9799  003B4A  5188               	movf	??_toupper& (0+255),w,b
  9800  003B4C  278A               	addwf	(??_toupper+2)& (0+255),f,b
  9801  003B4E  5189               	movf	(??_toupper+1)& (0+255),w,b
  9802  003B50  238B               	addwfc	(??_toupper+3)& (0+255),f,b
  9803  003B52  518B               	movf	(??_toupper+3)& (0+255),w,b
  9804  003B54  E106               	bnz	u6940
  9805  003B56  0E1A               	movlw	26
  9806  003B58  5D8A               	subwf	(??_toupper+2)& (0+255),w,b
  9807  003B5A  B0D8               	btfsc	status,0,c
  9808  003B5C  D002               	goto	u6940
  9809  003B5E  0E01               	movlw	1
  9810  003B60  D001               	goto	u6950
  9811  003B62                     u6940:
  9812  003B62  0E00               	movlw	0
  9813  003B64                     u6950:
  9814  003B64  6F8C               	movwf	_toupper$1802& (0+255),b
  9815  003B66  6B8D               	clrf	(_toupper$1802+1)& (0+255),b
  9816                           
  9817                           ; BSR set to: 0
  9818  003B68  518C               	movf	_toupper$1802& (0+255),w,b
  9819  003B6A  118D               	iorwf	(_toupper$1802+1)& (0+255),w,b
  9820  003B6C  B4D8               	btfsc	status,2,c
  9821  003B6E  D005               	goto	l1505
  9822                           
  9823                           ; BSR set to: 0
  9824  003B70  0E5F               	movlw	95
  9825  003B72  1586               	andwf	toupper@c& (0+255),w,b
  9826  003B74  6F86               	movwf	?_toupper& (0+255),b
  9827  003B76  6B87               	clrf	(?_toupper+1)& (0+255),b
  9828  003B78  0012               	return	
  9829  003B7A                     l1505:
  9830                           
  9831                           ; BSR set to: 0
  9832  003B7A  C086  F086         	movff	toupper@c,?_toupper
  9833  003B7E  C087  F087         	movff	toupper@c+1,?_toupper+1
  9834                           
  9835                           ; BSR set to: 0
  9836  003B82  0012               	return		;funcret
  9837  003B84                     __end_of_toupper:
  9838                           	opt callstack 0
  9839                           
  9840 ;; *************** function _islower *****************
  9841 ;; Defined at:
  9842 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  9843 ;; Parameters:    Size  Location     Type
  9844 ;;  c               2    0[BANK0 ] int 
  9845 ;; Auto vars:     Size  Location     Type
  9846 ;;		None
  9847 ;; Return value:  Size  Location     Type
  9848 ;;                  2    0[BANK0 ] int 
  9849 ;; Registers used:
  9850 ;;		wreg, status,2, status,0
  9851 ;; Tracked objects:
  9852 ;;		On entry : 0/0
  9853 ;;		On exit  : 0/0
  9854 ;;		Unchanged: 0/0
  9855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9856 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9858 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9859 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9860 ;;Total ram usage:        6 bytes
  9861 ;; Hardware stack levels used:    1
  9862 ;; Hardware stack levels required when called:    3
  9863 ;; This function calls:
  9864 ;;		Nothing
  9865 ;; This function is called by:
  9866 ;;		_toupper
  9867 ;; This function uses a non-reentrant model
  9868 ;;
  9869                           
  9870                           	psect	text25
  9871  003CDA                     __ptext25:
  9872                           	opt callstack 0
  9873  003CDA                     _islower:
  9874                           	opt callstack 21
  9875                           
  9876                           ; BSR set to: 0
  9877                           ;incstack = 0
  9878  003CDA  0E9F               	movlw	159
  9879  003CDC  0100               	movlb	0	; () banked
  9880  003CDE  6F82               	movwf	??_islower& (0+255),b
  9881  003CE0  0EFF               	movlw	255
  9882  003CE2  6F83               	movwf	(??_islower+1)& (0+255),b
  9883  003CE4  C080  F084         	movff	islower@c,??_islower+2
  9884  003CE8  C081  F085         	movff	islower@c+1,??_islower+3
  9885  003CEC  5182               	movf	??_islower& (0+255),w,b
  9886  003CEE  2784               	addwf	(??_islower+2)& (0+255),f,b
  9887  003CF0  5183               	movf	(??_islower+1)& (0+255),w,b
  9888  003CF2  2385               	addwfc	(??_islower+3)& (0+255),f,b
  9889  003CF4  5185               	movf	(??_islower+3)& (0+255),w,b
  9890  003CF6  E106               	bnz	u6830
  9891  003CF8  0E1A               	movlw	26
  9892  003CFA  5D84               	subwf	(??_islower+2)& (0+255),w,b
  9893  003CFC  B0D8               	btfsc	status,0,c
  9894  003CFE  D002               	goto	u6830
  9895  003D00  0E01               	movlw	1
  9896  003D02  D001               	goto	u6840
  9897  003D04                     u6830:
  9898  003D04  0E00               	movlw	0
  9899  003D06                     u6840:
  9900  003D06  6F80               	movwf	?_islower& (0+255),b
  9901  003D08  6B81               	clrf	(?_islower+1)& (0+255),b
  9902                           
  9903                           ; BSR set to: 0
  9904  003D0A  0012               	return		;funcret
  9905  003D0C                     __end_of_islower:
  9906                           	opt callstack 0
  9907                           
  9908 ;; *************** function _isupper *****************
  9909 ;; Defined at:
  9910 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  9911 ;; Parameters:    Size  Location     Type
  9912 ;;  c               2    0[BANK0 ] int 
  9913 ;; Auto vars:     Size  Location     Type
  9914 ;;		None
  9915 ;; Return value:  Size  Location     Type
  9916 ;;                  2    0[BANK0 ] int 
  9917 ;; Registers used:
  9918 ;;		wreg, status,2, status,0
  9919 ;; Tracked objects:
  9920 ;;		On entry : 0/0
  9921 ;;		On exit  : 0/0
  9922 ;;		Unchanged: 0/0
  9923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9924 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9926 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9927 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9928 ;;Total ram usage:        6 bytes
  9929 ;; Hardware stack levels used:    1
  9930 ;; Hardware stack levels required when called:    3
  9931 ;; This function calls:
  9932 ;;		Nothing
  9933 ;; This function is called by:
  9934 ;;		_xtoa
  9935 ;; This function uses a non-reentrant model
  9936 ;;
  9937                           
  9938                           	psect	text26
  9939  003D0C                     __ptext26:
  9940                           	opt callstack 0
  9941  003D0C                     _isupper:
  9942                           	opt callstack 22
  9943                           
  9944                           ; BSR set to: 0
  9945                           ;incstack = 0
  9946  003D0C  0EBF               	movlw	191
  9947  003D0E  0100               	movlb	0	; () banked
  9948  003D10  6F82               	movwf	??_isupper& (0+255),b
  9949  003D12  0EFF               	movlw	255
  9950  003D14  6F83               	movwf	(??_isupper+1)& (0+255),b
  9951  003D16  C080  F084         	movff	isupper@c,??_isupper+2
  9952  003D1A  C081  F085         	movff	isupper@c+1,??_isupper+3
  9953  003D1E  5182               	movf	??_isupper& (0+255),w,b
  9954  003D20  2784               	addwf	(??_isupper+2)& (0+255),f,b
  9955  003D22  5183               	movf	(??_isupper+1)& (0+255),w,b
  9956  003D24  2385               	addwfc	(??_isupper+3)& (0+255),f,b
  9957  003D26  5185               	movf	(??_isupper+3)& (0+255),w,b
  9958  003D28  E106               	bnz	u6900
  9959  003D2A  0E1A               	movlw	26
  9960  003D2C  5D84               	subwf	(??_isupper+2)& (0+255),w,b
  9961  003D2E  B0D8               	btfsc	status,0,c
  9962  003D30  D002               	goto	u6900
  9963  003D32  0E01               	movlw	1
  9964  003D34  D001               	goto	u6910
  9965  003D36                     u6900:
  9966  003D36  0E00               	movlw	0
  9967  003D38                     u6910:
  9968  003D38  6F80               	movwf	?_isupper& (0+255),b
  9969  003D3A  6B81               	clrf	(?_isupper+1)& (0+255),b
  9970                           
  9971                           ; BSR set to: 0
  9972  003D3C  0012               	return		;funcret
  9973  003D3E                     __end_of_isupper:
  9974                           	opt callstack 0
  9975                           
  9976 ;; *************** function _isalpha *****************
  9977 ;; Defined at:
  9978 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  9979 ;; Parameters:    Size  Location     Type
  9980 ;;  c               2    0[BANK0 ] int 
  9981 ;; Auto vars:     Size  Location     Type
  9982 ;;		None
  9983 ;; Return value:  Size  Location     Type
  9984 ;;                  2    0[BANK0 ] int 
  9985 ;; Registers used:
  9986 ;;		wreg, status,2, status,0
  9987 ;; Tracked objects:
  9988 ;;		On entry : 0/0
  9989 ;;		On exit  : 0/0
  9990 ;;		Unchanged: 0/0
  9991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9992 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9994 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9995 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9996 ;;Total ram usage:        6 bytes
  9997 ;; Hardware stack levels used:    1
  9998 ;; Hardware stack levels required when called:    3
  9999 ;; This function calls:
 10000 ;;		Nothing
 10001 ;; This function is called by:
 10002 ;;		_xtoa
 10003 ;; This function uses a non-reentrant model
 10004 ;;
 10005                           
 10006                           	psect	text27
 10007  003C3E                     __ptext27:
 10008                           	opt callstack 0
 10009  003C3E                     _isalpha:
 10010                           	opt callstack 22
 10011                           
 10012                           ; BSR set to: 0
 10013                           ;incstack = 0
 10014  003C3E  0E9F               	movlw	159
 10015  003C40  0100               	movlb	0	; () banked
 10016  003C42  6F82               	movwf	??_isalpha& (0+255),b
 10017  003C44  0EFF               	movlw	255
 10018  003C46  6F83               	movwf	(??_isalpha+1)& (0+255),b
 10019  003C48  0E20               	movlw	32
 10020  003C4A  1180               	iorwf	isalpha@c& (0+255),w,b
 10021  003C4C  6F84               	movwf	(??_isalpha+2)& (0+255),b
 10022  003C4E  0E00               	movlw	0
 10023  003C50  1181               	iorwf	(isalpha@c+1)& (0+255),w,b
 10024  003C52  6F85               	movwf	(??_isalpha+3)& (0+255),b
 10025  003C54  5182               	movf	??_isalpha& (0+255),w,b
 10026  003C56  2784               	addwf	(??_isalpha+2)& (0+255),f,b
 10027  003C58  5183               	movf	(??_isalpha+1)& (0+255),w,b
 10028  003C5A  2385               	addwfc	(??_isalpha+3)& (0+255),f,b
 10029  003C5C  5185               	movf	(??_isalpha+3)& (0+255),w,b
 10030  003C5E  E106               	bnz	u6920
 10031  003C60  0E1A               	movlw	26
 10032  003C62  5D84               	subwf	(??_isalpha+2)& (0+255),w,b
 10033  003C64  B0D8               	btfsc	status,0,c
 10034  003C66  D002               	goto	u6920
 10035  003C68  0E01               	movlw	1
 10036  003C6A  D001               	goto	u6930
 10037  003C6C                     u6920:
 10038  003C6C  0E00               	movlw	0
 10039  003C6E                     u6930:
 10040  003C6E  6F80               	movwf	?_isalpha& (0+255),b
 10041  003C70  6B81               	clrf	(?_isalpha+1)& (0+255),b
 10042                           
 10043                           ; BSR set to: 0
 10044  003C72  0012               	return		;funcret
 10045  003C74                     __end_of_isalpha:
 10046                           	opt callstack 0
 10047                           
 10048 ;; *************** function _dtoa *****************
 10049 ;; Defined at:
 10050 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 10051 ;; Parameters:    Size  Location     Type
 10052 ;;  fp              2   31[BANK0 ] PTR struct _IO_FILE
 10053 ;;		 -> NULL(0), 
 10054 ;;  d               8   33[BANK0 ] long long 
 10055 ;; Auto vars:     Size  Location     Type
 10056 ;;  n               8   57[BANK0 ] long long 
 10057 ;;  i               2   65[BANK0 ] int 
 10058 ;;  s               2   55[BANK0 ] int 
 10059 ;;  w               2   53[BANK0 ] int 
 10060 ;;  p               2   51[BANK0 ] int 
 10061 ;; Return value:  Size  Location     Type
 10062 ;;                  2   31[BANK0 ] int 
 10063 ;; Registers used:
 10064 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10065 ;; Tracked objects:
 10066 ;;		On entry : 0/0
 10067 ;;		On exit  : 0/0
 10068 ;;		Unchanged: 0/0
 10069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10070 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10071 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10072 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10073 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10074 ;;Total ram usage:       36 bytes
 10075 ;; Hardware stack levels used:    1
 10076 ;; Hardware stack levels required when called:   10
 10077 ;; This function calls:
 10078 ;;		___aodiv
 10079 ;;		___aomod
 10080 ;;		_abs
 10081 ;;		_pad
 10082 ;; This function is called by:
 10083 ;;		_vfpfcnvrt
 10084 ;; This function uses a non-reentrant model
 10085 ;;
 10086                           
 10087                           	psect	text28
 10088  001CF6                     __ptext28:
 10089                           	opt callstack 0
 10090  001CF6                     _dtoa:
 10091                           	opt callstack 16
 10092                           
 10093                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
 10094                           
 10095                           ; BSR set to: 0
 10096                           ;incstack = 0
 10097  001CF6  C0A1  F0B9         	movff	dtoa@d,dtoa@n
 10098  001CFA  C0A2  F0BA         	movff	dtoa@d+1,dtoa@n+1
 10099  001CFE  C0A3  F0BB         	movff	dtoa@d+2,dtoa@n+2
 10100  001D02  C0A4  F0BC         	movff	dtoa@d+3,dtoa@n+3
 10101  001D06  C0A5  F0BD         	movff	dtoa@d+4,dtoa@n+4
 10102  001D0A  C0A6  F0BE         	movff	dtoa@d+5,dtoa@n+5
 10103  001D0E  C0A7  F0BF         	movff	dtoa@d+6,dtoa@n+6
 10104  001D12  C0A8  F0C0         	movff	dtoa@d+7,dtoa@n+7
 10105                           
 10106                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 10107  001D16  0100               	movlb	0	; () banked
 10108  001D18  AFC0               	btfss	(dtoa@n+7)& (0+255),7,b
 10109  001D1A  D002               	goto	u7140
 10110  001D1C  0E01               	movlw	1
 10111  001D1E  D001               	goto	u7150
 10112  001D20                     u7140:
 10113  001D20  0E00               	movlw	0
 10114  001D22                     u7150:
 10115  001D22  6FB7               	movwf	dtoa@s& (0+255),b
 10116  001D24  6BB8               	clrf	(dtoa@s+1)& (0+255),b
 10117                           
 10118                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 10119  001D26  51B7               	movf	dtoa@s& (0+255),w,b
 10120  001D28  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
 10121  001D2A  B4D8               	btfsc	status,2,c
 10122  001D2C  D010               	goto	l6767
 10123                           
 10124                           ; BSR set to: 0
 10125                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 10126  001D2E  1FC0               	comf	(dtoa@n+7)& (0+255),f,b
 10127  001D30  1FBF               	comf	(dtoa@n+6)& (0+255),f,b
 10128  001D32  1FBE               	comf	(dtoa@n+5)& (0+255),f,b
 10129  001D34  1FBD               	comf	(dtoa@n+4)& (0+255),f,b
 10130  001D36  1FBC               	comf	(dtoa@n+3)& (0+255),f,b
 10131  001D38  1FBB               	comf	(dtoa@n+2)& (0+255),f,b
 10132  001D3A  1FBA               	comf	(dtoa@n+1)& (0+255),f,b
 10133  001D3C  6DB9               	negf	dtoa@n& (0+255),b
 10134  001D3E  0E00               	movlw	0
 10135  001D40  23BA               	addwfc	(dtoa@n+1)& (0+255),f,b
 10136  001D42  23BB               	addwfc	(dtoa@n+2)& (0+255),f,b
 10137  001D44  23BC               	addwfc	(dtoa@n+3)& (0+255),f,b
 10138  001D46  23BD               	addwfc	(dtoa@n+4)& (0+255),f,b
 10139  001D48  23BE               	addwfc	(dtoa@n+5)& (0+255),f,b
 10140  001D4A  23BF               	addwfc	(dtoa@n+6)& (0+255),f,b
 10141  001D4C  23C0               	addwfc	(dtoa@n+7)& (0+255),f,b
 10142  001D4E                     l6767:
 10143                           
 10144                           ; BSR set to: 0
 10145                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 10146  001D4E  AE4D               	btfss	_prec+1,7,c
 10147                           
 10148                           ; BSR set to: 0
 10149                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 10150  001D50  924E               	bcf	_flags,1,c
 10151                           
 10152                           ; BSR set to: 0
 10153                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 10154  001D52  BE4D               	btfsc	_prec+1,7,c
 10155  001D54  D005               	goto	u7180
 10156  001D56  504D               	movf	_prec+1,w,c
 10157  001D58  E108               	bnz	l640
 10158  001D5A  044C               	decf	_prec,w,c
 10159  001D5C  B0D8               	btfsc	status,0,c
 10160  001D5E  D005               	goto	l640
 10161  001D60                     u7180:
 10162                           
 10163                           ; BSR set to: 0
 10164  001D60  0E00               	movlw	0
 10165  001D62  6FB4               	movwf	(dtoa@p+1)& (0+255),b
 10166  001D64  0E01               	movlw	1
 10167  001D66  6FB3               	movwf	dtoa@p& (0+255),b
 10168  001D68  D004               	goto	l642
 10169  001D6A                     l640:
 10170                           
 10171                           ; BSR set to: 0
 10172  001D6A  C04C  F0B3         	movff	_prec,dtoa@p
 10173  001D6E  C04D  F0B4         	movff	_prec+1,dtoa@p+1
 10174  001D72                     l642:
 10175                           
 10176                           ; BSR set to: 0
 10177                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 10178  001D72  C04A  F0B5         	movff	_width,dtoa@w
 10179  001D76  C04B  F0B6         	movff	_width+1,dtoa@w+1
 10180                           
 10181                           ; BSR set to: 0
 10182                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 10183  001D7A  51B7               	movf	dtoa@s& (0+255),w,b
 10184  001D7C  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
 10185  001D7E  A4D8               	btfss	status,2,c
 10186  001D80  D002               	goto	u7200
 10187                           
 10188                           ; BSR set to: 0
 10189  001D82  A44E               	btfss	_flags,2,c
 10190  001D84  D003               	goto	l6781
 10191  001D86                     u7200:
 10192                           
 10193                           ; BSR set to: 0
 10194                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 10195  001D86  07B5               	decf	dtoa@w& (0+255),f,b
 10196  001D88  A0D8               	btfss	status,0,c
 10197  001D8A  07B6               	decf	(dtoa@w+1)& (0+255),f,b
 10198  001D8C                     l6781:
 10199                           
 10200                           ; BSR set to: 0
 10201                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 10202  001D8C  0E00               	movlw	0
 10203  001D8E  6FC2               	movwf	(dtoa@i+1)& (0+255),b
 10204  001D90  0E1F               	movlw	31
 10205  001D92  6FC1               	movwf	dtoa@i& (0+255),b
 10206                           
 10207                           ; BSR set to: 0
 10208                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 10209  001D94  0E00               	movlw	0
 10210  001D96  0102               	movlb	2	; () banked
 10211  001D98  6F9F               	movwf	(_dbuf+31)& (0+255),b
 10212                           
 10213                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10214  001D9A  D07D               	goto	l6795
 10215  001D9C                     l6785:
 10216                           
 10217                           ; BSR set to: 0
 10218                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 10219  001D9C  07C1               	decf	dtoa@i& (0+255),f,b
 10220  001D9E  A0D8               	btfss	status,0,c
 10221  001DA0  07C2               	decf	(dtoa@i+1)& (0+255),f,b
 10222                           
 10223                           ; BSR set to: 0
 10224                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 10225  001DA2  0E80               	movlw	low _dbuf
 10226  001DA4  25C1               	addwf	dtoa@i& (0+255),w,b
 10227  001DA6  6ED9               	movwf	fsr2l,c
 10228  001DA8  0E02               	movlw	high _dbuf
 10229  001DAA  21C2               	addwfc	(dtoa@i+1)& (0+255),w,b
 10230  001DAC  6EDA               	movwf	fsr2h,c
 10231  001DAE  C0B9  F080         	movff	dtoa@n,___aomod@dividend
 10232  001DB2  C0BA  F081         	movff	dtoa@n+1,___aomod@dividend+1
 10233  001DB6  C0BB  F082         	movff	dtoa@n+2,___aomod@dividend+2
 10234  001DBA  C0BC  F083         	movff	dtoa@n+3,___aomod@dividend+3
 10235  001DBE  C0BD  F084         	movff	dtoa@n+4,___aomod@dividend+4
 10236  001DC2  C0BE  F085         	movff	dtoa@n+5,___aomod@dividend+5
 10237  001DC6  C0BF  F086         	movff	dtoa@n+6,___aomod@dividend+6
 10238  001DCA  C0C0  F087         	movff	dtoa@n+7,___aomod@dividend+7
 10239  001DCE  0E0A               	movlw	10
 10240  001DD0  6F88               	movwf	___aomod@divisor& (0+255),b
 10241  001DD2  0E00               	movlw	0
 10242  001DD4  6F89               	movwf	(___aomod@divisor+1)& (0+255),b
 10243  001DD6  0E00               	movlw	0
 10244  001DD8  6F8A               	movwf	(___aomod@divisor+2)& (0+255),b
 10245  001DDA  0E00               	movlw	0
 10246  001DDC  6F8B               	movwf	(___aomod@divisor+3)& (0+255),b
 10247  001DDE  0E00               	movlw	0
 10248  001DE0  6F8C               	movwf	(___aomod@divisor+4)& (0+255),b
 10249  001DE2  0E00               	movlw	0
 10250  001DE4  6F8D               	movwf	(___aomod@divisor+5)& (0+255),b
 10251  001DE6  0E00               	movlw	0
 10252  001DE8  6F8E               	movwf	(___aomod@divisor+6)& (0+255),b
 10253  001DEA  0E00               	movlw	0
 10254  001DEC  6F8F               	movwf	(___aomod@divisor+7)& (0+255),b
 10255  001DEE  ECCB  F016         	call	___aomod	;wreg free
 10256  001DF2  C080  F0A9         	movff	?___aomod,??_dtoa
 10257  001DF6  C081  F0AA         	movff	?___aomod+1,??_dtoa+1
 10258  001DFA  C082  F0AB         	movff	?___aomod+2,??_dtoa+2
 10259  001DFE  C083  F0AC         	movff	?___aomod+3,??_dtoa+3
 10260  001E02  C084  F0AD         	movff	?___aomod+4,??_dtoa+4
 10261  001E06  C085  F0AE         	movff	?___aomod+5,??_dtoa+5
 10262  001E0A  C086  F0AF         	movff	?___aomod+6,??_dtoa+6
 10263  001E0E  C087  F0B0         	movff	?___aomod+7,??_dtoa+7
 10264  001E12  C0A9  F092         	movff	??_dtoa,abs@a
 10265  001E16  C0AB  F093         	movff	??_dtoa+2,abs@a+1
 10266  001E1A  EC3A  F01E         	call	_abs	;wreg free
 10267  001E1E  0100               	movlb	0	; () banked
 10268  001E20  5192               	movf	?_abs& (0+255),w,b
 10269  001E22  0F30               	addlw	48
 10270  001E24  6EDF               	movwf	indf2,c
 10271                           
 10272                           ; BSR set to: 0
 10273                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 10274  001E26  07B3               	decf	dtoa@p& (0+255),f,b
 10275  001E28  A0D8               	btfss	status,0,c
 10276  001E2A  07B4               	decf	(dtoa@p+1)& (0+255),f,b
 10277                           
 10278                           ; BSR set to: 0
 10279                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 10280  001E2C  07B5               	decf	dtoa@w& (0+255),f,b
 10281  001E2E  A0D8               	btfss	status,0,c
 10282  001E30  07B6               	decf	(dtoa@w+1)& (0+255),f,b
 10283                           
 10284                           ; BSR set to: 0
 10285                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 10286  001E32  C0B9  F080         	movff	dtoa@n,___aodiv@dividend
 10287  001E36  C0BA  F081         	movff	dtoa@n+1,___aodiv@dividend+1
 10288  001E3A  C0BB  F082         	movff	dtoa@n+2,___aodiv@dividend+2
 10289  001E3E  C0BC  F083         	movff	dtoa@n+3,___aodiv@dividend+3
 10290  001E42  C0BD  F084         	movff	dtoa@n+4,___aodiv@dividend+4
 10291  001E46  C0BE  F085         	movff	dtoa@n+5,___aodiv@dividend+5
 10292  001E4A  C0BF  F086         	movff	dtoa@n+6,___aodiv@dividend+6
 10293  001E4E  C0C0  F087         	movff	dtoa@n+7,___aodiv@dividend+7
 10294  001E52  0E0A               	movlw	10
 10295  001E54  6F88               	movwf	___aodiv@divisor& (0+255),b
 10296  001E56  0E00               	movlw	0
 10297  001E58  6F89               	movwf	(___aodiv@divisor+1)& (0+255),b
 10298  001E5A  0E00               	movlw	0
 10299  001E5C  6F8A               	movwf	(___aodiv@divisor+2)& (0+255),b
 10300  001E5E  0E00               	movlw	0
 10301  001E60  6F8B               	movwf	(___aodiv@divisor+3)& (0+255),b
 10302  001E62  0E00               	movlw	0
 10303  001E64  6F8C               	movwf	(___aodiv@divisor+4)& (0+255),b
 10304  001E66  0E00               	movlw	0
 10305  001E68  6F8D               	movwf	(___aodiv@divisor+5)& (0+255),b
 10306  001E6A  0E00               	movlw	0
 10307  001E6C  6F8E               	movwf	(___aodiv@divisor+6)& (0+255),b
 10308  001E6E  0E00               	movlw	0
 10309  001E70  6F8F               	movwf	(___aodiv@divisor+7)& (0+255),b
 10310  001E72  ECE4  F014         	call	___aodiv	;wreg free
 10311  001E76  C080  F0B9         	movff	?___aodiv,dtoa@n
 10312  001E7A  C081  F0BA         	movff	?___aodiv+1,dtoa@n+1
 10313  001E7E  C082  F0BB         	movff	?___aodiv+2,dtoa@n+2
 10314  001E82  C083  F0BC         	movff	?___aodiv+3,dtoa@n+3
 10315  001E86  C084  F0BD         	movff	?___aodiv+4,dtoa@n+4
 10316  001E8A  C085  F0BE         	movff	?___aodiv+5,dtoa@n+5
 10317  001E8E  C086  F0BF         	movff	?___aodiv+6,dtoa@n+6
 10318  001E92  C087  F0C0         	movff	?___aodiv+7,dtoa@n+7
 10319  001E96                     l6795:
 10320                           
 10321                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10322  001E96  0100               	movlb	0	; () banked
 10323  001E98  BFC2               	btfsc	(dtoa@i+1)& (0+255),7,b
 10324  001E9A  D01F               	goto	u7250
 10325  001E9C  51C2               	movf	(dtoa@i+1)& (0+255),w,b
 10326  001E9E  E103               	bnz	u7210
 10327  001EA0  05C1               	decf	dtoa@i& (0+255),w,b
 10328  001EA2  A0D8               	btfss	status,0,c
 10329  001EA4  D01A               	goto	u7250
 10330  001EA6                     u7210:
 10331                           
 10332                           ; BSR set to: 0
 10333  001EA6  51B9               	movf	dtoa@n& (0+255),w,b
 10334  001EA8  11BA               	iorwf	(dtoa@n+1)& (0+255),w,b
 10335  001EAA  11BB               	iorwf	(dtoa@n+2)& (0+255),w,b
 10336  001EAC  11BC               	iorwf	(dtoa@n+3)& (0+255),w,b
 10337  001EAE  11BD               	iorwf	(dtoa@n+4)& (0+255),w,b
 10338  001EB0  11BE               	iorwf	(dtoa@n+5)& (0+255),w,b
 10339  001EB2  11BF               	iorwf	(dtoa@n+6)& (0+255),w,b
 10340  001EB4  11C0               	iorwf	(dtoa@n+7)& (0+255),w,b
 10341  001EB6  A4D8               	btfss	status,2,c
 10342  001EB8  D771               	goto	l6785
 10343                           
 10344                           ; BSR set to: 0
 10345  001EBA  BFB4               	btfsc	(dtoa@p+1)& (0+255),7,b
 10346  001EBC  D005               	goto	u7230
 10347  001EBE  51B4               	movf	(dtoa@p+1)& (0+255),w,b
 10348  001EC0  E102               	bnz	u7231
 10349  001EC2  05B3               	decf	dtoa@p& (0+255),w,b
 10350  001EC4  B0D8               	btfsc	status,0,c
 10351  001EC6                     u7231:
 10352  001EC6  D76A               	goto	l6785
 10353  001EC8                     u7230:
 10354                           
 10355                           ; BSR set to: 0
 10356  001EC8  BFB6               	btfsc	(dtoa@w+1)& (0+255),7,b
 10357  001ECA  D007               	goto	u7250
 10358  001ECC  51B6               	movf	(dtoa@w+1)& (0+255),w,b
 10359  001ECE  E103               	bnz	u7240
 10360  001ED0  05B5               	decf	dtoa@w& (0+255),w,b
 10361  001ED2  A0D8               	btfss	status,0,c
 10362  001ED4  D002               	goto	u7250
 10363  001ED6                     u7240:
 10364                           
 10365                           ; BSR set to: 0
 10366  001ED6  B24E               	btfsc	_flags,1,c
 10367  001ED8  D761               	goto	l6785
 10368  001EDA                     u7250:
 10369                           
 10370                           ; BSR set to: 0
 10371                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 10372  001EDA  51B7               	movf	dtoa@s& (0+255),w,b
 10373  001EDC  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
 10374  001EDE  A4D8               	btfss	status,2,c
 10375  001EE0  D002               	goto	u7270
 10376                           
 10377                           ; BSR set to: 0
 10378  001EE2  A44E               	btfss	_flags,2,c
 10379  001EE4  D017               	goto	l6819
 10380  001EE6                     u7270:
 10381                           
 10382                           ; BSR set to: 0
 10383                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 10384  001EE6  07C1               	decf	dtoa@i& (0+255),f,b
 10385  001EE8  A0D8               	btfss	status,0,c
 10386  001EEA  07C2               	decf	(dtoa@i+1)& (0+255),f,b
 10387                           
 10388                           ; BSR set to: 0
 10389                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 10390  001EEC  51B7               	movf	dtoa@s& (0+255),w,b
 10391  001EEE  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
 10392  001EF0  A4D8               	btfss	status,2,c
 10393  001EF2  D004               	goto	l6815
 10394                           
 10395                           ; BSR set to: 0
 10396  001EF4  0E00               	movlw	0
 10397  001EF6  6FB2               	movwf	(_dtoa$1226+1)& (0+255),b
 10398  001EF8  0E2B               	movlw	43
 10399  001EFA  D003               	goto	L5
 10400  001EFC                     l6815:
 10401                           
 10402                           ; BSR set to: 0
 10403  001EFC  0E00               	movlw	0
 10404  001EFE  6FB2               	movwf	(_dtoa$1226+1)& (0+255),b
 10405  001F00  0E2D               	movlw	45
 10406  001F02                     L5:
 10407  001F02  6FB1               	movwf	_dtoa$1226& (0+255),b
 10408                           
 10409                           ; BSR set to: 0
 10410  001F04  0E80               	movlw	low _dbuf
 10411  001F06  25C1               	addwf	dtoa@i& (0+255),w,b
 10412  001F08  6ED9               	movwf	fsr2l,c
 10413  001F0A  0E02               	movlw	high _dbuf
 10414  001F0C  21C2               	addwfc	(dtoa@i+1)& (0+255),w,b
 10415  001F0E  6EDA               	movwf	fsr2h,c
 10416  001F10  C0B1  FFDF         	movff	_dtoa$1226,indf2
 10417  001F14                     l6819:
 10418                           
 10419                           ; BSR set to: 0
 10420                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 10421  001F14  C09F  F094         	movff	dtoa@fp,pad@fp
 10422  001F18  C0A0  F095         	movff	dtoa@fp+1,pad@fp+1
 10423  001F1C  0E80               	movlw	low _dbuf
 10424  001F1E  25C1               	addwf	dtoa@i& (0+255),w,b
 10425  001F20  6F96               	movwf	pad@buf& (0+255),b
 10426  001F22  0E02               	movlw	high _dbuf
 10427  001F24  21C2               	addwfc	(dtoa@i+1)& (0+255),w,b
 10428  001F26  6F97               	movwf	(pad@buf+1)& (0+255),b
 10429  001F28  C0B5  F098         	movff	dtoa@w,pad@p
 10430  001F2C  C0B6  F099         	movff	dtoa@w+1,pad@p+1
 10431  001F30  EC35  F01B         	call	_pad	;wreg free
 10432  001F34  C094  F09F         	movff	?_pad,?_dtoa
 10433  001F38  C095  F0A0         	movff	?_pad+1,?_dtoa+1
 10434  001F3C  0012               	return		;funcret
 10435  001F3E                     __end_of_dtoa:
 10436                           	opt callstack 0
 10437                           
 10438 ;; *************** function _pad *****************
 10439 ;; Defined at:
 10440 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 10441 ;; Parameters:    Size  Location     Type
 10442 ;;  fp              2   20[BANK0 ] PTR struct _IO_FILE
 10443 ;;		 -> NULL(0), 
 10444 ;;  buf             2   22[BANK0 ] PTR unsigned char 
 10445 ;;		 -> dbuf(32), 
 10446 ;;  p               2   24[BANK0 ] int 
 10447 ;; Auto vars:     Size  Location     Type
 10448 ;;  w               2   29[BANK0 ] int 
 10449 ;;  i               2   27[BANK0 ] int 
 10450 ;; Return value:  Size  Location     Type
 10451 ;;                  2   20[BANK0 ] int 
 10452 ;; Registers used:
 10453 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10454 ;; Tracked objects:
 10455 ;;		On entry : 0/0
 10456 ;;		On exit  : 0/0
 10457 ;;		Unchanged: 0/0
 10458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10459 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10460 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10461 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10462 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10463 ;;Total ram usage:       11 bytes
 10464 ;; Hardware stack levels used:    1
 10465 ;; Hardware stack levels required when called:    9
 10466 ;; This function calls:
 10467 ;;		_fputc
 10468 ;;		_fputs
 10469 ;;		_strlen
 10470 ;; This function is called by:
 10471 ;;		_dtoa
 10472 ;;		_xtoa
 10473 ;; This function uses a non-reentrant model
 10474 ;;
 10475                           
 10476                           	psect	text29
 10477  00366A                     __ptext29:
 10478                           	opt callstack 0
 10479  00366A                     _pad:
 10480                           	opt callstack 16
 10481                           
 10482                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 10483                           
 10484                           ;incstack = 0
 10485  00366A  A04E               	btfss	_flags,0,c
 10486  00366C  D00A               	goto	l6623
 10487                           
 10488                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 10489  00366E  C096  F08D         	movff	pad@buf,fputs@s
 10490  003672  C097  F08E         	movff	pad@buf+1,fputs@s+1
 10491  003676  C094  F08F         	movff	pad@fp,fputs@fp
 10492  00367A  C095  F090         	movff	pad@fp+1,fputs@fp+1
 10493  00367E  EC01  F01E         	call	_fputs	;wreg free
 10494  003682                     l6623:
 10495                           
 10496                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 10497  003682  0100               	movlb	0	; () banked
 10498  003684  BF99               	btfsc	(pad@p+1)& (0+255),7,b
 10499  003686  D005               	goto	l6627
 10500                           
 10501                           ; BSR set to: 0
 10502  003688  C098  F09D         	movff	pad@p,pad@w
 10503  00368C  C099  F09E         	movff	pad@p+1,pad@w+1
 10504  003690  D004               	goto	l629
 10505  003692                     l6627:
 10506                           
 10507                           ; BSR set to: 0
 10508  003692  0E00               	movlw	0
 10509  003694  6F9E               	movwf	(pad@w+1)& (0+255),b
 10510  003696  0E00               	movlw	0
 10511  003698  6F9D               	movwf	pad@w& (0+255),b
 10512  00369A                     l629:
 10513                           
 10514                           ; BSR set to: 0
 10515                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 10516  00369A  0E00               	movlw	0
 10517  00369C  6F9C               	movwf	(pad@i+1)& (0+255),b
 10518  00369E  0E00               	movlw	0
 10519  0036A0  6F9B               	movwf	pad@i& (0+255),b
 10520                           
 10521                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 10522  0036A2  D00D               	goto	l6633
 10523  0036A4                     l6629:
 10524                           
 10525                           ; BSR set to: 0
 10526                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 10527  0036A4  0E00               	movlw	0
 10528  0036A6  6F85               	movwf	(fputc@c+1)& (0+255),b
 10529  0036A8  0E20               	movlw	32
 10530  0036AA  6F84               	movwf	fputc@c& (0+255),b
 10531  0036AC  C094  F086         	movff	pad@fp,fputc@fp
 10532  0036B0  C095  F087         	movff	pad@fp+1,fputc@fp+1
 10533  0036B4  EC82  F01C         	call	_fputc	;wreg free
 10534                           
 10535                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 10536  0036B8  0100               	movlb	0	; () banked
 10537  0036BA  4B9B               	infsnz	pad@i& (0+255),f,b
 10538  0036BC  2B9C               	incf	(pad@i+1)& (0+255),f,b
 10539  0036BE                     l6633:
 10540                           
 10541                           ; BSR set to: 0
 10542                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 10543  0036BE  519D               	movf	pad@w& (0+255),w,b
 10544  0036C0  5D9B               	subwf	pad@i& (0+255),w,b
 10545  0036C2  519C               	movf	(pad@i+1)& (0+255),w,b
 10546  0036C4  0A80               	xorlw	128
 10547  0036C6  6F9A               	movwf	??_pad& (0+255),b
 10548  0036C8  519E               	movf	(pad@w+1)& (0+255),w,b
 10549  0036CA  0A80               	xorlw	128
 10550  0036CC  599A               	subwfb	??_pad& (0+255),w,b
 10551  0036CE  A0D8               	btfss	status,0,c
 10552  0036D0  D7E9               	goto	l6629
 10553                           
 10554                           ; BSR set to: 0
 10555                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 10556  0036D2  B04E               	btfsc	_flags,0,c
 10557  0036D4  D00A               	goto	l6637
 10558                           
 10559                           ; BSR set to: 0
 10560                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 10561  0036D6  C096  F08D         	movff	pad@buf,fputs@s
 10562  0036DA  C097  F08E         	movff	pad@buf+1,fputs@s+1
 10563  0036DE  C094  F08F         	movff	pad@fp,fputs@fp
 10564  0036E2  C095  F090         	movff	pad@fp+1,fputs@fp+1
 10565  0036E6  EC01  F01E         	call	_fputs	;wreg free
 10566  0036EA                     l6637:
 10567                           
 10568                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 10569  0036EA  C096  F080         	movff	pad@buf,strlen@s
 10570  0036EE  C097  F081         	movff	pad@buf+1,strlen@s+1
 10571  0036F2  ECB8  F01E         	call	_strlen	;wreg free
 10572  0036F6  0100               	movlb	0	; () banked
 10573  0036F8  519D               	movf	pad@w& (0+255),w,b
 10574  0036FA  2580               	addwf	?_strlen& (0+255),w,b
 10575  0036FC  6F94               	movwf	?_pad& (0+255),b
 10576  0036FE  519E               	movf	(pad@w+1)& (0+255),w,b
 10577  003700  2181               	addwfc	(?_strlen+1)& (0+255),w,b
 10578  003702  6F95               	movwf	(?_pad+1)& (0+255),b
 10579                           
 10580                           ; BSR set to: 0
 10581  003704  0012               	return		;funcret
 10582  003706                     __end_of_pad:
 10583                           	opt callstack 0
 10584                           
 10585 ;; *************** function _strlen *****************
 10586 ;; Defined at:
 10587 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
 10588 ;; Parameters:    Size  Location     Type
 10589 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 10590 ;;		 -> dbuf(32), 
 10591 ;; Auto vars:     Size  Location     Type
 10592 ;;  a               2    2[BANK0 ] PTR const unsigned char 
 10593 ;;		 -> dbuf(32), 
 10594 ;; Return value:  Size  Location     Type
 10595 ;;                  2    0[BANK0 ] unsigned int 
 10596 ;; Registers used:
 10597 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10598 ;; Tracked objects:
 10599 ;;		On entry : 0/0
 10600 ;;		On exit  : 0/0
 10601 ;;		Unchanged: 0/0
 10602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10603 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10604 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10606 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10607 ;;Total ram usage:        4 bytes
 10608 ;; Hardware stack levels used:    1
 10609 ;; Hardware stack levels required when called:    3
 10610 ;; This function calls:
 10611 ;;		Nothing
 10612 ;; This function is called by:
 10613 ;;		_pad
 10614 ;; This function uses a non-reentrant model
 10615 ;;
 10616                           
 10617                           	psect	text30
 10618  003D70                     __ptext30:
 10619                           	opt callstack 0
 10620  003D70                     _strlen:
 10621                           	opt callstack 21
 10622                           
 10623                           ; BSR set to: 0
 10624                           ;incstack = 0
 10625  003D70  C080  F082         	movff	strlen@s,strlen@a
 10626  003D74  C081  F083         	movff	strlen@s+1,strlen@a+1
 10627  003D78  D003               	goto	l6605
 10628  003D7A                     l6603:
 10629  003D7A  0100               	movlb	0	; () banked
 10630  003D7C  4B80               	infsnz	strlen@s& (0+255),f,b
 10631  003D7E  2B81               	incf	(strlen@s+1)& (0+255),f,b
 10632  003D80                     l6605:
 10633  003D80  C080  FFD9         	movff	strlen@s,fsr2l
 10634  003D84  C081  FFDA         	movff	strlen@s+1,fsr2h
 10635  003D88  50DF               	movf	indf2,w,c
 10636  003D8A  A4D8               	btfss	status,2,c
 10637  003D8C  D7F6               	goto	l6603
 10638  003D8E  0100               	movlb	0	; () banked
 10639  003D90  5182               	movf	strlen@a& (0+255),w,b
 10640  003D92  5D80               	subwf	strlen@s& (0+255),w,b
 10641  003D94  6F80               	movwf	?_strlen& (0+255),b
 10642  003D96  5183               	movf	(strlen@a+1)& (0+255),w,b
 10643  003D98  5981               	subwfb	(strlen@s+1)& (0+255),w,b
 10644  003D9A  6F81               	movwf	(?_strlen+1)& (0+255),b
 10645                           
 10646                           ; BSR set to: 0
 10647  003D9C  0012               	return		;funcret
 10648  003D9E                     __end_of_strlen:
 10649                           	opt callstack 0
 10650                           
 10651 ;; *************** function _fputs *****************
 10652 ;; Defined at:
 10653 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
 10654 ;; Parameters:    Size  Location     Type
 10655 ;;  s               2   13[BANK0 ] PTR const unsigned char 
 10656 ;;		 -> dbuf(32), 
 10657 ;;  fp              2   15[BANK0 ] PTR struct _IO_FILE
 10658 ;;		 -> NULL(0), 
 10659 ;; Auto vars:     Size  Location     Type
 10660 ;;  i               2   18[BANK0 ] int 
 10661 ;;  c               1   17[BANK0 ] unsigned char 
 10662 ;; Return value:  Size  Location     Type
 10663 ;;                  2   13[BANK0 ] int 
 10664 ;; Registers used:
 10665 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10666 ;; Tracked objects:
 10667 ;;		On entry : 0/0
 10668 ;;		On exit  : 0/0
 10669 ;;		Unchanged: 0/0
 10670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10671 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10672 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10674 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10675 ;;Total ram usage:        7 bytes
 10676 ;; Hardware stack levels used:    1
 10677 ;; Hardware stack levels required when called:    8
 10678 ;; This function calls:
 10679 ;;		_fputc
 10680 ;; This function is called by:
 10681 ;;		_pad
 10682 ;; This function uses a non-reentrant model
 10683 ;;
 10684                           
 10685                           	psect	text31
 10686  003C02                     __ptext31:
 10687                           	opt callstack 0
 10688  003C02                     _fputs:
 10689                           	opt callstack 16
 10690                           
 10691                           ; BSR set to: 0
 10692                           ;incstack = 0
 10693  003C02  0E00               	movlw	0
 10694  003C04  0100               	movlb	0	; () banked
 10695  003C06  6F93               	movwf	(fputs@i+1)& (0+255),b
 10696  003C08  0E00               	movlw	0
 10697  003C0A  6F92               	movwf	fputs@i& (0+255),b
 10698  003C0C  D00C               	goto	l6599
 10699  003C0E                     l6595:
 10700                           
 10701                           ; BSR set to: 0
 10702  003C0E  C091  F084         	movff	fputs@c,fputc@c
 10703  003C12  6B85               	clrf	(fputc@c+1)& (0+255),b
 10704  003C14  C08F  F086         	movff	fputs@fp,fputc@fp
 10705  003C18  C090  F087         	movff	fputs@fp+1,fputc@fp+1
 10706  003C1C  EC82  F01C         	call	_fputc	;wreg free
 10707  003C20  0100               	movlb	0	; () banked
 10708  003C22  4B92               	infsnz	fputs@i& (0+255),f,b
 10709  003C24  2B93               	incf	(fputs@i+1)& (0+255),f,b
 10710  003C26                     l6599:
 10711                           
 10712                           ; BSR set to: 0
 10713  003C26  5192               	movf	fputs@i& (0+255),w,b
 10714  003C28  258D               	addwf	fputs@s& (0+255),w,b
 10715  003C2A  6ED9               	movwf	fsr2l,c
 10716  003C2C  5193               	movf	(fputs@i+1)& (0+255),w,b
 10717  003C2E  218E               	addwfc	(fputs@s+1)& (0+255),w,b
 10718  003C30  6EDA               	movwf	fsr2h,c
 10719  003C32  50DF               	movf	indf2,w,c
 10720  003C34  6F91               	movwf	fputs@c& (0+255),b
 10721  003C36  5191               	movf	fputs@c& (0+255),w,b
 10722  003C38  B4D8               	btfsc	status,2,c
 10723  003C3A  0012               	return	
 10724  003C3C  D7E8               	goto	l6595
 10725  003C3E                     __end_of_fputs:
 10726                           	opt callstack 0
 10727                           
 10728 ;; *************** function _fputc *****************
 10729 ;; Defined at:
 10730 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
 10731 ;; Parameters:    Size  Location     Type
 10732 ;;  c               2    4[BANK0 ] int 
 10733 ;;  fp              2    6[BANK0 ] PTR struct _IO_FILE
 10734 ;;		 -> NULL(0), 
 10735 ;; Auto vars:     Size  Location     Type
 10736 ;;		None
 10737 ;; Return value:  Size  Location     Type
 10738 ;;                  2    4[BANK0 ] int 
 10739 ;; Registers used:
 10740 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10741 ;; Tracked objects:
 10742 ;;		On entry : 0/0
 10743 ;;		On exit  : 0/0
 10744 ;;		Unchanged: 0/0
 10745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10746 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10748 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10749 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10750 ;;Total ram usage:        9 bytes
 10751 ;; Hardware stack levels used:    1
 10752 ;; Hardware stack levels required when called:    7
 10753 ;; This function calls:
 10754 ;;		_putch
 10755 ;; This function is called by:
 10756 ;;		_pad
 10757 ;;		_vfpfcnvrt
 10758 ;;		_fputs
 10759 ;; This function uses a non-reentrant model
 10760 ;;
 10761                           
 10762                           	psect	text32
 10763  003904                     __ptext32:
 10764                           	opt callstack 0
 10765  003904                     _fputc:
 10766                           	opt callstack 16
 10767                           
 10768                           ; BSR set to: 0
 10769                           ;incstack = 0
 10770  003904  0100               	movlb	0	; () banked
 10771  003906  5186               	movf	fputc@fp& (0+255),w,b
 10772  003908  1187               	iorwf	(fputc@fp+1)& (0+255),w,b
 10773  00390A  B4D8               	btfsc	status,2,c
 10774  00390C  D004               	goto	u6780
 10775                           
 10776                           ; BSR set to: 0
 10777  00390E  5186               	movf	fputc@fp& (0+255),w,b
 10778  003910  1187               	iorwf	(fputc@fp+1)& (0+255),w,b
 10779  003912  A4D8               	btfss	status,2,c
 10780  003914  D004               	goto	l6585
 10781  003916                     u6780:
 10782                           
 10783                           ; BSR set to: 0
 10784  003916  5184               	movf	fputc@c& (0+255),w,b
 10785  003918  EC59  F01F         	call	_putch
 10786  00391C  0012               	return	
 10787  00391E                     l6585:
 10788                           
 10789                           ; BSR set to: 0
 10790  00391E  EE20 F004          	lfsr	2,4
 10791  003922  5186               	movf	fputc@fp& (0+255),w,b
 10792  003924  26D9               	addwf	fsr2l,f,c
 10793  003926  5187               	movf	(fputc@fp+1)& (0+255),w,b
 10794  003928  22DA               	addwfc	fsr2h,f,c
 10795  00392A  50DE               	movf	postinc2,w,c
 10796  00392C  10DE               	iorwf	postinc2,w,c
 10797  00392E  B4D8               	btfsc	status,2,c
 10798  003930  D016               	goto	u6800
 10799                           
 10800                           ; BSR set to: 0
 10801  003932  EE20 F004          	lfsr	2,4
 10802  003936  5186               	movf	fputc@fp& (0+255),w,b
 10803  003938  26D9               	addwf	fsr2l,f,c
 10804  00393A  5187               	movf	(fputc@fp+1)& (0+255),w,b
 10805  00393C  22DA               	addwfc	fsr2h,f,c
 10806  00393E  EE10 F002          	lfsr	1,2
 10807  003942  5186               	movf	fputc@fp& (0+255),w,b
 10808  003944  26E1               	addwf	fsr1l,f,c
 10809  003946  5187               	movf	(fputc@fp+1)& (0+255),w,b
 10810  003948  22E2               	addwfc	fsr1h,f,c
 10811  00394A  50DE               	movf	postinc2,w,c
 10812  00394C  5CE6               	subwf	postinc1,w,c
 10813  00394E  50E6               	movf	postinc1,w,c
 10814  003950  0A80               	xorlw	128
 10815  003952  6F8C               	movwf	(??_fputc+4)& (0+255),b
 10816  003954  50DE               	movf	postinc2,w,c
 10817  003956  0A80               	xorlw	128
 10818  003958  598C               	subwfb	(??_fputc+4)& (0+255),w,b
 10819  00395A  B0D8               	btfsc	status,0,c
 10820  00395C  0012               	return	
 10821  00395E                     u6800:
 10822                           
 10823                           ; BSR set to: 0
 10824  00395E  EE20 F002          	lfsr	2,2
 10825  003962  5186               	movf	fputc@fp& (0+255),w,b
 10826  003964  26D9               	addwf	fsr2l,f,c
 10827  003966  5187               	movf	(fputc@fp+1)& (0+255),w,b
 10828  003968  22DA               	addwfc	fsr2h,f,c
 10829  00396A  2ADE               	incf	postinc2,f,c
 10830  00396C  0E00               	movlw	0
 10831  00396E  22DD               	addwfc	postdec2,f,c
 10832  003970  0012               	return		;funcret
 10833  003972                     __end_of_fputc:
 10834                           	opt callstack 0
 10835                           
 10836 ;; *************** function _putch *****************
 10837 ;; Defined at:
 10838 ;;		line 102 in file "lcd.c"
 10839 ;; Parameters:    Size  Location     Type
 10840 ;;  data            1    wreg     unsigned char 
 10841 ;; Auto vars:     Size  Location     Type
 10842 ;;  data            1    3[BANK0 ] unsigned char 
 10843 ;; Return value:  Size  Location     Type
 10844 ;;                  1    wreg      void 
 10845 ;; Registers used:
 10846 ;;		wreg, status,2, status,0, cstack
 10847 ;; Tracked objects:
 10848 ;;		On entry : 0/0
 10849 ;;		On exit  : 0/0
 10850 ;;		Unchanged: 0/0
 10851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10853 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10855 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10856 ;;Total ram usage:        1 bytes
 10857 ;; Hardware stack levels used:    1
 10858 ;; Hardware stack levels required when called:    6
 10859 ;; This function calls:
 10860 ;;		_send_byte
 10861 ;; This function is called by:
 10862 ;;		_fputc
 10863 ;; This function uses a non-reentrant model
 10864 ;;
 10865                           
 10866                           	psect	text33
 10867  003EB2                     __ptext33:
 10868                           	opt callstack 0
 10869  003EB2                     _putch:
 10870                           	opt callstack 16
 10871                           
 10872                           ;incstack = 0
 10873                           ;putch@data stored from wreg
 10874  003EB2  0100               	movlb	0	; () banked
 10875  003EB4  6F83               	movwf	putch@data& (0+255),b
 10876                           
 10877                           ;lcd.c: 103:     LATDbits.LATD2 = 1;
 10878  003EB6  848C               	bsf	3980,2,c	;volatile
 10879                           
 10880                           ;lcd.c: 104:     send_byte((unsigned char)data);
 10881  003EB8  0100               	movlb	0	; () banked
 10882  003EBA  5183               	movf	putch@data& (0+255),w,b
 10883  003EBC  EC43  F01F         	call	_send_byte
 10884  003EC0  0012               	return		;funcret
 10885  003EC2                     __end_of_putch:
 10886                           	opt callstack 0
 10887                           
 10888 ;; *************** function _abs *****************
 10889 ;; Defined at:
 10890 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
 10891 ;; Parameters:    Size  Location     Type
 10892 ;;  a               2   18[BANK0 ] int 
 10893 ;; Auto vars:     Size  Location     Type
 10894 ;;		None
 10895 ;; Return value:  Size  Location     Type
 10896 ;;                  2   18[BANK0 ] int 
 10897 ;; Registers used:
 10898 ;;		wreg, status,2, status,0
 10899 ;; Tracked objects:
 10900 ;;		On entry : 0/0
 10901 ;;		On exit  : 0/0
 10902 ;;		Unchanged: 0/0
 10903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10904 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10906 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10907 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10908 ;;Total ram usage:        4 bytes
 10909 ;; Hardware stack levels used:    1
 10910 ;; Hardware stack levels required when called:    3
 10911 ;; This function calls:
 10912 ;;		Nothing
 10913 ;; This function is called by:
 10914 ;;		_ultrasonic_main
 10915 ;;		_dtoa
 10916 ;; This function uses a non-reentrant model
 10917 ;;
 10918                           
 10919                           	psect	text34
 10920  003C74                     __ptext34:
 10921                           	opt callstack 0
 10922  003C74                     _abs:
 10923                           	opt callstack 22
 10924                           
 10925                           ;incstack = 0
 10926  003C74  0100               	movlb	0	; () banked
 10927  003C76  BF93               	btfsc	(abs@a+1)& (0+255),7,b
 10928  003C78  D005               	goto	u6850
 10929  003C7A  5193               	movf	(abs@a+1)& (0+255),w,b
 10930  003C7C  E110               	bnz	l1407
 10931  003C7E  0592               	decf	abs@a& (0+255),w,b
 10932  003C80  B0D8               	btfsc	status,0,c
 10933  003C82  D00D               	goto	l1407
 10934  003C84                     u6850:
 10935                           
 10936                           ; BSR set to: 0
 10937  003C84  C092  F094         	movff	abs@a,??_abs
 10938  003C88  C093  F095         	movff	abs@a+1,??_abs+1
 10939  003C8C  1F94               	comf	??_abs& (0+255),f,b
 10940  003C8E  1F95               	comf	(??_abs+1)& (0+255),f,b
 10941  003C90  4B94               	infsnz	??_abs& (0+255),f,b
 10942  003C92  2B95               	incf	(??_abs+1)& (0+255),f,b
 10943  003C94  C094  F092         	movff	??_abs,?_abs
 10944  003C98  C095  F093         	movff	??_abs+1,?_abs+1
 10945  003C9C  0012               	return	
 10946  003C9E                     l1407:
 10947                           
 10948                           ; BSR set to: 0
 10949  003C9E  C092  F092         	movff	abs@a,?_abs
 10950  003CA2  C093  F093         	movff	abs@a+1,?_abs+1
 10951                           
 10952                           ; BSR set to: 0
 10953  003CA6  0012               	return		;funcret
 10954  003CA8                     __end_of_abs:
 10955                           	opt callstack 0
 10956                           
 10957 ;; *************** function ___aomod *****************
 10958 ;; Defined at:
 10959 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
 10960 ;; Parameters:    Size  Location     Type
 10961 ;;  dividend        8    0[BANK0 ] long long 
 10962 ;;  divisor         8    8[BANK0 ] long long 
 10963 ;; Auto vars:     Size  Location     Type
 10964 ;;  sign            1   17[BANK0 ] unsigned char 
 10965 ;;  counter         1   16[BANK0 ] unsigned char 
 10966 ;; Return value:  Size  Location     Type
 10967 ;;                  8    0[BANK0 ] long long 
 10968 ;; Registers used:
 10969 ;;		wreg, status,2, status,0
 10970 ;; Tracked objects:
 10971 ;;		On entry : 0/0
 10972 ;;		On exit  : 0/0
 10973 ;;		Unchanged: 0/0
 10974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10975 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10976 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10978 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10979 ;;Total ram usage:       18 bytes
 10980 ;; Hardware stack levels used:    1
 10981 ;; Hardware stack levels required when called:    3
 10982 ;; This function calls:
 10983 ;;		Nothing
 10984 ;; This function is called by:
 10985 ;;		_dtoa
 10986 ;; This function uses a non-reentrant model
 10987 ;;
 10988                           
 10989                           	psect	text35
 10990  002D96                     __ptext35:
 10991                           	opt callstack 0
 10992  002D96                     ___aomod:
 10993                           	opt callstack 22
 10994                           
 10995                           ; BSR set to: 0
 10996                           ;incstack = 0
 10997  002D96  0E00               	movlw	0
 10998  002D98  0100               	movlb	0	; () banked
 10999  002D9A  6F91               	movwf	___aomod@sign& (0+255),b
 11000                           
 11001                           ; BSR set to: 0
 11002  002D9C  AF87               	btfss	(___aomod@dividend+7)& (0+255),7,b
 11003  002D9E  D012               	goto	l6721
 11004                           
 11005                           ; BSR set to: 0
 11006  002DA0  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
 11007  002DA2  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
 11008  002DA4  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
 11009  002DA6  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
 11010  002DA8  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
 11011  002DAA  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
 11012  002DAC  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
 11013  002DAE  6D80               	negf	___aomod@dividend& (0+255),b
 11014  002DB0  0E00               	movlw	0
 11015  002DB2  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 11016  002DB4  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 11017  002DB6  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 11018  002DB8  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 11019  002DBA  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 11020  002DBC  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 11021  002DBE  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 11022                           
 11023                           ; BSR set to: 0
 11024  002DC0  0E01               	movlw	1
 11025  002DC2  6F91               	movwf	___aomod@sign& (0+255),b
 11026  002DC4                     l6721:
 11027                           
 11028                           ; BSR set to: 0
 11029  002DC4  AF8F               	btfss	(___aomod@divisor+7)& (0+255),7,b
 11030  002DC6  D010               	goto	l6725
 11031                           
 11032                           ; BSR set to: 0
 11033  002DC8  1F8F               	comf	(___aomod@divisor+7)& (0+255),f,b
 11034  002DCA  1F8E               	comf	(___aomod@divisor+6)& (0+255),f,b
 11035  002DCC  1F8D               	comf	(___aomod@divisor+5)& (0+255),f,b
 11036  002DCE  1F8C               	comf	(___aomod@divisor+4)& (0+255),f,b
 11037  002DD0  1F8B               	comf	(___aomod@divisor+3)& (0+255),f,b
 11038  002DD2  1F8A               	comf	(___aomod@divisor+2)& (0+255),f,b
 11039  002DD4  1F89               	comf	(___aomod@divisor+1)& (0+255),f,b
 11040  002DD6  6D88               	negf	___aomod@divisor& (0+255),b
 11041  002DD8  0E00               	movlw	0
 11042  002DDA  2389               	addwfc	(___aomod@divisor+1)& (0+255),f,b
 11043  002DDC  238A               	addwfc	(___aomod@divisor+2)& (0+255),f,b
 11044  002DDE  238B               	addwfc	(___aomod@divisor+3)& (0+255),f,b
 11045  002DE0  238C               	addwfc	(___aomod@divisor+4)& (0+255),f,b
 11046  002DE2  238D               	addwfc	(___aomod@divisor+5)& (0+255),f,b
 11047  002DE4  238E               	addwfc	(___aomod@divisor+6)& (0+255),f,b
 11048  002DE6  238F               	addwfc	(___aomod@divisor+7)& (0+255),f,b
 11049  002DE8                     l6725:
 11050                           
 11051                           ; BSR set to: 0
 11052  002DE8  5188               	movf	___aomod@divisor& (0+255),w,b
 11053  002DEA  1189               	iorwf	(___aomod@divisor+1)& (0+255),w,b
 11054  002DEC  118A               	iorwf	(___aomod@divisor+2)& (0+255),w,b
 11055  002DEE  118B               	iorwf	(___aomod@divisor+3)& (0+255),w,b
 11056  002DF0  118C               	iorwf	(___aomod@divisor+4)& (0+255),w,b
 11057  002DF2  118D               	iorwf	(___aomod@divisor+5)& (0+255),w,b
 11058  002DF4  118E               	iorwf	(___aomod@divisor+6)& (0+255),w,b
 11059  002DF6  118F               	iorwf	(___aomod@divisor+7)& (0+255),w,b
 11060  002DF8  B4D8               	btfsc	status,2,c
 11061  002DFA  D03C               	goto	l6741
 11062                           
 11063                           ; BSR set to: 0
 11064  002DFC  0E01               	movlw	1
 11065  002DFE  6F90               	movwf	___aomod@counter& (0+255),b
 11066  002E00  D00A               	goto	l6731
 11067  002E02                     l6729:
 11068                           
 11069                           ; BSR set to: 0
 11070  002E02  90D8               	bcf	status,0,c
 11071  002E04  3788               	rlcf	___aomod@divisor& (0+255),f,b
 11072  002E06  3789               	rlcf	(___aomod@divisor+1)& (0+255),f,b
 11073  002E08  378A               	rlcf	(___aomod@divisor+2)& (0+255),f,b
 11074  002E0A  378B               	rlcf	(___aomod@divisor+3)& (0+255),f,b
 11075  002E0C  378C               	rlcf	(___aomod@divisor+4)& (0+255),f,b
 11076  002E0E  378D               	rlcf	(___aomod@divisor+5)& (0+255),f,b
 11077  002E10  378E               	rlcf	(___aomod@divisor+6)& (0+255),f,b
 11078  002E12  378F               	rlcf	(___aomod@divisor+7)& (0+255),f,b
 11079  002E14  2B90               	incf	___aomod@counter& (0+255),f,b
 11080  002E16                     l6731:
 11081                           
 11082                           ; BSR set to: 0
 11083  002E16  AF8F               	btfss	(___aomod@divisor+7)& (0+255),7,b
 11084  002E18  D7F4               	goto	l6729
 11085  002E1A                     u7090:
 11086                           
 11087                           ; BSR set to: 0
 11088  002E1A  5188               	movf	___aomod@divisor& (0+255),w,b
 11089  002E1C  5D80               	subwf	___aomod@dividend& (0+255),w,b
 11090  002E1E  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
 11091  002E20  5981               	subwfb	(___aomod@dividend+1)& (0+255),w,b
 11092  002E22  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
 11093  002E24  5982               	subwfb	(___aomod@dividend+2)& (0+255),w,b
 11094  002E26  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
 11095  002E28  5983               	subwfb	(___aomod@dividend+3)& (0+255),w,b
 11096  002E2A  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
 11097  002E2C  5984               	subwfb	(___aomod@dividend+4)& (0+255),w,b
 11098  002E2E  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
 11099  002E30  5985               	subwfb	(___aomod@dividend+5)& (0+255),w,b
 11100  002E32  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
 11101  002E34  5986               	subwfb	(___aomod@dividend+6)& (0+255),w,b
 11102  002E36  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
 11103  002E38  5987               	subwfb	(___aomod@dividend+7)& (0+255),w,b
 11104  002E3A  A0D8               	btfss	status,0,c
 11105  002E3C  D010               	goto	l6737
 11106                           
 11107                           ; BSR set to: 0
 11108  002E3E  5188               	movf	___aomod@divisor& (0+255),w,b
 11109  002E40  5F80               	subwf	___aomod@dividend& (0+255),f,b
 11110  002E42  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
 11111  002E44  5B81               	subwfb	(___aomod@dividend+1)& (0+255),f,b
 11112  002E46  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
 11113  002E48  5B82               	subwfb	(___aomod@dividend+2)& (0+255),f,b
 11114  002E4A  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
 11115  002E4C  5B83               	subwfb	(___aomod@dividend+3)& (0+255),f,b
 11116  002E4E  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
 11117  002E50  5B84               	subwfb	(___aomod@dividend+4)& (0+255),f,b
 11118  002E52  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
 11119  002E54  5B85               	subwfb	(___aomod@dividend+5)& (0+255),f,b
 11120  002E56  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
 11121  002E58  5B86               	subwfb	(___aomod@dividend+6)& (0+255),f,b
 11122  002E5A  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
 11123  002E5C  5B87               	subwfb	(___aomod@dividend+7)& (0+255),f,b
 11124  002E5E                     l6737:
 11125                           
 11126                           ; BSR set to: 0
 11127  002E5E  90D8               	bcf	status,0,c
 11128  002E60  338F               	rrcf	(___aomod@divisor+7)& (0+255),f,b
 11129  002E62  338E               	rrcf	(___aomod@divisor+6)& (0+255),f,b
 11130  002E64  338D               	rrcf	(___aomod@divisor+5)& (0+255),f,b
 11131  002E66  338C               	rrcf	(___aomod@divisor+4)& (0+255),f,b
 11132  002E68  338B               	rrcf	(___aomod@divisor+3)& (0+255),f,b
 11133  002E6A  338A               	rrcf	(___aomod@divisor+2)& (0+255),f,b
 11134  002E6C  3389               	rrcf	(___aomod@divisor+1)& (0+255),f,b
 11135  002E6E  3388               	rrcf	___aomod@divisor& (0+255),f,b
 11136                           
 11137                           ; BSR set to: 0
 11138  002E70  2F90               	decfsz	___aomod@counter& (0+255),f,b
 11139  002E72  D7D3               	goto	u7090
 11140  002E74                     l6741:
 11141                           
 11142                           ; BSR set to: 0
 11143  002E74  5191               	movf	___aomod@sign& (0+255),w,b
 11144  002E76  B4D8               	btfsc	status,2,c
 11145  002E78  D010               	goto	l6745
 11146                           
 11147                           ; BSR set to: 0
 11148  002E7A  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
 11149  002E7C  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
 11150  002E7E  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
 11151  002E80  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
 11152  002E82  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
 11153  002E84  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
 11154  002E86  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
 11155  002E88  6D80               	negf	___aomod@dividend& (0+255),b
 11156  002E8A  0E00               	movlw	0
 11157  002E8C  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 11158  002E8E  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 11159  002E90  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 11160  002E92  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 11161  002E94  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 11162  002E96  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 11163  002E98  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 11164  002E9A                     l6745:
 11165                           
 11166                           ; BSR set to: 0
 11167  002E9A  C080  F080         	movff	___aomod@dividend,?___aomod
 11168  002E9E  C081  F081         	movff	___aomod@dividend+1,?___aomod+1
 11169  002EA2  C082  F082         	movff	___aomod@dividend+2,?___aomod+2
 11170  002EA6  C083  F083         	movff	___aomod@dividend+3,?___aomod+3
 11171  002EAA  C084  F084         	movff	___aomod@dividend+4,?___aomod+4
 11172  002EAE  C085  F085         	movff	___aomod@dividend+5,?___aomod+5
 11173  002EB2  C086  F086         	movff	___aomod@dividend+6,?___aomod+6
 11174  002EB6  C087  F087         	movff	___aomod@dividend+7,?___aomod+7
 11175                           
 11176                           ; BSR set to: 0
 11177  002EBA  0012               	return		;funcret
 11178  002EBC                     __end_of___aomod:
 11179                           	opt callstack 0
 11180                           
 11181 ;; *************** function ___aodiv *****************
 11182 ;; Defined at:
 11183 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
 11184 ;; Parameters:    Size  Location     Type
 11185 ;;  dividend        8    0[BANK0 ] long long 
 11186 ;;  divisor         8    8[BANK0 ] long long 
 11187 ;; Auto vars:     Size  Location     Type
 11188 ;;  quotient        8   18[BANK0 ] long long 
 11189 ;;  sign            1   17[BANK0 ] unsigned char 
 11190 ;;  counter         1   16[BANK0 ] unsigned char 
 11191 ;; Return value:  Size  Location     Type
 11192 ;;                  8    0[BANK0 ] long long 
 11193 ;; Registers used:
 11194 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11195 ;; Tracked objects:
 11196 ;;		On entry : 0/0
 11197 ;;		On exit  : 0/0
 11198 ;;		Unchanged: 0/0
 11199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11200 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11201 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11203 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11204 ;;Total ram usage:       26 bytes
 11205 ;; Hardware stack levels used:    1
 11206 ;; Hardware stack levels required when called:    3
 11207 ;; This function calls:
 11208 ;;		Nothing
 11209 ;; This function is called by:
 11210 ;;		_dtoa
 11211 ;; This function uses a non-reentrant model
 11212 ;;
 11213                           
 11214                           	psect	text36
 11215  0029C8                     __ptext36:
 11216                           	opt callstack 0
 11217  0029C8                     ___aodiv:
 11218                           	opt callstack 22
 11219                           
 11220                           ; BSR set to: 0
 11221                           ;incstack = 0
 11222  0029C8  0E00               	movlw	0
 11223  0029CA  0100               	movlb	0	; () banked
 11224  0029CC  6F91               	movwf	___aodiv@sign& (0+255),b
 11225                           
 11226                           ; BSR set to: 0
 11227  0029CE  AF8F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 11228  0029D0  D012               	goto	l6677
 11229                           
 11230                           ; BSR set to: 0
 11231  0029D2  1F8F               	comf	(___aodiv@divisor+7)& (0+255),f,b
 11232  0029D4  1F8E               	comf	(___aodiv@divisor+6)& (0+255),f,b
 11233  0029D6  1F8D               	comf	(___aodiv@divisor+5)& (0+255),f,b
 11234  0029D8  1F8C               	comf	(___aodiv@divisor+4)& (0+255),f,b
 11235  0029DA  1F8B               	comf	(___aodiv@divisor+3)& (0+255),f,b
 11236  0029DC  1F8A               	comf	(___aodiv@divisor+2)& (0+255),f,b
 11237  0029DE  1F89               	comf	(___aodiv@divisor+1)& (0+255),f,b
 11238  0029E0  6D88               	negf	___aodiv@divisor& (0+255),b
 11239  0029E2  0E00               	movlw	0
 11240  0029E4  2389               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
 11241  0029E6  238A               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
 11242  0029E8  238B               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
 11243  0029EA  238C               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
 11244  0029EC  238D               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
 11245  0029EE  238E               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
 11246  0029F0  238F               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
 11247                           
 11248                           ; BSR set to: 0
 11249  0029F2  0E01               	movlw	1
 11250  0029F4  6F91               	movwf	___aodiv@sign& (0+255),b
 11251  0029F6                     l6677:
 11252                           
 11253                           ; BSR set to: 0
 11254  0029F6  AF87               	btfss	(___aodiv@dividend+7)& (0+255),7,b
 11255  0029F8  D012               	goto	l6683
 11256                           
 11257                           ; BSR set to: 0
 11258  0029FA  1F87               	comf	(___aodiv@dividend+7)& (0+255),f,b
 11259  0029FC  1F86               	comf	(___aodiv@dividend+6)& (0+255),f,b
 11260  0029FE  1F85               	comf	(___aodiv@dividend+5)& (0+255),f,b
 11261  002A00  1F84               	comf	(___aodiv@dividend+4)& (0+255),f,b
 11262  002A02  1F83               	comf	(___aodiv@dividend+3)& (0+255),f,b
 11263  002A04  1F82               	comf	(___aodiv@dividend+2)& (0+255),f,b
 11264  002A06  1F81               	comf	(___aodiv@dividend+1)& (0+255),f,b
 11265  002A08  6D80               	negf	___aodiv@dividend& (0+255),b
 11266  002A0A  0E00               	movlw	0
 11267  002A0C  2381               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
 11268  002A0E  2382               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
 11269  002A10  2383               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
 11270  002A12  2384               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
 11271  002A14  2385               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
 11272  002A16  2386               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
 11273  002A18  2387               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
 11274                           
 11275                           ; BSR set to: 0
 11276  002A1A  0E01               	movlw	1
 11277  002A1C  1B91               	xorwf	___aodiv@sign& (0+255),f,b
 11278  002A1E                     l6683:
 11279                           
 11280                           ; BSR set to: 0
 11281  002A1E  EE20  F092         	lfsr	2,___aodiv@quotient
 11282  002A22  0E07               	movlw	7
 11283  002A24                     u7011:
 11284  002A24  6ADE               	clrf	postinc2,c
 11285  002A26  06E8               	decf	wreg,f,c
 11286  002A28  E2FD               	bc	u7011
 11287                           
 11288                           ; BSR set to: 0
 11289  002A2A  5188               	movf	___aodiv@divisor& (0+255),w,b
 11290  002A2C  1189               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
 11291  002A2E  118A               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
 11292  002A30  118B               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
 11293  002A32  118C               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
 11294  002A34  118D               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
 11295  002A36  118E               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
 11296  002A38  118F               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
 11297  002A3A  B4D8               	btfsc	status,2,c
 11298  002A3C  D046               	goto	l6705
 11299                           
 11300                           ; BSR set to: 0
 11301  002A3E  0E01               	movlw	1
 11302  002A40  6F90               	movwf	___aodiv@counter& (0+255),b
 11303  002A42  D00A               	goto	l6691
 11304  002A44                     l6689:
 11305                           
 11306                           ; BSR set to: 0
 11307  002A44  90D8               	bcf	status,0,c
 11308  002A46  3788               	rlcf	___aodiv@divisor& (0+255),f,b
 11309  002A48  3789               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
 11310  002A4A  378A               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
 11311  002A4C  378B               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
 11312  002A4E  378C               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
 11313  002A50  378D               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
 11314  002A52  378E               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
 11315  002A54  378F               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
 11316  002A56  2B90               	incf	___aodiv@counter& (0+255),f,b
 11317  002A58                     l6691:
 11318                           
 11319                           ; BSR set to: 0
 11320  002A58  AF8F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 11321  002A5A  D7F4               	goto	l6689
 11322  002A5C                     u7030:
 11323                           
 11324                           ; BSR set to: 0
 11325  002A5C  90D8               	bcf	status,0,c
 11326  002A5E  3792               	rlcf	___aodiv@quotient& (0+255),f,b
 11327  002A60  3793               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
 11328  002A62  3794               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
 11329  002A64  3795               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
 11330  002A66  3796               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
 11331  002A68  3797               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
 11332  002A6A  3798               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
 11333  002A6C  3799               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
 11334                           
 11335                           ; BSR set to: 0
 11336  002A6E  5188               	movf	___aodiv@divisor& (0+255),w,b
 11337  002A70  5D80               	subwf	___aodiv@dividend& (0+255),w,b
 11338  002A72  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
 11339  002A74  5981               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
 11340  002A76  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
 11341  002A78  5982               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
 11342  002A7A  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
 11343  002A7C  5983               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
 11344  002A7E  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
 11345  002A80  5984               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
 11346  002A82  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
 11347  002A84  5985               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
 11348  002A86  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
 11349  002A88  5986               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
 11350  002A8A  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
 11351  002A8C  5987               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
 11352  002A8E  A0D8               	btfss	status,0,c
 11353  002A90  D011               	goto	l6701
 11354                           
 11355                           ; BSR set to: 0
 11356  002A92  5188               	movf	___aodiv@divisor& (0+255),w,b
 11357  002A94  5F80               	subwf	___aodiv@dividend& (0+255),f,b
 11358  002A96  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
 11359  002A98  5B81               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
 11360  002A9A  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
 11361  002A9C  5B82               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
 11362  002A9E  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
 11363  002AA0  5B83               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
 11364  002AA2  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
 11365  002AA4  5B84               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
 11366  002AA6  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
 11367  002AA8  5B85               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
 11368  002AAA  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
 11369  002AAC  5B86               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
 11370  002AAE  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
 11371  002AB0  5B87               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
 11372                           
 11373                           ; BSR set to: 0
 11374  002AB2  8192               	bsf	___aodiv@quotient& (0+255),0,b
 11375  002AB4                     l6701:
 11376                           
 11377                           ; BSR set to: 0
 11378  002AB4  90D8               	bcf	status,0,c
 11379  002AB6  338F               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
 11380  002AB8  338E               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
 11381  002ABA  338D               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
 11382  002ABC  338C               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
 11383  002ABE  338B               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
 11384  002AC0  338A               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
 11385  002AC2  3389               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
 11386  002AC4  3388               	rrcf	___aodiv@divisor& (0+255),f,b
 11387                           
 11388                           ; BSR set to: 0
 11389  002AC6  2F90               	decfsz	___aodiv@counter& (0+255),f,b
 11390  002AC8  D7C9               	goto	u7030
 11391  002ACA                     l6705:
 11392                           
 11393                           ; BSR set to: 0
 11394  002ACA  5191               	movf	___aodiv@sign& (0+255),w,b
 11395  002ACC  B4D8               	btfsc	status,2,c
 11396  002ACE  D010               	goto	l6709
 11397                           
 11398                           ; BSR set to: 0
 11399  002AD0  1F99               	comf	(___aodiv@quotient+7)& (0+255),f,b
 11400  002AD2  1F98               	comf	(___aodiv@quotient+6)& (0+255),f,b
 11401  002AD4  1F97               	comf	(___aodiv@quotient+5)& (0+255),f,b
 11402  002AD6  1F96               	comf	(___aodiv@quotient+4)& (0+255),f,b
 11403  002AD8  1F95               	comf	(___aodiv@quotient+3)& (0+255),f,b
 11404  002ADA  1F94               	comf	(___aodiv@quotient+2)& (0+255),f,b
 11405  002ADC  1F93               	comf	(___aodiv@quotient+1)& (0+255),f,b
 11406  002ADE  6D92               	negf	___aodiv@quotient& (0+255),b
 11407  002AE0  0E00               	movlw	0
 11408  002AE2  2393               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
 11409  002AE4  2394               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
 11410  002AE6  2395               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
 11411  002AE8  2396               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
 11412  002AEA  2397               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
 11413  002AEC  2398               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
 11414  002AEE  2399               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
 11415  002AF0                     l6709:
 11416                           
 11417                           ; BSR set to: 0
 11418  002AF0  C092  F080         	movff	___aodiv@quotient,?___aodiv
 11419  002AF4  C093  F081         	movff	___aodiv@quotient+1,?___aodiv+1
 11420  002AF8  C094  F082         	movff	___aodiv@quotient+2,?___aodiv+2
 11421  002AFC  C095  F083         	movff	___aodiv@quotient+3,?___aodiv+3
 11422  002B00  C096  F084         	movff	___aodiv@quotient+4,?___aodiv+4
 11423  002B04  C097  F085         	movff	___aodiv@quotient+5,?___aodiv+5
 11424  002B08  C098  F086         	movff	___aodiv@quotient+6,?___aodiv+6
 11425  002B0C  C099  F087         	movff	___aodiv@quotient+7,?___aodiv+7
 11426                           
 11427                           ; BSR set to: 0
 11428  002B10  0012               	return		;funcret
 11429  002B12                     __end_of___aodiv:
 11430                           	opt callstack 0
 11431                           
 11432 ;; *************** function _atoi *****************
 11433 ;; Defined at:
 11434 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
 11435 ;; Parameters:    Size  Location     Type
 11436 ;;  s               2    7[BANK0 ] PTR const unsigned char 
 11437 ;;		 -> STR_63(10), STR_62(11), STR_61(11), STR_60(12), 
 11438 ;;		 -> STR_59(14), STR_58(17), STR_57(12), STR_56(10), 
 11439 ;;		 -> STR_55(10), STR_54(13), STR_53(8), STR_52(3), 
 11440 ;;		 -> STR_51(17), STR_50(15), STR_49(15), STR_48(12), 
 11441 ;;		 -> STR_47(17), STR_46(12), STR_45(15), STR_44(18), 
 11442 ;;		 -> STR_43(17), STR_42(12), STR_41(15), STR_40(18), 
 11443 ;;		 -> STR_39(17), STR_38(14), STR_37(14), STR_36(17), 
 11444 ;;		 -> STR_35(3), STR_34(9), STR_33(16), STR_32(3), 
 11445 ;;		 -> STR_31(9), STR_30(17), STR_29(15), STR_28(15), 
 11446 ;;		 -> STR_27(12), STR_26(10), STR_25(15), STR_24(12), 
 11447 ;;		 -> STR_23(10), STR_22(16), STR_21(12), STR_20(11), 
 11448 ;;		 -> STR_19(13), STR_18(8), STR_17(10), STR_16(17), 
 11449 ;;		 -> STR_15(10), STR_14(16), STR_13(10), STR_12(16), 
 11450 ;;		 -> STR_11(10), STR_10(17), STR_9(5), STR_8(10), 
 11451 ;;		 -> STR_7(14), STR_6(6), STR_5(10), STR_4(10), 
 11452 ;;		 -> STR_3(11), STR_2(13), STR_1(10), 
 11453 ;; Auto vars:     Size  Location     Type
 11454 ;;  n               2   20[BANK0 ] int 
 11455 ;;  neg             2   13[BANK0 ] int 
 11456 ;; Return value:  Size  Location     Type
 11457 ;;                  2    7[BANK0 ] int 
 11458 ;; Registers used:
 11459 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11460 ;; Tracked objects:
 11461 ;;		On entry : 0/0
 11462 ;;		On exit  : 0/0
 11463 ;;		Unchanged: 0/0
 11464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11465 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11466 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11467 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11468 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11469 ;;Total ram usage:       15 bytes
 11470 ;; Hardware stack levels used:    1
 11471 ;; Hardware stack levels required when called:    4
 11472 ;; This function calls:
 11473 ;;		___wmul
 11474 ;;		_isdigit
 11475 ;;		_isspace
 11476 ;; This function is called by:
 11477 ;;		_vfpfcnvrt
 11478 ;; This function uses a non-reentrant model
 11479 ;;
 11480                           
 11481                           	psect	text37
 11482  002B12                     __ptext37:
 11483                           	opt callstack 0
 11484  002B12                     _atoi:
 11485                           	opt callstack 22
 11486                           
 11487                           ; BSR set to: 0
 11488                           ;incstack = 0
 11489  002B12  0E00               	movlw	0
 11490  002B14  0100               	movlb	0	; () banked
 11491  002B16  6F95               	movwf	(atoi@n+1)& (0+255),b
 11492  002B18  0E00               	movlw	0
 11493  002B1A  6F94               	movwf	atoi@n& (0+255),b
 11494  002B1C  0E00               	movlw	0
 11495  002B1E  6F8E               	movwf	(atoi@neg+1)& (0+255),b
 11496  002B20  0E00               	movlw	0
 11497  002B22  6F8D               	movwf	atoi@neg& (0+255),b
 11498  002B24  D002               	goto	l6893
 11499  002B26                     l6891:
 11500                           
 11501                           ; BSR set to: 0
 11502  002B26  4B87               	infsnz	atoi@s& (0+255),f,b
 11503  002B28  2B88               	incf	(atoi@s+1)& (0+255),f,b
 11504  002B2A                     l6893:
 11505                           
 11506                           ; BSR set to: 0
 11507  002B2A  0E01               	movlw	1
 11508  002B2C  6F93               	movwf	_atoi$1711& (0+255),b
 11509                           
 11510                           ; BSR set to: 0
 11511  002B2E  C087  FFF6         	movff	atoi@s,tblptrl
 11512  002B32  C088  FFF7         	movff	atoi@s+1,tblptrh
 11513  002B36                     	if	0	;tblptru may be non-zero
 11514  002B36                     	endif
 11515  002B36                     	if	0	;tblptru may be non-zero
 11516  002B36                     	endif
 11517  002B36  0008               	tblrd		*
 11518  002B38  50F5               	movf	tablat,w,c
 11519  002B3A  0A20               	xorlw	32
 11520  002B3C  B4D8               	btfsc	status,2,c
 11521  002B3E  D018               	goto	l6901
 11522                           
 11523                           ; BSR set to: 0
 11524  002B40  0EF7               	movlw	247
 11525  002B42  6F89               	movwf	??_atoi& (0+255),b
 11526  002B44  0EFF               	movlw	255
 11527  002B46  6F8A               	movwf	(??_atoi+1)& (0+255),b
 11528  002B48  C087  FFF6         	movff	atoi@s,tblptrl
 11529  002B4C  C088  FFF7         	movff	atoi@s+1,tblptrh
 11530  002B50                     	if	0	;tblptru may be non-zero
 11531  002B50                     	endif
 11532  002B50                     	if	0	;tblptru may be non-zero
 11533  002B50                     	endif
 11534  002B50  0008               	tblrd		*
 11535  002B52  50F5               	movf	tablat,w,c
 11536  002B54  6F8B               	movwf	(??_atoi+2)& (0+255),b
 11537  002B56  6B8C               	clrf	(??_atoi+3)& (0+255),b
 11538  002B58  5189               	movf	??_atoi& (0+255),w,b
 11539  002B5A  278B               	addwf	(??_atoi+2)& (0+255),f,b
 11540  002B5C  518A               	movf	(??_atoi+1)& (0+255),w,b
 11541  002B5E  238C               	addwfc	(??_atoi+3)& (0+255),f,b
 11542  002B60  518C               	movf	(??_atoi+3)& (0+255),w,b
 11543  002B62  E104               	bnz	u7470
 11544  002B64  0E05               	movlw	5
 11545  002B66  5D8B               	subwf	(??_atoi+2)& (0+255),w,b
 11546  002B68  A0D8               	btfss	status,0,c
 11547  002B6A  D002               	goto	l6901
 11548  002B6C                     u7470:
 11549                           
 11550                           ; BSR set to: 0
 11551  002B6C  0E00               	movlw	0
 11552  002B6E  6F93               	movwf	_atoi$1711& (0+255),b
 11553  002B70                     l6901:
 11554                           
 11555                           ; BSR set to: 0
 11556  002B70  C093  F08F         	movff	_atoi$1711,_atoi$1710
 11557  002B74  6B90               	clrf	(_atoi$1710+1)& (0+255),b
 11558                           
 11559                           ; BSR set to: 0
 11560  002B76  518F               	movf	_atoi$1710& (0+255),w,b
 11561  002B78  1190               	iorwf	(_atoi$1710+1)& (0+255),w,b
 11562  002B7A  B4D8               	btfsc	status,2,c
 11563  002B7C  D008               	goto	l6911
 11564  002B7E  D7D3               	goto	l6891
 11565  002B80                     l6907:
 11566                           
 11567                           ; BSR set to: 0
 11568  002B80  0E00               	movlw	0
 11569  002B82  6F8E               	movwf	(atoi@neg+1)& (0+255),b
 11570  002B84  0E01               	movlw	1
 11571  002B86  6F8D               	movwf	atoi@neg& (0+255),b
 11572  002B88                     l6909:
 11573                           
 11574                           ; BSR set to: 0
 11575  002B88  4B87               	infsnz	atoi@s& (0+255),f,b
 11576  002B8A  2B88               	incf	(atoi@s+1)& (0+255),f,b
 11577  002B8C  D02F               	goto	l6917
 11578  002B8E                     l6911:
 11579                           
 11580                           ; BSR set to: 0
 11581  002B8E  C087  FFF6         	movff	atoi@s,tblptrl
 11582  002B92  C088  FFF7         	movff	atoi@s+1,tblptrh
 11583  002B96                     	if	0	;tblptru may be non-zero
 11584  002B96                     	endif
 11585  002B96                     	if	0	;tblptru may be non-zero
 11586  002B96                     	endif
 11587  002B96  0008               	tblrd		*
 11588  002B98  50F5               	movf	tablat,w,c
 11589  002B9A  6F89               	movwf	??_atoi& (0+255),b
 11590  002B9C  6B8A               	clrf	(??_atoi+1)& (0+255),b
 11591                           
 11592                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11593                           ; Switch size 1, requested type "simple"
 11594                           ; Number of cases is 1, Range of values is 0 to 0
 11595                           ; switch strategies available:
 11596                           ; Name         Instructions Cycles
 11597                           ; simple_byte            4     3 (average)
 11598                           ;	Chosen strategy is simple_byte
 11599  002B9E  518A               	movf	(??_atoi+1)& (0+255),w,b
 11600  002BA0  0A00               	xorlw	0	; case 0
 11601  002BA2  A4D8               	btfss	status,2,c
 11602  002BA4  D023               	goto	l6917
 11603                           
 11604                           ; BSR set to: 0
 11605                           ; Switch size 1, requested type "simple"
 11606                           ; Number of cases is 2, Range of values is 43 to 45
 11607                           ; switch strategies available:
 11608                           ; Name         Instructions Cycles
 11609                           ; simple_byte            7     4 (average)
 11610                           ;	Chosen strategy is simple_byte
 11611  002BA6  5189               	movf	??_atoi& (0+255),w,b
 11612  002BA8  0A2B               	xorlw	43	; case 43
 11613  002BAA  B4D8               	btfsc	status,2,c
 11614  002BAC  D7ED               	goto	l6909
 11615  002BAE  0A06               	xorlw	6	; case 45
 11616  002BB0  B4D8               	btfsc	status,2,c
 11617  002BB2  D7E6               	goto	l6907
 11618  002BB4  D01B               	goto	l6917
 11619  002BB6                     l6913:
 11620                           
 11621                           ; BSR set to: 0
 11622  002BB6  C094  F080         	movff	atoi@n,___wmul@multiplier
 11623  002BBA  C095  F081         	movff	atoi@n+1,___wmul@multiplier+1
 11624  002BBE  0E00               	movlw	0
 11625  002BC0  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11626  002BC2  0E0A               	movlw	10
 11627  002BC4  6F82               	movwf	___wmul@multiplicand& (0+255),b
 11628  002BC6  EC0F  F01F         	call	___wmul	;wreg free
 11629  002BCA  C087  FFF6         	movff	atoi@s,tblptrl
 11630  002BCE  C088  FFF7         	movff	atoi@s+1,tblptrh
 11631  002BD2                     	if	0	;tblptru may be non-zero
 11632  002BD2                     	endif
 11633  002BD2                     	if	0	;tblptru may be non-zero
 11634  002BD2                     	endif
 11635  002BD2  0008               	tblrd		*
 11636  002BD4  50F5               	movf	tablat,w,c
 11637  002BD6  0100               	movlb	0	; () banked
 11638  002BD8  5F80               	subwf	?___wmul& (0+255),f,b
 11639  002BDA  0E00               	movlw	0
 11640  002BDC  5B81               	subwfb	(?___wmul+1)& (0+255),f,b
 11641  002BDE  0E30               	movlw	48
 11642  002BE0  2580               	addwf	?___wmul& (0+255),w,b
 11643  002BE2  6F94               	movwf	atoi@n& (0+255),b
 11644  002BE4  0E00               	movlw	0
 11645  002BE6  2181               	addwfc	(?___wmul+1)& (0+255),w,b
 11646  002BE8  6F95               	movwf	(atoi@n+1)& (0+255),b
 11647  002BEA  D7CE               	goto	l6909
 11648  002BEC                     l6917:
 11649                           
 11650                           ; BSR set to: 0
 11651  002BEC  0ED0               	movlw	208
 11652  002BEE  6F89               	movwf	??_atoi& (0+255),b
 11653  002BF0  0EFF               	movlw	255
 11654  002BF2  6F8A               	movwf	(??_atoi+1)& (0+255),b
 11655  002BF4  C087  FFF6         	movff	atoi@s,tblptrl
 11656  002BF8  C088  FFF7         	movff	atoi@s+1,tblptrh
 11657  002BFC                     	if	0	;tblptru may be non-zero
 11658  002BFC                     	endif
 11659  002BFC                     	if	0	;tblptru may be non-zero
 11660  002BFC                     	endif
 11661  002BFC  0008               	tblrd		*
 11662  002BFE  50F5               	movf	tablat,w,c
 11663  002C00  6F8B               	movwf	(??_atoi+2)& (0+255),b
 11664  002C02  6B8C               	clrf	(??_atoi+3)& (0+255),b
 11665  002C04  5189               	movf	??_atoi& (0+255),w,b
 11666  002C06  278B               	addwf	(??_atoi+2)& (0+255),f,b
 11667  002C08  518A               	movf	(??_atoi+1)& (0+255),w,b
 11668  002C0A  238C               	addwfc	(??_atoi+3)& (0+255),f,b
 11669  002C0C  518C               	movf	(??_atoi+3)& (0+255),w,b
 11670  002C0E  E106               	bnz	u7490
 11671  002C10  0E0A               	movlw	10
 11672  002C12  5D8B               	subwf	(??_atoi+2)& (0+255),w,b
 11673  002C14  B0D8               	btfsc	status,0,c
 11674  002C16  D002               	goto	u7490
 11675  002C18  0E01               	movlw	1
 11676  002C1A  D001               	goto	u7500
 11677  002C1C                     u7490:
 11678  002C1C  0E00               	movlw	0
 11679  002C1E                     u7500:
 11680  002C1E  6F91               	movwf	_atoi$1712& (0+255),b
 11681  002C20  6B92               	clrf	(_atoi$1712+1)& (0+255),b
 11682                           
 11683                           ; BSR set to: 0
 11684  002C22  5191               	movf	_atoi$1712& (0+255),w,b
 11685  002C24  1192               	iorwf	(_atoi$1712+1)& (0+255),w,b
 11686  002C26  A4D8               	btfss	status,2,c
 11687  002C28  D7C6               	goto	l6913
 11688                           
 11689                           ; BSR set to: 0
 11690  002C2A  518D               	movf	atoi@neg& (0+255),w,b
 11691  002C2C  118E               	iorwf	(atoi@neg+1)& (0+255),w,b
 11692  002C2E  A4D8               	btfss	status,2,c
 11693  002C30  D00D               	goto	l1438
 11694                           
 11695                           ; BSR set to: 0
 11696  002C32  C094  F089         	movff	atoi@n,??_atoi
 11697  002C36  C095  F08A         	movff	atoi@n+1,??_atoi+1
 11698  002C3A  1F89               	comf	??_atoi& (0+255),f,b
 11699  002C3C  1F8A               	comf	(??_atoi+1)& (0+255),f,b
 11700  002C3E  4B89               	infsnz	??_atoi& (0+255),f,b
 11701  002C40  2B8A               	incf	(??_atoi+1)& (0+255),f,b
 11702  002C42  C089  F087         	movff	??_atoi,?_atoi
 11703  002C46  C08A  F088         	movff	??_atoi+1,?_atoi+1
 11704  002C4A  0012               	return	
 11705  002C4C                     l1438:
 11706                           
 11707                           ; BSR set to: 0
 11708  002C4C  C094  F087         	movff	atoi@n,?_atoi
 11709  002C50  C095  F088         	movff	atoi@n+1,?_atoi+1
 11710                           
 11711                           ; BSR set to: 0
 11712  002C54  0012               	return		;funcret
 11713  002C56                     __end_of_atoi:
 11714                           	opt callstack 0
 11715                           
 11716 ;; *************** function _isspace *****************
 11717 ;; Defined at:
 11718 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
 11719 ;; Parameters:    Size  Location     Type
 11720 ;;  c               2    0[BANK0 ] int 
 11721 ;; Auto vars:     Size  Location     Type
 11722 ;;		None
 11723 ;; Return value:  Size  Location     Type
 11724 ;;                  2    0[BANK0 ] int 
 11725 ;; Registers used:
 11726 ;;		wreg, status,2, status,0
 11727 ;; Tracked objects:
 11728 ;;		On entry : 0/0
 11729 ;;		On exit  : 0/0
 11730 ;;		Unchanged: 0/0
 11731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11732 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11733 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11734 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11735 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11736 ;;Total ram usage:        7 bytes
 11737 ;; Hardware stack levels used:    1
 11738 ;; Hardware stack levels required when called:    3
 11739 ;; This function calls:
 11740 ;;		Nothing
 11741 ;; This function is called by:
 11742 ;;		_atoi
 11743 ;; This function uses a non-reentrant model
 11744 ;;
 11745                           
 11746                           	psect	text38
 11747  003B84                     __ptext38:
 11748                           	opt callstack 0
 11749  003B84                     _isspace:
 11750                           	opt callstack 22
 11751                           
 11752                           ; BSR set to: 0
 11753                           ;incstack = 0
 11754  003B84  0E01               	movlw	1
 11755  003B86  0100               	movlb	0	; () banked
 11756  003B88  6F86               	movwf	_isspace$1737& (0+255),b
 11757                           
 11758                           ; BSR set to: 0
 11759  003B8A  0E20               	movlw	32
 11760  003B8C  1980               	xorwf	isspace@c& (0+255),w,b
 11761  003B8E  1181               	iorwf	(isspace@c+1)& (0+255),w,b
 11762  003B90  B4D8               	btfsc	status,2,c
 11763  003B92  D014               	goto	l6757
 11764                           
 11765                           ; BSR set to: 0
 11766  003B94  0EF7               	movlw	247
 11767  003B96  6F82               	movwf	??_isspace& (0+255),b
 11768  003B98  0EFF               	movlw	255
 11769  003B9A  6F83               	movwf	(??_isspace+1)& (0+255),b
 11770  003B9C  C080  F084         	movff	isspace@c,??_isspace+2
 11771  003BA0  C081  F085         	movff	isspace@c+1,??_isspace+3
 11772  003BA4  5182               	movf	??_isspace& (0+255),w,b
 11773  003BA6  2784               	addwf	(??_isspace+2)& (0+255),f,b
 11774  003BA8  5183               	movf	(??_isspace+1)& (0+255),w,b
 11775  003BAA  2385               	addwfc	(??_isspace+3)& (0+255),f,b
 11776  003BAC  5185               	movf	(??_isspace+3)& (0+255),w,b
 11777  003BAE  E104               	bnz	u7130
 11778  003BB0  0E05               	movlw	5
 11779  003BB2  5D84               	subwf	(??_isspace+2)& (0+255),w,b
 11780  003BB4  A0D8               	btfss	status,0,c
 11781  003BB6  D002               	goto	l6757
 11782  003BB8                     u7130:
 11783                           
 11784                           ; BSR set to: 0
 11785  003BB8  0E00               	movlw	0
 11786  003BBA  6F86               	movwf	_isspace$1737& (0+255),b
 11787  003BBC                     l6757:
 11788                           
 11789                           ; BSR set to: 0
 11790  003BBC  C086  F080         	movff	_isspace$1737,?_isspace
 11791  003BC0  6B81               	clrf	(?_isspace+1)& (0+255),b
 11792                           
 11793                           ; BSR set to: 0
 11794  003BC2  0012               	return		;funcret
 11795  003BC4                     __end_of_isspace:
 11796                           	opt callstack 0
 11797                           
 11798 ;; *************** function _isdigit *****************
 11799 ;; Defined at:
 11800 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
 11801 ;; Parameters:    Size  Location     Type
 11802 ;;  c               2    0[BANK0 ] int 
 11803 ;; Auto vars:     Size  Location     Type
 11804 ;;		None
 11805 ;; Return value:  Size  Location     Type
 11806 ;;                  2    0[BANK0 ] int 
 11807 ;; Registers used:
 11808 ;;		wreg, status,2, status,0
 11809 ;; Tracked objects:
 11810 ;;		On entry : 0/0
 11811 ;;		On exit  : 0/0
 11812 ;;		Unchanged: 0/0
 11813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11814 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11816 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11817 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11818 ;;Total ram usage:        6 bytes
 11819 ;; Hardware stack levels used:    1
 11820 ;; Hardware stack levels required when called:    3
 11821 ;; This function calls:
 11822 ;;		Nothing
 11823 ;; This function is called by:
 11824 ;;		_vfpfcnvrt
 11825 ;;		_atoi
 11826 ;; This function uses a non-reentrant model
 11827 ;;
 11828                           
 11829                           	psect	text39
 11830  003D3E                     __ptext39:
 11831                           	opt callstack 0
 11832  003D3E                     _isdigit:
 11833                           	opt callstack 23
 11834                           
 11835                           ; BSR set to: 0
 11836                           ;incstack = 0
 11837  003D3E  0ED0               	movlw	208
 11838  003D40  0100               	movlb	0	; () banked
 11839  003D42  6F82               	movwf	??_isdigit& (0+255),b
 11840  003D44  0EFF               	movlw	255
 11841  003D46  6F83               	movwf	(??_isdigit+1)& (0+255),b
 11842  003D48  C080  F084         	movff	isdigit@c,??_isdigit+2
 11843  003D4C  C081  F085         	movff	isdigit@c+1,??_isdigit+3
 11844  003D50  5182               	movf	??_isdigit& (0+255),w,b
 11845  003D52  2784               	addwf	(??_isdigit+2)& (0+255),f,b
 11846  003D54  5183               	movf	(??_isdigit+1)& (0+255),w,b
 11847  003D56  2385               	addwfc	(??_isdigit+3)& (0+255),f,b
 11848  003D58  5185               	movf	(??_isdigit+3)& (0+255),w,b
 11849  003D5A  E106               	bnz	u6970
 11850  003D5C  0E0A               	movlw	10
 11851  003D5E  5D84               	subwf	(??_isdigit+2)& (0+255),w,b
 11852  003D60  B0D8               	btfsc	status,0,c
 11853  003D62  D002               	goto	u6970
 11854  003D64  0E01               	movlw	1
 11855  003D66  D001               	goto	u6980
 11856  003D68                     u6970:
 11857  003D68  0E00               	movlw	0
 11858  003D6A                     u6980:
 11859  003D6A  6F80               	movwf	?_isdigit& (0+255),b
 11860  003D6C  6B81               	clrf	(?_isdigit+1)& (0+255),b
 11861                           
 11862                           ; BSR set to: 0
 11863  003D6E  0012               	return		;funcret
 11864  003D70                     __end_of_isdigit:
 11865                           	opt callstack 0
 11866                           
 11867 ;; *************** function ___wmul *****************
 11868 ;; Defined at:
 11869 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 11870 ;; Parameters:    Size  Location     Type
 11871 ;;  multiplier      2    0[BANK0 ] unsigned int 
 11872 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 11873 ;; Auto vars:     Size  Location     Type
 11874 ;;  product         2    4[BANK0 ] unsigned int 
 11875 ;; Return value:  Size  Location     Type
 11876 ;;                  2    0[BANK0 ] unsigned int 
 11877 ;; Registers used:
 11878 ;;		wreg, status,2, status,0, prodl, prodh
 11879 ;; Tracked objects:
 11880 ;;		On entry : 0/0
 11881 ;;		On exit  : 0/0
 11882 ;;		Unchanged: 0/0
 11883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11884 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11885 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11887 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11888 ;;Total ram usage:        6 bytes
 11889 ;; Hardware stack levels used:    1
 11890 ;; Hardware stack levels required when called:    3
 11891 ;; This function calls:
 11892 ;;		Nothing
 11893 ;; This function is called by:
 11894 ;;		_main
 11895 ;;		_atoi
 11896 ;; This function uses a non-reentrant model
 11897 ;;
 11898                           
 11899                           	psect	text40
 11900  003E1E                     __ptext40:
 11901                           	opt callstack 0
 11902  003E1E                     ___wmul:
 11903                           	opt callstack 22
 11904                           
 11905                           ; BSR set to: 0
 11906                           ;incstack = 0
 11907  003E1E  0100               	movlb	0	; () banked
 11908  003E20  5180               	movf	___wmul@multiplier& (0+255),w,b
 11909  003E22  0382               	mulwf	___wmul@multiplicand& (0+255),b
 11910  003E24  CFF3 F084          	movff	prodl,___wmul@product
 11911  003E28  CFF4 F085          	movff	prodh,___wmul@product+1
 11912  003E2C  5180               	movf	___wmul@multiplier& (0+255),w,b
 11913  003E2E  0383               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 11914  003E30  50F3               	movf	prodl,w,c
 11915  003E32  2785               	addwf	(___wmul@product+1)& (0+255),f,b
 11916  003E34  5181               	movf	(___wmul@multiplier+1)& (0+255),w,b
 11917  003E36  0382               	mulwf	___wmul@multiplicand& (0+255),b
 11918  003E38  50F3               	movf	prodl,w,c
 11919  003E3A  2785               	addwf	(___wmul@product+1)& (0+255),f,b
 11920                           
 11921                           ; BSR set to: 0
 11922  003E3C  C084  F080         	movff	___wmul@product,?___wmul
 11923  003E40  C085  F081         	movff	___wmul@product+1,?___wmul+1
 11924                           
 11925                           ; BSR set to: 0
 11926  003E44  0012               	return		;funcret
 11927  003E46                     __end_of___wmul:
 11928                           	opt callstack 0
 11929                           
 11930 ;; *************** function _initLCD *****************
 11931 ;; Defined at:
 11932 ;;		line 69 in file "lcd.c"
 11933 ;; Parameters:    Size  Location     Type
 11934 ;;		None
 11935 ;; Auto vars:     Size  Location     Type
 11936 ;;		None
 11937 ;; Return value:  Size  Location     Type
 11938 ;;                  1    wreg      void 
 11939 ;; Registers used:
 11940 ;;		wreg, status,2, status,0, cstack
 11941 ;; Tracked objects:
 11942 ;;		On entry : 0/0
 11943 ;;		On exit  : 0/0
 11944 ;;		Unchanged: 0/0
 11945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11948 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11949 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11950 ;;Total ram usage:        1 bytes
 11951 ;; Hardware stack levels used:    1
 11952 ;; Hardware stack levels required when called:    7
 11953 ;; This function calls:
 11954 ;;		_lcdInst
 11955 ;;		_send_byte
 11956 ;;		_send_nibble
 11957 ;; This function is called by:
 11958 ;;		_actuators_main
 11959 ;;		_UI_main
 11960 ;;		_main
 11961 ;; This function uses a non-reentrant model
 11962 ;;
 11963                           
 11964                           	psect	text41
 11965  003894                     __ptext41:
 11966                           	opt callstack 0
 11967  003894                     _initLCD:
 11968                           	opt callstack 23
 11969                           
 11970                           ;lcd.c: 70:     _delay((unsigned long)((15)*(10000000/4000.0)));
 11971                           
 11972                           ; BSR set to: 0
 11973                           ;incstack = 0
 11974  003894  0E31               	movlw	49
 11975  003896  0100               	movlb	0	; () banked
 11976  003898  6F84               	movwf	??_initLCD& (0+255),b
 11977  00389A  0EB2               	movlw	178
 11978  00389C                     u10167:
 11979  00389C  2EE8               	decfsz	wreg,f,c
 11980  00389E  D7FE               	bra	u10167
 11981  0038A0  2F84               	decfsz	??_initLCD& (0+255),f,b
 11982  0038A2  D7FC               	bra	u10167
 11983  0038A4  F000               	nop	
 11984                           
 11985                           ;lcd.c: 72:     LATDbits.LATD2 = 0;
 11986  0038A6  948C               	bcf	3980,2,c	;volatile
 11987                           
 11988                           ;lcd.c: 74:     send_nibble(0b0011);
 11989  0038A8  0E03               	movlw	3
 11990  0038AA  EC36  F01F         	call	_send_nibble
 11991                           
 11992                           ;lcd.c: 75:     _delay((unsigned long)((5)*(10000000/4000.0)));
 11993  0038AE  0E11               	movlw	17
 11994  0038B0  0100               	movlb	0	; () banked
 11995  0038B2  6F84               	movwf	??_initLCD& (0+255),b
 11996  0038B4  0E3A               	movlw	58
 11997  0038B6                     u10177:
 11998  0038B6  2EE8               	decfsz	wreg,f,c
 11999  0038B8  D7FE               	bra	u10177
 12000  0038BA  2F84               	decfsz	??_initLCD& (0+255),f,b
 12001  0038BC  D7FC               	bra	u10177
 12002  0038BE  F000               	nop	
 12003                           
 12004                           ;lcd.c: 76:     send_nibble(0b0011);
 12005  0038C0  0E03               	movlw	3
 12006  0038C2  EC36  F01F         	call	_send_nibble
 12007                           
 12008                           ;lcd.c: 77:     _delay((unsigned long)((150)*(10000000/4000000.0)));
 12009  0038C6  0E7D               	movlw	125
 12010  0038C8                     u10187:
 12011  0038C8  2EE8               	decfsz	wreg,f,c
 12012  0038CA  D7FE               	bra	u10187
 12013                           
 12014                           ;lcd.c: 78:     send_byte(0b00110010);
 12015  0038CC  0E32               	movlw	50
 12016  0038CE  EC43  F01F         	call	_send_byte
 12017                           
 12018                           ;lcd.c: 80:     send_byte(0b00101000);
 12019  0038D2  0E28               	movlw	40
 12020  0038D4  EC43  F01F         	call	_send_byte
 12021                           
 12022                           ;lcd.c: 81:     send_byte(0b00001000);
 12023  0038D8  0E08               	movlw	8
 12024  0038DA  EC43  F01F         	call	_send_byte
 12025                           
 12026                           ;lcd.c: 82:     send_byte(0b00000001);
 12027  0038DE  0E01               	movlw	1
 12028  0038E0  EC43  F01F         	call	_send_byte
 12029                           
 12030                           ;lcd.c: 83:     _delay((unsigned long)((5)*(10000000/4000.0)));
 12031  0038E4  0E11               	movlw	17
 12032  0038E6  0100               	movlb	0	; () banked
 12033  0038E8  6F84               	movwf	??_initLCD& (0+255),b
 12034  0038EA  0E3A               	movlw	58
 12035  0038EC                     u10197:
 12036  0038EC  2EE8               	decfsz	wreg,f,c
 12037  0038EE  D7FE               	bra	u10197
 12038  0038F0  2F84               	decfsz	??_initLCD& (0+255),f,b
 12039  0038F2  D7FC               	bra	u10197
 12040  0038F4  F000               	nop	
 12041                           
 12042                           ;lcd.c: 84:     send_byte(0b00000110);
 12043  0038F6  0E06               	movlw	6
 12044  0038F8  EC43  F01F         	call	_send_byte
 12045                           
 12046                           ;lcd.c: 87:     { lcdInst( (unsigned char)(8 | (1 << 2) | (1 << 1) | 1) );};
 12047  0038FC  0E0F               	movlw	15
 12048  0038FE  EC61  F01F         	call	_lcdInst
 12049  003902  0012               	return		;funcret
 12050  003904                     __end_of_initLCD:
 12051                           	opt callstack 0
 12052                           
 12053 ;; *************** function _lcdInst *****************
 12054 ;; Defined at:
 12055 ;;		line 64 in file "lcd.c"
 12056 ;; Parameters:    Size  Location     Type
 12057 ;;  data            1    wreg     unsigned char 
 12058 ;; Auto vars:     Size  Location     Type
 12059 ;;  data            1    3[BANK0 ] unsigned char 
 12060 ;; Return value:  Size  Location     Type
 12061 ;;                  1    wreg      void 
 12062 ;; Registers used:
 12063 ;;		wreg, status,2, status,0, cstack
 12064 ;; Tracked objects:
 12065 ;;		On entry : 0/0
 12066 ;;		On exit  : 0/0
 12067 ;;		Unchanged: 0/0
 12068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12070 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12072 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12073 ;;Total ram usage:        1 bytes
 12074 ;; Hardware stack levels used:    1
 12075 ;; Hardware stack levels required when called:    6
 12076 ;; This function calls:
 12077 ;;		_send_byte
 12078 ;; This function is called by:
 12079 ;;		_actuators_main
 12080 ;;		_stepper2
 12081 ;;		_stepper2_back
 12082 ;;		_initLCD
 12083 ;;		_print_echo
 12084 ;;		_ultrasonic_main
 12085 ;;		_number_deploy
 12086 ;;		_UI_main
 12087 ;;		_brake
 12088 ;;		_main
 12089 ;;		_lcd_shift_cursor
 12090 ;;		_lcd_shift_display
 12091 ;; This function uses a non-reentrant model
 12092 ;;
 12093                           
 12094                           	psect	text42
 12095  003EC2                     __ptext42:
 12096                           	opt callstack 0
 12097  003EC2                     _lcdInst:
 12098                           	opt callstack 22
 12099                           
 12100                           ;incstack = 0
 12101                           ;lcdInst@data stored from wreg
 12102  003EC2  0100               	movlb	0	; () banked
 12103  003EC4  6F83               	movwf	lcdInst@data& (0+255),b
 12104                           
 12105                           ;lcd.c: 65:     LATDbits.LATD2 = 0;
 12106  003EC6  948C               	bcf	3980,2,c	;volatile
 12107                           
 12108                           ;lcd.c: 66:     send_byte(data);
 12109  003EC8  0100               	movlb	0	; () banked
 12110  003ECA  5183               	movf	lcdInst@data& (0+255),w,b
 12111  003ECC  EC43  F01F         	call	_send_byte
 12112  003ED0  0012               	return		;funcret
 12113  003ED2                     __end_of_lcdInst:
 12114                           	opt callstack 0
 12115                           
 12116 ;; *************** function _send_byte *****************
 12117 ;; Defined at:
 12118 ;;		line 55 in file "lcd.c"
 12119 ;; Parameters:    Size  Location     Type
 12120 ;;  data            1    wreg     unsigned char 
 12121 ;; Auto vars:     Size  Location     Type
 12122 ;;  data            1    2[BANK0 ] unsigned char 
 12123 ;; Return value:  Size  Location     Type
 12124 ;;                  1    wreg      void 
 12125 ;; Registers used:
 12126 ;;		wreg, status,2, status,0, cstack
 12127 ;; Tracked objects:
 12128 ;;		On entry : 0/0
 12129 ;;		On exit  : 0/0
 12130 ;;		Unchanged: 0/0
 12131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12133 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12135 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12136 ;;Total ram usage:        1 bytes
 12137 ;; Hardware stack levels used:    1
 12138 ;; Hardware stack levels required when called:    5
 12139 ;; This function calls:
 12140 ;;		_send_nibble
 12141 ;; This function is called by:
 12142 ;;		_lcdInst
 12143 ;;		_initLCD
 12144 ;;		_putch
 12145 ;; This function uses a non-reentrant model
 12146 ;;
 12147                           
 12148                           	psect	text43
 12149  003E86                     __ptext43:
 12150                           	opt callstack 0
 12151  003E86                     _send_byte:
 12152                           	opt callstack 16
 12153                           
 12154                           ;incstack = 0
 12155                           ;send_byte@data stored from wreg
 12156  003E86  0100               	movlb	0	; () banked
 12157  003E88  6F82               	movwf	send_byte@data& (0+255),b
 12158                           
 12159                           ;lcd.c: 57:     send_nibble(data >> 4);
 12160  003E8A  0100               	movlb	0	; () banked
 12161  003E8C  3982               	swapf	send_byte@data& (0+255),w,b
 12162  003E8E  0B0F               	andlw	15
 12163  003E90  EC36  F01F         	call	_send_nibble
 12164                           
 12165                           ;lcd.c: 60:     send_nibble(data);
 12166  003E94  0100               	movlb	0	; () banked
 12167  003E96  5182               	movf	send_byte@data& (0+255),w,b
 12168  003E98  EC36  F01F         	call	_send_nibble
 12169  003E9C  0012               	return		;funcret
 12170  003E9E                     __end_of_send_byte:
 12171                           	opt callstack 0
 12172                           
 12173 ;; *************** function _send_nibble *****************
 12174 ;; Defined at:
 12175 ;;		line 44 in file "lcd.c"
 12176 ;; Parameters:    Size  Location     Type
 12177 ;;  data            1    wreg     unsigned char 
 12178 ;; Auto vars:     Size  Location     Type
 12179 ;;  data            1    1[BANK0 ] unsigned char 
 12180 ;; Return value:  Size  Location     Type
 12181 ;;                  1    wreg      void 
 12182 ;; Registers used:
 12183 ;;		wreg, status,2, status,0, cstack
 12184 ;; Tracked objects:
 12185 ;;		On entry : 0/0
 12186 ;;		On exit  : 0/0
 12187 ;;		Unchanged: 0/0
 12188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12190 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12192 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12193 ;;Total ram usage:        1 bytes
 12194 ;; Hardware stack levels used:    1
 12195 ;; Hardware stack levels required when called:    4
 12196 ;; This function calls:
 12197 ;;		_pulse_e
 12198 ;; This function is called by:
 12199 ;;		_send_byte
 12200 ;;		_initLCD
 12201 ;; This function uses a non-reentrant model
 12202 ;;
 12203                           
 12204                           	psect	text44
 12205  003E6C                     __ptext44:
 12206                           	opt callstack 0
 12207  003E6C                     _send_nibble:
 12208                           	opt callstack 16
 12209                           
 12210                           ;incstack = 0
 12211                           ;send_nibble@data stored from wreg
 12212  003E6C  0100               	movlb	0	; () banked
 12213  003E6E  6F81               	movwf	send_nibble@data& (0+255),b
 12214                           
 12215                           ;lcd.c: 46:     LATD = (unsigned char)(LATD & 0x0F);
 12216  003E70  508C               	movf	3980,w,c	;volatile
 12217  003E72  0B0F               	andlw	15
 12218  003E74  6E8C               	movwf	3980,c	;volatile
 12219                           
 12220                           ;lcd.c: 47:     LATD = (unsigned char)((data << 4) | LATD);
 12221  003E76  0100               	movlb	0	; () banked
 12222  003E78  3981               	swapf	send_nibble@data& (0+255),w,b
 12223  003E7A  0BF0               	andlw	240
 12224  003E7C  108C               	iorwf	3980,w,c	;volatile
 12225  003E7E  6E8C               	movwf	3980,c	;volatile
 12226                           
 12227                           ; BSR set to: 0
 12228                           ;lcd.c: 48:     pulse_e();
 12229  003E80  ECCF  F01E         	call	_pulse_e	;wreg free
 12230  003E84  0012               	return		;funcret
 12231  003E86                     __end_of_send_nibble:
 12232                           	opt callstack 0
 12233                           
 12234 ;; *************** function _pulse_e *****************
 12235 ;; Defined at:
 12236 ;;		line 28 in file "lcd.c"
 12237 ;; Parameters:    Size  Location     Type
 12238 ;;		None
 12239 ;; Auto vars:     Size  Location     Type
 12240 ;;  interruptSta    1    0[BANK0 ] unsigned char 
 12241 ;; Return value:  Size  Location     Type
 12242 ;;                  1    wreg      void 
 12243 ;; Registers used:
 12244 ;;		wreg
 12245 ;; Tracked objects:
 12246 ;;		On entry : 0/0
 12247 ;;		On exit  : 0/0
 12248 ;;		Unchanged: 0/0
 12249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12251 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12253 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12254 ;;Total ram usage:        1 bytes
 12255 ;; Hardware stack levels used:    1
 12256 ;; Hardware stack levels required when called:    3
 12257 ;; This function calls:
 12258 ;;		Nothing
 12259 ;; This function is called by:
 12260 ;;		_send_nibble
 12261 ;; This function uses a non-reentrant model
 12262 ;;
 12263                           
 12264                           	psect	text45
 12265  003D9E                     __ptext45:
 12266                           	opt callstack 0
 12267  003D9E                     _pulse_e:
 12268                           	opt callstack 16
 12269                           
 12270                           ;lcd.c: 29:     unsigned char interruptState = INTCONbits.GIE;
 12271                           
 12272                           ;incstack = 0
 12273  003D9E  0E00               	movlw	0
 12274  003DA0  BEF2               	btfsc	4082,7,c	;volatile
 12275  003DA2  0E01               	movlw	1
 12276  003DA4  0100               	movlb	0	; () banked
 12277  003DA6  6F80               	movwf	pulse_e@interruptState& (0+255),b
 12278                           
 12279                           ; BSR set to: 0
 12280                           ;lcd.c: 30:     (INTCONbits.GIE = 0);
 12281  003DA8  9EF2               	bcf	4082,7,c	;volatile
 12282                           
 12283                           ; BSR set to: 0
 12284                           ;lcd.c: 31:     LATDbits.LATD3 = 1;
 12285  003DAA  868C               	bsf	3980,3,c	;volatile
 12286                           
 12287                           ;lcd.c: 34:     _delay((unsigned long)((25)*(10000000/4000000.0)));
 12288  003DAC  0E14               	movlw	20
 12289  003DAE                     u10207:
 12290  003DAE  2EE8               	decfsz	wreg,f,c
 12291  003DB0  D7FE               	bra	u10207
 12292  003DB2  D000               	nop2	
 12293                           
 12294                           ;lcd.c: 35:     LATDbits.LATD3 = 0;
 12295  003DB4  968C               	bcf	3980,3,c	;volatile
 12296                           
 12297                           ;lcd.c: 36:     _delay((unsigned long)((100)*(10000000/4000000.0)));
 12298  003DB6  0E53               	movlw	83
 12299  003DB8                     u10217:
 12300  003DB8  2EE8               	decfsz	wreg,f,c
 12301  003DBA  D7FE               	bra	u10217
 12302  003DBC  F000               	nop	
 12303                           
 12304                           ;lcd.c: 37:     INTCONbits.GIE = interruptState;
 12305  003DBE  0100               	movlb	0	; () banked
 12306  003DC0  B180               	btfsc	pulse_e@interruptState& (0+255),0,b
 12307  003DC2  D002               	bra	u6765
 12308  003DC4  9EF2               	bcf	4082,7,c	;volatile
 12309  003DC6  D001               	bra	u6766
 12310  003DC8                     u6765:
 12311  003DC8  8EF2               	bsf	4082,7,c	;volatile
 12312  003DCA                     u6766:
 12313  003DCA  0012               	return		;funcret
 12314  003DCC                     __end_of_pulse_e:
 12315                           	opt callstack 0
 12316                           
 12317 ;; *************** function ___llmod *****************
 12318 ;; Defined at:
 12319 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\llmod.c"
 12320 ;; Parameters:    Size  Location     Type
 12321 ;;  dividend        4    0[BANK0 ] unsigned long 
 12322 ;;  divisor         4    4[BANK0 ] unsigned long 
 12323 ;; Auto vars:     Size  Location     Type
 12324 ;;  counter         1    8[BANK0 ] unsigned char 
 12325 ;; Return value:  Size  Location     Type
 12326 ;;                  4    0[BANK0 ] unsigned long 
 12327 ;; Registers used:
 12328 ;;		wreg, status,2, status,0
 12329 ;; Tracked objects:
 12330 ;;		On entry : 0/0
 12331 ;;		On exit  : 0/0
 12332 ;;		Unchanged: 0/0
 12333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12334 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12335 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12337 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12338 ;;Total ram usage:        9 bytes
 12339 ;; Hardware stack levels used:    1
 12340 ;; Hardware stack levels required when called:    3
 12341 ;; This function calls:
 12342 ;;		Nothing
 12343 ;; This function is called by:
 12344 ;;		_UI_main
 12345 ;; This function uses a non-reentrant model
 12346 ;;
 12347                           
 12348                           	psect	text46
 12349  003972                     __ptext46:
 12350                           	opt callstack 0
 12351  003972                     ___llmod:
 12352                           	opt callstack 26
 12353                           
 12354                           ;incstack = 0
 12355  003972  0100               	movlb	0	; () banked
 12356  003974  5184               	movf	___llmod@divisor& (0+255),w,b
 12357  003976  1185               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 12358  003978  1186               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 12359  00397A  1187               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 12360  00397C  B4D8               	btfsc	status,2,c
 12361  00397E  D024               	goto	l1152
 12362                           
 12363                           ; BSR set to: 0
 12364  003980  0E01               	movlw	1
 12365  003982  6F88               	movwf	___llmod@counter& (0+255),b
 12366  003984  D006               	goto	l7797
 12367  003986                     l7795:
 12368                           
 12369                           ; BSR set to: 0
 12370  003986  90D8               	bcf	status,0,c
 12371  003988  3784               	rlcf	___llmod@divisor& (0+255),f,b
 12372  00398A  3785               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 12373  00398C  3786               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 12374  00398E  3787               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 12375  003990  2B88               	incf	___llmod@counter& (0+255),f,b
 12376  003992                     l7797:
 12377                           
 12378                           ; BSR set to: 0
 12379  003992  AF87               	btfss	(___llmod@divisor+3)& (0+255),7,b
 12380  003994  D7F8               	goto	l7795
 12381  003996                     u8460:
 12382                           
 12383                           ; BSR set to: 0
 12384  003996  5184               	movf	___llmod@divisor& (0+255),w,b
 12385  003998  5D80               	subwf	___llmod@dividend& (0+255),w,b
 12386  00399A  5185               	movf	(___llmod@divisor+1)& (0+255),w,b
 12387  00399C  5981               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 12388  00399E  5186               	movf	(___llmod@divisor+2)& (0+255),w,b
 12389  0039A0  5982               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 12390  0039A2  5187               	movf	(___llmod@divisor+3)& (0+255),w,b
 12391  0039A4  5983               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 12392  0039A6  A0D8               	btfss	status,0,c
 12393  0039A8  D008               	goto	l7803
 12394                           
 12395                           ; BSR set to: 0
 12396  0039AA  5184               	movf	___llmod@divisor& (0+255),w,b
 12397  0039AC  5F80               	subwf	___llmod@dividend& (0+255),f,b
 12398  0039AE  5185               	movf	(___llmod@divisor+1)& (0+255),w,b
 12399  0039B0  5B81               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 12400  0039B2  5186               	movf	(___llmod@divisor+2)& (0+255),w,b
 12401  0039B4  5B82               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 12402  0039B6  5187               	movf	(___llmod@divisor+3)& (0+255),w,b
 12403  0039B8  5B83               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 12404  0039BA                     l7803:
 12405                           
 12406                           ; BSR set to: 0
 12407  0039BA  90D8               	bcf	status,0,c
 12408  0039BC  3387               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 12409  0039BE  3386               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 12410  0039C0  3385               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 12411  0039C2  3384               	rrcf	___llmod@divisor& (0+255),f,b
 12412                           
 12413                           ; BSR set to: 0
 12414  0039C4  2F88               	decfsz	___llmod@counter& (0+255),f,b
 12415  0039C6  D7E7               	goto	u8460
 12416  0039C8                     l1152:
 12417                           
 12418                           ; BSR set to: 0
 12419  0039C8  C080  F080         	movff	___llmod@dividend,?___llmod
 12420  0039CC  C081  F081         	movff	___llmod@dividend+1,?___llmod+1
 12421  0039D0  C082  F082         	movff	___llmod@dividend+2,?___llmod+2
 12422  0039D4  C083  F083         	movff	___llmod@dividend+3,?___llmod+3
 12423                           
 12424                           ; BSR set to: 0
 12425  0039D8  0012               	return		;funcret
 12426  0039DA                     __end_of___llmod:
 12427                           	opt callstack 0
 12428                           
 12429 ;; *************** function _I2C_Master_Write *****************
 12430 ;; Defined at:
 12431 ;;		line 70 in file "I2C.c"
 12432 ;; Parameters:    Size  Location     Type
 12433 ;;  byteToWrite     2    1[BANK0 ] unsigned int 
 12434 ;; Auto vars:     Size  Location     Type
 12435 ;;		None
 12436 ;; Return value:  Size  Location     Type
 12437 ;;                  1    wreg      void 
 12438 ;; Registers used:
 12439 ;;		wreg, status,2, status,0, cstack
 12440 ;; Tracked objects:
 12441 ;;		On entry : 0/0
 12442 ;;		On exit  : 0/0
 12443 ;;		Unchanged: 0/0
 12444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12445 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12448 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12449 ;;Total ram usage:        2 bytes
 12450 ;; Hardware stack levels used:    1
 12451 ;; Hardware stack levels required when called:    4
 12452 ;; This function calls:
 12453 ;;		_I2C_Master_Wait
 12454 ;; This function is called by:
 12455 ;;		_UI_main
 12456 ;;		_brake
 12457 ;;		_start
 12458 ;;		_backwards
 12459 ;; This function uses a non-reentrant model
 12460 ;;
 12461                           
 12462                           	psect	text47
 12463  003ED2                     __ptext47:
 12464                           	opt callstack 0
 12465  003ED2                     _I2C_Master_Write:
 12466                           	opt callstack 25
 12467                           
 12468                           ;I2C.c: 71:     I2C_Master_Wait();
 12469                           
 12470                           ; BSR set to: 0
 12471                           ;incstack = 0
 12472  003ED2  EC4F  F01F         	call	_I2C_Master_Wait	;wreg free
 12473                           
 12474                           ;I2C.c: 74:     SSPBUF = byteToWrite;
 12475  003ED6  C081  FFC9         	movff	I2C_Master_Write@byteToWrite,4041	;volatile
 12476  003EDA  0012               	return		;funcret
 12477  003EDC                     __end_of_I2C_Master_Write:
 12478                           	opt callstack 0
 12479                           
 12480 ;; *************** function _I2C_Master_Stop *****************
 12481 ;; Defined at:
 12482 ;;		line 65 in file "I2C.c"
 12483 ;; Parameters:    Size  Location     Type
 12484 ;;		None
 12485 ;; Auto vars:     Size  Location     Type
 12486 ;;		None
 12487 ;; Return value:  Size  Location     Type
 12488 ;;                  1    wreg      void 
 12489 ;; Registers used:
 12490 ;;		wreg, status,2, status,0, cstack
 12491 ;; Tracked objects:
 12492 ;;		On entry : 0/0
 12493 ;;		On exit  : 0/0
 12494 ;;		Unchanged: 0/0
 12495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12500 ;;Total ram usage:        0 bytes
 12501 ;; Hardware stack levels used:    1
 12502 ;; Hardware stack levels required when called:    4
 12503 ;; This function calls:
 12504 ;;		_I2C_Master_Wait
 12505 ;; This function is called by:
 12506 ;;		_UI_main
 12507 ;;		_brake
 12508 ;;		_start
 12509 ;;		_backwards
 12510 ;; This function uses a non-reentrant model
 12511 ;;
 12512                           
 12513                           	psect	text48
 12514  003EDC                     __ptext48:
 12515                           	opt callstack 0
 12516  003EDC                     _I2C_Master_Stop:
 12517                           	opt callstack 25
 12518                           
 12519                           ;I2C.c: 66:     I2C_Master_Wait();
 12520                           
 12521                           ;incstack = 0
 12522  003EDC  EC4F  F01F         	call	_I2C_Master_Wait	;wreg free
 12523                           
 12524                           ;I2C.c: 67:     SSPCON2bits.PEN = 1;
 12525  003EE0  84C5               	bsf	4037,2,c	;volatile
 12526  003EE2  0012               	return		;funcret
 12527  003EE4                     __end_of_I2C_Master_Stop:
 12528                           	opt callstack 0
 12529                           
 12530 ;; *************** function _I2C_Master_Start *****************
 12531 ;; Defined at:
 12532 ;;		line 55 in file "I2C.c"
 12533 ;; Parameters:    Size  Location     Type
 12534 ;;		None
 12535 ;; Auto vars:     Size  Location     Type
 12536 ;;		None
 12537 ;; Return value:  Size  Location     Type
 12538 ;;                  1    wreg      void 
 12539 ;; Registers used:
 12540 ;;		wreg, status,2, status,0, cstack
 12541 ;; Tracked objects:
 12542 ;;		On entry : 0/0
 12543 ;;		On exit  : 0/0
 12544 ;;		Unchanged: 0/0
 12545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12550 ;;Total ram usage:        0 bytes
 12551 ;; Hardware stack levels used:    1
 12552 ;; Hardware stack levels required when called:    4
 12553 ;; This function calls:
 12554 ;;		_I2C_Master_Wait
 12555 ;; This function is called by:
 12556 ;;		_UI_main
 12557 ;;		_brake
 12558 ;;		_start
 12559 ;;		_backwards
 12560 ;; This function uses a non-reentrant model
 12561 ;;
 12562                           
 12563                           	psect	text49
 12564  003EE4                     __ptext49:
 12565                           	opt callstack 0
 12566  003EE4                     _I2C_Master_Start:
 12567                           	opt callstack 25
 12568                           
 12569                           ;I2C.c: 56:     I2C_Master_Wait();
 12570                           
 12571                           ;incstack = 0
 12572  003EE4  EC4F  F01F         	call	_I2C_Master_Wait	;wreg free
 12573                           
 12574                           ;I2C.c: 57:     SSPCON2bits.SEN = 1;
 12575  003EE8  80C5               	bsf	4037,0,c	;volatile
 12576  003EEA  0012               	return		;funcret
 12577  003EEC                     __end_of_I2C_Master_Start:
 12578                           	opt callstack 0
 12579                           
 12580 ;; *************** function _I2C_Master_Read *****************
 12581 ;; Defined at:
 12582 ;;		line 77 in file "I2C.c"
 12583 ;; Parameters:    Size  Location     Type
 12584 ;;  ackBit          1    wreg     unsigned char 
 12585 ;; Auto vars:     Size  Location     Type
 12586 ;;  ackBit          1    1[BANK0 ] unsigned char 
 12587 ;;  receivedByte    1    2[BANK0 ] unsigned char 
 12588 ;; Return value:  Size  Location     Type
 12589 ;;                  1    wreg      unsigned char 
 12590 ;; Registers used:
 12591 ;;		wreg, status,2, status,0, cstack
 12592 ;; Tracked objects:
 12593 ;;		On entry : 0/0
 12594 ;;		On exit  : 0/0
 12595 ;;		Unchanged: 0/0
 12596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12598 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12600 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12601 ;;Total ram usage:        2 bytes
 12602 ;; Hardware stack levels used:    1
 12603 ;; Hardware stack levels required when called:    4
 12604 ;; This function calls:
 12605 ;;		_I2C_Master_Wait
 12606 ;; This function is called by:
 12607 ;;		_UI_main
 12608 ;;		_brake
 12609 ;; This function uses a non-reentrant model
 12610 ;;
 12611                           
 12612                           	psect	text50
 12613  003DCC                     __ptext50:
 12614                           	opt callstack 0
 12615  003DCC                     _I2C_Master_Read:
 12616                           	opt callstack 25
 12617                           
 12618                           ;incstack = 0
 12619                           ;I2C_Master_Read@ackBit stored from wreg
 12620  003DCC  0100               	movlb	0	; () banked
 12621  003DCE  6F81               	movwf	I2C_Master_Read@ackBit& (0+255),b
 12622                           
 12623                           ;I2C.c: 78:     I2C_Master_Wait();
 12624  003DD0  EC4F  F01F         	call	_I2C_Master_Wait	;wreg free
 12625                           
 12626                           ;I2C.c: 79:     SSPCON2bits.RCEN = 1;
 12627  003DD4  86C5               	bsf	4037,3,c	;volatile
 12628                           
 12629                           ;I2C.c: 81:     I2C_Master_Wait();
 12630  003DD6  EC4F  F01F         	call	_I2C_Master_Wait	;wreg free
 12631                           
 12632                           ;I2C.c: 84:     unsigned char receivedByte = SSPBUF;
 12633  003DDA  CFC9 F082          	movff	4041,I2C_Master_Read@receivedByte	;volatile
 12634                           
 12635                           ;I2C.c: 86:     I2C_Master_Wait();
 12636  003DDE  EC4F  F01F         	call	_I2C_Master_Wait	;wreg free
 12637                           
 12638                           ;I2C.c: 87:     SSPCON2bits.ACKDT = ackBit;
 12639  003DE2  0100               	movlb	0	; () banked
 12640  003DE4  B181               	btfsc	I2C_Master_Read@ackBit& (0+255),0,b
 12641  003DE6  D002               	bra	u7945
 12642  003DE8  9AC5               	bcf	4037,5,c	;volatile
 12643  003DEA  D001               	bra	u7946
 12644  003DEC                     u7945:
 12645  003DEC  8AC5               	bsf	4037,5,c	;volatile
 12646  003DEE                     u7946:
 12647                           
 12648                           ;I2C.c: 88:     SSPCON2bits.ACKEN = 1;
 12649  003DEE  88C5               	bsf	4037,4,c	;volatile
 12650                           
 12651                           ;I2C.c: 90:     return receivedByte;
 12652  003DF0  0100               	movlb	0	; () banked
 12653  003DF2  5182               	movf	I2C_Master_Read@receivedByte& (0+255),w,b
 12654                           
 12655                           ; BSR set to: 0
 12656  003DF4  0012               	return		;funcret
 12657  003DF6                     __end_of_I2C_Master_Read:
 12658                           	opt callstack 0
 12659                           
 12660 ;; *************** function _I2C_Master_Wait *****************
 12661 ;; Defined at:
 12662 ;;		line 21 in file "I2C.c"
 12663 ;; Parameters:    Size  Location     Type
 12664 ;;		None
 12665 ;; Auto vars:     Size  Location     Type
 12666 ;;		None
 12667 ;; Return value:  Size  Location     Type
 12668 ;;                  1    wreg      void 
 12669 ;; Registers used:
 12670 ;;		wreg, status,2, status,0
 12671 ;; Tracked objects:
 12672 ;;		On entry : 0/0
 12673 ;;		On exit  : 0/0
 12674 ;;		Unchanged: 0/0
 12675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12678 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12679 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12680 ;;Total ram usage:        1 bytes
 12681 ;; Hardware stack levels used:    1
 12682 ;; Hardware stack levels required when called:    3
 12683 ;; This function calls:
 12684 ;;		Nothing
 12685 ;; This function is called by:
 12686 ;;		_I2C_Master_Start
 12687 ;;		_I2C_Master_Stop
 12688 ;;		_I2C_Master_Write
 12689 ;;		_I2C_Master_Read
 12690 ;;		_I2C_Master_RepeatedStart
 12691 ;; This function uses a non-reentrant model
 12692 ;;
 12693                           
 12694                           	psect	text51
 12695  003E9E                     __ptext51:
 12696                           	opt callstack 0
 12697  003E9E                     _I2C_Master_Wait:
 12698                           	opt callstack 25
 12699                           
 12700                           ;I2C.c: 26:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F)){
 12701                           
 12702                           ;I2C.c: 28:     }
 12703                           
 12704                           ; BSR set to: 0
 12705                           ;incstack = 0
 12706  003E9E  B4C7               	btfsc	4039,2,c	;volatile
 12707  003EA0  D7FE               	goto	_I2C_Master_Wait
 12708  003EA2  CFC5 F080          	movff	4037,??_I2C_Master_Wait	;volatile
 12709  003EA6  0E1F               	movlw	31
 12710  003EA8  0100               	movlb	0	; () banked
 12711  003EAA  1780               	andwf	??_I2C_Master_Wait& (0+255),f,b
 12712  003EAC  B4D8               	btfsc	status,2,c
 12713  003EAE  0012               	return	
 12714  003EB0  D7F6               	goto	_I2C_Master_Wait
 12715  003EB2                     __end_of_I2C_Master_Wait:
 12716                           	opt callstack 0
 12717                           
 12718 ;; *************** function _I2C_Master_Init *****************
 12719 ;; Defined at:
 12720 ;;		line 32 in file "I2C.c"
 12721 ;; Parameters:    Size  Location     Type
 12722 ;;  clockFreq       4   13[BANK0 ] const unsigned long 
 12723 ;; Auto vars:     Size  Location     Type
 12724 ;;		None
 12725 ;; Return value:  Size  Location     Type
 12726 ;;                  1    wreg      void 
 12727 ;; Registers used:
 12728 ;;		wreg, status,2, status,0, cstack
 12729 ;; Tracked objects:
 12730 ;;		On entry : 0/0
 12731 ;;		On exit  : 0/0
 12732 ;;		Unchanged: 0/0
 12733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12734 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12736 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12737 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12738 ;;Total ram usage:        8 bytes
 12739 ;; Hardware stack levels used:    1
 12740 ;; Hardware stack levels required when called:    4
 12741 ;; This function calls:
 12742 ;;		___lldiv
 12743 ;; This function is called by:
 12744 ;;		_UI_main
 12745 ;;		_start
 12746 ;; This function uses a non-reentrant model
 12747 ;;
 12748                           
 12749                           	psect	text52
 12750  0039DA                     __ptext52:
 12751                           	opt callstack 0
 12752  0039DA                     _I2C_Master_Init:
 12753                           	opt callstack 25
 12754                           
 12755                           ;I2C.c: 34:     SSPCON1bits.SSPEN = 0;
 12756                           
 12757                           ; BSR set to: 0
 12758                           ;incstack = 0
 12759  0039DA  9AC6               	bcf	4038,5,c	;volatile
 12760                           
 12761                           ;I2C.c: 37:     TRISCbits.TRISC3 = 1;
 12762  0039DC  8694               	bsf	3988,3,c	;volatile
 12763                           
 12764                           ;I2C.c: 38:     TRISCbits.TRISC4 = 1;
 12765  0039DE  8894               	bsf	3988,4,c	;volatile
 12766                           
 12767                           ;I2C.c: 43:     SSPADD = (10000000 / (4 * clockFreq)) - 1;
 12768  0039E0  0E80               	movlw	128
 12769  0039E2  0100               	movlb	0	; () banked
 12770  0039E4  6F80               	movwf	___lldiv@dividend& (0+255),b
 12771  0039E6  0E96               	movlw	150
 12772  0039E8  6F81               	movwf	(___lldiv@dividend+1)& (0+255),b
 12773  0039EA  0E98               	movlw	152
 12774  0039EC  6F82               	movwf	(___lldiv@dividend+2)& (0+255),b
 12775  0039EE  0E00               	movlw	0
 12776  0039F0  6F83               	movwf	(___lldiv@dividend+3)& (0+255),b
 12777  0039F2  C08D  F091         	movff	I2C_Master_Init@clockFreq,??_I2C_Master_Init
 12778  0039F6  C08E  F092         	movff	I2C_Master_Init@clockFreq+1,??_I2C_Master_Init+1
 12779  0039FA  C08F  F093         	movff	I2C_Master_Init@clockFreq+2,??_I2C_Master_Init+2
 12780  0039FE  C090  F094         	movff	I2C_Master_Init@clockFreq+3,??_I2C_Master_Init+3
 12781  003A02  0E02               	movlw	2
 12782  003A04                     u7935:
 12783  003A04  90D8               	bcf	status,0,c
 12784  003A06  3791               	rlcf	??_I2C_Master_Init& (0+255),f,b
 12785  003A08  3792               	rlcf	(??_I2C_Master_Init+1)& (0+255),f,b
 12786  003A0A  3793               	rlcf	(??_I2C_Master_Init+2)& (0+255),f,b
 12787  003A0C  3794               	rlcf	(??_I2C_Master_Init+3)& (0+255),f,b
 12788  003A0E  2EE8               	decfsz	wreg,f,c
 12789  003A10  D7F9               	goto	u7935
 12790  003A12  C091  F084         	movff	??_I2C_Master_Init,___lldiv@divisor
 12791  003A16  C092  F085         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
 12792  003A1A  C093  F086         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
 12793  003A1E  C094  F087         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
 12794  003A22  ECC6  F01B         	call	___lldiv	;wreg free
 12795  003A26  0100               	movlb	0	; () banked
 12796  003A28  0580               	decf	?___lldiv& (0+255),w,b
 12797  003A2A  6EC8               	movwf	4040,c	;volatile
 12798                           
 12799                           ; BSR set to: 0
 12800                           ;I2C.c: 46:     SSPSTAT = 0b10000000;
 12801  003A2C  0E80               	movlw	128
 12802  003A2E  6EC7               	movwf	4039,c	;volatile
 12803                           
 12804                           ; BSR set to: 0
 12805                           ;I2C.c: 49:     SSPCON1 = 0b00101000;
 12806  003A30  0E28               	movlw	40
 12807  003A32  6EC6               	movwf	4038,c	;volatile
 12808                           
 12809                           ; BSR set to: 0
 12810                           ;I2C.c: 52:     SSPCON2 = 0b00000000;
 12811  003A34  0E00               	movlw	0
 12812  003A36  6EC5               	movwf	4037,c	;volatile
 12813                           
 12814                           ; BSR set to: 0
 12815  003A38  0012               	return		;funcret
 12816  003A3A                     __end_of_I2C_Master_Init:
 12817                           	opt callstack 0
 12818                           
 12819 ;; *************** function ___lldiv *****************
 12820 ;; Defined at:
 12821 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__lldiv.c"
 12822 ;; Parameters:    Size  Location     Type
 12823 ;;  dividend        4    0[BANK0 ] unsigned long 
 12824 ;;  divisor         4    4[BANK0 ] unsigned long 
 12825 ;; Auto vars:     Size  Location     Type
 12826 ;;  quotient        4    8[BANK0 ] unsigned long 
 12827 ;;  counter         1   12[BANK0 ] unsigned char 
 12828 ;; Return value:  Size  Location     Type
 12829 ;;                  4    0[BANK0 ] unsigned long 
 12830 ;; Registers used:
 12831 ;;		wreg, status,2, status,0
 12832 ;; Tracked objects:
 12833 ;;		On entry : 0/0
 12834 ;;		On exit  : 0/0
 12835 ;;		Unchanged: 0/0
 12836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12837 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12838 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12840 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12841 ;;Total ram usage:       13 bytes
 12842 ;; Hardware stack levels used:    1
 12843 ;; Hardware stack levels required when called:    3
 12844 ;; This function calls:
 12845 ;;		Nothing
 12846 ;; This function is called by:
 12847 ;;		_I2C_Master_Init
 12848 ;; This function uses a non-reentrant model
 12849 ;;
 12850                           
 12851                           	psect	text53
 12852  00378C                     __ptext53:
 12853                           	opt callstack 0
 12854  00378C                     ___lldiv:
 12855                           	opt callstack 25
 12856                           
 12857                           ; BSR set to: 0
 12858                           ;incstack = 0
 12859  00378C  0E00               	movlw	0
 12860  00378E  0100               	movlb	0	; () banked
 12861  003790  6F88               	movwf	___lldiv@quotient& (0+255),b
 12862  003792  0E00               	movlw	0
 12863  003794  6F89               	movwf	(___lldiv@quotient+1)& (0+255),b
 12864  003796  0E00               	movlw	0
 12865  003798  6F8A               	movwf	(___lldiv@quotient+2)& (0+255),b
 12866  00379A  0E00               	movlw	0
 12867  00379C  6F8B               	movwf	(___lldiv@quotient+3)& (0+255),b
 12868                           
 12869                           ; BSR set to: 0
 12870  00379E  5184               	movf	___lldiv@divisor& (0+255),w,b
 12871  0037A0  1185               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 12872  0037A2  1186               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 12873  0037A4  1187               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 12874  0037A6  B4D8               	btfsc	status,2,c
 12875  0037A8  D02A               	goto	l759
 12876                           
 12877                           ; BSR set to: 0
 12878  0037AA  0E01               	movlw	1
 12879  0037AC  6F8C               	movwf	___lldiv@counter& (0+255),b
 12880  0037AE  D006               	goto	l7373
 12881  0037B0                     l7371:
 12882                           
 12883                           ; BSR set to: 0
 12884  0037B0  90D8               	bcf	status,0,c
 12885  0037B2  3784               	rlcf	___lldiv@divisor& (0+255),f,b
 12886  0037B4  3785               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 12887  0037B6  3786               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 12888  0037B8  3787               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 12889  0037BA  2B8C               	incf	___lldiv@counter& (0+255),f,b
 12890  0037BC                     l7373:
 12891                           
 12892                           ; BSR set to: 0
 12893  0037BC  AF87               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 12894  0037BE  D7F8               	goto	l7371
 12895  0037C0                     u7910:
 12896                           
 12897                           ; BSR set to: 0
 12898  0037C0  90D8               	bcf	status,0,c
 12899  0037C2  3788               	rlcf	___lldiv@quotient& (0+255),f,b
 12900  0037C4  3789               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 12901  0037C6  378A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 12902  0037C8  378B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 12903                           
 12904                           ; BSR set to: 0
 12905  0037CA  5184               	movf	___lldiv@divisor& (0+255),w,b
 12906  0037CC  5D80               	subwf	___lldiv@dividend& (0+255),w,b
 12907  0037CE  5185               	movf	(___lldiv@divisor+1)& (0+255),w,b
 12908  0037D0  5981               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 12909  0037D2  5186               	movf	(___lldiv@divisor+2)& (0+255),w,b
 12910  0037D4  5982               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 12911  0037D6  5187               	movf	(___lldiv@divisor+3)& (0+255),w,b
 12912  0037D8  5983               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 12913  0037DA  A0D8               	btfss	status,0,c
 12914  0037DC  D009               	goto	l7383
 12915                           
 12916                           ; BSR set to: 0
 12917  0037DE  5184               	movf	___lldiv@divisor& (0+255),w,b
 12918  0037E0  5F80               	subwf	___lldiv@dividend& (0+255),f,b
 12919  0037E2  5185               	movf	(___lldiv@divisor+1)& (0+255),w,b
 12920  0037E4  5B81               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 12921  0037E6  5186               	movf	(___lldiv@divisor+2)& (0+255),w,b
 12922  0037E8  5B82               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 12923  0037EA  5187               	movf	(___lldiv@divisor+3)& (0+255),w,b
 12924  0037EC  5B83               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 12925                           
 12926                           ; BSR set to: 0
 12927  0037EE  8188               	bsf	___lldiv@quotient& (0+255),0,b
 12928  0037F0                     l7383:
 12929                           
 12930                           ; BSR set to: 0
 12931  0037F0  90D8               	bcf	status,0,c
 12932  0037F2  3387               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 12933  0037F4  3386               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 12934  0037F6  3385               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 12935  0037F8  3384               	rrcf	___lldiv@divisor& (0+255),f,b
 12936                           
 12937                           ; BSR set to: 0
 12938  0037FA  2F8C               	decfsz	___lldiv@counter& (0+255),f,b
 12939  0037FC  D7E1               	goto	u7910
 12940  0037FE                     l759:
 12941                           
 12942                           ; BSR set to: 0
 12943  0037FE  C088  F080         	movff	___lldiv@quotient,?___lldiv
 12944  003802  C089  F081         	movff	___lldiv@quotient+1,?___lldiv+1
 12945  003806  C08A  F082         	movff	___lldiv@quotient+2,?___lldiv+2
 12946  00380A  C08B  F083         	movff	___lldiv@quotient+3,?___lldiv+3
 12947                           
 12948                           ; BSR set to: 0
 12949  00380E  0012               	return		;funcret
 12950  003810                     __end_of___lldiv:
 12951                           	opt callstack 0
 12952                           
 12953 ;; *************** function _ISR *****************
 12954 ;; Defined at:
 12955 ;;		line 71 in file "main.c"
 12956 ;; Parameters:    Size  Location     Type
 12957 ;;		None
 12958 ;; Auto vars:     Size  Location     Type
 12959 ;;		None
 12960 ;; Return value:  Size  Location     Type
 12961 ;;                  1    wreg      void 
 12962 ;; Registers used:
 12963 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12964 ;; Tracked objects:
 12965 ;;		On entry : 0/0
 12966 ;;		On exit  : 0/0
 12967 ;;		Unchanged: 0/0
 12968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12971 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12972 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12973 ;;Total ram usage:        2 bytes
 12974 ;; Hardware stack levels used:    1
 12975 ;; Hardware stack levels required when called:    2
 12976 ;; This function calls:
 12977 ;;		_echo
 12978 ;; This function is called by:
 12979 ;;		Interrupt level 2
 12980 ;; This function uses a non-reentrant model
 12981 ;;
 12982                           
 12983                           	psect	intcode
 12984  000008                     __pintcode:
 12985                           	opt callstack 0
 12986  000008                     _ISR:
 12987                           	opt callstack 14
 12988                           
 12989                           ; BSR set to: 0
 12990                           ;incstack = 0
 12991  000008  826E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 12992  00000A  EDE2  F01D         	call	int_func,f	;refresh shadow registers
 12993                           
 12994                           	psect	intcode_body
 12995  003BC4                     __pintcode_body:
 12996                           	opt callstack 14
 12997  003BC4                     int_func:
 12998                           	opt callstack 14
 12999  003BC4  0006               	pop		; remove dummy address from shadow register refresh
 13000  003BC6  CFD9 F036          	movff	fsr2l,??_ISR
 13001  003BCA  CFDA F037          	movff	fsr2h,??_ISR+1
 13002                           
 13003                           ;main.c: 72:  if(RBIF == 1){
 13004  003BCE  A0F2               	btfss	4082,0,c	;volatile
 13005  003BD0  D012               	goto	i2l396
 13006                           
 13007                           ;main.c: 73:         if (sens){
 13008  003BD2  5058               	movf	_sens,w,c	;volatile
 13009  003BD4  1059               	iorwf	_sens+1,w,c	;volatile
 13010  003BD6  B4D8               	btfsc	status,2,c
 13011  003BD8  D005               	goto	i2l6263
 13012                           
 13013                           ;main.c: 74:             RBIE = 0;
 13014  003BDA  96F2               	bcf	4082,3,c	;volatile
 13015                           
 13016                           ;main.c: 75:             echo();
 13017  003BDC  EC28  F007         	call	_echo	;wreg free
 13018                           
 13019                           ;main.c: 76:             RBIF = 0;
 13020  003BE0  90F2               	bcf	4082,0,c	;volatile
 13021                           
 13022                           ;main.c: 77:             RBIE = 1;
 13023  003BE2  86F2               	bsf	4082,3,c	;volatile
 13024  003BE4                     i2l6263:
 13025                           
 13026                           ;main.c: 79:         if (~sens){
 13027  003BE4  2858               	incf	_sens,w,c	;volatile
 13028  003BE6  E103               	bnz	i2u650_40
 13029  003BE8  2859               	incf	_sens+1,w,c	;volatile
 13030  003BEA  B4D8               	btfsc	status,2,c
 13031  003BEC  D004               	goto	i2l396
 13032  003BEE                     i2u650_40:
 13033                           
 13034                           ;main.c: 80:             key_was_pressed = 1;
 13035  003BEE  0E01               	movlw	1
 13036  003BF0  0101               	movlb	1	; () banked
 13037  003BF2  6FE5               	movwf	_key_was_pressed& (0+255),b	;volatile
 13038                           
 13039                           ; BSR set to: 1
 13040                           ;main.c: 81:             INT1IF = 0;
 13041  003BF4  90F0               	bcf	4080,0,c	;volatile
 13042  003BF6                     i2l396:
 13043  003BF6  C037  FFDA         	movff	??_ISR+1,fsr2h
 13044  003BFA  C036  FFD9         	movff	??_ISR,fsr2l
 13045  003BFE  926E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 13046  003C00  0011               	retfie		f
 13047  003C02                     __end_of_ISR:
 13048                           	opt callstack 0
 13049                           
 13050 ;; *************** function _echo *****************
 13051 ;; Defined at:
 13052 ;;		line 99 in file "main.c"
 13053 ;; Parameters:    Size  Location     Type
 13054 ;;		None
 13055 ;; Auto vars:     Size  Location     Type
 13056 ;;		None
 13057 ;; Return value:  Size  Location     Type
 13058 ;;                  1    wreg      void 
 13059 ;; Registers used:
 13060 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13061 ;; Tracked objects:
 13062 ;;		On entry : 0/0
 13063 ;;		On exit  : 0/0
 13064 ;;		Unchanged: 0/0
 13065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13068 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13069 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13070 ;;Total ram usage:        4 bytes
 13071 ;; Hardware stack levels used:    1
 13072 ;; Hardware stack levels required when called:    1
 13073 ;; This function calls:
 13074 ;;		___fldiv
 13075 ;;		___fltol
 13076 ;;		___xxtofl
 13077 ;;		i2___awdiv
 13078 ;; This function is called by:
 13079 ;;		_ISR
 13080 ;; This function uses a non-reentrant model
 13081 ;;
 13082                           
 13083                           	psect	text55
 13084  000E50                     __ptext55:
 13085                           	opt callstack 0
 13086  000E50                     _echo:
 13087                           	opt callstack 14
 13088                           
 13089                           ;main.c: 100:     if (b==1){
 13090                           
 13091                           ;incstack = 0
 13092  000E50  045A               	decf	_b,w,c
 13093  000E52  105B               	iorwf	_b+1,w,c
 13094  000E54  A4D8               	btfss	status,2,c
 13095  000E56  D0A2               	goto	i2l5709
 13096                           
 13097                           ;main.c: 101:         if (RB7 == 1){
 13098  000E58  BE81               	btfsc	3969,7,c	;volatile
 13099                           
 13100                           ;main.c: 102:             TMR1ON = 1;
 13101  000E5A  80CD               	bsf	4045,0,c	;volatile
 13102                           
 13103                           ;main.c: 104:         if (RB7 == 0){
 13104                           
 13105                           ;main.c: 103:         }
 13106  000E5C  BE81               	btfsc	3969,7,c	;volatile
 13107  000E5E  D037               	goto	i2l5685
 13108                           
 13109                           ;main.c: 105:             TMR1ON = 0;
 13110  000E60  90CD               	bcf	4045,0,c	;volatile
 13111                           
 13112                           ;main.c: 106:             a[0] = (TMR1L | (TMR1H<<8))/58.82;
 13113  000E62  0EAE               	movlw	174
 13114  000E64  6E13               	movwf	___fldiv@a,c
 13115  000E66  0E47               	movlw	71
 13116  000E68  6E14               	movwf	___fldiv@a+1,c
 13117  000E6A  0E6B               	movlw	107
 13118  000E6C  6E15               	movwf	___fldiv@a+2,c
 13119  000E6E  0E42               	movlw	66
 13120  000E70  6E16               	movwf	___fldiv@a+3,c
 13121  000E72  50CF               	movf	4047,w,c	;volatile
 13122  000E74  6E33               	movwf	(??_echo+1)& (0+255),c
 13123  000E76  6A32               	clrf	??_echo& (0+255),c
 13124  000E78  50CE               	movf	4046,w,c	;volatile
 13125  000E7A  6E34               	movwf	(??_echo+2)& (0+255),c
 13126  000E7C  6A35               	clrf	(??_echo+3)& (0+255),c
 13127  000E7E  5032               	movf	??_echo,w,c
 13128  000E80  1234               	iorwf	??_echo+2,f,c
 13129  000E82  5033               	movf	??_echo+1,w,c
 13130  000E84  1235               	iorwf	??_echo+3,f,c
 13131  000E86  C034  F001         	movff	??_echo+2,___xxtofl@val
 13132  000E8A  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 13133  000E8E  0E00               	movlw	0
 13134  000E90  BE02               	btfsc	___xxtofl@val+1,7,c
 13135  000E92  0EFF               	movlw	-1
 13136  000E94  6E03               	movwf	___xxtofl@val+2,c
 13137  000E96  6E04               	movwf	___xxtofl@val+3,c
 13138  000E98  0E01               	movlw	1
 13139  000E9A  EC2B  F016         	call	___xxtofl
 13140  000E9E  C001  F00F         	movff	?___xxtofl,___fldiv@b
 13141  000EA2  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 13142  000EA6  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 13143  000EAA  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 13144  000EAE  EC37  F00D         	call	___fldiv	;wreg free
 13145  000EB2  C00F  F028         	movff	?___fldiv,___fltol@f1
 13146  000EB6  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 13147  000EBA  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 13148  000EBE  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 13149  000EC2  EC30  F01A         	call	___fltol	;wreg free
 13150  000EC6  C028  F061         	movff	?___fltol,_a
 13151  000ECA  C029  F062         	movff	?___fltol+1,_a+1
 13152  000ECE                     i2l5685:
 13153                           
 13154                           ;main.c: 110:         if (a[0]>=2 && a[0]<=200){
 13155  000ECE  BE62               	btfsc	_a+1,7,c
 13156  000ED0  D065               	goto	i2l5709
 13157  000ED2  5062               	movf	_a+1,w,c
 13158  000ED4  E104               	bnz	i2u563_40
 13159  000ED6  0E02               	movlw	2
 13160  000ED8  5C61               	subwf	_a,w,c
 13161  000EDA  A0D8               	btfss	status,0,c
 13162  000EDC  D05F               	goto	i2l5709
 13163  000EDE                     i2u563_40:
 13164  000EDE  BE62               	btfsc	_a+1,7,c
 13165  000EE0  D006               	goto	i2u564_40
 13166  000EE2  5062               	movf	_a+1,w,c
 13167  000EE4  E15B               	bnz	i2l5709
 13168  000EE6  0EC9               	movlw	201
 13169  000EE8  5C61               	subwf	_a,w,c
 13170  000EEA  B0D8               	btfsc	status,0,c
 13171  000EEC  D057               	goto	i2l5709
 13172  000EEE                     i2u564_40:
 13173                           
 13174                           ;main.c: 111:             if ((~sumf[0])&&(dist_final[0][0]!=0)&&(dist_final[0][1]!=0)&&
      +                          (dist_final[0][2]!=0)){
 13175  000EEE  0440               	decf	_sumf,w,c
 13176  000EF0  B4D8               	btfsc	status,2,c
 13177  000EF2  D01B               	goto	i2l5701
 13178  000EF4  0102               	movlb	2	; () banked
 13179  000EF6  5150               	movf	_dist_final& (0+255),w,b
 13180  000EF8  1151               	iorwf	(_dist_final+1)& (0+255),w,b
 13181  000EFA  B4D8               	btfsc	status,2,c
 13182  000EFC  D016               	goto	i2l5701
 13183                           
 13184                           ; BSR set to: 2
 13185  000EFE  5152               	movf	(_dist_final+2)& (0+255),w,b
 13186  000F00  1153               	iorwf	(_dist_final+3)& (0+255),w,b
 13187  000F02  B4D8               	btfsc	status,2,c
 13188  000F04  D012               	goto	i2l5701
 13189                           
 13190                           ; BSR set to: 2
 13191  000F06  5154               	movf	(_dist_final+4)& (0+255),w,b
 13192  000F08  1155               	iorwf	(_dist_final+5)& (0+255),w,b
 13193  000F0A  B4D8               	btfsc	status,2,c
 13194  000F0C  D00E               	goto	i2l5701
 13195                           
 13196                           ; BSR set to: 2
 13197                           ;main.c: 112:                 sum[0] = (dist_final[0][0]+dist_final[0][1]+dist_final[0][
      +                          2]);
 13198  000F0E  5154               	movf	(_dist_final+4)& (0+255),w,b
 13199  000F10  2552               	addwf	(_dist_final+2)& (0+255),w,b
 13200  000F12  6E32               	movwf	??_echo& (0+255),c
 13201  000F14  5155               	movf	(_dist_final+5)& (0+255),w,b
 13202  000F16  2153               	addwfc	(_dist_final+3)& (0+255),w,b
 13203  000F18  6E33               	movwf	(??_echo+1)& (0+255),c
 13204  000F1A  5150               	movf	_dist_final& (0+255),w,b
 13205  000F1C  2432               	addwf	??_echo,w,c
 13206  000F1E  6E38               	movwf	_sum,c
 13207  000F20  5151               	movf	(_dist_final+1)& (0+255),w,b
 13208  000F22  2033               	addwfc	??_echo+1,w,c
 13209  000F24  6E39               	movwf	_sum+1,c
 13210                           
 13211                           ; BSR set to: 2
 13212                           ;main.c: 113:                 sumf[0] = 1;
 13213  000F26  0E01               	movlw	1
 13214  000F28  6E40               	movwf	_sumf,c
 13215  000F2A                     i2l5701:
 13216                           
 13217                           ;main.c: 115:             if (sumf[0]){
 13218  000F2A  5040               	movf	_sumf,w,c
 13219  000F2C  B4D8               	btfsc	status,2,c
 13220  000F2E  D029               	goto	i2l5707
 13221                           
 13222                           ;main.c: 116:                 sum[0] = sum[0] - dist_final[0][meas] + a[0];
 13223  000F30  90D8               	bcf	status,0,c
 13224  000F32  3450               	rlcf	_meas,w,c	;volatile
 13225  000F34  6ED9               	movwf	fsr2l,c
 13226  000F36  3451               	rlcf	_meas+1,w,c	;volatile
 13227  000F38  6EDA               	movwf	fsr2h,c
 13228  000F3A  0E50               	movlw	low _dist_final
 13229  000F3C  26D9               	addwf	fsr2l,f,c
 13230  000F3E  0E02               	movlw	high _dist_final
 13231  000F40  22DA               	addwfc	fsr2h,f,c
 13232  000F42  CFDE F032          	movff	postinc2,??_echo
 13233  000F46  CFDD F033          	movff	postdec2,??_echo+1
 13234  000F4A  C038  F034         	movff	_sum,??_echo+2
 13235  000F4E  C039  F035         	movff	_sum+1,??_echo+3
 13236  000F52  5032               	movf	??_echo,w,c
 13237  000F54  5E34               	subwf	??_echo+2,f,c
 13238  000F56  5033               	movf	??_echo+1,w,c
 13239  000F58  5A35               	subwfb	??_echo+3,f,c
 13240  000F5A  5061               	movf	_a,w,c
 13241  000F5C  2434               	addwf	??_echo+2,w,c
 13242  000F5E  6E38               	movwf	_sum,c
 13243  000F60  5062               	movf	_a+1,w,c
 13244  000F62  2035               	addwfc	??_echo+3,w,c
 13245  000F64  6E39               	movwf	_sum+1,c
 13246                           
 13247                           ;main.c: 117:                 dist_final[0][5] = (sum[0]/5);
 13248  000F66  C038  F001         	movff	_sum,i2___awdiv@dividend
 13249  000F6A  C039  F002         	movff	_sum+1,i2___awdiv@dividend+1
 13250  000F6E  0E00               	movlw	0
 13251  000F70  6E04               	movwf	i2___awdiv@divisor+1,c
 13252  000F72  0E05               	movlw	5
 13253  000F74  6E03               	movwf	i2___awdiv@divisor,c
 13254  000F76  EC08  F01C         	call	i2___awdiv	;wreg free
 13255  000F7A  C001  F25A         	movff	?i2___awdiv,_dist_final+10
 13256  000F7E  C002  F25B         	movff	?i2___awdiv+1,_dist_final+11
 13257  000F82                     i2l5707:
 13258                           
 13259                           ;main.c: 119:             dist_final[0][meas] = a[0];
 13260  000F82  90D8               	bcf	status,0,c
 13261  000F84  3450               	rlcf	_meas,w,c	;volatile
 13262  000F86  6ED9               	movwf	fsr2l,c
 13263  000F88  3451               	rlcf	_meas+1,w,c	;volatile
 13264  000F8A  6EDA               	movwf	fsr2h,c
 13265  000F8C  0E50               	movlw	low _dist_final
 13266  000F8E  26D9               	addwf	fsr2l,f,c
 13267  000F90  0E02               	movlw	high _dist_final
 13268  000F92  22DA               	addwfc	fsr2h,f,c
 13269  000F94  C061  FFDE         	movff	_a,postinc2
 13270  000F98  C062  FFDD         	movff	_a+1,postdec2
 13271  000F9C                     i2l5709:
 13272                           
 13273                           ;main.c: 122:     if (b==2){
 13274  000F9C  0E02               	movlw	2
 13275  000F9E  185A               	xorwf	_b,w,c
 13276  000FA0  105B               	iorwf	_b+1,w,c
 13277  000FA2  A4D8               	btfss	status,2,c
 13278  000FA4  D0A4               	goto	i2l5743
 13279                           
 13280                           ;main.c: 123:         if (RB6 == 1){
 13281  000FA6  BC81               	btfsc	3969,6,c	;volatile
 13282                           
 13283                           ;main.c: 124:             TMR1ON = 1;
 13284  000FA8  80CD               	bsf	4045,0,c	;volatile
 13285                           
 13286                           ;main.c: 126:         if (RB6 == 0){
 13287                           
 13288                           ;main.c: 125:         }
 13289  000FAA  BC81               	btfsc	3969,6,c	;volatile
 13290  000FAC  D037               	goto	i2l5719
 13291                           
 13292                           ;main.c: 127:             TMR1ON = 0;
 13293  000FAE  90CD               	bcf	4045,0,c	;volatile
 13294                           
 13295                           ;main.c: 128:             a[1] = (TMR1L | (TMR1H<<8))/58.82;
 13296  000FB0  0EAE               	movlw	174
 13297  000FB2  6E13               	movwf	___fldiv@a,c
 13298  000FB4  0E47               	movlw	71
 13299  000FB6  6E14               	movwf	___fldiv@a+1,c
 13300  000FB8  0E6B               	movlw	107
 13301  000FBA  6E15               	movwf	___fldiv@a+2,c
 13302  000FBC  0E42               	movlw	66
 13303  000FBE  6E16               	movwf	___fldiv@a+3,c
 13304  000FC0  50CF               	movf	4047,w,c	;volatile
 13305  000FC2  6E33               	movwf	(??_echo+1)& (0+255),c
 13306  000FC4  6A32               	clrf	??_echo& (0+255),c
 13307  000FC6  50CE               	movf	4046,w,c	;volatile
 13308  000FC8  6E34               	movwf	(??_echo+2)& (0+255),c
 13309  000FCA  6A35               	clrf	(??_echo+3)& (0+255),c
 13310  000FCC  5032               	movf	??_echo,w,c
 13311  000FCE  1234               	iorwf	??_echo+2,f,c
 13312  000FD0  5033               	movf	??_echo+1,w,c
 13313  000FD2  1235               	iorwf	??_echo+3,f,c
 13314  000FD4  C034  F001         	movff	??_echo+2,___xxtofl@val
 13315  000FD8  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 13316  000FDC  0E00               	movlw	0
 13317  000FDE  BE02               	btfsc	___xxtofl@val+1,7,c
 13318  000FE0  0EFF               	movlw	-1
 13319  000FE2  6E03               	movwf	___xxtofl@val+2,c
 13320  000FE4  6E04               	movwf	___xxtofl@val+3,c
 13321  000FE6  0E01               	movlw	1
 13322  000FE8  EC2B  F016         	call	___xxtofl
 13323  000FEC  C001  F00F         	movff	?___xxtofl,___fldiv@b
 13324  000FF0  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 13325  000FF4  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 13326  000FF8  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 13327  000FFC  EC37  F00D         	call	___fldiv	;wreg free
 13328  001000  C00F  F028         	movff	?___fldiv,___fltol@f1
 13329  001004  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 13330  001008  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 13331  00100C  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 13332  001010  EC30  F01A         	call	___fltol	;wreg free
 13333  001014  C028  F063         	movff	?___fltol,_a+2
 13334  001018  C029  F064         	movff	?___fltol+1,_a+3
 13335  00101C                     i2l5719:
 13336                           
 13337                           ;main.c: 131:                 if (a[1]>=2 && a[1]<=200){
 13338  00101C  BE64               	btfsc	_a+3,7,c
 13339  00101E  D067               	goto	i2l5743
 13340  001020  5064               	movf	_a+3,w,c
 13341  001022  E104               	bnz	i2u573_40
 13342  001024  0E02               	movlw	2
 13343  001026  5C63               	subwf	_a+2,w,c
 13344  001028  A0D8               	btfss	status,0,c
 13345  00102A  D061               	goto	i2l5743
 13346  00102C                     i2u573_40:
 13347  00102C  BE64               	btfsc	_a+3,7,c
 13348  00102E  D006               	goto	i2u574_40
 13349  001030  5064               	movf	_a+3,w,c
 13350  001032  E15D               	bnz	i2l5743
 13351  001034  0EC9               	movlw	201
 13352  001036  5C63               	subwf	_a+2,w,c
 13353  001038  B0D8               	btfsc	status,0,c
 13354  00103A  D059               	goto	i2l5743
 13355  00103C                     i2u574_40:
 13356                           
 13357                           ;main.c: 133:                 if ((~sumf[1])&&(dist_final[1][0]!=0)&&(dist_final[1][1]!=
      +                          0)&&(dist_final[1][2]!=0)){
 13358  00103C  0441               	decf	_sumf+1,w,c
 13359  00103E  B4D8               	btfsc	status,2,c
 13360  001040  D01B               	goto	i2l5735
 13361  001042  0102               	movlb	2	; () banked
 13362  001044  515C               	movf	(_dist_final+12)& (0+255),w,b
 13363  001046  115D               	iorwf	(_dist_final+13)& (0+255),w,b
 13364  001048  B4D8               	btfsc	status,2,c
 13365  00104A  D016               	goto	i2l5735
 13366                           
 13367                           ; BSR set to: 2
 13368  00104C  515E               	movf	(_dist_final+14)& (0+255),w,b
 13369  00104E  115F               	iorwf	(_dist_final+15)& (0+255),w,b
 13370  001050  B4D8               	btfsc	status,2,c
 13371  001052  D012               	goto	i2l5735
 13372                           
 13373                           ; BSR set to: 2
 13374  001054  5160               	movf	(_dist_final+16)& (0+255),w,b
 13375  001056  1161               	iorwf	(_dist_final+17)& (0+255),w,b
 13376  001058  B4D8               	btfsc	status,2,c
 13377  00105A  D00E               	goto	i2l5735
 13378                           
 13379                           ; BSR set to: 2
 13380                           ;main.c: 134:             sum[1] = (dist_final[1][0]+dist_final[1][1]+dist_final[1][2]);
 13381  00105C  515E               	movf	(_dist_final+14)& (0+255),w,b
 13382  00105E  255C               	addwf	(_dist_final+12)& (0+255),w,b
 13383  001060  6E32               	movwf	??_echo& (0+255),c
 13384  001062  515F               	movf	(_dist_final+15)& (0+255),w,b
 13385  001064  215D               	addwfc	(_dist_final+13)& (0+255),w,b
 13386  001066  6E33               	movwf	(??_echo+1)& (0+255),c
 13387  001068  5160               	movf	(_dist_final+16)& (0+255),w,b
 13388  00106A  2432               	addwf	??_echo,w,c
 13389  00106C  6E3A               	movwf	_sum+2,c
 13390  00106E  5161               	movf	(_dist_final+17)& (0+255),w,b
 13391  001070  2033               	addwfc	??_echo+1,w,c
 13392  001072  6E3B               	movwf	_sum+3,c
 13393                           
 13394                           ; BSR set to: 2
 13395                           ;main.c: 135:             sumf[1] = 1;
 13396  001074  0E01               	movlw	1
 13397  001076  6E41               	movwf	_sumf+1,c
 13398  001078                     i2l5735:
 13399                           
 13400                           ;main.c: 137:         if (sumf[1]){
 13401  001078  5041               	movf	_sumf+1,w,c
 13402  00107A  B4D8               	btfsc	status,2,c
 13403  00107C  D02B               	goto	i2l5741
 13404                           
 13405                           ;main.c: 138:             sum[1] = sum[1] - dist_final[1][meas] + a[1];
 13406  00107E  90D8               	bcf	status,0,c
 13407  001080  3450               	rlcf	_meas,w,c	;volatile
 13408  001082  6ED9               	movwf	fsr2l,c
 13409  001084  3451               	rlcf	_meas+1,w,c	;volatile
 13410  001086  6EDA               	movwf	fsr2h,c
 13411  001088  0E5C               	movlw	low (_dist_final+12)
 13412  00108A  26D9               	addwf	fsr2l,f,c
 13413  00108C  0E02               	movlw	high (_dist_final+12)
 13414  00108E  22DA               	addwfc	fsr2h,f,c
 13415  001090  CFDE F032          	movff	postinc2,??_echo
 13416  001094  CFDD F033          	movff	postdec2,??_echo+1
 13417  001098  EE20  F03A         	lfsr	2,_sum+2
 13418  00109C  CFDE F034          	movff	postinc2,??_echo+2
 13419  0010A0  CFDD F035          	movff	postdec2,??_echo+3
 13420  0010A4  5032               	movf	??_echo,w,c
 13421  0010A6  5E34               	subwf	??_echo+2,f,c
 13422  0010A8  5033               	movf	??_echo+1,w,c
 13423  0010AA  5A35               	subwfb	??_echo+3,f,c
 13424  0010AC  5063               	movf	_a+2,w,c
 13425  0010AE  2434               	addwf	??_echo+2,w,c
 13426  0010B0  6E3A               	movwf	_sum+2,c
 13427  0010B2  5064               	movf	_a+3,w,c
 13428  0010B4  2035               	addwfc	??_echo+3,w,c
 13429  0010B6  6E3B               	movwf	_sum+3,c
 13430                           
 13431                           ;main.c: 139:             dist_final[1][5] = (sum[1]/5);
 13432  0010B8  C03A  F001         	movff	_sum+2,i2___awdiv@dividend
 13433  0010BC  C03B  F002         	movff	_sum+3,i2___awdiv@dividend+1
 13434  0010C0  0E00               	movlw	0
 13435  0010C2  6E04               	movwf	i2___awdiv@divisor+1,c
 13436  0010C4  0E05               	movlw	5
 13437  0010C6  6E03               	movwf	i2___awdiv@divisor,c
 13438  0010C8  EC08  F01C         	call	i2___awdiv	;wreg free
 13439  0010CC  C001  F266         	movff	?i2___awdiv,_dist_final+22
 13440  0010D0  C002  F267         	movff	?i2___awdiv+1,_dist_final+23
 13441  0010D4                     i2l5741:
 13442                           
 13443                           ;main.c: 141:         dist_final[1][meas] = a[1];
 13444  0010D4  90D8               	bcf	status,0,c
 13445  0010D6  3450               	rlcf	_meas,w,c	;volatile
 13446  0010D8  6ED9               	movwf	fsr2l,c
 13447  0010DA  3451               	rlcf	_meas+1,w,c	;volatile
 13448  0010DC  6EDA               	movwf	fsr2h,c
 13449  0010DE  0E5C               	movlw	low (_dist_final+12)
 13450  0010E0  26D9               	addwf	fsr2l,f,c
 13451  0010E2  0E02               	movlw	high (_dist_final+12)
 13452  0010E4  22DA               	addwfc	fsr2h,f,c
 13453  0010E6  C063  FFDE         	movff	_a+2,postinc2
 13454  0010EA  C064  FFDD         	movff	_a+3,postdec2
 13455  0010EE                     i2l5743:
 13456                           
 13457                           ;main.c: 144:     if (b==3){
 13458  0010EE  0E03               	movlw	3
 13459  0010F0  185A               	xorwf	_b,w,c
 13460  0010F2  105B               	iorwf	_b+1,w,c
 13461  0010F4  A4D8               	btfss	status,2,c
 13462  0010F6  D0A4               	goto	i2l5777
 13463                           
 13464                           ;main.c: 145:         if (RB5 == 1){
 13465  0010F8  BA81               	btfsc	3969,5,c	;volatile
 13466                           
 13467                           ;main.c: 146:             TMR1ON = 1;
 13468  0010FA  80CD               	bsf	4045,0,c	;volatile
 13469                           
 13470                           ;main.c: 148:         if (RB5 == 0){
 13471                           
 13472                           ;main.c: 147:         }
 13473  0010FC  BA81               	btfsc	3969,5,c	;volatile
 13474  0010FE  D037               	goto	i2l5753
 13475                           
 13476                           ;main.c: 149:             TMR1ON = 0;
 13477  001100  90CD               	bcf	4045,0,c	;volatile
 13478                           
 13479                           ;main.c: 150:             a[2] = (TMR1L | (TMR1H<<8))/58.82;
 13480  001102  0EAE               	movlw	174
 13481  001104  6E13               	movwf	___fldiv@a,c
 13482  001106  0E47               	movlw	71
 13483  001108  6E14               	movwf	___fldiv@a+1,c
 13484  00110A  0E6B               	movlw	107
 13485  00110C  6E15               	movwf	___fldiv@a+2,c
 13486  00110E  0E42               	movlw	66
 13487  001110  6E16               	movwf	___fldiv@a+3,c
 13488  001112  50CF               	movf	4047,w,c	;volatile
 13489  001114  6E33               	movwf	(??_echo+1)& (0+255),c
 13490  001116  6A32               	clrf	??_echo& (0+255),c
 13491  001118  50CE               	movf	4046,w,c	;volatile
 13492  00111A  6E34               	movwf	(??_echo+2)& (0+255),c
 13493  00111C  6A35               	clrf	(??_echo+3)& (0+255),c
 13494  00111E  5032               	movf	??_echo,w,c
 13495  001120  1234               	iorwf	??_echo+2,f,c
 13496  001122  5033               	movf	??_echo+1,w,c
 13497  001124  1235               	iorwf	??_echo+3,f,c
 13498  001126  C034  F001         	movff	??_echo+2,___xxtofl@val
 13499  00112A  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 13500  00112E  0E00               	movlw	0
 13501  001130  BE02               	btfsc	___xxtofl@val+1,7,c
 13502  001132  0EFF               	movlw	-1
 13503  001134  6E03               	movwf	___xxtofl@val+2,c
 13504  001136  6E04               	movwf	___xxtofl@val+3,c
 13505  001138  0E01               	movlw	1
 13506  00113A  EC2B  F016         	call	___xxtofl
 13507  00113E  C001  F00F         	movff	?___xxtofl,___fldiv@b
 13508  001142  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 13509  001146  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 13510  00114A  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 13511  00114E  EC37  F00D         	call	___fldiv	;wreg free
 13512  001152  C00F  F028         	movff	?___fldiv,___fltol@f1
 13513  001156  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 13514  00115A  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 13515  00115E  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 13516  001162  EC30  F01A         	call	___fltol	;wreg free
 13517  001166  C028  F065         	movff	?___fltol,_a+4
 13518  00116A  C029  F066         	movff	?___fltol+1,_a+5
 13519  00116E                     i2l5753:
 13520                           
 13521                           ;main.c: 153:                 if (a[2]>=2 && a[2]<=200){
 13522  00116E  BE66               	btfsc	_a+5,7,c
 13523  001170  D067               	goto	i2l5777
 13524  001172  5066               	movf	_a+5,w,c
 13525  001174  E104               	bnz	i2u583_40
 13526  001176  0E02               	movlw	2
 13527  001178  5C65               	subwf	_a+4,w,c
 13528  00117A  A0D8               	btfss	status,0,c
 13529  00117C  D061               	goto	i2l5777
 13530  00117E                     i2u583_40:
 13531  00117E  BE66               	btfsc	_a+5,7,c
 13532  001180  D006               	goto	i2u584_40
 13533  001182  5066               	movf	_a+5,w,c
 13534  001184  E15D               	bnz	i2l5777
 13535  001186  0EC9               	movlw	201
 13536  001188  5C65               	subwf	_a+4,w,c
 13537  00118A  B0D8               	btfsc	status,0,c
 13538  00118C  D059               	goto	i2l5777
 13539  00118E                     i2u584_40:
 13540                           
 13541                           ;main.c: 155:                 if ((~sumf[2])&&(dist_final[2][0]!=0)&&(dist_final[2][1]!=
      +                          0)&&(dist_final[2][2]!=0)){
 13542  00118E  0442               	decf	_sumf+2,w,c
 13543  001190  B4D8               	btfsc	status,2,c
 13544  001192  D01B               	goto	i2l5769
 13545  001194  0102               	movlb	2	; () banked
 13546  001196  5168               	movf	(_dist_final+24)& (0+255),w,b
 13547  001198  1169               	iorwf	(_dist_final+25)& (0+255),w,b
 13548  00119A  B4D8               	btfsc	status,2,c
 13549  00119C  D016               	goto	i2l5769
 13550                           
 13551                           ; BSR set to: 2
 13552  00119E  516A               	movf	(_dist_final+26)& (0+255),w,b
 13553  0011A0  116B               	iorwf	(_dist_final+27)& (0+255),w,b
 13554  0011A2  B4D8               	btfsc	status,2,c
 13555  0011A4  D012               	goto	i2l5769
 13556                           
 13557                           ; BSR set to: 2
 13558  0011A6  516C               	movf	(_dist_final+28)& (0+255),w,b
 13559  0011A8  116D               	iorwf	(_dist_final+29)& (0+255),w,b
 13560  0011AA  B4D8               	btfsc	status,2,c
 13561  0011AC  D00E               	goto	i2l5769
 13562                           
 13563                           ; BSR set to: 2
 13564                           ;main.c: 156:             sum[2] = (dist_final[2][0]+dist_final[2][1]+dist_final[2][2]);
 13565  0011AE  516A               	movf	(_dist_final+26)& (0+255),w,b
 13566  0011B0  2568               	addwf	(_dist_final+24)& (0+255),w,b
 13567  0011B2  6E32               	movwf	??_echo& (0+255),c
 13568  0011B4  516B               	movf	(_dist_final+27)& (0+255),w,b
 13569  0011B6  2169               	addwfc	(_dist_final+25)& (0+255),w,b
 13570  0011B8  6E33               	movwf	(??_echo+1)& (0+255),c
 13571  0011BA  516C               	movf	(_dist_final+28)& (0+255),w,b
 13572  0011BC  2432               	addwf	??_echo,w,c
 13573  0011BE  6E3C               	movwf	_sum+4,c
 13574  0011C0  516D               	movf	(_dist_final+29)& (0+255),w,b
 13575  0011C2  2033               	addwfc	??_echo+1,w,c
 13576  0011C4  6E3D               	movwf	_sum+5,c
 13577                           
 13578                           ; BSR set to: 2
 13579                           ;main.c: 157:             sumf[2] = 1;
 13580  0011C6  0E01               	movlw	1
 13581  0011C8  6E42               	movwf	_sumf+2,c
 13582  0011CA                     i2l5769:
 13583                           
 13584                           ;main.c: 159:         if (sumf[2]){
 13585  0011CA  5042               	movf	_sumf+2,w,c
 13586  0011CC  B4D8               	btfsc	status,2,c
 13587  0011CE  D02B               	goto	i2l5775
 13588                           
 13589                           ;main.c: 160:             sum[2] = sum[2] - dist_final[2][meas] + a[2];
 13590  0011D0  90D8               	bcf	status,0,c
 13591  0011D2  3450               	rlcf	_meas,w,c	;volatile
 13592  0011D4  6ED9               	movwf	fsr2l,c
 13593  0011D6  3451               	rlcf	_meas+1,w,c	;volatile
 13594  0011D8  6EDA               	movwf	fsr2h,c
 13595  0011DA  0E68               	movlw	low (_dist_final+24)
 13596  0011DC  26D9               	addwf	fsr2l,f,c
 13597  0011DE  0E02               	movlw	high (_dist_final+24)
 13598  0011E0  22DA               	addwfc	fsr2h,f,c
 13599  0011E2  CFDE F032          	movff	postinc2,??_echo
 13600  0011E6  CFDD F033          	movff	postdec2,??_echo+1
 13601  0011EA  EE20  F03C         	lfsr	2,_sum+4
 13602  0011EE  CFDE F034          	movff	postinc2,??_echo+2
 13603  0011F2  CFDD F035          	movff	postdec2,??_echo+3
 13604  0011F6  5032               	movf	??_echo,w,c
 13605  0011F8  5E34               	subwf	??_echo+2,f,c
 13606  0011FA  5033               	movf	??_echo+1,w,c
 13607  0011FC  5A35               	subwfb	??_echo+3,f,c
 13608  0011FE  5065               	movf	_a+4,w,c
 13609  001200  2434               	addwf	??_echo+2,w,c
 13610  001202  6E3C               	movwf	_sum+4,c
 13611  001204  5066               	movf	_a+5,w,c
 13612  001206  2035               	addwfc	??_echo+3,w,c
 13613  001208  6E3D               	movwf	_sum+5,c
 13614                           
 13615                           ;main.c: 161:             dist_final[2][5] = (sum[2]/5);
 13616  00120A  C03C  F001         	movff	_sum+4,i2___awdiv@dividend
 13617  00120E  C03D  F002         	movff	_sum+5,i2___awdiv@dividend+1
 13618  001212  0E00               	movlw	0
 13619  001214  6E04               	movwf	i2___awdiv@divisor+1,c
 13620  001216  0E05               	movlw	5
 13621  001218  6E03               	movwf	i2___awdiv@divisor,c
 13622  00121A  EC08  F01C         	call	i2___awdiv	;wreg free
 13623  00121E  C001  F272         	movff	?i2___awdiv,_dist_final+34
 13624  001222  C002  F273         	movff	?i2___awdiv+1,_dist_final+35
 13625  001226                     i2l5775:
 13626                           
 13627                           ;main.c: 163:         dist_final[2][meas] = a[2];
 13628  001226  90D8               	bcf	status,0,c
 13629  001228  3450               	rlcf	_meas,w,c	;volatile
 13630  00122A  6ED9               	movwf	fsr2l,c
 13631  00122C  3451               	rlcf	_meas+1,w,c	;volatile
 13632  00122E  6EDA               	movwf	fsr2h,c
 13633  001230  0E68               	movlw	low (_dist_final+24)
 13634  001232  26D9               	addwf	fsr2l,f,c
 13635  001234  0E02               	movlw	high (_dist_final+24)
 13636  001236  22DA               	addwfc	fsr2h,f,c
 13637  001238  C065  FFDE         	movff	_a+4,postinc2
 13638  00123C  C066  FFDD         	movff	_a+5,postdec2
 13639  001240                     i2l5777:
 13640                           
 13641                           ;main.c: 166:     if (b==4){
 13642  001240  0E04               	movlw	4
 13643  001242  185A               	xorwf	_b,w,c
 13644  001244  105B               	iorwf	_b+1,w,c
 13645  001246  A4D8               	btfss	status,2,c
 13646  001248  0012               	return	
 13647                           
 13648                           ;main.c: 167:         if (RB4 == 1){
 13649  00124A  B881               	btfsc	3969,4,c	;volatile
 13650                           
 13651                           ;main.c: 168:             TMR1ON = 1;
 13652  00124C  80CD               	bsf	4045,0,c	;volatile
 13653                           
 13654                           ;main.c: 170:         if (RB4 == 0){
 13655                           
 13656                           ;main.c: 169:         }
 13657  00124E  B881               	btfsc	3969,4,c	;volatile
 13658  001250  D037               	goto	i2l5787
 13659                           
 13660                           ;main.c: 171:             TMR1ON = 0;
 13661  001252  90CD               	bcf	4045,0,c	;volatile
 13662                           
 13663                           ;main.c: 172:             a[3] = (TMR1L | (TMR1H<<8))/58.82;
 13664  001254  0EAE               	movlw	174
 13665  001256  6E13               	movwf	___fldiv@a,c
 13666  001258  0E47               	movlw	71
 13667  00125A  6E14               	movwf	___fldiv@a+1,c
 13668  00125C  0E6B               	movlw	107
 13669  00125E  6E15               	movwf	___fldiv@a+2,c
 13670  001260  0E42               	movlw	66
 13671  001262  6E16               	movwf	___fldiv@a+3,c
 13672  001264  50CF               	movf	4047,w,c	;volatile
 13673  001266  6E33               	movwf	(??_echo+1)& (0+255),c
 13674  001268  6A32               	clrf	??_echo& (0+255),c
 13675  00126A  50CE               	movf	4046,w,c	;volatile
 13676  00126C  6E34               	movwf	(??_echo+2)& (0+255),c
 13677  00126E  6A35               	clrf	(??_echo+3)& (0+255),c
 13678  001270  5032               	movf	??_echo,w,c
 13679  001272  1234               	iorwf	??_echo+2,f,c
 13680  001274  5033               	movf	??_echo+1,w,c
 13681  001276  1235               	iorwf	??_echo+3,f,c
 13682  001278  C034  F001         	movff	??_echo+2,___xxtofl@val
 13683  00127C  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 13684  001280  0E00               	movlw	0
 13685  001282  BE02               	btfsc	___xxtofl@val+1,7,c
 13686  001284  0EFF               	movlw	-1
 13687  001286  6E03               	movwf	___xxtofl@val+2,c
 13688  001288  6E04               	movwf	___xxtofl@val+3,c
 13689  00128A  0E01               	movlw	1
 13690  00128C  EC2B  F016         	call	___xxtofl
 13691  001290  C001  F00F         	movff	?___xxtofl,___fldiv@b
 13692  001294  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 13693  001298  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 13694  00129C  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 13695  0012A0  EC37  F00D         	call	___fldiv	;wreg free
 13696  0012A4  C00F  F028         	movff	?___fldiv,___fltol@f1
 13697  0012A8  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 13698  0012AC  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 13699  0012B0  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 13700  0012B4  EC30  F01A         	call	___fltol	;wreg free
 13701  0012B8  C028  F067         	movff	?___fltol,_a+6
 13702  0012BC  C029  F068         	movff	?___fltol+1,_a+7
 13703  0012C0                     i2l5787:
 13704                           
 13705                           ;main.c: 175:                 if (a[3]>=2 && a[3]<=200){
 13706  0012C0  BE68               	btfsc	_a+7,7,c
 13707  0012C2  0012               	return	
 13708  0012C4  5068               	movf	_a+7,w,c
 13709  0012C6  E104               	bnz	i2u593_40
 13710  0012C8  0E02               	movlw	2
 13711  0012CA  5C67               	subwf	_a+6,w,c
 13712  0012CC  A0D8               	btfss	status,0,c
 13713  0012CE  0012               	return	
 13714  0012D0                     i2u593_40:
 13715  0012D0  BE68               	btfsc	_a+7,7,c
 13716  0012D2  D006               	goto	i2u594_40
 13717  0012D4  5068               	movf	_a+7,w,c
 13718  0012D6  E15D               	bnz	i2l423
 13719  0012D8  0EC9               	movlw	201
 13720  0012DA  5C67               	subwf	_a+6,w,c
 13721  0012DC  B0D8               	btfsc	status,0,c
 13722  0012DE  0012               	return	
 13723  0012E0                     i2u594_40:
 13724                           
 13725                           ;main.c: 177:                 if ((~sumf[3])&&(dist_final[3][0]!=0)&&(dist_final[3][1]!=
      +                          0)&&(dist_final[3][2]!=0)){
 13726  0012E0  0443               	decf	_sumf+3,w,c
 13727  0012E2  B4D8               	btfsc	status,2,c
 13728  0012E4  D01B               	goto	i2l5803
 13729  0012E6  0102               	movlb	2	; () banked
 13730  0012E8  5174               	movf	(_dist_final+36)& (0+255),w,b
 13731  0012EA  1175               	iorwf	(_dist_final+37)& (0+255),w,b
 13732  0012EC  B4D8               	btfsc	status,2,c
 13733  0012EE  D016               	goto	i2l5803
 13734                           
 13735                           ; BSR set to: 2
 13736  0012F0  5176               	movf	(_dist_final+38)& (0+255),w,b
 13737  0012F2  1177               	iorwf	(_dist_final+39)& (0+255),w,b
 13738  0012F4  B4D8               	btfsc	status,2,c
 13739  0012F6  D012               	goto	i2l5803
 13740                           
 13741                           ; BSR set to: 2
 13742  0012F8  5178               	movf	(_dist_final+40)& (0+255),w,b
 13743  0012FA  1179               	iorwf	(_dist_final+41)& (0+255),w,b
 13744  0012FC  B4D8               	btfsc	status,2,c
 13745  0012FE  D00E               	goto	i2l5803
 13746                           
 13747                           ; BSR set to: 2
 13748                           ;main.c: 178:             sum[3] = (dist_final[3][0]+dist_final[3][1]+dist_final[3][2]);
 13749  001300  5176               	movf	(_dist_final+38)& (0+255),w,b
 13750  001302  2574               	addwf	(_dist_final+36)& (0+255),w,b
 13751  001304  6E32               	movwf	??_echo& (0+255),c
 13752  001306  5177               	movf	(_dist_final+39)& (0+255),w,b
 13753  001308  2175               	addwfc	(_dist_final+37)& (0+255),w,b
 13754  00130A  6E33               	movwf	(??_echo+1)& (0+255),c
 13755  00130C  5178               	movf	(_dist_final+40)& (0+255),w,b
 13756  00130E  2432               	addwf	??_echo,w,c
 13757  001310  6E3E               	movwf	_sum+6,c
 13758  001312  5179               	movf	(_dist_final+41)& (0+255),w,b
 13759  001314  2033               	addwfc	??_echo+1,w,c
 13760  001316  6E3F               	movwf	_sum+7,c
 13761                           
 13762                           ; BSR set to: 2
 13763                           ;main.c: 179:             sumf[3] = 1;
 13764  001318  0E01               	movlw	1
 13765  00131A  6E43               	movwf	_sumf+3,c
 13766  00131C                     i2l5803:
 13767                           
 13768                           ;main.c: 181:         if (sumf[3]){
 13769  00131C  5043               	movf	_sumf+3,w,c
 13770  00131E  B4D8               	btfsc	status,2,c
 13771  001320  D02B               	goto	i2l5809
 13772                           
 13773                           ;main.c: 182:             sum[3] = sum[3] - dist_final[3][meas] + a[3];
 13774  001322  90D8               	bcf	status,0,c
 13775  001324  3450               	rlcf	_meas,w,c	;volatile
 13776  001326  6ED9               	movwf	fsr2l,c
 13777  001328  3451               	rlcf	_meas+1,w,c	;volatile
 13778  00132A  6EDA               	movwf	fsr2h,c
 13779  00132C  0E74               	movlw	low (_dist_final+36)
 13780  00132E  26D9               	addwf	fsr2l,f,c
 13781  001330  0E02               	movlw	high (_dist_final+36)
 13782  001332  22DA               	addwfc	fsr2h,f,c
 13783  001334  CFDE F032          	movff	postinc2,??_echo
 13784  001338  CFDD F033          	movff	postdec2,??_echo+1
 13785  00133C  EE20  F03E         	lfsr	2,_sum+6
 13786  001340  CFDE F034          	movff	postinc2,??_echo+2
 13787  001344  CFDD F035          	movff	postdec2,??_echo+3
 13788  001348  5032               	movf	??_echo,w,c
 13789  00134A  5E34               	subwf	??_echo+2,f,c
 13790  00134C  5033               	movf	??_echo+1,w,c
 13791  00134E  5A35               	subwfb	??_echo+3,f,c
 13792  001350  5067               	movf	_a+6,w,c
 13793  001352  2434               	addwf	??_echo+2,w,c
 13794  001354  6E3E               	movwf	_sum+6,c
 13795  001356  5068               	movf	_a+7,w,c
 13796  001358  2035               	addwfc	??_echo+3,w,c
 13797  00135A  6E3F               	movwf	_sum+7,c
 13798                           
 13799                           ;main.c: 183:             dist_final[3][5] = (sum[3]/5);
 13800  00135C  C03E  F001         	movff	_sum+6,i2___awdiv@dividend
 13801  001360  C03F  F002         	movff	_sum+7,i2___awdiv@dividend+1
 13802  001364  0E00               	movlw	0
 13803  001366  6E04               	movwf	i2___awdiv@divisor+1,c
 13804  001368  0E05               	movlw	5
 13805  00136A  6E03               	movwf	i2___awdiv@divisor,c
 13806  00136C  EC08  F01C         	call	i2___awdiv	;wreg free
 13807  001370  C001  F27E         	movff	?i2___awdiv,_dist_final+46
 13808  001374  C002  F27F         	movff	?i2___awdiv+1,_dist_final+47
 13809  001378                     i2l5809:
 13810                           
 13811                           ;main.c: 185:         dist_final[3][meas] = a[3];
 13812  001378  90D8               	bcf	status,0,c
 13813  00137A  3450               	rlcf	_meas,w,c	;volatile
 13814  00137C  6ED9               	movwf	fsr2l,c
 13815  00137E  3451               	rlcf	_meas+1,w,c	;volatile
 13816  001380  6EDA               	movwf	fsr2h,c
 13817  001382  0E74               	movlw	low (_dist_final+36)
 13818  001384  26D9               	addwf	fsr2l,f,c
 13819  001386  0E02               	movlw	high (_dist_final+36)
 13820  001388  22DA               	addwfc	fsr2h,f,c
 13821  00138A  C067  FFDE         	movff	_a+6,postinc2
 13822  00138E  C068  FFDD         	movff	_a+7,postdec2
 13823  001392                     i2l423:
 13824  001392  0012               	return		;funcret
 13825  001394                     __end_of_echo:
 13826                           	opt callstack 0
 13827                           
 13828 ;; *************** function i2___awdiv *****************
 13829 ;; Defined at:
 13830 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
 13831 ;; Parameters:    Size  Location     Type
 13832 ;;  dividend        2    0[COMRAM] int 
 13833 ;;  divisor         2    2[COMRAM] int 
 13834 ;; Auto vars:     Size  Location     Type
 13835 ;;  __awdiv         2    6[COMRAM] int 
 13836 ;;  __awdiv         1    5[COMRAM] unsigned char 
 13837 ;;  __awdiv         1    4[COMRAM] unsigned char 
 13838 ;; Return value:  Size  Location     Type
 13839 ;;                  2    0[COMRAM] int 
 13840 ;; Registers used:
 13841 ;;		wreg, status,2, status,0
 13842 ;; Tracked objects:
 13843 ;;		On entry : 0/0
 13844 ;;		On exit  : 0/0
 13845 ;;		Unchanged: 0/0
 13846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13847 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13848 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13850 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13851 ;;Total ram usage:        8 bytes
 13852 ;; Hardware stack levels used:    1
 13853 ;; This function calls:
 13854 ;;		Nothing
 13855 ;; This function is called by:
 13856 ;;		_echo
 13857 ;; This function uses a non-reentrant model
 13858 ;;
 13859                           
 13860                           	psect	text56
 13861  003810                     __ptext56:
 13862                           	opt callstack 0
 13863  003810                     i2___awdiv:
 13864                           	opt callstack 14
 13865                           
 13866                           ;incstack = 0
 13867  003810  0E00               	movlw	0
 13868  003812  6E06               	movwf	i2___awdiv@sign,c
 13869  003814  AE04               	btfss	i2___awdiv@divisor+1,7,c
 13870  003816  D006               	goto	i2l5541
 13871  003818  6C03               	negf	i2___awdiv@divisor,c
 13872  00381A  1E04               	comf	i2___awdiv@divisor+1,f,c
 13873  00381C  B0D8               	btfsc	status,0,c
 13874  00381E  2A04               	incf	i2___awdiv@divisor+1,f,c
 13875  003820  0E01               	movlw	1
 13876  003822  6E06               	movwf	i2___awdiv@sign,c
 13877  003824                     i2l5541:
 13878  003824  AE02               	btfss	i2___awdiv@dividend+1,7,c
 13879  003826  D006               	goto	i2l5547
 13880  003828  6C01               	negf	i2___awdiv@dividend,c
 13881  00382A  1E02               	comf	i2___awdiv@dividend+1,f,c
 13882  00382C  B0D8               	btfsc	status,0,c
 13883  00382E  2A02               	incf	i2___awdiv@dividend+1,f,c
 13884  003830  0E01               	movlw	1
 13885  003832  1A06               	xorwf	i2___awdiv@sign,f,c
 13886  003834                     i2l5547:
 13887  003834  0E00               	movlw	0
 13888  003836  6E08               	movwf	i2___awdiv@quotient+1,c
 13889  003838  0E00               	movlw	0
 13890  00383A  6E07               	movwf	i2___awdiv@quotient,c
 13891  00383C  5003               	movf	i2___awdiv@divisor,w,c
 13892  00383E  1004               	iorwf	i2___awdiv@divisor+1,w,c
 13893  003840  B4D8               	btfsc	status,2,c
 13894  003842  D01C               	goto	i2l5569
 13895  003844  0E01               	movlw	1
 13896  003846  6E05               	movwf	i2___awdiv@counter,c
 13897  003848  D004               	goto	i2l5555
 13898  00384A                     i2l5553:
 13899  00384A  90D8               	bcf	status,0,c
 13900  00384C  3603               	rlcf	i2___awdiv@divisor,f,c
 13901  00384E  3604               	rlcf	i2___awdiv@divisor+1,f,c
 13902  003850  2A05               	incf	i2___awdiv@counter,f,c
 13903  003852                     i2l5555:
 13904  003852  AE04               	btfss	i2___awdiv@divisor+1,7,c
 13905  003854  D7FA               	goto	i2l5553
 13906  003856                     i2u554_40:
 13907  003856  90D8               	bcf	status,0,c
 13908  003858  3607               	rlcf	i2___awdiv@quotient,f,c
 13909  00385A  3608               	rlcf	i2___awdiv@quotient+1,f,c
 13910  00385C  5003               	movf	i2___awdiv@divisor,w,c
 13911  00385E  5C01               	subwf	i2___awdiv@dividend,w,c
 13912  003860  5004               	movf	i2___awdiv@divisor+1,w,c
 13913  003862  5802               	subwfb	i2___awdiv@dividend+1,w,c
 13914  003864  A0D8               	btfss	status,0,c
 13915  003866  D005               	goto	i2l5565
 13916  003868  5003               	movf	i2___awdiv@divisor,w,c
 13917  00386A  5E01               	subwf	i2___awdiv@dividend,f,c
 13918  00386C  5004               	movf	i2___awdiv@divisor+1,w,c
 13919  00386E  5A02               	subwfb	i2___awdiv@dividend+1,f,c
 13920  003870  8007               	bsf	i2___awdiv@quotient,0,c
 13921  003872                     i2l5565:
 13922  003872  90D8               	bcf	status,0,c
 13923  003874  3204               	rrcf	i2___awdiv@divisor+1,f,c
 13924  003876  3203               	rrcf	i2___awdiv@divisor,f,c
 13925  003878  2E05               	decfsz	i2___awdiv@counter,f,c
 13926  00387A  D7ED               	goto	i2u554_40
 13927  00387C                     i2l5569:
 13928  00387C  5006               	movf	i2___awdiv@sign,w,c
 13929  00387E  B4D8               	btfsc	status,2,c
 13930  003880  D004               	goto	i2l5573
 13931  003882  6C07               	negf	i2___awdiv@quotient,c
 13932  003884  1E08               	comf	i2___awdiv@quotient+1,f,c
 13933  003886  B0D8               	btfsc	status,0,c
 13934  003888  2A08               	incf	i2___awdiv@quotient+1,f,c
 13935  00388A                     i2l5573:
 13936  00388A  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
 13937  00388E  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 13938  003892  0012               	return		;funcret
 13939  003894                     __end_ofi2___awdiv:
 13940                           	opt callstack 0
 13941                           
 13942 ;; *************** function ___xxtofl *****************
 13943 ;; Defined at:
 13944 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 13945 ;; Parameters:    Size  Location     Type
 13946 ;;  sign            1    wreg     unsigned char 
 13947 ;;  val             4    0[COMRAM] long 
 13948 ;; Auto vars:     Size  Location     Type
 13949 ;;  sign            1    8[COMRAM] unsigned char 
 13950 ;;  arg             4   10[COMRAM] unsigned long 
 13951 ;;  exp             1    9[COMRAM] unsigned char 
 13952 ;; Return value:  Size  Location     Type
 13953 ;;                  4    0[COMRAM] unsigned char 
 13954 ;; Registers used:
 13955 ;;		wreg, status,2, status,0
 13956 ;; Tracked objects:
 13957 ;;		On entry : 0/0
 13958 ;;		On exit  : 0/0
 13959 ;;		Unchanged: 0/0
 13960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13961 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13962 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13963 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13964 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13965 ;;Total ram usage:       14 bytes
 13966 ;; Hardware stack levels used:    1
 13967 ;; This function calls:
 13968 ;;		Nothing
 13969 ;; This function is called by:
 13970 ;;		_echo
 13971 ;; This function uses a non-reentrant model
 13972 ;;
 13973                           
 13974                           	psect	text57
 13975  002C56                     __ptext57:
 13976                           	opt callstack 0
 13977  002C56                     ___xxtofl:
 13978                           	opt callstack 14
 13979                           
 13980                           ;incstack = 0
 13981                           ;___xxtofl@sign stored from wreg
 13982  002C56  6E09               	movwf	___xxtofl@sign,c
 13983  002C58  5009               	movf	___xxtofl@sign,w,c
 13984  002C5A  A4D8               	btfss	status,2,c
 13985  002C5C  AE04               	btfss	___xxtofl@val+3,7,c
 13986  002C5E  D01A               	goto	i2l1387
 13987  002C60  C001  F005         	movff	___xxtofl@val,??___xxtofl
 13988  002C64  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 13989  002C68  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 13990  002C6C  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 13991  002C70  1E05               	comf	??___xxtofl,f,c
 13992  002C72  1E06               	comf	??___xxtofl+1,f,c
 13993  002C74  1E07               	comf	??___xxtofl+2,f,c
 13994  002C76  1E08               	comf	??___xxtofl+3,f,c
 13995  002C78  2A05               	incf	??___xxtofl,f,c
 13996  002C7A  0E00               	movlw	0
 13997  002C7C  2206               	addwfc	??___xxtofl+1,f,c
 13998  002C7E  2207               	addwfc	??___xxtofl+2,f,c
 13999  002C80  2208               	addwfc	??___xxtofl+3,f,c
 14000  002C82  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 14001  002C86  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 14002  002C8A  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 14003  002C8E  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 14004  002C92  D008               	goto	i2l5493
 14005  002C94                     i2l1387:
 14006  002C94  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 14007  002C98  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 14008  002C9C  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 14009  002CA0  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 14010  002CA4                     i2l5493:
 14011  002CA4  5001               	movf	___xxtofl@val,w,c
 14012  002CA6  1002               	iorwf	___xxtofl@val+1,w,c
 14013  002CA8  1003               	iorwf	___xxtofl@val+2,w,c
 14014  002CAA  1004               	iorwf	___xxtofl@val+3,w,c
 14015  002CAC  A4D8               	btfss	status,2,c
 14016  002CAE  D009               	goto	i2l5499
 14017  002CB0  0E00               	movlw	0
 14018  002CB2  6E01               	movwf	?___xxtofl,c
 14019  002CB4  0E00               	movlw	0
 14020  002CB6  6E02               	movwf	?___xxtofl+1,c
 14021  002CB8  0E00               	movlw	0
 14022  002CBA  6E03               	movwf	?___xxtofl+2,c
 14023  002CBC  0E00               	movlw	0
 14024  002CBE  6E04               	movwf	?___xxtofl+3,c
 14025  002CC0  0012               	return	
 14026  002CC2                     i2l5499:
 14027  002CC2  0E96               	movlw	150
 14028  002CC4  6E0A               	movwf	___xxtofl@exp,c
 14029  002CC6  D006               	goto	i2l5503
 14030  002CC8                     i2l5501:
 14031  002CC8  2A0A               	incf	___xxtofl@exp,f,c
 14032  002CCA  90D8               	bcf	status,0,c
 14033  002CCC  320E               	rrcf	___xxtofl@arg+3,f,c
 14034  002CCE  320D               	rrcf	___xxtofl@arg+2,f,c
 14035  002CD0  320C               	rrcf	___xxtofl@arg+1,f,c
 14036  002CD2  320B               	rrcf	___xxtofl@arg,f,c
 14037  002CD4                     i2l5503:
 14038  002CD4  0E00               	movlw	0
 14039  002CD6  140B               	andwf	___xxtofl@arg,w,c
 14040  002CD8  6E05               	movwf	??___xxtofl& (0+255),c
 14041  002CDA  0E00               	movlw	0
 14042  002CDC  140C               	andwf	___xxtofl@arg+1,w,c
 14043  002CDE  6E06               	movwf	(??___xxtofl+1)& (0+255),c
 14044  002CE0  0E00               	movlw	0
 14045  002CE2  140D               	andwf	___xxtofl@arg+2,w,c
 14046  002CE4  6E07               	movwf	(??___xxtofl+2)& (0+255),c
 14047  002CE6  0EFE               	movlw	254
 14048  002CE8  140E               	andwf	___xxtofl@arg+3,w,c
 14049  002CEA  6E08               	movwf	(??___xxtofl+3)& (0+255),c
 14050  002CEC  5005               	movf	??___xxtofl,w,c
 14051  002CEE  1006               	iorwf	??___xxtofl+1,w,c
 14052  002CF0  1007               	iorwf	??___xxtofl+2,w,c
 14053  002CF2  1008               	iorwf	??___xxtofl+3,w,c
 14054  002CF4  B4D8               	btfsc	status,2,c
 14055  002CF6  D00D               	goto	i2l1394
 14056  002CF8  D7E7               	goto	i2l5501
 14057  002CFA                     i2l5505:
 14058  002CFA  2A0A               	incf	___xxtofl@exp,f,c
 14059  002CFC  0E01               	movlw	1
 14060  002CFE  260B               	addwf	___xxtofl@arg,f,c
 14061  002D00  0E00               	movlw	0
 14062  002D02  220C               	addwfc	___xxtofl@arg+1,f,c
 14063  002D04  220D               	addwfc	___xxtofl@arg+2,f,c
 14064  002D06  220E               	addwfc	___xxtofl@arg+3,f,c
 14065  002D08  90D8               	bcf	status,0,c
 14066  002D0A  320E               	rrcf	___xxtofl@arg+3,f,c
 14067  002D0C  320D               	rrcf	___xxtofl@arg+2,f,c
 14068  002D0E  320C               	rrcf	___xxtofl@arg+1,f,c
 14069  002D10  320B               	rrcf	___xxtofl@arg,f,c
 14070  002D12                     i2l1394:
 14071  002D12  0E00               	movlw	0
 14072  002D14  140B               	andwf	___xxtofl@arg,w,c
 14073  002D16  6E05               	movwf	??___xxtofl& (0+255),c
 14074  002D18  0E00               	movlw	0
 14075  002D1A  140C               	andwf	___xxtofl@arg+1,w,c
 14076  002D1C  6E06               	movwf	(??___xxtofl+1)& (0+255),c
 14077  002D1E  0E00               	movlw	0
 14078  002D20  140D               	andwf	___xxtofl@arg+2,w,c
 14079  002D22  6E07               	movwf	(??___xxtofl+2)& (0+255),c
 14080  002D24  0EFF               	movlw	255
 14081  002D26  140E               	andwf	___xxtofl@arg+3,w,c
 14082  002D28  6E08               	movwf	(??___xxtofl+3)& (0+255),c
 14083  002D2A  5005               	movf	??___xxtofl,w,c
 14084  002D2C  1006               	iorwf	??___xxtofl+1,w,c
 14085  002D2E  1007               	iorwf	??___xxtofl+2,w,c
 14086  002D30  1008               	iorwf	??___xxtofl+3,w,c
 14087  002D32  B4D8               	btfsc	status,2,c
 14088  002D34  D007               	goto	i2l5513
 14089  002D36  D7E1               	goto	i2l5505
 14090  002D38                     i2l5511:
 14091  002D38  060A               	decf	___xxtofl@exp,f,c
 14092  002D3A  90D8               	bcf	status,0,c
 14093  002D3C  360B               	rlcf	___xxtofl@arg,f,c
 14094  002D3E  360C               	rlcf	___xxtofl@arg+1,f,c
 14095  002D40  360D               	rlcf	___xxtofl@arg+2,f,c
 14096  002D42  360E               	rlcf	___xxtofl@arg+3,f,c
 14097  002D44                     i2l5513:
 14098  002D44  BE0D               	btfsc	___xxtofl@arg+2,7,c
 14099  002D46  D003               	goto	i2u547_40
 14100  002D48  0E02               	movlw	2
 14101  002D4A  600A               	cpfslt	___xxtofl@exp,c
 14102  002D4C  D7F5               	goto	i2l5511
 14103  002D4E                     i2u547_40:
 14104  002D4E  A00A               	btfss	___xxtofl@exp,0,c
 14105  002D50  9E0D               	bcf	___xxtofl@arg+2,7,c
 14106  002D52  90D8               	bcf	status,0,c
 14107  002D54  320A               	rrcf	___xxtofl@exp,f,c
 14108  002D56  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 14109  002D5A  6A06               	clrf	(??___xxtofl+1)& (0+255),c
 14110  002D5C  6A07               	clrf	(??___xxtofl+2)& (0+255),c
 14111  002D5E  6A08               	clrf	(??___xxtofl+3)& (0+255),c
 14112  002D60  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 14113  002D64  6A07               	clrf	??___xxtofl+2,c
 14114  002D66  6A06               	clrf	??___xxtofl+1,c
 14115  002D68  6A05               	clrf	??___xxtofl,c
 14116  002D6A  5005               	movf	??___xxtofl,w,c
 14117  002D6C  120B               	iorwf	___xxtofl@arg,f,c
 14118  002D6E  5006               	movf	??___xxtofl+1,w,c
 14119  002D70  120C               	iorwf	___xxtofl@arg+1,f,c
 14120  002D72  5007               	movf	??___xxtofl+2,w,c
 14121  002D74  120D               	iorwf	___xxtofl@arg+2,f,c
 14122  002D76  5008               	movf	??___xxtofl+3,w,c
 14123  002D78  120E               	iorwf	___xxtofl@arg+3,f,c
 14124  002D7A  5009               	movf	___xxtofl@sign,w,c
 14125  002D7C  A4D8               	btfss	status,2,c
 14126  002D7E  AE04               	btfss	___xxtofl@val+3,7,c
 14127  002D80  D001               	goto	i2l5529
 14128  002D82  8E0E               	bsf	___xxtofl@arg+3,7,c
 14129  002D84                     i2l5529:
 14130  002D84  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 14131  002D88  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 14132  002D8C  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 14133  002D90  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 14134  002D94  0012               	return		;funcret
 14135  002D96                     __end_of___xxtofl:
 14136                           	opt callstack 0
 14137                           
 14138 ;; *************** function ___fltol *****************
 14139 ;; Defined at:
 14140 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 14141 ;; Parameters:    Size  Location     Type
 14142 ;;  f1              4   39[COMRAM] unsigned char 
 14143 ;; Auto vars:     Size  Location     Type
 14144 ;;  exp1            1   48[COMRAM] unsigned char 
 14145 ;;  sign1           1   47[COMRAM] unsigned char 
 14146 ;; Return value:  Size  Location     Type
 14147 ;;                  4   39[COMRAM] long 
 14148 ;; Registers used:
 14149 ;;		wreg, status,2, status,0
 14150 ;; Tracked objects:
 14151 ;;		On entry : 0/0
 14152 ;;		On exit  : 0/0
 14153 ;;		Unchanged: 0/0
 14154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14155 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14156 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14157 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14158 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14159 ;;Total ram usage:       10 bytes
 14160 ;; Hardware stack levels used:    1
 14161 ;; This function calls:
 14162 ;;		Nothing
 14163 ;; This function is called by:
 14164 ;;		_echo
 14165 ;; This function uses a non-reentrant model
 14166 ;;
 14167                           
 14168                           	psect	text58
 14169  003460                     __ptext58:
 14170                           	opt callstack 0
 14171  003460                     ___fltol:
 14172                           	opt callstack 14
 14173                           
 14174                           ;incstack = 0
 14175  003460  342A               	rlcf	___fltol@f1+2,w,c
 14176  003462  342B               	rlcf	___fltol@f1+3,w,c
 14177  003464  6E31               	movwf	___fltol@exp1,c
 14178  003466  5031               	movf	___fltol@exp1,w,c
 14179  003468  A4D8               	btfss	status,2,c
 14180  00346A  D009               	goto	i2l5433
 14181  00346C                     i2u531_40:
 14182  00346C  0E00               	movlw	0
 14183  00346E  6E28               	movwf	?___fltol,c
 14184  003470  0E00               	movlw	0
 14185  003472  6E29               	movwf	?___fltol+1,c
 14186  003474  0E00               	movlw	0
 14187  003476  6E2A               	movwf	?___fltol+2,c
 14188  003478  0E00               	movlw	0
 14189  00347A  6E2B               	movwf	?___fltol+3,c
 14190  00347C  0012               	return	
 14191  00347E                     i2l5433:
 14192  00347E  C028  F02C         	movff	___fltol@f1,??___fltol
 14193  003482  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
 14194  003486  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
 14195  00348A  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
 14196  00348E  0E20               	movlw	32
 14197  003490  D005               	goto	i2u532_40
 14198  003492                     i2u532_45:
 14199  003492  90D8               	bcf	status,0,c
 14200  003494  322F               	rrcf	??___fltol+3,f,c
 14201  003496  322E               	rrcf	??___fltol+2,f,c
 14202  003498  322D               	rrcf	??___fltol+1,f,c
 14203  00349A  322C               	rrcf	??___fltol,f,c
 14204  00349C                     i2u532_40:
 14205  00349C  2EE8               	decfsz	wreg,f,c
 14206  00349E  D7F9               	goto	i2u532_45
 14207  0034A0  502C               	movf	??___fltol,w,c
 14208  0034A2  6E30               	movwf	___fltol@sign1,c
 14209  0034A4  8E2A               	bsf	___fltol@f1+2,7,c
 14210  0034A6  0EFF               	movlw	255
 14211  0034A8  1628               	andwf	___fltol@f1,f,c
 14212  0034AA  0EFF               	movlw	255
 14213  0034AC  1629               	andwf	___fltol@f1+1,f,c
 14214  0034AE  0EFF               	movlw	255
 14215  0034B0  162A               	andwf	___fltol@f1+2,f,c
 14216  0034B2  0E00               	movlw	0
 14217  0034B4  162B               	andwf	___fltol@f1+3,f,c
 14218  0034B6  0E96               	movlw	150
 14219  0034B8  5E31               	subwf	___fltol@exp1,f,c
 14220  0034BA  AE31               	btfss	___fltol@exp1,7,c
 14221  0034BC  D00D               	goto	i2l5453
 14222  0034BE  5031               	movf	___fltol@exp1,w,c
 14223  0034C0  0A80               	xorlw	128
 14224  0034C2  0F97               	addlw	151
 14225  0034C4  A0D8               	btfss	status,0,c
 14226  0034C6  D7D2               	goto	i2u531_40
 14227  0034C8                     i2l5449:
 14228  0034C8  90D8               	bcf	status,0,c
 14229  0034CA  322B               	rrcf	___fltol@f1+3,f,c
 14230  0034CC  322A               	rrcf	___fltol@f1+2,f,c
 14231  0034CE  3229               	rrcf	___fltol@f1+1,f,c
 14232  0034D0  3228               	rrcf	___fltol@f1,f,c
 14233  0034D2  3E31               	incfsz	___fltol@exp1,f,c
 14234  0034D4  D7F9               	goto	i2l5449
 14235  0034D6  D00D               	goto	i2u536_40
 14236  0034D8                     i2l5453:
 14237  0034D8  0E1F               	movlw	31
 14238  0034DA  6431               	cpfsgt	___fltol@exp1,c
 14239  0034DC  D007               	goto	i2l5461
 14240  0034DE  D7C6               	goto	i2u531_40
 14241  0034E0                     i2l5459:
 14242  0034E0  90D8               	bcf	status,0,c
 14243  0034E2  3628               	rlcf	___fltol@f1,f,c
 14244  0034E4  3629               	rlcf	___fltol@f1+1,f,c
 14245  0034E6  362A               	rlcf	___fltol@f1+2,f,c
 14246  0034E8  362B               	rlcf	___fltol@f1+3,f,c
 14247  0034EA  0631               	decf	___fltol@exp1,f,c
 14248  0034EC                     i2l5461:
 14249  0034EC  5031               	movf	___fltol@exp1,w,c
 14250  0034EE  A4D8               	btfss	status,2,c
 14251  0034F0  D7F7               	goto	i2l5459
 14252  0034F2                     i2u536_40:
 14253  0034F2  5030               	movf	___fltol@sign1,w,c
 14254  0034F4  B4D8               	btfsc	status,2,c
 14255  0034F6  D008               	goto	i2l5467
 14256  0034F8  1E2B               	comf	___fltol@f1+3,f,c
 14257  0034FA  1E2A               	comf	___fltol@f1+2,f,c
 14258  0034FC  1E29               	comf	___fltol@f1+1,f,c
 14259  0034FE  6C28               	negf	___fltol@f1,c
 14260  003500  0E00               	movlw	0
 14261  003502  2229               	addwfc	___fltol@f1+1,f,c
 14262  003504  222A               	addwfc	___fltol@f1+2,f,c
 14263  003506  222B               	addwfc	___fltol@f1+3,f,c
 14264  003508                     i2l5467:
 14265  003508  C028  F028         	movff	___fltol@f1,?___fltol
 14266  00350C  C029  F029         	movff	___fltol@f1+1,?___fltol+1
 14267  003510  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
 14268  003514  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
 14269  003518  0012               	return		;funcret
 14270  00351A                     __end_of___fltol:
 14271                           	opt callstack 0
 14272                           
 14273 ;; *************** function ___fldiv *****************
 14274 ;; Defined at:
 14275 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 14276 ;; Parameters:    Size  Location     Type
 14277 ;;  b               4   14[COMRAM] long 
 14278 ;;  a               4   18[COMRAM] long 
 14279 ;; Auto vars:     Size  Location     Type
 14280 ;;  grs             4   33[COMRAM] unsigned long 
 14281 ;;  rem             4   26[COMRAM] unsigned long 
 14282 ;;  new_exp         2   31[COMRAM] short 
 14283 ;;  aexp            1   38[COMRAM] unsigned char 
 14284 ;;  bexp            1   37[COMRAM] unsigned char 
 14285 ;;  sign            1   30[COMRAM] unsigned char 
 14286 ;; Return value:  Size  Location     Type
 14287 ;;                  4   14[COMRAM] unsigned char 
 14288 ;; Registers used:
 14289 ;;		wreg, status,2, status,0
 14290 ;; Tracked objects:
 14291 ;;		On entry : 0/0
 14292 ;;		On exit  : 0/0
 14293 ;;		Unchanged: 0/0
 14294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14295 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14296 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14297 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14298 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14299 ;;Total ram usage:       25 bytes
 14300 ;; Hardware stack levels used:    1
 14301 ;; This function calls:
 14302 ;;		Nothing
 14303 ;; This function is called by:
 14304 ;;		_echo
 14305 ;; This function uses a non-reentrant model
 14306 ;;
 14307                           
 14308                           	psect	text59
 14309  001A6E                     __ptext59:
 14310                           	opt callstack 0
 14311  001A6E                     ___fldiv:
 14312                           	opt callstack 14
 14313                           
 14314                           ;incstack = 0
 14315  001A6E  5012               	movf	___fldiv@b+3,w,c
 14316  001A70  0B80               	andlw	128
 14317  001A72  6E1F               	movwf	___fldiv@sign,c
 14318  001A74  5012               	movf	___fldiv@b+3,w,c
 14319  001A76  2412               	addwf	___fldiv@b+3,w,c
 14320  001A78  6E26               	movwf	___fldiv@bexp,c
 14321  001A7A  BE11               	btfsc	___fldiv@b+2,7,c
 14322  001A7C  8026               	bsf	___fldiv@bexp,0,c
 14323  001A7E  5026               	movf	___fldiv@bexp,w,c
 14324  001A80  B4D8               	btfsc	status,2,c
 14325  001A82  D00D               	goto	i2l5261
 14326  001A84  2826               	incf	___fldiv@bexp,w,c
 14327  001A86  A4D8               	btfss	status,2,c
 14328  001A88  D008               	goto	i2l5257
 14329  001A8A  0E00               	movlw	0
 14330  001A8C  6E0F               	movwf	___fldiv@b,c
 14331  001A8E  0E00               	movlw	0
 14332  001A90  6E10               	movwf	___fldiv@b+1,c
 14333  001A92  0E00               	movlw	0
 14334  001A94  6E11               	movwf	___fldiv@b+2,c
 14335  001A96  0E00               	movlw	0
 14336  001A98  6E12               	movwf	___fldiv@b+3,c
 14337  001A9A                     i2l5257:
 14338  001A9A  8E11               	bsf	___fldiv@b+2,7,c
 14339  001A9C  D006               	goto	L6
 14340  001A9E                     i2l5261:
 14341  001A9E  0E00               	movlw	0
 14342  001AA0  6E0F               	movwf	___fldiv@b,c
 14343  001AA2  0E00               	movlw	0
 14344  001AA4  6E10               	movwf	___fldiv@b+1,c
 14345  001AA6  0E00               	movlw	0
 14346  001AA8  6E11               	movwf	___fldiv@b+2,c
 14347  001AAA                     L6:
 14348  001AAA  0E00               	movlw	0
 14349  001AAC  6E12               	movwf	___fldiv@b+3,c
 14350  001AAE  5016               	movf	___fldiv@a+3,w,c
 14351  001AB0  0B80               	andlw	128
 14352  001AB2  1A1F               	xorwf	___fldiv@sign,f,c
 14353  001AB4  5016               	movf	___fldiv@a+3,w,c
 14354  001AB6  2416               	addwf	___fldiv@a+3,w,c
 14355  001AB8  6E27               	movwf	___fldiv@aexp,c
 14356  001ABA  BE15               	btfsc	___fldiv@a+2,7,c
 14357  001ABC  8027               	bsf	___fldiv@aexp,0,c
 14358  001ABE  5027               	movf	___fldiv@aexp,w,c
 14359  001AC0  B4D8               	btfsc	status,2,c
 14360  001AC2  D00D               	goto	i2l5281
 14361  001AC4  2827               	incf	___fldiv@aexp,w,c
 14362  001AC6  A4D8               	btfss	status,2,c
 14363  001AC8  D008               	goto	i2l5277
 14364  001ACA  0E00               	movlw	0
 14365  001ACC  6E13               	movwf	___fldiv@a,c
 14366  001ACE  0E00               	movlw	0
 14367  001AD0  6E14               	movwf	___fldiv@a+1,c
 14368  001AD2  0E00               	movlw	0
 14369  001AD4  6E15               	movwf	___fldiv@a+2,c
 14370  001AD6  0E00               	movlw	0
 14371  001AD8  6E16               	movwf	___fldiv@a+3,c
 14372  001ADA                     i2l5277:
 14373  001ADA  8E15               	bsf	___fldiv@a+2,7,c
 14374  001ADC  D006               	goto	L7
 14375  001ADE                     i2l5281:
 14376  001ADE  0E00               	movlw	0
 14377  001AE0  6E13               	movwf	___fldiv@a,c
 14378  001AE2  0E00               	movlw	0
 14379  001AE4  6E14               	movwf	___fldiv@a+1,c
 14380  001AE6  0E00               	movlw	0
 14381  001AE8  6E15               	movwf	___fldiv@a+2,c
 14382  001AEA                     L7:
 14383  001AEA  0E00               	movlw	0
 14384  001AEC  6E16               	movwf	___fldiv@a+3,c
 14385  001AEE  5013               	movf	___fldiv@a,w,c
 14386  001AF0  1014               	iorwf	___fldiv@a+1,w,c
 14387  001AF2  1015               	iorwf	___fldiv@a+2,w,c
 14388  001AF4  1016               	iorwf	___fldiv@a+3,w,c
 14389  001AF6  A4D8               	btfss	status,2,c
 14390  001AF8  D017               	goto	i2l5295
 14391  001AFA  0E00               	movlw	0
 14392  001AFC  6E0F               	movwf	___fldiv@b,c
 14393  001AFE  0E00               	movlw	0
 14394  001B00  6E10               	movwf	___fldiv@b+1,c
 14395  001B02  0E00               	movlw	0
 14396  001B04  6E11               	movwf	___fldiv@b+2,c
 14397  001B06  0E00               	movlw	0
 14398  001B08  6E12               	movwf	___fldiv@b+3,c
 14399  001B0A  0E80               	movlw	128
 14400  001B0C  1211               	iorwf	___fldiv@b+2,f,c
 14401  001B0E  0E7F               	movlw	127
 14402  001B10  1212               	iorwf	___fldiv@b+3,f,c
 14403  001B12                     i2l5289:
 14404  001B12  501F               	movf	___fldiv@sign,w,c
 14405  001B14  1212               	iorwf	___fldiv@b+3,f,c
 14406  001B16  C00F  F00F         	movff	___fldiv@b,?___fldiv
 14407  001B1A  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
 14408  001B1E  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
 14409  001B22  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
 14410  001B26  0012               	return	
 14411  001B28                     i2l5295:
 14412  001B28  5026               	movf	___fldiv@bexp,w,c
 14413  001B2A  A4D8               	btfss	status,2,c
 14414  001B2C  D009               	goto	i2l5303
 14415  001B2E  0E00               	movlw	0
 14416  001B30  6E0F               	movwf	?___fldiv,c
 14417  001B32  0E00               	movlw	0
 14418  001B34  6E10               	movwf	?___fldiv+1,c
 14419  001B36  0E00               	movlw	0
 14420  001B38  6E11               	movwf	?___fldiv+2,c
 14421  001B3A  0E00               	movlw	0
 14422  001B3C  6E12               	movwf	?___fldiv+3,c
 14423  001B3E  0012               	return	
 14424  001B40                     i2l5303:
 14425  001B40  5027               	movf	___fldiv@aexp,w,c
 14426  001B42  C026  F017         	movff	___fldiv@bexp,??___fldiv
 14427  001B46  6A18               	clrf	(??___fldiv+1)& (0+255),c
 14428  001B48  5E17               	subwf	??___fldiv,f,c
 14429  001B4A  0E00               	movlw	0
 14430  001B4C  5A18               	subwfb	??___fldiv+1,f,c
 14431  001B4E  0E7F               	movlw	127
 14432  001B50  2417               	addwf	??___fldiv,w,c
 14433  001B52  6E20               	movwf	___fldiv@new_exp,c
 14434  001B54  0E00               	movlw	0
 14435  001B56  2018               	addwfc	??___fldiv+1,w,c
 14436  001B58  6E21               	movwf	___fldiv@new_exp+1,c
 14437  001B5A  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
 14438  001B5E  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
 14439  001B62  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
 14440  001B66  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
 14441  001B6A  0E00               	movlw	0
 14442  001B6C  6E0F               	movwf	___fldiv@b,c
 14443  001B6E  0E00               	movlw	0
 14444  001B70  6E10               	movwf	___fldiv@b+1,c
 14445  001B72  0E00               	movlw	0
 14446  001B74  6E11               	movwf	___fldiv@b+2,c
 14447  001B76  0E00               	movlw	0
 14448  001B78  6E12               	movwf	___fldiv@b+3,c
 14449  001B7A  0E00               	movlw	0
 14450  001B7C  6E22               	movwf	___fldiv@grs,c
 14451  001B7E  0E00               	movlw	0
 14452  001B80  6E23               	movwf	___fldiv@grs+1,c
 14453  001B82  0E00               	movlw	0
 14454  001B84  6E24               	movwf	___fldiv@grs+2,c
 14455  001B86  0E00               	movlw	0
 14456  001B88  6E25               	movwf	___fldiv@grs+3,c
 14457  001B8A  0E00               	movlw	0
 14458  001B8C  6E27               	movwf	___fldiv@aexp,c
 14459  001B8E  D028               	goto	i2l1316
 14460  001B90                     i2l5313:
 14461  001B90  5027               	movf	___fldiv@aexp,w,c
 14462  001B92  B4D8               	btfsc	status,2,c
 14463  001B94  D011               	goto	i2l5321
 14464  001B96  90D8               	bcf	status,0,c
 14465  001B98  361B               	rlcf	___fldiv@rem,f,c
 14466  001B9A  361C               	rlcf	___fldiv@rem+1,f,c
 14467  001B9C  361D               	rlcf	___fldiv@rem+2,f,c
 14468  001B9E  361E               	rlcf	___fldiv@rem+3,f,c
 14469  001BA0  90D8               	bcf	status,0,c
 14470  001BA2  360F               	rlcf	___fldiv@b,f,c
 14471  001BA4  3610               	rlcf	___fldiv@b+1,f,c
 14472  001BA6  3611               	rlcf	___fldiv@b+2,f,c
 14473  001BA8  3612               	rlcf	___fldiv@b+3,f,c
 14474  001BAA  BE25               	btfsc	___fldiv@grs+3,7,c
 14475  001BAC  800F               	bsf	___fldiv@b,0,c
 14476  001BAE  90D8               	bcf	status,0,c
 14477  001BB0  3622               	rlcf	___fldiv@grs,f,c
 14478  001BB2  3623               	rlcf	___fldiv@grs+1,f,c
 14479  001BB4  3624               	rlcf	___fldiv@grs+2,f,c
 14480  001BB6  3625               	rlcf	___fldiv@grs+3,f,c
 14481  001BB8                     i2l5321:
 14482  001BB8  5013               	movf	___fldiv@a,w,c
 14483  001BBA  5C1B               	subwf	___fldiv@rem,w,c
 14484  001BBC  5014               	movf	___fldiv@a+1,w,c
 14485  001BBE  581C               	subwfb	___fldiv@rem+1,w,c
 14486  001BC0  5015               	movf	___fldiv@a+2,w,c
 14487  001BC2  581D               	subwfb	___fldiv@rem+2,w,c
 14488  001BC4  5016               	movf	___fldiv@a+3,w,c
 14489  001BC6  581E               	subwfb	___fldiv@rem+3,w,c
 14490  001BC8  A0D8               	btfss	status,0,c
 14491  001BCA  D009               	goto	i2l5327
 14492  001BCC  8C25               	bsf	___fldiv@grs+3,6,c
 14493  001BCE  5013               	movf	___fldiv@a,w,c
 14494  001BD0  5E1B               	subwf	___fldiv@rem,f,c
 14495  001BD2  5014               	movf	___fldiv@a+1,w,c
 14496  001BD4  5A1C               	subwfb	___fldiv@rem+1,f,c
 14497  001BD6  5015               	movf	___fldiv@a+2,w,c
 14498  001BD8  5A1D               	subwfb	___fldiv@rem+2,f,c
 14499  001BDA  5016               	movf	___fldiv@a+3,w,c
 14500  001BDC  5A1E               	subwfb	___fldiv@rem+3,f,c
 14501  001BDE                     i2l5327:
 14502  001BDE  2A27               	incf	___fldiv@aexp,f,c
 14503  001BE0                     i2l1316:
 14504  001BE0  0E19               	movlw	25
 14505  001BE2  6427               	cpfsgt	___fldiv@aexp,c
 14506  001BE4  D7D5               	goto	i2l5313
 14507  001BE6  501B               	movf	___fldiv@rem,w,c
 14508  001BE8  101C               	iorwf	___fldiv@rem+1,w,c
 14509  001BEA  101D               	iorwf	___fldiv@rem+2,w,c
 14510  001BEC  101E               	iorwf	___fldiv@rem+3,w,c
 14511  001BEE  B4D8               	btfsc	status,2,c
 14512  001BF0  D011               	goto	i2l5339
 14513  001BF2  8022               	bsf	___fldiv@grs,0,c
 14514  001BF4  D00F               	goto	i2l5339
 14515  001BF6                     i2l5333:
 14516  001BF6  90D8               	bcf	status,0,c
 14517  001BF8  360F               	rlcf	___fldiv@b,f,c
 14518  001BFA  3610               	rlcf	___fldiv@b+1,f,c
 14519  001BFC  3611               	rlcf	___fldiv@b+2,f,c
 14520  001BFE  3612               	rlcf	___fldiv@b+3,f,c
 14521  001C00  BE25               	btfsc	___fldiv@grs+3,7,c
 14522  001C02  800F               	bsf	___fldiv@b,0,c
 14523  001C04  90D8               	bcf	status,0,c
 14524  001C06  3622               	rlcf	___fldiv@grs,f,c
 14525  001C08  3623               	rlcf	___fldiv@grs+1,f,c
 14526  001C0A  3624               	rlcf	___fldiv@grs+2,f,c
 14527  001C0C  3625               	rlcf	___fldiv@grs+3,f,c
 14528  001C0E  0620               	decf	___fldiv@new_exp,f,c
 14529  001C10  A0D8               	btfss	status,0,c
 14530  001C12  0621               	decf	___fldiv@new_exp+1,f,c
 14531  001C14                     i2l5339:
 14532  001C14  AE11               	btfss	___fldiv@b+2,7,c
 14533  001C16  D7EF               	goto	i2l5333
 14534  001C18  0E00               	movlw	0
 14535  001C1A  6E27               	movwf	___fldiv@aexp,c
 14536  001C1C  AE25               	btfss	___fldiv@grs+3,7,c
 14537  001C1E  D017               	goto	i2l1327
 14538  001C20  0EFF               	movlw	255
 14539  001C22  1422               	andwf	___fldiv@grs,w,c
 14540  001C24  6E17               	movwf	??___fldiv& (0+255),c
 14541  001C26  0EFF               	movlw	255
 14542  001C28  1423               	andwf	___fldiv@grs+1,w,c
 14543  001C2A  6E18               	movwf	(??___fldiv+1)& (0+255),c
 14544  001C2C  0EFF               	movlw	255
 14545  001C2E  1424               	andwf	___fldiv@grs+2,w,c
 14546  001C30  6E19               	movwf	(??___fldiv+2)& (0+255),c
 14547  001C32  0E7F               	movlw	127
 14548  001C34  1425               	andwf	___fldiv@grs+3,w,c
 14549  001C36  6E1A               	movwf	(??___fldiv+3)& (0+255),c
 14550  001C38  5017               	movf	??___fldiv,w,c
 14551  001C3A  1018               	iorwf	??___fldiv+1,w,c
 14552  001C3C  1019               	iorwf	??___fldiv+2,w,c
 14553  001C3E  101A               	iorwf	??___fldiv+3,w,c
 14554  001C40  B4D8               	btfsc	status,2,c
 14555  001C42  D003               	goto	i2l1328
 14556  001C44                     i2u518_40:
 14557  001C44  0E01               	movlw	1
 14558  001C46  6E27               	movwf	___fldiv@aexp,c
 14559  001C48  D002               	goto	i2l1327
 14560  001C4A                     i2l1328:
 14561  001C4A  B00F               	btfsc	___fldiv@b,0,c
 14562  001C4C  D7FB               	goto	i2u518_40
 14563  001C4E                     i2l1327:
 14564  001C4E  5027               	movf	___fldiv@aexp,w,c
 14565  001C50  B4D8               	btfsc	status,2,c
 14566  001C52  D01F               	goto	i2l5359
 14567  001C54  0E01               	movlw	1
 14568  001C56  260F               	addwf	___fldiv@b,f,c
 14569  001C58  0E00               	movlw	0
 14570  001C5A  2210               	addwfc	___fldiv@b+1,f,c
 14571  001C5C  2211               	addwfc	___fldiv@b+2,f,c
 14572  001C5E  2212               	addwfc	___fldiv@b+3,f,c
 14573  001C60  A012               	btfss	___fldiv@b+3,0,c
 14574  001C62  D017               	goto	i2l5359
 14575  001C64  C00F  F017         	movff	___fldiv@b,??___fldiv
 14576  001C68  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
 14577  001C6C  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
 14578  001C70  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
 14579  001C74  341A               	rlcf	??___fldiv+3,w,c
 14580  001C76  321A               	rrcf	??___fldiv+3,f,c
 14581  001C78  3219               	rrcf	??___fldiv+2,f,c
 14582  001C7A  3218               	rrcf	??___fldiv+1,f,c
 14583  001C7C  3217               	rrcf	??___fldiv,f,c
 14584  001C7E  C017  F00F         	movff	??___fldiv,___fldiv@b
 14585  001C82  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
 14586  001C86  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
 14587  001C8A  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
 14588  001C8E  4A20               	infsnz	___fldiv@new_exp,f,c
 14589  001C90  2A21               	incf	___fldiv@new_exp+1,f,c
 14590  001C92                     i2l5359:
 14591  001C92  BE21               	btfsc	___fldiv@new_exp+1,7,c
 14592  001C94  D010               	goto	i2l5363
 14593  001C96  5021               	movf	___fldiv@new_exp+1,w,c
 14594  001C98  E103               	bnz	i2u522_40
 14595  001C9A  2820               	incf	___fldiv@new_exp,w,c
 14596  001C9C  A0D8               	btfss	status,0,c
 14597  001C9E  D00B               	goto	i2l5363
 14598  001CA0                     i2u522_40:
 14599  001CA0  0E00               	movlw	0
 14600  001CA2  6E21               	movwf	___fldiv@new_exp+1,c
 14601  001CA4  6820               	setf	___fldiv@new_exp,c
 14602  001CA6  0E00               	movlw	0
 14603  001CA8  6E0F               	movwf	___fldiv@b,c
 14604  001CAA  0E00               	movlw	0
 14605  001CAC  6E10               	movwf	___fldiv@b+1,c
 14606  001CAE  0E00               	movlw	0
 14607  001CB0  6E11               	movwf	___fldiv@b+2,c
 14608  001CB2  0E00               	movlw	0
 14609  001CB4  6E12               	movwf	___fldiv@b+3,c
 14610  001CB6                     i2l5363:
 14611  001CB6  BE21               	btfsc	___fldiv@new_exp+1,7,c
 14612  001CB8  D005               	goto	i2u523_40
 14613  001CBA  5021               	movf	___fldiv@new_exp+1,w,c
 14614  001CBC  E111               	bnz	i2l5367
 14615  001CBE  0420               	decf	___fldiv@new_exp,w,c
 14616  001CC0  B0D8               	btfsc	status,0,c
 14617  001CC2  D00E               	goto	i2l5367
 14618  001CC4                     i2u523_40:
 14619  001CC4  0E00               	movlw	0
 14620  001CC6  6E21               	movwf	___fldiv@new_exp+1,c
 14621  001CC8  0E00               	movlw	0
 14622  001CCA  6E20               	movwf	___fldiv@new_exp,c
 14623  001CCC  0E00               	movlw	0
 14624  001CCE  6E0F               	movwf	___fldiv@b,c
 14625  001CD0  0E00               	movlw	0
 14626  001CD2  6E10               	movwf	___fldiv@b+1,c
 14627  001CD4  0E00               	movlw	0
 14628  001CD6  6E11               	movwf	___fldiv@b+2,c
 14629  001CD8  0E00               	movlw	0
 14630  001CDA  6E12               	movwf	___fldiv@b+3,c
 14631  001CDC  0E00               	movlw	0
 14632  001CDE  6E1F               	movwf	___fldiv@sign,c
 14633  001CE0                     i2l5367:
 14634  001CE0  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
 14635  001CE4  A026               	btfss	___fldiv@bexp,0,c
 14636  001CE6  D002               	goto	i2l5373
 14637  001CE8  8E11               	bsf	___fldiv@b+2,7,c
 14638  001CEA  D001               	goto	i2l5375
 14639  001CEC                     i2l5373:
 14640  001CEC  9E11               	bcf	___fldiv@b+2,7,c
 14641  001CEE                     i2l5375:
 14642  001CEE  90D8               	bcf	status,0,c
 14643  001CF0  3026               	rrcf	___fldiv@bexp,w,c
 14644  001CF2  6E12               	movwf	___fldiv@b+3,c
 14645  001CF4  D70E               	goto	i2l5289
 14646  001CF6                     __end_of___fldiv:
 14647                           	opt callstack 0
 14648                           
 14649                           	psect	rparam
 14650  0000                     
 14651                           	psect	temp
 14652  00006E                     btemp:
 14653                           	opt callstack 0
 14654  00006E                     	ds	1
 14655  0000                     int$flags	set	btemp
 14656  0000                     wtemp8	set	btemp+1
 14657  0000                     ttemp5	set	btemp+1
 14658  0000                     ttemp6	set	btemp+4
 14659  0000                     ttemp7	set	btemp+8
 14660                           tosu	equ	0xFFF
 14661                           tosh	equ	0xFFE
 14662                           tosl	equ	0xFFD
 14663                           stkptr	equ	0xFFC
 14664                           pclatu	equ	0xFFB
 14665                           pclath	equ	0xFFA
 14666                           pcl	equ	0xFF9
 14667                           tblptru	equ	0xFF8
 14668                           tblptrh	equ	0xFF7
 14669                           tblptrl	equ	0xFF6
 14670                           tablat	equ	0xFF5
 14671                           prodh	equ	0xFF4
 14672                           prodl	equ	0xFF3
 14673                           indf0	equ	0xFEF
 14674                           postinc0	equ	0xFEE
 14675                           postdec0	equ	0xFED
 14676                           preinc0	equ	0xFEC
 14677                           plusw0	equ	0xFEB
 14678                           fsr0h	equ	0xFEA
 14679                           fsr0l	equ	0xFE9
 14680                           wreg	equ	0xFE8
 14681                           indf1	equ	0xFE7
 14682                           postinc1	equ	0xFE6
 14683                           postdec1	equ	0xFE5
 14684                           preinc1	equ	0xFE4
 14685                           plusw1	equ	0xFE3
 14686                           fsr1h	equ	0xFE2
 14687                           fsr1l	equ	0xFE1
 14688                           bsr	equ	0xFE0
 14689                           indf2	equ	0xFDF
 14690                           postinc2	equ	0xFDE
 14691                           postdec2	equ	0xFDD
 14692                           preinc2	equ	0xFDC
 14693                           plusw2	equ	0xFDB
 14694                           fsr2h	equ	0xFDA
 14695                           fsr2l	equ	0xFD9
 14696                           status	equ	0xFD8


Data Sizes:
    Strings     587
    Constant    23
    Data        5
    BSS         238
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     55     109
    BANK0           128    127     128
    BANK1           256    202     230
    BANK2           256      0     160
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_63(CODE[10]), STR_62(CODE[11]), STR_61(CODE[11]), STR_60(CODE[12]), 
		 -> STR_59(CODE[14]), STR_58(CODE[17]), STR_57(CODE[12]), STR_56(CODE[10]), 
		 -> STR_55(CODE[10]), STR_54(CODE[13]), STR_53(CODE[8]), STR_52(CODE[3]), 
		 -> STR_51(CODE[17]), STR_50(CODE[15]), STR_49(CODE[15]), STR_48(CODE[12]), 
		 -> STR_47(CODE[17]), STR_46(CODE[12]), STR_45(CODE[15]), STR_44(CODE[18]), 
		 -> STR_43(CODE[17]), STR_42(CODE[12]), STR_41(CODE[15]), STR_40(CODE[18]), 
		 -> STR_39(CODE[17]), STR_38(CODE[14]), STR_37(CODE[14]), STR_36(CODE[17]), 
		 -> STR_35(CODE[3]), STR_34(CODE[9]), STR_33(CODE[16]), STR_32(CODE[3]), 
		 -> STR_31(CODE[9]), STR_30(CODE[17]), STR_29(CODE[15]), STR_28(CODE[15]), 
		 -> STR_27(CODE[12]), STR_26(CODE[10]), STR_25(CODE[15]), STR_24(CODE[12]), 
		 -> STR_23(CODE[10]), STR_22(CODE[16]), STR_21(CODE[12]), STR_20(CODE[11]), 
		 -> STR_19(CODE[13]), STR_18(CODE[8]), STR_17(CODE[10]), STR_16(CODE[17]), 
		 -> STR_15(CODE[10]), STR_14(CODE[16]), STR_13(CODE[10]), STR_12(CODE[16]), 
		 -> STR_11(CODE[10]), STR_10(CODE[17]), STR_9(CODE[5]), STR_8(CODE[10]), 
		 -> STR_7(CODE[14]), STR_6(CODE[6]), STR_5(CODE[10]), STR_4(CODE[10]), 
		 -> STR_3(CODE[11]), STR_2(CODE[13]), STR_1(CODE[10]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1750_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_63(CODE[10]), STR_62(CODE[11]), STR_61(CODE[11]), STR_60(CODE[12]), 
		 -> STR_59(CODE[14]), STR_58(CODE[17]), STR_57(CODE[12]), STR_56(CODE[10]), 
		 -> STR_55(CODE[10]), STR_54(CODE[13]), STR_53(CODE[8]), STR_52(CODE[3]), 
		 -> STR_51(CODE[17]), STR_50(CODE[15]), STR_49(CODE[15]), STR_48(CODE[12]), 
		 -> STR_47(CODE[17]), STR_46(CODE[12]), STR_45(CODE[15]), STR_44(CODE[18]), 
		 -> STR_43(CODE[17]), STR_42(CODE[12]), STR_41(CODE[15]), STR_40(CODE[18]), 
		 -> STR_39(CODE[17]), STR_38(CODE[14]), STR_37(CODE[14]), STR_36(CODE[17]), 
		 -> STR_35(CODE[3]), STR_34(CODE[9]), STR_33(CODE[16]), STR_32(CODE[3]), 
		 -> STR_31(CODE[9]), STR_30(CODE[17]), STR_29(CODE[15]), STR_28(CODE[15]), 
		 -> STR_27(CODE[12]), STR_26(CODE[10]), STR_25(CODE[15]), STR_24(CODE[12]), 
		 -> STR_23(CODE[10]), STR_22(CODE[16]), STR_21(CODE[12]), STR_20(CODE[11]), 
		 -> STR_19(CODE[13]), STR_18(CODE[8]), STR_17(CODE[10]), STR_16(CODE[17]), 
		 -> STR_15(CODE[10]), STR_14(CODE[16]), STR_13(CODE[10]), STR_12(CODE[16]), 
		 -> STR_11(CODE[10]), STR_10(CODE[17]), STR_9(CODE[5]), STR_8(CODE[10]), 
		 -> STR_7(CODE[14]), STR_6(CODE[6]), STR_5(CODE[10]), STR_4(CODE[10]), 
		 -> STR_3(CODE[11]), STR_2(CODE[13]), STR_1(CODE[10]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_63(CODE[10]), STR_62(CODE[11]), STR_61(CODE[11]), STR_60(CODE[12]), 
		 -> STR_59(CODE[14]), STR_58(CODE[17]), STR_57(CODE[12]), STR_56(CODE[10]), 
		 -> STR_55(CODE[10]), STR_54(CODE[13]), STR_53(CODE[8]), STR_52(CODE[3]), 
		 -> STR_51(CODE[17]), STR_50(CODE[15]), STR_49(CODE[15]), STR_48(CODE[12]), 
		 -> STR_47(CODE[17]), STR_46(CODE[12]), STR_45(CODE[15]), STR_44(CODE[18]), 
		 -> STR_43(CODE[17]), STR_42(CODE[12]), STR_41(CODE[15]), STR_40(CODE[18]), 
		 -> STR_39(CODE[17]), STR_38(CODE[14]), STR_37(CODE[14]), STR_36(CODE[17]), 
		 -> STR_35(CODE[3]), STR_34(CODE[9]), STR_33(CODE[16]), STR_32(CODE[3]), 
		 -> STR_31(CODE[9]), STR_30(CODE[17]), STR_29(CODE[15]), STR_28(CODE[15]), 
		 -> STR_27(CODE[12]), STR_26(CODE[10]), STR_25(CODE[15]), STR_24(CODE[12]), 
		 -> STR_23(CODE[10]), STR_22(CODE[16]), STR_21(CODE[12]), STR_20(CODE[11]), 
		 -> STR_19(CODE[13]), STR_18(CODE[8]), STR_17(CODE[10]), STR_16(CODE[17]), 
		 -> STR_15(CODE[10]), STR_14(CODE[16]), STR_13(CODE[10]), STR_12(CODE[16]), 
		 -> STR_11(CODE[10]), STR_10(CODE[17]), STR_9(CODE[5]), STR_8(CODE[10]), 
		 -> STR_7(CODE[14]), STR_6(CODE[6]), STR_5(CODE[10]), STR_4(CODE[10]), 
		 -> STR_3(CODE[11]), STR_2(CODE[13]), STR_1(CODE[10]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_63(CODE[10]), STR_62(CODE[11]), STR_61(CODE[11]), STR_60(CODE[12]), 
		 -> STR_59(CODE[14]), STR_58(CODE[17]), STR_57(CODE[12]), STR_56(CODE[10]), 
		 -> STR_55(CODE[10]), STR_54(CODE[13]), STR_53(CODE[8]), STR_52(CODE[3]), 
		 -> STR_51(CODE[17]), STR_50(CODE[15]), STR_49(CODE[15]), STR_48(CODE[12]), 
		 -> STR_47(CODE[17]), STR_46(CODE[12]), STR_45(CODE[15]), STR_44(CODE[18]), 
		 -> STR_43(CODE[17]), STR_42(CODE[12]), STR_41(CODE[15]), STR_40(CODE[18]), 
		 -> STR_39(CODE[17]), STR_38(CODE[14]), STR_37(CODE[14]), STR_36(CODE[17]), 
		 -> STR_35(CODE[3]), STR_34(CODE[9]), STR_33(CODE[16]), STR_32(CODE[3]), 
		 -> STR_31(CODE[9]), STR_30(CODE[17]), STR_29(CODE[15]), STR_28(CODE[15]), 
		 -> STR_27(CODE[12]), STR_26(CODE[10]), STR_25(CODE[15]), STR_24(CODE[12]), 
		 -> STR_23(CODE[10]), STR_22(CODE[16]), STR_21(CODE[12]), STR_20(CODE[11]), 
		 -> STR_19(CODE[13]), STR_18(CODE[8]), STR_17(CODE[10]), STR_16(CODE[17]), 
		 -> STR_15(CODE[10]), STR_14(CODE[16]), STR_13(CODE[10]), STR_12(CODE[16]), 
		 -> STR_11(CODE[10]), STR_10(CODE[17]), STR_9(CODE[5]), STR_8(CODE[10]), 
		 -> STR_7(CODE[14]), STR_6(CODE[6]), STR_5(CODE[10]), STR_4(CODE[10]), 
		 -> STR_3(CODE[11]), STR_2(CODE[13]), STR_1(CODE[10]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    min@array	PTR int  size(2) Largest target is 8
		 -> a(COMRAM[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_echo
    _echo->___fltol
    ___fltol->___fldiv
    ___fldiv->___xxtofl

Critical Paths under _main in BANK0

    _main->_UI_main
    _main->_number_deploy
    _ultrasonic_main->_print_echo
    _print_echo->_printf
    _start->_I2C_Master_Init
    _number_deploy->_printf
    _brake->_printf
    _backwards->_I2C_Master_Write
    _stepper2_back->_full_drive
    _stepper2->_full_drive
    _stepper->_full_drive
    _full_drive->_printf
    _servo->_servoRotate0
    _servo->_servoRotate180
    _UI_main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_send_byte
    _abs->___aomod
    _atoi->_isspace
    _initLCD->_lcdInst
    _lcdInst->_send_byte
    _send_byte->_send_nibble
    _send_nibble->_pulse_e
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_UI_main
    _actuators_main->_stepper

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               112   112      0  299164
                                             90 BANK1    112   112      0
                            _UI_main
                             ___wmul
                     _actuators_main
                          _backwards
                              _brake
                            _initLCD
                            _lcdInst
                      _number_deploy
                             _printf
                              _start
                    _ultrasonic_main
 ---------------------------------------------------------------------------------
 (1) _ultrasonic_main                                     14    12      2   47736
                                            124 BANK0      2     0      2
                                              0 BANK1     12    12      0
                                _abs
                            _lcdInst
                                _min
                         _print_echo
                             _printf
                               _trig
 ---------------------------------------------------------------------------------
 (2) _trig                                                 2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _print_echo                                           1     1      0   23233
                                            123 BANK0      1     1      0
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _min                                                 11     7      4     722
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 (1) _start                                                0     0      0    2013
                    _I2C_Master_Init
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _number_deploy                                       12     8      4   25184
                                            123 BANK0      4     0      4
                                              0 BANK1      8     8      0
                            ___awdiv
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1245
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _brake                                                2     2      0   24589
                                            123 BANK0      2     2      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _backwards                                            0     0      0    1291
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _actuators_main                                      10     4      6  145738
                                             18 BANK1     10     4      6
                            _initLCD
                            _lcdInst
                             _printf
                              _servo
                            _stepper
                           _stepper2
                      _stepper2_back
                        _system_init
 ---------------------------------------------------------------------------------
 (2) _system_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _stepper2_back                                        8     6      2   47474
                                              0 BANK1      8     6      2
                         _full_drive
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _stepper2                                            14    12      2   47759
                                              0 BANK1     14    12      2
                         _full_drive
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _stepper                                             18    14      4   24659
                                              0 BANK1     18    14      4
                         _full_drive
 ---------------------------------------------------------------------------------
 (3) _full_drive                                           4     2      2   23984
                                            123 BANK0      4     2      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _servo                                                2     2      0    1404
                                              5 BANK0      2     2      0
                       _servoRotate0
                     _servoRotate180
 ---------------------------------------------------------------------------------
 (3) _servoRotate180                                       5     3      2     657
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _servoRotate0                                         5     3      2     747
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _UI_main                                             94    90      4   26760
                                            123 BANK0      4     0      4
                                              0 BANK1     90    90      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___llmod
                            _initLCD
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              14     4     10   23075
                                            109 BANK0     14     4     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   17312
                                            101 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6   16767
                                             70 BANK0     31    25      6
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    5847
                                             31 BANK0     39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     512
                                              6 BANK0      8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     191
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     191
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     191
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6173
                                             31 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3817
                                             20 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1602
                                             13 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1102
                                              4 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0     158
                                              3 BANK0      1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     273
                                             18 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              0 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1895
                                              7 BANK0     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     281
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     792
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     350
                                              4 BANK0      1     1      0
                            _lcdInst
                          _send_byte
                        _send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcdInst                                              1     1      0     158
                                              3 BANK0      1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (10) _send_byte                                           1     1      0     127
                                              2 BANK0      1     1      0
                        _send_nibble
 ---------------------------------------------------------------------------------
 (11) _send_nibble                                         1     1      0      65
                                              1 BANK0      1     1      0
                            _pulse_e
 ---------------------------------------------------------------------------------
 (12) _pulse_e                                             1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     412
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1291
                                              1 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      2     2      0      65
                                              1 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     722
                                             13 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     421
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _ISR                                                 2     2      0    3522
                                             53 COMRAM     2     2      0
                               _echo
 ---------------------------------------------------------------------------------
 (16) _echo                                                4     4      0    3522
                                             49 COMRAM     4     4      0
                            ___fldiv
                            ___fltol
                           ___xxtofl
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (17) i2___awdiv                                           8     4      4     508
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (17) ___xxtofl                                           14    10      4     626
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (17) ___fltol                                            10     6      4     533
                                             39 COMRAM    10     6      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (17) ___fldiv                                            25    17      8    1855
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UI_main
     _I2C_Master_Init
       ___lldiv
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     ___llmod
     _initLCD
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _send_byte
         _send_nibble
           _pulse_e
       _send_nibble
         _pulse_e
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
   ___wmul
   _actuators_main
     _initLCD
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _send_byte
         _send_nibble
           _pulse_e
       _send_nibble
         _pulse_e
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
     _servo
       _servoRotate0
       _servoRotate180
     _stepper
       _full_drive
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _toupper
                   _islower
     _stepper2
       _full_drive
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _toupper
                   _islower
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _toupper
                 _islower
     _stepper2_back
       _full_drive
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _toupper
                   _islower
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _toupper
                 _islower
     _system_init
   _backwards
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _brake
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
   _initLCD
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _send_byte
       _send_nibble
         _pulse_e
     _send_nibble
       _pulse_e
   _lcdInst
     _send_byte
       _send_nibble
         _pulse_e
   _number_deploy
     ___awdiv
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _fputc
           _putch
             _send_byte
               _send_nibble
                 _pulse_e
         _isdigit
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
           _toupper
             _islower
   _start
     _I2C_Master_Init
       ___lldiv
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _ultrasonic_main
     _abs
       ___aomod (ARG)
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _min
     _print_echo
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _toupper
                 _islower
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
     _trig

 _ISR (ROOT)
   _echo
     ___fldiv
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     i2___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      A0       9       62.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100     CA      E6       7       89.8%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     7F      80       5      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     37      6D       1       86.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     273      34        0.0%
DATA                 0      0     273       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Apr 08 19:25:58 2019

                  ___fldiv@aexp 0027                    ___fldiv@bexp 0026                               _a 0061  
                             _b 005A                               _i 01DB                    ___fldiv@sign 001F  
                   __CFG_CPD$ON 000000                    ___awdiv@sign 0085             servoRotate180@servo 0080  
           ___wmul@multiplicand 0082                     __CFG_BORV$3 000000                 ??_number_deploy 0100  
             stepper2@direction 010D                   servoRotate0@i 0083                    __CFG_CP0$OFF 000000  
                  __CFG_CP1$OFF 000000                    __CFG_CP2$OFF 000000                    __CFG_CP3$OFF 000000  
                   __CFG_OSC$HS 000000             __end_of_system_init 3CDA                             l122 32CC  
                           l140 327C                             l125 3320                             l134 31DC  
               _ultrasonic_main 2582                             l128 336A                             l137 3234  
                           l519 0290                             l640 1D6A                             l464 26D6  
                           l642 1D72                             l629 369A                             l557 0AEE  
                           l665 1F5C                             l667 1F64                             l759 37FE  
                           _GIE 007F97                    __CFG_CPB$OFF 000000                             _RB2 007C0A  
                           _RC1 007C11                             _RB3 007C0B                             _RC2 007C12  
                           _RD0 007C18                             _RB4 007C0C                             _RD1 007C19  
                           _RB5 007C0D                             _RB6 007C0E                             _RB7 007C0F  
                           _ISR 0008          __size_of_stepper2_back 00A0                             _abs 3C74  
                           _cnt 01E3                             _pad 366A                             _min 2EBC  
                           _sum 0038                  stepper2_back@i 0106                             wreg 000FE8  
                  __CFG_LVP$OFF 000000                            ?_ISR 0001                    ___fltol@exp1 0031  
                  __CFG_WDT$OFF 000000                            ?_abs 0092                            l1152 39C8  
                          l1407 3C9E                            l1505 3B7A                            l1438 2C4C  
                          l7013 16A8                            ?_pad 0094                            l7023 16F0  
                          l7019 16E4                            l7051 3ACA                            l8011 2210  
                          l8003 21CA                            l7029 1708                            l8021 225A  
                          l8023 2264                            l8007 21FC                            l7049 3AA2  
                          l8121 015E                            l6603 3D7A                            l8035 22B0  
                          ?_min 0080                            l6701 2AB4                            l6605 3D80  
                          l8213 0378                            l7309 19D8                            l7229 18B6  
                          l7173 17B6                            l8053 237A                            l6623 3682  
                          l6705 2ACA                            l6721 2DC4                            l6633 36BE  
                          l7371 37B0                            l6731 2E16                            l6627 3692  
                          l8307 0808                            l8171 0270                            l8091 00BC  
                          l7347 1A58                            l7267 1940                            l7507 299C  
                          l7523 30EC                            l8403 08F8                            l7373 37BC  
                          l6901 2B70                            l6709 2AF0                            l6741 2E74  
                          l6725 2DE8                            l6637 36EA                            l6629 36A4  
                          l8309 0816                            l8237 051A                            l8181 02B0  
                          l8149 01EA                            l7189 1822                            l7533 3134  
                          l7383 37F0                            l6911 2B8E                            l6815 1EFC  
                          l8263 06CC                            l7463 28A8                            l7543 3180  
                          l7527 3104                            l7615 2FE0                            l6913 2BB6  
                          l6745 2E9A                            l6737 2E5E                            l6729 2E02  
                          l6585 391E                            l6833 1F7A                            l8521 0CD6  
                          l7803 39BA                            l6907 2B80                            l6691 2A58  
                          l6683 2A1E                            l6595 3C0E                            l6819 1F14  
                          l8291 0780                            l8259 06A6                            l7547 3198  
                          l7571 3624                            l7731 2EFC                            l7715 254C  
                          l7707 2508                            l7627 301A                            l8419 0952  
                          l6757 3BBC                            l6917 2BEC                            l6909 2B88  
                          l6677 29F6                            l6781 1D8C                            l6861 205C  
                          l6941 13DA                            l8197 0310                            l7493 2946  
                          l7477 28E6                            l7469 28CE                            l7901 2874  
                          l7821 2788                            l7637 304E                            l8525 0D22  
                          l8517 0CC6                            l8429 0982                            l6599 3C26  
                          l6767 1D4E                            l6847 1FCE                            l6839 1FAC  
                          l6943 13DC                            l8287 0778                            l7743 2FAA  
                          l7647 3082                            l8535 0D82                            l8463 0A54  
                          l8471 0A8E                            l8447 0A0E                            l8543 0DAC  
                          l6689 2A44                            l6785 1D9C                            l6961 13FC  
                          l6953 13F4                            l6945 13EC                            l8297 079A  
                          l7761 372C                            l7745 2FAE                            l7729 2EF2  
                          l7657 30B6                            l8529 0D32                            l8481 0AD6  
                          l6891 2B26                            l6795 1E96                            l7499 296C  
                          l7755 371C                            l7691 2490                            l7683 245C  
                          l7675 2418                            l7931 260E                            l8539 0D88  
                          l8563 0E44                            l8475 0AB0                            l8395 089C  
                          l6893 2B2A                            l6885 214A                            l6869 20D4  
                          l6981 14D2                            l6965 1406                            l6957 13F8  
                          l6949 13F0                            l7669 23EA                            l7925 25F6  
                          l8469 0A7A                            l6983 14E0                            l6967 1448  
                          l7767 3742                            l7783 3774                            l7951 2680  
                          l7927 25FE                            l7769 374A                            l7795 3986  
                          l6979 14B4                            l7787 3782                            l7779 376A  
                          l7699 24D4                            l7955 26AE                            l7963 26C6  
                          l7797 3992                            l6999 15DA                            l7879 284C  
                          l7969 26DC                            l7997 2190                            STR_1 FFD9  
                          STR_2 FF0A                            STR_3 FF74                            STR_4 FFD9  
                          STR_5 FFCF                            STR_6 FFF4                            STR_7 FEE2  
                          STR_8 FFD9                            STR_9 FFFA                            _LATA 000F89  
                          _LATB 000F8A                            _LATC 000F8B                            _LATD 000F8C  
                          _LATE 000F8D                            u7011 2A24                            u7030 2A5C  
                          _RBIE 007F93                            u7200 1D86                            _RBIF 007F90  
                          u7130 3BB8                            u7210 1EA6                            u8010 293E  
                          u7140 1D20                            u7300 1F50                            u8020 296C  
                          u8100 2FDE                            u7230 1EC8                            u7150 1D22  
                          u8030 2994                            u7231 1EC6                            u7240 1ED6  
                          u7400 20E6                            u7320 1FCA                            u8040 29C2  
                          u8200 2428                            u7090 2E1A                            u7250 1EDA  
                          u7330 2000                            u8210 2438                            u7500 2C1E  
                          u7180 1D60                            u7420 2108                            u7340 2002  
                          u8300 255C                            u8220 246C                            u9100 08B6  
                          u7421 2106                            u9101 08B4                            u7270 1EE6  
                          u7430 2116                            u8310 256C                            u8230 247C  
                          u8150 30CC                            u6800 395E                            u7440 211A  
                          u7360 203A                            u7600 1528                            u8320 2EE2  
                          u8240 24A0                            u8160 23BC                            u9200 0AEA  
                          u7370 203C                            u8090 364C                            u8250 24B0  
                          u8170 23CC                            u6900 3D36                            u7620 155C  
                          u7700 330E                            u8420 374E                            u8260 24E4  
                          u8180 23FA                            u7470 2B6C                            u6910 3D38  
                          u6830 3D04                            u7390 20B0                            u8270 24F4  
                          u8190 240A                            u6920 3C6C                            u6840 3D06  
                          u7640 160E                            u7720 3358                            u7800 32B8  
                          u8360 2F6A                            u8280 2518                            u8520 2678  
                          u9160 0A2C                            u9080 0880                            u7490 2C1C  
                          u6850 3C84                            u6930 3C6E                            u8610 2220  
                          u8370 2F90                            u8290 2528                            u8530 2690  
                          u9170 0A3C                            u7395 209E                            u9307 0C42  
                          u9075 086E                            u8460 3996                            u6780 3916  
                          u6940 3B62                            u7580 151A                            u7740 33A4  
                          u8620 2230                            u9180 0A8E                            u6765 3DC8  
                          u9317 0C7E                            u9077 0870                            u7910 37C0  
                          u6766 3DCA                            u6950 3B64                            u7590 151C  
                          u8710 238A                            u8630 2240                            u8550 26DC  
                          u9190 0A9E                            u9407 26EA                            u9327 0D94  
                          u9247 0910                            u9095 08A4                            u7760 3222  
                          u8640 2250                            u9417 2716                            u9337 0DBE  
                          u9257 093A                            u9097 08A6                            u6970 3D68  
                          u8810 0200                            u9507 23A2                            u9427 2FF6  
                          u9347 0DE2                            u9267 0964                            u6980 3D6A  
                          u8900 039A                            u7780 326A                            u8660 227C  
                          u8580 21C0                            u8901 0398                            u9517 2326  
                          u9437 300C                            u9357 0E02                            u9277 0998  
                          u8670 228C                            u8590 21F2                            u7935 3A04  
                          u9607 3148                            u9527 235A                            u9447 302A  
                          u9367 0E26                            u9287 09CA                            u7960 28A0  
                          u8680 229C                            u7945 3DEC                            u9617 175E  
                          u9537 3582                            u9457 3040                            u9377 2594  
                          u9297 0B7A                            u7946 3DEE                            u7970 28CE  
                          u8690 22AC                            u9707 181A                            u9627 1772  
                          u9547 35B6                            u9467 305E                            u9387 25BE  
                          u8860 02AC                            u7980 28DE                            u9717 1844  
                          u9637 1786                            u9557 274E                            u9477 3074  
                          u9397 2646                            u8950 081C                            u7990 290C  
                          u9807 1936                            u9727 185E                            u9647 179A  
                          u9567 277A                            u9487 3092                            u9817 1970  
                          u9737 1878                            u9657 17AE                            u9577 27E4  
                          u9497 30A8                            u8890 038A                            u9907 1A50  
                          u9827 1988                            u9747 1892                            u9667 17CA  
                          u9587 280E                            u9917 33DE                            u9837 19A0  
                          u9757 18AC                            u9677 17DE                            u9597 35E6  
                          u9927 342C                            u9847 19B8                            u9767 18CE  
                          u9687 17F2                            u9937 31E2                            u9857 19D0  
                          u9777 18E8                            u9697 1806                            u9947 31F2  
                          u9867 19F0                            u9787 1902                            u9957 3206  
                          u9877 1A08                            u9797 191C                            u9967 3238  
                          u9887 1A20                            u9977 324E                            u9897 1A38  
                          u9987 3286                            u9997 329A                            _Pole 0200  
            main@poles_detected 01C4                     main@t_count 01BE                            abs@a 0092  
                          _data 005E                            _echo 0E50                            _dbuf 0280  
                          _disp 01DD                            _atoi 2B12                            _main 0826  
                          _dtoa 1CF6                            _meas 0050                            _keys FD9D  
                          _send 006D                            _tick 0056                            _prec 004C  
                          _sens 0058                            _temp 00FF                            _time 01D2  
                          _nout 0048                            pad@i 009B                            pad@p 0098  
                          fsr1h 000FE2                            fsr2h 000FDA                            indf2 000FDF  
                          fsr1l 000FE1                            pad@w 009D                            fsr2l 000FD9  
                          _trig 2FCC                            _sumf 0040                            btemp 006E  
                          min@i 0089                            _xtoa 1F3E                            prodh 000FF4  
                          prodl 000FF3                            start 000E         __size_of_actuators_main 0150  
                 __CFG_IESO$OFF 000000                 ___fldiv@new_exp 0020                 __end_of_UI_main 0826  
               servoRotate180@i 0083                   __CFG_MCLRE$ON 000000                    main@act_done 01B6  
                  ___param_bank 000000                           ??_ISR 0036                           ??_abs 0094  
                         ??_pad 009A                           ??_min 0084           actuators_main@act_cnt 011A  
         I2C_Master_Read@ackBit 0081                ?_I2C_Master_Init 008D                ?_I2C_Master_Read 0001  
              ?_I2C_Master_Wait 0001                ?_I2C_Master_Stop 0001                           ?_echo 0001  
                 ___fltol@sign1 0030                 __end_of___aodiv 2B12                           ?_atoi 0087  
                         ?_main 0001                           ?_dtoa 009F                 __end_of___aomod 2EBC  
               __end_of___fldiv 1CF6                 __end_of___awdiv 378C                           _EEADR 000FA9  
                         STR_10 FDE8                           STR_11 FF7F                           STR_20 FF5E  
                         STR_12 FE4D                           STR_13 FF89                           STR_21 FF23  
                         STR_14 FE5D                           STR_22 FE3D                           STR_30 FDC6  
                         STR_31 FFE3                           STR_23 FFC5                           STR_15 FF93  
                         STR_32 FEC3                           STR_24 FF47                           STR_16 FDF9  
                         STR_40 FDB4                           STR_33 FE0B                           STR_17 FF9D  
                         STR_41 FE7C                           STR_25 FE6D                           STR_34 FFE3  
                         STR_26 FFC5                           STR_18 FFEC                           STR_42 FF3B  
                         STR_50 FEA9                           STR_51 FDC6                           STR_43 FE1B  
                         STR_35 FEC3                           STR_27 FF47                           STR_19 FEF0  
                         STR_28 FE6D                           STR_52 FEC3                           STR_44 FDB4  
                         STR_60 FF2F                           STR_36 FE0A                           STR_45 FE7C  
                         STR_53 FF02                           STR_61 FF53                           STR_37 FED4  
                         STR_29 FE8B                           STR_46 FF3B                           STR_62 FF69  
                         STR_54 FEFD                           STR_38 FEC6                           STR_55 FFBB  
                         STR_63 FFB1                           STR_39 FE1B                           STR_47 FDD7  
                         STR_56 FFA7                           STR_48 FF17                           STR_57 FF23  
                         STR_49 FE9A                           STR_58 FE2C                           STR_59 FEB8  
               __end_of___fltol 351A                           ?_trig 0001                 __end_of___lldiv 3810  
                         u10007 32D8                           u10017 32E4                           u10107 0228  
                         u10027 32F2                           u10117 02C8                           u10037 332A  
                         u10207 3DAE                           u10127 0328                           u10047 333E  
                         u10217 3DB8                           u10137 03B4                           u10057 3374  
                         u10147 0540                           u10067 3386                           u10157 070E  
                         u10077 007A                           u10167 389C                           u10087 011E  
                         u10177 38B6                           u10097 0192                           u10187 38C8  
               ___awdiv@divisor 0082                           u10197 38EC                           ?_xtoa 009F  
                         _T1CON 000FCD                 __end_of___llmod 39DA                           i2l423 1392  
                         i2l396 3BF6                 ___awdiv@counter 0084                    vfpfcnvrt@fmt 00C8  
                  vfpfcnvrt@llu 00D8                           _TMR1H 000FCF                           _TMR1L 000FCE  
                         _PORTB 000F81                           _TRISA 000F92                           _TRISB 000F93  
                         _TRISC 000F94                           _TRISD 000F95                           _TRISE 000F96  
                 __CFG_PWRT$OFF 000000                   __CFG_WRT0$OFF 000000                   __CFG_WRT1$OFF 000000  
                 __CFG_WRT2$OFF 000000                   __CFG_WRT3$OFF 000000                 __end_of_lcdInst 3ED2  
                __CFG_EBTR0$OFF 000000                  __CFG_FCMEN$OFF 000000                  __CFG_EBTR1$OFF 000000  
                __CFG_EBTR2$OFF 000000                  __CFG_EBTR3$OFF 000000                   __CFG_WRTB$OFF 000000  
                 __CFG_WRTC$OFF 000000                   __CFG_WRTD$OFF 000000                 __end_of_initLCD 3904  
                __CFG_EBTRB$OFF 000000                           _brake 351A                           _flags 004E  
                         _dists 0069                           _fputc 3904                 __end_of_isalpha 3C74  
                         _fputs 3C02                 __end_of_isdigit 3D70                           _servo 33A6  
                         atoi@n 0094                           pad@fp 0094                           atoi@s 0087  
                         _width 004A                           _state 01DF                           _putch 3EB2  
                         _start 3AE6                           main@i 01B2                           main@k 01BC  
                         dtoa@d 00A1                           dtoa@i 00C1                           dtoa@n 00B9  
                         dtoa@p 00B3                           dtoa@s 00B7                           dtoa@w 00B5  
               __end_of_islower 3D0C                 __end_of_isspace 3BC4                 __end_of_isupper 3D3E  
                         tablat 000FF5                 send_nibble@data 0081                           plusw2 000FDB  
               __end_of_pulse_e 3DCC                           ttemp5 006F                           ttemp6 0072  
                         ttemp7 0076                           status 000FD8     I2C_Master_Read@receivedByte 0082  
               __end_of_stepper 29C8                           wtemp8 006F                           xtoa@c 00C4  
                         xtoa@d 00A1                           xtoa@i 00C2                           xtoa@n 00BA  
                         xtoa@p 00B6                           xtoa@w 00B8                           xtoa@x 00A9  
                 _stepper2_back 35CA                 __end_of_toupper 3B84                ??_servoRotate180 0082  
            __size_ofi2___awdiv 0084                  __CFG_PBADEN$ON 000000                    _toupper$1802 008C  
               __initialization 3A3A                    __end_of_echo 1394                     _system_init 3CA8  
                  __end_of_atoi 2C56                    __end_of_main 0E50                    __end_of_dtoa 1F3E  
                  __end_of_keys FDAE         __end_of_ultrasonic_main 272E                    __end_of_trig 30CE  
                  __end_of_xtoa 2174                          ??_echo 0032                          ??_atoi 0089  
                        ??_main 015A                          ??_dtoa 00A9                          ??_trig 0080  
                        ??_xtoa 00AA                   __activetblptr 000002            number_deploy@t_count 0106  
             ?_I2C_Master_Start 0001               ?_I2C_Master_Write 0081            number_deploy@tires_t 0102  
            ??_I2C_Master_Start 0081                          ?_brake 0001                          _ADCON1 000FC1  
            ??_I2C_Master_Write 0083                    ?_send_nibble 0001                          ?_fputc 0084  
              ___llmod@dividend 0080                          ?_fputs 008D                          _EEDATA 000FA8  
                        _EECON2 000FA7                ___awdiv@dividend 0080                          ?_servo 0001  
                        ?_putch 0001                          ?_start 0001                          _INT1IE 007F83  
                        _INT1IF 007F80              stepper2@steps2_adj 0100                          i2l1316 1BE0  
                        i2l1327 1C4E                          i2l1328 1C4A                          i2l1394 2D12  
                        i2l1387 2C94                          i2l5303 1B40                          i2l5321 1BB8  
                        i2l5313 1B90                          i2l5333 1BF6                          i2l5261 1A9E  
                        i2l5501 2CC8                          i2l5327 1BDE                          i2l5511 2D38  
                        i2l5503 2CD4                          i2l5281 1ADE                          i2l5257 1A9A  
                        i2l5433 347E                          i2l5513 2D44                          i2l5505 2CFA  
                        i2l5363 1CB6                          i2l5339 1C14                          i2l5373 1CEC  
                        i2l5277 1ADA                          i2l5461 34EC                          i2l5453 34D8  
                        i2l5541 3824                          i2l5701 0F2A                          i2l5375 1CEE  
                        i2l5367 1CE0                          i2l5359 1C92                          i2l5295 1B28  
                        i2l6263 3BE4                          i2l5289 1B12                          i2l5449 34C8  
                        i2l5529 2D84                          i2l5553 384A                          i2l5467 3508  
                        i2l5459 34E0                          i2l5555 3852                          i2l5547 3834  
                        i2l5803 131C                          i2l5707 0F82                          i2l5493 2CA4  
                        i2l5573 388A                          i2l5565 3872                          i2l5741 10D4  
                        i2l5709 0F9C                          i2l5735 1078                          i2l5719 101C  
                        i2l5743 10EE                          i2l5569 387C                          i2l5809 1378  
                        i2l5753 116E                          i2l5499 2CC2                          i2l5685 0ECE  
                        i2l5775 1226                          i2l5769 11CA                          i2l5777 1240  
                        i2l5787 12C0                       ??_UI_main 0100                   vfpfcnvrt@done 00E1  
                        _TMR1ON 007E68                  ?_stepper2_back 0100                          _SSPADD 000FC8  
                        _SSPBUF 000FC9                __end_of___xxtofl 2D96     number_deploy@poles_detected 00FD  
                __CFG_XINST$OFF 000000                    vfprintf@cfmt 00EB                       ??___aodiv 0090  
                     ??___aomod 0090                          ___wmul 3E1E                       ??___fldiv 0017  
                     ??___awdiv 0084                       ??___fltol 002C                       ??___lldiv 0088  
                     ??___llmod 0088                          clear_0 3A60                          clear_1 3A6C  
                        clear_2 3A7C                ___awdiv@quotient 0086                       ??_lcdInst 0083  
                        _printf 3DF6                          pad@buf 0096                          dtoa@fp 009F  
                        _strlen 3D70                  i2___awdiv@sign 0006                       ??_initLCD 0084  
                        fputc@c 0084                          fputs@c 0091                          fputs@i 0092  
                  __pdataCOMRAM 0069                          fputs@s 008D                       ??_isalpha 0082  
                     ??_isdigit 0082               __end_ofi2___awdiv 3894                       ??_islower 0082  
                  __mediumconst FD9C                       ??_isspace 0082                          tblptrh 000FF7  
                     ??_isupper 0082                          tblptrl 000FF6                          tblptru 000FF8  
              __end_of_vfprintf 3AE6                       ??_pulse_e 0080                __end_of_stepper2 31CA  
ultrasonic_main@min_us_dist_967 010A                       ??_stepper 0104                          xtoa@fp 009F  
                     ??_toupper 0088                    ___xxtofl@arg 000B           pulse_e@interruptState 0080  
                  ___xxtofl@exp 000A                    ___xxtofl@val 0001                      __accesstop 0080  
       __end_of__initialization 3A82                  _actuators_main 272E                   ___rparam_used 000001  
                    ___fltol@f1 0028                    stepper@i_480 010E                    stepper@i_481 0110  
                  stepper@i_479 010C              __size_of_backwards 0026             full_drive@direction 00FE  
                __pcstackCOMRAM 0001                    stepper@t_dep 0102                    stepper@stack 0100  
              ?_ultrasonic_main 00FC                   __end_of_brake 35CA                   __end_of_fputc 3972  
                 __end_of_fputs 3C3E                   __end_of_servo 3460               servoRotate0@servo 0080  
                 __end_of_putch 3EC2                   __end_of_start 3B38                 _key_was_pressed 01E5  
         number_deploy@avg_dist 00FB                         ??_brake 00FB                         ??_fputc 0088  
                       ??_fputs 0091                         ??_servo 0085                         ??_putch 0083  
                       ??_start 0095                 ??_stepper2_back 0102                      __pbssBANK0 00FF  
                    __pbssBANK1 01CA                      __pbssBANK2 0200          __end_of_actuators_main 287E  
                       ?___wmul 0080              __size_of_send_byte 0018                         ?_printf 00ED  
        stepper2_back@direction 0103                         ?_strlen 0080           __end_of_number_deploy 2394  
                     ?___xxtofl 0001               __end_of_backwards 3E6C              __size_of_vfpfcnvrt 03AA  
                    _dist_final 0250                         _SSPCON1 000FC6                         _SSPCON2 000FC5  
                       _SSPSTAT 000FC7                         _UI_main 0012            __size_of_send_nibble 001A  
               ?_actuators_main 0112                         __Hparam 0000                         __Lparam 0000  
                  ?_system_init 0001                         ___aodiv 29C8                         ___aomod 2D96  
                       ___fldiv 1A6E                         ___awdiv 3706                         ___fltol 3460  
                       ___lldiv 378C                 __size_of___wmul 0028                         ___llmod 3972  
                     ?_vfprintf 00E5                       ?_stepper2 0100                 __CFG_STVREN$OFF 000000  
                       __pcinit 3A3A                      _full_drive 173E                         __ramtop 1000  
                       _lcdInst 3EC2                         __ptext0 0826                         __ptext1 2582  
                       __ptext2 2FCC                         __ptext3 2394                         __ptext4 2EBC  
                       __ptext5 3AE6                         __ptext6 2174                         __ptext7 3706  
                       __ptext8 351A                         __ptext9 3E46                 __size_of_printf 0028  
               __size_of_strlen 002E                         _initLCD 3894                    __size_of_ISR 3BFA  
                       _counter 0060                    __size_of_abs 0034                    __size_of_pad 009C  
                       _isalpha 3C3E                    __size_of_min 0110                         _isdigit 3D3E  
                    ??___xxtofl 0005                         _islower 3CDA                         _isspace 3B84  
                       _isupper 3D0C        __size_of_I2C_Master_Init 0060        __size_of_I2C_Master_Read 002A  
      __size_of_I2C_Master_Wait 0014        __size_of_I2C_Master_Stop 0008                 _prev_dist_final 01CA  
                       _pressed 01D9                         atoi@neg 008D                         _pulse_e 3D9E  
                       _stepper 287E                  __pintcode_body 3BC4                         _toupper 3B38  
          end_of_initialization 3A82                         min@size 0082             main@arduino_stopped 01B7  
         __end_of_LCD_SIZE_HORZ FDB3               __end_of_send_byte 3E9E           __end_of_LCD_SIZE_VERT FDB2  
                       fputc@fp 0086                   __Lmediumconst FD9C                         int_func 3BC4  
                       fputs@fp 008F       __size_of_I2C_Master_Start 0008       __size_of_I2C_Master_Write 000A  
               ___lldiv@divisor 0084                 ___lldiv@counter 008C               __end_of_vfpfcnvrt 173E  
                 ?_servoRotate0 0080                  main@steps2_adj 01BA                         postdec1 000FE5  
                       postdec2 000FDD                         postinc0 000FEE                         postinc1 000FE6  
                       postinc2 000FDE                      ??_vfprintf 00EB                      ??_stepper2 0102  
                       strlen@a 0082                         strlen@s 0080                       _PORTAbits 000F80  
                    _print_echo 2394                   stepper2@i_489 0109                   ___xxtofl@sign 0009  
                     _TRISAbits 000F92                       _TRISBbits 000F93                       _TRISCbits 000F94  
                   ___fldiv@grs 0022                     ___fldiv@rem 001B                      main@i_1081 01C2  
                    main@i_1075 01B4                       i2___awdiv 3810     ultrasonic_main@step2_offset 0106  
                 send_byte@data 0082              i2___awdiv@dividend 0001           UI_main@poles_detected 00FD  
                ??_servoRotate0 0082     number_deploy@tires_detected 0104                     vfpfcnvrt@ap 00CA  
                   vfpfcnvrt@fp 00C6                     vfpfcnvrt@ll 00D0                  __end_of___wmul 3E46  
                   ?_full_drive 00FB         __size_of_servoRotate180 00F0                   __pidataCOMRAM 3EEC  
                __end_of_printf 3E1E                  __end_of_strlen 3D9E             start_initialization 3A3A  
                    min@minimum 0087              i2___awdiv@quotient 0007                     __end_of_ISR 3C02  
                   __end_of_abs 3CA8                     __end_of_pad 3706                     __end_of_min 2FCC  
         stepper2@count_stepper 010B                      ?i2___awdiv 0001               ??_I2C_Master_Init 0091  
             ??_I2C_Master_Read 0081               ??_I2C_Master_Wait 0080               ??_I2C_Master_Stop 0081  
             main@prev_avg_dist 01C6                  _poles_detected 0052                 ___llmod@divisor 0084  
               ___llmod@counter 0088                    UI_main@t_dep 00FB                     vfprintf@fmt 00E7  
                      ??___wmul 0084        I2C_Master_Init@clockFreq 008D                __CFG_LPT1OSC$OFF 000000  
          __size_of_system_init 0032                        ??_printf 00F7                        ??_strlen 0082  
                   ?_print_echo 0001                       ___fldiv@a 0013                       ___fldiv@b 000F  
      __size_of_ultrasonic_main 01AC                     __pbssCOMRAM 0038                   __pcstackBANK0 0080  
                 __pcstackBANK1 0100                ___aodiv@dividend 0080                ??_actuators_main 0118  
             __size_of___xxtofl 0140                       _backwards 3E46                        ?_UI_main 00FB  
         __end_of_stepper2_back 366A             __size_of_full_drive 0330                       _atoi$1710 008F  
                     _atoi$1711 0093                       _atoi$1712 0091                _I2C_Master_Start 3EE4  
              _I2C_Master_Write 3ED2                       _dtoa$1226 00B1               __CFG_CCP2MX$PORTC 000000  
                     __pintcode 0008                   __pmediumconst FD9C                        ?___aodiv 0080  
                      ?___aomod 0080                        ?___fldiv 000F                        ?___awdiv 0080  
              ___aodiv@quotient 0092                        ?___fltol 0028                        ?___lldiv 0080  
                      ?___llmod 0080                        ?_lcdInst 0001               __size_of_vfprintf 0056  
             __size_of_stepper2 00FC            full_drive@stepper_no 00FB                        ?_initLCD 0001  
                      ?_isalpha 0080                        ?_isdigit 0080                        ?_islower 0080  
                      ?_isspace 0080                        ?_isupper 0080            __end_of_servoRotate0 33A6  
                 ??_send_nibble 0081                        ?_pulse_e 0001                  __size_of_brake 00B0  
                   ??i2___awdiv 0005                        ?_stepper 0100                  __size_of_fputc 006E  
                __size_of_fputs 003C                        ?_toupper 0086                  __size_of_servo 00BA  
                    ?_backwards 0001                  __size_of_putch 0010                  __size_of_start 0052  
                ___wmul@product 0084                        _LATAbits 000F89                        _LATBbits 000F8A  
                      _LATCbits 000F8B                        _LATDbits 000F8C                        _LATEbits 000F8D  
                      UI_main@i 0159                       _send_byte 3E86             __size_of_print_echo 01EE  
        __size_of_number_deploy 0220                  _LCD_LINE1_ADDR FDB0                  _LCD_LINE2_ADDR FDB3  
                _LCD_LINE3_ADDR FDAF                  _LCD_LINE4_ADDR FDAE                        i2u522_40 1CA0  
                      i2u523_40 1CC4                        i2u531_40 346C                        i2u532_40 349C  
                      i2u532_45 3492                        i2u518_40 1C44                        i2u536_40 34F2  
                      i2u554_40 3856                        i2u650_40 3BEE                        i2u547_40 2D4E  
                      i2u563_40 0EDE                        i2u564_40 0EEE                        i2u573_40 102C  
                      i2u574_40 103C                        i2u583_40 117E                        i2u584_40 118E  
                      i2u593_40 12D0                        i2u594_40 12E0                __CFG_WDTPS$32768 000000  
    stepper2_back@count_stepper 0104                  _servoRotate180 31CA                       _vfpfcnvrt 1394  
                     _xtoa$1237 00B2                       _xtoa$1238 00B4               ___wmul@multiplier 0080  
                     main@t_dep 01C0               i2___awdiv@divisor 0003                       main@stack 01B8  
             i2___awdiv@counter 0005                    _isspace$1737 0086                      vfpfcnvrt@c 00E0  
           actuators_main@t_dep 0116             actuators_main@stack 0112                       copy_data0 3A4E  
             ??_ultrasonic_main 0100                 UI_main@keypress 0154          __end_of_LCD_LINE1_ADDR FDB1  
              __size_of_UI_main 0814          __end_of_LCD_LINE2_ADDR FDB4          __end_of_LCD_LINE3_ADDR FDB0  
        __end_of_LCD_LINE4_ADDR FDAF             __end_of_send_nibble 3E86                      _EECON1bits 000FA6  
                    ?_send_byte 0001                     UI_main@Pole 0104                        __Hrparam 0000  
                   UI_main@tick 0155                      vfprintf@ap 00E9                        __Lrparam 0000  
                    vfprintf@fp 00E5              __CFG_BOREN$SBORDIS 000000          __end_of_servoRotate180 32BA  
              __size_of___aodiv 014A                __size_of___aomod 0126                __size_of___fldiv 0288  
              __size_of___awdiv 0086                __size_of___fltol 00BA                __size_of___lldiv 0084  
              __size_of___llmod 0068                    ??_full_drive 00FD                      ?_vfpfcnvrt 00C6  
               ___aodiv@divisor 0088                 ___aodiv@counter 0090                __size_of_lcdInst 0010  
      actuators_main@steps2_adj 0114                   _number_deploy 2174                 _I2C_Master_Init 39DA  
               _I2C_Master_Read 3DCC                __size_of_initLCD 0070                        ___xxtofl 2C56  
               _I2C_Master_Wait 3E9E                 _I2C_Master_Stop 3EDC                __size_of_isalpha 0036  
              __size_of_isdigit 0032                __size_of_islower 0032                __size_of_isspace 0040  
                      __ptext10 272E                        __ptext11 3CA8                        __ptext20 3DF6  
                      __ptext12 35CA                        __ptext21 3A90                        __ptext13 30CE  
                      __ptext30 3D70                        __ptext22 1394                        __ptext14 287E  
                      __ptext31 3C02                        __ptext23 1F3E                        __ptext15 173E  
                      __ptext40 3E1E                        __ptext32 3904                        __ptext24 3B38  
                      __ptext16 33A6                        __ptext41 3894                        __ptext33 3EB2  
                      __ptext25 3CDA                        __ptext17 31CA                        __ptext50 3DCC  
                      __ptext42 3EC2                        __ptext34 3C74                        __ptext26 3D0C  
                      __ptext18 32BA                        __ptext51 3E9E                        __ptext43 3E86  
                      __ptext35 2D96                        __ptext27 3C3E                        __ptext19 0012  
                      __ptext52 39DA                        __ptext44 3E6C                        __ptext36 29C8  
                      __ptext28 1CF6                        __ptext53 378C                        __ptext45 3D9E  
                      __ptext37 2B12                        __ptext29 366A                        __ptext46 3972  
                      __ptext38 3B84                        __ptext55 0E50                        __ptext47 3ED2  
                      __ptext39 3D3E                        __ptext56 3810                        __ptext48 3EDC  
                      __ptext57 2C56                        __ptext49 3EE4                        __ptext58 3460  
                      __ptext59 1A6E                __size_of_isupper 0032                        _avg_dist 0044  
              __size_of_pulse_e 002E                     ??_backwards 0083                __size_of_stepper 014A  
              __size_of_toupper 004C                   __size_of_echo 0544                   __size_of_atoi 0144  
                 __size_of_main 062A                   __size_of_dtoa 0248         stepper2_back@steps2_adj 0100  
                 __size_of_trig 0102                   __size_of_xtoa 0236              __end_of_full_drive 1A6E  
                      _keypress 005F                        _temp_int 01E1                 ?_servoRotate180 0080  
                      int$flags 006E                        _vfprintf 3A90                        main@Pole 0162  
                      _stepper2 30CE                       printf@fmt 00ED     I2C_Master_Write@byteToWrite 0081  
              ___aomod@dividend 0080           __size_of_servoRotate0 00EC                        min@array 0080  
                  ??_print_echo 00FB                  ?_number_deploy 00FB                       putch@data 0083  
                _vfpfcnvrt$1252 00E3        __end_of_I2C_Master_Start 3EEC        __end_of_I2C_Master_Write 3EDC  
                    _INTCONbits 000FF2           ultrasonic_main@sensed 0104                        isalpha@c 0080  
                      isdigit@c 0080                       stepper2@i 0107                     _send_nibble 3E6C  
                      intlevel2 0000                   _LCD_SIZE_HORZ FDB2                        islower@c 0080  
                 _LCD_SIZE_VERT FDB1                        isspace@c 0080                ___lldiv@dividend 0080  
                   ??_send_byte 0082                        isupper@c 0080                  _tires_deployed 0054  
            __end_of_print_echo 2582                   ??_system_init 0080                    _servoRotate0 32BA  
                      printf@ap 00F9         __end_of_I2C_Master_Init 3A3A                 ___aomod@divisor 0088  
       __end_of_I2C_Master_Read 3DF6         __end_of_I2C_Master_Wait 3EB2         __end_of_I2C_Master_Stop 3EE4  
                   ??_vfpfcnvrt 00CC                     lcdInst@data 0083                 ___aomod@counter 0090  
                      stepper@i 010A       ultrasonic_main@steps2_adj 0108                ___lldiv@quotient 0088  
                      toupper@c 0086                     _SSPCON1bits 000FC6                     _SSPCON2bits 000FC5  
                   _timer_count 005C                    ___aodiv@sign 0091                    ___aomod@sign 0091  
          stepper@count_stepper 0108  
