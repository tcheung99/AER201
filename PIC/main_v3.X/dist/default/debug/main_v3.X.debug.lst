

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Apr 07 03:55:15 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1,inline
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1,inline
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    72                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    79                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    80                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    81  0000                     
    82                           ; Version 2.05
    83                           ; Generated 20/12/2018 GMT
    84                           ; 
    85                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    86                           ; All rights reserved.
    87                           ; 
    88                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    89                           ; 
    90                           ; Redistribution and use in source and binary forms, with or without modification, are
    91                           ; permitted provided that the following conditions are met:
    92                           ; 
    93                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    94                           ;        conditions and the following disclaimer.
    95                           ; 
    96                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    97                           ;        of conditions and the following disclaimer in the documentation and/or other
    98                           ;        materials provided with the distribution.
    99                           ; 
   100                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   101                           ;        software without specific prior written permission.
   102                           ; 
   103                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   104                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   105                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   106                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   107                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   108                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   109                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   110                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   111                           ; 
   112                           ; 
   113                           ; Code-generator required, PIC18F4620 Definitions
   114                           ; 
   115                           ; SFR Addresses
   116  0000                     
   117                           	psect	idataCOMRAM
   118  003B1C                     __pidataCOMRAM:
   119                           	opt callstack 0
   120                           
   121                           ;initializer for _dists
   122  003B1C  0000               	dw	0
   123  003B1E  FFFF               	dw	65535
   124                           
   125                           ;initializer for _send
   126  003B20  01                 	db	1
   127                           
   128                           	psect	mediumconst
   129  00FAEA                     __pmediumconst:
   130                           	opt callstack 0
   131  00FAEA  00                 	db	0
   132  00FAEB                     _keys:
   133                           	opt callstack 0
   134  00FAEB  31                 	db	49
   135  00FAEC  32                 	db	50
   136  00FAED  33                 	db	51
   137  00FAEE  41                 	db	65
   138  00FAEF  34                 	db	52
   139  00FAF0  35                 	db	53
   140  00FAF1  36                 	db	54
   141  00FAF2  42                 	db	66
   142  00FAF3  37                 	db	55
   143  00FAF4  38                 	db	56
   144  00FAF5  39                 	db	57
   145  00FAF6  43                 	db	67
   146  00FAF7  2A                 	db	42
   147  00FAF8  30                 	db	48
   148  00FAF9  23                 	db	35
   149  00FAFA  44                 	db	68
   150  00FAFB  00                 	db	0
   151  00FAFC                     __end_of_keys:
   152                           	opt callstack 0
   153  00FAFC  50                 	db	80
   154  00FAFD                     __end_of_LCD_LINE4_ADDR:
   155                           	opt callstack 0
   156  00FAFD  10                 	db	16
   157  00FAFE                     __end_of_LCD_LINE3_ADDR:
   158                           	opt callstack 0
   159  00FAFE                     _LCD_LINE1_ADDR:
   160                           	opt callstack 0
   161  00FAFE  00                 	db	0
   162  00FAFF                     __end_of_LCD_LINE1_ADDR:
   163                           	opt callstack 0
   164  00FAFF                     _LCD_SIZE_VERT:
   165                           	opt callstack 0
   166  00FAFF  04                 	db	4
   167  00FB00                     __end_of_LCD_SIZE_VERT:
   168                           	opt callstack 0
   169  00FB00                     _LCD_SIZE_HORZ:
   170                           	opt callstack 0
   171  00FB00  10                 	db	16
   172  00FB01                     __end_of_LCD_SIZE_HORZ:
   173                           	opt callstack 0
   174  00FB01  40                 	db	64
   175  00FB02                     __end_of_LCD_LINE2_ADDR:
   176                           	opt callstack 0
   177  0000                     _PORTAbits	set	3968
   178  0000                     _TRISAbits	set	3986
   179  0000                     _PORTB	set	3969
   180  0000                     _LATBbits	set	3978
   181  0000                     _TRISBbits	set	3987
   182  0000                     _LATDbits	set	3980
   183  0000                     _LATE	set	3981
   184  0000                     _TRISE	set	3990
   185  0000                     _LATC	set	3979
   186  0000                     _TRISC	set	3988
   187  0000                     _TRISD	set	3989
   188  0000                     _LATD	set	3980
   189  0000                     _TRISA	set	3986
   190  0000                     _LATB	set	3978
   191  0000                     _TRISB	set	3987
   192  0000                     _LATAbits	set	3977
   193  0000                     _LATEbits	set	3981
   194  0000                     _LATCbits	set	3979
   195  0000                     _LATA	set	3977
   196  0000                     _TRISCbits	set	3988
   197  0000                     _RB2	set	31754
   198  0000                     _RB3	set	31755
   199  0000                     _RD0	set	31768
   200  0000                     _RD1	set	31769
   201  0000                     _RB4	set	31756
   202  0000                     _RB5	set	31757
   203  0000                     _RB6	set	31758
   204  0000                     _RB7	set	31759
   205  0000                     _RC2	set	31762
   206  0000                     _RC1	set	31761
   207  0000                     _T1CON	set	4045
   208  0000                     _TMR1H	set	4047
   209  0000                     _TMR1L	set	4046
   210  0000                     _ADCON1	set	4033
   211  0000                     _SSPBUF	set	4041
   212  0000                     _SSPCON2bits	set	4037
   213  0000                     _SSPCON1	set	4038
   214  0000                     _SSPADD	set	4040
   215  0000                     _SSPCON1bits	set	4038
   216  0000                     _SSPCON2	set	4037
   217  0000                     _SSPSTAT	set	4039
   218  0000                     _TMR1ON	set	32360
   219  0000                     _INTCONbits	set	4082
   220  0000                     _GIE	set	32663
   221  0000                     _INT1IE	set	32643
   222  0000                     _INT1IF	set	32640
   223  0000                     _RBIE	set	32659
   224  0000                     _RBIF	set	32656
   225  00FB02                     STR_41:
   226  00FB02  50                 	db	80	;'P'
   227  00FB03  25                 	db	37
   228  00FB04  64                 	db	100	;'d'
   229  00FB05  20                 	db	32
   230  00FB06  44                 	db	68	;'D'
   231  00FB07  65                 	db	101	;'e'
   232  00FB08  70                 	db	112	;'p'
   233  00FB09  3A                 	db	58	;':'
   234  00FB0A  25                 	db	37
   235  00FB0B  64                 	db	100	;'d'
   236  00FB0C  2C                 	db	44
   237  00FB0D  54                 	db	84	;'T'
   238  00FB0E  6F                 	db	111	;'o'
   239  00FB0F  74                 	db	116	;'t'
   240  00FB10  3A                 	db	58	;':'
   241  00FB11  25                 	db	37
   242  00FB12  64                 	db	100	;'d'
   243  00FB13  00                 	db	0
   244  00FB14                     STR_31:
   245  00FB14  20                 	db	32
   246  00FB15  20                 	db	32
   247  00FB16  20                 	db	32
   248  00FB17  20                 	db	32
   249  00FB18  20                 	db	32
   250  00FB19  30                 	db	48	;'0'
   251  00FB1A  2D                 	db	45
   252  00FB1B  4D                 	db	77	;'M'
   253  00FB1C  65                 	db	101	;'e'
   254  00FB1D  6E                 	db	110	;'n'
   255  00FB1E  75                 	db	117	;'u'
   256  00FB1F  20                 	db	32
   257  00FB20  20                 	db	32
   258  00FB21  20                 	db	32
   259  00FB22  20                 	db	32
   260  00FB23  20                 	db	32
   261  00FB24  00                 	db	0
   262  00FB25                     STR_48:
   263  00FB25  3C                 	db	60	;'<'
   264  00FB26  2A                 	db	42
   265  00FB27  20                 	db	32
   266  00FB28  20                 	db	32
   267  00FB29  20                 	db	32
   268  00FB2A  30                 	db	48	;'0'
   269  00FB2B  2D                 	db	45
   270  00FB2C  4D                 	db	77	;'M'
   271  00FB2D  65                 	db	101	;'e'
   272  00FB2E  6E                 	db	110	;'n'
   273  00FB2F  75                 	db	117	;'u'
   274  00FB30  20                 	db	32
   275  00FB31  20                 	db	32
   276  00FB32  20                 	db	32
   277  00FB33  20                 	db	32
   278  00FB34  20                 	db	32
   279  00FB35  00                 	db	0
   280  00FB36                     STR_10:
   281  00FB36  44                 	db	68	;'D'
   282  00FB37  69                 	db	105	;'i'
   283  00FB38  73                 	db	115	;'s'
   284  00FB39  74                 	db	116	;'t'
   285  00FB3A  31                 	db	49	;'1'
   286  00FB3B  3D                 	db	61	;'='
   287  00FB3C  25                 	db	37
   288  00FB3D  64                 	db	100	;'d'
   289  00FB3E  2C                 	db	44
   290  00FB3F  41                 	db	65	;'A'
   291  00FB40  76                 	db	118	;'v'
   292  00FB41  67                 	db	103	;'g'
   293  00FB42  3D                 	db	61	;'='
   294  00FB43  25                 	db	37
   295  00FB44  64                 	db	100	;'d'
   296  00FB45  20                 	db	32
   297  00FB46  00                 	db	0
   298  00FB47                     STR_16:
   299  00FB47  44                 	db	68	;'D'
   300  00FB48  69                 	db	105	;'i'
   301  00FB49  73                 	db	115	;'s'
   302  00FB4A  74                 	db	116	;'t'
   303  00FB4B  34                 	db	52	;'4'
   304  00FB4C  3D                 	db	61	;'='
   305  00FB4D  25                 	db	37
   306  00FB4E  64                 	db	100	;'d'
   307  00FB4F  2C                 	db	44
   308  00FB50  41                 	db	65	;'A'
   309  00FB51  76                 	db	118	;'v'
   310  00FB52  67                 	db	103	;'g'
   311  00FB53  3D                 	db	61	;'='
   312  00FB54  25                 	db	37
   313  00FB55  64                 	db	100	;'d'
   314  00FB56  20                 	db	32
   315  00FB57  00                 	db	0
   316  00FB58                     STR_37:
   317  00FB58  20                 	db	32
   318  00FB59  20                 	db	32
   319  00FB5A  20                 	db	32
   320  00FB5B  20                 	db	32
   321  00FB5C  20                 	db	32
   322  00FB5D  30                 	db	48	;'0'
   323  00FB5E  2D                 	db	45
   324  00FB5F  4D                 	db	77	;'M'
   325  00FB60  65                 	db	101	;'e'
   326  00FB61  6E                 	db	110	;'n'
   327  00FB62  75                 	db	117	;'u'
   328  00FB63  20                 	db	32
   329  00FB64  20                 	db	32
   330  00FB65  20                 	db	32
   331  00FB66  23                 	db	35
   332  00FB67  3E                 	db	62	;'>'
   333  00FB68  00                 	db	0
   334  00FB69                     STR_40:
   335  00FB69  3C                 	db	60	;'<'
   336  00FB6A  2A                 	db	42
   337  00FB6B  20                 	db	32
   338  00FB6C  20                 	db	32
   339  00FB6D  20                 	db	32
   340  00FB6E  30                 	db	48	;'0'
   341  00FB6F  2D                 	db	45
   342  00FB70  4D                 	db	77	;'M'
   343  00FB71  65                 	db	101	;'e'
   344  00FB72  6E                 	db	110	;'n'
   345  00FB73  75                 	db	117	;'u'
   346  00FB74  20                 	db	32
   347  00FB75  20                 	db	32
   348  00FB76  20                 	db	32
   349  00FB77  23                 	db	35
   350  00FB78  3E                 	db	62	;'>'
   351  00FB79  00                 	db	0
   352  00FB7A                     STR_23:
   353  00FB7A  64                 	db	100	;'d'
   354  00FB7B  65                 	db	101	;'e'
   355  00FB7C  74                 	db	116	;'t'
   356  00FB7D  2C                 	db	44
   357  00FB7E  25                 	db	37
   358  00FB7F  64                 	db	100	;'d'
   359  00FB80  2C                 	db	44
   360  00FB81  20                 	db	32
   361  00FB82  74                 	db	116	;'t'
   362  00FB83  63                 	db	99	;'c'
   363  00FB84  6E                 	db	110	;'n'
   364  00FB85  74                 	db	116	;'t'
   365  00FB86  20                 	db	32
   366  00FB87  25                 	db	37
   367  00FB88  64                 	db	100	;'d'
   368  00FB89  00                 	db	0
   369  00FB8A                     STR_12:
   370  00FB8A  44                 	db	68	;'D'
   371  00FB8B  69                 	db	105	;'i'
   372  00FB8C  73                 	db	115	;'s'
   373  00FB8D  74                 	db	116	;'t'
   374  00FB8E  32                 	db	50	;'2'
   375  00FB8F  3D                 	db	61	;'='
   376  00FB90  25                 	db	37
   377  00FB91  64                 	db	100	;'d'
   378  00FB92  2C                 	db	44
   379  00FB93  41                 	db	65	;'A'
   380  00FB94  76                 	db	118	;'v'
   381  00FB95  67                 	db	103	;'g'
   382  00FB96  3D                 	db	61	;'='
   383  00FB97  25                 	db	37
   384  00FB98  64                 	db	100	;'d'
   385  00FB99  00                 	db	0
   386  00FB9A                     STR_14:
   387  00FB9A  44                 	db	68	;'D'
   388  00FB9B  69                 	db	105	;'i'
   389  00FB9C  73                 	db	115	;'s'
   390  00FB9D  74                 	db	116	;'t'
   391  00FB9E  33                 	db	51	;'3'
   392  00FB9F  3D                 	db	61	;'='
   393  00FBA0  25                 	db	37
   394  00FBA1  64                 	db	100	;'d'
   395  00FBA2  2C                 	db	44
   396  00FBA3  41                 	db	65	;'A'
   397  00FBA4  76                 	db	118	;'v'
   398  00FBA5  67                 	db	103	;'g'
   399  00FBA6  3D                 	db	61	;'='
   400  00FBA7  25                 	db	37
   401  00FBA8  64                 	db	100	;'d'
   402  00FBA9  00                 	db	0
   403  00FBAA                     STR_26:
   404  00FBAA  33                 	db	51	;'3'
   405  00FBAB  20                 	db	32
   406  00FBAC  2D                 	db	45
   407  00FBAD  20                 	db	32
   408  00FBAE  44                 	db	68	;'D'
   409  00FBAF  61                 	db	97	;'a'
   410  00FBB0  74                 	db	116	;'t'
   411  00FBB1  65                 	db	101	;'e'
   412  00FBB2  26                 	db	38
   413  00FBB3  54                 	db	84	;'T'
   414  00FBB4  69                 	db	105	;'i'
   415  00FBB5  6D                 	db	109	;'m'
   416  00FBB6  65                 	db	101	;'e'
   417  00FBB7  20                 	db	32
   418  00FBB8  00                 	db	0
   419  00FBB9                     STR_42:
   420  00FBB9  44                 	db	68	;'D'
   421  00FBBA  69                 	db	105	;'i'
   422  00FBBB  73                 	db	115	;'s'
   423  00FBBC  74                 	db	116	;'t'
   424  00FBBD  54                 	db	84	;'T'
   425  00FBBE  6F                 	db	111	;'o'
   426  00FBBF  53                 	db	83	;'S'
   427  00FBC0  74                 	db	116	;'t'
   428  00FBC1  61                 	db	97	;'a'
   429  00FBC2  72                 	db	114	;'r'
   430  00FBC3  74                 	db	116	;'t'
   431  00FBC4  3A                 	db	58	;':'
   432  00FBC5  25                 	db	37
   433  00FBC6  64                 	db	100	;'d'
   434  00FBC7  00                 	db	0
   435  00FBC8                     STR_30:
   436  00FBC8  4D                 	db	77	;'M'
   437  00FBC9  61                 	db	97	;'a'
   438  00FBCA  63                 	db	99	;'c'
   439  00FBCB  68                 	db	104	;'h'
   440  00FBCC  69                 	db	105	;'i'
   441  00FBCD  6E                 	db	110	;'n'
   442  00FBCE  65                 	db	101	;'e'
   443  00FBCF  20                 	db	32
   444  00FBD0  49                 	db	73	;'I'
   445  00FBD1  6E                 	db	110	;'n'
   446  00FBD2  20                 	db	32
   447  00FBD3  55                 	db	85	;'U'
   448  00FBD4  73                 	db	115	;'s'
   449  00FBD5  65                 	db	101	;'e'
   450  00FBD6  00                 	db	0
   451  00FBD7                     STR_50:
   452  00FBD7  25                 	db	37
   453  00FBD8  30                 	db	48	;'0'
   454  00FBD9  32                 	db	50	;'2'
   455  00FBDA  78                 	db	120	;'x'
   456  00FBDB  2F                 	db	47
   457  00FBDC  25                 	db	37
   458  00FBDD  30                 	db	48	;'0'
   459  00FBDE  32                 	db	50	;'2'
   460  00FBDF  78                 	db	120	;'x'
   461  00FBE0  2F                 	db	47
   462  00FBE1  25                 	db	37
   463  00FBE2  30                 	db	48	;'0'
   464  00FBE3  32                 	db	50	;'2'
   465  00FBE4  78                 	db	120	;'x'
   466  00FBE5  00                 	db	0
   467  00FBE6                     STR_51:
   468  00FBE6  25                 	db	37
   469  00FBE7  30                 	db	48	;'0'
   470  00FBE8  32                 	db	50	;'2'
   471  00FBE9  78                 	db	120	;'x'
   472  00FBEA  3A                 	db	58	;':'
   473  00FBEB  25                 	db	37
   474  00FBEC  30                 	db	48	;'0'
   475  00FBED  32                 	db	50	;'2'
   476  00FBEE  78                 	db	120	;'x'
   477  00FBEF  3A                 	db	58	;':'
   478  00FBF0  25                 	db	37
   479  00FBF1  30                 	db	48	;'0'
   480  00FBF2  32                 	db	50	;'2'
   481  00FBF3  78                 	db	120	;'x'
   482  00FBF4  00                 	db	0
   483  00FBF5                     STR_39:
   484  00FBF5  4E                 	db	78	;'N'
   485  00FBF6  6F                 	db	111	;'o'
   486  00FBF7  2E                 	db	46
   487  00FBF8  20                 	db	32
   488  00FBF9  50                 	db	80	;'P'
   489  00FBFA  6F                 	db	111	;'o'
   490  00FBFB  6C                 	db	108	;'l'
   491  00FBFC  65                 	db	101	;'e'
   492  00FBFD  73                 	db	115	;'s'
   493  00FBFE  3A                 	db	58	;':'
   494  00FBFF  20                 	db	32
   495  00FC00  25                 	db	37
   496  00FC01  64                 	db	100	;'d'
   497  00FC02  00                 	db	0
   498  00FC03                     STR_38:
   499  00FC03  4E                 	db	78	;'N'
   500  00FC04  6F                 	db	111	;'o'
   501  00FC05  2E                 	db	46
   502  00FC06  20                 	db	32
   503  00FC07  54                 	db	84	;'T'
   504  00FC08  69                 	db	105	;'i'
   505  00FC09  72                 	db	114	;'r'
   506  00FC0A  65                 	db	101	;'e'
   507  00FC0B  73                 	db	115	;'s'
   508  00FC0C  3A                 	db	58	;':'
   509  00FC0D  20                 	db	32
   510  00FC0E  25                 	db	37
   511  00FC0F  64                 	db	100	;'d'
   512  00FC10  00                 	db	0
   513  00FC11                     STR_7:
   514  00FC11  53                 	db	83	;'S'
   515  00FC12  74                 	db	116	;'t'
   516  00FC13  65                 	db	101	;'e'
   517  00FC14  70                 	db	112	;'p'
   518  00FC15  20                 	db	32
   519  00FC16  73                 	db	115	;'s'
   520  00FC17  70                 	db	112	;'p'
   521  00FC18  65                 	db	101	;'e'
   522  00FC19  65                 	db	101	;'e'
   523  00FC1A  64                 	db	100	;'d'
   524  00FC1B  20                 	db	32
   525  00FC1C  25                 	db	37
   526  00FC1D  64                 	db	100	;'d'
   527  00FC1E  00                 	db	0
   528  00FC1F                     STR_18:
   529  00FC1F  62                 	db	98	;'b'
   530  00FC20  72                 	db	114	;'r'
   531  00FC21  65                 	db	101	;'e'
   532  00FC22  61                 	db	97	;'a'
   533  00FC23  6B                 	db	107	;'k'
   534  00FC24  20                 	db	32
   535  00FC25  68                 	db	104	;'h'
   536  00FC26  65                 	db	101	;'e'
   537  00FC27  72                 	db	114	;'r'
   538  00FC28  65                 	db	101	;'e'
   539  00FC29  65                 	db	101	;'e'
   540  00FC2A  3F                 	db	63	;'?'
   541  00FC2B  00                 	db	0
   542  00FC2C                     STR_54:
   543  00FC2C  6D                 	db	109	;'m'
   544  00FC2D  6F                 	db	111	;'o'
   545  00FC2E  72                 	db	114	;'r'
   546  00FC2F  65                 	db	101	;'e'
   547  00FC30  20                 	db	32
   548  00FC31  77                 	db	119	;'w'
   549  00FC32  61                 	db	97	;'a'
   550  00FC33  69                 	db	105	;'i'
   551  00FC34  74                 	db	116	;'t'
   552  00FC35  69                 	db	105	;'i'
   553  00FC36  6E                 	db	110	;'n'
   554  00FC37  67                 	db	103	;'g'
   555  00FC38  00                 	db	0
   556  00FC39                     STR_2:
   557  00FC39  53                 	db	83	;'S'
   558  00FC3A  74                 	db	116	;'t'
   559  00FC3B  65                 	db	101	;'e'
   560  00FC3C  70                 	db	112	;'p'
   561  00FC3D  70                 	db	112	;'p'
   562  00FC3E  65                 	db	101	;'e'
   563  00FC3F  72                 	db	114	;'r'
   564  00FC40  20                 	db	32
   565  00FC41  64                 	db	100	;'d'
   566  00FC42  6F                 	db	111	;'o'
   567  00FC43  6E                 	db	110	;'n'
   568  00FC44  65                 	db	101	;'e'
   569  00FC45  00                 	db	0
   570  00FC46                     STR_49:
   571  00FC46  44                 	db	68	;'D'
   572  00FC47  41                 	db	65	;'A'
   573  00FC48  54                 	db	84	;'T'
   574  00FC49  45                 	db	69	;'E'
   575  00FC4A  20                 	db	32
   576  00FC4B  26                 	db	38
   577  00FC4C  20                 	db	32
   578  00FC4D  54                 	db	84	;'T'
   579  00FC4E  49                 	db	73	;'I'
   580  00FC4F  4D                 	db	77	;'M'
   581  00FC50  45                 	db	69	;'E'
   582  00FC51  00                 	db	0
   583  00FC52                     STR_22:
   584  00FC52  73                 	db	115	;'s'
   585  00FC53  74                 	db	116	;'t'
   586  00FC54  65                 	db	101	;'e'
   587  00FC55  70                 	db	112	;'p'
   588  00FC56  73                 	db	115	;'s'
   589  00FC57  61                 	db	97	;'a'
   590  00FC58  64                 	db	100	;'d'
   591  00FC59  6A                 	db	106	;'j'
   592  00FC5A  20                 	db	32
   593  00FC5B  25                 	db	37
   594  00FC5C  64                 	db	100	;'d'
   595  00FC5D  00                 	db	0
   596  00FC5E                     STR_58:
   597  00FC5E  61                 	db	97	;'a'
   598  00FC5F  76                 	db	118	;'v'
   599  00FC60  67                 	db	103	;'g'
   600  00FC61  20                 	db	32
   601  00FC62  64                 	db	100	;'d'
   602  00FC63  69                 	db	105	;'i'
   603  00FC64  73                 	db	115	;'s'
   604  00FC65  74                 	db	116	;'t'
   605  00FC66  20                 	db	32
   606  00FC67  25                 	db	37
   607  00FC68  64                 	db	100	;'d'
   608  00FC69  00                 	db	0
   609  00FC6A                     STR_43:
   610  00FC6A  44                 	db	68	;'D'
   611  00FC6B  69                 	db	105	;'i'
   612  00FC6C  73                 	db	115	;'s'
   613  00FC6D  74                 	db	116	;'t'
   614  00FC6E  54                 	db	84	;'T'
   615  00FC6F  6F                 	db	111	;'o'
   616  00FC70  43                 	db	67	;'C'
   617  00FC71  4C                 	db	76	;'L'
   618  00FC72  3A                 	db	58	;':'
   619  00FC73  25                 	db	37
   620  00FC74  64                 	db	100	;'d'
   621  00FC75  00                 	db	0
   622  00FC76                     STR_25:
   623  00FC76  32                 	db	50	;'2'
   624  00FC77  20                 	db	32
   625  00FC78  2D                 	db	45
   626  00FC79  20                 	db	32
   627  00FC7A  53                 	db	83	;'S'
   628  00FC7B  75                 	db	117	;'u'
   629  00FC7C  6D                 	db	109	;'m'
   630  00FC7D  6D                 	db	109	;'m'
   631  00FC7E  61                 	db	97	;'a'
   632  00FC7F  72                 	db	114	;'r'
   633  00FC80  79                 	db	121	;'y'
   634  00FC81  00                 	db	0
   635  00FC82                     STR_59:
   636  00FC82  70                 	db	112	;'p'
   637  00FC83  6F                 	db	111	;'o'
   638  00FC84  6C                 	db	108	;'l'
   639  00FC85  65                 	db	101	;'e'
   640  00FC86  73                 	db	115	;'s'
   641  00FC87  20                 	db	32
   642  00FC88  64                 	db	100	;'d'
   643  00FC89  20                 	db	32
   644  00FC8A  25                 	db	37
   645  00FC8B  64                 	db	100	;'d'
   646  00FC8C  00                 	db	0
   647  00FC8D                     STR_20:
   648  00FC8D  6D                 	db	109	;'m'
   649  00FC8E  69                 	db	105	;'i'
   650  00FC8F  6E                 	db	110	;'n'
   651  00FC90  69                 	db	105	;'i'
   652  00FC91  6D                 	db	109	;'m'
   653  00FC92  75                 	db	117	;'u'
   654  00FC93  6D                 	db	109	;'m'
   655  00FC94  20                 	db	32
   656  00FC95  25                 	db	37
   657  00FC96  64                 	db	100	;'d'
   658  00FC97  00                 	db	0
   659  00FC98                     STR_60:
   660  00FC98  70                 	db	112	;'p'
   661  00FC99  6F                 	db	111	;'o'
   662  00FC9A  6C                 	db	108	;'l'
   663  00FC9B  65                 	db	101	;'e'
   664  00FC9C  73                 	db	115	;'s'
   665  00FC9D  20                 	db	32
   666  00FC9E  64                 	db	100	;'d'
   667  00FC9F  6F                 	db	111	;'o'
   668  00FCA0  6E                 	db	110	;'n'
   669  00FCA1  65                 	db	101	;'e'
   670  00FCA2  00                 	db	0
   671  00FCA3                     STR_3:
   672  00FCA3  53                 	db	83	;'S'
   673  00FCA4  65                 	db	101	;'e'
   674  00FCA5  72                 	db	114	;'r'
   675  00FCA6  76                 	db	118	;'v'
   676  00FCA7  6F                 	db	111	;'o'
   677  00FCA8  20                 	db	32
   678  00FCA9  64                 	db	100	;'d'
   679  00FCAA  6F                 	db	111	;'o'
   680  00FCAB  6E                 	db	110	;'n'
   681  00FCAC  65                 	db	101	;'e'
   682  00FCAD  00                 	db	0
   683  00FCAE                     STR_11:
   684  00FCAE  44                 	db	68	;'D'
   685  00FCAF  69                 	db	105	;'i'
   686  00FCB0  73                 	db	115	;'s'
   687  00FCB1  74                 	db	116	;'t'
   688  00FCB2  31                 	db	49	;'1'
   689  00FCB3  20                 	db	32
   690  00FCB4  3D                 	db	61	;'='
   691  00FCB5  20                 	db	32
   692  00FCB6  58                 	db	88	;'X'
   693  00FCB7  00                 	db	0
   694  00FCB8                     STR_13:
   695  00FCB8  44                 	db	68	;'D'
   696  00FCB9  69                 	db	105	;'i'
   697  00FCBA  73                 	db	115	;'s'
   698  00FCBB  74                 	db	116	;'t'
   699  00FCBC  32                 	db	50	;'2'
   700  00FCBD  20                 	db	32
   701  00FCBE  3D                 	db	61	;'='
   702  00FCBF  20                 	db	32
   703  00FCC0  58                 	db	88	;'X'
   704  00FCC1  00                 	db	0
   705  00FCC2                     STR_15:
   706  00FCC2  44                 	db	68	;'D'
   707  00FCC3  69                 	db	105	;'i'
   708  00FCC4  73                 	db	115	;'s'
   709  00FCC5  74                 	db	116	;'t'
   710  00FCC6  33                 	db	51	;'3'
   711  00FCC7  20                 	db	32
   712  00FCC8  3D                 	db	61	;'='
   713  00FCC9  20                 	db	32
   714  00FCCA  58                 	db	88	;'X'
   715  00FCCB  00                 	db	0
   716  00FCCC                     STR_17:
   717  00FCCC  44                 	db	68	;'D'
   718  00FCCD  69                 	db	105	;'i'
   719  00FCCE  73                 	db	115	;'s'
   720  00FCCF  74                 	db	116	;'t'
   721  00FCD0  34                 	db	52	;'4'
   722  00FCD1  20                 	db	32
   723  00FCD2  3D                 	db	61	;'='
   724  00FCD3  20                 	db	32
   725  00FCD4  58                 	db	88	;'X'
   726  00FCD5  00                 	db	0
   727  00FCD6                     STR_56:
   728  00FCD6  64                 	db	100	;'d'
   729  00FCD7  75                 	db	117	;'u'
   730  00FCD8  6E                 	db	110	;'n'
   731  00FCD9  20                 	db	32
   732  00FCDA  62                 	db	98	;'b'
   733  00FCDB  72                 	db	114	;'r'
   734  00FCDC  65                 	db	101	;'e'
   735  00FCDD  61                 	db	97	;'a'
   736  00FCDE  6B                 	db	107	;'k'
   737  00FCDF  00                 	db	0
   738  00FCE0                     STR_61:
   739  00FCE0  62                 	db	98	;'b'
   740  00FCE1  61                 	db	97	;'a'
   741  00FCE2  63                 	db	99	;'c'
   742  00FCE3  6B                 	db	107	;'k'
   743  00FCE4  77                 	db	119	;'w'
   744  00FCE5  61                 	db	97	;'a'
   745  00FCE6  72                 	db	114	;'r'
   746  00FCE7  64                 	db	100	;'d'
   747  00FCE8  73                 	db	115	;'s'
   748  00FCE9  00                 	db	0
   749  00FCEA                     STR_55:
   750  00FCEA  64                 	db	100	;'d'
   751  00FCEB  6F                 	db	111	;'o'
   752  00FCEC  6E                 	db	110	;'n'
   753  00FCED  65                 	db	101	;'e'
   754  00FCEE  20                 	db	32
   755  00FCEF  77                 	db	119	;'w'
   756  00FCF0  61                 	db	97	;'a'
   757  00FCF1  69                 	db	105	;'i'
   758  00FCF2  74                 	db	116	;'t'
   759  00FCF3  00                 	db	0
   760  00FCF4                     STR_24:
   761  00FCF4  31                 	db	49	;'1'
   762  00FCF5  20                 	db	32
   763  00FCF6  2D                 	db	45
   764  00FCF7  20                 	db	32
   765  00FCF8  53                 	db	83	;'S'
   766  00FCF9  74                 	db	116	;'t'
   767  00FCFA  61                 	db	97	;'a'
   768  00FCFB  72                 	db	114	;'r'
   769  00FCFC  74                 	db	116	;'t'
   770  00FCFD  00                 	db	0
   771  00FCFE                     STR_5:
   772  00FCFE  73                 	db	115	;'s'
   773  00FCFF  74                 	db	116	;'t'
   774  00FD00  65                 	db	101	;'e'
   775  00FD01  70                 	db	112	;'p'
   776  00FD02  70                 	db	112	;'p'
   777  00FD03  70                 	db	112	;'p'
   778  00FD04  20                 	db	32
   779  00FD05  25                 	db	37
   780  00FD06  64                 	db	100	;'d'
   781  00FD07  00                 	db	0
   782  00FD08                     STR_1:
   783  00FD08  63                 	db	99	;'c'
   784  00FD09  6E                 	db	110	;'n'
   785  00FD0A  74                 	db	116	;'t'
   786  00FD0B  20                 	db	32
   787  00FD0C  69                 	db	105	;'i'
   788  00FD0D  73                 	db	115	;'s'
   789  00FD0E  20                 	db	32
   790  00FD0F  25                 	db	37
   791  00FD10  64                 	db	100	;'d'
   792  00FD11  00                 	db	0
   793  00FD12                     STR_32:
   794  00FD12  4F                 	db	79	;'O'
   795  00FD13  70                 	db	112	;'p'
   796  00FD14  20                 	db	32
   797  00FD15  54                 	db	84	;'T'
   798  00FD16  69                 	db	105	;'i'
   799  00FD17  6D                 	db	109	;'m'
   800  00FD18  65                 	db	101	;'e'
   801  00FD19  3A                 	db	58	;':'
   802  00FD1A  00                 	db	0
   803  00FD1B                     STR_19:
   804  00FD1B  6F                 	db	111	;'o'
   805  00FD1C  72                 	db	114	;'r'
   806  00FD1D  20                 	db	32
   807  00FD1E  68                 	db	104	;'h'
   808  00FD1F  65                 	db	101	;'e'
   809  00FD20  72                 	db	114	;'r'
   810  00FD21  65                 	db	101	;'e'
   811  00FD22  00                 	db	0
   812  00FD23                     STR_6:
   813  00FD23  73                 	db	115	;'s'
   814  00FD24  74                 	db	116	;'t'
   815  00FD25  65                 	db	101	;'e'
   816  00FD26  70                 	db	112	;'p'
   817  00FD27  31                 	db	49	;'1'
   818  00FD28  00                 	db	0
   819  00FD29                     STR_9:
   820  00FD29  77                 	db	119	;'w'
   821  00FD2A  68                 	db	104	;'h'
   822  00FD2B  61                 	db	97	;'a'
   823  00FD2C  74                 	db	116	;'t'
   824  00FD2D  00                 	db	0
   825  0000                     
   826                           ; #config settings
   827  00FD2E  00                 	db	0	; dummy byte at the end
   828  0000                     
   829                           	psect	cinit
   830  003572                     __pcinit:
   831                           	opt callstack 0
   832  003572                     start_initialization:
   833                           	opt callstack 0
   834  003572                     __initialization:
   835                           	opt callstack 0
   836                           
   837                           ; Initialize objects allocated to COMRAM (5 bytes)
   838                           ; load TBLPTR registers with __pidataCOMRAM
   839  003572  0E1C               	movlw	low __pidataCOMRAM
   840  003574  6EF6               	movwf	tblptrl,c
   841  003576  0E3B               	movlw	high __pidataCOMRAM
   842  003578  6EF7               	movwf	tblptrh,c
   843  00357A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   844  00357C  6EF8               	movwf	tblptru,c
   845  00357E  EE00  F069         	lfsr	0,__pdataCOMRAM
   846  003582  EE10 F005          	lfsr	1,5
   847  003586                     copy_data0:
   848  003586  0009               	tblrd		*+
   849  003588  CFF5 FFEE          	movff	tablat,postinc0
   850  00358C  50E5               	movf	postdec1,w,c
   851  00358E  50E1               	movf	fsr1l,w,c
   852  003590  E1FA               	bnz	copy_data0
   853                           
   854                           ; Clear objects allocated to BANK2 (128 bytes)
   855  003592  EE02  F000         	lfsr	0,__pbssBANK2
   856  003596  0E80               	movlw	128
   857  003598                     clear_0:
   858  003598  6AEE               	clrf	postinc0,c
   859  00359A  06E8               	decf	wreg,f,c
   860  00359C  E1FD               	bnz	clear_0
   861                           
   862                           ; Clear objects allocated to BANK1 (60 bytes)
   863  00359E  EE01  F05C         	lfsr	0,__pbssBANK1
   864  0035A2  0E3C               	movlw	60
   865  0035A4                     clear_1:
   866  0035A4  6AEE               	clrf	postinc0,c
   867  0035A6  06E8               	decf	wreg,f,c
   868  0035A8  E1FD               	bnz	clear_1
   869                           
   870                           ; Clear objects allocated to BANK0 (1 bytes)
   871  0035AA  0100               	movlb	0
   872  0035AC  6BFF               	clrf	__pbssBANK0& (0+255),b
   873                           
   874                           ; Clear objects allocated to COMRAM (49 bytes)
   875  0035AE  EE00  F038         	lfsr	0,__pbssCOMRAM
   876  0035B2  0E31               	movlw	49
   877  0035B4                     clear_2:
   878  0035B4  6AEE               	clrf	postinc0,c
   879  0035B6  06E8               	decf	wreg,f,c
   880  0035B8  E1FD               	bnz	clear_2
   881  0035BA                     end_of_initialization:
   882                           	opt callstack 0
   883  0035BA                     __end_of__initialization:
   884                           	opt callstack 0
   885  0035BA  906E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   886  0035BC  926E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   887  0035BE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   888  0035C0  6EF8               	movwf	tblptru,c
   889  0035C2  0100               	movlb	0
   890  0035C4  EFB5  F006         	goto	_main	;jump to C main() function
   891                           
   892                           	psect	bssCOMRAM
   893  000038                     __pbssCOMRAM:
   894                           	opt callstack 0
   895  000038                     _sum:
   896                           	opt callstack 0
   897  000038                     	ds	8
   898  000040                     _sumf:
   899                           	opt callstack 0
   900  000040                     	ds	4
   901  000044                     _avg_dist:
   902                           	opt callstack 0
   903  000044                     	ds	4
   904  000048                     _nout:
   905                           	opt callstack 0
   906  000048                     	ds	2
   907  00004A                     _width:
   908                           	opt callstack 0
   909  00004A                     	ds	2
   910  00004C                     _prec:
   911                           	opt callstack 0
   912  00004C                     	ds	2
   913  00004E                     _flags:
   914                           	opt callstack 0
   915  00004E                     	ds	2
   916  000050                     _meas:
   917                           	opt callstack 0
   918  000050                     	ds	2
   919  000052                     _poles_detected:
   920                           	opt callstack 0
   921  000052                     	ds	2
   922  000054                     _tires_deployed:
   923                           	opt callstack 0
   924  000054                     	ds	2
   925  000056                     _tick:
   926                           	opt callstack 0
   927  000056                     	ds	2
   928  000058                     _sens:
   929                           	opt callstack 0
   930  000058                     	ds	2
   931  00005A                     _b:
   932                           	opt callstack 0
   933  00005A                     	ds	2
   934  00005C                     _timer_count:
   935                           	opt callstack 0
   936  00005C                     	ds	2
   937  00005E                     _data:
   938                           	opt callstack 0
   939  00005E                     	ds	1
   940  00005F                     _keypress:
   941                           	opt callstack 0
   942  00005F                     	ds	1
   943  000060                     _counter:
   944                           	opt callstack 0
   945  000060                     	ds	1
   946  000061                     _a:
   947                           	opt callstack 0
   948  000061                     	ds	8
   949                           
   950                           	psect	dataCOMRAM
   951  000069                     __pdataCOMRAM:
   952                           	opt callstack 0
   953  000069                     _dists:
   954                           	opt callstack 0
   955  000069                     	ds	4
   956  00006D                     _send:
   957                           	opt callstack 0
   958  00006D                     	ds	1
   959                           
   960                           	psect	bssBANK0
   961  0000FF                     __pbssBANK0:
   962                           	opt callstack 0
   963  0000FF                     _temp:
   964                           	opt callstack 0
   965  0000FF                     	ds	1
   966                           
   967                           	psect	bssBANK1
   968  00015C                     __pbssBANK1:
   969                           	opt callstack 0
   970  00015C                     _prev_dist_final:
   971                           	opt callstack 0
   972  00015C                     	ds	8
   973  000164                     _time:
   974                           	opt callstack 0
   975  000164                     	ds	7
   976  00016B                     _pressed:
   977                           	opt callstack 0
   978  00016B                     	ds	2
   979  00016D                     _i:
   980                           	opt callstack 0
   981  00016D                     	ds	2
   982  00016F                     _disp:
   983                           	opt callstack 0
   984  00016F                     	ds	2
   985  000171                     _state:
   986                           	opt callstack 0
   987  000171                     	ds	2
   988  000173                     _temp_int:
   989                           	opt callstack 0
   990  000173                     	ds	2
   991  000175                     _cnt:
   992                           	opt callstack 0
   993  000175                     	ds	2
   994  000177                     _key_was_pressed:
   995                           	opt callstack 0
   996  000177                     	ds	1
   997  000178                     _dbuf:
   998                           	opt callstack 0
   999  000178                     	ds	32
  1000                           
  1001                           	psect	bssBANK2
  1002  000200                     __pbssBANK2:
  1003                           	opt callstack 0
  1004  000200                     _Pole:
  1005                           	opt callstack 0
  1006  000200                     	ds	80
  1007  000250                     _dist_final:
  1008                           	opt callstack 0
  1009  000250                     	ds	48
  1010                           
  1011                           	psect	cstackBANK2
  1012  000280                     __pcstackBANK2:
  1013                           	opt callstack 0
  1014  000280                     main@Pole:
  1015                           	opt callstack 0
  1016                           
  1017                           ; 80 bytes @ 0x0
  1018  000280                     	ds	82
  1019  0002D2                     main@pole_cl_dist:
  1020                           	opt callstack 0
  1021                           
  1022                           ; 2 bytes @ 0x52
  1023  0002D2                     	ds	2
  1024  0002D4                     main@steps2_adj:
  1025                           	opt callstack 0
  1026                           
  1027                           ; 2 bytes @ 0x54
  1028  0002D4                     	ds	2
  1029  0002D6                     main@i:
  1030                           	opt callstack 0
  1031                           
  1032                           ; 2 bytes @ 0x56
  1033  0002D6                     	ds	2
  1034  0002D8                     main@i_1018:
  1035                           	opt callstack 0
  1036                           
  1037                           ; 2 bytes @ 0x58
  1038  0002D8                     	ds	2
  1039  0002DA                     main@act_done:
  1040                           	opt callstack 0
  1041                           
  1042                           ; 1 bytes @ 0x5A
  1043  0002DA                     	ds	1
  1044  0002DB                     main@arduino_stopped:
  1045                           	opt callstack 0
  1046                           
  1047                           ; 1 bytes @ 0x5B
  1048  0002DB                     	ds	1
  1049  0002DC                     main@stack:
  1050                           	opt callstack 0
  1051                           
  1052                           ; 2 bytes @ 0x5C
  1053  0002DC                     	ds	2
  1054  0002DE                     main@k:
  1055                           	opt callstack 0
  1056                           
  1057                           ; 2 bytes @ 0x5E
  1058  0002DE                     	ds	2
  1059  0002E0                     main@t_count:
  1060                           	opt callstack 0
  1061                           
  1062                           ; 2 bytes @ 0x60
  1063  0002E0                     	ds	2
  1064  0002E2                     main@t_dep:
  1065                           	opt callstack 0
  1066                           
  1067                           ; 2 bytes @ 0x62
  1068  0002E2                     	ds	2
  1069  0002E4                     main@i_1026:
  1070                           	opt callstack 0
  1071                           
  1072                           ; 2 bytes @ 0x64
  1073  0002E4                     	ds	2
  1074  0002E6                     main@poles_detected:
  1075                           	opt callstack 0
  1076                           
  1077                           ; 2 bytes @ 0x66
  1078  0002E6                     	ds	2
  1079  0002E8                     main@prev_avg_dist:
  1080                           	opt callstack 0
  1081                           
  1082                           ; 4 bytes @ 0x68
  1083  0002E8                     	ds	4
  1084                           
  1085                           	psect	cstackBANK1
  1086  000100                     __pcstackBANK1:
  1087                           	opt callstack 0
  1088  000100                     ??_stepper2:
  1089  000100                     ??_stepper2_back:
  1090  000100                     ??_UI_main:
  1091  000100                     stepper@count_stepper:
  1092                           	opt callstack 0
  1093  000100                     number_deploy@tires_t:
  1094                           	opt callstack 0
  1095                           
  1096                           ; 2 bytes @ 0x0
  1097  000100                     	ds	1
  1098  000101                     stepper2_back@direction:
  1099                           	opt callstack 0
  1100                           
  1101                           ; 1 bytes @ 0x1
  1102  000101                     	ds	1
  1103  000102                     stepper@i:
  1104                           	opt callstack 0
  1105  000102                     stepper2_back@count_stepper:
  1106                           	opt callstack 0
  1107  000102                     ultrasonic_main@sensed:
  1108                           	opt callstack 0
  1109  000102                     number_deploy@tires_detected:
  1110                           	opt callstack 0
  1111                           
  1112                           ; 2 bytes @ 0x2
  1113  000102                     	ds	2
  1114  000104                     stepper@i_376:
  1115                           	opt callstack 0
  1116  000104                     stepper2_back@i:
  1117                           	opt callstack 0
  1118  000104                     ultrasonic_main@step2_offset:
  1119                           	opt callstack 0
  1120  000104                     number_deploy@t_count:
  1121                           	opt callstack 0
  1122  000104                     UI_main@Pole:
  1123                           	opt callstack 0
  1124                           
  1125                           ; 80 bytes @ 0x4
  1126  000104                     	ds	1
  1127  000105                     stepper2@i:
  1128                           	opt callstack 0
  1129                           
  1130                           ; 2 bytes @ 0x5
  1131  000105                     	ds	1
  1132  000106                     ultrasonic_main@steps2_adj:
  1133                           	opt callstack 0
  1134                           
  1135                           ; 2 bytes @ 0x6
  1136  000106                     	ds	1
  1137  000107                     stepper2@i_384:
  1138                           	opt callstack 0
  1139                           
  1140                           ; 2 bytes @ 0x7
  1141  000107                     	ds	1
  1142  000108                     ultrasonic_main@min_us_dist_914:
  1143                           	opt callstack 0
  1144                           
  1145                           ; 2 bytes @ 0x8
  1146  000108                     	ds	1
  1147  000109                     stepper2@count_stepper:
  1148                           	opt callstack 0
  1149                           
  1150                           ; 2 bytes @ 0x9
  1151  000109                     	ds	2
  1152  00010B                     stepper2@direction:
  1153                           	opt callstack 0
  1154                           
  1155                           ; 1 bytes @ 0xB
  1156  00010B                     	ds	1
  1157  00010C                     actuators_main@stack:
  1158                           	opt callstack 0
  1159                           
  1160                           ; 2 bytes @ 0xC
  1161  00010C                     	ds	2
  1162  00010E                     actuators_main@steps2_adj:
  1163                           	opt callstack 0
  1164                           
  1165                           ; 2 bytes @ 0xE
  1166  00010E                     	ds	2
  1167  000110                     ??_actuators_main:
  1168                           
  1169                           ; 1 bytes @ 0x10
  1170  000110                     	ds	2
  1171  000112                     actuators_main@act_cnt:
  1172                           	opt callstack 0
  1173                           
  1174                           ; 2 bytes @ 0x12
  1175  000112                     	ds	66
  1176  000154                     UI_main@keypress:
  1177                           	opt callstack 0
  1178                           
  1179                           ; 1 bytes @ 0x54
  1180  000154                     	ds	1
  1181  000155                     UI_main@tick:
  1182                           	opt callstack 0
  1183                           
  1184                           ; 4 bytes @ 0x55
  1185  000155                     	ds	4
  1186  000159                     UI_main@i:
  1187                           	opt callstack 0
  1188                           
  1189                           ; 1 bytes @ 0x59
  1190  000159                     	ds	1
  1191  00015A                     ??_main:
  1192                           
  1193                           ; 1 bytes @ 0x5A
  1194  00015A                     	ds	2
  1195                           
  1196                           	psect	cstackBANK0
  1197  000080                     __pcstackBANK0:
  1198                           	opt callstack 0
  1199  000080                     ??_I2C_Master_Wait:
  1200  000080                     ??_servoRotate0:
  1201  000080                     ??_servoRotate180:
  1202  000080                     ??_trig:
  1203  000080                     ?_strlen:
  1204                           	opt callstack 0
  1205  000080                     ?_isupper:
  1206                           	opt callstack 0
  1207  000080                     ?_isalpha:
  1208                           	opt callstack 0
  1209  000080                     ?_isdigit:
  1210                           	opt callstack 0
  1211  000080                     ?_isspace:
  1212                           	opt callstack 0
  1213  000080                     ?_islower:
  1214                           	opt callstack 0
  1215  000080                     ?_min:
  1216                           	opt callstack 0
  1217  000080                     ?___wmul:
  1218                           	opt callstack 0
  1219  000080                     ?___awdiv:
  1220                           	opt callstack 0
  1221  000080                     ?___lldiv:
  1222                           	opt callstack 0
  1223  000080                     ?___llmod:
  1224                           	opt callstack 0
  1225  000080                     ?___aodiv:
  1226                           	opt callstack 0
  1227  000080                     ?___aomod:
  1228                           	opt callstack 0
  1229  000080                     pulse_e@interruptState:
  1230                           	opt callstack 0
  1231  000080                     min@array:
  1232                           	opt callstack 0
  1233  000080                     ___wmul@multiplier:
  1234                           	opt callstack 0
  1235  000080                     ___awdiv@dividend:
  1236                           	opt callstack 0
  1237  000080                     isalpha@c:
  1238                           	opt callstack 0
  1239  000080                     isdigit@c:
  1240                           	opt callstack 0
  1241  000080                     isspace@c:
  1242                           	opt callstack 0
  1243  000080                     isupper@c:
  1244                           	opt callstack 0
  1245  000080                     strlen@s:
  1246                           	opt callstack 0
  1247  000080                     islower@c:
  1248                           	opt callstack 0
  1249  000080                     ___lldiv@dividend:
  1250                           	opt callstack 0
  1251  000080                     ___llmod@dividend:
  1252                           	opt callstack 0
  1253  000080                     ___aodiv@dividend:
  1254                           	opt callstack 0
  1255  000080                     ___aomod@dividend:
  1256                           	opt callstack 0
  1257                           
  1258                           ; 8 bytes @ 0x0
  1259  000080                     	ds	1
  1260  000081                     I2C_Master_Read@ackBit:
  1261                           	opt callstack 0
  1262  000081                     send_nibble@data:
  1263                           	opt callstack 0
  1264  000081                     I2C_Master_Write@byteToWrite:
  1265                           	opt callstack 0
  1266  000081                     servoRotate0@i:
  1267                           	opt callstack 0
  1268  000081                     servoRotate180@i:
  1269                           	opt callstack 0
  1270                           
  1271                           ; 2 bytes @ 0x1
  1272  000081                     	ds	1
  1273  000082                     ??_isupper:
  1274  000082                     ??_isalpha:
  1275  000082                     ??_isdigit:
  1276  000082                     ??_isspace:
  1277  000082                     ??_islower:
  1278  000082                     I2C_Master_Read@receivedByte:
  1279                           	opt callstack 0
  1280  000082                     send_byte@data:
  1281                           	opt callstack 0
  1282  000082                     min@size:
  1283                           	opt callstack 0
  1284  000082                     ___wmul@multiplicand:
  1285                           	opt callstack 0
  1286  000082                     ___awdiv@divisor:
  1287                           	opt callstack 0
  1288  000082                     strlen@a:
  1289                           	opt callstack 0
  1290                           
  1291                           ; 2 bytes @ 0x2
  1292  000082                     	ds	1
  1293  000083                     ??_servo:
  1294  000083                     lcdInst@data:
  1295                           	opt callstack 0
  1296  000083                     putch@data:
  1297                           	opt callstack 0
  1298                           
  1299                           ; 1 bytes @ 0x3
  1300  000083                     	ds	1
  1301  000084                     ??_initLCD:
  1302  000084                     ??_min:
  1303  000084                     ___awdiv@counter:
  1304                           	opt callstack 0
  1305  000084                     ___wmul@product:
  1306                           	opt callstack 0
  1307  000084                     fputc@c:
  1308                           	opt callstack 0
  1309  000084                     ___lldiv@divisor:
  1310                           	opt callstack 0
  1311  000084                     ___llmod@divisor:
  1312                           	opt callstack 0
  1313                           
  1314                           ; 4 bytes @ 0x4
  1315  000084                     	ds	1
  1316  000085                     ___awdiv@sign:
  1317                           	opt callstack 0
  1318                           
  1319                           ; 1 bytes @ 0x5
  1320  000085                     	ds	1
  1321  000086                     ?_toupper:
  1322                           	opt callstack 0
  1323  000086                     _isspace$1610:
  1324                           	opt callstack 0
  1325  000086                     ___awdiv@quotient:
  1326                           	opt callstack 0
  1327  000086                     fputc@fp:
  1328                           	opt callstack 0
  1329  000086                     toupper@c:
  1330                           	opt callstack 0
  1331                           
  1332                           ; 2 bytes @ 0x6
  1333  000086                     	ds	1
  1334  000087                     ?_atoi:
  1335                           	opt callstack 0
  1336  000087                     min@minimum:
  1337                           	opt callstack 0
  1338  000087                     atoi@s:
  1339                           	opt callstack 0
  1340                           
  1341                           ; 2 bytes @ 0x7
  1342  000087                     	ds	1
  1343  000088                     ??_fputc:
  1344  000088                     ??_toupper:
  1345  000088                     ___llmod@counter:
  1346                           	opt callstack 0
  1347  000088                     ___lldiv@quotient:
  1348                           	opt callstack 0
  1349  000088                     ___aodiv@divisor:
  1350                           	opt callstack 0
  1351  000088                     ___aomod@divisor:
  1352                           	opt callstack 0
  1353                           
  1354                           ; 8 bytes @ 0x8
  1355  000088                     	ds	1
  1356  000089                     ??_atoi:
  1357  000089                     min@i:
  1358                           	opt callstack 0
  1359                           
  1360                           ; 2 bytes @ 0x9
  1361  000089                     	ds	3
  1362  00008C                     ___lldiv@counter:
  1363                           	opt callstack 0
  1364  00008C                     _toupper$1675:
  1365                           	opt callstack 0
  1366                           
  1367                           ; 2 bytes @ 0xC
  1368  00008C                     	ds	1
  1369  00008D                     atoi@neg:
  1370                           	opt callstack 0
  1371  00008D                     fputs@s:
  1372                           	opt callstack 0
  1373  00008D                     I2C_Master_Init@clockFreq:
  1374                           	opt callstack 0
  1375                           
  1376                           ; 4 bytes @ 0xD
  1377  00008D                     	ds	2
  1378  00008F                     _atoi$1583:
  1379                           	opt callstack 0
  1380  00008F                     fputs@fp:
  1381                           	opt callstack 0
  1382                           
  1383                           ; 2 bytes @ 0xF
  1384  00008F                     	ds	1
  1385  000090                     ___aodiv@counter:
  1386                           	opt callstack 0
  1387  000090                     ___aomod@counter:
  1388                           	opt callstack 0
  1389                           
  1390                           ; 1 bytes @ 0x10
  1391  000090                     	ds	1
  1392  000091                     ??_I2C_Master_Init:
  1393  000091                     ___aodiv@sign:
  1394                           	opt callstack 0
  1395  000091                     ___aomod@sign:
  1396                           	opt callstack 0
  1397  000091                     fputs@c:
  1398                           	opt callstack 0
  1399  000091                     _atoi$1585:
  1400                           	opt callstack 0
  1401                           
  1402                           ; 2 bytes @ 0x11
  1403  000091                     	ds	1
  1404  000092                     ?_abs:
  1405                           	opt callstack 0
  1406  000092                     abs@a:
  1407                           	opt callstack 0
  1408  000092                     fputs@i:
  1409                           	opt callstack 0
  1410  000092                     ___aodiv@quotient:
  1411                           	opt callstack 0
  1412                           
  1413                           ; 8 bytes @ 0x12
  1414  000092                     	ds	1
  1415  000093                     _atoi$1584:
  1416                           	opt callstack 0
  1417                           
  1418                           ; 1 bytes @ 0x13
  1419  000093                     	ds	1
  1420  000094                     ??_abs:
  1421  000094                     ?_pad:
  1422                           	opt callstack 0
  1423  000094                     pad@fp:
  1424                           	opt callstack 0
  1425  000094                     atoi@n:
  1426                           	opt callstack 0
  1427                           
  1428                           ; 2 bytes @ 0x14
  1429  000094                     	ds	1
  1430  000095                     
  1431                           ; 1 bytes @ 0x15
  1432  000095                     	ds	1
  1433  000096                     pad@buf:
  1434                           	opt callstack 0
  1435                           
  1436                           ; 2 bytes @ 0x16
  1437  000096                     	ds	2
  1438  000098                     pad@p:
  1439                           	opt callstack 0
  1440                           
  1441                           ; 2 bytes @ 0x18
  1442  000098                     	ds	2
  1443  00009A                     ??_pad:
  1444                           
  1445                           ; 1 bytes @ 0x1A
  1446  00009A                     	ds	1
  1447  00009B                     pad@i:
  1448                           	opt callstack 0
  1449                           
  1450                           ; 2 bytes @ 0x1B
  1451  00009B                     	ds	2
  1452  00009D                     pad@w:
  1453                           	opt callstack 0
  1454                           
  1455                           ; 2 bytes @ 0x1D
  1456  00009D                     	ds	2
  1457  00009F                     ?_dtoa:
  1458                           	opt callstack 0
  1459  00009F                     ?_xtoa:
  1460                           	opt callstack 0
  1461  00009F                     dtoa@fp:
  1462                           	opt callstack 0
  1463  00009F                     xtoa@fp:
  1464                           	opt callstack 0
  1465                           
  1466                           ; 2 bytes @ 0x1F
  1467  00009F                     	ds	2
  1468  0000A1                     dtoa@d:
  1469                           	opt callstack 0
  1470  0000A1                     xtoa@d:
  1471                           	opt callstack 0
  1472                           
  1473                           ; 8 bytes @ 0x21
  1474  0000A1                     	ds	8
  1475  0000A9                     ??_dtoa:
  1476  0000A9                     xtoa@x:
  1477                           	opt callstack 0
  1478                           
  1479                           ; 1 bytes @ 0x29
  1480  0000A9                     	ds	1
  1481  0000AA                     ??_xtoa:
  1482                           
  1483                           ; 1 bytes @ 0x2A
  1484  0000AA                     	ds	7
  1485  0000B1                     _dtoa$1099:
  1486                           	opt callstack 0
  1487                           
  1488                           ; 2 bytes @ 0x31
  1489  0000B1                     	ds	1
  1490  0000B2                     _xtoa$1110:
  1491                           	opt callstack 0
  1492                           
  1493                           ; 2 bytes @ 0x32
  1494  0000B2                     	ds	1
  1495  0000B3                     dtoa@p:
  1496                           	opt callstack 0
  1497                           
  1498                           ; 2 bytes @ 0x33
  1499  0000B3                     	ds	1
  1500  0000B4                     _xtoa$1111:
  1501                           	opt callstack 0
  1502                           
  1503                           ; 2 bytes @ 0x34
  1504  0000B4                     	ds	1
  1505  0000B5                     dtoa@w:
  1506                           	opt callstack 0
  1507                           
  1508                           ; 2 bytes @ 0x35
  1509  0000B5                     	ds	1
  1510  0000B6                     xtoa@p:
  1511                           	opt callstack 0
  1512                           
  1513                           ; 2 bytes @ 0x36
  1514  0000B6                     	ds	1
  1515  0000B7                     dtoa@s:
  1516                           	opt callstack 0
  1517                           
  1518                           ; 2 bytes @ 0x37
  1519  0000B7                     	ds	1
  1520  0000B8                     xtoa@w:
  1521                           	opt callstack 0
  1522                           
  1523                           ; 2 bytes @ 0x38
  1524  0000B8                     	ds	1
  1525  0000B9                     dtoa@n:
  1526                           	opt callstack 0
  1527                           
  1528                           ; 8 bytes @ 0x39
  1529  0000B9                     	ds	1
  1530  0000BA                     xtoa@n:
  1531                           	opt callstack 0
  1532                           
  1533                           ; 8 bytes @ 0x3A
  1534  0000BA                     	ds	7
  1535  0000C1                     dtoa@i:
  1536                           	opt callstack 0
  1537                           
  1538                           ; 2 bytes @ 0x41
  1539  0000C1                     	ds	1
  1540  0000C2                     xtoa@i:
  1541                           	opt callstack 0
  1542                           
  1543                           ; 2 bytes @ 0x42
  1544  0000C2                     	ds	2
  1545  0000C4                     xtoa@c:
  1546                           	opt callstack 0
  1547                           
  1548                           ; 2 bytes @ 0x44
  1549  0000C4                     	ds	2
  1550  0000C6                     ?_vfpfcnvrt:
  1551                           	opt callstack 0
  1552  0000C6                     vfpfcnvrt@fp:
  1553                           	opt callstack 0
  1554                           
  1555                           ; 2 bytes @ 0x46
  1556  0000C6                     	ds	2
  1557  0000C8                     vfpfcnvrt@fmt:
  1558                           	opt callstack 0
  1559                           
  1560                           ; 2 bytes @ 0x48
  1561  0000C8                     	ds	2
  1562  0000CA                     vfpfcnvrt@ap:
  1563                           	opt callstack 0
  1564                           
  1565                           ; 2 bytes @ 0x4A
  1566  0000CA                     	ds	2
  1567  0000CC                     ??_vfpfcnvrt:
  1568                           
  1569                           ; 1 bytes @ 0x4C
  1570  0000CC                     	ds	4
  1571  0000D0                     vfpfcnvrt@ll:
  1572                           	opt callstack 0
  1573                           
  1574                           ; 8 bytes @ 0x50
  1575  0000D0                     	ds	8
  1576  0000D8                     vfpfcnvrt@llu:
  1577                           	opt callstack 0
  1578                           
  1579                           ; 8 bytes @ 0x58
  1580  0000D8                     	ds	8
  1581  0000E0                     vfpfcnvrt@c:
  1582                           	opt callstack 0
  1583                           
  1584                           ; 1 bytes @ 0x60
  1585  0000E0                     	ds	1
  1586  0000E1                     vfpfcnvrt@done:
  1587                           	opt callstack 0
  1588                           
  1589                           ; 2 bytes @ 0x61
  1590  0000E1                     	ds	2
  1591  0000E3                     _vfpfcnvrt$1125:
  1592                           	opt callstack 0
  1593                           
  1594                           ; 2 bytes @ 0x63
  1595  0000E3                     	ds	2
  1596  0000E5                     ?_vfprintf:
  1597                           	opt callstack 0
  1598  0000E5                     vfprintf@fp:
  1599                           	opt callstack 0
  1600                           
  1601                           ; 2 bytes @ 0x65
  1602  0000E5                     	ds	2
  1603  0000E7                     vfprintf@fmt:
  1604                           	opt callstack 0
  1605                           
  1606                           ; 2 bytes @ 0x67
  1607  0000E7                     	ds	2
  1608  0000E9                     vfprintf@ap:
  1609                           	opt callstack 0
  1610                           
  1611                           ; 2 bytes @ 0x69
  1612  0000E9                     	ds	2
  1613  0000EB                     vfprintf@cfmt:
  1614                           	opt callstack 0
  1615                           
  1616                           ; 2 bytes @ 0x6B
  1617  0000EB                     	ds	2
  1618  0000ED                     ?_printf:
  1619                           	opt callstack 0
  1620  0000ED                     printf@fmt:
  1621                           	opt callstack 0
  1622                           
  1623                           ; 2 bytes @ 0x6D
  1624  0000ED                     	ds	8
  1625  0000F5                     
  1626                           ; 1 bytes @ 0x75
  1627  0000F5                     	ds	2
  1628  0000F7                     printf@ap:
  1629                           	opt callstack 0
  1630                           
  1631                           ; 2 bytes @ 0x77
  1632  0000F7                     	ds	2
  1633  0000F9                     ??_print_echo:
  1634  0000F9                     ?_number_deploy:
  1635                           	opt callstack 0
  1636  0000F9                     full_drive@stepper_no:
  1637                           	opt callstack 0
  1638  0000F9                     number_deploy@avg_dist:
  1639                           	opt callstack 0
  1640  0000F9                     UI_main@t_dep:
  1641                           	opt callstack 0
  1642                           
  1643                           ; 2 bytes @ 0x79
  1644  0000F9                     	ds	1
  1645  0000FA                     ?_ultrasonic_main:
  1646                           	opt callstack 0
  1647                           
  1648                           ; 2 bytes @ 0x7A
  1649  0000FA                     	ds	1
  1650  0000FB                     ??_full_drive:
  1651  0000FB                     number_deploy@poles_detected:
  1652                           	opt callstack 0
  1653  0000FB                     UI_main@poles_detected:
  1654                           	opt callstack 0
  1655                           
  1656                           ; 2 bytes @ 0x7B
  1657  0000FB                     	ds	1
  1658  0000FC                     ??_ultrasonic_main:
  1659  0000FC                     full_drive@direction:
  1660                           	opt callstack 0
  1661                           
  1662                           ; 1 bytes @ 0x7C
  1663  0000FC                     	ds	1
  1664  0000FD                     ??_number_deploy:
  1665  0000FD                     stepper@stack:
  1666                           	opt callstack 0
  1667  0000FD                     stepper2@steps2_adj:
  1668                           	opt callstack 0
  1669  0000FD                     stepper2_back@steps2_adj:
  1670                           	opt callstack 0
  1671                           
  1672                           ; 2 bytes @ 0x7D
  1673  0000FD                     	ds	2
  1674  0000FF                     
  1675                           ; 1 bytes @ 0x7F
  1676                           
  1677                           	psect	cstackCOMRAM
  1678  000001                     __pcstackCOMRAM:
  1679                           	opt callstack 0
  1680  000001                     ?i2___awdiv:
  1681                           	opt callstack 0
  1682  000001                     ?___xxtofl:
  1683                           	opt callstack 0
  1684  000001                     i2___awdiv@dividend:
  1685                           	opt callstack 0
  1686  000001                     ___xxtofl@val:
  1687                           	opt callstack 0
  1688                           
  1689                           ; 4 bytes @ 0x0
  1690  000001                     	ds	2
  1691  000003                     i2___awdiv@divisor:
  1692                           	opt callstack 0
  1693                           
  1694                           ; 2 bytes @ 0x2
  1695  000003                     	ds	2
  1696  000005                     ??___xxtofl:
  1697  000005                     i2___awdiv@counter:
  1698                           	opt callstack 0
  1699                           
  1700                           ; 1 bytes @ 0x4
  1701  000005                     	ds	1
  1702  000006                     i2___awdiv@sign:
  1703                           	opt callstack 0
  1704                           
  1705                           ; 1 bytes @ 0x5
  1706  000006                     	ds	1
  1707  000007                     i2___awdiv@quotient:
  1708                           	opt callstack 0
  1709                           
  1710                           ; 2 bytes @ 0x6
  1711  000007                     	ds	2
  1712  000009                     ___xxtofl@sign:
  1713                           	opt callstack 0
  1714                           
  1715                           ; 1 bytes @ 0x8
  1716  000009                     	ds	1
  1717  00000A                     ___xxtofl@exp:
  1718                           	opt callstack 0
  1719                           
  1720                           ; 1 bytes @ 0x9
  1721  00000A                     	ds	1
  1722  00000B                     ___xxtofl@arg:
  1723                           	opt callstack 0
  1724                           
  1725                           ; 4 bytes @ 0xA
  1726  00000B                     	ds	4
  1727  00000F                     ?___fldiv:
  1728                           	opt callstack 0
  1729  00000F                     ___fldiv@b:
  1730                           	opt callstack 0
  1731                           
  1732                           ; 4 bytes @ 0xE
  1733  00000F                     	ds	4
  1734  000013                     ___fldiv@a:
  1735                           	opt callstack 0
  1736                           
  1737                           ; 4 bytes @ 0x12
  1738  000013                     	ds	4
  1739  000017                     ??___fldiv:
  1740                           
  1741                           ; 1 bytes @ 0x16
  1742  000017                     	ds	4
  1743  00001B                     ___fldiv@rem:
  1744                           	opt callstack 0
  1745                           
  1746                           ; 4 bytes @ 0x1A
  1747  00001B                     	ds	4
  1748  00001F                     ___fldiv@sign:
  1749                           	opt callstack 0
  1750                           
  1751                           ; 1 bytes @ 0x1E
  1752  00001F                     	ds	1
  1753  000020                     ___fldiv@new_exp:
  1754                           	opt callstack 0
  1755                           
  1756                           ; 2 bytes @ 0x1F
  1757  000020                     	ds	2
  1758  000022                     ___fldiv@grs:
  1759                           	opt callstack 0
  1760                           
  1761                           ; 4 bytes @ 0x21
  1762  000022                     	ds	4
  1763  000026                     ___fldiv@bexp:
  1764                           	opt callstack 0
  1765                           
  1766                           ; 1 bytes @ 0x25
  1767  000026                     	ds	1
  1768  000027                     ___fldiv@aexp:
  1769                           	opt callstack 0
  1770                           
  1771                           ; 1 bytes @ 0x26
  1772  000027                     	ds	1
  1773  000028                     ?___fltol:
  1774                           	opt callstack 0
  1775  000028                     ___fltol@f1:
  1776                           	opt callstack 0
  1777                           
  1778                           ; 4 bytes @ 0x27
  1779  000028                     	ds	4
  1780  00002C                     ??___fltol:
  1781                           
  1782                           ; 1 bytes @ 0x2B
  1783  00002C                     	ds	4
  1784  000030                     ___fltol@sign1:
  1785                           	opt callstack 0
  1786                           
  1787                           ; 1 bytes @ 0x2F
  1788  000030                     	ds	1
  1789  000031                     ___fltol@exp1:
  1790                           	opt callstack 0
  1791                           
  1792                           ; 1 bytes @ 0x30
  1793  000031                     	ds	1
  1794  000032                     ??_echo:
  1795                           
  1796                           ; 1 bytes @ 0x31
  1797  000032                     	ds	4
  1798  000036                     ??_ISR:
  1799                           
  1800                           ; 1 bytes @ 0x35
  1801  000036                     	ds	2
  1802                           
  1803 ;;
  1804 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1805 ;;
  1806 ;; *************** function _main *****************
  1807 ;; Defined at:
  1808 ;;		line 688 in file "main.c"
  1809 ;; Parameters:    Size  Location     Type
  1810 ;;		None
  1811 ;; Auto vars:     Size  Location     Type
  1812 ;;  k               2   94[BANK2 ] int 
  1813 ;;  i               2   88[BANK2 ] int 
  1814 ;;  i               2   86[BANK2 ] int 
  1815 ;;  i               2  100[BANK2 ] int 
  1816 ;;  pole_cl_dist    2   82[BANK2 ] int 
  1817 ;;  Pole           80    0[BANK2 ] struct Poles[10]
  1818 ;;  prev_avg_dis    4  104[BANK2 ] volatile long 
  1819 ;;  poles_detect    2  102[BANK2 ] int 
  1820 ;;  t_dep           2   98[BANK2 ] int 
  1821 ;;  t_count         2   96[BANK2 ] int 
  1822 ;;  stack           2   92[BANK2 ] int 
  1823 ;;  steps2_adj      2   84[BANK2 ] int 
  1824 ;;  read            2    0        int 
  1825 ;;  arduino_stop    1   91[BANK2 ] _Bool 
  1826 ;;  act_done        1   90[BANK2 ] _Bool 
  1827 ;; Return value:  Size  Location     Type
  1828 ;;                  1    wreg      void 
  1829 ;; Registers used:
  1830 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1831 ;; Tracked objects:
  1832 ;;		On entry : 0/0
  1833 ;;		On exit  : 0/0
  1834 ;;		Unchanged: 0/0
  1835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1837 ;;      Locals:         0       0       0     108       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1838 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1839 ;;      Totals:         0       0       2     108       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1840 ;;Total ram usage:      110 bytes
  1841 ;; Hardware stack levels required when called:   17
  1842 ;; This function calls:
  1843 ;;		_UI_main
  1844 ;;		___wmul
  1845 ;;		_actuators_main
  1846 ;;		_backwards
  1847 ;;		_brake
  1848 ;;		_initLCD
  1849 ;;		_lcdInst
  1850 ;;		_number_deploy
  1851 ;;		_printf
  1852 ;;		_start
  1853 ;;		_ultrasonic_main
  1854 ;; This function is called by:
  1855 ;;		Startup code after reset
  1856 ;; This function uses a non-reentrant model
  1857 ;;
  1858                           
  1859                           	psect	text0
  1860  000D6A                     __ptext0:
  1861                           	opt callstack 0
  1862  000D6A                     _main:
  1863                           	opt callstack 14
  1864                           
  1865                           ;main.c: 690:     int t_dep=0;
  1866                           
  1867                           ;incstack = 0
  1868  000D6A  0E00               	movlw	0
  1869  000D6C  0102               	movlb	2	; () banked
  1870  000D6E  6FE3               	movwf	(main@t_dep+1)& (0+255),b
  1871  000D70  0E00               	movlw	0
  1872  000D72  6FE2               	movwf	main@t_dep& (0+255),b
  1873                           
  1874                           ;main.c: 691:     int t_count;;main.c: 692:  TRISD = 0x00;
  1875  000D74  0E00               	movlw	0
  1876  000D76  6E95               	movwf	3989,c	;volatile
  1877                           
  1878                           ; BSR set to: 2
  1879                           ;main.c: 693:  GIE = 1;
  1880  000D78  8EF2               	bsf	4082,7,c	;volatile
  1881                           
  1882                           ;main.c: 695:     ADCON1=0x0F;
  1883  000D7A  0E0F               	movlw	15
  1884  000D7C  6EC1               	movwf	4033,c	;volatile
  1885                           
  1886                           ; BSR set to: 2
  1887                           ;main.c: 697:  initLCD();
  1888  000D7E  ECE6  F019         	call	_initLCD	;wreg free
  1889                           
  1890                           ;main.c: 699:  T1CON = 0x10;
  1891  000D82  0E10               	movlw	16
  1892  000D84  6ECD               	movwf	4045,c	;volatile
  1893                           
  1894                           ;main.c: 700:     int poles_detected=0;
  1895  000D86  0E00               	movlw	0
  1896  000D88  0102               	movlb	2	; () banked
  1897  000D8A  6FE7               	movwf	(main@poles_detected+1)& (0+255),b
  1898  000D8C  0E00               	movlw	0
  1899  000D8E  6FE6               	movwf	main@poles_detected& (0+255),b
  1900                           
  1901                           ; BSR set to: 2
  1902                           ;main.c: 702:     volatile long prev_avg_dist=0;
  1903                           
  1904                           ; BSR set to: 2
  1905  000D90  0E00               	movlw	0
  1906  000D92  6FE8               	movwf	main@prev_avg_dist& (0+255),b	;volatile
  1907  000D94  0E00               	movlw	0
  1908  000D96  6FE9               	movwf	(main@prev_avg_dist+1)& (0+255),b	;volatile
  1909  000D98  0E00               	movlw	0
  1910  000D9A  6FEA               	movwf	(main@prev_avg_dist+2)& (0+255),b	;volatile
  1911  000D9C  0E00               	movlw	0
  1912  000D9E  6FEB               	movwf	(main@prev_avg_dist+3)& (0+255),b	;volatile
  1913                           
  1914                           ; BSR set to: 2
  1915                           ;main.c: 704:     TRISAbits.RA4 = 0;
  1916  000DA0  9892               	bcf	3986,4,c	;volatile
  1917                           
  1918                           ; BSR set to: 2
  1919                           ;main.c: 705:     PORTAbits.RA4 = LATAbits.LATA4;
  1920  000DA2  A889               	btfss	3977,4,c	;volatile
  1921  000DA4  D002               	bra	u8585
  1922  000DA6  8880               	bsf	3968,4,c	;volatile
  1923  000DA8  D001               	bra	u8587
  1924  000DAA                     u8585:
  1925  000DAA  9880               	bcf	3968,4,c	;volatile
  1926  000DAC                     u8587:
  1927                           
  1928                           ;main.c: 708:     _Bool arduino_stopped = 0;
  1929  000DAC  0E00               	movlw	0
  1930  000DAE  0102               	movlb	2	; () banked
  1931  000DB0  6FDB               	movwf	main@arduino_stopped& (0+255),b
  1932                           
  1933                           ; BSR set to: 2
  1934                           ;main.c: 710:     Poles Pole[10];;main.c: 718:     if (~sens){
  1935  000DB2  2858               	incf	_sens,w,c	;volatile
  1936  000DB4  E103               	bnz	u8590
  1937  000DB6  2859               	incf	_sens+1,w,c	;volatile
  1938  000DB8  B4D8               	btfsc	status,2,c
  1939  000DBA  D00B               	goto	l7954
  1940  000DBC                     u8590:
  1941                           
  1942                           ; BSR set to: 2
  1943                           ;main.c: 719:         UI_main( t_dep, poles_detected);
  1944  000DBC  0E00               	movlw	0
  1945  000DBE  0100               	movlb	0	; () banked
  1946  000DC0  6FFA               	movwf	(UI_main@t_dep+1)& (0+255),b
  1947  000DC2  0E00               	movlw	0
  1948  000DC4  6FF9               	movwf	UI_main@t_dep& (0+255),b
  1949  000DC6  0E00               	movlw	0
  1950  000DC8  6FFC               	movwf	(UI_main@poles_detected+1)& (0+255),b
  1951  000DCA  0E00               	movlw	0
  1952  000DCC  6FFB               	movwf	UI_main@poles_detected& (0+255),b
  1953  000DCE  EC09  F000         	call	_UI_main	;wreg free
  1954  000DD2                     l7954:
  1955                           
  1956                           ;main.c: 722:         PORTAbits.RA4 = LATAbits.LATA4;
  1957  000DD2  A889               	btfss	3977,4,c	;volatile
  1958  000DD4  D002               	bra	u8605
  1959  000DD6  8880               	bsf	3968,4,c	;volatile
  1960  000DD8  D001               	bra	u8607
  1961  000DDA                     u8605:
  1962  000DDA  9880               	bcf	3968,4,c	;volatile
  1963  000DDC                     u8607:
  1964                           
  1965                           ;main.c: 727:         if ((poles_detected <10)&&(avg_dist<4000)){
  1966  000DDC  0102               	movlb	2	; () banked
  1967  000DDE  BFE7               	btfsc	(main@poles_detected+1)& (0+255),7,b
  1968  000DE0  D006               	goto	u8610
  1969  000DE2  51E7               	movf	(main@poles_detected+1)& (0+255),w,b
  1970  000DE4  E103               	bnz	u8611
  1971  000DE6  0E0A               	movlw	10
  1972  000DE8  5DE6               	subwf	main@poles_detected& (0+255),w,b
  1973  000DEA  B0D8               	btfsc	status,0,c
  1974  000DEC                     u8611:
  1975  000DEC  D1EB               	goto	l8088
  1976  000DEE                     u8610:
  1977                           
  1978                           ; BSR set to: 2
  1979  000DEE  BE47               	btfsc	_avg_dist+3,7,c	;volatile
  1980  000DF0  D095               	goto	l8006
  1981  000DF2  5047               	movf	_avg_dist+3,w,c	;volatile
  1982  000DF4  1046               	iorwf	_avg_dist+2,w,c	;volatile
  1983  000DF6  E106               	bnz	u8621
  1984  000DF8  0EA0               	movlw	160
  1985  000DFA  5C44               	subwf	_avg_dist,w,c	;volatile
  1986  000DFC  0E0F               	movlw	15
  1987  000DFE  5845               	subwfb	_avg_dist+1,w,c	;volatile
  1988  000E00  A0D8               	btfss	status,0,c
  1989  000E02  D08C               	goto	l8006
  1990  000E04                     u8621:
  1991  000E04  D1DF               	goto	l8088
  1992  000E06                     l7962:
  1993                           
  1994                           ;main.c: 738:                 t_count = 5;
  1995  000E06  0E00               	movlw	0
  1996  000E08  0102               	movlb	2	; () banked
  1997  000E0A  6FE1               	movwf	(main@t_count+1)& (0+255),b
  1998  000E0C  0E05               	movlw	5
  1999  000E0E  6FE0               	movwf	main@t_count& (0+255),b
  2000                           
  2001                           ; BSR set to: 2
  2002                           ;main.c: 739:                     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/
      +                          4000.0)));};
  2003  000E10  0E01               	movlw	1
  2004  000E12  EC79  F01D         	call	_lcdInst
  2005  000E16  0E11               	movlw	17
  2006  000E18  0101               	movlb	1	; () banked
  2007  000E1A  6F5A               	movwf	??_main& (0+255),b
  2008  000E1C  0E3A               	movlw	58
  2009  000E1E                     u8757:
  2010  000E1E  2EE8               	decfsz	wreg,f,c
  2011  000E20  D7FE               	bra	u8757
  2012  000E22  2F5A               	decfsz	??_main& (0+255),f,b
  2013  000E24  D7FC               	bra	u8757
  2014  000E26  F000               	nop	
  2015                           
  2016                           ;main.c: 740:                     printf("waiting");
  2017  000E28  0E31               	movlw	low (STR_54+5)
  2018  000E2A  0100               	movlb	0	; () banked
  2019  000E2C  6FED               	movwf	printf@fmt& (0+255),b
  2020  000E2E  0EFC               	movlw	high (STR_54+5)
  2021  000E30  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2022  000E32  EC00  F01D         	call	_printf	;wreg free
  2023                           
  2024                           ;main.c: 742:                     if (!PORTAbits.RA4){
  2025  000E36  B880               	btfsc	3968,4,c	;volatile
  2026  000E38  D013               	goto	l7978
  2027                           
  2028                           ;main.c: 743:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  2029  000E3A  0E01               	movlw	1
  2030  000E3C  EC79  F01D         	call	_lcdInst
  2031  000E40  0E11               	movlw	17
  2032  000E42  0101               	movlb	1	; () banked
  2033  000E44  6F5A               	movwf	??_main& (0+255),b
  2034  000E46  0E3A               	movlw	58
  2035  000E48                     u8767:
  2036  000E48  2EE8               	decfsz	wreg,f,c
  2037  000E4A  D7FE               	bra	u8767
  2038  000E4C  2F5A               	decfsz	??_main& (0+255),f,b
  2039  000E4E  D7FC               	bra	u8767
  2040  000E50  F000               	nop	
  2041                           
  2042                           ;main.c: 744:                         printf("more waiting");
  2043  000E52  0E2C               	movlw	low STR_54
  2044  000E54  0100               	movlb	0	; () banked
  2045  000E56  6FED               	movwf	printf@fmt& (0+255),b
  2046  000E58  0EFC               	movlw	high STR_54
  2047  000E5A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2048  000E5C  EC00  F01D         	call	_printf	;wreg free
  2049  000E60                     l7978:
  2050                           
  2051                           ;main.c: 746:                     if (PORTAbits.RA4){
  2052  000E60  A880               	btfss	3968,4,c	;volatile
  2053  000E62  D016               	goto	l7988
  2054                           
  2055                           ;main.c: 748:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  2056  000E64  0E01               	movlw	1
  2057  000E66  EC79  F01D         	call	_lcdInst
  2058  000E6A  0E11               	movlw	17
  2059  000E6C  0101               	movlb	1	; () banked
  2060  000E6E  6F5A               	movwf	??_main& (0+255),b
  2061  000E70  0E3A               	movlw	58
  2062  000E72                     u8777:
  2063  000E72  2EE8               	decfsz	wreg,f,c
  2064  000E74  D7FE               	bra	u8777
  2065  000E76  2F5A               	decfsz	??_main& (0+255),f,b
  2066  000E78  D7FC               	bra	u8777
  2067  000E7A  F000               	nop	
  2068                           
  2069                           ;main.c: 749:                         printf("done wait");
  2070  000E7C  0EEA               	movlw	low STR_55
  2071  000E7E  0100               	movlb	0	; () banked
  2072  000E80  6FED               	movwf	printf@fmt& (0+255),b
  2073  000E82  0EFC               	movlw	high STR_55
  2074  000E84  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2075  000E86  EC00  F01D         	call	_printf	;wreg free
  2076                           
  2077                           ;main.c: 750:                         arduino_stopped = 1;
  2078  000E8A  0E01               	movlw	1
  2079  000E8C  0102               	movlb	2	; () banked
  2080  000E8E  6FDB               	movwf	main@arduino_stopped& (0+255),b
  2081  000E90                     l7988:
  2082                           
  2083                           ;main.c: 752:                     if (arduino_stopped){
  2084  000E90  0102               	movlb	2	; () banked
  2085  000E92  51DB               	movf	main@arduino_stopped& (0+255),w,b
  2086  000E94  B4D8               	btfsc	status,2,c
  2087  000E96  D042               	goto	l8006
  2088                           
  2089                           ; BSR set to: 2
  2090                           ;main.c: 753:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  2091  000E98  0E01               	movlw	1
  2092  000E9A  EC79  F01D         	call	_lcdInst
  2093  000E9E  0E11               	movlw	17
  2094  000EA0  0101               	movlb	1	; () banked
  2095  000EA2  6F5A               	movwf	??_main& (0+255),b
  2096  000EA4  0E3A               	movlw	58
  2097  000EA6                     u8787:
  2098  000EA6  2EE8               	decfsz	wreg,f,c
  2099  000EA8  D7FE               	bra	u8787
  2100  000EAA  2F5A               	decfsz	??_main& (0+255),f,b
  2101  000EAC  D7FC               	bra	u8787
  2102  000EAE  F000               	nop	
  2103                           
  2104                           ;main.c: 754:                         printf("dun break");
  2105  000EB0  0ED6               	movlw	low STR_56
  2106  000EB2  0100               	movlb	0	; () banked
  2107  000EB4  6FED               	movwf	printf@fmt& (0+255),b
  2108  000EB6  0EFC               	movlw	high STR_56
  2109  000EB8  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2110  000EBA  EC00  F01D         	call	_printf	;wreg free
  2111                           
  2112                           ;main.c: 755:                         steps2_adj=ultrasonic_main();
  2113  000EBE  EC26  F010         	call	_ultrasonic_main	;wreg free
  2114  000EC2  C0FA  F2D4         	movff	?_ultrasonic_main,main@steps2_adj
  2115  000EC6  C0FB  F2D5         	movff	?_ultrasonic_main+1,main@steps2_adj+1
  2116                           
  2117                           ;main.c: 756:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  2118  000ECA  0E01               	movlw	1
  2119  000ECC  EC79  F01D         	call	_lcdInst
  2120  000ED0  0E11               	movlw	17
  2121  000ED2  0101               	movlb	1	; () banked
  2122  000ED4  6F5A               	movwf	??_main& (0+255),b
  2123  000ED6  0E3A               	movlw	58
  2124  000ED8                     u8797:
  2125  000ED8  2EE8               	decfsz	wreg,f,c
  2126  000EDA  D7FE               	bra	u8797
  2127  000EDC  2F5A               	decfsz	??_main& (0+255),f,b
  2128  000EDE  D7FC               	bra	u8797
  2129  000EE0  F000               	nop	
  2130                           
  2131                           ;main.c: 757:                         printf("stepsadj %d", steps2_adj);
  2132  000EE2  0E52               	movlw	low STR_22
  2133  000EE4  0100               	movlb	0	; () banked
  2134  000EE6  6FED               	movwf	printf@fmt& (0+255),b
  2135  000EE8  0EFC               	movlw	high STR_22
  2136  000EEA  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2137  000EEC  C2D4  F0EF         	movff	main@steps2_adj,?_printf+2
  2138  000EF0  C2D5  F0F0         	movff	main@steps2_adj+1,?_printf+3
  2139  000EF4  EC00  F01D         	call	_printf	;wreg free
  2140                           
  2141                           ;main.c: 758:                         t_count = number_deploy(avg_dist, poles_detected);
  2142  000EF8  C044  F0F9         	movff	_avg_dist,number_deploy@avg_dist	;volatile
  2143  000EFC  C045  F0FA         	movff	_avg_dist+1,number_deploy@avg_dist+1	;volatile
  2144  000F00  C2E6  F0FB         	movff	main@poles_detected,number_deploy@poles_detected
  2145  000F04  C2E7  F0FC         	movff	main@poles_detected+1,number_deploy@poles_detected+1
  2146  000F08  EC3C  F011         	call	_number_deploy	;wreg free
  2147  000F0C  C0F9  F2E0         	movff	?_number_deploy,main@t_count
  2148  000F10  C0FA  F2E1         	movff	?_number_deploy+1,main@t_count+1
  2149                           
  2150                           ;main.c: 759:                         sens = 0;
  2151  000F14  0E00               	movlw	0
  2152  000F16  6E59               	movwf	_sens+1,c	;volatile
  2153  000F18  0E00               	movlw	0
  2154  000F1A  6E58               	movwf	_sens,c	;volatile
  2155  000F1C                     l8006:
  2156                           
  2157                           ;main.c: 735:             while (sens){
  2158  000F1C  5058               	movf	_sens,w,c	;volatile
  2159  000F1E  1059               	iorwf	_sens+1,w,c	;volatile
  2160  000F20  A4D8               	btfss	status,2,c
  2161  000F22  D771               	goto	l7962
  2162                           
  2163                           ;main.c: 762:             int pole_cl_dist = (avg_dist)-(prev_avg_dist);
  2164  000F24  0102               	movlb	2	; () banked
  2165  000F26  51E8               	movf	main@prev_avg_dist& (0+255),w,b	;volatile
  2166  000F28  5C44               	subwf	_avg_dist,w,c	;volatile
  2167  000F2A  6FD2               	movwf	main@pole_cl_dist& (0+255),b
  2168  000F2C  51E9               	movf	(main@prev_avg_dist+1)& (0+255),w,b	;volatile
  2169  000F2E  5845               	subwfb	_avg_dist+1,w,c	;volatile
  2170  000F30  6FD3               	movwf	(main@pole_cl_dist+1)& (0+255),b
  2171                           
  2172                           ; BSR set to: 2
  2173                           ;main.c: 768:             act_done = 0;
  2174  000F32  0E00               	movlw	0
  2175  000F34  6FDA               	movwf	main@act_done& (0+255),b
  2176                           
  2177                           ; BSR set to: 2
  2178                           ;main.c: 769:             if (t_count<=2){
  2179  000F36  BFE1               	btfsc	(main@t_count+1)& (0+255),7,b
  2180  000F38  D006               	goto	u8670
  2181  000F3A  51E1               	movf	(main@t_count+1)& (0+255),w,b
  2182  000F3C  E165               	bnz	l530
  2183  000F3E  0E03               	movlw	3
  2184  000F40  5DE0               	subwf	main@t_count& (0+255),w,b
  2185  000F42  B0D8               	btfsc	status,0,c
  2186  000F44  D061               	goto	l530
  2187  000F46                     u8670:
  2188                           
  2189                           ; BSR set to: 2
  2190                           ;main.c: 770:                 if (t_dep <8){
  2191  000F46  BFE3               	btfsc	(main@t_dep+1)& (0+255),7,b
  2192  000F48  D006               	goto	u8680
  2193  000F4A  51E3               	movf	(main@t_dep+1)& (0+255),w,b
  2194  000F4C  E12C               	bnz	l8030
  2195  000F4E  0E08               	movlw	8
  2196  000F50  5DE2               	subwf	main@t_dep& (0+255),w,b
  2197  000F52  B0D8               	btfsc	status,0,c
  2198  000F54  D028               	goto	u8690
  2199  000F56                     u8680:
  2200                           
  2201                           ; BSR set to: 2
  2202                           ;main.c: 773:                     stack = 1;
  2203  000F56  0E00               	movlw	0
  2204  000F58  6FDD               	movwf	(main@stack+1)& (0+255),b
  2205  000F5A  0E01               	movlw	1
  2206  000F5C  6FDC               	movwf	main@stack& (0+255),b
  2207                           
  2208                           ; BSR set to: 2
  2209                           ;main.c: 774:                                     brake();
  2210  000F5E  EC28  F01D         	call	_brake	;wreg free
  2211                           
  2212                           ;main.c: 776:                     for(int i=0; i<(t_count); i++){
  2213  000F62  0E00               	movlw	0
  2214  000F64  0102               	movlb	2	; () banked
  2215  000F66  6FD7               	movwf	(main@i+1)& (0+255),b
  2216  000F68  0E00               	movlw	0
  2217  000F6A  6FD6               	movwf	main@i& (0+255),b
  2218  000F6C  D00F               	goto	l8028
  2219  000F6E                     l8022:
  2220                           
  2221                           ; BSR set to: 1
  2222                           ;main.c: 778:                         actuators_main(stack, 110);
  2223  000F6E  C2DC  F10C         	movff	main@stack,actuators_main@stack
  2224  000F72  C2DD  F10D         	movff	main@stack+1,actuators_main@stack+1
  2225  000F76  0E00               	movlw	0
  2226  000F78  6F0F               	movwf	(actuators_main@steps2_adj+1)& (0+255),b
  2227  000F7A  0E6E               	movlw	110
  2228  000F7C  6F0E               	movwf	actuators_main@steps2_adj& (0+255),b
  2229  000F7E  EC2B  F015         	call	_actuators_main	;wreg free
  2230                           
  2231                           ;main.c: 779:                         t_dep++;
  2232  000F82  0102               	movlb	2	; () banked
  2233  000F84  4BE2               	infsnz	main@t_dep& (0+255),f,b
  2234  000F86  2BE3               	incf	(main@t_dep+1)& (0+255),f,b
  2235                           
  2236                           ; BSR set to: 2
  2237                           ;main.c: 780:                     }
  2238  000F88  4BD6               	infsnz	main@i& (0+255),f,b
  2239  000F8A  2BD7               	incf	(main@i+1)& (0+255),f,b
  2240  000F8C                     l8028:
  2241                           
  2242                           ; BSR set to: 2
  2243  000F8C  51E0               	movf	main@t_count& (0+255),w,b
  2244  000F8E  5DD6               	subwf	main@i& (0+255),w,b
  2245  000F90  51D7               	movf	(main@i+1)& (0+255),w,b
  2246  000F92  0A80               	xorlw	128
  2247  000F94  0101               	movlb	1	; () banked
  2248  000F96  6F5A               	movwf	??_main& (0+255),b
  2249  000F98  0102               	movlb	2	; () banked
  2250  000F9A  51E1               	movf	(main@t_count+1)& (0+255),w,b
  2251  000F9C  0A80               	xorlw	128
  2252  000F9E  0101               	movlb	1	; () banked
  2253  000FA0  595A               	subwfb	??_main& (0+255),w,b
  2254  000FA2  A0D8               	btfss	status,0,c
  2255  000FA4  D7E4               	goto	l8022
  2256  000FA6                     u8690:
  2257  000FA6                     l8030:
  2258                           
  2259                           ;main.c: 782:                 if (t_dep >= 8){
  2260  000FA6  0102               	movlb	2	; () banked
  2261  000FA8  BFE3               	btfsc	(main@t_dep+1)& (0+255),7,b
  2262  000FAA  D02B               	goto	u8710
  2263  000FAC  51E3               	movf	(main@t_dep+1)& (0+255),w,b
  2264  000FAE  E104               	bnz	u8700
  2265  000FB0  0E08               	movlw	8
  2266  000FB2  5DE2               	subwf	main@t_dep& (0+255),w,b
  2267  000FB4  A0D8               	btfss	status,0,c
  2268  000FB6  D025               	goto	u8710
  2269  000FB8                     u8700:
  2270                           
  2271                           ; BSR set to: 2
  2272                           ;main.c: 783:                     stack = 2;
  2273  000FB8  0E00               	movlw	0
  2274  000FBA  6FDD               	movwf	(main@stack+1)& (0+255),b
  2275  000FBC  0E02               	movlw	2
  2276  000FBE  6FDC               	movwf	main@stack& (0+255),b
  2277                           
  2278                           ;main.c: 784:                     for(int i=0; i<(t_count); i++){
  2279  000FC0  0E00               	movlw	0
  2280  000FC2  6FD9               	movwf	(main@i_1018+1)& (0+255),b
  2281  000FC4  0E00               	movlw	0
  2282  000FC6  6FD8               	movwf	main@i_1018& (0+255),b
  2283  000FC8  D00F               	goto	l8040
  2284  000FCA                     l8034:
  2285                           
  2286                           ; BSR set to: 1
  2287                           ;main.c: 786:                         actuators_main(stack, 110);
  2288  000FCA  C2DC  F10C         	movff	main@stack,actuators_main@stack
  2289  000FCE  C2DD  F10D         	movff	main@stack+1,actuators_main@stack+1
  2290  000FD2  0E00               	movlw	0
  2291  000FD4  6F0F               	movwf	(actuators_main@steps2_adj+1)& (0+255),b
  2292  000FD6  0E6E               	movlw	110
  2293  000FD8  6F0E               	movwf	actuators_main@steps2_adj& (0+255),b
  2294  000FDA  EC2B  F015         	call	_actuators_main	;wreg free
  2295                           
  2296                           ;main.c: 787:                         t_dep++;
  2297  000FDE  0102               	movlb	2	; () banked
  2298  000FE0  4BE2               	infsnz	main@t_dep& (0+255),f,b
  2299  000FE2  2BE3               	incf	(main@t_dep+1)& (0+255),f,b
  2300                           
  2301                           ; BSR set to: 2
  2302                           ;main.c: 788:                     }
  2303  000FE4  4BD8               	infsnz	main@i_1018& (0+255),f,b
  2304  000FE6  2BD9               	incf	(main@i_1018+1)& (0+255),f,b
  2305  000FE8                     l8040:
  2306                           
  2307                           ; BSR set to: 2
  2308  000FE8  51E0               	movf	main@t_count& (0+255),w,b
  2309  000FEA  5DD8               	subwf	main@i_1018& (0+255),w,b
  2310  000FEC  51D9               	movf	(main@i_1018+1)& (0+255),w,b
  2311  000FEE  0A80               	xorlw	128
  2312  000FF0  0101               	movlb	1	; () banked
  2313  000FF2  6F5A               	movwf	??_main& (0+255),b
  2314  000FF4  0102               	movlb	2	; () banked
  2315  000FF6  51E1               	movf	(main@t_count+1)& (0+255),w,b
  2316  000FF8  0A80               	xorlw	128
  2317  000FFA  0101               	movlb	1	; () banked
  2318  000FFC  595A               	subwfb	??_main& (0+255),w,b
  2319  000FFE  A0D8               	btfss	status,0,c
  2320  001000  D7E4               	goto	l8034
  2321  001002                     u8710:
  2322                           
  2323                           ;main.c: 790:                 act_done = 1;
  2324  001002  0E01               	movlw	1
  2325  001004  0102               	movlb	2	; () banked
  2326  001006  6FDA               	movwf	main@act_done& (0+255),b
  2327  001008                     l530:
  2328                           
  2329                           ; BSR set to: 2
  2330                           ;main.c: 792:             if (act_done){
  2331  001008  51DA               	movf	main@act_done& (0+255),w,b
  2332  00100A  B4D8               	btfsc	status,2,c
  2333  00100C  D129               	goto	l8104
  2334                           
  2335                           ; BSR set to: 2
  2336                           ;main.c: 794:             Pole[poles_detected].dist_from_cl = pole_cl_dist;
  2337  00100E  C2E6  F15A         	movff	main@poles_detected,??_main
  2338  001012  C2E7  F15B         	movff	main@poles_detected+1,??_main+1
  2339  001016  0101               	movlb	1	; () banked
  2340  001018  90D8               	bcf	status,0,c
  2341  00101A  375A               	rlcf	??_main& (0+255),f,b
  2342  00101C  375B               	rlcf	(??_main+1)& (0+255),f,b
  2343  00101E  90D8               	bcf	status,0,c
  2344  001020  375A               	rlcf	??_main& (0+255),f,b
  2345  001022  375B               	rlcf	(??_main+1)& (0+255),f,b
  2346  001024  90D8               	bcf	status,0,c
  2347  001026  375A               	rlcf	??_main& (0+255),f,b
  2348  001028  375B               	rlcf	(??_main+1)& (0+255),f,b
  2349  00102A  0E06               	movlw	6
  2350  00102C  275A               	addwf	??_main& (0+255),f,b
  2351  00102E  0E00               	movlw	0
  2352  001030  235B               	addwfc	(??_main+1)& (0+255),f,b
  2353  001032  0E80               	movlw	low main@Pole
  2354  001034  255A               	addwf	??_main& (0+255),w,b
  2355  001036  6ED9               	movwf	fsr2l,c
  2356  001038  0E02               	movlw	high main@Pole
  2357  00103A  215B               	addwfc	(??_main+1)& (0+255),w,b
  2358  00103C  6EDA               	movwf	fsr2h,c
  2359  00103E  C2D2  FFDE         	movff	main@pole_cl_dist,postinc2
  2360  001042  C2D3  FFDD         	movff	main@pole_cl_dist+1,postdec2
  2361                           
  2362                           ;main.c: 795:             Pole[poles_detected].dist_from_start = avg_dist;
  2363  001046  C2E6  F15A         	movff	main@poles_detected,??_main
  2364  00104A  C2E7  F15B         	movff	main@poles_detected+1,??_main+1
  2365  00104E  90D8               	bcf	status,0,c
  2366  001050  375A               	rlcf	??_main& (0+255),f,b
  2367  001052  375B               	rlcf	(??_main+1)& (0+255),f,b
  2368  001054  90D8               	bcf	status,0,c
  2369  001056  375A               	rlcf	??_main& (0+255),f,b
  2370  001058  375B               	rlcf	(??_main+1)& (0+255),f,b
  2371  00105A  90D8               	bcf	status,0,c
  2372  00105C  375A               	rlcf	??_main& (0+255),f,b
  2373  00105E  375B               	rlcf	(??_main+1)& (0+255),f,b
  2374  001060  0E04               	movlw	4
  2375  001062  275A               	addwf	??_main& (0+255),f,b
  2376  001064  0E00               	movlw	0
  2377  001066  235B               	addwfc	(??_main+1)& (0+255),f,b
  2378  001068  0E80               	movlw	low main@Pole
  2379  00106A  255A               	addwf	??_main& (0+255),w,b
  2380  00106C  6ED9               	movwf	fsr2l,c
  2381  00106E  0E02               	movlw	high main@Pole
  2382  001070  215B               	addwfc	(??_main+1)& (0+255),w,b
  2383  001072  6EDA               	movwf	fsr2h,c
  2384  001074  C044  FFDE         	movff	_avg_dist,postinc2	;volatile
  2385  001078  C045  FFDD         	movff	_avg_dist+1,postdec2	;volatile
  2386                           
  2387                           ; BSR set to: 1
  2388                           ;main.c: 797:             prev_avg_dist = avg_dist ;
  2389  00107C  C044  F2E8         	movff	_avg_dist,main@prev_avg_dist	;volatile
  2390  001080  C045  F2E9         	movff	_avg_dist+1,main@prev_avg_dist+1	;volatile
  2391  001084  C046  F2EA         	movff	_avg_dist+2,main@prev_avg_dist+2	;volatile
  2392  001088  C047  F2EB         	movff	_avg_dist+3,main@prev_avg_dist+3	;volatile
  2393                           
  2394                           ; BSR set to: 1
  2395                           ;main.c: 798:             poles_detected++;
  2396  00108C  0102               	movlb	2	; () banked
  2397  00108E  4BE6               	infsnz	main@poles_detected& (0+255),f,b
  2398  001090  2BE7               	incf	(main@poles_detected+1)& (0+255),f,b
  2399                           
  2400                           ; BSR set to: 2
  2401                           ;main.c: 800:             start();
  2402  001092  EC3A  F01B         	call	_start	;wreg free
  2403                           
  2404                           ;main.c: 801:             arduino_stopped = 0;
  2405  001096  0E00               	movlw	0
  2406  001098  0102               	movlb	2	; () banked
  2407  00109A  6FDB               	movwf	main@arduino_stopped& (0+255),b
  2408                           
  2409                           ; BSR set to: 2
  2410                           ;main.c: 807:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  2411  00109C  0E01               	movlw	1
  2412  00109E  EC79  F01D         	call	_lcdInst
  2413  0010A2  0E11               	movlw	17
  2414  0010A4  0101               	movlb	1	; () banked
  2415  0010A6  6F5A               	movwf	??_main& (0+255),b
  2416  0010A8  0E3A               	movlw	58
  2417  0010AA                     u8807:
  2418  0010AA  2EE8               	decfsz	wreg,f,c
  2419  0010AC  D7FE               	bra	u8807
  2420  0010AE  2F5A               	decfsz	??_main& (0+255),f,b
  2421  0010B0  D7FC               	bra	u8807
  2422  0010B2  F000               	nop	
  2423                           
  2424                           ;main.c: 808:             printf("avg dist %d", avg_dist);
  2425  0010B4  0E5E               	movlw	low STR_58
  2426  0010B6  0100               	movlb	0	; () banked
  2427  0010B8  6FED               	movwf	printf@fmt& (0+255),b
  2428  0010BA  0EFC               	movlw	high STR_58
  2429  0010BC  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2430  0010BE  C044  F0EF         	movff	_avg_dist,?_printf+2	;volatile
  2431  0010C2  C045  F0F0         	movff	_avg_dist+1,?_printf+3	;volatile
  2432  0010C6  C046  F0F1         	movff	_avg_dist+2,?_printf+4	;volatile
  2433  0010CA  C047  F0F2         	movff	_avg_dist+3,?_printf+5	;volatile
  2434  0010CE  EC00  F01D         	call	_printf	;wreg free
  2435                           
  2436                           ;main.c: 809:             printf("poles d %d", poles_detected);
  2437  0010D2  0E82               	movlw	low STR_59
  2438  0010D4  0100               	movlb	0	; () banked
  2439  0010D6  6FED               	movwf	printf@fmt& (0+255),b
  2440  0010D8  0EFC               	movlw	high STR_59
  2441  0010DA  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2442  0010DC  C2E6  F0EF         	movff	main@poles_detected,?_printf+2
  2443  0010E0  C2E7  F0F0         	movff	main@poles_detected+1,?_printf+3
  2444  0010E4  EC00  F01D         	call	_printf	;wreg free
  2445                           
  2446                           ;main.c: 810:                                 for (int i=0;i<4;i++){
  2447  0010E8  0E00               	movlw	0
  2448  0010EA  0102               	movlb	2	; () banked
  2449  0010EC  6FE5               	movwf	(main@i_1026+1)& (0+255),b
  2450  0010EE  0E00               	movlw	0
  2451  0010F0  6FE4               	movwf	main@i_1026& (0+255),b
  2452  0010F2                     l8064:
  2453                           
  2454                           ; BSR set to: 2
  2455  0010F2  BFE5               	btfsc	(main@i_1026+1)& (0+255),7,b
  2456  0010F4  D006               	goto	l8068
  2457  0010F6  51E5               	movf	(main@i_1026+1)& (0+255),w,b
  2458  0010F8  E160               	bnz	l8086
  2459  0010FA  0E04               	movlw	4
  2460  0010FC  5DE4               	subwf	main@i_1026& (0+255),w,b
  2461  0010FE  B0D8               	btfsc	status,0,c
  2462  001100  D05C               	goto	l8086
  2463  001102                     l8068:
  2464                           
  2465                           ; BSR set to: 2
  2466                           ;main.c: 811:                         sum[i] = 0 ;
  2467  001102  90D8               	bcf	status,0,c
  2468  001104  35E4               	rlcf	main@i_1026& (0+255),w,b
  2469  001106  6ED9               	movwf	fsr2l,c
  2470  001108  35E5               	rlcf	(main@i_1026+1)& (0+255),w,b
  2471  00110A  6EDA               	movwf	fsr2h,c
  2472  00110C  0E38               	movlw	low _sum
  2473  00110E  26D9               	addwf	fsr2l,f,c
  2474  001110  0E00               	movlw	high _sum
  2475  001112  22DA               	addwfc	fsr2h,f,c
  2476  001114  0E00               	movlw	0
  2477  001116  6EDE               	movwf	postinc2,c
  2478  001118  0E00               	movlw	0
  2479  00111A  6EDD               	movwf	postdec2,c
  2480                           
  2481                           ;main.c: 812:                         a[i] =0 ;
  2482  00111C  90D8               	bcf	status,0,c
  2483  00111E  35E4               	rlcf	main@i_1026& (0+255),w,b
  2484  001120  6ED9               	movwf	fsr2l,c
  2485  001122  35E5               	rlcf	(main@i_1026+1)& (0+255),w,b
  2486  001124  6EDA               	movwf	fsr2h,c
  2487  001126  0E61               	movlw	low _a
  2488  001128  26D9               	addwf	fsr2l,f,c
  2489  00112A  0E00               	movlw	high _a
  2490  00112C  22DA               	addwfc	fsr2h,f,c
  2491  00112E  0E00               	movlw	0
  2492  001130  6EDE               	movwf	postinc2,c
  2493  001132  0E00               	movlw	0
  2494  001134  6EDD               	movwf	postdec2,c
  2495                           
  2496                           ;main.c: 813:                         sumf[i] = 0 ;
  2497  001136  0E40               	movlw	low _sumf
  2498  001138  25E4               	addwf	main@i_1026& (0+255),w,b
  2499  00113A  6ED9               	movwf	fsr2l,c
  2500  00113C  0E00               	movlw	high _sumf
  2501  00113E  21E5               	addwfc	(main@i_1026+1)& (0+255),w,b
  2502  001140  6EDA               	movwf	fsr2h,c
  2503  001142  0E00               	movlw	0
  2504  001144  6EDF               	movwf	indf2,c
  2505                           
  2506                           ; BSR set to: 2
  2507                           ;main.c: 815:                         for (int k=0;k<6;k++){
  2508  001146  0E00               	movlw	0
  2509  001148  6FDF               	movwf	(main@k+1)& (0+255),b
  2510  00114A  0E00               	movlw	0
  2511  00114C  6FDE               	movwf	main@k& (0+255),b
  2512  00114E                     l8072:
  2513                           
  2514                           ; BSR set to: 2
  2515  00114E  BFDF               	btfsc	(main@k+1)& (0+255),7,b
  2516  001150  D006               	goto	l8076
  2517  001152  51DF               	movf	(main@k+1)& (0+255),w,b
  2518  001154  E12F               	bnz	l8082
  2519  001156  0E06               	movlw	6
  2520  001158  5DDE               	subwf	main@k& (0+255),w,b
  2521  00115A  B0D8               	btfsc	status,0,c
  2522  00115C  D02B               	goto	l8082
  2523  00115E                     l8076:
  2524                           
  2525                           ; BSR set to: 2
  2526                           ;main.c: 816:                             dist_final[i][k] = 0;
  2527  00115E  C2E4  F080         	movff	main@i_1026,___wmul@multiplier
  2528  001162  C2E5  F081         	movff	main@i_1026+1,___wmul@multiplier+1
  2529  001166  0E00               	movlw	0
  2530  001168  0100               	movlb	0	; () banked
  2531  00116A  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2532  00116C  0E0C               	movlw	12
  2533  00116E  6F82               	movwf	___wmul@multiplicand& (0+255),b
  2534  001170  EC14  F01D         	call	___wmul	;wreg free
  2535  001174  0E50               	movlw	low _dist_final
  2536  001176  0101               	movlb	1	; () banked
  2537  001178  6F5A               	movwf	??_main& (0+255),b
  2538  00117A  0E02               	movlw	high _dist_final
  2539  00117C  6F5B               	movwf	(??_main+1)& (0+255),b
  2540  00117E  0100               	movlb	0	; () banked
  2541  001180  5180               	movf	?___wmul& (0+255),w,b
  2542  001182  0101               	movlb	1	; () banked
  2543  001184  275A               	addwf	??_main& (0+255),f,b
  2544  001186  0100               	movlb	0	; () banked
  2545  001188  5181               	movf	(?___wmul+1)& (0+255),w,b
  2546  00118A  0101               	movlb	1	; () banked
  2547  00118C  235B               	addwfc	(??_main+1)& (0+255),f,b
  2548  00118E  90D8               	bcf	status,0,c
  2549  001190  0102               	movlb	2	; () banked
  2550  001192  35DE               	rlcf	main@k& (0+255),w,b
  2551  001194  6ED9               	movwf	fsr2l,c
  2552  001196  35DF               	rlcf	(main@k+1)& (0+255),w,b
  2553  001198  6EDA               	movwf	fsr2h,c
  2554  00119A  0101               	movlb	1	; () banked
  2555  00119C  515A               	movf	??_main& (0+255),w,b
  2556  00119E  26D9               	addwf	fsr2l,f,c
  2557  0011A0  515B               	movf	(??_main+1)& (0+255),w,b
  2558  0011A2  22DA               	addwfc	fsr2h,f,c
  2559  0011A4  0E00               	movlw	0
  2560  0011A6  6EDE               	movwf	postinc2,c
  2561  0011A8  0E00               	movlw	0
  2562  0011AA  6EDD               	movwf	postdec2,c
  2563                           
  2564                           ; BSR set to: 1
  2565                           ;main.c: 817:                         }
  2566  0011AC  0102               	movlb	2	; () banked
  2567  0011AE  4BDE               	infsnz	main@k& (0+255),f,b
  2568  0011B0  2BDF               	incf	(main@k+1)& (0+255),f,b
  2569  0011B2  D7CD               	goto	l8072
  2570  0011B4                     l8082:
  2571                           
  2572                           ; BSR set to: 2
  2573                           ;main.c: 818:                     }
  2574  0011B4  4BE4               	infsnz	main@i_1026& (0+255),f,b
  2575  0011B6  2BE5               	incf	(main@i_1026+1)& (0+255),f,b
  2576  0011B8  D79C               	goto	l8064
  2577  0011BA                     l8086:
  2578                           
  2579                           ; BSR set to: 2
  2580                           ;main.c: 820:             sens = 1;
  2581  0011BA  0E00               	movlw	0
  2582  0011BC  6E59               	movwf	_sens+1,c	;volatile
  2583  0011BE  0E01               	movlw	1
  2584  0011C0  6E58               	movwf	_sens,c	;volatile
  2585  0011C2  D04E               	goto	l8104
  2586  0011C4                     l8088:
  2587                           
  2588                           ; BSR set to: 2
  2589                           ;main.c: 824:             brake();
  2590  0011C4  EC28  F01D         	call	_brake	;wreg free
  2591                           
  2592                           ;main.c: 825:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  2593  0011C8  0E01               	movlw	1
  2594  0011CA  EC79  F01D         	call	_lcdInst
  2595  0011CE  0E11               	movlw	17
  2596  0011D0  0101               	movlb	1	; () banked
  2597  0011D2  6F5A               	movwf	??_main& (0+255),b
  2598  0011D4  0E3A               	movlw	58
  2599  0011D6                     u8817:
  2600  0011D6  2EE8               	decfsz	wreg,f,c
  2601  0011D8  D7FE               	bra	u8817
  2602  0011DA  2F5A               	decfsz	??_main& (0+255),f,b
  2603  0011DC  D7FC               	bra	u8817
  2604  0011DE  F000               	nop	
  2605                           
  2606                           ;main.c: 826:             printf("poles done");
  2607  0011E0  0E98               	movlw	low STR_60
  2608  0011E2  0100               	movlb	0	; () banked
  2609  0011E4  6FED               	movwf	printf@fmt& (0+255),b
  2610  0011E6  0EFC               	movlw	high STR_60
  2611  0011E8  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2612  0011EA  EC00  F01D         	call	_printf	;wreg free
  2613                           
  2614                           ;main.c: 827:             _delay((unsigned long)((1000)*(10000000/4000.0)));
  2615  0011EE  0E0D               	movlw	13
  2616  0011F0  0101               	movlb	1	; () banked
  2617  0011F2  6F5B               	movwf	(??_main+1)& (0+255),b
  2618  0011F4  0EAF               	movlw	175
  2619  0011F6  6F5A               	movwf	??_main& (0+255),b
  2620  0011F8  0EB6               	movlw	182
  2621  0011FA                     u8827:
  2622  0011FA  2EE8               	decfsz	wreg,f,c
  2623  0011FC  D7FE               	bra	u8827
  2624  0011FE  2F5A               	decfsz	??_main& (0+255),f,b
  2625  001200  D7FC               	bra	u8827
  2626  001202  2F5B               	decfsz	(??_main+1)& (0+255),f,b
  2627  001204  D7FA               	bra	u8827
  2628  001206  F000               	nop	
  2629                           
  2630                           ;main.c: 828:             UI_main(t_dep, poles_detected);
  2631  001208  C2E2  F0F9         	movff	main@t_dep,UI_main@t_dep
  2632  00120C  C2E3  F0FA         	movff	main@t_dep+1,UI_main@t_dep+1
  2633  001210  C2E6  F0FB         	movff	main@poles_detected,UI_main@poles_detected
  2634  001214  C2E7  F0FC         	movff	main@poles_detected+1,UI_main@poles_detected+1
  2635  001218  EC09  F000         	call	_UI_main	;wreg free
  2636                           
  2637                           ;main.c: 829:             backwards();
  2638  00121C  EC3B  F01D         	call	_backwards	;wreg free
  2639                           
  2640                           ;main.c: 830:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  2641  001220  0E01               	movlw	1
  2642  001222  EC79  F01D         	call	_lcdInst
  2643  001226  0E11               	movlw	17
  2644  001228  0101               	movlb	1	; () banked
  2645  00122A  6F5A               	movwf	??_main& (0+255),b
  2646  00122C  0E3A               	movlw	58
  2647  00122E                     u8837:
  2648  00122E  2EE8               	decfsz	wreg,f,c
  2649  001230  D7FE               	bra	u8837
  2650  001232  2F5A               	decfsz	??_main& (0+255),f,b
  2651  001234  D7FC               	bra	u8837
  2652  001236  F000               	nop	
  2653                           
  2654                           ;main.c: 831:             printf("backwards");
  2655  001238  0EE0               	movlw	low STR_61
  2656  00123A  0100               	movlb	0	; () banked
  2657  00123C  6FED               	movwf	printf@fmt& (0+255),b
  2658  00123E  0EFC               	movlw	high STR_61
  2659  001240  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2660  001242  EC00  F01D         	call	_printf	;wreg free
  2661                           
  2662                           ;main.c: 832:             _delay((unsigned long)((1000)*(10000000/4000.0)));
  2663  001246  0E0D               	movlw	13
  2664  001248  0101               	movlb	1	; () banked
  2665  00124A  6F5B               	movwf	(??_main+1)& (0+255),b
  2666  00124C  0EAF               	movlw	175
  2667  00124E  6F5A               	movwf	??_main& (0+255),b
  2668  001250  0EB6               	movlw	182
  2669  001252                     u8847:
  2670  001252  2EE8               	decfsz	wreg,f,c
  2671  001254  D7FE               	bra	u8847
  2672  001256  2F5A               	decfsz	??_main& (0+255),f,b
  2673  001258  D7FC               	bra	u8847
  2674  00125A  2F5B               	decfsz	(??_main+1)& (0+255),f,b
  2675  00125C  D7FA               	bra	u8847
  2676  00125E  F000               	nop	
  2677  001260                     l8104:
  2678                           
  2679                           ;main.c: 834:         t_count = 5;
  2680  001260  0E00               	movlw	0
  2681  001262  0102               	movlb	2	; () banked
  2682  001264  6FE1               	movwf	(main@t_count+1)& (0+255),b
  2683  001266  0E05               	movlw	5
  2684  001268  6FE0               	movwf	main@t_count& (0+255),b
  2685  00126A  D5B3               	goto	l7954
  2686  00126C                     __end_of_main:
  2687                           	opt callstack 0
  2688                           
  2689 ;; *************** function _ultrasonic_main *****************
  2690 ;; Defined at:
  2691 ;;		line 291 in file "main.c"
  2692 ;; Parameters:    Size  Location     Type
  2693 ;;		None
  2694 ;; Auto vars:     Size  Location     Type
  2695 ;;  min_us_dist     2    8[BANK1 ] int 
  2696 ;;  steps2_adj      2    6[BANK1 ] int 
  2697 ;;  step2_offset    2    4[BANK1 ] int 
  2698 ;;  sensed          2    2[BANK1 ] int 
  2699 ;;  min_us_dist     2    0        int 
  2700 ;; Return value:  Size  Location     Type
  2701 ;;                  2  122[BANK0 ] int 
  2702 ;; Registers used:
  2703 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2704 ;; Tracked objects:
  2705 ;;		On entry : 0/0
  2706 ;;		On exit  : 0/0
  2707 ;;		Unchanged: 0/0
  2708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2709 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2710 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2711 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2712 ;;      Totals:         0       4      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2713 ;;Total ram usage:       14 bytes
  2714 ;; Hardware stack levels used:    1
  2715 ;; Hardware stack levels required when called:   15
  2716 ;; This function calls:
  2717 ;;		_I2C_Master_Read
  2718 ;;		_I2C_Master_Start
  2719 ;;		_I2C_Master_Stop
  2720 ;;		_I2C_Master_Write
  2721 ;;		_abs
  2722 ;;		_lcdInst
  2723 ;;		_min
  2724 ;;		_print_echo
  2725 ;;		_printf
  2726 ;;		_trig
  2727 ;; This function is called by:
  2728 ;;		_main
  2729 ;; This function uses a non-reentrant model
  2730 ;;
  2731                           
  2732                           	psect	text1
  2733  00204C                     __ptext1:
  2734                           	opt callstack 0
  2735  00204C                     _ultrasonic_main:
  2736                           	opt callstack 15
  2737                           
  2738                           ;main.c: 292:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  2739                           
  2740                           ; BSR set to: 2
  2741                           ;incstack = 0
  2742  00204C  0E01               	movlw	1
  2743  00204E  EC79  F01D         	call	_lcdInst
  2744  002052  0E11               	movlw	17
  2745  002054  0100               	movlb	0	; () banked
  2746  002056  6FFC               	movwf	??_ultrasonic_main& (0+255),b
  2747  002058  0E3A               	movlw	58
  2748  00205A                     u8857:
  2749  00205A  2EE8               	decfsz	wreg,f,c
  2750  00205C  D7FE               	bra	u8857
  2751  00205E  2FFC               	decfsz	??_ultrasonic_main& (0+255),f,b
  2752  002060  D7FC               	bra	u8857
  2753  002062  F000               	nop	
  2754                           
  2755                           ;main.c: 293:     printf("break heree?");
  2756  002064  0E1F               	movlw	low STR_18
  2757  002066  0100               	movlb	0	; () banked
  2758  002068  6FED               	movwf	printf@fmt& (0+255),b
  2759  00206A  0EFC               	movlw	high STR_18
  2760  00206C  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2761  00206E  EC00  F01D         	call	_printf	;wreg free
  2762                           
  2763                           ;main.c: 294:     TRISBbits.RB0 = 0;
  2764  002072  9093               	bcf	3987,0,c	;volatile
  2765                           
  2766                           ;main.c: 295:     LATBbits.LATB0 = 1;
  2767  002074  808A               	bsf	3978,0,c	;volatile
  2768                           
  2769                           ;main.c: 297:  TRISB = 0b11110000;
  2770  002076  0EF0               	movlw	240
  2771  002078  6E93               	movwf	3987,c	;volatile
  2772                           
  2773                           ;main.c: 299:     RBIF = 0;
  2774  00207A  90F2               	bcf	4082,0,c	;volatile
  2775                           
  2776                           ;main.c: 300:  RBIE = 1;
  2777  00207C  86F2               	bsf	4082,3,c	;volatile
  2778                           
  2779                           ;main.c: 301:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  2780  00207E  0E01               	movlw	1
  2781  002080  EC79  F01D         	call	_lcdInst
  2782  002084  0E11               	movlw	17
  2783  002086  0100               	movlb	0	; () banked
  2784  002088  6FFC               	movwf	??_ultrasonic_main& (0+255),b
  2785  00208A  0E3A               	movlw	58
  2786  00208C                     u8867:
  2787  00208C  2EE8               	decfsz	wreg,f,c
  2788  00208E  D7FE               	bra	u8867
  2789  002090  2FFC               	decfsz	??_ultrasonic_main& (0+255),f,b
  2790  002092  D7FC               	bra	u8867
  2791  002094  F000               	nop	
  2792                           
  2793                           ;main.c: 302:     printf("or here");
  2794  002096  0E1B               	movlw	low STR_19
  2795  002098  0100               	movlb	0	; () banked
  2796  00209A  6FED               	movwf	printf@fmt& (0+255),b
  2797  00209C  0EFD               	movlw	high STR_19
  2798  00209E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2799  0020A0  EC00  F01D         	call	_printf	;wreg free
  2800                           
  2801                           ;main.c: 303:     int sensed = 0;
  2802  0020A4  0E00               	movlw	0
  2803  0020A6  0101               	movlb	1	; () banked
  2804  0020A8  6F03               	movwf	(ultrasonic_main@sensed+1)& (0+255),b
  2805  0020AA  0E00               	movlw	0
  2806  0020AC  6F02               	movwf	ultrasonic_main@sensed& (0+255),b
  2807                           
  2808                           ;main.c: 305:     int steps2_adj=0;
  2809  0020AE  0E00               	movlw	0
  2810  0020B0  6F07               	movwf	(ultrasonic_main@steps2_adj+1)& (0+255),b
  2811  0020B2  0E00               	movlw	0
  2812  0020B4  6F06               	movwf	ultrasonic_main@steps2_adj& (0+255),b
  2813                           
  2814                           ;main.c: 306:     int step2_offset=0;
  2815  0020B6  0E00               	movlw	0
  2816  0020B8  6F05               	movwf	(ultrasonic_main@step2_offset+1)& (0+255),b
  2817  0020BA  0E00               	movlw	0
  2818  0020BC  6F04               	movwf	ultrasonic_main@step2_offset& (0+255),b
  2819                           
  2820                           ;main.c: 307:     while(send){
  2821  0020BE  D070               	goto	l7524
  2822  0020C0                     l7482:
  2823                           
  2824                           ; BSR set to: 1
  2825                           ;main.c: 308:         for (meas=0; meas<3;meas++){
  2826  0020C0  0E00               	movlw	0
  2827  0020C2  6E51               	movwf	_meas+1,c	;volatile
  2828  0020C4  0E00               	movlw	0
  2829  0020C6  6E50               	movwf	_meas,c	;volatile
  2830  0020C8                     l7484:
  2831                           
  2832                           ; BSR set to: 1
  2833  0020C8  BE51               	btfsc	_meas+1,7,c	;volatile
  2834  0020CA  D006               	goto	l7488
  2835  0020CC  5051               	movf	_meas+1,w,c	;volatile
  2836  0020CE  E160               	bnz	l7520
  2837  0020D0  0E03               	movlw	3
  2838  0020D2  5C50               	subwf	_meas,w,c	;volatile
  2839  0020D4  B0D8               	btfsc	status,0,c
  2840  0020D6  D05C               	goto	l7520
  2841  0020D8                     l7488:
  2842                           
  2843                           ; BSR set to: 1
  2844                           ;main.c: 309:         trig();
  2845  0020D8  ECE1  F016         	call	_trig	;wreg free
  2846                           
  2847                           ;main.c: 310:         RBIE = 0;
  2848  0020DC  96F2               	bcf	4082,3,c	;volatile
  2849                           
  2850                           ;main.c: 311:         print_echo();
  2851  0020DE  EC4D  F012         	call	_print_echo	;wreg free
  2852                           
  2853                           ;main.c: 312:         RBIE = 1;
  2854  0020E2  86F2               	bsf	4082,3,c	;volatile
  2855                           
  2856                           ;main.c: 313:         int min_us_dist = min(a, 4);
  2857  0020E4  0E61               	movlw	low _a
  2858  0020E6  0100               	movlb	0	; () banked
  2859  0020E8  6F80               	movwf	min@array& (0+255),b
  2860  0020EA  0E00               	movlw	high _a
  2861  0020EC  6F81               	movwf	(min@array+1)& (0+255),b
  2862  0020EE  0E00               	movlw	0
  2863  0020F0  6F83               	movwf	(min@size+1)& (0+255),b
  2864  0020F2  0E04               	movlw	4
  2865  0020F4  6F82               	movwf	min@size& (0+255),b
  2866  0020F6  EC59  F016         	call	_min	;wreg free
  2867  0020FA  C080  F108         	movff	?_min,ultrasonic_main@min_us_dist_914
  2868  0020FE  C081  F109         	movff	?_min+1,ultrasonic_main@min_us_dist_914+1
  2869                           
  2870                           ;main.c: 314:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  2871  002102  0E01               	movlw	1
  2872  002104  EC79  F01D         	call	_lcdInst
  2873  002108  0E11               	movlw	17
  2874  00210A  0100               	movlb	0	; () banked
  2875  00210C  6FFC               	movwf	??_ultrasonic_main& (0+255),b
  2876  00210E  0E3A               	movlw	58
  2877  002110                     u8877:
  2878  002110  2EE8               	decfsz	wreg,f,c
  2879  002112  D7FE               	bra	u8877
  2880  002114  2FFC               	decfsz	??_ultrasonic_main& (0+255),f,b
  2881  002116  D7FC               	bra	u8877
  2882  002118  F000               	nop	
  2883                           
  2884                           ;main.c: 315:         printf("minimum %d", min_us_dist);
  2885  00211A  0E8D               	movlw	low STR_20
  2886  00211C  0100               	movlb	0	; () banked
  2887  00211E  6FED               	movwf	printf@fmt& (0+255),b
  2888  002120  0EFC               	movlw	high STR_20
  2889  002122  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2890  002124  C108  F0EF         	movff	ultrasonic_main@min_us_dist_914,?_printf+2
  2891  002128  C109  F0F0         	movff	ultrasonic_main@min_us_dist_914+1,?_printf+3
  2892  00212C  EC00  F01D         	call	_printf	;wreg free
  2893                           
  2894                           ;main.c: 317:         if (min_us_dist<14){
  2895  002130  0101               	movlb	1	; () banked
  2896  002132  BF09               	btfsc	(ultrasonic_main@min_us_dist_914+1)& (0+255),7,b
  2897  002134  D006               	goto	u8020
  2898  002136  5109               	movf	(ultrasonic_main@min_us_dist_914+1)& (0+255),w,b
  2899  002138  E108               	bnz	l7508
  2900  00213A  0E0E               	movlw	14
  2901  00213C  5D08               	subwf	ultrasonic_main@min_us_dist_914& (0+255),w,b
  2902  00213E  B0D8               	btfsc	status,0,c
  2903  002140  D004               	goto	l7508
  2904  002142                     u8020:
  2905                           
  2906                           ; BSR set to: 1
  2907                           ;main.c: 318:             step2_offset = 0;
  2908  002142  0E00               	movlw	0
  2909  002144  6F05               	movwf	(ultrasonic_main@step2_offset+1)& (0+255),b
  2910  002146  0E00               	movlw	0
  2911  002148  6F04               	movwf	ultrasonic_main@step2_offset& (0+255),b
  2912  00214A                     l7508:
  2913                           
  2914                           ; BSR set to: 1
  2915                           ;main.c: 320:         if (min_us_dist>=14){
  2916  00214A  BF09               	btfsc	(ultrasonic_main@min_us_dist_914+1)& (0+255),7,b
  2917  00214C  D015               	goto	l7512
  2918  00214E  5109               	movf	(ultrasonic_main@min_us_dist_914+1)& (0+255),w,b
  2919  002150  E104               	bnz	u8030
  2920  002152  0E0E               	movlw	14
  2921  002154  5D08               	subwf	ultrasonic_main@min_us_dist_914& (0+255),w,b
  2922  002156  A0D8               	btfss	status,0,c
  2923  002158  D00F               	goto	l7512
  2924  00215A                     u8030:
  2925                           
  2926                           ; BSR set to: 1
  2927                           ;main.c: 321:         step2_offset = abs(min_us_dist - 14);
  2928  00215A  0EF2               	movlw	242
  2929  00215C  2508               	addwf	ultrasonic_main@min_us_dist_914& (0+255),w,b
  2930  00215E  0100               	movlb	0	; () banked
  2931  002160  6F92               	movwf	abs@a& (0+255),b
  2932  002162  0EFF               	movlw	255
  2933  002164  0101               	movlb	1	; () banked
  2934  002166  2109               	addwfc	(ultrasonic_main@min_us_dist_914+1)& (0+255),w,b
  2935  002168  0100               	movlb	0	; () banked
  2936  00216A  6F93               	movwf	(abs@a+1)& (0+255),b
  2937  00216C  EC29  F01C         	call	_abs	;wreg free
  2938  002170  C092  F104         	movff	?_abs,ultrasonic_main@step2_offset
  2939  002174  C093  F105         	movff	?_abs+1,ultrasonic_main@step2_offset+1
  2940  002178                     l7512:
  2941                           
  2942                           ;main.c: 323:         steps2_adj = 110 + step2_offset;
  2943  002178  0E6E               	movlw	110
  2944  00217A  0101               	movlb	1	; () banked
  2945  00217C  2504               	addwf	ultrasonic_main@step2_offset& (0+255),w,b
  2946  00217E  6F06               	movwf	ultrasonic_main@steps2_adj& (0+255),b
  2947  002180  0E00               	movlw	0
  2948  002182  2105               	addwfc	(ultrasonic_main@step2_offset+1)& (0+255),w,b
  2949  002184  6F07               	movwf	(ultrasonic_main@steps2_adj+1)& (0+255),b
  2950                           
  2951                           ; BSR set to: 1
  2952                           ;main.c: 324:         sensed++;
  2953  002186  4B02               	infsnz	ultrasonic_main@sensed& (0+255),f,b
  2954  002188  2B03               	incf	(ultrasonic_main@sensed+1)& (0+255),f,b
  2955                           
  2956                           ; BSR set to: 1
  2957                           ;main.c: 327:         }
  2958  00218A  4A50               	infsnz	_meas,f,c	;volatile
  2959  00218C  2A51               	incf	_meas+1,f,c	;volatile
  2960  00218E  D79C               	goto	l7484
  2961  002190                     l7520:
  2962                           
  2963                           ; BSR set to: 1
  2964                           ;main.c: 328:         if (sensed>2){
  2965  002190  BF03               	btfsc	(ultrasonic_main@sensed+1)& (0+255),7,b
  2966  002192  D006               	goto	l7524
  2967  002194  5103               	movf	(ultrasonic_main@sensed+1)& (0+255),w,b
  2968  002196  E144               	bnz	l7540
  2969  002198  0E03               	movlw	3
  2970  00219A  5D02               	subwf	ultrasonic_main@sensed& (0+255),w,b
  2971  00219C  B0D8               	btfsc	status,0,c
  2972  00219E  D040               	goto	l7540
  2973  0021A0                     l7524:
  2974                           
  2975                           ; BSR set to: 1
  2976                           ;main.c: 307:     while(send){
  2977  0021A0  506D               	movf	_send,w,c
  2978  0021A2  B4D8               	btfsc	status,2,c
  2979  0021A4  D03D               	goto	l7540
  2980  0021A6  D78C               	goto	l7482
  2981  0021A8                     l7526:
  2982                           
  2983                           ;main.c: 342:         I2C_Master_Start();
  2984  0021A8  EC8A  F01D         	call	_I2C_Master_Start	;wreg free
  2985                           
  2986                           ;main.c: 343:         I2C_Master_Write(0b00010001);
  2987  0021AC  0E00               	movlw	0
  2988  0021AE  0100               	movlb	0	; () banked
  2989  0021B0  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  2990  0021B2  0E11               	movlw	17
  2991  0021B4  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  2992  0021B6  EC81  F01D         	call	_I2C_Master_Write	;wreg free
  2993                           
  2994                           ;main.c: 344:         avg_dist = I2C_Master_Read(1);
  2995  0021BA  0E01               	movlw	1
  2996  0021BC  ECEB  F01C         	call	_I2C_Master_Read
  2997  0021C0  0100               	movlb	0	; () banked
  2998  0021C2  6FFC               	movwf	??_ultrasonic_main& (0+255),b
  2999  0021C4  51FC               	movf	??_ultrasonic_main& (0+255),w,b
  3000  0021C6  6E44               	movwf	_avg_dist,c	;volatile
  3001  0021C8  6A45               	clrf	_avg_dist+1,c	;volatile
  3002  0021CA  6A46               	clrf	_avg_dist+2,c	;volatile
  3003  0021CC  6A47               	clrf	_avg_dist+3,c	;volatile
  3004                           
  3005                           ;main.c: 345:         I2C_Master_Stop();
  3006  0021CE  EC86  F01D         	call	_I2C_Master_Stop	;wreg free
  3007                           
  3008                           ;main.c: 346:         if(avg_dist){
  3009  0021D2  5044               	movf	_avg_dist,w,c	;volatile
  3010  0021D4  1045               	iorwf	_avg_dist+1,w,c	;volatile
  3011  0021D6  1046               	iorwf	_avg_dist+2,w,c	;volatile
  3012  0021D8  1047               	iorwf	_avg_dist+3,w,c	;volatile
  3013  0021DA  B4D8               	btfsc	status,2,c
  3014  0021DC  D01E               	goto	l7538
  3015                           
  3016                           ;main.c: 349:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  3017  0021DE  0E01               	movlw	1
  3018  0021E0  EC79  F01D         	call	_lcdInst
  3019  0021E4  0E11               	movlw	17
  3020  0021E6  0100               	movlb	0	; () banked
  3021  0021E8  6FFC               	movwf	??_ultrasonic_main& (0+255),b
  3022  0021EA  0E3A               	movlw	58
  3023  0021EC                     u8887:
  3024  0021EC  2EE8               	decfsz	wreg,f,c
  3025  0021EE  D7FE               	bra	u8887
  3026  0021F0  2FFC               	decfsz	??_ultrasonic_main& (0+255),f,b
  3027  0021F2  D7FC               	bra	u8887
  3028  0021F4  F000               	nop	
  3029                           
  3030                           ;main.c: 357:             printf("%d",avg_dist);
  3031  0021F6  0E00               	movlw	low (STR_39+11)
  3032  0021F8  0100               	movlb	0	; () banked
  3033  0021FA  6FED               	movwf	printf@fmt& (0+255),b
  3034  0021FC  0EFC               	movlw	high (STR_39+11)
  3035  0021FE  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3036  002200  C044  F0EF         	movff	_avg_dist,?_printf+2	;volatile
  3037  002204  C045  F0F0         	movff	_avg_dist+1,?_printf+3	;volatile
  3038  002208  C046  F0F1         	movff	_avg_dist+2,?_printf+4	;volatile
  3039  00220C  C047  F0F2         	movff	_avg_dist+3,?_printf+5	;volatile
  3040  002210  EC00  F01D         	call	_printf	;wreg free
  3041                           
  3042                           ;main.c: 364:         send = 1;
  3043  002214  0E01               	movlw	1
  3044  002216  6E6D               	movwf	_send,c
  3045                           
  3046                           ;main.c: 365:         }
  3047  002218  D003               	goto	l7540
  3048  00221A                     l7538:
  3049                           
  3050                           ;main.c: 368:             send = 0;
  3051  00221A  0E00               	movlw	0
  3052  00221C  6E6D               	movwf	_send,c
  3053                           
  3054                           ;main.c: 369:             break;
  3055  00221E  D003               	goto	u8070
  3056  002220                     l7540:
  3057                           
  3058                           ;main.c: 340:     while (~send){
  3059  002220  046D               	decf	_send,w,c
  3060  002222  A4D8               	btfss	status,2,c
  3061  002224  D7C1               	goto	l7526
  3062  002226                     u8070:
  3063                           
  3064                           ;main.c: 372:          { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));}
      +                          ;
  3065  002226  0E01               	movlw	1
  3066  002228  EC79  F01D         	call	_lcdInst
  3067  00222C  0E11               	movlw	17
  3068  00222E  0100               	movlb	0	; () banked
  3069  002230  6FFC               	movwf	??_ultrasonic_main& (0+255),b
  3070  002232  0E3A               	movlw	58
  3071  002234                     u8897:
  3072  002234  2EE8               	decfsz	wreg,f,c
  3073  002236  D7FE               	bra	u8897
  3074  002238  2FFC               	decfsz	??_ultrasonic_main& (0+255),f,b
  3075  00223A  D7FC               	bra	u8897
  3076  00223C  F000               	nop	
  3077                           
  3078                           ;main.c: 373:     printf("stepsadj %d", steps2_adj);
  3079  00223E  0E52               	movlw	low STR_22
  3080  002240  0100               	movlb	0	; () banked
  3081  002242  6FED               	movwf	printf@fmt& (0+255),b
  3082  002244  0EFC               	movlw	high STR_22
  3083  002246  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3084  002248  C106  F0EF         	movff	ultrasonic_main@steps2_adj,?_printf+2
  3085  00224C  C107  F0F0         	movff	ultrasonic_main@steps2_adj+1,?_printf+3
  3086  002250  EC00  F01D         	call	_printf	;wreg free
  3087                           
  3088                           ;main.c: 374:     _delay((unsigned long)((1000)*(10000000/4000.0)));
  3089  002254  0E0D               	movlw	13
  3090  002256  0100               	movlb	0	; () banked
  3091  002258  6FFD               	movwf	(??_ultrasonic_main+1)& (0+255),b
  3092  00225A  0EAF               	movlw	175
  3093  00225C  6FFC               	movwf	??_ultrasonic_main& (0+255),b
  3094  00225E  0EB6               	movlw	182
  3095  002260                     u8907:
  3096  002260  2EE8               	decfsz	wreg,f,c
  3097  002262  D7FE               	bra	u8907
  3098  002264  2FFC               	decfsz	??_ultrasonic_main& (0+255),f,b
  3099  002266  D7FC               	bra	u8907
  3100  002268  2FFD               	decfsz	(??_ultrasonic_main+1)& (0+255),f,b
  3101  00226A  D7FA               	bra	u8907
  3102  00226C  F000               	nop	
  3103                           
  3104                           ;main.c: 375:     return steps2_adj;
  3105  00226E  C106  F0FA         	movff	ultrasonic_main@steps2_adj,?_ultrasonic_main
  3106  002272  C107  F0FB         	movff	ultrasonic_main@steps2_adj+1,?_ultrasonic_main+1
  3107  002276  0012               	return		;funcret
  3108  002278                     __end_of_ultrasonic_main:
  3109                           	opt callstack 0
  3110                           
  3111 ;; *************** function _trig *****************
  3112 ;; Defined at:
  3113 ;;		line 190 in file "main.c"
  3114 ;; Parameters:    Size  Location     Type
  3115 ;;		None
  3116 ;; Auto vars:     Size  Location     Type
  3117 ;;		None
  3118 ;; Return value:  Size  Location     Type
  3119 ;;                  1    wreg      void 
  3120 ;; Registers used:
  3121 ;;		wreg, status,2, status,0
  3122 ;; Tracked objects:
  3123 ;;		On entry : 0/0
  3124 ;;		On exit  : 0/0
  3125 ;;		Unchanged: 0/0
  3126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3129 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3130 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3131 ;;Total ram usage:        2 bytes
  3132 ;; Hardware stack levels used:    1
  3133 ;; Hardware stack levels required when called:    3
  3134 ;; This function calls:
  3135 ;;		Nothing
  3136 ;; This function is called by:
  3137 ;;		_ultrasonic_main
  3138 ;; This function uses a non-reentrant model
  3139 ;;
  3140                           
  3141                           	psect	text2
  3142  002DC2                     __ptext2:
  3143                           	opt callstack 0
  3144  002DC2                     _trig:
  3145                           	opt callstack 26
  3146                           
  3147                           ;main.c: 191:     for(b=1; b<5; b++){
  3148                           
  3149                           ;incstack = 0
  3150  002DC2  0E00               	movlw	0
  3151  002DC4  6E5B               	movwf	_b+1,c
  3152  002DC6  0E01               	movlw	1
  3153  002DC8  6E5A               	movwf	_b,c
  3154  002DCA  BE5B               	btfsc	_b+1,7,c
  3155  002DCC  D004               	goto	l7174
  3156  002DCE  505B               	movf	_b+1,w,c
  3157  002DD0  E101               	bnz	u7610
  3158  002DD2  D072               	goto	L1
  3159  002DD4                     u7610:
  3160  002DD4  0012               	return	
  3161  002DD6                     l7174:
  3162                           
  3163                           ;main.c: 192:         TMR1H = 0;
  3164  002DD6  0E00               	movlw	0
  3165  002DD8  6ECF               	movwf	4047,c	;volatile
  3166                           
  3167                           ;main.c: 193:         TMR1L = 0;
  3168  002DDA  0E00               	movlw	0
  3169  002DDC  6ECE               	movwf	4046,c	;volatile
  3170                           
  3171                           ;main.c: 194:         if(b==1){
  3172  002DDE  045A               	decf	_b,w,c
  3173  002DE0  105B               	iorwf	_b+1,w,c
  3174  002DE2  A4D8               	btfss	status,2,c
  3175  002DE4  D015               	goto	l7186
  3176                           
  3177                           ;main.c: 195:             RBIE = 0;
  3178  002DE6  96F2               	bcf	4082,3,c	;volatile
  3179                           
  3180                           ;main.c: 196:             RD1 = 1;
  3181  002DE8  8283               	bsf	3971,1,c	;volatile
  3182                           
  3183                           ;main.c: 197:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  3184  002DEA  0E08               	movlw	8
  3185  002DEC                     u8917:
  3186  002DEC  2EE8               	decfsz	wreg,f,c
  3187  002DEE  D7FE               	bra	u8917
  3188  002DF0  F000               	nop	
  3189                           
  3190                           ;main.c: 198:             RD1 = 0;
  3191  002DF2  9283               	bcf	3971,1,c	;volatile
  3192                           
  3193                           ;main.c: 200:             RBIE = 1;
  3194  002DF4  86F2               	bsf	4082,3,c	;volatile
  3195                           
  3196                           ;main.c: 201:             _delay((unsigned long)((135)*(10000000/4000.0)));
  3197  002DF6  0E02               	movlw	2
  3198  002DF8  0100               	movlb	0	; () banked
  3199  002DFA  6F81               	movwf	(??_trig+1)& (0+255),b
  3200  002DFC  0EB7               	movlw	183
  3201  002DFE  6F80               	movwf	??_trig& (0+255),b
  3202  002E00  0E4C               	movlw	76
  3203  002E02                     u8927:
  3204  002E02  2EE8               	decfsz	wreg,f,c
  3205  002E04  D7FE               	bra	u8927
  3206  002E06  2F80               	decfsz	??_trig& (0+255),f,b
  3207  002E08  D7FC               	bra	u8927
  3208  002E0A  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  3209  002E0C  D7FA               	bra	u8927
  3210  002E0E  F000               	nop	
  3211  002E10                     l7186:
  3212                           
  3213                           ;main.c: 203:         if(b==2){
  3214  002E10  0E02               	movlw	2
  3215  002E12  185A               	xorwf	_b,w,c
  3216  002E14  105B               	iorwf	_b+1,w,c
  3217  002E16  A4D8               	btfss	status,2,c
  3218  002E18  D015               	goto	l7196
  3219                           
  3220                           ;main.c: 204:             RBIE = 0;
  3221  002E1A  96F2               	bcf	4082,3,c	;volatile
  3222                           
  3223                           ;main.c: 205:             RD0 = 1;
  3224  002E1C  8083               	bsf	3971,0,c	;volatile
  3225                           
  3226                           ;main.c: 206:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  3227  002E1E  0E08               	movlw	8
  3228  002E20                     u8937:
  3229  002E20  2EE8               	decfsz	wreg,f,c
  3230  002E22  D7FE               	bra	u8937
  3231  002E24  F000               	nop	
  3232                           
  3233                           ;main.c: 207:             RD0 = 0;
  3234  002E26  9083               	bcf	3971,0,c	;volatile
  3235                           
  3236                           ;main.c: 209:             RBIE = 1;
  3237  002E28  86F2               	bsf	4082,3,c	;volatile
  3238                           
  3239                           ;main.c: 210:             _delay((unsigned long)((135)*(10000000/4000.0)));
  3240  002E2A  0E02               	movlw	2
  3241  002E2C  0100               	movlb	0	; () banked
  3242  002E2E  6F81               	movwf	(??_trig+1)& (0+255),b
  3243  002E30  0EB7               	movlw	183
  3244  002E32  6F80               	movwf	??_trig& (0+255),b
  3245  002E34  0E4C               	movlw	76
  3246  002E36                     u8947:
  3247  002E36  2EE8               	decfsz	wreg,f,c
  3248  002E38  D7FE               	bra	u8947
  3249  002E3A  2F80               	decfsz	??_trig& (0+255),f,b
  3250  002E3C  D7FC               	bra	u8947
  3251  002E3E  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  3252  002E40  D7FA               	bra	u8947
  3253  002E42  F000               	nop	
  3254  002E44                     l7196:
  3255                           
  3256                           ;main.c: 212:         if(b==3){
  3257  002E44  0E03               	movlw	3
  3258  002E46  185A               	xorwf	_b,w,c
  3259  002E48  105B               	iorwf	_b+1,w,c
  3260  002E4A  A4D8               	btfss	status,2,c
  3261  002E4C  D015               	goto	l7206
  3262                           
  3263                           ;main.c: 213:             RBIE = 0;
  3264  002E4E  96F2               	bcf	4082,3,c	;volatile
  3265                           
  3266                           ;main.c: 214:             RB3 = 1;
  3267  002E50  8681               	bsf	3969,3,c	;volatile
  3268                           
  3269                           ;main.c: 215:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  3270  002E52  0E08               	movlw	8
  3271  002E54                     u8957:
  3272  002E54  2EE8               	decfsz	wreg,f,c
  3273  002E56  D7FE               	bra	u8957
  3274  002E58  F000               	nop	
  3275                           
  3276                           ;main.c: 216:             RB3 = 0;
  3277  002E5A  9681               	bcf	3969,3,c	;volatile
  3278                           
  3279                           ;main.c: 218:             RBIE = 1;
  3280  002E5C  86F2               	bsf	4082,3,c	;volatile
  3281                           
  3282                           ;main.c: 219:             _delay((unsigned long)((135)*(10000000/4000.0)));
  3283  002E5E  0E02               	movlw	2
  3284  002E60  0100               	movlb	0	; () banked
  3285  002E62  6F81               	movwf	(??_trig+1)& (0+255),b
  3286  002E64  0EB7               	movlw	183
  3287  002E66  6F80               	movwf	??_trig& (0+255),b
  3288  002E68  0E4C               	movlw	76
  3289  002E6A                     u8967:
  3290  002E6A  2EE8               	decfsz	wreg,f,c
  3291  002E6C  D7FE               	bra	u8967
  3292  002E6E  2F80               	decfsz	??_trig& (0+255),f,b
  3293  002E70  D7FC               	bra	u8967
  3294  002E72  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  3295  002E74  D7FA               	bra	u8967
  3296  002E76  F000               	nop	
  3297  002E78                     l7206:
  3298                           
  3299                           ;main.c: 221:         if(b==4){
  3300  002E78  0E04               	movlw	4
  3301  002E7A  185A               	xorwf	_b,w,c
  3302  002E7C  105B               	iorwf	_b+1,w,c
  3303  002E7E  A4D8               	btfss	status,2,c
  3304  002E80  D015               	goto	l7216
  3305                           
  3306                           ;main.c: 222:             RBIE = 0;
  3307  002E82  96F2               	bcf	4082,3,c	;volatile
  3308                           
  3309                           ;main.c: 223:             RB2 = 1;
  3310  002E84  8481               	bsf	3969,2,c	;volatile
  3311                           
  3312                           ;main.c: 224:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  3313  002E86  0E08               	movlw	8
  3314  002E88                     u8977:
  3315  002E88  2EE8               	decfsz	wreg,f,c
  3316  002E8A  D7FE               	bra	u8977
  3317  002E8C  F000               	nop	
  3318                           
  3319                           ;main.c: 225:             RB2 = 0;
  3320  002E8E  9481               	bcf	3969,2,c	;volatile
  3321                           
  3322                           ;main.c: 227:             RBIE = 1;
  3323  002E90  86F2               	bsf	4082,3,c	;volatile
  3324                           
  3325                           ;main.c: 228:             _delay((unsigned long)((135)*(10000000/4000.0)));
  3326  002E92  0E02               	movlw	2
  3327  002E94  0100               	movlb	0	; () banked
  3328  002E96  6F81               	movwf	(??_trig+1)& (0+255),b
  3329  002E98  0EB7               	movlw	183
  3330  002E9A  6F80               	movwf	??_trig& (0+255),b
  3331  002E9C  0E4C               	movlw	76
  3332  002E9E                     u8987:
  3333  002E9E  2EE8               	decfsz	wreg,f,c
  3334  002EA0  D7FE               	bra	u8987
  3335  002EA2  2F80               	decfsz	??_trig& (0+255),f,b
  3336  002EA4  D7FC               	bra	u8987
  3337  002EA6  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  3338  002EA8  D7FA               	bra	u8987
  3339  002EAA  F000               	nop	
  3340  002EAC                     l7216:
  3341                           
  3342                           ;main.c: 230:     }
  3343  002EAC  4A5A               	infsnz	_b,f,c
  3344  002EAE  2A5B               	incf	_b+1,f,c
  3345  002EB0  BE5B               	btfsc	_b+1,7,c
  3346  002EB2  D791               	goto	l7174
  3347  002EB4  505B               	movf	_b+1,w,c
  3348  002EB6  E105               	bnz	u7660
  3349  002EB8                     L1:
  3350  002EB8  0E05               	movlw	5
  3351  002EBA  5C5A               	subwf	_b,w,c
  3352  002EBC  B0D8               	btfsc	status,0,c
  3353  002EBE  0012               	return	
  3354  002EC0  D78A               	goto	l7174
  3355  002EC2                     u7660:
  3356  002EC2  0012               	return		;funcret
  3357  002EC4                     __end_of_trig:
  3358                           	opt callstack 0
  3359                           
  3360 ;; *************** function _print_echo *****************
  3361 ;; Defined at:
  3362 ;;		line 233 in file "main.c"
  3363 ;; Parameters:    Size  Location     Type
  3364 ;;		None
  3365 ;; Auto vars:     Size  Location     Type
  3366 ;;		None
  3367 ;; Return value:  Size  Location     Type
  3368 ;;                  1    wreg      void 
  3369 ;; Registers used:
  3370 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3371 ;; Tracked objects:
  3372 ;;		On entry : 0/0
  3373 ;;		On exit  : 0/0
  3374 ;;		Unchanged: 0/0
  3375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3378 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3379 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3380 ;;Total ram usage:        1 bytes
  3381 ;; Hardware stack levels used:    1
  3382 ;; Hardware stack levels required when called:   14
  3383 ;; This function calls:
  3384 ;;		_lcdInst
  3385 ;;		_printf
  3386 ;; This function is called by:
  3387 ;;		_ultrasonic_main
  3388 ;; This function uses a non-reentrant model
  3389 ;;
  3390                           
  3391                           	psect	text3
  3392  00249A                     __ptext3:
  3393                           	opt callstack 0
  3394  00249A                     _print_echo:
  3395                           	opt callstack 15
  3396                           
  3397                           ;main.c: 234:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  3398                           
  3399                           ;incstack = 0
  3400  00249A  0E01               	movlw	1
  3401  00249C  EC79  F01D         	call	_lcdInst
  3402  0024A0  0E11               	movlw	17
  3403  0024A2  0100               	movlb	0	; () banked
  3404  0024A4  6FF9               	movwf	??_print_echo& (0+255),b
  3405  0024A6  0E3A               	movlw	58
  3406  0024A8                     u8997:
  3407  0024A8  2EE8               	decfsz	wreg,f,c
  3408  0024AA  D7FE               	bra	u8997
  3409  0024AC  2FF9               	decfsz	??_print_echo& (0+255),f,b
  3410  0024AE  D7FC               	bra	u8997
  3411  0024B0  F000               	nop	
  3412                           
  3413                           ;main.c: 235:     if(a[0]>=2 && a[0]<=400){
  3414  0024B2  BE62               	btfsc	_a+1,7,c
  3415  0024B4  D01D               	goto	l7228
  3416  0024B6  5062               	movf	_a+1,w,c
  3417  0024B8  E104               	bnz	u7670
  3418  0024BA  0E02               	movlw	2
  3419  0024BC  5C61               	subwf	_a,w,c
  3420  0024BE  A0D8               	btfss	status,0,c
  3421  0024C0  D017               	goto	l7228
  3422  0024C2                     u7670:
  3423  0024C2  BE62               	btfsc	_a+1,7,c
  3424  0024C4  D006               	goto	u7680
  3425  0024C6  0E91               	movlw	145
  3426  0024C8  5C61               	subwf	_a,w,c
  3427  0024CA  0E01               	movlw	1
  3428  0024CC  5862               	subwfb	_a+1,w,c
  3429  0024CE  B0D8               	btfsc	status,0,c
  3430  0024D0  D00F               	goto	l7228
  3431  0024D2                     u7680:
  3432                           
  3433                           ;main.c: 236:         printf("Dist1=%d,Avg=%d ",a[0],dist_final[0][5]);
  3434  0024D2  0E36               	movlw	low STR_10
  3435  0024D4  0100               	movlb	0	; () banked
  3436  0024D6  6FED               	movwf	printf@fmt& (0+255),b
  3437  0024D8  0EFB               	movlw	high STR_10
  3438  0024DA  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3439  0024DC  C061  F0EF         	movff	_a,?_printf+2
  3440  0024E0  C062  F0F0         	movff	_a+1,?_printf+3
  3441  0024E4  C25A  F0F1         	movff	_dist_final+10,?_printf+4
  3442  0024E8  C25B  F0F2         	movff	_dist_final+11,?_printf+5
  3443  0024EC  EC00  F01D         	call	_printf	;wreg free
  3444  0024F0                     l7228:
  3445                           
  3446                           ;main.c: 238:     if(!(a[0]>=2 && a[0]<=400)){
  3447  0024F0  BE62               	btfsc	_a+1,7,c
  3448  0024F2  D00E               	goto	u7700
  3449  0024F4  5062               	movf	_a+1,w,c
  3450  0024F6  E104               	bnz	u7690
  3451  0024F8  0E02               	movlw	2
  3452  0024FA  5C61               	subwf	_a,w,c
  3453  0024FC  A0D8               	btfss	status,0,c
  3454  0024FE  D008               	goto	u7700
  3455  002500                     u7690:
  3456  002500  BE62               	btfsc	_a+1,7,c
  3457  002502  D00D               	goto	l7234
  3458  002504  0E91               	movlw	145
  3459  002506  5C61               	subwf	_a,w,c
  3460  002508  0E01               	movlw	1
  3461  00250A  5862               	subwfb	_a+1,w,c
  3462  00250C  A0D8               	btfss	status,0,c
  3463  00250E  D007               	goto	l7234
  3464  002510                     u7700:
  3465                           
  3466                           ;main.c: 239:         printf("Dist1 = X");
  3467  002510  0EAE               	movlw	low STR_11
  3468  002512  0100               	movlb	0	; () banked
  3469  002514  6FED               	movwf	printf@fmt& (0+255),b
  3470  002516  0EFC               	movlw	high STR_11
  3471  002518  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3472  00251A  EC00  F01D         	call	_printf	;wreg free
  3473  00251E                     l7234:
  3474                           
  3475                           ;main.c: 241:     if(a[1]>=2 && a[1]<=400){
  3476  00251E  BE64               	btfsc	_a+3,7,c
  3477  002520  D020               	goto	l7242
  3478  002522  5064               	movf	_a+3,w,c
  3479  002524  E104               	bnz	u7710
  3480  002526  0E02               	movlw	2
  3481  002528  5C63               	subwf	_a+2,w,c
  3482  00252A  A0D8               	btfss	status,0,c
  3483  00252C  D01A               	goto	l7242
  3484  00252E                     u7710:
  3485  00252E  BE64               	btfsc	_a+3,7,c
  3486  002530  D006               	goto	u7720
  3487  002532  0E91               	movlw	145
  3488  002534  5C63               	subwf	_a+2,w,c
  3489  002536  0E01               	movlw	1
  3490  002538  5864               	subwfb	_a+3,w,c
  3491  00253A  B0D8               	btfsc	status,0,c
  3492  00253C  D012               	goto	l7242
  3493  00253E                     u7720:
  3494  00253E  0EC0               	movlw	192
  3495  002540  EC79  F01D         	call	_lcdInst
  3496                           
  3497                           ;main.c: 243:         printf("Dist2=%d,Avg=%d",a[1],dist_final[1][5]);
  3498  002544  0E8A               	movlw	low STR_12
  3499  002546  0100               	movlb	0	; () banked
  3500  002548  6FED               	movwf	printf@fmt& (0+255),b
  3501  00254A  0EFB               	movlw	high STR_12
  3502  00254C  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3503  00254E  C063  F0EF         	movff	_a+2,?_printf+2
  3504  002552  C064  F0F0         	movff	_a+3,?_printf+3
  3505  002556  C266  F0F1         	movff	_dist_final+22,?_printf+4
  3506  00255A  C267  F0F2         	movff	_dist_final+23,?_printf+5
  3507  00255E  EC00  F01D         	call	_printf	;wreg free
  3508  002562                     l7242:
  3509                           
  3510                           ;main.c: 245:     if(!(a[1]>=2 && a[1]<=400)){
  3511  002562  BE64               	btfsc	_a+3,7,c
  3512  002564  D00E               	goto	u7740
  3513  002566  5064               	movf	_a+3,w,c
  3514  002568  E104               	bnz	u7730
  3515  00256A  0E02               	movlw	2
  3516  00256C  5C63               	subwf	_a+2,w,c
  3517  00256E  A0D8               	btfss	status,0,c
  3518  002570  D008               	goto	u7740
  3519  002572                     u7730:
  3520  002572  BE64               	btfsc	_a+3,7,c
  3521  002574  D010               	goto	l7250
  3522  002576  0E91               	movlw	145
  3523  002578  5C63               	subwf	_a+2,w,c
  3524  00257A  0E01               	movlw	1
  3525  00257C  5864               	subwfb	_a+3,w,c
  3526  00257E  A0D8               	btfss	status,0,c
  3527  002580  D00A               	goto	l7250
  3528  002582                     u7740:
  3529  002582  0EC0               	movlw	192
  3530  002584  EC79  F01D         	call	_lcdInst
  3531                           
  3532                           ;main.c: 247:         printf("Dist2 = X");
  3533  002588  0EB8               	movlw	low STR_13
  3534  00258A  0100               	movlb	0	; () banked
  3535  00258C  6FED               	movwf	printf@fmt& (0+255),b
  3536  00258E  0EFC               	movlw	high STR_13
  3537  002590  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3538  002592  EC00  F01D         	call	_printf	;wreg free
  3539  002596                     l7250:
  3540                           
  3541                           ;main.c: 249:     if(a[2]>=2 && a[2]<=400){
  3542  002596  BE66               	btfsc	_a+5,7,c
  3543  002598  D020               	goto	l7258
  3544  00259A  5066               	movf	_a+5,w,c
  3545  00259C  E104               	bnz	u7750
  3546  00259E  0E02               	movlw	2
  3547  0025A0  5C65               	subwf	_a+4,w,c
  3548  0025A2  A0D8               	btfss	status,0,c
  3549  0025A4  D01A               	goto	l7258
  3550  0025A6                     u7750:
  3551  0025A6  BE66               	btfsc	_a+5,7,c
  3552  0025A8  D006               	goto	u7760
  3553  0025AA  0E91               	movlw	145
  3554  0025AC  5C65               	subwf	_a+4,w,c
  3555  0025AE  0E01               	movlw	1
  3556  0025B0  5866               	subwfb	_a+5,w,c
  3557  0025B2  B0D8               	btfsc	status,0,c
  3558  0025B4  D012               	goto	l7258
  3559  0025B6                     u7760:
  3560  0025B6  0E90               	movlw	144
  3561  0025B8  EC79  F01D         	call	_lcdInst
  3562                           
  3563                           ;main.c: 251:         printf("Dist3=%d,Avg=%d",a[2],dist_final[2][5]);
  3564  0025BC  0E9A               	movlw	low STR_14
  3565  0025BE  0100               	movlb	0	; () banked
  3566  0025C0  6FED               	movwf	printf@fmt& (0+255),b
  3567  0025C2  0EFB               	movlw	high STR_14
  3568  0025C4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3569  0025C6  C065  F0EF         	movff	_a+4,?_printf+2
  3570  0025CA  C066  F0F0         	movff	_a+5,?_printf+3
  3571  0025CE  C272  F0F1         	movff	_dist_final+34,?_printf+4
  3572  0025D2  C273  F0F2         	movff	_dist_final+35,?_printf+5
  3573  0025D6  EC00  F01D         	call	_printf	;wreg free
  3574  0025DA                     l7258:
  3575                           
  3576                           ;main.c: 253:     if(!(a[2]>=2 && a[2]<=400)){
  3577  0025DA  BE66               	btfsc	_a+5,7,c
  3578  0025DC  D00E               	goto	u7780
  3579  0025DE  5066               	movf	_a+5,w,c
  3580  0025E0  E104               	bnz	u7770
  3581  0025E2  0E02               	movlw	2
  3582  0025E4  5C65               	subwf	_a+4,w,c
  3583  0025E6  A0D8               	btfss	status,0,c
  3584  0025E8  D008               	goto	u7780
  3585  0025EA                     u7770:
  3586  0025EA  BE66               	btfsc	_a+5,7,c
  3587  0025EC  D010               	goto	l7266
  3588  0025EE  0E91               	movlw	145
  3589  0025F0  5C65               	subwf	_a+4,w,c
  3590  0025F2  0E01               	movlw	1
  3591  0025F4  5866               	subwfb	_a+5,w,c
  3592  0025F6  A0D8               	btfss	status,0,c
  3593  0025F8  D00A               	goto	l7266
  3594  0025FA                     u7780:
  3595  0025FA  0E90               	movlw	144
  3596  0025FC  EC79  F01D         	call	_lcdInst
  3597                           
  3598                           ;main.c: 255:         printf("Dist3 = X");
  3599  002600  0EC2               	movlw	low STR_15
  3600  002602  0100               	movlb	0	; () banked
  3601  002604  6FED               	movwf	printf@fmt& (0+255),b
  3602  002606  0EFC               	movlw	high STR_15
  3603  002608  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3604  00260A  EC00  F01D         	call	_printf	;wreg free
  3605  00260E                     l7266:
  3606                           
  3607                           ;main.c: 257:     if(a[3]>=2 && a[3]<=400){
  3608  00260E  BE68               	btfsc	_a+7,7,c
  3609  002610  D020               	goto	l7274
  3610  002612  5068               	movf	_a+7,w,c
  3611  002614  E104               	bnz	u7790
  3612  002616  0E02               	movlw	2
  3613  002618  5C67               	subwf	_a+6,w,c
  3614  00261A  A0D8               	btfss	status,0,c
  3615  00261C  D01A               	goto	l7274
  3616  00261E                     u7790:
  3617  00261E  BE68               	btfsc	_a+7,7,c
  3618  002620  D006               	goto	u7800
  3619  002622  0E91               	movlw	145
  3620  002624  5C67               	subwf	_a+6,w,c
  3621  002626  0E01               	movlw	1
  3622  002628  5868               	subwfb	_a+7,w,c
  3623  00262A  B0D8               	btfsc	status,0,c
  3624  00262C  D012               	goto	l7274
  3625  00262E                     u7800:
  3626  00262E  0ED0               	movlw	208
  3627  002630  EC79  F01D         	call	_lcdInst
  3628                           
  3629                           ;main.c: 259:         printf("Dist4=%d,Avg=%d ",a[3],dist_final[3][5]);
  3630  002634  0E47               	movlw	low STR_16
  3631  002636  0100               	movlb	0	; () banked
  3632  002638  6FED               	movwf	printf@fmt& (0+255),b
  3633  00263A  0EFB               	movlw	high STR_16
  3634  00263C  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3635  00263E  C067  F0EF         	movff	_a+6,?_printf+2
  3636  002642  C068  F0F0         	movff	_a+7,?_printf+3
  3637  002646  C27E  F0F1         	movff	_dist_final+46,?_printf+4
  3638  00264A  C27F  F0F2         	movff	_dist_final+47,?_printf+5
  3639  00264E  EC00  F01D         	call	_printf	;wreg free
  3640  002652                     l7274:
  3641                           
  3642                           ;main.c: 262:     if(!(a[3]>=2 && a[3]<=400)){
  3643  002652  BE68               	btfsc	_a+7,7,c
  3644  002654  D00E               	goto	u7820
  3645  002656  5068               	movf	_a+7,w,c
  3646  002658  E104               	bnz	u7810
  3647  00265A  0E02               	movlw	2
  3648  00265C  5C67               	subwf	_a+6,w,c
  3649  00265E  A0D8               	btfss	status,0,c
  3650  002660  D008               	goto	u7820
  3651  002662                     u7810:
  3652  002662  BE68               	btfsc	_a+7,7,c
  3653  002664  0012               	return	
  3654  002666  0E91               	movlw	145
  3655  002668  5C67               	subwf	_a+6,w,c
  3656  00266A  0E01               	movlw	1
  3657  00266C  5868               	subwfb	_a+7,w,c
  3658  00266E  A0D8               	btfss	status,0,c
  3659  002670  0012               	return	
  3660  002672                     u7820:
  3661  002672  0ED0               	movlw	208
  3662  002674  EC79  F01D         	call	_lcdInst
  3663                           
  3664                           ;main.c: 264:         printf("Dist4 = X");
  3665  002678  0ECC               	movlw	low STR_17
  3666  00267A  0100               	movlb	0	; () banked
  3667  00267C  6FED               	movwf	printf@fmt& (0+255),b
  3668  00267E  0EFC               	movlw	high STR_17
  3669  002680  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3670  002682  EC00  F01D         	call	_printf	;wreg free
  3671  002686  0012               	return		;funcret
  3672  002688                     __end_of_print_echo:
  3673                           	opt callstack 0
  3674                           
  3675 ;; *************** function _min *****************
  3676 ;; Defined at:
  3677 ;;		line 267 in file "main.c"
  3678 ;; Parameters:    Size  Location     Type
  3679 ;;  array           2    0[BANK0 ] PTR int 
  3680 ;;		 -> a(8), 
  3681 ;;  size            2    2[BANK0 ] int 
  3682 ;; Auto vars:     Size  Location     Type
  3683 ;;  i               2    9[BANK0 ] int 
  3684 ;;  minimum         2    7[BANK0 ] int 
  3685 ;; Return value:  Size  Location     Type
  3686 ;;                  2    0[BANK0 ] int 
  3687 ;; Registers used:
  3688 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3689 ;; Tracked objects:
  3690 ;;		On entry : 0/0
  3691 ;;		On exit  : 0/0
  3692 ;;		Unchanged: 0/0
  3693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3694 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3695 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3696 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3697 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3698 ;;Total ram usage:       11 bytes
  3699 ;; Hardware stack levels used:    1
  3700 ;; Hardware stack levels required when called:    3
  3701 ;; This function calls:
  3702 ;;		Nothing
  3703 ;; This function is called by:
  3704 ;;		_ultrasonic_main
  3705 ;; This function uses a non-reentrant model
  3706 ;;
  3707                           
  3708                           	psect	text4
  3709  002CB2                     __ptext4:
  3710                           	opt callstack 0
  3711  002CB2                     _min:
  3712                           	opt callstack 26
  3713                           
  3714                           ;main.c: 268:     int minimum =0 ;
  3715                           
  3716                           ;incstack = 0
  3717  002CB2  0E00               	movlw	0
  3718  002CB4  0100               	movlb	0	; () banked
  3719  002CB6  6F88               	movwf	(min@minimum+1)& (0+255),b
  3720  002CB8  0E00               	movlw	0
  3721  002CBA  6F87               	movwf	min@minimum& (0+255),b
  3722                           
  3723                           ; BSR set to: 0
  3724                           ;main.c: 269:     if (array[0]<=23){
  3725  002CBC  C080  FFD9         	movff	min@array,fsr2l
  3726  002CC0  C081  FFDA         	movff	min@array+1,fsr2h
  3727  002CC4  0E01               	movlw	1
  3728  002CC6  BEDB               	btfsc	plusw2,7,c
  3729  002CC8  D007               	goto	u7830
  3730  002CCA  0E01               	movlw	1
  3731  002CCC  50DB               	movf	plusw2,w,c
  3732  002CCE  E10C               	bnz	l7288
  3733  002CD0  0E18               	movlw	24
  3734  002CD2  5CDE               	subwf	postinc2,w,c
  3735  002CD4  B0D8               	btfsc	status,0,c
  3736  002CD6  D008               	goto	l7288
  3737  002CD8                     u7830:
  3738                           
  3739                           ; BSR set to: 0
  3740                           ;main.c: 270:          minimum = array[0];}
  3741  002CD8  C080  FFD9         	movff	min@array,fsr2l
  3742  002CDC  C081  FFDA         	movff	min@array+1,fsr2h
  3743  002CE0  CFDE F087          	movff	postinc2,min@minimum
  3744  002CE4  CFDD F088          	movff	postdec2,min@minimum+1
  3745  002CE8                     l7288:
  3746                           
  3747                           ; BSR set to: 0
  3748                           ;main.c: 274:     for (int i = 0; i<size; i++){
  3749  002CE8  0E00               	movlw	0
  3750  002CEA  6F8A               	movwf	(min@i+1)& (0+255),b
  3751  002CEC  0E00               	movlw	0
  3752  002CEE  6F89               	movwf	min@i& (0+255),b
  3753  002CF0  D059               	goto	l7304
  3754  002CF2                     l7290:
  3755                           
  3756                           ; BSR set to: 0
  3757                           ;main.c: 278:         if ((minimum==0)||(minimum>=array[i])&&(array[i]!=0)&&(array[i]>=1
      +                          4)&&(array[i]<=23)){
  3758  002CF2  5187               	movf	min@minimum& (0+255),w,b
  3759  002CF4  1188               	iorwf	(min@minimum+1)& (0+255),w,b
  3760  002CF6  B4D8               	btfsc	status,2,c
  3761  002CF8  D046               	goto	u7880
  3762                           
  3763                           ; BSR set to: 0
  3764  002CFA  90D8               	bcf	status,0,c
  3765  002CFC  3589               	rlcf	min@i& (0+255),w,b
  3766  002CFE  6ED9               	movwf	fsr2l,c
  3767  002D00  358A               	rlcf	(min@i+1)& (0+255),w,b
  3768  002D02  6EDA               	movwf	fsr2h,c
  3769  002D04  5180               	movf	min@array& (0+255),w,b
  3770  002D06  26D9               	addwf	fsr2l,f,c
  3771  002D08  5181               	movf	(min@array+1)& (0+255),w,b
  3772  002D0A  22DA               	addwfc	fsr2h,f,c
  3773  002D0C  50DE               	movf	postinc2,w,c
  3774  002D0E  5D87               	subwf	min@minimum& (0+255),w,b
  3775  002D10  5188               	movf	(min@minimum+1)& (0+255),w,b
  3776  002D12  0A80               	xorlw	128
  3777  002D14  6F86               	movwf	(??_min+2)& (0+255),b
  3778  002D16  50DE               	movf	postinc2,w,c
  3779  002D18  0A80               	xorlw	128
  3780  002D1A  5986               	subwfb	(??_min+2)& (0+255),w,b
  3781  002D1C  A0D8               	btfss	status,0,c
  3782  002D1E  D040               	goto	l7302
  3783                           
  3784                           ; BSR set to: 0
  3785  002D20  90D8               	bcf	status,0,c
  3786  002D22  3589               	rlcf	min@i& (0+255),w,b
  3787  002D24  6ED9               	movwf	fsr2l,c
  3788  002D26  358A               	rlcf	(min@i+1)& (0+255),w,b
  3789  002D28  6EDA               	movwf	fsr2h,c
  3790  002D2A  5180               	movf	min@array& (0+255),w,b
  3791  002D2C  26D9               	addwf	fsr2l,f,c
  3792  002D2E  5181               	movf	(min@array+1)& (0+255),w,b
  3793  002D30  22DA               	addwfc	fsr2h,f,c
  3794  002D32  50DE               	movf	postinc2,w,c
  3795  002D34  10DE               	iorwf	postinc2,w,c
  3796  002D36  B4D8               	btfsc	status,2,c
  3797  002D38  D033               	goto	l7302
  3798                           
  3799                           ; BSR set to: 0
  3800  002D3A  90D8               	bcf	status,0,c
  3801  002D3C  3589               	rlcf	min@i& (0+255),w,b
  3802  002D3E  6ED9               	movwf	fsr2l,c
  3803  002D40  358A               	rlcf	(min@i+1)& (0+255),w,b
  3804  002D42  6EDA               	movwf	fsr2h,c
  3805  002D44  5180               	movf	min@array& (0+255),w,b
  3806  002D46  26D9               	addwf	fsr2l,f,c
  3807  002D48  5181               	movf	(min@array+1)& (0+255),w,b
  3808  002D4A  22DA               	addwfc	fsr2h,f,c
  3809  002D4C  0E01               	movlw	1
  3810  002D4E  BEDB               	btfsc	plusw2,7,c
  3811  002D50  D027               	goto	l7302
  3812  002D52  0E01               	movlw	1
  3813  002D54  50DB               	movf	plusw2,w,c
  3814  002D56  E104               	bnz	u7870
  3815  002D58  0E0E               	movlw	14
  3816  002D5A  5CDE               	subwf	postinc2,w,c
  3817  002D5C  A0D8               	btfss	status,0,c
  3818  002D5E  D020               	goto	l7302
  3819  002D60                     u7870:
  3820                           
  3821                           ; BSR set to: 0
  3822  002D60  90D8               	bcf	status,0,c
  3823  002D62  3589               	rlcf	min@i& (0+255),w,b
  3824  002D64  6ED9               	movwf	fsr2l,c
  3825  002D66  358A               	rlcf	(min@i+1)& (0+255),w,b
  3826  002D68  6EDA               	movwf	fsr2h,c
  3827  002D6A  5180               	movf	min@array& (0+255),w,b
  3828  002D6C  26D9               	addwf	fsr2l,f,c
  3829  002D6E  5181               	movf	(min@array+1)& (0+255),w,b
  3830  002D70  22DA               	addwfc	fsr2h,f,c
  3831  002D72  0E01               	movlw	1
  3832  002D74  BEDB               	btfsc	plusw2,7,c
  3833  002D76  D007               	goto	u7880
  3834  002D78  0E01               	movlw	1
  3835  002D7A  50DB               	movf	plusw2,w,c
  3836  002D7C  E111               	bnz	l7302
  3837  002D7E  0E18               	movlw	24
  3838  002D80  5CDE               	subwf	postinc2,w,c
  3839  002D82  B0D8               	btfsc	status,0,c
  3840  002D84  D00D               	goto	l7302
  3841  002D86                     u7880:
  3842                           
  3843                           ; BSR set to: 0
  3844                           ;main.c: 282:             minimum = array[i];
  3845  002D86  90D8               	bcf	status,0,c
  3846  002D88  3589               	rlcf	min@i& (0+255),w,b
  3847  002D8A  6ED9               	movwf	fsr2l,c
  3848  002D8C  358A               	rlcf	(min@i+1)& (0+255),w,b
  3849  002D8E  6EDA               	movwf	fsr2h,c
  3850  002D90  5180               	movf	min@array& (0+255),w,b
  3851  002D92  26D9               	addwf	fsr2l,f,c
  3852  002D94  5181               	movf	(min@array+1)& (0+255),w,b
  3853  002D96  22DA               	addwfc	fsr2h,f,c
  3854  002D98  CFDE F087          	movff	postinc2,min@minimum
  3855  002D9C  CFDD F088          	movff	postdec2,min@minimum+1
  3856  002DA0                     l7302:
  3857                           
  3858                           ; BSR set to: 0
  3859                           ;main.c: 287:     }
  3860  002DA0  4B89               	infsnz	min@i& (0+255),f,b
  3861  002DA2  2B8A               	incf	(min@i+1)& (0+255),f,b
  3862  002DA4                     l7304:
  3863                           
  3864                           ; BSR set to: 0
  3865  002DA4  5182               	movf	min@size& (0+255),w,b
  3866  002DA6  5D89               	subwf	min@i& (0+255),w,b
  3867  002DA8  518A               	movf	(min@i+1)& (0+255),w,b
  3868  002DAA  0A80               	xorlw	128
  3869  002DAC  6F84               	movwf	??_min& (0+255),b
  3870  002DAE  5183               	movf	(min@size+1)& (0+255),w,b
  3871  002DB0  0A80               	xorlw	128
  3872  002DB2  5984               	subwfb	??_min& (0+255),w,b
  3873  002DB4  A0D8               	btfss	status,0,c
  3874  002DB6  D79D               	goto	l7290
  3875                           
  3876                           ; BSR set to: 0
  3877                           ;main.c: 288:     return minimum;
  3878  002DB8  C087  F080         	movff	min@minimum,?_min
  3879  002DBC  C088  F081         	movff	min@minimum+1,?_min+1
  3880                           
  3881                           ; BSR set to: 0
  3882  002DC0  0012               	return		;funcret
  3883  002DC2                     __end_of_min:
  3884                           	opt callstack 0
  3885                           
  3886 ;; *************** function _start *****************
  3887 ;; Defined at:
  3888 ;;		line 670 in file "main.c"
  3889 ;; Parameters:    Size  Location     Type
  3890 ;;		None
  3891 ;; Auto vars:     Size  Location     Type
  3892 ;;		None
  3893 ;; Return value:  Size  Location     Type
  3894 ;;                  1    wreg      void 
  3895 ;; Registers used:
  3896 ;;		wreg, status,2, status,0, cstack
  3897 ;; Tracked objects:
  3898 ;;		On entry : 0/0
  3899 ;;		On exit  : 0/0
  3900 ;;		Unchanged: 0/0
  3901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3906 ;;Total ram usage:        0 bytes
  3907 ;; Hardware stack levels used:    1
  3908 ;; Hardware stack levels required when called:    5
  3909 ;; This function calls:
  3910 ;;		_I2C_Master_Init
  3911 ;;		_I2C_Master_Start
  3912 ;;		_I2C_Master_Stop
  3913 ;;		_I2C_Master_Write
  3914 ;; This function is called by:
  3915 ;;		_main
  3916 ;; This function uses a non-reentrant model
  3917 ;;
  3918                           
  3919                           	psect	text5
  3920  003674                     __ptext5:
  3921                           	opt callstack 0
  3922  003674                     _start:
  3923                           	opt callstack 25
  3924                           
  3925                           ;main.c: 671:     I2C_Master_Init(100000);
  3926                           
  3927                           ; BSR set to: 0
  3928                           ;incstack = 0
  3929  003674  0EA0               	movlw	160
  3930  003676  0100               	movlb	0	; () banked
  3931  003678  6F8D               	movwf	I2C_Master_Init@clockFreq& (0+255),b
  3932  00367A  0E86               	movlw	134
  3933  00367C  6F8E               	movwf	(I2C_Master_Init@clockFreq+1)& (0+255),b
  3934  00367E  0E01               	movlw	1
  3935  003680  6F8F               	movwf	(I2C_Master_Init@clockFreq+2)& (0+255),b
  3936  003682  0E00               	movlw	0
  3937  003684  6F90               	movwf	(I2C_Master_Init@clockFreq+3)& (0+255),b
  3938  003686  EC89  F01A         	call	_I2C_Master_Init	;wreg free
  3939                           
  3940                           ;main.c: 672:     I2C_Master_Start();
  3941  00368A  EC8A  F01D         	call	_I2C_Master_Start	;wreg free
  3942                           
  3943                           ;main.c: 673:     I2C_Master_Write(0b00010000);
  3944  00368E  0E00               	movlw	0
  3945  003690  0100               	movlb	0	; () banked
  3946  003692  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  3947  003694  0E10               	movlw	16
  3948  003696  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  3949  003698  EC81  F01D         	call	_I2C_Master_Write	;wreg free
  3950                           
  3951                           ;main.c: 674:     I2C_Master_Stop();
  3952  00369C  EC86  F01D         	call	_I2C_Master_Stop	;wreg free
  3953                           
  3954                           ;main.c: 676:     I2C_Master_Start();
  3955  0036A0  EC8A  F01D         	call	_I2C_Master_Start	;wreg free
  3956                           
  3957                           ;main.c: 677:     I2C_Master_Write(0b00010000);
  3958  0036A4  0E00               	movlw	0
  3959  0036A6  0100               	movlb	0	; () banked
  3960  0036A8  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  3961  0036AA  0E10               	movlw	16
  3962  0036AC  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  3963  0036AE  EC81  F01D         	call	_I2C_Master_Write	;wreg free
  3964                           
  3965                           ;main.c: 678:     I2C_Master_Write('2');
  3966  0036B2  0E00               	movlw	0
  3967  0036B4  0100               	movlb	0	; () banked
  3968  0036B6  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  3969  0036B8  0E32               	movlw	50
  3970  0036BA  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  3971  0036BC  EC81  F01D         	call	_I2C_Master_Write	;wreg free
  3972                           
  3973                           ;main.c: 679:     I2C_Master_Stop();
  3974  0036C0  EC86  F01D         	call	_I2C_Master_Stop	;wreg free
  3975  0036C4  0012               	return		;funcret
  3976  0036C6                     __end_of_start:
  3977                           	opt callstack 0
  3978                           
  3979 ;; *************** function _number_deploy *****************
  3980 ;; Defined at:
  3981 ;;		line 413 in file "main.c"
  3982 ;; Parameters:    Size  Location     Type
  3983 ;;  avg_dist        2  121[BANK0 ] int 
  3984 ;;  poles_detect    2  123[BANK0 ] int 
  3985 ;; Auto vars:     Size  Location     Type
  3986 ;;  t_count         2    4[BANK1 ] int 
  3987 ;;  tires_detect    2    2[BANK1 ] int 
  3988 ;;  tires_t         2    0[BANK1 ] int 
  3989 ;; Return value:  Size  Location     Type
  3990 ;;                  2  121[BANK0 ] int 
  3991 ;; Registers used:
  3992 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3993 ;; Tracked objects:
  3994 ;;		On entry : 0/0
  3995 ;;		On exit  : 0/0
  3996 ;;		Unchanged: 0/0
  3997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3998 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3999 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4000 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4001 ;;      Totals:         0       6       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4002 ;;Total ram usage:       12 bytes
  4003 ;; Hardware stack levels used:    1
  4004 ;; Hardware stack levels required when called:   14
  4005 ;; This function calls:
  4006 ;;		___awdiv
  4007 ;;		_lcdInst
  4008 ;;		_printf
  4009 ;; This function is called by:
  4010 ;;		_main
  4011 ;; This function uses a non-reentrant model
  4012 ;;
  4013                           
  4014                           	psect	text6
  4015  002278                     __ptext6:
  4016                           	opt callstack 0
  4017  002278                     _number_deploy:
  4018                           	opt callstack 16
  4019                           
  4020                           ;main.c: 414:     int tires_t=0;
  4021                           
  4022                           ;incstack = 0
  4023  002278  0E00               	movlw	0
  4024  00227A  0101               	movlb	1	; () banked
  4025  00227C  6F01               	movwf	(number_deploy@tires_t+1)& (0+255),b
  4026  00227E  0E00               	movlw	0
  4027  002280  6F00               	movwf	number_deploy@tires_t& (0+255),b
  4028                           
  4029                           ;main.c: 415:     int tires_detected=0;
  4030  002282  0E00               	movlw	0
  4031  002284  6F03               	movwf	(number_deploy@tires_detected+1)& (0+255),b
  4032  002286  0E00               	movlw	0
  4033  002288  6F02               	movwf	number_deploy@tires_detected& (0+255),b
  4034                           
  4035                           ;main.c: 416:     int t_count = 0;
  4036  00228A  0E00               	movlw	0
  4037  00228C  6F05               	movwf	(number_deploy@t_count+1)& (0+255),b
  4038  00228E  0E00               	movlw	0
  4039  002290  6F04               	movwf	number_deploy@t_count& (0+255),b
  4040                           
  4041                           ;main.c: 419:     while (t_count<3){
  4042  002292  D0F6               	goto	l7614
  4043  002294                     l7558:
  4044                           
  4045                           ; BSR set to: 1
  4046                           ;main.c: 420:   if (poles_detected != 0){
  4047  002294  0100               	movlb	0	; () banked
  4048  002296  51FB               	movf	number_deploy@poles_detected& (0+255),w,b
  4049  002298  11FC               	iorwf	(number_deploy@poles_detected+1)& (0+255),w,b
  4050  00229A  B4D8               	btfsc	status,2,c
  4051  00229C  D031               	goto	l7568
  4052                           
  4053                           ; BSR set to: 0
  4054                           ;main.c: 421:    if ((avg_dist/1000)<30){
  4055  00229E  C0F9  F080         	movff	number_deploy@avg_dist,___awdiv@dividend
  4056  0022A2  C0FA  F081         	movff	number_deploy@avg_dist+1,___awdiv@dividend+1
  4057  0022A6  0E03               	movlw	3
  4058  0022A8  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  4059  0022AA  0EE8               	movlw	232
  4060  0022AC  6F82               	movwf	___awdiv@divisor& (0+255),b
  4061  0022AE  EC1F  F019         	call	___awdiv	;wreg free
  4062  0022B2  0100               	movlb	0	; () banked
  4063  0022B4  BF81               	btfsc	(?___awdiv+1)& (0+255),7,b
  4064  0022B6  D006               	goto	u8090
  4065  0022B8  5181               	movf	(?___awdiv+1)& (0+255),w,b
  4066  0022BA  E109               	bnz	l7564
  4067  0022BC  0E1E               	movlw	30
  4068  0022BE  5D80               	subwf	?___awdiv& (0+255),w,b
  4069  0022C0  B0D8               	btfsc	status,0,c
  4070  0022C2  D005               	goto	l7564
  4071  0022C4                     u8090:
  4072                           
  4073                           ; BSR set to: 0
  4074                           ;main.c: 423:     tires_t = 1;
  4075  0022C4  0E00               	movlw	0
  4076  0022C6  0101               	movlb	1	; () banked
  4077  0022C8  6F01               	movwf	(number_deploy@tires_t+1)& (0+255),b
  4078  0022CA  0E01               	movlw	1
  4079  0022CC  6F00               	movwf	number_deploy@tires_t& (0+255),b
  4080  0022CE                     l7564:
  4081                           
  4082                           ;main.c: 425:    if ((avg_dist/1000)>30){
  4083  0022CE  C0F9  F080         	movff	number_deploy@avg_dist,___awdiv@dividend
  4084  0022D2  C0FA  F081         	movff	number_deploy@avg_dist+1,___awdiv@dividend+1
  4085  0022D6  0E03               	movlw	3
  4086  0022D8  0100               	movlb	0	; () banked
  4087  0022DA  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  4088  0022DC  0EE8               	movlw	232
  4089  0022DE  6F82               	movwf	___awdiv@divisor& (0+255),b
  4090  0022E0  EC1F  F019         	call	___awdiv	;wreg free
  4091  0022E4  0100               	movlb	0	; () banked
  4092  0022E6  BF81               	btfsc	(?___awdiv+1)& (0+255),7,b
  4093  0022E8  D00B               	goto	l7568
  4094  0022EA  5181               	movf	(?___awdiv+1)& (0+255),w,b
  4095  0022EC  E104               	bnz	u8100
  4096  0022EE  0E1F               	movlw	31
  4097  0022F0  5D80               	subwf	?___awdiv& (0+255),w,b
  4098  0022F2  A0D8               	btfss	status,0,c
  4099  0022F4  D005               	goto	l7568
  4100  0022F6                     u8100:
  4101                           
  4102                           ; BSR set to: 0
  4103                           ;main.c: 426:     tires_t = 2;
  4104  0022F6  0E00               	movlw	0
  4105  0022F8  0101               	movlb	1	; () banked
  4106  0022FA  6F01               	movwf	(number_deploy@tires_t+1)& (0+255),b
  4107  0022FC  0E02               	movlw	2
  4108  0022FE  6F00               	movwf	number_deploy@tires_t& (0+255),b
  4109  002300                     l7568:
  4110                           
  4111                           ;main.c: 430:   if (poles_detected == 0){
  4112  002300  0100               	movlb	0	; () banked
  4113  002302  51FB               	movf	number_deploy@poles_detected& (0+255),w,b
  4114  002304  11FC               	iorwf	(number_deploy@poles_detected+1)& (0+255),w,b
  4115  002306  A4D8               	btfss	status,2,c
  4116  002308  D005               	goto	l7572
  4117                           
  4118                           ; BSR set to: 0
  4119                           ;main.c: 431:    tires_t = 2;
  4120  00230A  0E00               	movlw	0
  4121  00230C  0101               	movlb	1	; () banked
  4122  00230E  6F01               	movwf	(number_deploy@tires_t+1)& (0+255),b
  4123  002310  0E02               	movlw	2
  4124  002312  6F00               	movwf	number_deploy@tires_t& (0+255),b
  4125  002314                     l7572:
  4126                           
  4127                           ;main.c: 434:   if ((a[0]>=2 && a[0] <= 15)){
  4128  002314  BE62               	btfsc	_a+1,7,c
  4129  002316  D028               	goto	l7584
  4130  002318  5062               	movf	_a+1,w,c
  4131  00231A  E104               	bnz	u8120
  4132  00231C  0E02               	movlw	2
  4133  00231E  5C61               	subwf	_a,w,c
  4134  002320  A0D8               	btfss	status,0,c
  4135  002322  D022               	goto	l7584
  4136  002324                     u8120:
  4137  002324  BE62               	btfsc	_a+1,7,c
  4138  002326  D006               	goto	u8130
  4139  002328  5062               	movf	_a+1,w,c
  4140  00232A  E11E               	bnz	l7584
  4141  00232C  0E10               	movlw	16
  4142  00232E  5C61               	subwf	_a,w,c
  4143  002330  B0D8               	btfsc	status,0,c
  4144  002332  D01A               	goto	l7584
  4145  002334                     u8130:
  4146                           
  4147                           ;main.c: 436:             if ((a[1]>=2 && a[1] <= 15)){
  4148  002334  BE64               	btfsc	_a+3,7,c
  4149  002336  D013               	goto	l7582
  4150  002338  5064               	movf	_a+3,w,c
  4151  00233A  E104               	bnz	u8140
  4152  00233C  0E02               	movlw	2
  4153  00233E  5C63               	subwf	_a+2,w,c
  4154  002340  A0D8               	btfss	status,0,c
  4155  002342  D00D               	goto	l7582
  4156  002344                     u8140:
  4157  002344  BE64               	btfsc	_a+3,7,c
  4158  002346  D006               	goto	u8150
  4159  002348  5064               	movf	_a+3,w,c
  4160  00234A  E109               	bnz	l7582
  4161  00234C  0E10               	movlw	16
  4162  00234E  5C63               	subwf	_a+2,w,c
  4163  002350  B0D8               	btfsc	status,0,c
  4164  002352  D005               	goto	l7582
  4165  002354                     u8150:
  4166                           
  4167                           ;main.c: 438:                 tires_detected = 1;
  4168  002354  0E00               	movlw	0
  4169  002356  0101               	movlb	1	; () banked
  4170  002358  6F03               	movwf	(number_deploy@tires_detected+1)& (0+255),b
  4171  00235A  0E01               	movlw	1
  4172  00235C  D004               	goto	L2
  4173  00235E                     l7582:
  4174                           
  4175                           ;main.c: 441:                 tires_detected = 0;
  4176  00235E  0E00               	movlw	0
  4177  002360  0101               	movlb	1	; () banked
  4178  002362  6F03               	movwf	(number_deploy@tires_detected+1)& (0+255),b
  4179  002364  0E00               	movlw	0
  4180  002366                     L2:
  4181  002366  6F02               	movwf	number_deploy@tires_detected& (0+255),b
  4182  002368                     l7584:
  4183                           
  4184                           ;main.c: 444:         if ((tires_detected==1)){
  4185  002368  0101               	movlb	1	; () banked
  4186  00236A  0502               	decf	number_deploy@tires_detected& (0+255),w,b
  4187  00236C  1103               	iorwf	(number_deploy@tires_detected+1)& (0+255),w,b
  4188  00236E  B4D8               	btfsc	status,2,c
  4189                           
  4190                           ; BSR set to: 1
  4191                           ;main.c: 445:             if((a[2]>=2 && a[2] <= 15)&&(a[3] >=2 && a[3]<= 15)){
  4192  002370  BE66               	btfsc	_a+5,7,c
  4193  002372  D020               	goto	l7596
  4194  002374  5066               	movf	_a+5,w,c
  4195  002376  E104               	bnz	u8170
  4196  002378  0E02               	movlw	2
  4197  00237A  5C65               	subwf	_a+4,w,c
  4198  00237C  A0D8               	btfss	status,0,c
  4199  00237E  D01A               	goto	l7596
  4200  002380                     u8170:
  4201                           
  4202                           ; BSR set to: 1
  4203  002380  BE66               	btfsc	_a+5,7,c
  4204  002382  D006               	goto	u8180
  4205  002384  5066               	movf	_a+5,w,c
  4206  002386  E116               	bnz	l7596
  4207  002388  0E10               	movlw	16
  4208  00238A  5C65               	subwf	_a+4,w,c
  4209  00238C  B0D8               	btfsc	status,0,c
  4210  00238E  D012               	goto	l7596
  4211  002390                     u8180:
  4212                           
  4213                           ; BSR set to: 1
  4214  002390  BE68               	btfsc	_a+7,7,c
  4215  002392  D010               	goto	l7596
  4216  002394  5068               	movf	_a+7,w,c
  4217  002396  E104               	bnz	u8190
  4218  002398  0E02               	movlw	2
  4219  00239A  5C67               	subwf	_a+6,w,c
  4220  00239C  A0D8               	btfss	status,0,c
  4221  00239E  D00A               	goto	l7596
  4222  0023A0                     u8190:
  4223                           
  4224                           ; BSR set to: 1
  4225  0023A0  BE68               	btfsc	_a+7,7,c
  4226  0023A2  D006               	goto	u8200
  4227  0023A4  5068               	movf	_a+7,w,c
  4228  0023A6  E106               	bnz	l7596
  4229  0023A8  0E10               	movlw	16
  4230  0023AA  5C67               	subwf	_a+6,w,c
  4231  0023AC  B0D8               	btfsc	status,0,c
  4232  0023AE  D002               	goto	l7596
  4233  0023B0                     u8200:
  4234                           
  4235                           ; BSR set to: 1
  4236                           ;main.c: 446:                 tires_detected++;
  4237  0023B0  4B02               	infsnz	number_deploy@tires_detected& (0+255),f,b
  4238  0023B2  2B03               	incf	(number_deploy@tires_detected+1)& (0+255),f,b
  4239  0023B4                     l7596:
  4240                           
  4241                           ; BSR set to: 1
  4242                           ;main.c: 450:         t_count = tires_t - tires_detected;
  4243  0023B4  5102               	movf	number_deploy@tires_detected& (0+255),w,b
  4244  0023B6  5D00               	subwf	number_deploy@tires_t& (0+255),w,b
  4245  0023B8  6F04               	movwf	number_deploy@t_count& (0+255),b
  4246  0023BA  5103               	movf	(number_deploy@tires_detected+1)& (0+255),w,b
  4247  0023BC  5901               	subwfb	(number_deploy@tires_t+1)& (0+255),w,b
  4248  0023BE  6F05               	movwf	(number_deploy@t_count+1)& (0+255),b
  4249                           
  4250                           ; BSR set to: 1
  4251                           ;main.c: 451:         Pole[poles_detected].tires_deployed = t_count;
  4252  0023C0  C0FB  F0FD         	movff	number_deploy@poles_detected,??_number_deploy
  4253  0023C4  C0FC  F0FE         	movff	number_deploy@poles_detected+1,??_number_deploy+1
  4254  0023C8  0100               	movlb	0	; () banked
  4255  0023CA  90D8               	bcf	status,0,c
  4256  0023CC  37FD               	rlcf	??_number_deploy& (0+255),f,b
  4257  0023CE  37FE               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4258  0023D0  90D8               	bcf	status,0,c
  4259  0023D2  37FD               	rlcf	??_number_deploy& (0+255),f,b
  4260  0023D4  37FE               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4261  0023D6  90D8               	bcf	status,0,c
  4262  0023D8  37FD               	rlcf	??_number_deploy& (0+255),f,b
  4263  0023DA  37FE               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4264  0023DC  0E00               	movlw	low _Pole
  4265  0023DE  25FD               	addwf	??_number_deploy& (0+255),w,b
  4266  0023E0  6ED9               	movwf	fsr2l,c
  4267  0023E2  0E02               	movlw	high _Pole
  4268  0023E4  21FE               	addwfc	(??_number_deploy+1)& (0+255),w,b
  4269  0023E6  6EDA               	movwf	fsr2h,c
  4270  0023E8  C104  FFDE         	movff	number_deploy@t_count,postinc2
  4271  0023EC  C105  FFDD         	movff	number_deploy@t_count+1,postdec2
  4272                           
  4273                           ; BSR set to: 0
  4274                           ;main.c: 452:         Pole[poles_detected].tires_final = tires_t;
  4275  0023F0  C0FB  F0FD         	movff	number_deploy@poles_detected,??_number_deploy
  4276  0023F4  C0FC  F0FE         	movff	number_deploy@poles_detected+1,??_number_deploy+1
  4277  0023F8  90D8               	bcf	status,0,c
  4278  0023FA  37FD               	rlcf	??_number_deploy& (0+255),f,b
  4279  0023FC  37FE               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4280  0023FE  90D8               	bcf	status,0,c
  4281  002400  37FD               	rlcf	??_number_deploy& (0+255),f,b
  4282  002402  37FE               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4283  002404  90D8               	bcf	status,0,c
  4284  002406  37FD               	rlcf	??_number_deploy& (0+255),f,b
  4285  002408  37FE               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4286  00240A  0E02               	movlw	low (_Pole+2)
  4287  00240C  25FD               	addwf	??_number_deploy& (0+255),w,b
  4288  00240E  6ED9               	movwf	fsr2l,c
  4289  002410  0E02               	movlw	high (_Pole+2)
  4290  002412  21FE               	addwfc	(??_number_deploy+1)& (0+255),w,b
  4291  002414  6EDA               	movwf	fsr2h,c
  4292  002416  C100  FFDE         	movff	number_deploy@tires_t,postinc2
  4293  00241A  C101  FFDD         	movff	number_deploy@tires_t+1,postdec2
  4294                           
  4295                           ; BSR set to: 0
  4296                           ;main.c: 453:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  4297  00241E  0E01               	movlw	1
  4298  002420  EC79  F01D         	call	_lcdInst
  4299  002424  0E11               	movlw	17
  4300  002426  0100               	movlb	0	; () banked
  4301  002428  6FFD               	movwf	??_number_deploy& (0+255),b
  4302  00242A  0E3A               	movlw	58
  4303  00242C                     u9007:
  4304  00242C  2EE8               	decfsz	wreg,f,c
  4305  00242E  D7FE               	bra	u9007
  4306  002430  2FFD               	decfsz	??_number_deploy& (0+255),f,b
  4307  002432  D7FC               	bra	u9007
  4308  002434  F000               	nop	
  4309                           
  4310                           ;main.c: 454:         printf("det,%d, tcnt %d",tires_detected,t_count);
  4311  002436  0E7A               	movlw	low STR_23
  4312  002438  0100               	movlb	0	; () banked
  4313  00243A  6FED               	movwf	printf@fmt& (0+255),b
  4314  00243C  0EFB               	movlw	high STR_23
  4315  00243E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4316  002440  C102  F0EF         	movff	number_deploy@tires_detected,?_printf+2
  4317  002444  C103  F0F0         	movff	number_deploy@tires_detected+1,?_printf+3
  4318  002448  C104  F0F1         	movff	number_deploy@t_count,?_printf+4
  4319  00244C  C105  F0F2         	movff	number_deploy@t_count+1,?_printf+5
  4320  002450  EC00  F01D         	call	_printf	;wreg free
  4321                           
  4322                           ;main.c: 455:         _delay((unsigned long)((1000)*(10000000/4000.0)));
  4323  002454  0E0D               	movlw	13
  4324  002456  0100               	movlb	0	; () banked
  4325  002458  6FFE               	movwf	(??_number_deploy+1)& (0+255),b
  4326  00245A  0EAF               	movlw	175
  4327  00245C  6FFD               	movwf	??_number_deploy& (0+255),b
  4328  00245E  0EB6               	movlw	182
  4329  002460                     u9017:
  4330  002460  2EE8               	decfsz	wreg,f,c
  4331  002462  D7FE               	bra	u9017
  4332  002464  2FFD               	decfsz	??_number_deploy& (0+255),f,b
  4333  002466  D7FC               	bra	u9017
  4334  002468  2FFE               	decfsz	(??_number_deploy+1)& (0+255),f,b
  4335  00246A  D7FA               	bra	u9017
  4336  00246C  F000               	nop	
  4337                           
  4338                           ;main.c: 457:         if (t_count<=2){
  4339  00246E  0101               	movlb	1	; () banked
  4340  002470  BF05               	btfsc	(number_deploy@t_count+1)& (0+255),7,b
  4341  002472  D00E               	goto	u8220
  4342  002474  5105               	movf	(number_deploy@t_count+1)& (0+255),w,b
  4343  002476  E104               	bnz	l7614
  4344  002478  0E03               	movlw	3
  4345  00247A  5D04               	subwf	number_deploy@t_count& (0+255),w,b
  4346  00247C  A0D8               	btfss	status,0,c
  4347  00247E  D008               	goto	u8220
  4348  002480                     l7614:
  4349                           
  4350                           ; BSR set to: 1
  4351                           ;main.c: 419:     while (t_count<3){
  4352  002480  BF05               	btfsc	(number_deploy@t_count+1)& (0+255),7,b
  4353  002482  D708               	goto	l7558
  4354  002484  5105               	movf	(number_deploy@t_count+1)& (0+255),w,b
  4355  002486  E104               	bnz	u8220
  4356  002488  0E03               	movlw	3
  4357  00248A  5D04               	subwf	number_deploy@t_count& (0+255),w,b
  4358  00248C  A0D8               	btfss	status,0,c
  4359  00248E  D702               	goto	l7558
  4360  002490                     u8220:
  4361                           
  4362                           ; BSR set to: 1
  4363                           ;main.c: 465:     return (int) t_count;
  4364  002490  C104  F0F9         	movff	number_deploy@t_count,?_number_deploy
  4365  002494  C105  F0FA         	movff	number_deploy@t_count+1,?_number_deploy+1
  4366                           
  4367                           ; BSR set to: 1
  4368  002498  0012               	return		;funcret
  4369  00249A                     __end_of_number_deploy:
  4370                           	opt callstack 0
  4371                           
  4372 ;; *************** function ___awdiv *****************
  4373 ;; Defined at:
  4374 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  4375 ;; Parameters:    Size  Location     Type
  4376 ;;  dividend        2    0[BANK0 ] int 
  4377 ;;  divisor         2    2[BANK0 ] int 
  4378 ;; Auto vars:     Size  Location     Type
  4379 ;;  quotient        2    6[BANK0 ] int 
  4380 ;;  sign            1    5[BANK0 ] unsigned char 
  4381 ;;  counter         1    4[BANK0 ] unsigned char 
  4382 ;; Return value:  Size  Location     Type
  4383 ;;                  2    0[BANK0 ] int 
  4384 ;; Registers used:
  4385 ;;		wreg, status,2, status,0
  4386 ;; Tracked objects:
  4387 ;;		On entry : 0/0
  4388 ;;		On exit  : 0/0
  4389 ;;		Unchanged: 0/0
  4390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4391 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4392 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4394 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4395 ;;Total ram usage:        8 bytes
  4396 ;; Hardware stack levels used:    1
  4397 ;; Hardware stack levels required when called:    3
  4398 ;; This function calls:
  4399 ;;		Nothing
  4400 ;; This function is called by:
  4401 ;;		_number_deploy
  4402 ;; This function uses a non-reentrant model
  4403 ;;
  4404                           
  4405                           	psect	text7
  4406  00323E                     __ptext7:
  4407                           	opt callstack 0
  4408  00323E                     ___awdiv:
  4409                           	opt callstack 26
  4410                           
  4411                           ; BSR set to: 1
  4412                           ;incstack = 0
  4413  00323E  0E00               	movlw	0
  4414  003240  0100               	movlb	0	; () banked
  4415  003242  6F85               	movwf	___awdiv@sign& (0+255),b
  4416                           
  4417                           ; BSR set to: 0
  4418  003244  AF83               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  4419  003246  D006               	goto	l7314
  4420                           
  4421                           ; BSR set to: 0
  4422  003248  6D82               	negf	___awdiv@divisor& (0+255),b
  4423  00324A  1F83               	comf	(___awdiv@divisor+1)& (0+255),f,b
  4424  00324C  B0D8               	btfsc	status,0,c
  4425  00324E  2B83               	incf	(___awdiv@divisor+1)& (0+255),f,b
  4426                           
  4427                           ; BSR set to: 0
  4428  003250  0E01               	movlw	1
  4429  003252  6F85               	movwf	___awdiv@sign& (0+255),b
  4430  003254                     l7314:
  4431                           
  4432                           ; BSR set to: 0
  4433  003254  AF81               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  4434  003256  D006               	goto	l7320
  4435                           
  4436                           ; BSR set to: 0
  4437  003258  6D80               	negf	___awdiv@dividend& (0+255),b
  4438  00325A  1F81               	comf	(___awdiv@dividend+1)& (0+255),f,b
  4439  00325C  B0D8               	btfsc	status,0,c
  4440  00325E  2B81               	incf	(___awdiv@dividend+1)& (0+255),f,b
  4441                           
  4442                           ; BSR set to: 0
  4443  003260  0E01               	movlw	1
  4444  003262  1B85               	xorwf	___awdiv@sign& (0+255),f,b
  4445  003264                     l7320:
  4446                           
  4447                           ; BSR set to: 0
  4448  003264  0E00               	movlw	0
  4449  003266  6F87               	movwf	(___awdiv@quotient+1)& (0+255),b
  4450  003268  0E00               	movlw	0
  4451  00326A  6F86               	movwf	___awdiv@quotient& (0+255),b
  4452                           
  4453                           ; BSR set to: 0
  4454  00326C  5182               	movf	___awdiv@divisor& (0+255),w,b
  4455  00326E  1183               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  4456  003270  B4D8               	btfsc	status,2,c
  4457  003272  D01C               	goto	l7342
  4458                           
  4459                           ; BSR set to: 0
  4460  003274  0E01               	movlw	1
  4461  003276  6F84               	movwf	___awdiv@counter& (0+255),b
  4462  003278  D004               	goto	l7328
  4463  00327A                     l7326:
  4464                           
  4465                           ; BSR set to: 0
  4466  00327A  90D8               	bcf	status,0,c
  4467  00327C  3782               	rlcf	___awdiv@divisor& (0+255),f,b
  4468  00327E  3783               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  4469  003280  2B84               	incf	___awdiv@counter& (0+255),f,b
  4470  003282                     l7328:
  4471                           
  4472                           ; BSR set to: 0
  4473  003282  AF83               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  4474  003284  D7FA               	goto	l7326
  4475  003286                     u7930:
  4476                           
  4477                           ; BSR set to: 0
  4478  003286  90D8               	bcf	status,0,c
  4479  003288  3786               	rlcf	___awdiv@quotient& (0+255),f,b
  4480  00328A  3787               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  4481                           
  4482                           ; BSR set to: 0
  4483  00328C  5182               	movf	___awdiv@divisor& (0+255),w,b
  4484  00328E  5D80               	subwf	___awdiv@dividend& (0+255),w,b
  4485  003290  5183               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4486  003292  5981               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  4487  003294  A0D8               	btfss	status,0,c
  4488  003296  D005               	goto	l7338
  4489                           
  4490                           ; BSR set to: 0
  4491  003298  5182               	movf	___awdiv@divisor& (0+255),w,b
  4492  00329A  5F80               	subwf	___awdiv@dividend& (0+255),f,b
  4493  00329C  5183               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4494  00329E  5B81               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  4495                           
  4496                           ; BSR set to: 0
  4497  0032A0  8186               	bsf	___awdiv@quotient& (0+255),0,b
  4498  0032A2                     l7338:
  4499                           
  4500                           ; BSR set to: 0
  4501  0032A2  90D8               	bcf	status,0,c
  4502  0032A4  3383               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  4503  0032A6  3382               	rrcf	___awdiv@divisor& (0+255),f,b
  4504                           
  4505                           ; BSR set to: 0
  4506  0032A8  2F84               	decfsz	___awdiv@counter& (0+255),f,b
  4507  0032AA  D7ED               	goto	u7930
  4508  0032AC                     l7342:
  4509                           
  4510                           ; BSR set to: 0
  4511  0032AC  5185               	movf	___awdiv@sign& (0+255),w,b
  4512  0032AE  B4D8               	btfsc	status,2,c
  4513  0032B0  D004               	goto	l7346
  4514                           
  4515                           ; BSR set to: 0
  4516  0032B2  6D86               	negf	___awdiv@quotient& (0+255),b
  4517  0032B4  1F87               	comf	(___awdiv@quotient+1)& (0+255),f,b
  4518  0032B6  B0D8               	btfsc	status,0,c
  4519  0032B8  2B87               	incf	(___awdiv@quotient+1)& (0+255),f,b
  4520  0032BA                     l7346:
  4521                           
  4522                           ; BSR set to: 0
  4523  0032BA  C086  F080         	movff	___awdiv@quotient,?___awdiv
  4524  0032BE  C087  F081         	movff	___awdiv@quotient+1,?___awdiv+1
  4525                           
  4526                           ; BSR set to: 0
  4527  0032C2  0012               	return		;funcret
  4528  0032C4                     __end_of___awdiv:
  4529                           	opt callstack 0
  4530                           
  4531 ;; *************** function _brake *****************
  4532 ;; Defined at:
  4533 ;;		line 663 in file "main.c"
  4534 ;; Parameters:    Size  Location     Type
  4535 ;;		None
  4536 ;; Auto vars:     Size  Location     Type
  4537 ;;		None
  4538 ;; Return value:  Size  Location     Type
  4539 ;;                  1    wreg      void 
  4540 ;; Registers used:
  4541 ;;		wreg, status,2, status,0, cstack
  4542 ;; Tracked objects:
  4543 ;;		On entry : 0/0
  4544 ;;		On exit  : 0/0
  4545 ;;		Unchanged: 0/0
  4546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4551 ;;Total ram usage:        0 bytes
  4552 ;; Hardware stack levels used:    1
  4553 ;; Hardware stack levels required when called:    5
  4554 ;; This function calls:
  4555 ;;		_I2C_Master_Start
  4556 ;;		_I2C_Master_Stop
  4557 ;;		_I2C_Master_Write
  4558 ;; This function is called by:
  4559 ;;		_main
  4560 ;;		_sense_tires
  4561 ;; This function uses a non-reentrant model
  4562 ;;
  4563                           
  4564                           	psect	text8
  4565  003A50                     __ptext8:
  4566                           	opt callstack 0
  4567  003A50                     _brake:
  4568                           	opt callstack 25
  4569                           
  4570                           ;main.c: 664:     I2C_Master_Start();
  4571                           
  4572                           ; BSR set to: 0
  4573                           ;incstack = 0
  4574  003A50  EC8A  F01D         	call	_I2C_Master_Start	;wreg free
  4575                           
  4576                           ;main.c: 665:     I2C_Master_Write(0b00010000);
  4577  003A54  0E00               	movlw	0
  4578  003A56  0100               	movlb	0	; () banked
  4579  003A58  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4580  003A5A  0E10               	movlw	16
  4581  003A5C  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4582  003A5E  EC81  F01D         	call	_I2C_Master_Write	;wreg free
  4583                           
  4584                           ;main.c: 666:     I2C_Master_Write('9');
  4585  003A62  0E00               	movlw	0
  4586  003A64  0100               	movlb	0	; () banked
  4587  003A66  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4588  003A68  0E39               	movlw	57
  4589  003A6A  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4590  003A6C  EC81  F01D         	call	_I2C_Master_Write	;wreg free
  4591                           
  4592                           ;main.c: 667:     I2C_Master_Stop();
  4593  003A70  EC86  F01D         	call	_I2C_Master_Stop	;wreg free
  4594  003A74  0012               	return		;funcret
  4595  003A76                     __end_of_brake:
  4596                           	opt callstack 0
  4597                           
  4598 ;; *************** function _backwards *****************
  4599 ;; Defined at:
  4600 ;;		line 681 in file "main.c"
  4601 ;; Parameters:    Size  Location     Type
  4602 ;;		None
  4603 ;; Auto vars:     Size  Location     Type
  4604 ;;		None
  4605 ;; Return value:  Size  Location     Type
  4606 ;;                  1    wreg      void 
  4607 ;; Registers used:
  4608 ;;		wreg, status,2, status,0, cstack
  4609 ;; Tracked objects:
  4610 ;;		On entry : 0/0
  4611 ;;		On exit  : 0/0
  4612 ;;		Unchanged: 0/0
  4613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4618 ;;Total ram usage:        0 bytes
  4619 ;; Hardware stack levels used:    1
  4620 ;; Hardware stack levels required when called:    5
  4621 ;; This function calls:
  4622 ;;		_I2C_Master_Start
  4623 ;;		_I2C_Master_Stop
  4624 ;;		_I2C_Master_Write
  4625 ;; This function is called by:
  4626 ;;		_main
  4627 ;; This function uses a non-reentrant model
  4628 ;;
  4629                           
  4630                           	psect	text9
  4631  003A76                     __ptext9:
  4632                           	opt callstack 0
  4633  003A76                     _backwards:
  4634                           	opt callstack 25
  4635                           
  4636                           ;main.c: 682:     I2C_Master_Start();
  4637                           
  4638                           ;incstack = 0
  4639  003A76  EC8A  F01D         	call	_I2C_Master_Start	;wreg free
  4640                           
  4641                           ;main.c: 683:     I2C_Master_Write(0b00010000);
  4642  003A7A  0E00               	movlw	0
  4643  003A7C  0100               	movlb	0	; () banked
  4644  003A7E  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4645  003A80  0E10               	movlw	16
  4646  003A82  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4647  003A84  EC81  F01D         	call	_I2C_Master_Write	;wreg free
  4648                           
  4649                           ;main.c: 684:     I2C_Master_Write('5');
  4650  003A88  0E00               	movlw	0
  4651  003A8A  0100               	movlb	0	; () banked
  4652  003A8C  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4653  003A8E  0E35               	movlw	53
  4654  003A90  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4655  003A92  EC81  F01D         	call	_I2C_Master_Write	;wreg free
  4656                           
  4657                           ;main.c: 685:     I2C_Master_Stop();
  4658  003A96  EC86  F01D         	call	_I2C_Master_Stop	;wreg free
  4659  003A9A  0012               	return		;funcret
  4660  003A9C                     __end_of_backwards:
  4661                           	opt callstack 0
  4662                           
  4663 ;; *************** function _actuators_main *****************
  4664 ;; Defined at:
  4665 ;;		line 3 in file "actuators_main.c"
  4666 ;; Parameters:    Size  Location     Type
  4667 ;;  stack           2   12[BANK1 ] int 
  4668 ;;  steps2_adj      2   14[BANK1 ] int 
  4669 ;; Auto vars:     Size  Location     Type
  4670 ;;  act_cnt         2   18[BANK1 ] int 
  4671 ;; Return value:  Size  Location     Type
  4672 ;;                  1    wreg      void 
  4673 ;; Registers used:
  4674 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4675 ;; Tracked objects:
  4676 ;;		On entry : 0/0
  4677 ;;		On exit  : 0/0
  4678 ;;		Unchanged: 0/0
  4679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4680 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4681 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4682 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4683 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4684 ;;Total ram usage:        8 bytes
  4685 ;; Hardware stack levels used:    1
  4686 ;; Hardware stack levels required when called:   16
  4687 ;; This function calls:
  4688 ;;		_initLCD
  4689 ;;		_lcdInst
  4690 ;;		_printf
  4691 ;;		_servo
  4692 ;;		_stepper
  4693 ;;		_stepper2
  4694 ;;		_stepper2_back
  4695 ;;		_system_init
  4696 ;; This function is called by:
  4697 ;;		_main
  4698 ;; This function uses a non-reentrant model
  4699 ;;
  4700                           
  4701                           	psect	text10
  4702  002A56                     __ptext10:
  4703                           	opt callstack 0
  4704  002A56                     _actuators_main:
  4705                           	opt callstack 14
  4706                           
  4707                           ;actuators_main.c: 4:     int act_cnt = 0;
  4708                           
  4709                           ;incstack = 0
  4710  002A56  0E00               	movlw	0
  4711  002A58  0101               	movlb	1	; () banked
  4712  002A5A  6F13               	movwf	(actuators_main@act_cnt+1)& (0+255),b
  4713  002A5C  0E00               	movlw	0
  4714  002A5E  6F12               	movwf	actuators_main@act_cnt& (0+255),b
  4715                           
  4716                           ; BSR set to: 1
  4717                           ;actuators_main.c: 5:     system_init();
  4718  002A60  EC43  F01C         	call	_system_init	;wreg free
  4719                           
  4720                           ;actuators_main.c: 6:     initLCD();
  4721  002A64  ECE6  F019         	call	_initLCD	;wreg free
  4722                           
  4723                           ;actuators_main.c: 7:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  4724  002A68  0E01               	movlw	1
  4725  002A6A  EC79  F01D         	call	_lcdInst
  4726  002A6E  0E11               	movlw	17
  4727  002A70  0101               	movlb	1	; () banked
  4728  002A72  6F10               	movwf	??_actuators_main& (0+255),b
  4729  002A74  0E3A               	movlw	58
  4730  002A76                     u9027:
  4731  002A76  2EE8               	decfsz	wreg,f,c
  4732  002A78  D7FE               	bra	u9027
  4733  002A7A  2F10               	decfsz	??_actuators_main& (0+255),f,b
  4734  002A7C  D7FC               	bra	u9027
  4735  002A7E  F000               	nop	
  4736                           
  4737                           ;actuators_main.c: 8:     printf("cnt is %d",act_cnt);
  4738  002A80  0E08               	movlw	low STR_1
  4739  002A82  0100               	movlb	0	; () banked
  4740  002A84  6FED               	movwf	printf@fmt& (0+255),b
  4741  002A86  0EFD               	movlw	high STR_1
  4742  002A88  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4743  002A8A  0E00               	movlw	0
  4744  002A8C  6FF0               	movwf	(?_printf+3)& (0+255),b
  4745  002A8E  0E00               	movlw	0
  4746  002A90  6FEF               	movwf	(?_printf+2)& (0+255),b
  4747  002A92  EC00  F01D         	call	_printf	;wreg free
  4748                           
  4749                           ;actuators_main.c: 9:     _delay((unsigned long)((200)*(10000000/4000.0)));
  4750  002A96  0E03               	movlw	3
  4751  002A98  0101               	movlb	1	; () banked
  4752  002A9A  6F11               	movwf	(??_actuators_main+1)& (0+255),b
  4753  002A9C  0E8A               	movlw	138
  4754  002A9E  6F10               	movwf	??_actuators_main& (0+255),b
  4755  002AA0  0E55               	movlw	85
  4756  002AA2                     u9037:
  4757  002AA2  2EE8               	decfsz	wreg,f,c
  4758  002AA4  D7FE               	bra	u9037
  4759  002AA6  2F10               	decfsz	??_actuators_main& (0+255),f,b
  4760  002AA8  D7FC               	bra	u9037
  4761  002AAA  2F11               	decfsz	(??_actuators_main+1)& (0+255),f,b
  4762  002AAC  D7FA               	bra	u9037
  4763  002AAE  D000               	nop2	
  4764  002AB0                     l7380:
  4765                           
  4766                           ;actuators_main.c: 11:     if (act_cnt==0){
  4767  002AB0  0101               	movlb	1	; () banked
  4768  002AB2  5112               	movf	actuators_main@act_cnt& (0+255),w,b
  4769  002AB4  1113               	iorwf	(actuators_main@act_cnt+1)& (0+255),w,b
  4770  002AB6  A4D8               	btfss	status,2,c
  4771  002AB8  D064               	goto	l7456
  4772                           
  4773                           ; BSR set to: 1
  4774                           ;actuators_main.c: 15:         stepper(stack);
  4775  002ABA  C10C  F0FD         	movff	actuators_main@stack,stepper@stack
  4776  002ABE  C10D  F0FE         	movff	actuators_main@stack+1,stepper@stack+1
  4777  002AC2  ECDB  F018         	call	_stepper	;wreg free
  4778                           
  4779                           ;actuators_main.c: 16:         stepper2(0, steps2_adj);
  4780  002AC6  C10E  F0FD         	movff	actuators_main@steps2_adj,stepper2@steps2_adj
  4781  002ACA  C10F  F0FE         	movff	actuators_main@steps2_adj+1,stepper2@steps2_adj+1
  4782  002ACE  0E00               	movlw	0
  4783  002AD0  EC62  F017         	call	_stepper2
  4784                           
  4785                           ;actuators_main.c: 17:                 stepper2_back(1, steps2_adj);
  4786  002AD4  C10E  F0FD         	movff	actuators_main@steps2_adj,stepper2_back@steps2_adj
  4787  002AD8  C10F  F0FE         	movff	actuators_main@steps2_adj+1,stepper2_back@steps2_adj+1
  4788  002ADC  0E01               	movlw	1
  4789  002ADE  EC3D  F018         	call	_stepper2_back
  4790                           
  4791                           ;actuators_main.c: 20:                 LATA = 0b00000000;
  4792  002AE2  0E00               	movlw	0
  4793  002AE4  6E89               	movwf	3977,c	;volatile
  4794                           
  4795                           ;actuators_main.c: 21:         LATCbits.LATC0 = 0;
  4796  002AE6  908B               	bcf	3979,0,c	;volatile
  4797                           
  4798                           ;actuators_main.c: 22:         LATEbits.LATE0 = 0;
  4799  002AE8  908D               	bcf	3981,0,c	;volatile
  4800                           
  4801                           ;actuators_main.c: 23:         LATEbits.LATE1 = 0;
  4802  002AEA  928D               	bcf	3981,1,c	;volatile
  4803                           
  4804                           ;actuators_main.c: 24:         LATEbits.LATE2 = 0;
  4805  002AEC  948D               	bcf	3981,2,c	;volatile
  4806                           
  4807                           ;actuators_main.c: 25:         LATCbits.LATC5 = 0;
  4808  002AEE  9A8B               	bcf	3979,5,c	;volatile
  4809                           
  4810                           ;actuators_main.c: 26:         LATCbits.LATC6 = 0;
  4811  002AF0  9C8B               	bcf	3979,6,c	;volatile
  4812                           
  4813                           ;actuators_main.c: 27:         LATCbits.LATC7 = 0;
  4814  002AF2  9E8B               	bcf	3979,7,c	;volatile
  4815                           
  4816                           ;actuators_main.c: 28:         LATAbits.LATA5 = 0;
  4817  002AF4  9A89               	bcf	3977,5,c	;volatile
  4818                           
  4819                           ;actuators_main.c: 30:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/400
      +                          0.0)));};
  4820  002AF6  0E01               	movlw	1
  4821  002AF8  EC79  F01D         	call	_lcdInst
  4822  002AFC  0E11               	movlw	17
  4823  002AFE  0101               	movlb	1	; () banked
  4824  002B00  6F10               	movwf	??_actuators_main& (0+255),b
  4825  002B02  0E3A               	movlw	58
  4826  002B04                     u9047:
  4827  002B04  2EE8               	decfsz	wreg,f,c
  4828  002B06  D7FE               	bra	u9047
  4829  002B08  2F10               	decfsz	??_actuators_main& (0+255),f,b
  4830  002B0A  D7FC               	bra	u9047
  4831  002B0C  F000               	nop	
  4832                           
  4833                           ;actuators_main.c: 31:         printf("Stepper done");
  4834  002B0E  0E39               	movlw	low STR_2
  4835  002B10  0100               	movlb	0	; () banked
  4836  002B12  6FED               	movwf	printf@fmt& (0+255),b
  4837  002B14  0EFC               	movlw	high STR_2
  4838  002B16  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4839  002B18  EC00  F01D         	call	_printf	;wreg free
  4840                           
  4841                           ;actuators_main.c: 33:         servo();
  4842  002B1C  ECD5  F01C         	call	_servo	;wreg free
  4843                           
  4844                           ;actuators_main.c: 34:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/400
      +                          0.0)));};
  4845  002B20  0E01               	movlw	1
  4846  002B22  EC79  F01D         	call	_lcdInst
  4847  002B26  0E11               	movlw	17
  4848  002B28  0101               	movlb	1	; () banked
  4849  002B2A  6F10               	movwf	??_actuators_main& (0+255),b
  4850  002B2C  0E3A               	movlw	58
  4851  002B2E                     u9057:
  4852  002B2E  2EE8               	decfsz	wreg,f,c
  4853  002B30  D7FE               	bra	u9057
  4854  002B32  2F10               	decfsz	??_actuators_main& (0+255),f,b
  4855  002B34  D7FC               	bra	u9057
  4856  002B36  F000               	nop	
  4857                           
  4858                           ;actuators_main.c: 35:         printf("Servo done");
  4859  002B38  0EA3               	movlw	low STR_3
  4860  002B3A  0100               	movlb	0	; () banked
  4861  002B3C  6FED               	movwf	printf@fmt& (0+255),b
  4862  002B3E  0EFC               	movlw	high STR_3
  4863  002B40  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4864  002B42  EC00  F01D         	call	_printf	;wreg free
  4865                           
  4866                           ;actuators_main.c: 36:                 LATA = 0b00000000;
  4867  002B46  0E00               	movlw	0
  4868  002B48  6E89               	movwf	3977,c	;volatile
  4869                           
  4870                           ;actuators_main.c: 37:         LATCbits.LATC0 = 0;
  4871  002B4A  908B               	bcf	3979,0,c	;volatile
  4872                           
  4873                           ;actuators_main.c: 38:         LATEbits.LATE0 = 0;
  4874  002B4C  908D               	bcf	3981,0,c	;volatile
  4875                           
  4876                           ;actuators_main.c: 39:         LATEbits.LATE1 = 0;
  4877  002B4E  928D               	bcf	3981,1,c	;volatile
  4878                           
  4879                           ;actuators_main.c: 40:         LATEbits.LATE2 = 0;
  4880  002B50  948D               	bcf	3981,2,c	;volatile
  4881                           
  4882                           ;actuators_main.c: 41:         LATCbits.LATC5 = 0;
  4883  002B52  9A8B               	bcf	3979,5,c	;volatile
  4884                           
  4885                           ;actuators_main.c: 42:         LATCbits.LATC6 = 0;
  4886  002B54  9C8B               	bcf	3979,6,c	;volatile
  4887                           
  4888                           ;actuators_main.c: 43:         LATCbits.LATC7 = 0;
  4889  002B56  9E8B               	bcf	3979,7,c	;volatile
  4890                           
  4891                           ;actuators_main.c: 44:         LATAbits.LATA5 = 0;
  4892  002B58  9A89               	bcf	3977,5,c	;volatile
  4893                           
  4894                           ;actuators_main.c: 49:         stepper2(1, steps2_adj);
  4895  002B5A  C10E  F0FD         	movff	actuators_main@steps2_adj,stepper2@steps2_adj
  4896  002B5E  C10F  F0FE         	movff	actuators_main@steps2_adj+1,stepper2@steps2_adj+1
  4897  002B62  0E01               	movlw	1
  4898  002B64  EC62  F017         	call	_stepper2
  4899                           
  4900                           ;actuators_main.c: 50:                         LATA = 0b00000000;
  4901  002B68  0E00               	movlw	0
  4902  002B6A  6E89               	movwf	3977,c	;volatile
  4903                           
  4904                           ;actuators_main.c: 51:         LATCbits.LATC0 = 0;
  4905  002B6C  908B               	bcf	3979,0,c	;volatile
  4906                           
  4907                           ;actuators_main.c: 52:         LATEbits.LATE0 = 0;
  4908  002B6E  908D               	bcf	3981,0,c	;volatile
  4909                           
  4910                           ;actuators_main.c: 53:         LATEbits.LATE1 = 0;
  4911  002B70  928D               	bcf	3981,1,c	;volatile
  4912                           
  4913                           ;actuators_main.c: 54:         LATEbits.LATE2 = 0;
  4914  002B72  948D               	bcf	3981,2,c	;volatile
  4915                           
  4916                           ;actuators_main.c: 55:         LATCbits.LATC5 = 0;
  4917  002B74  9A8B               	bcf	3979,5,c	;volatile
  4918                           
  4919                           ;actuators_main.c: 56:         LATCbits.LATC6 = 0;
  4920  002B76  9C8B               	bcf	3979,6,c	;volatile
  4921                           
  4922                           ;actuators_main.c: 57:         LATCbits.LATC7 = 0;
  4923  002B78  9E8B               	bcf	3979,7,c	;volatile
  4924                           
  4925                           ;actuators_main.c: 58:         LATAbits.LATA5 = 0;
  4926  002B7A  9A89               	bcf	3977,5,c	;volatile
  4927                           
  4928                           ;actuators_main.c: 59:         act_cnt++;
  4929  002B7C  0101               	movlb	1	; () banked
  4930  002B7E  4B12               	infsnz	actuators_main@act_cnt& (0+255),f,b
  4931  002B80  2B13               	incf	(actuators_main@act_cnt+1)& (0+255),f,b
  4932  002B82                     l7456:
  4933                           
  4934                           ; BSR set to: 1
  4935                           ;actuators_main.c: 62:     if(act_cnt){
  4936  002B82  5112               	movf	actuators_main@act_cnt& (0+255),w,b
  4937  002B84  1113               	iorwf	(actuators_main@act_cnt+1)& (0+255),w,b
  4938  002B86  A4D8               	btfss	status,2,c
  4939  002B88  0012               	return	
  4940  002B8A  D792               	goto	l7380
  4941  002B8C                     __end_of_actuators_main:
  4942                           	opt callstack 0
  4943                           
  4944 ;; *************** function _system_init *****************
  4945 ;; Defined at:
  4946 ;;		line 72 in file "actuators_main.c"
  4947 ;; Parameters:    Size  Location     Type
  4948 ;;		None
  4949 ;; Auto vars:     Size  Location     Type
  4950 ;;		None
  4951 ;; Return value:  Size  Location     Type
  4952 ;;                  1    wreg      void 
  4953 ;; Registers used:
  4954 ;;		wreg, status,2
  4955 ;; Tracked objects:
  4956 ;;		On entry : 0/0
  4957 ;;		On exit  : 0/0
  4958 ;;		Unchanged: 0/0
  4959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4964 ;;Total ram usage:        0 bytes
  4965 ;; Hardware stack levels used:    1
  4966 ;; Hardware stack levels required when called:    3
  4967 ;; This function calls:
  4968 ;;		Nothing
  4969 ;; This function is called by:
  4970 ;;		_actuators_main
  4971 ;; This function uses a non-reentrant model
  4972 ;;
  4973                           
  4974                           	psect	text11
  4975  003886                     __ptext11:
  4976                           	opt callstack 0
  4977  003886                     _system_init:
  4978                           	opt callstack 26
  4979                           
  4980                           ;actuators_main.c: 73:     TRISB = 0x00;
  4981                           
  4982                           ; BSR set to: 1
  4983                           ;incstack = 0
  4984  003886  0E00               	movlw	0
  4985  003888  6E93               	movwf	3987,c	;volatile
  4986                           
  4987                           ;actuators_main.c: 75:     LATB = 0x0F;
  4988  00388A  0E0F               	movlw	15
  4989  00388C  6E8A               	movwf	3978,c	;volatile
  4990                           
  4991                           ;actuators_main.c: 76:     TRISA = 0x00;
  4992  00388E  0E00               	movlw	0
  4993  003890  6E92               	movwf	3986,c	;volatile
  4994                           
  4995                           ;actuators_main.c: 77:     LATA = 0x0F;
  4996  003892  0E0F               	movlw	15
  4997  003894  6E89               	movwf	3977,c	;volatile
  4998                           
  4999                           ;actuators_main.c: 79:     TRISCbits.TRISC1 = 0;
  5000  003896  9294               	bcf	3988,1,c	;volatile
  5001                           
  5002                           ;actuators_main.c: 82:     TRISCbits.TRISC2 = 0;
  5003  003898  9494               	bcf	3988,2,c	;volatile
  5004                           
  5005                           ;actuators_main.c: 85:     LATD = 0x00;
  5006  00389A  0E00               	movlw	0
  5007  00389C  6E8C               	movwf	3980,c	;volatile
  5008                           
  5009                           ;actuators_main.c: 86:     TRISD = 0x00;
  5010  00389E  0E00               	movlw	0
  5011  0038A0  6E95               	movwf	3989,c	;volatile
  5012                           
  5013                           ;actuators_main.c: 88:     ADCON1 = 0b00001111;
  5014  0038A2  0E0F               	movlw	15
  5015  0038A4  6EC1               	movwf	4033,c	;volatile
  5016                           
  5017                           ;actuators_main.c: 90:     TRISC = 0x00;
  5018  0038A6  0E00               	movlw	0
  5019  0038A8  6E94               	movwf	3988,c	;volatile
  5020                           
  5021                           ;actuators_main.c: 91:     LATC = 0x00;
  5022  0038AA  0E00               	movlw	0
  5023  0038AC  6E8B               	movwf	3979,c	;volatile
  5024                           
  5025                           ;actuators_main.c: 92:     TRISE = 0x00;
  5026  0038AE  0E00               	movlw	0
  5027  0038B0  6E96               	movwf	3990,c	;volatile
  5028                           
  5029                           ;actuators_main.c: 93:     LATE = 0x00;
  5030  0038B2  0E00               	movlw	0
  5031  0038B4  6E8D               	movwf	3981,c	;volatile
  5032  0038B6  0012               	return		;funcret
  5033  0038B8                     __end_of_system_init:
  5034                           	opt callstack 0
  5035                           
  5036 ;; *************** function _stepper2_back *****************
  5037 ;; Defined at:
  5038 ;;		line 314 in file "actuators_main.c"
  5039 ;; Parameters:    Size  Location     Type
  5040 ;;  direction       1    wreg     unsigned char 
  5041 ;;  steps2_adj      2  125[BANK0 ] int 
  5042 ;; Auto vars:     Size  Location     Type
  5043 ;;  direction       1    1[BANK1 ] unsigned char 
  5044 ;;  i               2    4[BANK1 ] int 
  5045 ;;  count_steppe    2    2[BANK1 ] int 
  5046 ;; Return value:  Size  Location     Type
  5047 ;;                  1    wreg      void 
  5048 ;; Registers used:
  5049 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5050 ;; Tracked objects:
  5051 ;;		On entry : 0/0
  5052 ;;		On exit  : 0/0
  5053 ;;		Unchanged: 0/0
  5054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5055 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5056 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5057 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5058 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5059 ;;Total ram usage:        8 bytes
  5060 ;; Hardware stack levels used:    1
  5061 ;; Hardware stack levels required when called:   15
  5062 ;; This function calls:
  5063 ;;		_full_drive
  5064 ;;		_lcdInst
  5065 ;;		_printf
  5066 ;; This function is called by:
  5067 ;;		_actuators_main
  5068 ;; This function uses a non-reentrant model
  5069 ;;
  5070                           
  5071                           	psect	text12
  5072  00307A                     __ptext12:
  5073                           	opt callstack 0
  5074  00307A                     _stepper2_back:
  5075                           	opt callstack 14
  5076                           
  5077                           ;incstack = 0
  5078                           ;stepper2_back@direction stored from wreg
  5079  00307A  0101               	movlb	1	; () banked
  5080  00307C  6F01               	movwf	stepper2_back@direction& (0+255),b
  5081                           
  5082                           ;actuators_main.c: 332:     int count_stepper = 0;
  5083  00307E  0E00               	movlw	0
  5084  003080  0101               	movlb	1	; () banked
  5085  003082  6F03               	movwf	(stepper2_back@count_stepper+1)& (0+255),b
  5086  003084  0E00               	movlw	0
  5087  003086  6F02               	movwf	stepper2_back@count_stepper& (0+255),b
  5088                           
  5089                           ; BSR set to: 1
  5090                           ;actuators_main.c: 335:             { lcdInst(0x01); _delay((unsigned long)((5)*(1000000
      +                          0/4000.0)));};
  5091                           
  5092                           ; BSR set to: 1
  5093                           ;actuators_main.c: 334:         if (count_stepper<1){
  5094  003088  0E01               	movlw	1
  5095  00308A  EC79  F01D         	call	_lcdInst
  5096  00308E  0E11               	movlw	17
  5097  003090  0101               	movlb	1	; () banked
  5098  003092  6F00               	movwf	??_stepper2_back& (0+255),b
  5099  003094  0E3A               	movlw	58
  5100  003096                     u9067:
  5101  003096  2EE8               	decfsz	wreg,f,c
  5102  003098  D7FE               	bra	u9067
  5103  00309A  2F00               	decfsz	??_stepper2_back& (0+255),f,b
  5104  00309C  D7FC               	bra	u9067
  5105  00309E  F000               	nop	
  5106                           
  5107                           ;actuators_main.c: 336:             printf("step1");
  5108  0030A0  0E23               	movlw	low STR_6
  5109  0030A2  0100               	movlb	0	; () banked
  5110  0030A4  6FED               	movwf	printf@fmt& (0+255),b
  5111  0030A6  0EFD               	movlw	high STR_6
  5112  0030A8  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5113  0030AA  EC00  F01D         	call	_printf	;wreg free
  5114  0030AE  0EC0               	movlw	192
  5115  0030B0  EC79  F01D         	call	_lcdInst
  5116                           
  5117                           ;actuators_main.c: 338:             printf("Step speed %d",4);
  5118  0030B4  0E11               	movlw	low STR_7
  5119  0030B6  0100               	movlb	0	; () banked
  5120  0030B8  6FED               	movwf	printf@fmt& (0+255),b
  5121  0030BA  0EFC               	movlw	high STR_7
  5122  0030BC  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5123  0030BE  0E00               	movlw	0
  5124  0030C0  6FF0               	movwf	(?_printf+3)& (0+255),b
  5125  0030C2  0E04               	movlw	4
  5126  0030C4  6FEF               	movwf	(?_printf+2)& (0+255),b
  5127  0030C6  EC00  F01D         	call	_printf	;wreg free
  5128                           
  5129                           ;actuators_main.c: 339:             for(int i=0;i<5;i++){
  5130  0030CA  0E00               	movlw	0
  5131  0030CC  0101               	movlb	1	; () banked
  5132  0030CE  6F05               	movwf	(stepper2_back@i+1)& (0+255),b
  5133  0030D0  0E00               	movlw	0
  5134  0030D2  6F04               	movwf	stepper2_back@i& (0+255),b
  5135  0030D4                     l7148:
  5136                           
  5137                           ; BSR set to: 1
  5138                           ;actuators_main.c: 341:                 full_drive(direction, 2);
  5139  0030D4  0E00               	movlw	0
  5140  0030D6  0100               	movlb	0	; () banked
  5141  0030D8  6FFA               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5142  0030DA  0E02               	movlw	2
  5143  0030DC  6FF9               	movwf	full_drive@stepper_no& (0+255),b
  5144  0030DE  0101               	movlb	1	; () banked
  5145  0030E0  5101               	movf	stepper2_back@direction& (0+255),w,b
  5146  0030E2  EC0B  F00B         	call	_full_drive
  5147                           
  5148                           ;actuators_main.c: 343:             }
  5149  0030E6  0101               	movlb	1	; () banked
  5150  0030E8  4B04               	infsnz	stepper2_back@i& (0+255),f,b
  5151  0030EA  2B05               	incf	(stepper2_back@i+1)& (0+255),f,b
  5152                           
  5153                           ; BSR set to: 1
  5154  0030EC  BF05               	btfsc	(stepper2_back@i+1)& (0+255),7,b
  5155  0030EE  D7F2               	goto	l7148
  5156  0030F0  5105               	movf	(stepper2_back@i+1)& (0+255),w,b
  5157  0030F2  E104               	bnz	u7600
  5158  0030F4  0E05               	movlw	5
  5159  0030F6  5D04               	subwf	stepper2_back@i& (0+255),w,b
  5160  0030F8  A0D8               	btfss	status,0,c
  5161  0030FA  D7EC               	goto	l7148
  5162  0030FC                     u7600:
  5163                           
  5164                           ; BSR set to: 1
  5165                           ;actuators_main.c: 344:             printf("cnt is %d", count_stepper);
  5166  0030FC  0E08               	movlw	low STR_1
  5167  0030FE  0100               	movlb	0	; () banked
  5168  003100  6FED               	movwf	printf@fmt& (0+255),b
  5169  003102  0EFD               	movlw	high STR_1
  5170  003104  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5171  003106  C102  F0EF         	movff	stepper2_back@count_stepper,?_printf+2
  5172  00310A  C103  F0F0         	movff	stepper2_back@count_stepper+1,?_printf+3
  5173  00310E  EC00  F01D         	call	_printf	;wreg free
  5174                           
  5175                           ;actuators_main.c: 345:             count_stepper++;
  5176  003112  0101               	movlb	1	; () banked
  5177  003114  4B02               	infsnz	stepper2_back@count_stepper& (0+255),f,b
  5178  003116  2B03               	incf	(stepper2_back@count_stepper+1)& (0+255),f,b
  5179                           
  5180                           ; BSR set to: 1
  5181  003118  0012               	return		;funcret
  5182  00311A                     __end_of_stepper2_back:
  5183                           	opt callstack 0
  5184                           
  5185 ;; *************** function _stepper2 *****************
  5186 ;; Defined at:
  5187 ;;		line 229 in file "actuators_main.c"
  5188 ;; Parameters:    Size  Location     Type
  5189 ;;  direction       1    wreg     unsigned char 
  5190 ;;  steps2_adj      2  125[BANK0 ] int 
  5191 ;; Auto vars:     Size  Location     Type
  5192 ;;  direction       1   11[BANK1 ] unsigned char 
  5193 ;;  i               2    7[BANK1 ] int 
  5194 ;;  i               2    5[BANK1 ] int 
  5195 ;;  count_steppe    2    9[BANK1 ] int 
  5196 ;; Return value:  Size  Location     Type
  5197 ;;                  1    wreg      void 
  5198 ;; Registers used:
  5199 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5200 ;; Tracked objects:
  5201 ;;		On entry : 0/0
  5202 ;;		On exit  : 0/0
  5203 ;;		Unchanged: 0/0
  5204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5205 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5206 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5207 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5208 ;;      Totals:         0       2      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5209 ;;Total ram usage:       14 bytes
  5210 ;; Hardware stack levels used:    1
  5211 ;; Hardware stack levels required when called:   15
  5212 ;; This function calls:
  5213 ;;		_full_drive
  5214 ;;		_lcdInst
  5215 ;;		_printf
  5216 ;; This function is called by:
  5217 ;;		_actuators_main
  5218 ;; This function uses a non-reentrant model
  5219 ;;
  5220                           
  5221                           	psect	text13
  5222  002EC4                     __ptext13:
  5223                           	opt callstack 0
  5224  002EC4                     _stepper2:
  5225                           	opt callstack 14
  5226                           
  5227                           ; BSR set to: 1
  5228                           ;incstack = 0
  5229                           ;stepper2@direction stored from wreg
  5230  002EC4  0101               	movlb	1	; () banked
  5231  002EC6  6F0B               	movwf	stepper2@direction& (0+255),b
  5232                           
  5233                           ;actuators_main.c: 247:     int count_stepper = 0;
  5234  002EC8  0E00               	movlw	0
  5235  002ECA  0101               	movlb	1	; () banked
  5236  002ECC  6F0A               	movwf	(stepper2@count_stepper+1)& (0+255),b
  5237  002ECE  0E00               	movlw	0
  5238  002ED0  6F09               	movwf	stepper2@count_stepper& (0+255),b
  5239                           
  5240                           ; BSR set to: 1
  5241                           ;actuators_main.c: 250:     if (direction == 0){
  5242                           
  5243                           ; BSR set to: 1
  5244                           ;actuators_main.c: 249:         if (count_stepper<1){
  5245  002ED2  510B               	movf	stepper2@direction& (0+255),w,b
  5246  002ED4  A4D8               	btfss	status,2,c
  5247  002ED6  D02D               	goto	l7110
  5248                           
  5249                           ; BSR set to: 1
  5250                           ;actuators_main.c: 255:             for(int i=0;i<steps2_adj;i++){
  5251  002ED8  0E00               	movlw	0
  5252  002EDA  6F06               	movwf	(stepper2@i+1)& (0+255),b
  5253  002EDC  0E00               	movlw	0
  5254  002EDE  6F05               	movwf	stepper2@i& (0+255),b
  5255  002EE0  D00C               	goto	l7104
  5256  002EE2                     l7100:
  5257                           
  5258                           ; BSR set to: 1
  5259                           ;actuators_main.c: 257:                 full_drive(direction, 2);
  5260  002EE2  0E00               	movlw	0
  5261  002EE4  0100               	movlb	0	; () banked
  5262  002EE6  6FFA               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5263  002EE8  0E02               	movlw	2
  5264  002EEA  6FF9               	movwf	full_drive@stepper_no& (0+255),b
  5265  002EEC  0101               	movlb	1	; () banked
  5266  002EEE  510B               	movf	stepper2@direction& (0+255),w,b
  5267  002EF0  EC0B  F00B         	call	_full_drive
  5268                           
  5269                           ;actuators_main.c: 259:             }
  5270  002EF4  0101               	movlb	1	; () banked
  5271  002EF6  4B05               	infsnz	stepper2@i& (0+255),f,b
  5272  002EF8  2B06               	incf	(stepper2@i+1)& (0+255),f,b
  5273  002EFA                     l7104:
  5274                           
  5275                           ; BSR set to: 1
  5276  002EFA  0100               	movlb	0	; () banked
  5277  002EFC  51FD               	movf	stepper2@steps2_adj& (0+255),w,b
  5278  002EFE  0101               	movlb	1	; () banked
  5279  002F00  5D05               	subwf	stepper2@i& (0+255),w,b
  5280  002F02  5106               	movf	(stepper2@i+1)& (0+255),w,b
  5281  002F04  0A80               	xorlw	128
  5282  002F06  6F00               	movwf	??_stepper2& (0+255),b
  5283  002F08  0100               	movlb	0	; () banked
  5284  002F0A  51FE               	movf	(stepper2@steps2_adj+1)& (0+255),w,b
  5285  002F0C  0A80               	xorlw	128
  5286  002F0E  0101               	movlb	1	; () banked
  5287  002F10  5900               	subwfb	??_stepper2& (0+255),w,b
  5288  002F12  A0D8               	btfss	status,0,c
  5289  002F14  D7E6               	goto	l7100
  5290                           
  5291                           ; BSR set to: 1
  5292                           ;actuators_main.c: 260:             printf("cnt is %d", count_stepper);
  5293  002F16  0E08               	movlw	low STR_1
  5294  002F18  0100               	movlb	0	; () banked
  5295  002F1A  6FED               	movwf	printf@fmt& (0+255),b
  5296  002F1C  0EFD               	movlw	high STR_1
  5297  002F1E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5298  002F20  C109  F0EF         	movff	stepper2@count_stepper,?_printf+2
  5299  002F24  C10A  F0F0         	movff	stepper2@count_stepper+1,?_printf+3
  5300  002F28  EC00  F01D         	call	_printf	;wreg free
  5301                           
  5302                           ;actuators_main.c: 261:             count_stepper++;
  5303  002F2C  0101               	movlb	1	; () banked
  5304  002F2E  4B09               	infsnz	stepper2@count_stepper& (0+255),f,b
  5305  002F30  2B0A               	incf	(stepper2@count_stepper+1)& (0+255),f,b
  5306  002F32                     l7110:
  5307                           
  5308                           ; BSR set to: 1
  5309                           ;actuators_main.c: 263:     if (direction == 1){
  5310  002F32  050B               	decf	stepper2@direction& (0+255),w,b
  5311  002F34  A4D8               	btfss	status,2,c
  5312  002F36  0012               	return	
  5313                           
  5314                           ; BSR set to: 1
  5315                           ;actuators_main.c: 264:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/40
      +                          00.0)));};
  5316  002F38  0E01               	movlw	1
  5317  002F3A  EC79  F01D         	call	_lcdInst
  5318  002F3E  0E11               	movlw	17
  5319  002F40  0101               	movlb	1	; () banked
  5320  002F42  6F00               	movwf	??_stepper2& (0+255),b
  5321  002F44  0E3A               	movlw	58
  5322  002F46                     u9077:
  5323  002F46  2EE8               	decfsz	wreg,f,c
  5324  002F48  D7FE               	bra	u9077
  5325  002F4A  2F00               	decfsz	??_stepper2& (0+255),f,b
  5326  002F4C  D7FC               	bra	u9077
  5327  002F4E  F000               	nop	
  5328                           
  5329                           ;actuators_main.c: 265:                         printf("steppp %d", steps2_adj-(5));
  5330  002F50  0EFE               	movlw	low STR_5
  5331  002F52  0100               	movlb	0	; () banked
  5332  002F54  6FED               	movwf	printf@fmt& (0+255),b
  5333  002F56  0EFC               	movlw	high STR_5
  5334  002F58  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5335  002F5A  0EFB               	movlw	251
  5336  002F5C  25FD               	addwf	stepper2@steps2_adj& (0+255),w,b
  5337  002F5E  6FEF               	movwf	(?_printf+2)& (0+255),b
  5338  002F60  0EFF               	movlw	255
  5339  002F62  21FE               	addwfc	(stepper2@steps2_adj+1)& (0+255),w,b
  5340  002F64  6FF0               	movwf	(?_printf+3)& (0+255),b
  5341  002F66  EC00  F01D         	call	_printf	;wreg free
  5342                           
  5343                           ;actuators_main.c: 267:                 for(int i=0;i<(steps2_adj-(5));i++){
  5344  002F6A  0E00               	movlw	0
  5345  002F6C  0101               	movlb	1	; () banked
  5346  002F6E  6F08               	movwf	(stepper2@i_384+1)& (0+255),b
  5347  002F70  0E00               	movlw	0
  5348  002F72  6F07               	movwf	stepper2@i_384& (0+255),b
  5349  002F74  D00C               	goto	l7124
  5350  002F76                     l7120:
  5351                           
  5352                           ; BSR set to: 1
  5353                           ;actuators_main.c: 269:                     full_drive(direction, 2);
  5354  002F76  0E00               	movlw	0
  5355  002F78  0100               	movlb	0	; () banked
  5356  002F7A  6FFA               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5357  002F7C  0E02               	movlw	2
  5358  002F7E  6FF9               	movwf	full_drive@stepper_no& (0+255),b
  5359  002F80  0101               	movlb	1	; () banked
  5360  002F82  510B               	movf	stepper2@direction& (0+255),w,b
  5361  002F84  EC0B  F00B         	call	_full_drive
  5362                           
  5363                           ;actuators_main.c: 271:                 }
  5364  002F88  0101               	movlb	1	; () banked
  5365  002F8A  4B07               	infsnz	stepper2@i_384& (0+255),f,b
  5366  002F8C  2B08               	incf	(stepper2@i_384+1)& (0+255),f,b
  5367  002F8E                     l7124:
  5368                           
  5369                           ; BSR set to: 1
  5370  002F8E  0EFB               	movlw	251
  5371  002F90  6F00               	movwf	??_stepper2& (0+255),b
  5372  002F92  0EFF               	movlw	255
  5373  002F94  6F01               	movwf	(??_stepper2+1)& (0+255),b
  5374  002F96  C0FD  F102         	movff	stepper2@steps2_adj,??_stepper2+2
  5375  002F9A  C0FE  F103         	movff	stepper2@steps2_adj+1,??_stepper2+3
  5376  002F9E  5100               	movf	??_stepper2& (0+255),w,b
  5377  002FA0  2702               	addwf	(??_stepper2+2)& (0+255),f,b
  5378  002FA2  5101               	movf	(??_stepper2+1)& (0+255),w,b
  5379  002FA4  2303               	addwfc	(??_stepper2+3)& (0+255),f,b
  5380  002FA6  5102               	movf	(??_stepper2+2)& (0+255),w,b
  5381  002FA8  5D07               	subwf	stepper2@i_384& (0+255),w,b
  5382  002FAA  5108               	movf	(stepper2@i_384+1)& (0+255),w,b
  5383  002FAC  0A80               	xorlw	128
  5384  002FAE  6F04               	movwf	(??_stepper2+4)& (0+255),b
  5385  002FB0  5103               	movf	(??_stepper2+3)& (0+255),w,b
  5386  002FB2  0A80               	xorlw	128
  5387  002FB4  5904               	subwfb	(??_stepper2+4)& (0+255),w,b
  5388  002FB6  A0D8               	btfss	status,0,c
  5389  002FB8  D7DE               	goto	l7120
  5390                           
  5391                           ; BSR set to: 1
  5392                           ;actuators_main.c: 272:                 count_stepper++;
  5393  002FBA  4B09               	infsnz	stepper2@count_stepper& (0+255),f,b
  5394  002FBC  2B0A               	incf	(stepper2@count_stepper+1)& (0+255),f,b
  5395                           
  5396                           ; BSR set to: 1
  5397  002FBE  0012               	return		;funcret
  5398  002FC0                     __end_of_stepper2:
  5399                           	opt callstack 0
  5400                           
  5401 ;; *************** function _stepper *****************
  5402 ;; Defined at:
  5403 ;;		line 182 in file "actuators_main.c"
  5404 ;; Parameters:    Size  Location     Type
  5405 ;;  stack           2  125[BANK0 ] int 
  5406 ;; Auto vars:     Size  Location     Type
  5407 ;;  i               2    4[BANK1 ] int 
  5408 ;;  i               2    2[BANK1 ] int 
  5409 ;;  count_steppe    2    0[BANK1 ] int 
  5410 ;; Return value:  Size  Location     Type
  5411 ;;                  1    wreg      void 
  5412 ;; Registers used:
  5413 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5414 ;; Tracked objects:
  5415 ;;		On entry : 0/0
  5416 ;;		On exit  : 0/0
  5417 ;;		Unchanged: 0/0
  5418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5419 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5420 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5422 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5423 ;;Total ram usage:        8 bytes
  5424 ;; Hardware stack levels used:    1
  5425 ;; Hardware stack levels required when called:   15
  5426 ;; This function calls:
  5427 ;;		_full_drive
  5428 ;; This function is called by:
  5429 ;;		_actuators_main
  5430 ;; This function uses a non-reentrant model
  5431 ;;
  5432                           
  5433                           	psect	text14
  5434  0031B6                     __ptext14:
  5435                           	opt callstack 0
  5436  0031B6                     _stepper:
  5437                           	opt callstack 14
  5438                           
  5439                           ;actuators_main.c: 183:     int count_stepper = 0;
  5440                           
  5441                           ; BSR set to: 1
  5442                           ;incstack = 0
  5443  0031B6  0E00               	movlw	0
  5444  0031B8  0101               	movlb	1	; () banked
  5445  0031BA  6F01               	movwf	(stepper@count_stepper+1)& (0+255),b
  5446  0031BC  0E00               	movlw	0
  5447  0031BE  6F00               	movwf	stepper@count_stepper& (0+255),b
  5448                           
  5449                           ; BSR set to: 1
  5450                           ;actuators_main.c: 192:             if (stack == 1){
  5451                           
  5452                           ; BSR set to: 1
  5453                           ;actuators_main.c: 186:         if (count_stepper<1){
  5454  0031C0  0100               	movlb	0	; () banked
  5455  0031C2  05FD               	decf	stepper@stack& (0+255),w,b
  5456  0031C4  11FE               	iorwf	(stepper@stack+1)& (0+255),w,b
  5457  0031C6  A4D8               	btfss	status,2,c
  5458  0031C8  D018               	goto	u7530
  5459                           
  5460                           ; BSR set to: 0
  5461                           ;actuators_main.c: 193:                 for(int i=0;i<14;i++){
  5462  0031CA  0E00               	movlw	0
  5463  0031CC  0101               	movlb	1	; () banked
  5464  0031CE  6F03               	movwf	(stepper@i+1)& (0+255),b
  5465  0031D0  0E00               	movlw	0
  5466  0031D2  6F02               	movwf	stepper@i& (0+255),b
  5467  0031D4                     l7070:
  5468                           
  5469                           ; BSR set to: 1
  5470                           ;actuators_main.c: 195:                     full_drive(0, 1);
  5471  0031D4  0E00               	movlw	0
  5472  0031D6  0100               	movlb	0	; () banked
  5473  0031D8  6FFA               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5474  0031DA  0E01               	movlw	1
  5475  0031DC  6FF9               	movwf	full_drive@stepper_no& (0+255),b
  5476  0031DE  0E00               	movlw	0
  5477  0031E0  EC0B  F00B         	call	_full_drive
  5478                           
  5479                           ;actuators_main.c: 197:                 }
  5480  0031E4  0101               	movlb	1	; () banked
  5481  0031E6  4B02               	infsnz	stepper@i& (0+255),f,b
  5482  0031E8  2B03               	incf	(stepper@i+1)& (0+255),f,b
  5483                           
  5484                           ; BSR set to: 1
  5485  0031EA  BF03               	btfsc	(stepper@i+1)& (0+255),7,b
  5486  0031EC  D7F3               	goto	l7070
  5487  0031EE  5103               	movf	(stepper@i+1)& (0+255),w,b
  5488  0031F0  E104               	bnz	u7530
  5489  0031F2  0E0E               	movlw	14
  5490  0031F4  5D02               	subwf	stepper@i& (0+255),w,b
  5491  0031F6  A0D8               	btfss	status,0,c
  5492  0031F8  D7ED               	goto	l7070
  5493  0031FA                     u7530:
  5494                           
  5495                           ;actuators_main.c: 199:             if (stack == 2){
  5496  0031FA  0E02               	movlw	2
  5497  0031FC  0100               	movlb	0	; () banked
  5498  0031FE  19FD               	xorwf	stepper@stack& (0+255),w,b
  5499  003200  11FE               	iorwf	(stepper@stack+1)& (0+255),w,b
  5500  003202  A4D8               	btfss	status,2,c
  5501  003204  D018               	goto	u7550
  5502                           
  5503                           ; BSR set to: 0
  5504                           ;actuators_main.c: 200:                 for(int i=0;i<14;i++){
  5505  003206  0E00               	movlw	0
  5506  003208  0101               	movlb	1	; () banked
  5507  00320A  6F05               	movwf	(stepper@i_376+1)& (0+255),b
  5508  00320C  0E00               	movlw	0
  5509  00320E  6F04               	movwf	stepper@i_376& (0+255),b
  5510  003210                     l7084:
  5511                           
  5512                           ; BSR set to: 1
  5513                           ;actuators_main.c: 201:                     full_drive(0, 3);
  5514  003210  0E00               	movlw	0
  5515  003212  0100               	movlb	0	; () banked
  5516  003214  6FFA               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5517  003216  0E03               	movlw	3
  5518  003218  6FF9               	movwf	full_drive@stepper_no& (0+255),b
  5519  00321A  0E00               	movlw	0
  5520  00321C  EC0B  F00B         	call	_full_drive
  5521                           
  5522                           ;actuators_main.c: 204:                 }
  5523  003220  0101               	movlb	1	; () banked
  5524  003222  4B04               	infsnz	stepper@i_376& (0+255),f,b
  5525  003224  2B05               	incf	(stepper@i_376+1)& (0+255),f,b
  5526                           
  5527                           ; BSR set to: 1
  5528  003226  BF05               	btfsc	(stepper@i_376+1)& (0+255),7,b
  5529  003228  D7F3               	goto	l7084
  5530  00322A  5105               	movf	(stepper@i_376+1)& (0+255),w,b
  5531  00322C  E104               	bnz	u7550
  5532  00322E  0E0E               	movlw	14
  5533  003230  5D04               	subwf	stepper@i_376& (0+255),w,b
  5534  003232  A0D8               	btfss	status,0,c
  5535  003234  D7ED               	goto	l7084
  5536  003236                     u7550:
  5537                           
  5538                           ;actuators_main.c: 207:             count_stepper++;
  5539  003236  0101               	movlb	1	; () banked
  5540  003238  4B00               	infsnz	stepper@count_stepper& (0+255),f,b
  5541  00323A  2B01               	incf	(stepper@count_stepper+1)& (0+255),f,b
  5542                           
  5543                           ; BSR set to: 1
  5544                           
  5545                           ;actuators_main.c: 208:         }
  5546  00323C  0012               	return		;funcret
  5547  00323E                     __end_of_stepper:
  5548                           	opt callstack 0
  5549                           
  5550 ;; *************** function _full_drive *****************
  5551 ;; Defined at:
  5552 ;;		line 363 in file "actuators_main.c"
  5553 ;; Parameters:    Size  Location     Type
  5554 ;;  direction       1    wreg     unsigned char 
  5555 ;;  stepper_no      2  121[BANK0 ] int 
  5556 ;; Auto vars:     Size  Location     Type
  5557 ;;  direction       1  124[BANK0 ] unsigned char 
  5558 ;; Return value:  Size  Location     Type
  5559 ;;                  1    wreg      void 
  5560 ;; Registers used:
  5561 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5562 ;; Tracked objects:
  5563 ;;		On entry : 0/0
  5564 ;;		On exit  : 0/0
  5565 ;;		Unchanged: 0/0
  5566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5567 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5568 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5569 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5570 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5571 ;;Total ram usage:        4 bytes
  5572 ;; Hardware stack levels used:    1
  5573 ;; Hardware stack levels required when called:   14
  5574 ;; This function calls:
  5575 ;;		_printf
  5576 ;; This function is called by:
  5577 ;;		_stepper
  5578 ;;		_stepper2
  5579 ;;		_stepper2_back
  5580 ;; This function uses a non-reentrant model
  5581 ;;
  5582                           
  5583                           	psect	text15
  5584  001616                     __ptext15:
  5585                           	opt callstack 0
  5586  001616                     _full_drive:
  5587                           	opt callstack 14
  5588                           
  5589                           ; BSR set to: 1
  5590                           ;incstack = 0
  5591                           ;full_drive@direction stored from wreg
  5592  001616  0100               	movlb	0	; () banked
  5593  001618  6FFC               	movwf	full_drive@direction& (0+255),b
  5594                           
  5595                           ;actuators_main.c: 364:     if (stepper_no == 1){
  5596  00161A  0100               	movlb	0	; () banked
  5597  00161C  05F9               	decf	full_drive@stepper_no& (0+255),w,b
  5598  00161E  11FA               	iorwf	(full_drive@stepper_no+1)& (0+255),w,b
  5599  001620  A4D8               	btfss	status,2,c
  5600  001622  D06B               	goto	l6798
  5601                           
  5602                           ; BSR set to: 0
  5603                           ;actuators_main.c: 365:         if (direction == 1){
  5604  001624  05FC               	decf	full_drive@direction& (0+255),w,b
  5605  001626  A4D8               	btfss	status,2,c
  5606  001628  D032               	goto	l6782
  5607                           
  5608                           ; BSR set to: 0
  5609                           ;actuators_main.c: 366:             LATA = 0b00000011;
  5610  00162A  0E03               	movlw	3
  5611  00162C  6E89               	movwf	3977,c	;volatile
  5612                           
  5613                           ; BSR set to: 0
  5614                           ;actuators_main.c: 367:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5615  00162E  0E1E               	movlw	30
  5616  001630  0100               	movlb	0	; () banked
  5617  001632  6FFB               	movwf	??_full_drive& (0+255),b
  5618  001634  0E37               	movlw	55
  5619  001636                     u9087:
  5620  001636  2EE8               	decfsz	wreg,f,c
  5621  001638  D7FE               	bra	u9087
  5622  00163A  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5623  00163C  D7FC               	bra	u9087
  5624                           
  5625                           ;actuators_main.c: 368:             LATA = 0b00000110;
  5626  00163E  0E06               	movlw	6
  5627  001640  6E89               	movwf	3977,c	;volatile
  5628                           
  5629                           ;actuators_main.c: 369:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5630  001642  0E1E               	movlw	30
  5631  001644  0100               	movlb	0	; () banked
  5632  001646  6FFB               	movwf	??_full_drive& (0+255),b
  5633  001648  0E37               	movlw	55
  5634  00164A                     u9097:
  5635  00164A  2EE8               	decfsz	wreg,f,c
  5636  00164C  D7FE               	bra	u9097
  5637  00164E  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5638  001650  D7FC               	bra	u9097
  5639                           
  5640                           ;actuators_main.c: 370:             LATA = 0b00001100;
  5641  001652  0E0C               	movlw	12
  5642  001654  6E89               	movwf	3977,c	;volatile
  5643                           
  5644                           ;actuators_main.c: 371:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5645  001656  0E1E               	movlw	30
  5646  001658  0100               	movlb	0	; () banked
  5647  00165A  6FFB               	movwf	??_full_drive& (0+255),b
  5648  00165C  0E37               	movlw	55
  5649  00165E                     u9107:
  5650  00165E  2EE8               	decfsz	wreg,f,c
  5651  001660  D7FE               	bra	u9107
  5652  001662  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5653  001664  D7FC               	bra	u9107
  5654                           
  5655                           ;actuators_main.c: 372:             LATA = 0b00001001;
  5656  001666  0E09               	movlw	9
  5657  001668  6E89               	movwf	3977,c	;volatile
  5658                           
  5659                           ;actuators_main.c: 373:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5660  00166A  0E1E               	movlw	30
  5661  00166C  0100               	movlb	0	; () banked
  5662  00166E  6FFB               	movwf	??_full_drive& (0+255),b
  5663  001670  0E37               	movlw	55
  5664  001672                     u9117:
  5665  001672  2EE8               	decfsz	wreg,f,c
  5666  001674  D7FE               	bra	u9117
  5667  001676  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5668  001678  D7FC               	bra	u9117
  5669                           
  5670                           ;actuators_main.c: 374:             LATA = 0b00000011;
  5671  00167A  0E03               	movlw	3
  5672  00167C  6E89               	movwf	3977,c	;volatile
  5673                           
  5674                           ;actuators_main.c: 375:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5675  00167E  0E1E               	movlw	30
  5676  001680  0100               	movlb	0	; () banked
  5677  001682  6FFB               	movwf	??_full_drive& (0+255),b
  5678  001684  0E37               	movlw	55
  5679  001686                     u9127:
  5680  001686  2EE8               	decfsz	wreg,f,c
  5681  001688  D7FE               	bra	u9127
  5682  00168A  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5683  00168C  D7FC               	bra	u9127
  5684  00168E                     l6782:
  5685                           
  5686                           ;actuators_main.c: 377:         if (direction == 0){
  5687  00168E  0100               	movlb	0	; () banked
  5688  001690  51FC               	movf	full_drive@direction& (0+255),w,b
  5689  001692  A4D8               	btfss	status,2,c
  5690  001694  D032               	goto	l6798
  5691                           
  5692                           ; BSR set to: 0
  5693                           ;actuators_main.c: 378:             LATA = 0b00001001;
  5694  001696  0E09               	movlw	9
  5695  001698  6E89               	movwf	3977,c	;volatile
  5696                           
  5697                           ; BSR set to: 0
  5698                           ;actuators_main.c: 379:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5699  00169A  0E1E               	movlw	30
  5700  00169C  0100               	movlb	0	; () banked
  5701  00169E  6FFB               	movwf	??_full_drive& (0+255),b
  5702  0016A0  0E37               	movlw	55
  5703  0016A2                     u9137:
  5704  0016A2  2EE8               	decfsz	wreg,f,c
  5705  0016A4  D7FE               	bra	u9137
  5706  0016A6  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5707  0016A8  D7FC               	bra	u9137
  5708                           
  5709                           ;actuators_main.c: 380:             LATA = 0b00001100;
  5710  0016AA  0E0C               	movlw	12
  5711  0016AC  6E89               	movwf	3977,c	;volatile
  5712                           
  5713                           ;actuators_main.c: 381:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5714  0016AE  0E1E               	movlw	30
  5715  0016B0  0100               	movlb	0	; () banked
  5716  0016B2  6FFB               	movwf	??_full_drive& (0+255),b
  5717  0016B4  0E37               	movlw	55
  5718  0016B6                     u9147:
  5719  0016B6  2EE8               	decfsz	wreg,f,c
  5720  0016B8  D7FE               	bra	u9147
  5721  0016BA  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5722  0016BC  D7FC               	bra	u9147
  5723                           
  5724                           ;actuators_main.c: 382:             LATA = 0b00000110;
  5725  0016BE  0E06               	movlw	6
  5726  0016C0  6E89               	movwf	3977,c	;volatile
  5727                           
  5728                           ;actuators_main.c: 383:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5729  0016C2  0E1E               	movlw	30
  5730  0016C4  0100               	movlb	0	; () banked
  5731  0016C6  6FFB               	movwf	??_full_drive& (0+255),b
  5732  0016C8  0E37               	movlw	55
  5733  0016CA                     u9157:
  5734  0016CA  2EE8               	decfsz	wreg,f,c
  5735  0016CC  D7FE               	bra	u9157
  5736  0016CE  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5737  0016D0  D7FC               	bra	u9157
  5738                           
  5739                           ;actuators_main.c: 384:             LATA = 0b00000011;
  5740  0016D2  0E03               	movlw	3
  5741  0016D4  6E89               	movwf	3977,c	;volatile
  5742                           
  5743                           ;actuators_main.c: 385:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5744  0016D6  0E1E               	movlw	30
  5745  0016D8  0100               	movlb	0	; () banked
  5746  0016DA  6FFB               	movwf	??_full_drive& (0+255),b
  5747  0016DC  0E37               	movlw	55
  5748  0016DE                     u9167:
  5749  0016DE  2EE8               	decfsz	wreg,f,c
  5750  0016E0  D7FE               	bra	u9167
  5751  0016E2  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5752  0016E4  D7FC               	bra	u9167
  5753                           
  5754                           ;actuators_main.c: 386:             LATA = 0b00001001;
  5755  0016E6  0E09               	movlw	9
  5756  0016E8  6E89               	movwf	3977,c	;volatile
  5757                           
  5758                           ;actuators_main.c: 387:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5759  0016EA  0E1E               	movlw	30
  5760  0016EC  0100               	movlb	0	; () banked
  5761  0016EE  6FFB               	movwf	??_full_drive& (0+255),b
  5762  0016F0  0E37               	movlw	55
  5763  0016F2                     u9177:
  5764  0016F2  2EE8               	decfsz	wreg,f,c
  5765  0016F4  D7FE               	bra	u9177
  5766  0016F6  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5767  0016F8  D7FC               	bra	u9177
  5768  0016FA                     l6798:
  5769                           
  5770                           ;actuators_main.c: 390:     if (stepper_no == 2){
  5771  0016FA  0E02               	movlw	2
  5772  0016FC  0100               	movlb	0	; () banked
  5773  0016FE  19F9               	xorwf	full_drive@stepper_no& (0+255),w,b
  5774  001700  11FA               	iorwf	(full_drive@stepper_no+1)& (0+255),w,b
  5775  001702  A4D8               	btfss	status,2,c
  5776  001704  D089               	goto	l6876
  5777                           
  5778                           ; BSR set to: 0
  5779                           ;actuators_main.c: 391:         if (direction == 1){
  5780  001706  05FC               	decf	full_drive@direction& (0+255),w,b
  5781  001708  A4D8               	btfss	status,2,c
  5782  00170A  D041               	goto	l6838
  5783                           
  5784                           ; BSR set to: 0
  5785                           ;actuators_main.c: 392:             LATCbits.LATC0 = 1;
  5786  00170C  808B               	bsf	3979,0,c	;volatile
  5787                           
  5788                           ;actuators_main.c: 393:             LATEbits.LATE0 = 1;
  5789  00170E  808D               	bsf	3981,0,c	;volatile
  5790                           
  5791                           ;actuators_main.c: 394:             LATEbits.LATE1 = 0;
  5792  001710  928D               	bcf	3981,1,c	;volatile
  5793                           
  5794                           ;actuators_main.c: 395:             LATEbits.LATE2 = 0;
  5795  001712  948D               	bcf	3981,2,c	;volatile
  5796                           
  5797                           ; BSR set to: 0
  5798                           ;actuators_main.c: 396:             _delay((unsigned long)((4)*(10000000/4000.0)));
  5799  001714  0E0D               	movlw	13
  5800  001716  0100               	movlb	0	; () banked
  5801  001718  6FFB               	movwf	??_full_drive& (0+255),b
  5802  00171A  0EFB               	movlw	251
  5803  00171C                     u9187:
  5804  00171C  2EE8               	decfsz	wreg,f,c
  5805  00171E  D7FE               	bra	u9187
  5806  001720  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5807  001722  D7FC               	bra	u9187
  5808  001724  D000               	nop2	
  5809                           
  5810                           ;actuators_main.c: 397:             LATCbits.LATC0 = 0;
  5811  001726  908B               	bcf	3979,0,c	;volatile
  5812                           
  5813                           ;actuators_main.c: 398:             LATEbits.LATE0 = 1;
  5814  001728  808D               	bsf	3981,0,c	;volatile
  5815                           
  5816                           ;actuators_main.c: 399:             LATEbits.LATE1 = 1;
  5817  00172A  828D               	bsf	3981,1,c	;volatile
  5818                           
  5819                           ;actuators_main.c: 400:             LATEbits.LATE2 = 0;
  5820  00172C  948D               	bcf	3981,2,c	;volatile
  5821                           
  5822                           ;actuators_main.c: 401:             _delay((unsigned long)((4)*(10000000/4000.0)));
  5823  00172E  0E0D               	movlw	13
  5824  001730  0100               	movlb	0	; () banked
  5825  001732  6FFB               	movwf	??_full_drive& (0+255),b
  5826  001734  0EFB               	movlw	251
  5827  001736                     u9197:
  5828  001736  2EE8               	decfsz	wreg,f,c
  5829  001738  D7FE               	bra	u9197
  5830  00173A  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5831  00173C  D7FC               	bra	u9197
  5832  00173E  D000               	nop2	
  5833                           
  5834                           ;actuators_main.c: 402:             LATCbits.LATC0 = 0;
  5835  001740  908B               	bcf	3979,0,c	;volatile
  5836                           
  5837                           ;actuators_main.c: 403:             LATEbits.LATE0 = 0;
  5838  001742  908D               	bcf	3981,0,c	;volatile
  5839                           
  5840                           ;actuators_main.c: 404:             LATEbits.LATE1 = 1;
  5841  001744  828D               	bsf	3981,1,c	;volatile
  5842                           
  5843                           ;actuators_main.c: 405:             LATEbits.LATE2 = 1;
  5844  001746  848D               	bsf	3981,2,c	;volatile
  5845                           
  5846                           ;actuators_main.c: 406:             _delay((unsigned long)((4)*(10000000/4000.0)));
  5847  001748  0E0D               	movlw	13
  5848  00174A  0100               	movlb	0	; () banked
  5849  00174C  6FFB               	movwf	??_full_drive& (0+255),b
  5850  00174E  0EFB               	movlw	251
  5851  001750                     u9207:
  5852  001750  2EE8               	decfsz	wreg,f,c
  5853  001752  D7FE               	bra	u9207
  5854  001754  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5855  001756  D7FC               	bra	u9207
  5856  001758  D000               	nop2	
  5857                           
  5858                           ;actuators_main.c: 407:             LATCbits.LATC0 = 1;
  5859  00175A  808B               	bsf	3979,0,c	;volatile
  5860                           
  5861                           ;actuators_main.c: 408:             LATEbits.LATE0 = 0;
  5862  00175C  908D               	bcf	3981,0,c	;volatile
  5863                           
  5864                           ;actuators_main.c: 409:             LATEbits.LATE1 = 0;
  5865  00175E  928D               	bcf	3981,1,c	;volatile
  5866                           
  5867                           ;actuators_main.c: 410:             LATEbits.LATE2 = 1;
  5868  001760  848D               	bsf	3981,2,c	;volatile
  5869                           
  5870                           ;actuators_main.c: 411:             _delay((unsigned long)((4)*(10000000/4000.0)));
  5871  001762  0E0D               	movlw	13
  5872  001764  0100               	movlb	0	; () banked
  5873  001766  6FFB               	movwf	??_full_drive& (0+255),b
  5874  001768  0EFB               	movlw	251
  5875  00176A                     u9217:
  5876  00176A  2EE8               	decfsz	wreg,f,c
  5877  00176C  D7FE               	bra	u9217
  5878  00176E  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5879  001770  D7FC               	bra	u9217
  5880  001772  D000               	nop2	
  5881                           
  5882                           ;actuators_main.c: 412:             LATCbits.LATC0 = 1;
  5883  001774  808B               	bsf	3979,0,c	;volatile
  5884                           
  5885                           ;actuators_main.c: 413:             LATEbits.LATE0 = 1;
  5886  001776  808D               	bsf	3981,0,c	;volatile
  5887                           
  5888                           ;actuators_main.c: 414:             LATEbits.LATE1 = 0;
  5889  001778  928D               	bcf	3981,1,c	;volatile
  5890                           
  5891                           ;actuators_main.c: 415:             LATEbits.LATE2 = 0;
  5892  00177A  948D               	bcf	3981,2,c	;volatile
  5893                           
  5894                           ;actuators_main.c: 416:             _delay((unsigned long)((4)*(10000000/4000.0)));
  5895  00177C  0E0D               	movlw	13
  5896  00177E  0100               	movlb	0	; () banked
  5897  001780  6FFB               	movwf	??_full_drive& (0+255),b
  5898  001782  0EFB               	movlw	251
  5899  001784                     u9227:
  5900  001784  2EE8               	decfsz	wreg,f,c
  5901  001786  D7FE               	bra	u9227
  5902  001788  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5903  00178A  D7FC               	bra	u9227
  5904  00178C  D000               	nop2	
  5905  00178E                     l6838:
  5906                           
  5907                           ;actuators_main.c: 418:         if (direction == 0){
  5908  00178E  0100               	movlb	0	; () banked
  5909  001790  51FC               	movf	full_drive@direction& (0+255),w,b
  5910  001792  A4D8               	btfss	status,2,c
  5911  001794  D041               	goto	l6876
  5912                           
  5913                           ; BSR set to: 0
  5914                           ;actuators_main.c: 419:             LATCbits.LATC0 = 1;
  5915  001796  808B               	bsf	3979,0,c	;volatile
  5916                           
  5917                           ;actuators_main.c: 420:             LATEbits.LATE0 = 0;
  5918  001798  908D               	bcf	3981,0,c	;volatile
  5919                           
  5920                           ;actuators_main.c: 421:             LATEbits.LATE1 = 0;
  5921  00179A  928D               	bcf	3981,1,c	;volatile
  5922                           
  5923                           ;actuators_main.c: 422:             LATEbits.LATE2 = 1;
  5924  00179C  848D               	bsf	3981,2,c	;volatile
  5925                           
  5926                           ; BSR set to: 0
  5927                           ;actuators_main.c: 423:             _delay((unsigned long)((4)*(10000000/4000.0)));
  5928  00179E  0E0D               	movlw	13
  5929  0017A0  0100               	movlb	0	; () banked
  5930  0017A2  6FFB               	movwf	??_full_drive& (0+255),b
  5931  0017A4  0EFB               	movlw	251
  5932  0017A6                     u9237:
  5933  0017A6  2EE8               	decfsz	wreg,f,c
  5934  0017A8  D7FE               	bra	u9237
  5935  0017AA  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5936  0017AC  D7FC               	bra	u9237
  5937  0017AE  D000               	nop2	
  5938                           
  5939                           ;actuators_main.c: 424:             LATCbits.LATC0 = 0;
  5940  0017B0  908B               	bcf	3979,0,c	;volatile
  5941                           
  5942                           ;actuators_main.c: 425:             LATEbits.LATE0 = 0;
  5943  0017B2  908D               	bcf	3981,0,c	;volatile
  5944                           
  5945                           ;actuators_main.c: 426:             LATEbits.LATE1 = 1;
  5946  0017B4  828D               	bsf	3981,1,c	;volatile
  5947                           
  5948                           ;actuators_main.c: 427:             LATEbits.LATE2 = 1;
  5949  0017B6  848D               	bsf	3981,2,c	;volatile
  5950                           
  5951                           ;actuators_main.c: 428:             _delay((unsigned long)((4)*(10000000/4000.0)));
  5952  0017B8  0E0D               	movlw	13
  5953  0017BA  0100               	movlb	0	; () banked
  5954  0017BC  6FFB               	movwf	??_full_drive& (0+255),b
  5955  0017BE  0EFB               	movlw	251
  5956  0017C0                     u9247:
  5957  0017C0  2EE8               	decfsz	wreg,f,c
  5958  0017C2  D7FE               	bra	u9247
  5959  0017C4  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5960  0017C6  D7FC               	bra	u9247
  5961  0017C8  D000               	nop2	
  5962                           
  5963                           ;actuators_main.c: 429:             LATCbits.LATC0 = 0;
  5964  0017CA  908B               	bcf	3979,0,c	;volatile
  5965                           
  5966                           ;actuators_main.c: 430:             LATEbits.LATE0 = 1;
  5967  0017CC  808D               	bsf	3981,0,c	;volatile
  5968                           
  5969                           ;actuators_main.c: 431:             LATEbits.LATE1 = 1;
  5970  0017CE  828D               	bsf	3981,1,c	;volatile
  5971                           
  5972                           ;actuators_main.c: 432:             LATEbits.LATE2 = 0;
  5973  0017D0  948D               	bcf	3981,2,c	;volatile
  5974                           
  5975                           ;actuators_main.c: 433:             _delay((unsigned long)((4)*(10000000/4000.0)));
  5976  0017D2  0E0D               	movlw	13
  5977  0017D4  0100               	movlb	0	; () banked
  5978  0017D6  6FFB               	movwf	??_full_drive& (0+255),b
  5979  0017D8  0EFB               	movlw	251
  5980  0017DA                     u9257:
  5981  0017DA  2EE8               	decfsz	wreg,f,c
  5982  0017DC  D7FE               	bra	u9257
  5983  0017DE  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5984  0017E0  D7FC               	bra	u9257
  5985  0017E2  D000               	nop2	
  5986                           
  5987                           ;actuators_main.c: 434:             LATCbits.LATC0 = 1;
  5988  0017E4  808B               	bsf	3979,0,c	;volatile
  5989                           
  5990                           ;actuators_main.c: 435:             LATEbits.LATE0 = 1;
  5991  0017E6  808D               	bsf	3981,0,c	;volatile
  5992                           
  5993                           ;actuators_main.c: 436:             LATEbits.LATE1 = 0;
  5994  0017E8  928D               	bcf	3981,1,c	;volatile
  5995                           
  5996                           ;actuators_main.c: 437:             LATEbits.LATE2 = 0;
  5997  0017EA  948D               	bcf	3981,2,c	;volatile
  5998                           
  5999                           ;actuators_main.c: 438:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6000  0017EC  0E0D               	movlw	13
  6001  0017EE  0100               	movlb	0	; () banked
  6002  0017F0  6FFB               	movwf	??_full_drive& (0+255),b
  6003  0017F2  0EFB               	movlw	251
  6004  0017F4                     u9267:
  6005  0017F4  2EE8               	decfsz	wreg,f,c
  6006  0017F6  D7FE               	bra	u9267
  6007  0017F8  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6008  0017FA  D7FC               	bra	u9267
  6009  0017FC  D000               	nop2	
  6010                           
  6011                           ;actuators_main.c: 439:             LATCbits.LATC0 = 1;
  6012  0017FE  808B               	bsf	3979,0,c	;volatile
  6013                           
  6014                           ;actuators_main.c: 440:             LATEbits.LATE0 = 0;
  6015  001800  908D               	bcf	3981,0,c	;volatile
  6016                           
  6017                           ;actuators_main.c: 441:             LATEbits.LATE1 = 0;
  6018  001802  928D               	bcf	3981,1,c	;volatile
  6019                           
  6020                           ;actuators_main.c: 442:             LATEbits.LATE2 = 1;
  6021  001804  848D               	bsf	3981,2,c	;volatile
  6022                           
  6023                           ;actuators_main.c: 443:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6024  001806  0E0D               	movlw	13
  6025  001808  0100               	movlb	0	; () banked
  6026  00180A  6FFB               	movwf	??_full_drive& (0+255),b
  6027  00180C  0EFB               	movlw	251
  6028  00180E                     u9277:
  6029  00180E  2EE8               	decfsz	wreg,f,c
  6030  001810  D7FE               	bra	u9277
  6031  001812  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6032  001814  D7FC               	bra	u9277
  6033  001816  D000               	nop2	
  6034  001818                     l6876:
  6035                           
  6036                           ;actuators_main.c: 446:     if (stepper_no == 3){
  6037  001818  0E03               	movlw	3
  6038  00181A  0100               	movlb	0	; () banked
  6039  00181C  19F9               	xorwf	full_drive@stepper_no& (0+255),w,b
  6040  00181E  11FA               	iorwf	(full_drive@stepper_no+1)& (0+255),w,b
  6041  001820  A4D8               	btfss	status,2,c
  6042  001822  D086               	goto	l6956
  6043                           
  6044                           ; BSR set to: 0
  6045                           ;actuators_main.c: 447:         printf("what");
  6046  001824  0E29               	movlw	low STR_9
  6047  001826  6FED               	movwf	printf@fmt& (0+255),b
  6048  001828  0EFD               	movlw	high STR_9
  6049  00182A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6050  00182C  EC00  F01D         	call	_printf	;wreg free
  6051                           
  6052                           ;actuators_main.c: 448:         if (direction == 0){
  6053  001830  0100               	movlb	0	; () banked
  6054  001832  51FC               	movf	full_drive@direction& (0+255),w,b
  6055  001834  A4D8               	btfss	status,2,c
  6056  001836  D03C               	goto	l6918
  6057                           
  6058                           ; BSR set to: 0
  6059                           ;actuators_main.c: 449:             LATCbits.LATC5 = 1;
  6060  001838  8A8B               	bsf	3979,5,c	;volatile
  6061                           
  6062                           ;actuators_main.c: 450:             LATCbits.LATC6 = 0;
  6063  00183A  9C8B               	bcf	3979,6,c	;volatile
  6064                           
  6065                           ;actuators_main.c: 451:             LATCbits.LATC7 = 0;
  6066  00183C  9E8B               	bcf	3979,7,c	;volatile
  6067                           
  6068                           ;actuators_main.c: 452:             LATAbits.LATA5 = 1;
  6069  00183E  8A89               	bsf	3977,5,c	;volatile
  6070                           
  6071                           ; BSR set to: 0
  6072                           ;actuators_main.c: 453:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6073  001840  0E1E               	movlw	30
  6074  001842  0100               	movlb	0	; () banked
  6075  001844  6FFB               	movwf	??_full_drive& (0+255),b
  6076  001846  0E37               	movlw	55
  6077  001848                     u9287:
  6078  001848  2EE8               	decfsz	wreg,f,c
  6079  00184A  D7FE               	bra	u9287
  6080  00184C  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6081  00184E  D7FC               	bra	u9287
  6082                           
  6083                           ;actuators_main.c: 454:             LATCbits.LATC5 = 1;
  6084  001850  8A8B               	bsf	3979,5,c	;volatile
  6085                           
  6086                           ;actuators_main.c: 455:             LATCbits.LATC6 = 1;
  6087  001852  8C8B               	bsf	3979,6,c	;volatile
  6088                           
  6089                           ;actuators_main.c: 456:             LATCbits.LATC7 = 0;
  6090  001854  9E8B               	bcf	3979,7,c	;volatile
  6091                           
  6092                           ;actuators_main.c: 457:             LATAbits.LATA5 = 0;
  6093  001856  9A89               	bcf	3977,5,c	;volatile
  6094                           
  6095                           ;actuators_main.c: 458:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6096  001858  0E1E               	movlw	30
  6097  00185A  0100               	movlb	0	; () banked
  6098  00185C  6FFB               	movwf	??_full_drive& (0+255),b
  6099  00185E  0E37               	movlw	55
  6100  001860                     u9297:
  6101  001860  2EE8               	decfsz	wreg,f,c
  6102  001862  D7FE               	bra	u9297
  6103  001864  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6104  001866  D7FC               	bra	u9297
  6105                           
  6106                           ;actuators_main.c: 459:             LATCbits.LATC5 = 0;
  6107  001868  9A8B               	bcf	3979,5,c	;volatile
  6108                           
  6109                           ;actuators_main.c: 460:             LATCbits.LATC6 = 1;
  6110  00186A  8C8B               	bsf	3979,6,c	;volatile
  6111                           
  6112                           ;actuators_main.c: 461:             LATCbits.LATC7 = 1;
  6113  00186C  8E8B               	bsf	3979,7,c	;volatile
  6114                           
  6115                           ;actuators_main.c: 462:             LATAbits.LATA5 = 0;
  6116  00186E  9A89               	bcf	3977,5,c	;volatile
  6117                           
  6118                           ;actuators_main.c: 463:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6119  001870  0E1E               	movlw	30
  6120  001872  0100               	movlb	0	; () banked
  6121  001874  6FFB               	movwf	??_full_drive& (0+255),b
  6122  001876  0E37               	movlw	55
  6123  001878                     u9307:
  6124  001878  2EE8               	decfsz	wreg,f,c
  6125  00187A  D7FE               	bra	u9307
  6126  00187C  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6127  00187E  D7FC               	bra	u9307
  6128                           
  6129                           ;actuators_main.c: 464:             LATCbits.LATC5 = 0;
  6130  001880  9A8B               	bcf	3979,5,c	;volatile
  6131                           
  6132                           ;actuators_main.c: 465:             LATCbits.LATC6 = 0;
  6133  001882  9C8B               	bcf	3979,6,c	;volatile
  6134                           
  6135                           ;actuators_main.c: 466:             LATCbits.LATC7 = 1;
  6136  001884  8E8B               	bsf	3979,7,c	;volatile
  6137                           
  6138                           ;actuators_main.c: 467:             LATAbits.LATA5 = 1;
  6139  001886  8A89               	bsf	3977,5,c	;volatile
  6140                           
  6141                           ;actuators_main.c: 468:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6142  001888  0E1E               	movlw	30
  6143  00188A  0100               	movlb	0	; () banked
  6144  00188C  6FFB               	movwf	??_full_drive& (0+255),b
  6145  00188E  0E37               	movlw	55
  6146  001890                     u9317:
  6147  001890  2EE8               	decfsz	wreg,f,c
  6148  001892  D7FE               	bra	u9317
  6149  001894  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6150  001896  D7FC               	bra	u9317
  6151                           
  6152                           ;actuators_main.c: 469:             LATCbits.LATC5 = 1;
  6153  001898  8A8B               	bsf	3979,5,c	;volatile
  6154                           
  6155                           ;actuators_main.c: 470:             LATCbits.LATC6 = 0;
  6156  00189A  9C8B               	bcf	3979,6,c	;volatile
  6157                           
  6158                           ;actuators_main.c: 471:             LATCbits.LATC7 = 0;
  6159  00189C  9E8B               	bcf	3979,7,c	;volatile
  6160                           
  6161                           ;actuators_main.c: 472:             LATAbits.LATA5 = 1;
  6162  00189E  8A89               	bsf	3977,5,c	;volatile
  6163                           
  6164                           ;actuators_main.c: 473:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6165  0018A0  0E1E               	movlw	30
  6166  0018A2  0100               	movlb	0	; () banked
  6167  0018A4  6FFB               	movwf	??_full_drive& (0+255),b
  6168  0018A6  0E37               	movlw	55
  6169  0018A8                     u9327:
  6170  0018A8  2EE8               	decfsz	wreg,f,c
  6171  0018AA  D7FE               	bra	u9327
  6172  0018AC  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6173  0018AE  D7FC               	bra	u9327
  6174  0018B0                     l6918:
  6175                           
  6176                           ;actuators_main.c: 475:         if (direction == 1){
  6177  0018B0  0100               	movlb	0	; () banked
  6178  0018B2  05FC               	decf	full_drive@direction& (0+255),w,b
  6179  0018B4  A4D8               	btfss	status,2,c
  6180  0018B6  D03C               	goto	l6956
  6181                           
  6182                           ; BSR set to: 0
  6183                           ;actuators_main.c: 476:             LATCbits.LATC5 = 1;
  6184  0018B8  8A8B               	bsf	3979,5,c	;volatile
  6185                           
  6186                           ;actuators_main.c: 477:             LATCbits.LATC6 = 1;
  6187  0018BA  8C8B               	bsf	3979,6,c	;volatile
  6188                           
  6189                           ;actuators_main.c: 478:             LATCbits.LATC7 = 0;
  6190  0018BC  9E8B               	bcf	3979,7,c	;volatile
  6191                           
  6192                           ;actuators_main.c: 479:             LATAbits.LATA5 = 0;
  6193  0018BE  9A89               	bcf	3977,5,c	;volatile
  6194                           
  6195                           ; BSR set to: 0
  6196                           ;actuators_main.c: 480:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6197  0018C0  0E1E               	movlw	30
  6198  0018C2  0100               	movlb	0	; () banked
  6199  0018C4  6FFB               	movwf	??_full_drive& (0+255),b
  6200  0018C6  0E37               	movlw	55
  6201  0018C8                     u9337:
  6202  0018C8  2EE8               	decfsz	wreg,f,c
  6203  0018CA  D7FE               	bra	u9337
  6204  0018CC  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6205  0018CE  D7FC               	bra	u9337
  6206                           
  6207                           ;actuators_main.c: 481:             LATCbits.LATC5 = 0;
  6208  0018D0  9A8B               	bcf	3979,5,c	;volatile
  6209                           
  6210                           ;actuators_main.c: 482:             LATCbits.LATC6 = 1;
  6211  0018D2  8C8B               	bsf	3979,6,c	;volatile
  6212                           
  6213                           ;actuators_main.c: 483:             LATCbits.LATC7 = 1;
  6214  0018D4  8E8B               	bsf	3979,7,c	;volatile
  6215                           
  6216                           ;actuators_main.c: 484:             LATAbits.LATA5 = 0;
  6217  0018D6  9A89               	bcf	3977,5,c	;volatile
  6218                           
  6219                           ;actuators_main.c: 485:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6220  0018D8  0E1E               	movlw	30
  6221  0018DA  0100               	movlb	0	; () banked
  6222  0018DC  6FFB               	movwf	??_full_drive& (0+255),b
  6223  0018DE  0E37               	movlw	55
  6224  0018E0                     u9347:
  6225  0018E0  2EE8               	decfsz	wreg,f,c
  6226  0018E2  D7FE               	bra	u9347
  6227  0018E4  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6228  0018E6  D7FC               	bra	u9347
  6229                           
  6230                           ;actuators_main.c: 486:             LATCbits.LATC5 = 0;
  6231  0018E8  9A8B               	bcf	3979,5,c	;volatile
  6232                           
  6233                           ;actuators_main.c: 487:             LATCbits.LATC6 = 0;
  6234  0018EA  9C8B               	bcf	3979,6,c	;volatile
  6235                           
  6236                           ;actuators_main.c: 488:             LATCbits.LATC7 = 1;
  6237  0018EC  8E8B               	bsf	3979,7,c	;volatile
  6238                           
  6239                           ;actuators_main.c: 489:             LATAbits.LATA5 = 1;
  6240  0018EE  8A89               	bsf	3977,5,c	;volatile
  6241                           
  6242                           ;actuators_main.c: 490:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6243  0018F0  0E1E               	movlw	30
  6244  0018F2  0100               	movlb	0	; () banked
  6245  0018F4  6FFB               	movwf	??_full_drive& (0+255),b
  6246  0018F6  0E37               	movlw	55
  6247  0018F8                     u9357:
  6248  0018F8  2EE8               	decfsz	wreg,f,c
  6249  0018FA  D7FE               	bra	u9357
  6250  0018FC  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6251  0018FE  D7FC               	bra	u9357
  6252                           
  6253                           ;actuators_main.c: 491:             LATCbits.LATC5 = 1;
  6254  001900  8A8B               	bsf	3979,5,c	;volatile
  6255                           
  6256                           ;actuators_main.c: 492:             LATCbits.LATC6 = 0;
  6257  001902  9C8B               	bcf	3979,6,c	;volatile
  6258                           
  6259                           ;actuators_main.c: 493:             LATCbits.LATC7 = 0;
  6260  001904  9E8B               	bcf	3979,7,c	;volatile
  6261                           
  6262                           ;actuators_main.c: 494:             LATAbits.LATA5 = 1;
  6263  001906  8A89               	bsf	3977,5,c	;volatile
  6264                           
  6265                           ;actuators_main.c: 495:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6266  001908  0E1E               	movlw	30
  6267  00190A  0100               	movlb	0	; () banked
  6268  00190C  6FFB               	movwf	??_full_drive& (0+255),b
  6269  00190E  0E37               	movlw	55
  6270  001910                     u9367:
  6271  001910  2EE8               	decfsz	wreg,f,c
  6272  001912  D7FE               	bra	u9367
  6273  001914  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6274  001916  D7FC               	bra	u9367
  6275                           
  6276                           ;actuators_main.c: 496:             LATCbits.LATC5 = 1;
  6277  001918  8A8B               	bsf	3979,5,c	;volatile
  6278                           
  6279                           ;actuators_main.c: 497:             LATCbits.LATC6 = 1;
  6280  00191A  8C8B               	bsf	3979,6,c	;volatile
  6281                           
  6282                           ;actuators_main.c: 498:             LATCbits.LATC7 = 0;
  6283  00191C  9E8B               	bcf	3979,7,c	;volatile
  6284                           
  6285                           ;actuators_main.c: 499:             LATAbits.LATA5 = 0;
  6286  00191E  9A89               	bcf	3977,5,c	;volatile
  6287                           
  6288                           ;actuators_main.c: 500:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6289  001920  0E1E               	movlw	30
  6290  001922  0100               	movlb	0	; () banked
  6291  001924  6FFB               	movwf	??_full_drive& (0+255),b
  6292  001926  0E37               	movlw	55
  6293  001928                     u9377:
  6294  001928  2EE8               	decfsz	wreg,f,c
  6295  00192A  D7FE               	bra	u9377
  6296  00192C  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6297  00192E  D7FC               	bra	u9377
  6298  001930                     l6956:
  6299                           
  6300                           ;actuators_main.c: 503:                     LATA = 0b00000000;
  6301  001930  0E00               	movlw	0
  6302  001932  6E89               	movwf	3977,c	;volatile
  6303                           
  6304                           ;actuators_main.c: 504:         LATCbits.LATC0 = 0;
  6305  001934  908B               	bcf	3979,0,c	;volatile
  6306                           
  6307                           ;actuators_main.c: 505:         LATEbits.LATE0 = 0;
  6308  001936  908D               	bcf	3981,0,c	;volatile
  6309                           
  6310                           ;actuators_main.c: 506:         LATEbits.LATE1 = 0;
  6311  001938  928D               	bcf	3981,1,c	;volatile
  6312                           
  6313                           ;actuators_main.c: 507:         LATEbits.LATE2 = 0;
  6314  00193A  948D               	bcf	3981,2,c	;volatile
  6315                           
  6316                           ;actuators_main.c: 508:         LATCbits.LATC5 = 0;
  6317  00193C  9A8B               	bcf	3979,5,c	;volatile
  6318                           
  6319                           ;actuators_main.c: 509:         LATCbits.LATC6 = 0;
  6320  00193E  9C8B               	bcf	3979,6,c	;volatile
  6321                           
  6322                           ;actuators_main.c: 510:         LATCbits.LATC7 = 0;
  6323  001940  9E8B               	bcf	3979,7,c	;volatile
  6324                           
  6325                           ;actuators_main.c: 511:         LATAbits.LATA5 = 0;
  6326  001942  9A89               	bcf	3977,5,c	;volatile
  6327  001944  0012               	return		;funcret
  6328  001946                     __end_of_full_drive:
  6329                           	opt callstack 0
  6330                           
  6331 ;; *************** function _servo *****************
  6332 ;; Defined at:
  6333 ;;		line 165 in file "actuators_main.c"
  6334 ;; Parameters:    Size  Location     Type
  6335 ;;		None
  6336 ;; Auto vars:     Size  Location     Type
  6337 ;;		None
  6338 ;; Return value:  Size  Location     Type
  6339 ;;                  1    wreg      void 
  6340 ;; Registers used:
  6341 ;;		wreg, status,2, status,0, cstack
  6342 ;; Tracked objects:
  6343 ;;		On entry : 0/0
  6344 ;;		On exit  : 0/0
  6345 ;;		Unchanged: 0/0
  6346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6349 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6350 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6351 ;;Total ram usage:        2 bytes
  6352 ;; Hardware stack levels used:    1
  6353 ;; Hardware stack levels required when called:    4
  6354 ;; This function calls:
  6355 ;;		_servoRotate0
  6356 ;;		_servoRotate180
  6357 ;; This function is called by:
  6358 ;;		_actuators_main
  6359 ;; This function uses a non-reentrant model
  6360 ;;
  6361                           
  6362                           	psect	text16
  6363  0039AA                     __ptext16:
  6364                           	opt callstack 0
  6365  0039AA                     _servo:
  6366                           	opt callstack 25
  6367                           
  6368                           ;actuators_main.c: 167:   TRISC = 0;
  6369                           
  6370                           ;incstack = 0
  6371  0039AA  0E00               	movlw	0
  6372  0039AC  6E94               	movwf	3988,c	;volatile
  6373                           
  6374                           ;actuators_main.c: 168:   {;actuators_main.c: 170:     servoRotate0();
  6375  0039AE  EC63  F01B         	call	_servoRotate0	;wreg free
  6376                           
  6377                           ;actuators_main.c: 174:     servoRotate180();
  6378  0039B2  ECE4  F01A         	call	_servoRotate180	;wreg free
  6379                           
  6380                           ;actuators_main.c: 176:     _delay((unsigned long)((500)*(10000000/4000.0)));
  6381  0039B6  0E07               	movlw	7
  6382  0039B8  0100               	movlb	0	; () banked
  6383  0039BA  6F84               	movwf	(??_servo+1)& (0+255),b
  6384  0039BC  0E58               	movlw	88
  6385  0039BE  6F83               	movwf	??_servo& (0+255),b
  6386  0039C0  0E59               	movlw	89
  6387  0039C2                     u9387:
  6388  0039C2  2EE8               	decfsz	wreg,f,c
  6389  0039C4  D7FE               	bra	u9387
  6390  0039C6  2F83               	decfsz	??_servo& (0+255),f,b
  6391  0039C8  D7FC               	bra	u9387
  6392  0039CA  2F84               	decfsz	(??_servo+1)& (0+255),f,b
  6393  0039CC  D7FA               	bra	u9387
  6394  0039CE  D000               	nop2	
  6395                           
  6396                           ;actuators_main.c: 177:     servoRotate0();
  6397  0039D0  EC63  F01B         	call	_servoRotate0	;wreg free
  6398  0039D4  0012               	return		;funcret
  6399  0039D6                     __end_of_servo:
  6400                           	opt callstack 0
  6401                           
  6402 ;; *************** function _servoRotate180 *****************
  6403 ;; Defined at:
  6404 ;;		line 136 in file "actuators_main.c"
  6405 ;; Parameters:    Size  Location     Type
  6406 ;;		None
  6407 ;; Auto vars:     Size  Location     Type
  6408 ;;  i               2    1[BANK0 ] unsigned int 
  6409 ;; Return value:  Size  Location     Type
  6410 ;;                  1    wreg      void 
  6411 ;; Registers used:
  6412 ;;		wreg, status,2, status,0
  6413 ;; Tracked objects:
  6414 ;;		On entry : 0/0
  6415 ;;		On exit  : 0/0
  6416 ;;		Unchanged: 0/0
  6417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6419 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6420 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6421 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6422 ;;Total ram usage:        3 bytes
  6423 ;; Hardware stack levels used:    1
  6424 ;; Hardware stack levels required when called:    3
  6425 ;; This function calls:
  6426 ;;		Nothing
  6427 ;; This function is called by:
  6428 ;;		_servo
  6429 ;; This function uses a non-reentrant model
  6430 ;;
  6431                           
  6432                           	psect	text17
  6433  0035C8                     __ptext17:
  6434                           	opt callstack 0
  6435  0035C8                     _servoRotate180:
  6436                           	opt callstack 25
  6437                           
  6438                           ;actuators_main.c: 138:   unsigned int i;;actuators_main.c: 141: for(i=0;i<15;i++){
  6439                           
  6440                           ;incstack = 0
  6441  0035C8  0E00               	movlw	0
  6442  0035CA  0100               	movlb	0	; () banked
  6443  0035CC  6F82               	movwf	(servoRotate180@i+1)& (0+255),b
  6444  0035CE  0E00               	movlw	0
  6445  0035D0  6F81               	movwf	servoRotate180@i& (0+255),b
  6446  0035D2                     l117:
  6447                           
  6448                           ; BSR set to: 0
  6449                           ;actuators_main.c: 143:         {;actuators_main.c: 144:           RC1 = 1;
  6450  0035D2  8282               	bsf	3970,1,c	;volatile
  6451                           
  6452                           ;actuators_main.c: 145:           RC2 = 1;
  6453  0035D4  8482               	bsf	3970,2,c	;volatile
  6454                           
  6455                           ; BSR set to: 0
  6456                           ;actuators_main.c: 147:           _delay((unsigned long)((475)*(10000000/4000000.0)));
  6457  0035D6  0EED               	movlw	237
  6458  0035D8                     u9397:
  6459  0035D8  D000               	nop2	
  6460  0035DA  2EE8               	decfsz	wreg,f,c
  6461  0035DC  D7FD               	bra	u9397
  6462  0035DE  D000               	nop2	
  6463                           
  6464                           ;actuators_main.c: 148:           RC2 =0;
  6465  0035E0  9482               	bcf	3970,2,c	;volatile
  6466                           
  6467                           ;actuators_main.c: 149:           _delay((unsigned long)((2100)*(10000000/4000000.0)));
  6468  0035E2  0E07               	movlw	7
  6469  0035E4  0100               	movlb	0	; () banked
  6470  0035E6  6F80               	movwf	??_servoRotate180& (0+255),b
  6471  0035E8  0ED0               	movlw	208
  6472  0035EA                     u9407:
  6473  0035EA  2EE8               	decfsz	wreg,f,c
  6474  0035EC  D7FE               	bra	u9407
  6475  0035EE  2F80               	decfsz	??_servoRotate180& (0+255),f,b
  6476  0035F0  D7FC               	bra	u9407
  6477  0035F2  F000               	nop	
  6478                           
  6479                           ;actuators_main.c: 150:           RC1 = 0;
  6480  0035F4  9282               	bcf	3970,1,c	;volatile
  6481                           
  6482                           ;actuators_main.c: 151:           _delay((unsigned long)((13525)*(10000000/4000000.0)));
  6483  0035F6  0E2C               	movlw	44
  6484  0035F8  0100               	movlb	0	; () banked
  6485  0035FA  6F80               	movwf	??_servoRotate180& (0+255),b
  6486  0035FC  0EE8               	movlw	232
  6487  0035FE                     u9417:
  6488  0035FE  2EE8               	decfsz	wreg,f,c
  6489  003600  D7FE               	bra	u9417
  6490  003602  2F80               	decfsz	??_servoRotate180& (0+255),f,b
  6491  003604  D7FC               	bra	u9417
  6492  003606  F000               	nop	
  6493                           
  6494                           ;actuators_main.c: 152:         };actuators_main.c: 163: }
  6495  003608  0100               	movlb	0	; () banked
  6496  00360A  4B81               	infsnz	servoRotate180@i& (0+255),f,b
  6497  00360C  2B82               	incf	(servoRotate180@i+1)& (0+255),f,b
  6498  00360E  5182               	movf	(servoRotate180@i+1)& (0+255),w,b
  6499  003610  E105               	bnz	u7370
  6500  003612  0E0F               	movlw	15
  6501  003614  5D81               	subwf	servoRotate180@i& (0+255),w,b
  6502  003616  B0D8               	btfsc	status,0,c
  6503  003618  0012               	return	
  6504  00361A  D7DB               	goto	l117
  6505  00361C                     u7370:
  6506                           
  6507                           ; BSR set to: 0
  6508  00361C  0012               	return		;funcret
  6509  00361E                     __end_of_servoRotate180:
  6510                           	opt callstack 0
  6511                           
  6512 ;; *************** function _servoRotate0 *****************
  6513 ;; Defined at:
  6514 ;;		line 97 in file "actuators_main.c"
  6515 ;; Parameters:    Size  Location     Type
  6516 ;;		None
  6517 ;; Auto vars:     Size  Location     Type
  6518 ;;  i               2    1[BANK0 ] unsigned int 
  6519 ;; Return value:  Size  Location     Type
  6520 ;;                  1    wreg      void 
  6521 ;; Registers used:
  6522 ;;		wreg, status,2, status,0
  6523 ;; Tracked objects:
  6524 ;;		On entry : 0/0
  6525 ;;		On exit  : 0/0
  6526 ;;		Unchanged: 0/0
  6527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6529 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6530 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6531 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6532 ;;Total ram usage:        3 bytes
  6533 ;; Hardware stack levels used:    1
  6534 ;; Hardware stack levels required when called:    3
  6535 ;; This function calls:
  6536 ;;		Nothing
  6537 ;; This function is called by:
  6538 ;;		_servo
  6539 ;; This function uses a non-reentrant model
  6540 ;;
  6541                           
  6542                           	psect	text18
  6543  0036C6                     __ptext18:
  6544                           	opt callstack 0
  6545  0036C6                     _servoRotate0:
  6546                           	opt callstack 25
  6547                           
  6548                           ;actuators_main.c: 99:     unsigned int i;;actuators_main.c: 102:       for(i=0;i<15;i++
      +                          )
  6549                           
  6550                           ; BSR set to: 0
  6551                           ;incstack = 0
  6552  0036C6  0E00               	movlw	0
  6553  0036C8  0100               	movlb	0	; () banked
  6554  0036CA  6F82               	movwf	(servoRotate0@i+1)& (0+255),b
  6555  0036CC  0E00               	movlw	0
  6556  0036CE  6F81               	movwf	servoRotate0@i& (0+255),b
  6557  0036D0                     l112:
  6558                           
  6559                           ; BSR set to: 0
  6560                           ;actuators_main.c: 103:           {;actuators_main.c: 105:             RC1 = 1;
  6561  0036D0  8282               	bsf	3970,1,c	;volatile
  6562                           
  6563                           ;actuators_main.c: 106:             RC2 = 1;
  6564  0036D2  8482               	bsf	3970,2,c	;volatile
  6565                           
  6566                           ; BSR set to: 0
  6567                           ;actuators_main.c: 107:             _delay((unsigned long)((1100)*(10000000/4000000.0)))
      +                          ;
  6568  0036D4  0E04               	movlw	4
  6569  0036D6  0100               	movlb	0	; () banked
  6570  0036D8  6F80               	movwf	??_servoRotate0& (0+255),b
  6571  0036DA  0E91               	movlw	145
  6572  0036DC                     u9427:
  6573  0036DC  2EE8               	decfsz	wreg,f,c
  6574  0036DE  D7FE               	bra	u9427
  6575  0036E0  2F80               	decfsz	??_servoRotate0& (0+255),f,b
  6576  0036E2  D7FC               	bra	u9427
  6577                           
  6578                           ;actuators_main.c: 108:             RC2 = 0;
  6579  0036E4  9482               	bcf	3970,2,c	;volatile
  6580                           
  6581                           ;actuators_main.c: 109:             _delay((unsigned long)((300)*(10000000/4000000.0)));
  6582  0036E6  0EFA               	movlw	250
  6583  0036E8                     u9437:
  6584  0036E8  2EE8               	decfsz	wreg,f,c
  6585  0036EA  D7FE               	bra	u9437
  6586                           
  6587                           ;actuators_main.c: 110:             RC1 = 0;
  6588  0036EC  9282               	bcf	3970,1,c	;volatile
  6589                           
  6590                           ;actuators_main.c: 114:             _delay((unsigned long)((18600)*(10000000/4000000.0))
      +                          );
  6591  0036EE  0E3D               	movlw	61
  6592  0036F0  0100               	movlb	0	; () banked
  6593  0036F2  6F80               	movwf	??_servoRotate0& (0+255),b
  6594  0036F4  0E62               	movlw	98
  6595  0036F6                     u9447:
  6596  0036F6  2EE8               	decfsz	wreg,f,c
  6597  0036F8  D7FE               	bra	u9447
  6598  0036FA  2F80               	decfsz	??_servoRotate0& (0+255),f,b
  6599  0036FC  D7FC               	bra	u9447
  6600  0036FE  F000               	nop	
  6601                           
  6602                           ;actuators_main.c: 124:           }
  6603  003700  0100               	movlb	0	; () banked
  6604  003702  4B81               	infsnz	servoRotate0@i& (0+255),f,b
  6605  003704  2B82               	incf	(servoRotate0@i+1)& (0+255),f,b
  6606  003706  5182               	movf	(servoRotate0@i+1)& (0+255),w,b
  6607  003708  E105               	bnz	u7360
  6608  00370A  0E0F               	movlw	15
  6609  00370C  5D81               	subwf	servoRotate0@i& (0+255),w,b
  6610  00370E  B0D8               	btfsc	status,0,c
  6611  003710  0012               	return	
  6612  003712  D7DE               	goto	l112
  6613  003714                     u7360:
  6614                           
  6615                           ; BSR set to: 0
  6616  003714  0012               	return		;funcret
  6617  003716                     __end_of_servoRotate0:
  6618                           	opt callstack 0
  6619                           
  6620 ;; *************** function _UI_main *****************
  6621 ;; Defined at:
  6622 ;;		line 479 in file "main.c"
  6623 ;; Parameters:    Size  Location     Type
  6624 ;;  t_dep           2  121[BANK0 ] int 
  6625 ;;  poles_detect    2  123[BANK0 ] int 
  6626 ;; Auto vars:     Size  Location     Type
  6627 ;;  i               1   89[BANK1 ] unsigned char 
  6628 ;;  keypress        1   84[BANK1 ] unsigned char 
  6629 ;;  Pole           80    4[BANK1 ] struct Poles[10]
  6630 ;;  tick            4   85[BANK1 ] unsigned long 
  6631 ;; Return value:  Size  Location     Type
  6632 ;;                  1    wreg      void 
  6633 ;; Registers used:
  6634 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6635 ;; Tracked objects:
  6636 ;;		On entry : 0/0
  6637 ;;		On exit  : 0/0
  6638 ;;		Unchanged: 0/0
  6639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6640 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6641 ;;      Locals:         0       0      86       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6642 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6643 ;;      Totals:         0       4      90       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6644 ;;Total ram usage:       94 bytes
  6645 ;; Hardware stack levels used:    1
  6646 ;; Hardware stack levels required when called:   14
  6647 ;; This function calls:
  6648 ;;		_I2C_Master_Init
  6649 ;;		_I2C_Master_Read
  6650 ;;		_I2C_Master_Start
  6651 ;;		_I2C_Master_Stop
  6652 ;;		_I2C_Master_Write
  6653 ;;		___llmod
  6654 ;;		_initLCD
  6655 ;;		_lcdInst
  6656 ;;		_printf
  6657 ;; This function is called by:
  6658 ;;		_main
  6659 ;; This function uses a non-reentrant model
  6660 ;;
  6661                           
  6662                           	psect	text19
  6663  000012                     __ptext19:
  6664                           	opt callstack 0
  6665  000012                     _UI_main:
  6666                           	opt callstack 16
  6667                           
  6668                           ;main.c: 480:     sens = 0;
  6669                           
  6670                           ; BSR set to: 0
  6671                           ;incstack = 0
  6672  000012  0E00               	movlw	0
  6673  000014  6E59               	movwf	_sens+1,c	;volatile
  6674  000016  0E00               	movlw	0
  6675  000018  6E58               	movwf	_sens,c	;volatile
  6676                           
  6677                           ;main.c: 485:     LATD = 0x00;
  6678  00001A  0E00               	movlw	0
  6679  00001C  6E8C               	movwf	3980,c	;volatile
  6680                           
  6681                           ;main.c: 486:     TRISD = 0x00;
  6682  00001E  0E00               	movlw	0
  6683  000020  6E95               	movwf	3989,c	;volatile
  6684                           
  6685                           ;main.c: 489:     TRISD = 0x00;
  6686  000022  0E00               	movlw	0
  6687  000024  6E95               	movwf	3989,c	;volatile
  6688                           
  6689                           ;main.c: 492:     INT1IE = 1;
  6690  000026  86F0               	bsf	4080,3,c	;volatile
  6691                           
  6692                           ;main.c: 495:     initLCD();
  6693  000028  ECE6  F019         	call	_initLCD	;wreg free
  6694                           
  6695                           ;main.c: 498:     (INTCONbits.GIE = 1);
  6696  00002C  8EF2               	bsf	4082,7,c	;volatile
  6697                           
  6698                           ;main.c: 500:     I2C_Master_Init(100000);
  6699  00002E  0EA0               	movlw	160
  6700  000030  0100               	movlb	0	; () banked
  6701  000032  6F8D               	movwf	I2C_Master_Init@clockFreq& (0+255),b
  6702  000034  0E86               	movlw	134
  6703  000036  6F8E               	movwf	(I2C_Master_Init@clockFreq+1)& (0+255),b
  6704  000038  0E01               	movlw	1
  6705  00003A  6F8F               	movwf	(I2C_Master_Init@clockFreq+2)& (0+255),b
  6706  00003C  0E00               	movlw	0
  6707  00003E  6F90               	movwf	(I2C_Master_Init@clockFreq+3)& (0+255),b
  6708  000040  EC89  F01A         	call	_I2C_Master_Init	;wreg free
  6709                           
  6710                           ;main.c: 501:     I2C_Master_Start();
  6711  000044  EC8A  F01D         	call	_I2C_Master_Start	;wreg free
  6712                           
  6713                           ;main.c: 502:     I2C_Master_Write(0b00010000);
  6714  000048  0E00               	movlw	0
  6715  00004A  0100               	movlb	0	; () banked
  6716  00004C  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  6717  00004E  0E10               	movlw	16
  6718  000050  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  6719  000052  EC81  F01D         	call	_I2C_Master_Write	;wreg free
  6720                           
  6721                           ;main.c: 503:     I2C_Master_Stop();
  6722  000056  EC86  F01D         	call	_I2C_Master_Stop	;wreg free
  6723                           
  6724                           ;main.c: 513:     if((pressed == 0)&&(sens==0)){
  6725  00005A  0101               	movlb	1	; () banked
  6726  00005C  516B               	movf	_pressed& (0+255),w,b
  6727  00005E  116C               	iorwf	(_pressed+1)& (0+255),w,b
  6728  000060  A4D8               	btfss	status,2,c
  6729  000062  D3DC               	goto	u8460
  6730                           
  6731                           ; BSR set to: 1
  6732  000064  5058               	movf	_sens,w,c	;volatile
  6733  000066  1059               	iorwf	_sens+1,w,c	;volatile
  6734  000068  A4D8               	btfss	status,2,c
  6735  00006A  D3D8               	goto	u8460
  6736                           
  6737                           ; BSR set to: 1
  6738                           ;main.c: 514:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  6739  00006C  0E01               	movlw	1
  6740  00006E  EC79  F01D         	call	_lcdInst
  6741  000072  0E11               	movlw	17
  6742  000074  0101               	movlb	1	; () banked
  6743  000076  6F00               	movwf	??_UI_main& (0+255),b
  6744  000078  0E3A               	movlw	58
  6745  00007A                     u9457:
  6746  00007A  2EE8               	decfsz	wreg,f,c
  6747  00007C  D7FE               	bra	u9457
  6748  00007E  2F00               	decfsz	??_UI_main& (0+255),f,b
  6749  000080  D7FC               	bra	u9457
  6750  000082  F000               	nop	
  6751                           
  6752                           ;main.c: 515:         printf("1 - Start");
  6753  000084  0EF4               	movlw	low STR_24
  6754  000086  0100               	movlb	0	; () banked
  6755  000088  6FED               	movwf	printf@fmt& (0+255),b
  6756  00008A  0EFC               	movlw	high STR_24
  6757  00008C  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6758  00008E  EC00  F01D         	call	_printf	;wreg free
  6759  000092  0EC0               	movlw	192
  6760  000094  EC79  F01D         	call	_lcdInst
  6761                           
  6762                           ;main.c: 517:         printf("2 - Summary");
  6763  000098  0E76               	movlw	low STR_25
  6764  00009A  0100               	movlb	0	; () banked
  6765  00009C  6FED               	movwf	printf@fmt& (0+255),b
  6766  00009E  0EFC               	movlw	high STR_25
  6767  0000A0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6768  0000A2  EC00  F01D         	call	_printf	;wreg free
  6769  0000A6  0E90               	movlw	144
  6770  0000A8  EC79  F01D         	call	_lcdInst
  6771                           
  6772                           ;main.c: 519:         printf("3 - Date&Time ");
  6773  0000AC  0EAA               	movlw	low STR_26
  6774  0000AE  0100               	movlb	0	; () banked
  6775  0000B0  6FED               	movwf	printf@fmt& (0+255),b
  6776  0000B2  0EFB               	movlw	high STR_26
  6777  0000B4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6778  0000B6  EC00  F01D         	call	_printf	;wreg free
  6779  0000BA  D3B0               	goto	u8460
  6780  0000BC                     l7652:
  6781                           
  6782                           ;main.c: 530:         if (send){
  6783  0000BC  506D               	movf	_send,w,c
  6784  0000BE  B4D8               	btfsc	status,2,c
  6785  0000C0  D3AD               	goto	u8460
  6786                           
  6787                           ;main.c: 531:         if(key_was_pressed){
  6788  0000C2  0101               	movlb	1	; () banked
  6789  0000C4  5177               	movf	_key_was_pressed& (0+255),w,b	;volatile
  6790  0000C6  B4D8               	btfsc	status,2,c
  6791  0000C8  D3A9               	goto	u8460
  6792                           
  6793                           ; BSR set to: 1
  6794                           ;main.c: 532:             pressed = 1;
  6795  0000CA  0E00               	movlw	0
  6796  0000CC  6F6C               	movwf	(_pressed+1)& (0+255),b
  6797  0000CE  0E01               	movlw	1
  6798  0000D0  6F6B               	movwf	_pressed& (0+255),b
  6799                           
  6800                           ;main.c: 533:             key_was_pressed = 0;
  6801  0000D2  0E00               	movlw	0
  6802  0000D4  6F77               	movwf	_key_was_pressed& (0+255),b	;volatile
  6803                           
  6804                           ; BSR set to: 1
  6805                           ;main.c: 534:             unsigned char keypress = (PORTB & 0xF0) >> 4;
  6806  0000D6  3881               	swapf	3969,w,c	;volatile
  6807  0000D8  0B0F               	andlw	15
  6808  0000DA  0B0F               	andlw	15
  6809  0000DC  6F54               	movwf	UI_main@keypress& (0+255),b
  6810                           
  6811                           ; BSR set to: 1
  6812                           ;main.c: 535:             temp = keys[keypress];
  6813  0000DE  0EEB               	movlw	low _keys
  6814  0000E0  2554               	addwf	UI_main@keypress& (0+255),w,b
  6815  0000E2  6EF6               	movwf	tblptrl,c
  6816  0000E4  6AF7               	clrf	tblptrh,c
  6817  0000E6  0EFA               	movlw	high _keys
  6818  0000E8  22F7               	addwfc	tblptrh,f,c
  6819  0000EA                     	if	0	;There are less than 3 active tblptr bytes
  6820  0000EA                     	endif
  6821  0000EA  0008               	tblrd		*
  6822  0000EC  CFF5 F0FF          	movff	tablat,_temp
  6823                           
  6824                           ; BSR set to: 1
  6825                           ;main.c: 536:             temp_int = (temp-'0');
  6826  0000F0  0ED0               	movlw	208
  6827  0000F2  0100               	movlb	0	; () banked
  6828  0000F4  25FF               	addwf	_temp& (0+255),w,b
  6829  0000F6  0101               	movlb	1	; () banked
  6830  0000F8  6F73               	movwf	_temp_int& (0+255),b
  6831  0000FA  6B74               	clrf	(_temp_int+1)& (0+255),b
  6832  0000FC  0EFF               	movlw	255
  6833  0000FE  2374               	addwfc	(_temp_int+1)& (0+255),f,b
  6834                           
  6835                           ; BSR set to: 1
  6836                           ;main.c: 538:             if (temp_int == 0){
  6837  000100  5173               	movf	_temp_int& (0+255),w,b
  6838  000102  1174               	iorwf	(_temp_int+1)& (0+255),w,b
  6839  000104  A4D8               	btfss	status,2,c
  6840  000106  D02B               	goto	l7682
  6841                           
  6842                           ; BSR set to: 1
  6843                           ;main.c: 539:                 state = 0;
  6844  000108  0E00               	movlw	0
  6845  00010A  6F72               	movwf	(_state+1)& (0+255),b
  6846  00010C  0E00               	movlw	0
  6847  00010E  6F71               	movwf	_state& (0+255),b
  6848                           
  6849                           ; BSR set to: 1
  6850                           ;main.c: 540:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  6851  000110  0E01               	movlw	1
  6852  000112  EC79  F01D         	call	_lcdInst
  6853  000116  0E11               	movlw	17
  6854  000118  0101               	movlb	1	; () banked
  6855  00011A  6F00               	movwf	??_UI_main& (0+255),b
  6856  00011C  0E3A               	movlw	58
  6857  00011E                     u9467:
  6858  00011E  2EE8               	decfsz	wreg,f,c
  6859  000120  D7FE               	bra	u9467
  6860  000122  2F00               	decfsz	??_UI_main& (0+255),f,b
  6861  000124  D7FC               	bra	u9467
  6862  000126  F000               	nop	
  6863                           
  6864                           ;main.c: 541:                 printf("1 - Start");
  6865  000128  0EF4               	movlw	low STR_24
  6866  00012A  0100               	movlb	0	; () banked
  6867  00012C  6FED               	movwf	printf@fmt& (0+255),b
  6868  00012E  0EFC               	movlw	high STR_24
  6869  000130  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6870  000132  EC00  F01D         	call	_printf	;wreg free
  6871  000136  0EC0               	movlw	192
  6872  000138  EC79  F01D         	call	_lcdInst
  6873                           
  6874                           ;main.c: 543:                 printf("2 - Summary");
  6875  00013C  0E76               	movlw	low STR_25
  6876  00013E  0100               	movlb	0	; () banked
  6877  000140  6FED               	movwf	printf@fmt& (0+255),b
  6878  000142  0EFC               	movlw	high STR_25
  6879  000144  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6880  000146  EC00  F01D         	call	_printf	;wreg free
  6881  00014A  0E90               	movlw	144
  6882  00014C  EC79  F01D         	call	_lcdInst
  6883                           
  6884                           ;main.c: 545:                 printf("3 - Date&Time ");
  6885  000150  0EAA               	movlw	low STR_26
  6886  000152  0100               	movlb	0	; () banked
  6887  000154  6FED               	movwf	printf@fmt& (0+255),b
  6888  000156  0EFB               	movlw	high STR_26
  6889  000158  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6890  00015A  EC00  F01D         	call	_printf	;wreg free
  6891  00015E                     l7682:
  6892                           
  6893                           ;main.c: 548:             if ((temp_int == 1)&&(temp!= '*')&&(temp!= '#')){
  6894  00015E  0101               	movlb	1	; () banked
  6895  000160  0573               	decf	_temp_int& (0+255),w,b
  6896  000162  1174               	iorwf	(_temp_int+1)& (0+255),w,b
  6897  000164  A4D8               	btfss	status,2,c
  6898  000166  D041               	goto	l7710
  6899                           
  6900                           ; BSR set to: 1
  6901  000168  0E2A               	movlw	42
  6902  00016A  0100               	movlb	0	; () banked
  6903  00016C  19FF               	xorwf	_temp& (0+255),w,b
  6904  00016E  B4D8               	btfsc	status,2,c
  6905  000170  D03C               	goto	l7710
  6906                           
  6907                           ; BSR set to: 0
  6908  000172  0E23               	movlw	35
  6909  000174  19FF               	xorwf	_temp& (0+255),w,b
  6910  000176  B4D8               	btfsc	status,2,c
  6911  000178  D038               	goto	l7710
  6912                           
  6913                           ; BSR set to: 0
  6914                           ;main.c: 549:                 state = 0;
  6915  00017A  0E00               	movlw	0
  6916  00017C  0101               	movlb	1	; () banked
  6917  00017E  6F72               	movwf	(_state+1)& (0+255),b
  6918  000180  0E00               	movlw	0
  6919  000182  6F71               	movwf	_state& (0+255),b
  6920                           
  6921                           ; BSR set to: 1
  6922                           ;main.c: 550:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  6923  000184  0E01               	movlw	1
  6924  000186  EC79  F01D         	call	_lcdInst
  6925  00018A  0E11               	movlw	17
  6926  00018C  0101               	movlb	1	; () banked
  6927  00018E  6F00               	movwf	??_UI_main& (0+255),b
  6928  000190  0E3A               	movlw	58
  6929  000192                     u9477:
  6930  000192  2EE8               	decfsz	wreg,f,c
  6931  000194  D7FE               	bra	u9477
  6932  000196  2F00               	decfsz	??_UI_main& (0+255),f,b
  6933  000198  D7FC               	bra	u9477
  6934  00019A  F000               	nop	
  6935                           
  6936                           ;main.c: 551:                 printf("Machine In Use");
  6937  00019C  0EC8               	movlw	low STR_30
  6938  00019E  0100               	movlb	0	; () banked
  6939  0001A0  6FED               	movwf	printf@fmt& (0+255),b
  6940  0001A2  0EFB               	movlw	high STR_30
  6941  0001A4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6942  0001A6  EC00  F01D         	call	_printf	;wreg free
  6943  0001AA  0ED0               	movlw	208
  6944  0001AC  EC79  F01D         	call	_lcdInst
  6945                           
  6946                           ;main.c: 553:                 printf("     0-Menu     ");
  6947  0001B0  0E14               	movlw	low STR_31
  6948  0001B2  0100               	movlb	0	; () banked
  6949  0001B4  6FED               	movwf	printf@fmt& (0+255),b
  6950  0001B6  0EFB               	movlw	high STR_31
  6951  0001B8  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6952  0001BA  EC00  F01D         	call	_printf	;wreg free
  6953                           
  6954                           ;main.c: 557:                 I2C_Master_Start();
  6955  0001BE  EC8A  F01D         	call	_I2C_Master_Start	;wreg free
  6956                           
  6957                           ;main.c: 558:                 I2C_Master_Write(0b00010000);
  6958  0001C2  0E00               	movlw	0
  6959  0001C4  0100               	movlb	0	; () banked
  6960  0001C6  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  6961  0001C8  0E10               	movlw	16
  6962  0001CA  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  6963  0001CC  EC81  F01D         	call	_I2C_Master_Write	;wreg free
  6964                           
  6965                           ;main.c: 559:                 I2C_Master_Write('1');
  6966  0001D0  0E00               	movlw	0
  6967  0001D2  0100               	movlb	0	; () banked
  6968  0001D4  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  6969  0001D6  0E31               	movlw	49
  6970  0001D8  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  6971  0001DA  EC81  F01D         	call	_I2C_Master_Write	;wreg free
  6972                           
  6973                           ;main.c: 560:                 I2C_Master_Stop();
  6974  0001DE  EC86  F01D         	call	_I2C_Master_Stop	;wreg free
  6975                           
  6976                           ;main.c: 562:                 sens = 1;
  6977  0001E2  0E00               	movlw	0
  6978  0001E4  6E59               	movwf	_sens+1,c	;volatile
  6979  0001E6  0E01               	movlw	1
  6980  0001E8  6E58               	movwf	_sens,c	;volatile
  6981  0001EA                     l7710:
  6982                           
  6983                           ;main.c: 565:                 if ((temp_int == 2)||(state == 2)){
  6984  0001EA  0E02               	movlw	2
  6985  0001EC  0101               	movlb	1	; () banked
  6986  0001EE  1973               	xorwf	_temp_int& (0+255),w,b
  6987  0001F0  1174               	iorwf	(_temp_int+1)& (0+255),w,b
  6988  0001F2  B4D8               	btfsc	status,2,c
  6989  0001F4  D005               	goto	u8320
  6990                           
  6991                           ; BSR set to: 1
  6992  0001F6  0E02               	movlw	2
  6993  0001F8  1971               	xorwf	_state& (0+255),w,b
  6994  0001FA  1172               	iorwf	(_state+1)& (0+255),w,b
  6995  0001FC  A4D8               	btfss	status,2,c
  6996  0001FE  D253               	goto	l7820
  6997  000200                     u8320:
  6998                           
  6999                           ; BSR set to: 1
  7000                           ;main.c: 566:                     if ((temp_int == 2)){
  7001  000200  0E02               	movlw	2
  7002  000202  1973               	xorwf	_temp_int& (0+255),w,b
  7003  000204  1174               	iorwf	(_temp_int+1)& (0+255),w,b
  7004  000206  A4D8               	btfss	status,2,c
  7005  000208  D033               	goto	l7732
  7006                           
  7007                           ; BSR set to: 1
  7008                           ;main.c: 567:                         state = 2;
  7009  00020A  0E00               	movlw	0
  7010  00020C  6F72               	movwf	(_state+1)& (0+255),b
  7011  00020E  0E02               	movlw	2
  7012  000210  6F71               	movwf	_state& (0+255),b
  7013                           
  7014                           ;main.c: 568:                         disp = 0;
  7015  000212  0E00               	movlw	0
  7016  000214  6F70               	movwf	(_disp+1)& (0+255),b
  7017  000216  0E00               	movlw	0
  7018  000218  6F6F               	movwf	_disp& (0+255),b
  7019                           
  7020                           ; BSR set to: 1
  7021                           ;main.c: 569:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  7022  00021A  0E01               	movlw	1
  7023  00021C  EC79  F01D         	call	_lcdInst
  7024  000220  0E11               	movlw	17
  7025  000222  0101               	movlb	1	; () banked
  7026  000224  6F00               	movwf	??_UI_main& (0+255),b
  7027  000226  0E3A               	movlw	58
  7028  000228                     u9487:
  7029  000228  2EE8               	decfsz	wreg,f,c
  7030  00022A  D7FE               	bra	u9487
  7031  00022C  2F00               	decfsz	??_UI_main& (0+255),f,b
  7032  00022E  D7FC               	bra	u9487
  7033  000230  F000               	nop	
  7034                           
  7035                           ;main.c: 570:                         printf("Op Time:");
  7036  000232  0E12               	movlw	low STR_32
  7037  000234  0100               	movlb	0	; () banked
  7038  000236  6FED               	movwf	printf@fmt& (0+255),b
  7039  000238  0EFD               	movlw	high STR_32
  7040  00023A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7041  00023C  EC00  F01D         	call	_printf	;wreg free
  7042  000240  0EC0               	movlw	192
  7043  000242  EC79  F01D         	call	_lcdInst
  7044                           
  7045                           ;main.c: 572:                         printf("%d", cnt);
  7046  000246  0E00               	movlw	low (STR_39+11)
  7047  000248  0100               	movlb	0	; () banked
  7048  00024A  6FED               	movwf	printf@fmt& (0+255),b
  7049  00024C  0EFC               	movlw	high (STR_39+11)
  7050  00024E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7051  000250  0E00               	movlw	0
  7052  000252  6FF0               	movwf	(?_printf+3)& (0+255),b
  7053  000254  0E00               	movlw	0
  7054  000256  6FEF               	movwf	(?_printf+2)& (0+255),b
  7055  000258  EC00  F01D         	call	_printf	;wreg free
  7056  00025C  0ED0               	movlw	208
  7057  00025E  EC79  F01D         	call	_lcdInst
  7058                           
  7059                           ;main.c: 574:                         printf("    0-Menu   #>");
  7060  000262  0E59               	movlw	low (STR_37+1)
  7061  000264  0100               	movlb	0	; () banked
  7062  000266  6FED               	movwf	printf@fmt& (0+255),b
  7063  000268  0EFB               	movlw	high (STR_37+1)
  7064  00026A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7065  00026C  EC00  F01D         	call	_printf	;wreg free
  7066  000270                     l7732:
  7067                           
  7068                           ;main.c: 576:                     if ((temp == '*') && (disp != 0)){
  7069  000270  0E2A               	movlw	42
  7070  000272  0100               	movlb	0	; () banked
  7071  000274  19FF               	xorwf	_temp& (0+255),w,b
  7072  000276  A4D8               	btfss	status,2,c
  7073  000278  D00B               	goto	l493
  7074                           
  7075                           ; BSR set to: 0
  7076  00027A  0101               	movlb	1	; () banked
  7077  00027C  516F               	movf	_disp& (0+255),w,b
  7078  00027E  1170               	iorwf	(_disp+1)& (0+255),w,b
  7079  000280  B4D8               	btfsc	status,2,c
  7080  000282  D006               	goto	l493
  7081                           
  7082                           ; BSR set to: 1
  7083                           ;main.c: 577:                         disp = disp - 1;
  7084  000284  0EFF               	movlw	255
  7085  000286  256F               	addwf	_disp& (0+255),w,b
  7086  000288  6F6F               	movwf	_disp& (0+255),b
  7087  00028A  0EFF               	movlw	255
  7088  00028C  2170               	addwfc	(_disp+1)& (0+255),w,b
  7089  00028E  6F70               	movwf	(_disp+1)& (0+255),b
  7090  000290                     l493:
  7091                           
  7092                           ;main.c: 579:                     if ((temp == '#')&& (disp <12)){
  7093  000290  0E23               	movlw	35
  7094  000292  0100               	movlb	0	; () banked
  7095  000294  19FF               	xorwf	_temp& (0+255),w,b
  7096  000296  A4D8               	btfss	status,2,c
  7097  000298  D00B               	goto	l7742
  7098                           
  7099                           ; BSR set to: 0
  7100  00029A  0101               	movlb	1	; () banked
  7101  00029C  BF70               	btfsc	(_disp+1)& (0+255),7,b
  7102  00029E  D006               	goto	u8370
  7103  0002A0  5170               	movf	(_disp+1)& (0+255),w,b
  7104  0002A2  E106               	bnz	l7742
  7105  0002A4  0E0C               	movlw	12
  7106  0002A6  5D6F               	subwf	_disp& (0+255),w,b
  7107  0002A8  B0D8               	btfsc	status,0,c
  7108  0002AA  D002               	goto	l7742
  7109  0002AC                     u8370:
  7110                           
  7111                           ; BSR set to: 1
  7112                           ;main.c: 580:                         disp++;
  7113  0002AC  4B6F               	infsnz	_disp& (0+255),f,b
  7114  0002AE  2B70               	incf	(_disp+1)& (0+255),f,b
  7115  0002B0                     l7742:
  7116                           
  7117                           ;main.c: 582:                     if (disp == 0){
  7118  0002B0  0101               	movlb	1	; () banked
  7119  0002B2  516F               	movf	_disp& (0+255),w,b
  7120  0002B4  1170               	iorwf	(_disp+1)& (0+255),w,b
  7121  0002B6  A4D8               	btfss	status,2,c
  7122  0002B8  D02B               	goto	l7758
  7123                           
  7124                           ; BSR set to: 1
  7125                           ;main.c: 583:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  7126  0002BA  0E01               	movlw	1
  7127  0002BC  EC79  F01D         	call	_lcdInst
  7128  0002C0  0E11               	movlw	17
  7129  0002C2  0101               	movlb	1	; () banked
  7130  0002C4  6F00               	movwf	??_UI_main& (0+255),b
  7131  0002C6  0E3A               	movlw	58
  7132  0002C8                     u9497:
  7133  0002C8  2EE8               	decfsz	wreg,f,c
  7134  0002CA  D7FE               	bra	u9497
  7135  0002CC  2F00               	decfsz	??_UI_main& (0+255),f,b
  7136  0002CE  D7FC               	bra	u9497
  7137  0002D0  F000               	nop	
  7138                           
  7139                           ;main.c: 584:                         printf("Op Time:");
  7140  0002D2  0E12               	movlw	low STR_32
  7141  0002D4  0100               	movlb	0	; () banked
  7142  0002D6  6FED               	movwf	printf@fmt& (0+255),b
  7143  0002D8  0EFD               	movlw	high STR_32
  7144  0002DA  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7145  0002DC  EC00  F01D         	call	_printf	;wreg free
  7146  0002E0  0EC0               	movlw	192
  7147  0002E2  EC79  F01D         	call	_lcdInst
  7148                           
  7149                           ;main.c: 586:                         printf("%d", cnt);
  7150  0002E6  0E00               	movlw	low (STR_39+11)
  7151  0002E8  0100               	movlb	0	; () banked
  7152  0002EA  6FED               	movwf	printf@fmt& (0+255),b
  7153  0002EC  0EFC               	movlw	high (STR_39+11)
  7154  0002EE  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7155  0002F0  0E00               	movlw	0
  7156  0002F2  6FF0               	movwf	(?_printf+3)& (0+255),b
  7157  0002F4  0E00               	movlw	0
  7158  0002F6  6FEF               	movwf	(?_printf+2)& (0+255),b
  7159  0002F8  EC00  F01D         	call	_printf	;wreg free
  7160  0002FC  0ED0               	movlw	208
  7161  0002FE  EC79  F01D         	call	_lcdInst
  7162                           
  7163                           ;main.c: 588:                         printf("     0-Menu   #>");
  7164  000302  0E58               	movlw	low STR_37
  7165  000304  0100               	movlb	0	; () banked
  7166  000306  6FED               	movwf	printf@fmt& (0+255),b
  7167  000308  0EFB               	movlw	high STR_37
  7168  00030A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7169  00030C  EC00  F01D         	call	_printf	;wreg free
  7170  000310                     l7758:
  7171                           
  7172                           ;main.c: 591:                     if (disp == 1){
  7173  000310  0101               	movlb	1	; () banked
  7174  000312  056F               	decf	_disp& (0+255),w,b
  7175  000314  1170               	iorwf	(_disp+1)& (0+255),w,b
  7176  000316  A4D8               	btfss	status,2,c
  7177  000318  D02F               	goto	l7774
  7178                           
  7179                           ; BSR set to: 1
  7180                           ;main.c: 592:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  7181  00031A  0E01               	movlw	1
  7182  00031C  EC79  F01D         	call	_lcdInst
  7183  000320  0E11               	movlw	17
  7184  000322  0101               	movlb	1	; () banked
  7185  000324  6F00               	movwf	??_UI_main& (0+255),b
  7186  000326  0E3A               	movlw	58
  7187  000328                     u9507:
  7188  000328  2EE8               	decfsz	wreg,f,c
  7189  00032A  D7FE               	bra	u9507
  7190  00032C  2F00               	decfsz	??_UI_main& (0+255),f,b
  7191  00032E  D7FC               	bra	u9507
  7192  000330  F000               	nop	
  7193                           
  7194                           ;main.c: 593:                         printf("No. Tires: %d",t_dep);
  7195  000332  0E03               	movlw	low STR_38
  7196  000334  0100               	movlb	0	; () banked
  7197  000336  6FED               	movwf	printf@fmt& (0+255),b
  7198  000338  0EFC               	movlw	high STR_38
  7199  00033A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7200  00033C  C0F9  F0EF         	movff	UI_main@t_dep,?_printf+2
  7201  000340  C0FA  F0F0         	movff	UI_main@t_dep+1,?_printf+3
  7202  000344  EC00  F01D         	call	_printf	;wreg free
  7203  000348  0EC0               	movlw	192
  7204  00034A  EC79  F01D         	call	_lcdInst
  7205                           
  7206                           ;main.c: 595:                         printf("No. Poles: %d", poles_detected);
  7207  00034E  0EF5               	movlw	low STR_39
  7208  000350  0100               	movlb	0	; () banked
  7209  000352  6FED               	movwf	printf@fmt& (0+255),b
  7210  000354  0EFB               	movlw	high STR_39
  7211  000356  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7212  000358  C0FB  F0EF         	movff	UI_main@poles_detected,?_printf+2
  7213  00035C  C0FC  F0F0         	movff	UI_main@poles_detected+1,?_printf+3
  7214  000360  EC00  F01D         	call	_printf	;wreg free
  7215  000364  0ED0               	movlw	208
  7216  000366  EC79  F01D         	call	_lcdInst
  7217                           
  7218                           ;main.c: 597:                         printf("<*   0-Menu   #>");
  7219  00036A  0E69               	movlw	low STR_40
  7220  00036C  0100               	movlb	0	; () banked
  7221  00036E  6FED               	movwf	printf@fmt& (0+255),b
  7222  000370  0EFB               	movlw	high STR_40
  7223  000372  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7224  000374  EC00  F01D         	call	_printf	;wreg free
  7225  000378                     l7774:
  7226                           
  7227                           ;main.c: 600:                     if (disp > 1 && disp <11){
  7228  000378  0101               	movlb	1	; () banked
  7229  00037A  BF70               	btfsc	(_disp+1)& (0+255),7,b
  7230  00037C  D0CE               	goto	l7798
  7231  00037E  5170               	movf	(_disp+1)& (0+255),w,b
  7232  000380  E104               	bnz	u8400
  7233  000382  0E02               	movlw	2
  7234  000384  5D6F               	subwf	_disp& (0+255),w,b
  7235  000386  A0D8               	btfss	status,0,c
  7236  000388  D0C8               	goto	l7798
  7237  00038A                     u8400:
  7238                           
  7239                           ; BSR set to: 1
  7240  00038A  BF70               	btfsc	(_disp+1)& (0+255),7,b
  7241  00038C  D006               	goto	u8410
  7242  00038E  5170               	movf	(_disp+1)& (0+255),w,b
  7243  000390  E103               	bnz	u8411
  7244  000392  0E0B               	movlw	11
  7245  000394  5D6F               	subwf	_disp& (0+255),w,b
  7246  000396  B0D8               	btfsc	status,0,c
  7247  000398                     u8411:
  7248  000398  D0C0               	goto	l7798
  7249  00039A                     u8410:
  7250                           
  7251                           ; BSR set to: 1
  7252                           ;main.c: 601:                         i = disp - 2;
  7253  00039A  0EFE               	movlw	254
  7254  00039C  256F               	addwf	_disp& (0+255),w,b
  7255  00039E  6F6D               	movwf	_i& (0+255),b
  7256  0003A0  0EFF               	movlw	255
  7257  0003A2  2170               	addwfc	(_disp+1)& (0+255),w,b
  7258  0003A4  6F6E               	movwf	(_i+1)& (0+255),b
  7259                           
  7260                           ; BSR set to: 1
  7261                           ;main.c: 602:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  7262  0003A6  0E01               	movlw	1
  7263  0003A8  EC79  F01D         	call	_lcdInst
  7264  0003AC  0E11               	movlw	17
  7265  0003AE  0101               	movlb	1	; () banked
  7266  0003B0  6F00               	movwf	??_UI_main& (0+255),b
  7267  0003B2  0E3A               	movlw	58
  7268  0003B4                     u9517:
  7269  0003B4  2EE8               	decfsz	wreg,f,c
  7270  0003B6  D7FE               	bra	u9517
  7271  0003B8  2F00               	decfsz	??_UI_main& (0+255),f,b
  7272  0003BA  D7FC               	bra	u9517
  7273  0003BC  F000               	nop	
  7274                           
  7275                           ;main.c: 603:                         printf("P%d Dep:%d,Tot:%d", i+1 , Pole[i].tires_de
      +                          ployed,Pole[i].tires_final);
  7276  0003BE  0E02               	movlw	low STR_41
  7277  0003C0  0100               	movlb	0	; () banked
  7278  0003C2  6FED               	movwf	printf@fmt& (0+255),b
  7279  0003C4  0EFB               	movlw	high STR_41
  7280  0003C6  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7281  0003C8  0E01               	movlw	1
  7282  0003CA  0101               	movlb	1	; () banked
  7283  0003CC  256D               	addwf	_i& (0+255),w,b
  7284  0003CE  0100               	movlb	0	; () banked
  7285  0003D0  6FEF               	movwf	(?_printf+2)& (0+255),b
  7286  0003D2  0E00               	movlw	0
  7287  0003D4  0101               	movlb	1	; () banked
  7288  0003D6  216E               	addwfc	(_i+1)& (0+255),w,b
  7289  0003D8  0100               	movlb	0	; () banked
  7290  0003DA  6FF0               	movwf	(?_printf+3)& (0+255),b
  7291  0003DC  C16D  F100         	movff	_i,??_UI_main
  7292  0003E0  C16E  F101         	movff	_i+1,??_UI_main+1
  7293  0003E4  0101               	movlb	1	; () banked
  7294  0003E6  90D8               	bcf	status,0,c
  7295  0003E8  3700               	rlcf	??_UI_main& (0+255),f,b
  7296  0003EA  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7297  0003EC  90D8               	bcf	status,0,c
  7298  0003EE  3700               	rlcf	??_UI_main& (0+255),f,b
  7299  0003F0  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7300  0003F2  90D8               	bcf	status,0,c
  7301  0003F4  3700               	rlcf	??_UI_main& (0+255),f,b
  7302  0003F6  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7303  0003F8  0E04               	movlw	low UI_main@Pole
  7304  0003FA  2500               	addwf	??_UI_main& (0+255),w,b
  7305  0003FC  6ED9               	movwf	fsr2l,c
  7306  0003FE  0E01               	movlw	high UI_main@Pole
  7307  000400  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  7308  000402  6EDA               	movwf	fsr2h,c
  7309  000404  CFDE F0F1          	movff	postinc2,?_printf+4
  7310  000408  CFDD F0F2          	movff	postdec2,?_printf+5
  7311  00040C  C16D  F102         	movff	_i,??_UI_main+2
  7312  000410  C16E  F103         	movff	_i+1,??_UI_main+3
  7313  000414  90D8               	bcf	status,0,c
  7314  000416  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  7315  000418  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  7316  00041A  90D8               	bcf	status,0,c
  7317  00041C  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  7318  00041E  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  7319  000420  90D8               	bcf	status,0,c
  7320  000422  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  7321  000424  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  7322  000426  0E02               	movlw	2
  7323  000428  2702               	addwf	(??_UI_main+2)& (0+255),f,b
  7324  00042A  0E00               	movlw	0
  7325  00042C  2303               	addwfc	(??_UI_main+3)& (0+255),f,b
  7326  00042E  0E04               	movlw	low UI_main@Pole
  7327  000430  2502               	addwf	(??_UI_main+2)& (0+255),w,b
  7328  000432  6ED9               	movwf	fsr2l,c
  7329  000434  0E01               	movlw	high UI_main@Pole
  7330  000436  2103               	addwfc	(??_UI_main+3)& (0+255),w,b
  7331  000438  6EDA               	movwf	fsr2h,c
  7332  00043A  CFDE F0F3          	movff	postinc2,?_printf+6
  7333  00043E  CFDD F0F4          	movff	postdec2,?_printf+7
  7334  000442  EC00  F01D         	call	_printf	;wreg free
  7335  000446  0EC0               	movlw	192
  7336  000448  EC79  F01D         	call	_lcdInst
  7337                           
  7338                           ;main.c: 605:                         printf("DistToStart:%d",i+1 , Pole[i].dist_from_st
      +                          art);
  7339  00044C  0EB9               	movlw	low STR_42
  7340  00044E  0100               	movlb	0	; () banked
  7341  000450  6FED               	movwf	printf@fmt& (0+255),b
  7342  000452  0EFB               	movlw	high STR_42
  7343  000454  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7344  000456  0E01               	movlw	1
  7345  000458  0101               	movlb	1	; () banked
  7346  00045A  256D               	addwf	_i& (0+255),w,b
  7347  00045C  0100               	movlb	0	; () banked
  7348  00045E  6FEF               	movwf	(?_printf+2)& (0+255),b
  7349  000460  0E00               	movlw	0
  7350  000462  0101               	movlb	1	; () banked
  7351  000464  216E               	addwfc	(_i+1)& (0+255),w,b
  7352  000466  0100               	movlb	0	; () banked
  7353  000468  6FF0               	movwf	(?_printf+3)& (0+255),b
  7354  00046A  C16D  F100         	movff	_i,??_UI_main
  7355  00046E  C16E  F101         	movff	_i+1,??_UI_main+1
  7356  000472  0101               	movlb	1	; () banked
  7357  000474  90D8               	bcf	status,0,c
  7358  000476  3700               	rlcf	??_UI_main& (0+255),f,b
  7359  000478  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7360  00047A  90D8               	bcf	status,0,c
  7361  00047C  3700               	rlcf	??_UI_main& (0+255),f,b
  7362  00047E  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7363  000480  90D8               	bcf	status,0,c
  7364  000482  3700               	rlcf	??_UI_main& (0+255),f,b
  7365  000484  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7366  000486  0E04               	movlw	4
  7367  000488  2700               	addwf	??_UI_main& (0+255),f,b
  7368  00048A  0E00               	movlw	0
  7369  00048C  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  7370  00048E  0E04               	movlw	low UI_main@Pole
  7371  000490  2500               	addwf	??_UI_main& (0+255),w,b
  7372  000492  6ED9               	movwf	fsr2l,c
  7373  000494  0E01               	movlw	high UI_main@Pole
  7374  000496  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  7375  000498  6EDA               	movwf	fsr2h,c
  7376  00049A  CFDE F0F1          	movff	postinc2,?_printf+4
  7377  00049E  CFDD F0F2          	movff	postdec2,?_printf+5
  7378  0004A2  EC00  F01D         	call	_printf	;wreg free
  7379  0004A6  0E90               	movlw	144
  7380  0004A8  EC79  F01D         	call	_lcdInst
  7381                           
  7382                           ;main.c: 607:                         printf("DistToCL:%d",i+1 , Pole[i].dist_from_cl);
  7383  0004AC  0E6A               	movlw	low STR_43
  7384  0004AE  0100               	movlb	0	; () banked
  7385  0004B0  6FED               	movwf	printf@fmt& (0+255),b
  7386  0004B2  0EFC               	movlw	high STR_43
  7387  0004B4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7388  0004B6  0E01               	movlw	1
  7389  0004B8  0101               	movlb	1	; () banked
  7390  0004BA  256D               	addwf	_i& (0+255),w,b
  7391  0004BC  0100               	movlb	0	; () banked
  7392  0004BE  6FEF               	movwf	(?_printf+2)& (0+255),b
  7393  0004C0  0E00               	movlw	0
  7394  0004C2  0101               	movlb	1	; () banked
  7395  0004C4  216E               	addwfc	(_i+1)& (0+255),w,b
  7396  0004C6  0100               	movlb	0	; () banked
  7397  0004C8  6FF0               	movwf	(?_printf+3)& (0+255),b
  7398  0004CA  C16D  F100         	movff	_i,??_UI_main
  7399  0004CE  C16E  F101         	movff	_i+1,??_UI_main+1
  7400  0004D2  0101               	movlb	1	; () banked
  7401  0004D4  90D8               	bcf	status,0,c
  7402  0004D6  3700               	rlcf	??_UI_main& (0+255),f,b
  7403  0004D8  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7404  0004DA  90D8               	bcf	status,0,c
  7405  0004DC  3700               	rlcf	??_UI_main& (0+255),f,b
  7406  0004DE  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7407  0004E0  90D8               	bcf	status,0,c
  7408  0004E2  3700               	rlcf	??_UI_main& (0+255),f,b
  7409  0004E4  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7410  0004E6  0E06               	movlw	6
  7411  0004E8  2700               	addwf	??_UI_main& (0+255),f,b
  7412  0004EA  0E00               	movlw	0
  7413  0004EC  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  7414  0004EE  0E04               	movlw	low UI_main@Pole
  7415  0004F0  2500               	addwf	??_UI_main& (0+255),w,b
  7416  0004F2  6ED9               	movwf	fsr2l,c
  7417  0004F4  0E01               	movlw	high UI_main@Pole
  7418  0004F6  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  7419  0004F8  6EDA               	movwf	fsr2h,c
  7420  0004FA  CFDE F0F1          	movff	postinc2,?_printf+4
  7421  0004FE  CFDD F0F2          	movff	postdec2,?_printf+5
  7422  000502  EC00  F01D         	call	_printf	;wreg free
  7423  000506  0ED0               	movlw	208
  7424  000508  EC79  F01D         	call	_lcdInst
  7425                           
  7426                           ;main.c: 609:                         printf("<*   0-Menu   #>");
  7427  00050C  0E69               	movlw	low STR_40
  7428  00050E  0100               	movlb	0	; () banked
  7429  000510  6FED               	movwf	printf@fmt& (0+255),b
  7430  000512  0EFB               	movlw	high STR_40
  7431  000514  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7432  000516  EC00  F01D         	call	_printf	;wreg free
  7433  00051A                     l7798:
  7434                           
  7435                           ;main.c: 611:                     if (disp == 11){
  7436  00051A  0E0B               	movlw	11
  7437  00051C  0101               	movlb	1	; () banked
  7438  00051E  196F               	xorwf	_disp& (0+255),w,b
  7439  000520  1170               	iorwf	(_disp+1)& (0+255),w,b
  7440  000522  A4D8               	btfss	status,2,c
  7441  000524  D0C0               	goto	l7820
  7442                           
  7443                           ; BSR set to: 1
  7444                           ;main.c: 612:                         i = disp - 2;
  7445  000526  0EFE               	movlw	254
  7446  000528  256F               	addwf	_disp& (0+255),w,b
  7447  00052A  6F6D               	movwf	_i& (0+255),b
  7448  00052C  0EFF               	movlw	255
  7449  00052E  2170               	addwfc	(_disp+1)& (0+255),w,b
  7450  000530  6F6E               	movwf	(_i+1)& (0+255),b
  7451                           
  7452                           ; BSR set to: 1
  7453                           ;main.c: 613:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  7454  000532  0E01               	movlw	1
  7455  000534  EC79  F01D         	call	_lcdInst
  7456  000538  0E11               	movlw	17
  7457  00053A  0101               	movlb	1	; () banked
  7458  00053C  6F00               	movwf	??_UI_main& (0+255),b
  7459  00053E  0E3A               	movlw	58
  7460  000540                     u9527:
  7461  000540  2EE8               	decfsz	wreg,f,c
  7462  000542  D7FE               	bra	u9527
  7463  000544  2F00               	decfsz	??_UI_main& (0+255),f,b
  7464  000546  D7FC               	bra	u9527
  7465  000548  F000               	nop	
  7466                           
  7467                           ;main.c: 614:                         printf("P%d Dep:%d,Tot:%d", i+1 , Pole[i].tires_de
      +                          ployed,Pole[i].tires_final);
  7468  00054A  0E02               	movlw	low STR_41
  7469  00054C  0100               	movlb	0	; () banked
  7470  00054E  6FED               	movwf	printf@fmt& (0+255),b
  7471  000550  0EFB               	movlw	high STR_41
  7472  000552  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7473  000554  0E01               	movlw	1
  7474  000556  0101               	movlb	1	; () banked
  7475  000558  256D               	addwf	_i& (0+255),w,b
  7476  00055A  0100               	movlb	0	; () banked
  7477  00055C  6FEF               	movwf	(?_printf+2)& (0+255),b
  7478  00055E  0E00               	movlw	0
  7479  000560  0101               	movlb	1	; () banked
  7480  000562  216E               	addwfc	(_i+1)& (0+255),w,b
  7481  000564  0100               	movlb	0	; () banked
  7482  000566  6FF0               	movwf	(?_printf+3)& (0+255),b
  7483  000568  C16D  F100         	movff	_i,??_UI_main
  7484  00056C  C16E  F101         	movff	_i+1,??_UI_main+1
  7485  000570  0101               	movlb	1	; () banked
  7486  000572  90D8               	bcf	status,0,c
  7487  000574  3700               	rlcf	??_UI_main& (0+255),f,b
  7488  000576  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7489  000578  90D8               	bcf	status,0,c
  7490  00057A  3700               	rlcf	??_UI_main& (0+255),f,b
  7491  00057C  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7492  00057E  90D8               	bcf	status,0,c
  7493  000580  3700               	rlcf	??_UI_main& (0+255),f,b
  7494  000582  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7495  000584  0E04               	movlw	low UI_main@Pole
  7496  000586  2500               	addwf	??_UI_main& (0+255),w,b
  7497  000588  6ED9               	movwf	fsr2l,c
  7498  00058A  0E01               	movlw	high UI_main@Pole
  7499  00058C  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  7500  00058E  6EDA               	movwf	fsr2h,c
  7501  000590  CFDE F0F1          	movff	postinc2,?_printf+4
  7502  000594  CFDD F0F2          	movff	postdec2,?_printf+5
  7503  000598  C16D  F102         	movff	_i,??_UI_main+2
  7504  00059C  C16E  F103         	movff	_i+1,??_UI_main+3
  7505  0005A0  90D8               	bcf	status,0,c
  7506  0005A2  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  7507  0005A4  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  7508  0005A6  90D8               	bcf	status,0,c
  7509  0005A8  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  7510  0005AA  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  7511  0005AC  90D8               	bcf	status,0,c
  7512  0005AE  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  7513  0005B0  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  7514  0005B2  0E02               	movlw	2
  7515  0005B4  2702               	addwf	(??_UI_main+2)& (0+255),f,b
  7516  0005B6  0E00               	movlw	0
  7517  0005B8  2303               	addwfc	(??_UI_main+3)& (0+255),f,b
  7518  0005BA  0E04               	movlw	low UI_main@Pole
  7519  0005BC  2502               	addwf	(??_UI_main+2)& (0+255),w,b
  7520  0005BE  6ED9               	movwf	fsr2l,c
  7521  0005C0  0E01               	movlw	high UI_main@Pole
  7522  0005C2  2103               	addwfc	(??_UI_main+3)& (0+255),w,b
  7523  0005C4  6EDA               	movwf	fsr2h,c
  7524  0005C6  CFDE F0F3          	movff	postinc2,?_printf+6
  7525  0005CA  CFDD F0F4          	movff	postdec2,?_printf+7
  7526  0005CE  EC00  F01D         	call	_printf	;wreg free
  7527  0005D2  0EC0               	movlw	192
  7528  0005D4  EC79  F01D         	call	_lcdInst
  7529                           
  7530                           ;main.c: 616:                         printf("DistToStart:%d",i+1 , Pole[i].dist_from_st
      +                          art);
  7531  0005D8  0EB9               	movlw	low STR_42
  7532  0005DA  0100               	movlb	0	; () banked
  7533  0005DC  6FED               	movwf	printf@fmt& (0+255),b
  7534  0005DE  0EFB               	movlw	high STR_42
  7535  0005E0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7536  0005E2  0E01               	movlw	1
  7537  0005E4  0101               	movlb	1	; () banked
  7538  0005E6  256D               	addwf	_i& (0+255),w,b
  7539  0005E8  0100               	movlb	0	; () banked
  7540  0005EA  6FEF               	movwf	(?_printf+2)& (0+255),b
  7541  0005EC  0E00               	movlw	0
  7542  0005EE  0101               	movlb	1	; () banked
  7543  0005F0  216E               	addwfc	(_i+1)& (0+255),w,b
  7544  0005F2  0100               	movlb	0	; () banked
  7545  0005F4  6FF0               	movwf	(?_printf+3)& (0+255),b
  7546  0005F6  C16D  F100         	movff	_i,??_UI_main
  7547  0005FA  C16E  F101         	movff	_i+1,??_UI_main+1
  7548  0005FE  0101               	movlb	1	; () banked
  7549  000600  90D8               	bcf	status,0,c
  7550  000602  3700               	rlcf	??_UI_main& (0+255),f,b
  7551  000604  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7552  000606  90D8               	bcf	status,0,c
  7553  000608  3700               	rlcf	??_UI_main& (0+255),f,b
  7554  00060A  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7555  00060C  90D8               	bcf	status,0,c
  7556  00060E  3700               	rlcf	??_UI_main& (0+255),f,b
  7557  000610  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7558  000612  0E04               	movlw	4
  7559  000614  2700               	addwf	??_UI_main& (0+255),f,b
  7560  000616  0E00               	movlw	0
  7561  000618  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  7562  00061A  0E04               	movlw	low UI_main@Pole
  7563  00061C  2500               	addwf	??_UI_main& (0+255),w,b
  7564  00061E  6ED9               	movwf	fsr2l,c
  7565  000620  0E01               	movlw	high UI_main@Pole
  7566  000622  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  7567  000624  6EDA               	movwf	fsr2h,c
  7568  000626  CFDE F0F1          	movff	postinc2,?_printf+4
  7569  00062A  CFDD F0F2          	movff	postdec2,?_printf+5
  7570  00062E  EC00  F01D         	call	_printf	;wreg free
  7571  000632  0E90               	movlw	144
  7572  000634  EC79  F01D         	call	_lcdInst
  7573                           
  7574                           ;main.c: 618:                         printf("DistToCL:%d",i+1 , Pole[i].dist_from_cl);
  7575  000638  0E6A               	movlw	low STR_43
  7576  00063A  0100               	movlb	0	; () banked
  7577  00063C  6FED               	movwf	printf@fmt& (0+255),b
  7578  00063E  0EFC               	movlw	high STR_43
  7579  000640  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7580  000642  0E01               	movlw	1
  7581  000644  0101               	movlb	1	; () banked
  7582  000646  256D               	addwf	_i& (0+255),w,b
  7583  000648  0100               	movlb	0	; () banked
  7584  00064A  6FEF               	movwf	(?_printf+2)& (0+255),b
  7585  00064C  0E00               	movlw	0
  7586  00064E  0101               	movlb	1	; () banked
  7587  000650  216E               	addwfc	(_i+1)& (0+255),w,b
  7588  000652  0100               	movlb	0	; () banked
  7589  000654  6FF0               	movwf	(?_printf+3)& (0+255),b
  7590  000656  C16D  F100         	movff	_i,??_UI_main
  7591  00065A  C16E  F101         	movff	_i+1,??_UI_main+1
  7592  00065E  0101               	movlb	1	; () banked
  7593  000660  90D8               	bcf	status,0,c
  7594  000662  3700               	rlcf	??_UI_main& (0+255),f,b
  7595  000664  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7596  000666  90D8               	bcf	status,0,c
  7597  000668  3700               	rlcf	??_UI_main& (0+255),f,b
  7598  00066A  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7599  00066C  90D8               	bcf	status,0,c
  7600  00066E  3700               	rlcf	??_UI_main& (0+255),f,b
  7601  000670  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7602  000672  0E06               	movlw	6
  7603  000674  2700               	addwf	??_UI_main& (0+255),f,b
  7604  000676  0E00               	movlw	0
  7605  000678  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  7606  00067A  0E04               	movlw	low UI_main@Pole
  7607  00067C  2500               	addwf	??_UI_main& (0+255),w,b
  7608  00067E  6ED9               	movwf	fsr2l,c
  7609  000680  0E01               	movlw	high UI_main@Pole
  7610  000682  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  7611  000684  6EDA               	movwf	fsr2h,c
  7612  000686  CFDE F0F1          	movff	postinc2,?_printf+4
  7613  00068A  CFDD F0F2          	movff	postdec2,?_printf+5
  7614  00068E  EC00  F01D         	call	_printf	;wreg free
  7615  000692  0ED0               	movlw	208
  7616  000694  EC79  F01D         	call	_lcdInst
  7617                           
  7618                           ;main.c: 620:                         printf("<*   0-Menu     ");
  7619  000698  0E25               	movlw	low STR_48
  7620  00069A  0100               	movlb	0	; () banked
  7621  00069C  6FED               	movwf	printf@fmt& (0+255),b
  7622  00069E  0EFB               	movlw	high STR_48
  7623  0006A0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7624  0006A2  EC00  F01D         	call	_printf	;wreg free
  7625  0006A6                     l7820:
  7626                           
  7627                           ;main.c: 623:             if (temp_int == 3){
  7628  0006A6  0E03               	movlw	3
  7629  0006A8  0101               	movlb	1	; () banked
  7630  0006AA  1973               	xorwf	_temp_int& (0+255),w,b
  7631  0006AC  1174               	iorwf	(_temp_int+1)& (0+255),w,b
  7632  0006AE  A4D8               	btfss	status,2,c
  7633  0006B0  D0B5               	goto	u8460
  7634                           
  7635                           ; BSR set to: 1
  7636                           ;main.c: 624:                 state = 0;
  7637  0006B2  0E00               	movlw	0
  7638  0006B4  6F72               	movwf	(_state+1)& (0+255),b
  7639  0006B6  0E00               	movlw	0
  7640  0006B8  6F71               	movwf	_state& (0+255),b
  7641                           
  7642                           ;main.c: 625:                 tick = 0;
  7643  0006BA  0E00               	movlw	0
  7644  0006BC  6F55               	movwf	UI_main@tick& (0+255),b
  7645  0006BE  0E00               	movlw	0
  7646  0006C0  6F56               	movwf	(UI_main@tick+1)& (0+255),b
  7647  0006C2  0E00               	movlw	0
  7648  0006C4  6F57               	movwf	(UI_main@tick+2)& (0+255),b
  7649  0006C6  0E00               	movlw	0
  7650  0006C8  6F58               	movwf	(UI_main@tick+3)& (0+255),b
  7651                           
  7652                           ;main.c: 626:                 while(~key_was_pressed){
  7653  0006CA  D0A5               	goto	l7870
  7654  0006CC                     l7824:
  7655                           
  7656                           ; BSR set to: 1
  7657                           ;main.c: 627:                     if(tick % 1000 == 0){
  7658  0006CC  C155  F080         	movff	UI_main@tick,___llmod@dividend
  7659  0006D0  C156  F081         	movff	UI_main@tick+1,___llmod@dividend+1
  7660  0006D4  C157  F082         	movff	UI_main@tick+2,___llmod@dividend+2
  7661  0006D8  C158  F083         	movff	UI_main@tick+3,___llmod@dividend+3
  7662  0006DC  0EE8               	movlw	232
  7663  0006DE  0100               	movlb	0	; () banked
  7664  0006E0  6F84               	movwf	___llmod@divisor& (0+255),b
  7665  0006E2  0E03               	movlw	3
  7666  0006E4  6F85               	movwf	(___llmod@divisor+1)& (0+255),b
  7667  0006E6  0E00               	movlw	0
  7668  0006E8  6F86               	movwf	(___llmod@divisor+2)& (0+255),b
  7669  0006EA  0E00               	movlw	0
  7670  0006EC  6F87               	movwf	(___llmod@divisor+3)& (0+255),b
  7671  0006EE  EC55  F01A         	call	___llmod	;wreg free
  7672  0006F2  0100               	movlb	0	; () banked
  7673  0006F4  5180               	movf	?___llmod& (0+255),w,b
  7674  0006F6  1181               	iorwf	(?___llmod+1)& (0+255),w,b
  7675  0006F8  1182               	iorwf	(?___llmod+2)& (0+255),w,b
  7676  0006FA  1183               	iorwf	(?___llmod+3)& (0+255),w,b
  7677  0006FC  A4D8               	btfss	status,2,c
  7678  0006FE  D084               	goto	l7868
  7679                           
  7680                           ; BSR set to: 0
  7681                           ;main.c: 628:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  7682  000700  0E01               	movlw	1
  7683  000702  EC79  F01D         	call	_lcdInst
  7684  000706  0E11               	movlw	17
  7685  000708  0101               	movlb	1	; () banked
  7686  00070A  6F00               	movwf	??_UI_main& (0+255),b
  7687  00070C  0E3A               	movlw	58
  7688  00070E                     u9537:
  7689  00070E  2EE8               	decfsz	wreg,f,c
  7690  000710  D7FE               	bra	u9537
  7691  000712  2F00               	decfsz	??_UI_main& (0+255),f,b
  7692  000714  D7FC               	bra	u9537
  7693  000716  F000               	nop	
  7694                           
  7695                           ;main.c: 629:                         printf("DATE & TIME");
  7696  000718  0E46               	movlw	low STR_49
  7697  00071A  0100               	movlb	0	; () banked
  7698  00071C  6FED               	movwf	printf@fmt& (0+255),b
  7699  00071E  0EFC               	movlw	high STR_49
  7700  000720  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7701  000722  EC00  F01D         	call	_printf	;wreg free
  7702                           
  7703                           ;main.c: 630:                         I2C_Master_Init(100000);
  7704  000726  0EA0               	movlw	160
  7705  000728  0100               	movlb	0	; () banked
  7706  00072A  6F8D               	movwf	I2C_Master_Init@clockFreq& (0+255),b
  7707  00072C  0E86               	movlw	134
  7708  00072E  6F8E               	movwf	(I2C_Master_Init@clockFreq+1)& (0+255),b
  7709  000730  0E01               	movlw	1
  7710  000732  6F8F               	movwf	(I2C_Master_Init@clockFreq+2)& (0+255),b
  7711  000734  0E00               	movlw	0
  7712  000736  6F90               	movwf	(I2C_Master_Init@clockFreq+3)& (0+255),b
  7713  000738  EC89  F01A         	call	_I2C_Master_Init	;wreg free
  7714                           
  7715                           ;main.c: 631:                         I2C_Master_Start();
  7716  00073C  EC8A  F01D         	call	_I2C_Master_Start	;wreg free
  7717                           
  7718                           ;main.c: 632:                         I2C_Master_Write(0b11010000);
  7719  000740  0E00               	movlw	0
  7720  000742  0100               	movlb	0	; () banked
  7721  000744  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  7722  000746  0ED0               	movlw	208
  7723  000748  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  7724  00074A  EC81  F01D         	call	_I2C_Master_Write	;wreg free
  7725                           
  7726                           ;main.c: 633:                         I2C_Master_Write(0x00);
  7727  00074E  0E00               	movlw	0
  7728  000750  0100               	movlb	0	; () banked
  7729  000752  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  7730  000754  0E00               	movlw	0
  7731  000756  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  7732  000758  EC81  F01D         	call	_I2C_Master_Write	;wreg free
  7733                           
  7734                           ;main.c: 634:                         I2C_Master_Stop();
  7735  00075C  EC86  F01D         	call	_I2C_Master_Stop	;wreg free
  7736                           
  7737                           ;main.c: 636:                         I2C_Master_Start();
  7738  000760  EC8A  F01D         	call	_I2C_Master_Start	;wreg free
  7739                           
  7740                           ;main.c: 637:                         I2C_Master_Write(0b11010001);
  7741  000764  0E00               	movlw	0
  7742  000766  0100               	movlb	0	; () banked
  7743  000768  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  7744  00076A  0ED1               	movlw	209
  7745  00076C  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  7746  00076E  EC81  F01D         	call	_I2C_Master_Write	;wreg free
  7747                           
  7748                           ;main.c: 638:                         for(unsigned char i = 0; i < 6; i++){
  7749  000772  0E00               	movlw	0
  7750  000774  0101               	movlb	1	; () banked
  7751  000776  6F59               	movwf	UI_main@i& (0+255),b
  7752  000778                     l7848:
  7753                           
  7754                           ; BSR set to: 1
  7755  000778  0E05               	movlw	5
  7756  00077A  6559               	cpfsgt	UI_main@i& (0+255),b
  7757  00077C  D001               	goto	l7852
  7758  00077E  D00D               	goto	l7858
  7759  000780                     l7852:
  7760                           
  7761                           ; BSR set to: 1
  7762                           ;main.c: 639:                             time[i] = I2C_Master_Read(0);
  7763  000780  0E64               	movlw	low _time
  7764  000782  2559               	addwf	UI_main@i& (0+255),w,b
  7765  000784  6ED9               	movwf	fsr2l,c
  7766  000786  6ADA               	clrf	fsr2h,c
  7767  000788  0E01               	movlw	high _time
  7768  00078A  22DA               	addwfc	fsr2h,f,c
  7769  00078C  0E00               	movlw	0
  7770  00078E  ECEB  F01C         	call	_I2C_Master_Read
  7771  000792  6EDF               	movwf	indf2,c
  7772                           
  7773                           ;main.c: 640:                         }
  7774  000794  0101               	movlb	1	; () banked
  7775  000796  2B59               	incf	UI_main@i& (0+255),f,b
  7776  000798  D7EF               	goto	l7848
  7777  00079A                     l7858:
  7778                           
  7779                           ; BSR set to: 1
  7780                           ;main.c: 641:                         time[6] = I2C_Master_Read(1);
  7781  00079A  0E01               	movlw	1
  7782  00079C  ECEB  F01C         	call	_I2C_Master_Read
  7783  0007A0  0101               	movlb	1	; () banked
  7784  0007A2  6F6A               	movwf	(_time+6)& (0+255),b
  7785                           
  7786                           ;main.c: 642:                         I2C_Master_Stop();
  7787  0007A4  EC86  F01D         	call	_I2C_Master_Stop	;wreg free
  7788  0007A8  0EC0               	movlw	192
  7789  0007AA  EC79  F01D         	call	_lcdInst
  7790                           
  7791                           ;main.c: 646:                         printf("%02x/%02x/%02x", time[6],time[5],time[4]);
  7792  0007AE  0ED7               	movlw	low STR_50
  7793  0007B0  0100               	movlb	0	; () banked
  7794  0007B2  6FED               	movwf	printf@fmt& (0+255),b
  7795  0007B4  0EFB               	movlw	high STR_50
  7796  0007B6  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7797  0007B8  C16A  F0EF         	movff	_time+6,?_printf+2
  7798  0007BC  6BF0               	clrf	(?_printf+3)& (0+255),b
  7799  0007BE  C169  F0F1         	movff	_time+5,?_printf+4
  7800  0007C2  6BF2               	clrf	(?_printf+5)& (0+255),b
  7801  0007C4  C168  F0F3         	movff	_time+4,?_printf+6
  7802  0007C8  6BF4               	clrf	(?_printf+7)& (0+255),b
  7803  0007CA  EC00  F01D         	call	_printf	;wreg free
  7804  0007CE  0E90               	movlw	144
  7805  0007D0  EC79  F01D         	call	_lcdInst
  7806                           
  7807                           ;main.c: 648:                         printf("%02x:%02x:%02x", time[2],time[1],time[0]);
  7808  0007D4  0EE6               	movlw	low STR_51
  7809  0007D6  0100               	movlb	0	; () banked
  7810  0007D8  6FED               	movwf	printf@fmt& (0+255),b
  7811  0007DA  0EFB               	movlw	high STR_51
  7812  0007DC  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7813  0007DE  C166  F0EF         	movff	_time+2,?_printf+2
  7814  0007E2  6BF0               	clrf	(?_printf+3)& (0+255),b
  7815  0007E4  C165  F0F1         	movff	_time+1,?_printf+4
  7816  0007E8  6BF2               	clrf	(?_printf+5)& (0+255),b
  7817  0007EA  C164  F0F3         	movff	_time,?_printf+6
  7818  0007EE  6BF4               	clrf	(?_printf+7)& (0+255),b
  7819  0007F0  EC00  F01D         	call	_printf	;wreg free
  7820  0007F4  0ED0               	movlw	208
  7821  0007F6  EC79  F01D         	call	_lcdInst
  7822                           
  7823                           ;main.c: 650:                         printf("     0-Menu     ");
  7824  0007FA  0E14               	movlw	low STR_31
  7825  0007FC  0100               	movlb	0	; () banked
  7826  0007FE  6FED               	movwf	printf@fmt& (0+255),b
  7827  000800  0EFB               	movlw	high STR_31
  7828  000802  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7829  000804  EC00  F01D         	call	_printf	;wreg free
  7830  000808                     l7868:
  7831                           
  7832                           ;main.c: 653:                     tick++;
  7833  000808  0E01               	movlw	1
  7834  00080A  0101               	movlb	1	; () banked
  7835  00080C  2755               	addwf	UI_main@tick& (0+255),f,b
  7836  00080E  0E00               	movlw	0
  7837  000810  2356               	addwfc	(UI_main@tick+1)& (0+255),f,b
  7838  000812  2357               	addwfc	(UI_main@tick+2)& (0+255),f,b
  7839  000814  2358               	addwfc	(UI_main@tick+3)& (0+255),f,b
  7840  000816                     l7870:
  7841                           
  7842                           ; BSR set to: 1
  7843                           ;main.c: 626:                 while(~key_was_pressed){
  7844  000816  0577               	decf	_key_was_pressed& (0+255),w,b	;volatile
  7845  000818  A4D8               	btfss	status,2,c
  7846  00081A  D758               	goto	l7824
  7847  00081C                     u8460:
  7848                           
  7849                           ;main.c: 521:     while(sens==0){
  7850  00081C  5058               	movf	_sens,w,c	;volatile
  7851  00081E  1059               	iorwf	_sens+1,w,c	;volatile
  7852  000820  A4D8               	btfss	status,2,c
  7853  000822  0012               	return	
  7854  000824  D44B               	goto	l7652
  7855  000826                     __end_of_UI_main:
  7856                           	opt callstack 0
  7857                           
  7858 ;; *************** function _printf *****************
  7859 ;; Defined at:
  7860 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  7861 ;; Parameters:    Size  Location     Type
  7862 ;;  fmt             2  109[BANK0 ] PTR const unsigned char 
  7863 ;;		 -> STR_61(10), STR_60(11), STR_59(11), STR_58(12), 
  7864 ;;		 -> STR_57(12), STR_56(10), STR_55(10), STR_54(13), 
  7865 ;;		 -> STR_53(8), STR_52(17), STR_51(15), STR_50(15), 
  7866 ;;		 -> STR_49(12), STR_48(17), STR_47(12), STR_46(15), 
  7867 ;;		 -> STR_45(18), STR_44(17), STR_43(12), STR_42(15), 
  7868 ;;		 -> STR_41(18), STR_40(17), STR_39(14), STR_38(14), 
  7869 ;;		 -> STR_37(17), STR_36(3), STR_35(9), STR_34(16), 
  7870 ;;		 -> STR_33(3), STR_32(9), STR_31(17), STR_30(15), 
  7871 ;;		 -> STR_29(15), STR_28(12), STR_27(10), STR_26(15), 
  7872 ;;		 -> STR_25(12), STR_24(10), STR_23(16), STR_22(12), 
  7873 ;;		 -> STR_21(3), STR_20(11), STR_19(8), STR_18(13), 
  7874 ;;		 -> STR_17(10), STR_16(17), STR_15(10), STR_14(16), 
  7875 ;;		 -> STR_13(10), STR_12(16), STR_11(10), STR_10(17), 
  7876 ;;		 -> STR_9(5), STR_8(10), STR_7(14), STR_6(6), 
  7877 ;;		 -> STR_5(10), STR_4(10), STR_3(11), STR_2(13), 
  7878 ;;		 -> STR_1(10), 
  7879 ;; Auto vars:     Size  Location     Type
  7880 ;;  ap              2  119[BANK0 ] PTR void [1]
  7881 ;;		 -> ?_printf(2), 
  7882 ;;  ret             2    0        int 
  7883 ;; Return value:  Size  Location     Type
  7884 ;;                  2  109[BANK0 ] int 
  7885 ;; Registers used:
  7886 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7887 ;; Tracked objects:
  7888 ;;		On entry : 0/0
  7889 ;;		On exit  : 0/0
  7890 ;;		Unchanged: 0/0
  7891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7892 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7893 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7895 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7896 ;;Total ram usage:       12 bytes
  7897 ;; Hardware stack levels used:    1
  7898 ;; Hardware stack levels required when called:   13
  7899 ;; This function calls:
  7900 ;;		_vfprintf
  7901 ;; This function is called by:
  7902 ;;		_actuators_main
  7903 ;;		_stepper2
  7904 ;;		_stepper2_back
  7905 ;;		_full_drive
  7906 ;;		_print_echo
  7907 ;;		_ultrasonic_main
  7908 ;;		_number_deploy
  7909 ;;		_UI_main
  7910 ;;		_main
  7911 ;; This function uses a non-reentrant model
  7912 ;;
  7913                           
  7914                           	psect	text20
  7915  003A00                     __ptext20:
  7916                           	opt callstack 0
  7917  003A00                     _printf:
  7918                           	opt callstack 16
  7919                           
  7920                           ;incstack = 0
  7921  003A00  0EEF               	movlw	low (?_printf+2)
  7922  003A02  0100               	movlb	0	; () banked
  7923  003A04  6FF7               	movwf	printf@ap& (0+255),b
  7924  003A06  0E00               	movlw	high (?_printf+2)
  7925  003A08  6FF8               	movwf	(printf@ap+1)& (0+255),b
  7926                           
  7927                           ; BSR set to: 0
  7928  003A0A  0E00               	movlw	0
  7929  003A0C  6FE5               	movwf	vfprintf@fp& (0+255),b
  7930  003A0E  0E00               	movlw	0
  7931  003A10  6FE6               	movwf	(vfprintf@fp+1)& (0+255),b
  7932  003A12  C0ED  F0E7         	movff	printf@fmt,vfprintf@fmt
  7933  003A16  C0EE  F0E8         	movff	printf@fmt+1,vfprintf@fmt+1
  7934  003A1A  0EF7               	movlw	low printf@ap
  7935  003A1C  6FE9               	movwf	vfprintf@ap& (0+255),b
  7936  003A1E  0E00               	movlw	high printf@ap
  7937  003A20  6FEA               	movwf	(vfprintf@ap+1)& (0+255),b
  7938  003A22  EC0F  F01B         	call	_vfprintf	;wreg free
  7939  003A26  0012               	return		;funcret
  7940  003A28                     __end_of_printf:
  7941                           	opt callstack 0
  7942                           
  7943 ;; *************** function _vfprintf *****************
  7944 ;; Defined at:
  7945 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7946 ;; Parameters:    Size  Location     Type
  7947 ;;  fp              2  101[BANK0 ] PTR struct _IO_FILE
  7948 ;;		 -> NULL(0), 
  7949 ;;  fmt             2  103[BANK0 ] PTR const unsigned char 
  7950 ;;		 -> STR_61(10), STR_60(11), STR_59(11), STR_58(12), 
  7951 ;;		 -> STR_57(12), STR_56(10), STR_55(10), STR_54(13), 
  7952 ;;		 -> STR_53(8), STR_52(17), STR_51(15), STR_50(15), 
  7953 ;;		 -> STR_49(12), STR_48(17), STR_47(12), STR_46(15), 
  7954 ;;		 -> STR_45(18), STR_44(17), STR_43(12), STR_42(15), 
  7955 ;;		 -> STR_41(18), STR_40(17), STR_39(14), STR_38(14), 
  7956 ;;		 -> STR_37(17), STR_36(3), STR_35(9), STR_34(16), 
  7957 ;;		 -> STR_33(3), STR_32(9), STR_31(17), STR_30(15), 
  7958 ;;		 -> STR_29(15), STR_28(12), STR_27(10), STR_26(15), 
  7959 ;;		 -> STR_25(12), STR_24(10), STR_23(16), STR_22(12), 
  7960 ;;		 -> STR_21(3), STR_20(11), STR_19(8), STR_18(13), 
  7961 ;;		 -> STR_17(10), STR_16(17), STR_15(10), STR_14(16), 
  7962 ;;		 -> STR_13(10), STR_12(16), STR_11(10), STR_10(17), 
  7963 ;;		 -> STR_9(5), STR_8(10), STR_7(14), STR_6(6), 
  7964 ;;		 -> STR_5(10), STR_4(10), STR_3(11), STR_2(13), 
  7965 ;;		 -> STR_1(10), 
  7966 ;;  ap              2  105[BANK0 ] PTR PTR void 
  7967 ;;		 -> printf@ap(2), 
  7968 ;; Auto vars:     Size  Location     Type
  7969 ;;  cfmt            2  107[BANK0 ] PTR unsigned char 
  7970 ;;		 -> STR_61(10), STR_60(11), STR_59(11), STR_58(12), 
  7971 ;;		 -> STR_57(12), STR_56(10), STR_55(10), STR_54(13), 
  7972 ;;		 -> STR_53(8), STR_52(17), STR_51(15), STR_50(15), 
  7973 ;;		 -> STR_49(12), STR_48(17), STR_47(12), STR_46(15), 
  7974 ;;		 -> STR_45(18), STR_44(17), STR_43(12), STR_42(15), 
  7975 ;;		 -> STR_41(18), STR_40(17), STR_39(14), STR_38(14), 
  7976 ;;		 -> STR_37(17), STR_36(3), STR_35(9), STR_34(16), 
  7977 ;;		 -> STR_33(3), STR_32(9), STR_31(17), STR_30(15), 
  7978 ;;		 -> STR_29(15), STR_28(12), STR_27(10), STR_26(15), 
  7979 ;;		 -> STR_25(12), STR_24(10), STR_23(16), STR_22(12), 
  7980 ;;		 -> STR_21(3), STR_20(11), STR_19(8), STR_18(13), 
  7981 ;;		 -> STR_17(10), STR_16(17), STR_15(10), STR_14(16), 
  7982 ;;		 -> STR_13(10), STR_12(16), STR_11(10), STR_10(17), 
  7983 ;;		 -> STR_9(5), STR_8(10), STR_7(14), STR_6(6), 
  7984 ;;		 -> STR_5(10), STR_4(10), STR_3(11), STR_2(13), 
  7985 ;;		 -> STR_1(10), 
  7986 ;; Return value:  Size  Location     Type
  7987 ;;                  2  101[BANK0 ] int 
  7988 ;; Registers used:
  7989 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7990 ;; Tracked objects:
  7991 ;;		On entry : 0/0
  7992 ;;		On exit  : 0/0
  7993 ;;		Unchanged: 0/0
  7994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7995 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7996 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7998 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7999 ;;Total ram usage:        8 bytes
  8000 ;; Hardware stack levels used:    1
  8001 ;; Hardware stack levels required when called:   12
  8002 ;; This function calls:
  8003 ;;		_vfpfcnvrt
  8004 ;; This function is called by:
  8005 ;;		_printf
  8006 ;; This function uses a non-reentrant model
  8007 ;;
  8008                           
  8009                           	psect	text21
  8010  00361E                     __ptext21:
  8011                           	opt callstack 0
  8012  00361E                     _vfprintf:
  8013                           	opt callstack 16
  8014                           
  8015                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  8016                           
  8017                           ;incstack = 0
  8018  00361E  C0E7  F0EB         	movff	vfprintf@fmt,vfprintf@cfmt
  8019  003622  C0E8  F0EC         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  8020                           
  8021                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  8022  003626  0E00               	movlw	0
  8023  003628  6E49               	movwf	_nout+1,c
  8024  00362A  0E00               	movlw	0
  8025  00362C  6E48               	movwf	_nout,c
  8026                           
  8027                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  8028  00362E  D014               	goto	l6720
  8029  003630                     l6718:
  8030                           
  8031                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  8032  003630  C0E5  F0C6         	movff	vfprintf@fp,vfpfcnvrt@fp
  8033  003634  C0E6  F0C7         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  8034  003638  0EEB               	movlw	low vfprintf@cfmt
  8035  00363A  0100               	movlb	0	; () banked
  8036  00363C  6FC8               	movwf	vfpfcnvrt@fmt& (0+255),b
  8037  00363E  0E00               	movlw	high vfprintf@cfmt
  8038  003640  6FC9               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  8039  003642  C0E9  F0CA         	movff	vfprintf@ap,vfpfcnvrt@ap
  8040  003646  C0EA  F0CB         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  8041  00364A  EC36  F009         	call	_vfpfcnvrt	;wreg free
  8042  00364E  0100               	movlb	0	; () banked
  8043  003650  51C6               	movf	?_vfpfcnvrt& (0+255),w,b
  8044  003652  2648               	addwf	_nout,f,c
  8045  003654  51C7               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  8046  003656  2249               	addwfc	_nout+1,f,c
  8047  003658                     l6720:
  8048                           
  8049                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  8050  003658  C0EB  FFF6         	movff	vfprintf@cfmt,tblptrl
  8051  00365C  C0EC  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  8052  003660                     	if	0	;tblptru may be non-zero
  8053  003660                     	endif
  8054  003660                     	if	0	;tblptru may be non-zero
  8055  003660                     	endif
  8056  003660  0008               	tblrd		*
  8057  003662  50F5               	movf	tablat,w,c
  8058  003664  0900               	iorlw	0
  8059  003666  A4D8               	btfss	status,2,c
  8060  003668  D7E3               	goto	l6718
  8061                           
  8062                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  8063  00366A  C048  F0E5         	movff	_nout,?_vfprintf
  8064  00366E  C049  F0E6         	movff	_nout+1,?_vfprintf+1
  8065  003672  0012               	return		;funcret
  8066  003674                     __end_of_vfprintf:
  8067                           	opt callstack 0
  8068                           
  8069 ;; *************** function _vfpfcnvrt *****************
  8070 ;; Defined at:
  8071 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8072 ;; Parameters:    Size  Location     Type
  8073 ;;  fp              2   70[BANK0 ] PTR struct _IO_FILE
  8074 ;;		 -> NULL(0), 
  8075 ;;  fmt             2   72[BANK0 ] PTR PTR unsigned char 
  8076 ;;		 -> vfprintf@cfmt(2), 
  8077 ;;  ap              2   74[BANK0 ] PTR PTR void 
  8078 ;;		 -> printf@ap(2), 
  8079 ;; Auto vars:     Size  Location     Type
  8080 ;;  llu             8   88[BANK0 ] unsigned long long 
  8081 ;;  ll              8   80[BANK0 ] long long 
  8082 ;;  f               4    0        long long 
  8083 ;;  vp              3    0        PTR void 
  8084 ;;  ct              3    0        unsigned char [3]
  8085 ;;  cp              3    0        PTR unsigned char 
  8086 ;;  done            2   97[BANK0 ] int 
  8087 ;;  i               2    0        int 
  8088 ;;  c               1   96[BANK0 ] unsigned char 
  8089 ;; Return value:  Size  Location     Type
  8090 ;;                  2   70[BANK0 ] int 
  8091 ;; Registers used:
  8092 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8093 ;; Tracked objects:
  8094 ;;		On entry : 0/0
  8095 ;;		On exit  : 0/0
  8096 ;;		Unchanged: 0/0
  8097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8098 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8099 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8100 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8101 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8102 ;;Total ram usage:       31 bytes
  8103 ;; Hardware stack levels used:    1
  8104 ;; Hardware stack levels required when called:   11
  8105 ;; This function calls:
  8106 ;;		_atoi
  8107 ;;		_dtoa
  8108 ;;		_fputc
  8109 ;;		_isdigit
  8110 ;;		_xtoa
  8111 ;; This function is called by:
  8112 ;;		_vfprintf
  8113 ;; This function uses a non-reentrant model
  8114 ;;
  8115                           
  8116                           	psect	text22
  8117  00126C                     __ptext22:
  8118                           	opt callstack 0
  8119  00126C                     _vfpfcnvrt:
  8120                           	opt callstack 16
  8121                           
  8122                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  8123                           
  8124                           ;incstack = 0
  8125  00126C  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8126  001270  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8127  001274  CFDE FFF6          	movff	postinc2,tblptrl
  8128  001278  CFDD FFF7          	movff	postdec2,tblptrh
  8129  00127C                     	if	0	;tblptru may be non-zero
  8130  00127C                     	endif
  8131  00127C                     	if	0	;tblptru may be non-zero
  8132  00127C                     	endif
  8133  00127C  0008               	tblrd		*
  8134  00127E  50F5               	movf	tablat,w,c
  8135  001280  0A25               	xorlw	37
  8136  001282  A4D8               	btfss	status,2,c
  8137  001284  D1AD               	goto	l6698
  8138                           
  8139                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  8140  001286  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8141  00128A  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8142  00128E  2ADE               	incf	postinc2,f,c
  8143  001290  0E00               	movlw	0
  8144  001292  22DD               	addwfc	postdec2,f,c
  8145                           
  8146                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  8147  001294  0E00               	movlw	0
  8148  001296  6E4B               	movwf	_width+1,c
  8149  001298  0E00               	movlw	0
  8150  00129A  6E4A               	movwf	_width,c
  8151  00129C  C04A  F04E         	movff	_width,_flags
  8152  0012A0  C04B  F04F         	movff	_width+1,_flags+1
  8153                           
  8154                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  8155  0012A4  684C               	setf	_prec,c
  8156  0012A6  684D               	setf	_prec+1,c
  8157                           
  8158                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  8159  0012A8  0E00               	movlw	0
  8160  0012AA  0100               	movlb	0	; () banked
  8161  0012AC  6FE2               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  8162  0012AE  0E00               	movlw	0
  8163  0012B0  D014               	goto	L3
  8164  0012B2                     l6610:
  8165                           
  8166                           ; BSR set to: 0
  8167                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  8168  0012B2  804E               	bsf	_flags,0,c
  8169  0012B4                     l6612:
  8170                           
  8171                           ; BSR set to: 0
  8172                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  8173  0012B4  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8174  0012B8  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8175  0012BC  2ADE               	incf	postinc2,f,c
  8176  0012BE  0E00               	movlw	0
  8177  0012C0  22DD               	addwfc	postdec2,f,c
  8178                           
  8179                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  8180  0012C2  D02E               	goto	l6636
  8181  0012C4                     l6614:
  8182                           
  8183                           ; BSR set to: 0
  8184                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  8185  0012C4  824E               	bsf	_flags,1,c
  8186  0012C6  D7F6               	goto	l6612
  8187  0012C8                     l6618:
  8188                           
  8189                           ; BSR set to: 0
  8190                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  8191  0012C8  844E               	bsf	_flags,2,c
  8192  0012CA  D7F4               	goto	l6612
  8193  0012CC                     l6622:
  8194                           
  8195                           ; BSR set to: 0
  8196                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  8197  0012CC  864E               	bsf	_flags,3,c
  8198  0012CE  D7F2               	goto	l6612
  8199  0012D0                     l6626:
  8200                           
  8201                           ; BSR set to: 0
  8202                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  8203  0012D0  884E               	bsf	_flags,4,c
  8204  0012D2  D7F0               	goto	l6612
  8205  0012D4                     l6630:
  8206                           
  8207                           ; BSR set to: 0
  8208                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  8209  0012D4  0E00               	movlw	0
  8210  0012D6  6FE2               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  8211  0012D8  0E01               	movlw	1
  8212  0012DA                     L3:
  8213  0012DA  6FE1               	movwf	vfpfcnvrt@done& (0+255),b
  8214                           
  8215                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  8216  0012DC  D021               	goto	l6636
  8217  0012DE                     l6634:
  8218                           
  8219                           ; BSR set to: 0
  8220  0012DE  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8221  0012E2  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8222  0012E6  CFDE FFF6          	movff	postinc2,tblptrl
  8223  0012EA  CFDD FFF7          	movff	postdec2,tblptrh
  8224  0012EE                     	if	0	;tblptru may be non-zero
  8225  0012EE                     	endif
  8226  0012EE                     	if	0	;tblptru may be non-zero
  8227  0012EE                     	endif
  8228  0012EE  0008               	tblrd		*
  8229  0012F0  50F5               	movf	tablat,w,c
  8230  0012F2  6FCC               	movwf	??_vfpfcnvrt& (0+255),b
  8231  0012F4  6BCD               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  8232                           
  8233                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8234                           ; Switch size 1, requested type "simple"
  8235                           ; Number of cases is 1, Range of values is 0 to 0
  8236                           ; switch strategies available:
  8237                           ; Name         Instructions Cycles
  8238                           ; simple_byte            4     3 (average)
  8239                           ;	Chosen strategy is simple_byte
  8240  0012F6  51CD               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  8241  0012F8  0A00               	xorlw	0	; case 0
  8242  0012FA  A4D8               	btfss	status,2,c
  8243  0012FC  D7EB               	goto	l6630
  8244                           
  8245                           ; BSR set to: 0
  8246                           ; Switch size 1, requested type "simple"
  8247                           ; Number of cases is 5, Range of values is 32 to 48
  8248                           ; switch strategies available:
  8249                           ; Name         Instructions Cycles
  8250                           ; simple_byte           16     9 (average)
  8251                           ;	Chosen strategy is simple_byte
  8252  0012FE  51CC               	movf	??_vfpfcnvrt& (0+255),w,b
  8253  001300  0A20               	xorlw	32	; case 32
  8254  001302  B4D8               	btfsc	status,2,c
  8255  001304  D7E3               	goto	l6622
  8256  001306  0A03               	xorlw	3	; case 35
  8257  001308  B4D8               	btfsc	status,2,c
  8258  00130A  D7E2               	goto	l6626
  8259  00130C  0A08               	xorlw	8	; case 43
  8260  00130E  B4D8               	btfsc	status,2,c
  8261  001310  D7DB               	goto	l6618
  8262  001312  0A06               	xorlw	6	; case 45
  8263  001314  B4D8               	btfsc	status,2,c
  8264  001316  D7CD               	goto	l6610
  8265  001318  0A1D               	xorlw	29	; case 48
  8266  00131A  B4D8               	btfsc	status,2,c
  8267  00131C  D7D3               	goto	l6614
  8268  00131E  D7DA               	goto	l6630
  8269  001320                     l6636:
  8270                           
  8271                           ; BSR set to: 0
  8272                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  8273  001320  51E1               	movf	vfpfcnvrt@done& (0+255),w,b
  8274  001322  11E2               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  8275  001324  B4D8               	btfsc	status,2,c
  8276  001326  D7DB               	goto	l6634
  8277                           
  8278                           ; BSR set to: 0
  8279                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  8280  001328  B04E               	btfsc	_flags,0,c
  8281                           
  8282                           ; BSR set to: 0
  8283                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  8284  00132A  924E               	bcf	_flags,1,c
  8285                           
  8286                           ; BSR set to: 0
  8287                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  8288  00132C  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8289  001330  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8290  001334  CFDE FFF6          	movff	postinc2,tblptrl
  8291  001338  CFDD FFF7          	movff	postdec2,tblptrh
  8292  00133C                     	if	0	;tblptru may be non-zero
  8293  00133C                     	endif
  8294  00133C                     	if	0	;tblptru may be non-zero
  8295  00133C                     	endif
  8296  00133C  0008               	tblrd		*
  8297  00133E  50F5               	movf	tablat,w,c
  8298  001340  0A2A               	xorlw	42
  8299  001342  A4D8               	btfss	status,2,c
  8300  001344  D023               	goto	l6648
  8301                           
  8302                           ; BSR set to: 0
  8303                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  8304  001346  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8305  00134A  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8306  00134E  2ADE               	incf	postinc2,f,c
  8307  001350  0E00               	movlw	0
  8308  001352  22DD               	addwfc	postdec2,f,c
  8309                           
  8310                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  8311  001354  C0CA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8312  001358  C0CB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8313  00135C  CFDF F0CC          	movff	indf2,??_vfpfcnvrt
  8314  001360  0E02               	movlw	2
  8315  001362  26DE               	addwf	postinc2,f,c
  8316  001364  CFDF F0CD          	movff	indf2,??_vfpfcnvrt+1
  8317  001368  0E00               	movlw	0
  8318  00136A  22DD               	addwfc	postdec2,f,c
  8319  00136C  C0CC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8320  001370  C0CD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8321  001374  CFDE F04A          	movff	postinc2,_width
  8322  001378  CFDD F04B          	movff	postdec2,_width+1
  8323                           
  8324                           ; BSR set to: 0
  8325                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  8326  00137C  AE4B               	btfss	_width+1,7,c
  8327  00137E  D040               	goto	u7270
  8328                           
  8329                           ; BSR set to: 0
  8330                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  8331  001380  804E               	bsf	_flags,0,c
  8332                           
  8333                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  8334  001382  6C4A               	negf	_width,c
  8335  001384  1E4B               	comf	_width+1,f,c
  8336  001386  B0D8               	btfsc	status,0,c
  8337  001388  2A4B               	incf	_width+1,f,c
  8338  00138A  D03A               	goto	u7270
  8339  00138C                     l6648:
  8340                           
  8341                           ; BSR set to: 0
  8342                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  8343  00138C  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8344  001390  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8345  001394  CFDE F087          	movff	postinc2,atoi@s
  8346  001398  CFDD F088          	movff	postdec2,atoi@s+1
  8347  00139C  ECE9  F013         	call	_atoi	;wreg free
  8348  0013A0  C087  F04A         	movff	?_atoi,_width
  8349  0013A4  C088  F04B         	movff	?_atoi+1,_width+1
  8350                           
  8351                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  8352  0013A8  D007               	goto	l6652
  8353  0013AA                     l6650:
  8354                           
  8355                           ; BSR set to: 0
  8356                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  8357  0013AA  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8358  0013AE  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8359  0013B2  2ADE               	incf	postinc2,f,c
  8360  0013B4  0E00               	movlw	0
  8361  0013B6  22DD               	addwfc	postdec2,f,c
  8362  0013B8                     l6652:
  8363  0013B8  0ED0               	movlw	208
  8364  0013BA  0100               	movlb	0	; () banked
  8365  0013BC  6FCC               	movwf	??_vfpfcnvrt& (0+255),b
  8366  0013BE  0EFF               	movlw	255
  8367  0013C0  6FCD               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  8368  0013C2  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8369  0013C6  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8370  0013CA  CFDE FFF6          	movff	postinc2,tblptrl
  8371  0013CE  CFDD FFF7          	movff	postdec2,tblptrh
  8372  0013D2                     	if	0	;tblptru may be non-zero
  8373  0013D2                     	endif
  8374  0013D2                     	if	0	;tblptru may be non-zero
  8375  0013D2                     	endif
  8376  0013D2  0008               	tblrd		*
  8377  0013D4  50F5               	movf	tablat,w,c
  8378  0013D6  6FCE               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  8379  0013D8  6BCF               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  8380  0013DA  51CC               	movf	??_vfpfcnvrt& (0+255),w,b
  8381  0013DC  27CE               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  8382  0013DE  51CD               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  8383  0013E0  23CF               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  8384  0013E2  51CF               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  8385  0013E4  E106               	bnz	u7250
  8386  0013E6  0E0A               	movlw	10
  8387  0013E8  5DCE               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  8388  0013EA  B0D8               	btfsc	status,0,c
  8389  0013EC  D002               	goto	u7250
  8390  0013EE  0E01               	movlw	1
  8391  0013F0  D001               	goto	u7260
  8392  0013F2                     u7250:
  8393  0013F2  0E00               	movlw	0
  8394  0013F4                     u7260:
  8395  0013F4  6FE3               	movwf	_vfpfcnvrt$1125& (0+255),b
  8396  0013F6  6BE4               	clrf	(_vfpfcnvrt$1125+1)& (0+255),b
  8397                           
  8398                           ; BSR set to: 0
  8399  0013F8  51E3               	movf	_vfpfcnvrt$1125& (0+255),w,b
  8400  0013FA  11E4               	iorwf	(_vfpfcnvrt$1125+1)& (0+255),w,b
  8401  0013FC  A4D8               	btfss	status,2,c
  8402  0013FE  D7D5               	goto	l6650
  8403  001400                     u7270:
  8404                           
  8405                           ; BSR set to: 0
  8406                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  8407  001400  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8408  001404  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8409  001408  CFDE FFF6          	movff	postinc2,tblptrl
  8410  00140C  CFDD FFF7          	movff	postdec2,tblptrh
  8411  001410                     	if	0	;tblptru may be non-zero
  8412  001410                     	endif
  8413  001410                     	if	0	;tblptru may be non-zero
  8414  001410                     	endif
  8415  001410  0008               	tblrd		*
  8416  001412  50F5               	movf	tablat,w,c
  8417  001414  0A64               	xorlw	100
  8418  001416  B4D8               	btfsc	status,2,c
  8419  001418  D00D               	goto	u7290
  8420                           
  8421                           ; BSR set to: 0
  8422  00141A  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8423  00141E  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8424  001422  CFDE FFF6          	movff	postinc2,tblptrl
  8425  001426  CFDD FFF7          	movff	postdec2,tblptrh
  8426  00142A                     	if	0	;tblptru may be non-zero
  8427  00142A                     	endif
  8428  00142A                     	if	0	;tblptru may be non-zero
  8429  00142A                     	endif
  8430  00142A  0008               	tblrd		*
  8431  00142C  50F5               	movf	tablat,w,c
  8432  00142E  0A69               	xorlw	105
  8433  001430  A4D8               	btfss	status,2,c
  8434  001432  D03F               	goto	l6668
  8435  001434                     u7290:
  8436                           
  8437                           ; BSR set to: 0
  8438                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  8439  001434  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8440  001438  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8441  00143C  2ADE               	incf	postinc2,f,c
  8442  00143E  0E00               	movlw	0
  8443  001440  22DD               	addwfc	postdec2,f,c
  8444                           
  8445                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  8446  001442  C0CA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8447  001446  C0CB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8448  00144A  CFDF F0CC          	movff	indf2,??_vfpfcnvrt
  8449  00144E  0E02               	movlw	2
  8450  001450  26DE               	addwf	postinc2,f,c
  8451  001452  CFDF F0CD          	movff	indf2,??_vfpfcnvrt+1
  8452  001456  0E00               	movlw	0
  8453  001458  22DD               	addwfc	postdec2,f,c
  8454  00145A  C0CC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8455  00145E  C0CD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8456  001462  CFDE F0D0          	movff	postinc2,vfpfcnvrt@ll
  8457  001466  CFDD F0D1          	movff	postdec2,vfpfcnvrt@ll+1
  8458  00146A  0E00               	movlw	0
  8459  00146C  BFD1               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  8460  00146E  0EFF               	movlw	-1
  8461  001470  6FD2               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  8462  001472  6FD3               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  8463  001474  6FD4               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  8464  001476  6FD5               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  8465  001478  6FD6               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  8466  00147A  6FD7               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  8467                           
  8468                           ; BSR set to: 0
  8469                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  8470  00147C  C0C6  F09F         	movff	vfpfcnvrt@fp,dtoa@fp
  8471  001480  C0C7  F0A0         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  8472  001484  C0D0  F0A1         	movff	vfpfcnvrt@ll,dtoa@d
  8473  001488  C0D1  F0A2         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  8474  00148C  C0D2  F0A3         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  8475  001490  C0D3  F0A4         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  8476  001494  C0D4  F0A5         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  8477  001498  C0D5  F0A6         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  8478  00149C  C0D6  F0A7         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  8479  0014A0  C0D7  F0A8         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  8480  0014A4  ECE7  F00D         	call	_dtoa	;wreg free
  8481  0014A8  C09F  F0C6         	movff	?_dtoa,?_vfpfcnvrt
  8482  0014AC  C0A0  F0C7         	movff	?_dtoa+1,?_vfpfcnvrt+1
  8483  0014B0  0012               	return	
  8484  0014B2                     l6668:
  8485                           
  8486                           ; BSR set to: 0
  8487                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  8488  0014B2  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8489  0014B6  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8490  0014BA  CFDE FFF6          	movff	postinc2,tblptrl
  8491  0014BE  CFDD FFF7          	movff	postdec2,tblptrh
  8492  0014C2                     	if	0	;tblptru may be non-zero
  8493  0014C2                     	endif
  8494  0014C2                     	if	0	;tblptru may be non-zero
  8495  0014C2                     	endif
  8496  0014C2  0008               	tblrd		*
  8497  0014C4  50F5               	movf	tablat,w,c
  8498  0014C6  0A78               	xorlw	120
  8499  0014C8  B4D8               	btfsc	status,2,c
  8500  0014CA  D00D               	goto	u7310
  8501                           
  8502                           ; BSR set to: 0
  8503  0014CC  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8504  0014D0  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8505  0014D4  CFDE FFF6          	movff	postinc2,tblptrl
  8506  0014D8  CFDD FFF7          	movff	postdec2,tblptrh
  8507  0014DC                     	if	0	;tblptru may be non-zero
  8508  0014DC                     	endif
  8509  0014DC                     	if	0	;tblptru may be non-zero
  8510  0014DC                     	endif
  8511  0014DC  0008               	tblrd		*
  8512  0014DE  50F5               	movf	tablat,w,c
  8513  0014E0  0A58               	xorlw	88
  8514  0014E2  A4D8               	btfss	status,2,c
  8515  0014E4  D04D               	goto	l6682
  8516  0014E6                     u7310:
  8517                           
  8518                           ; BSR set to: 0
  8519                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  8520  0014E6  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8521  0014EA  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8522  0014EE  CFDE FFF6          	movff	postinc2,tblptrl
  8523  0014F2  CFDD FFF7          	movff	postdec2,tblptrh
  8524  0014F6                     	if	0	;tblptru may be non-zero
  8525  0014F6                     	endif
  8526  0014F6                     	if	0	;tblptru may be non-zero
  8527  0014F6                     	endif
  8528  0014F6  0008               	tblrd		*
  8529  0014F8  CFF5 F0E0          	movff	tablat,vfpfcnvrt@c
  8530                           
  8531                           ; BSR set to: 0
  8532                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  8533  0014FC  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8534  001500  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8535  001504  2ADE               	incf	postinc2,f,c
  8536  001506  0E00               	movlw	0
  8537  001508  22DD               	addwfc	postdec2,f,c
  8538                           
  8539                           ; BSR set to: 0
  8540                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  8541  00150A  C0CA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8542  00150E  C0CB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8543  001512  CFDF F0CC          	movff	indf2,??_vfpfcnvrt
  8544  001516  0E02               	movlw	2
  8545  001518  26DE               	addwf	postinc2,f,c
  8546  00151A  CFDF F0CD          	movff	indf2,??_vfpfcnvrt+1
  8547  00151E  0E00               	movlw	0
  8548  001520  22DD               	addwfc	postdec2,f,c
  8549  001522  C0CC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8550  001526  C0CD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8551  00152A  CFDE F0CE          	movff	postinc2,??_vfpfcnvrt+2
  8552  00152E  CFDD F0CF          	movff	postdec2,??_vfpfcnvrt+3
  8553  001532  C0CE  F0D8         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  8554  001536  C0CF  F0D9         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  8555  00153A  6BDA               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  8556  00153C  6BDB               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  8557  00153E  6BDC               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  8558  001540  6BDD               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  8559  001542  6BDE               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  8560  001544  6BDF               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  8561                           
  8562                           ; BSR set to: 0
  8563                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
  8564  001546  C0C6  F09F         	movff	vfpfcnvrt@fp,xtoa@fp
  8565  00154A  C0C7  F0A0         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  8566  00154E  C0D8  F0A1         	movff	vfpfcnvrt@llu,xtoa@d
  8567  001552  C0D9  F0A2         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  8568  001556  C0DA  F0A3         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  8569  00155A  C0DB  F0A4         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  8570  00155E  C0DC  F0A5         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  8571  001562  C0DD  F0A6         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  8572  001566  C0DE  F0A7         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  8573  00156A  C0DF  F0A8         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  8574  00156E  C0E0  F0A9         	movff	vfpfcnvrt@c,xtoa@x
  8575  001572  EC0B  F00F         	call	_xtoa	;wreg free
  8576  001576  C09F  F0C6         	movff	?_xtoa,?_vfpfcnvrt
  8577  00157A  C0A0  F0C7         	movff	?_xtoa+1,?_vfpfcnvrt+1
  8578  00157E  0012               	return	
  8579  001580                     l6682:
  8580                           
  8581                           ; BSR set to: 0
  8582                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  8583  001580  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8584  001584  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8585  001588  CFDE FFF6          	movff	postinc2,tblptrl
  8586  00158C  CFDD FFF7          	movff	postdec2,tblptrh
  8587  001590                     	if	0	;tblptru may be non-zero
  8588  001590                     	endif
  8589  001590                     	if	0	;tblptru may be non-zero
  8590  001590                     	endif
  8591  001590  0008               	tblrd		*
  8592  001592  50F5               	movf	tablat,w,c
  8593  001594  0A25               	xorlw	37
  8594  001596  A4D8               	btfss	status,2,c
  8595  001598  D017               	goto	l6692
  8596                           
  8597                           ; BSR set to: 0
  8598                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  8599  00159A  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8600  00159E  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8601  0015A2  2ADE               	incf	postinc2,f,c
  8602  0015A4  0E00               	movlw	0
  8603  0015A6  22DD               	addwfc	postdec2,f,c
  8604                           
  8605                           ; BSR set to: 0
  8606                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  8607  0015A8  0E00               	movlw	0
  8608  0015AA  6F85               	movwf	(fputc@c+1)& (0+255),b
  8609  0015AC  0E25               	movlw	37
  8610  0015AE  6F84               	movwf	fputc@c& (0+255),b
  8611  0015B0  C0C6  F086         	movff	vfpfcnvrt@fp,fputc@fp
  8612  0015B4  C0C7  F087         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  8613  0015B8  EC1E  F01A         	call	_fputc	;wreg free
  8614  0015BC                     l6688:
  8615                           
  8616                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  8617  0015BC  0E00               	movlw	0
  8618  0015BE  0100               	movlb	0	; () banked
  8619  0015C0  6FC7               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  8620  0015C2  0E01               	movlw	1
  8621  0015C4  6FC6               	movwf	?_vfpfcnvrt& (0+255),b
  8622  0015C6  0012               	return	
  8623  0015C8                     l6692:
  8624                           
  8625                           ; BSR set to: 0
  8626                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  8627  0015C8  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8628  0015CC  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8629  0015D0  2ADE               	incf	postinc2,f,c
  8630  0015D2  0E00               	movlw	0
  8631  0015D4  22DD               	addwfc	postdec2,f,c
  8632                           
  8633                           ; BSR set to: 0
  8634                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  8635  0015D6  0E00               	movlw	0
  8636  0015D8  6FC7               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  8637  0015DA  0E00               	movlw	0
  8638  0015DC  6FC6               	movwf	?_vfpfcnvrt& (0+255),b
  8639  0015DE  0012               	return	
  8640  0015E0                     l6698:
  8641                           
  8642                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  8643  0015E0  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8644  0015E4  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8645  0015E8  CFDE FFF6          	movff	postinc2,tblptrl
  8646  0015EC  CFDD FFF7          	movff	postdec2,tblptrh
  8647  0015F0                     	if	0	;tblptru may be non-zero
  8648  0015F0                     	endif
  8649  0015F0                     	if	0	;tblptru may be non-zero
  8650  0015F0                     	endif
  8651  0015F0  0008               	tblrd		*
  8652  0015F2  50F5               	movf	tablat,w,c
  8653  0015F4  0100               	movlb	0	; () banked
  8654  0015F6  6F84               	movwf	fputc@c& (0+255),b
  8655  0015F8  6B85               	clrf	(fputc@c+1)& (0+255),b
  8656  0015FA  C0C6  F086         	movff	vfpfcnvrt@fp,fputc@fp
  8657  0015FE  C0C7  F087         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  8658  001602  EC1E  F01A         	call	_fputc	;wreg free
  8659                           
  8660                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  8661  001606  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8662  00160A  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8663  00160E  2ADE               	incf	postinc2,f,c
  8664  001610  0E00               	movlw	0
  8665  001612  22DD               	addwfc	postdec2,f,c
  8666  001614  D7D3               	goto	l6688
  8667  001616                     __end_of_vfpfcnvrt:
  8668                           	opt callstack 0
  8669                           
  8670 ;; *************** function _xtoa *****************
  8671 ;; Defined at:
  8672 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8673 ;; Parameters:    Size  Location     Type
  8674 ;;  fp              2   31[BANK0 ] PTR struct _IO_FILE
  8675 ;;		 -> NULL(0), 
  8676 ;;  d               8   33[BANK0 ] unsigned long long 
  8677 ;;  x               1   41[BANK0 ] unsigned char 
  8678 ;; Auto vars:     Size  Location     Type
  8679 ;;  n               8   58[BANK0 ] unsigned long long 
  8680 ;;  c               2   68[BANK0 ] int 
  8681 ;;  i               2   66[BANK0 ] int 
  8682 ;;  w               2   56[BANK0 ] int 
  8683 ;;  p               2   54[BANK0 ] int 
  8684 ;; Return value:  Size  Location     Type
  8685 ;;                  2   31[BANK0 ] int 
  8686 ;; Registers used:
  8687 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8688 ;; Tracked objects:
  8689 ;;		On entry : 0/0
  8690 ;;		On exit  : 0/0
  8691 ;;		Unchanged: 0/0
  8692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8693 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8694 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8695 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8696 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8697 ;;Total ram usage:       39 bytes
  8698 ;; Hardware stack levels used:    1
  8699 ;; Hardware stack levels required when called:   10
  8700 ;; This function calls:
  8701 ;;		_isalpha
  8702 ;;		_isupper
  8703 ;;		_pad
  8704 ;;		_toupper
  8705 ;; This function is called by:
  8706 ;;		_vfpfcnvrt
  8707 ;; This function uses a non-reentrant model
  8708 ;;
  8709                           
  8710                           	psect	text23
  8711  001E16                     __ptext23:
  8712                           	opt callstack 0
  8713  001E16                     _xtoa:
  8714                           	opt callstack 16
  8715                           
  8716                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  8717                           
  8718                           ;incstack = 0
  8719  001E16  AE4D               	btfss	_prec+1,7,c
  8720                           
  8721                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  8722  001E18  924E               	bcf	_flags,1,c
  8723                           
  8724                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  8725  001E1A  BE4D               	btfsc	_prec+1,7,c
  8726  001E1C  D005               	goto	u6970
  8727  001E1E  504D               	movf	_prec+1,w,c
  8728  001E20  E109               	bnz	l620
  8729  001E22  044C               	decf	_prec,w,c
  8730  001E24  B0D8               	btfsc	status,0,c
  8731  001E26  D006               	goto	l620
  8732  001E28                     u6970:
  8733  001E28  0E00               	movlw	0
  8734  001E2A  0100               	movlb	0	; () banked
  8735  001E2C  6FB7               	movwf	(xtoa@p+1)& (0+255),b
  8736  001E2E  0E01               	movlw	1
  8737  001E30  6FB6               	movwf	xtoa@p& (0+255),b
  8738  001E32  D004               	goto	l622
  8739  001E34                     l620:
  8740  001E34  C04C  F0B6         	movff	_prec,xtoa@p
  8741  001E38  C04D  F0B7         	movff	_prec+1,xtoa@p+1
  8742  001E3C                     l622:
  8743                           
  8744                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  8745  001E3C  C04A  F0B8         	movff	_width,xtoa@w
  8746  001E40  C04B  F0B9         	movff	_width+1,xtoa@w+1
  8747                           
  8748                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  8749  001E44  A84E               	btfss	_flags,4,c
  8750  001E46  D005               	goto	l6502
  8751                           
  8752                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  8753  001E48  0100               	movlb	0	; () banked
  8754  001E4A  0EFE               	movlw	254
  8755  001E4C  27B8               	addwf	xtoa@w& (0+255),f,b
  8756  001E4E  0EFF               	movlw	255
  8757  001E50  23B9               	addwfc	(xtoa@w+1)& (0+255),f,b
  8758  001E52                     l6502:
  8759                           
  8760                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  8761  001E52  C0A1  F0BA         	movff	xtoa@d,xtoa@n
  8762  001E56  C0A2  F0BB         	movff	xtoa@d+1,xtoa@n+1
  8763  001E5A  C0A3  F0BC         	movff	xtoa@d+2,xtoa@n+2
  8764  001E5E  C0A4  F0BD         	movff	xtoa@d+3,xtoa@n+3
  8765  001E62  C0A5  F0BE         	movff	xtoa@d+4,xtoa@n+4
  8766  001E66  C0A6  F0BF         	movff	xtoa@d+5,xtoa@n+5
  8767  001E6A  C0A7  F0C0         	movff	xtoa@d+6,xtoa@n+6
  8768  001E6E  C0A8  F0C1         	movff	xtoa@d+7,xtoa@n+7
  8769                           
  8770                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  8771  001E72  0E00               	movlw	0
  8772  001E74  0100               	movlb	0	; () banked
  8773  001E76  6FC3               	movwf	(xtoa@i+1)& (0+255),b
  8774  001E78  0E1F               	movlw	31
  8775  001E7A  6FC2               	movwf	xtoa@i& (0+255),b
  8776                           
  8777                           ; BSR set to: 0
  8778                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  8779  001E7C  0E00               	movlw	0
  8780  001E7E  0101               	movlb	1	; () banked
  8781  001E80  6F97               	movwf	(_dbuf+31)& (0+255),b
  8782                           
  8783                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8784  001E82  D094               	goto	l6538
  8785  001E84                     l6508:
  8786                           
  8787                           ; BSR set to: 0
  8788                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  8789  001E84  07C2               	decf	xtoa@i& (0+255),f,b
  8790  001E86  A0D8               	btfss	status,0,c
  8791  001E88  07C3               	decf	(xtoa@i+1)& (0+255),f,b
  8792                           
  8793                           ; BSR set to: 0
  8794                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  8795  001E8A  0E0F               	movlw	15
  8796  001E8C  15BA               	andwf	xtoa@n& (0+255),w,b
  8797  001E8E  6FC4               	movwf	xtoa@c& (0+255),b
  8798  001E90  6BC5               	clrf	(xtoa@c+1)& (0+255),b
  8799                           
  8800                           ; BSR set to: 0
  8801                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  8802  001E92  BFC5               	btfsc	(xtoa@c+1)& (0+255),7,b
  8803  001E94  D008               	goto	l6516
  8804  001E96  51C5               	movf	(xtoa@c+1)& (0+255),w,b
  8805  001E98  E104               	bnz	u6990
  8806  001E9A  0E0A               	movlw	10
  8807  001E9C  5DC4               	subwf	xtoa@c& (0+255),w,b
  8808  001E9E  A0D8               	btfss	status,0,c
  8809  001EA0  D002               	goto	l6516
  8810  001EA2                     u6990:
  8811                           
  8812                           ; BSR set to: 0
  8813  001EA2  0E57               	movlw	87
  8814  001EA4  D001               	goto	L4
  8815  001EA6                     l6516:
  8816                           
  8817                           ; BSR set to: 0
  8818  001EA6  0E30               	movlw	48
  8819  001EA8                     L4:
  8820  001EA8  25C4               	addwf	xtoa@c& (0+255),w,b
  8821  001EAA  6FC4               	movwf	xtoa@c& (0+255),b
  8822  001EAC  0E00               	movlw	0
  8823  001EAE  21C5               	addwfc	(xtoa@c+1)& (0+255),w,b
  8824  001EB0  6FC5               	movwf	(xtoa@c+1)& (0+255),b
  8825                           
  8826                           ; BSR set to: 0
  8827                           
  8828                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 646:       
      +                            if ((0 ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsi
      +                          gned)(c)|32)-'a') < 26)) {
  8829  001EB2  0EBF               	movlw	191
  8830  001EB4  6FAA               	movwf	??_xtoa& (0+255),b
  8831  001EB6  0EFF               	movlw	255
  8832  001EB8  6FAB               	movwf	(??_xtoa+1)& (0+255),b
  8833  001EBA  51A9               	movf	xtoa@x& (0+255),w,b
  8834  001EBC  6FAC               	movwf	(??_xtoa+2)& (0+255),b
  8835  001EBE  6BAD               	clrf	(??_xtoa+3)& (0+255),b
  8836  001EC0  51AA               	movf	??_xtoa& (0+255),w,b
  8837  001EC2  27AC               	addwf	(??_xtoa+2)& (0+255),f,b
  8838  001EC4  51AB               	movf	(??_xtoa+1)& (0+255),w,b
  8839  001EC6  23AD               	addwfc	(??_xtoa+3)& (0+255),f,b
  8840  001EC8  51AD               	movf	(??_xtoa+3)& (0+255),w,b
  8841  001ECA  E106               	bnz	u7000
  8842  001ECC  0E1A               	movlw	26
  8843  001ECE  5DAC               	subwf	(??_xtoa+2)& (0+255),w,b
  8844  001ED0  B0D8               	btfsc	status,0,c
  8845  001ED2  D002               	goto	u7000
  8846  001ED4  0E01               	movlw	1
  8847  001ED6  D001               	goto	u7010
  8848  001ED8                     u7000:
  8849  001ED8  0E00               	movlw	0
  8850  001EDA                     u7010:
  8851  001EDA  6FB2               	movwf	_xtoa$1110& (0+255),b
  8852  001EDC  6BB3               	clrf	(_xtoa$1110+1)& (0+255),b
  8853                           
  8854                           ; BSR set to: 0
  8855  001EDE  51B2               	movf	_xtoa$1110& (0+255),w,b
  8856  001EE0  11B3               	iorwf	(_xtoa$1110+1)& (0+255),w,b
  8857  001EE2  B4D8               	btfsc	status,2,c
  8858  001EE4  D027               	goto	l6530
  8859                           
  8860                           ; BSR set to: 0
  8861  001EE6  0E9F               	movlw	159
  8862  001EE8  6FAA               	movwf	??_xtoa& (0+255),b
  8863  001EEA  0EFF               	movlw	255
  8864  001EEC  6FAB               	movwf	(??_xtoa+1)& (0+255),b
  8865  001EEE  0E20               	movlw	32
  8866  001EF0  11C4               	iorwf	xtoa@c& (0+255),w,b
  8867  001EF2  6FAC               	movwf	(??_xtoa+2)& (0+255),b
  8868  001EF4  0E00               	movlw	0
  8869  001EF6  11C5               	iorwf	(xtoa@c+1)& (0+255),w,b
  8870  001EF8  6FAD               	movwf	(??_xtoa+3)& (0+255),b
  8871  001EFA  51AA               	movf	??_xtoa& (0+255),w,b
  8872  001EFC  27AC               	addwf	(??_xtoa+2)& (0+255),f,b
  8873  001EFE  51AB               	movf	(??_xtoa+1)& (0+255),w,b
  8874  001F00  23AD               	addwfc	(??_xtoa+3)& (0+255),f,b
  8875  001F02  51AD               	movf	(??_xtoa+3)& (0+255),w,b
  8876  001F04  E106               	bnz	u7030
  8877  001F06  0E1A               	movlw	26
  8878  001F08  5DAC               	subwf	(??_xtoa+2)& (0+255),w,b
  8879  001F0A  B0D8               	btfsc	status,0,c
  8880  001F0C  D002               	goto	u7030
  8881  001F0E  0E01               	movlw	1
  8882  001F10  D001               	goto	u7040
  8883  001F12                     u7030:
  8884  001F12  0E00               	movlw	0
  8885  001F14                     u7040:
  8886  001F14  6FB4               	movwf	_xtoa$1111& (0+255),b
  8887  001F16  6BB5               	clrf	(_xtoa$1111+1)& (0+255),b
  8888                           
  8889                           ; BSR set to: 0
  8890  001F18  51B4               	movf	_xtoa$1111& (0+255),w,b
  8891  001F1A  11B5               	iorwf	(_xtoa$1111+1)& (0+255),w,b
  8892  001F1C  B4D8               	btfsc	status,2,c
  8893  001F1E  D00A               	goto	l6530
  8894                           
  8895                           ; BSR set to: 0
  8896                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  8897  001F20  C0C4  F086         	movff	xtoa@c,toupper@c
  8898  001F24  C0C5  F087         	movff	xtoa@c+1,toupper@c+1
  8899  001F28  EC8B  F01B         	call	_toupper	;wreg free
  8900  001F2C  C086  F0C4         	movff	?_toupper,xtoa@c
  8901  001F30  C087  F0C5         	movff	?_toupper+1,xtoa@c+1
  8902  001F34                     l6530:
  8903                           
  8904                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  8905  001F34  0E78               	movlw	low _dbuf
  8906  001F36  0100               	movlb	0	; () banked
  8907  001F38  25C2               	addwf	xtoa@i& (0+255),w,b
  8908  001F3A  6ED9               	movwf	fsr2l,c
  8909  001F3C  0E01               	movlw	high _dbuf
  8910  001F3E  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
  8911  001F40  6EDA               	movwf	fsr2h,c
  8912  001F42  C0C4  FFDF         	movff	xtoa@c,indf2
  8913                           
  8914                           ; BSR set to: 0
  8915                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  8916  001F46  07B6               	decf	xtoa@p& (0+255),f,b
  8917  001F48  A0D8               	btfss	status,0,c
  8918  001F4A  07B7               	decf	(xtoa@p+1)& (0+255),f,b
  8919                           
  8920                           ; BSR set to: 0
  8921                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  8922  001F4C  07B8               	decf	xtoa@w& (0+255),f,b
  8923  001F4E  A0D8               	btfss	status,0,c
  8924  001F50  07B9               	decf	(xtoa@w+1)& (0+255),f,b
  8925                           
  8926                           ; BSR set to: 0
  8927                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  8928  001F52  C0BA  F0AA         	movff	xtoa@n,??_xtoa
  8929  001F56  C0BB  F0AB         	movff	xtoa@n+1,??_xtoa+1
  8930  001F5A  C0BC  F0AC         	movff	xtoa@n+2,??_xtoa+2
  8931  001F5E  C0BD  F0AD         	movff	xtoa@n+3,??_xtoa+3
  8932  001F62  C0BE  F0AE         	movff	xtoa@n+4,??_xtoa+4
  8933  001F66  C0BF  F0AF         	movff	xtoa@n+5,??_xtoa+5
  8934  001F6A  C0C0  F0B0         	movff	xtoa@n+6,??_xtoa+6
  8935  001F6E  C0C1  F0B1         	movff	xtoa@n+7,??_xtoa+7
  8936  001F72  0E05               	movlw	5
  8937  001F74  D009               	goto	u7060
  8938  001F76                     u7065:
  8939  001F76  90D8               	bcf	status,0,c
  8940  001F78  33B1               	rrcf	(??_xtoa+7)& (0+255),f,b
  8941  001F7A  33B0               	rrcf	(??_xtoa+6)& (0+255),f,b
  8942  001F7C  33AF               	rrcf	(??_xtoa+5)& (0+255),f,b
  8943  001F7E  33AE               	rrcf	(??_xtoa+4)& (0+255),f,b
  8944  001F80  33AD               	rrcf	(??_xtoa+3)& (0+255),f,b
  8945  001F82  33AC               	rrcf	(??_xtoa+2)& (0+255),f,b
  8946  001F84  33AB               	rrcf	(??_xtoa+1)& (0+255),f,b
  8947  001F86  33AA               	rrcf	??_xtoa& (0+255),f,b
  8948  001F88                     u7060:
  8949  001F88  2EE8               	decfsz	wreg,f,c
  8950  001F8A  D7F5               	goto	u7065
  8951  001F8C  C0AA  F0BA         	movff	??_xtoa,xtoa@n
  8952  001F90  C0AB  F0BB         	movff	??_xtoa+1,xtoa@n+1
  8953  001F94  C0AC  F0BC         	movff	??_xtoa+2,xtoa@n+2
  8954  001F98  C0AD  F0BD         	movff	??_xtoa+3,xtoa@n+3
  8955  001F9C  C0AE  F0BE         	movff	??_xtoa+4,xtoa@n+4
  8956  001FA0  C0AF  F0BF         	movff	??_xtoa+5,xtoa@n+5
  8957  001FA4  C0B0  F0C0         	movff	??_xtoa+6,xtoa@n+6
  8958  001FA8  C0B1  F0C1         	movff	??_xtoa+7,xtoa@n+7
  8959  001FAC                     l6538:
  8960                           
  8961                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8962  001FAC  0100               	movlb	0	; () banked
  8963  001FAE  BFC3               	btfsc	(xtoa@i+1)& (0+255),7,b
  8964  001FB0  D020               	goto	u7110
  8965  001FB2  51C3               	movf	(xtoa@i+1)& (0+255),w,b
  8966  001FB4  E104               	bnz	u7070
  8967  001FB6  0E02               	movlw	2
  8968  001FB8  5DC2               	subwf	xtoa@i& (0+255),w,b
  8969  001FBA  A0D8               	btfss	status,0,c
  8970  001FBC  D01A               	goto	u7110
  8971  001FBE                     u7070:
  8972                           
  8973                           ; BSR set to: 0
  8974  001FBE  51BA               	movf	xtoa@n& (0+255),w,b
  8975  001FC0  11BB               	iorwf	(xtoa@n+1)& (0+255),w,b
  8976  001FC2  11BC               	iorwf	(xtoa@n+2)& (0+255),w,b
  8977  001FC4  11BD               	iorwf	(xtoa@n+3)& (0+255),w,b
  8978  001FC6  11BE               	iorwf	(xtoa@n+4)& (0+255),w,b
  8979  001FC8  11BF               	iorwf	(xtoa@n+5)& (0+255),w,b
  8980  001FCA  11C0               	iorwf	(xtoa@n+6)& (0+255),w,b
  8981  001FCC  11C1               	iorwf	(xtoa@n+7)& (0+255),w,b
  8982  001FCE  A4D8               	btfss	status,2,c
  8983  001FD0  D759               	goto	l6508
  8984                           
  8985                           ; BSR set to: 0
  8986  001FD2  BFB7               	btfsc	(xtoa@p+1)& (0+255),7,b
  8987  001FD4  D005               	goto	u7090
  8988  001FD6  51B7               	movf	(xtoa@p+1)& (0+255),w,b
  8989  001FD8  E102               	bnz	u7091
  8990  001FDA  05B6               	decf	xtoa@p& (0+255),w,b
  8991  001FDC  B0D8               	btfsc	status,0,c
  8992  001FDE                     u7091:
  8993  001FDE  D752               	goto	l6508
  8994  001FE0                     u7090:
  8995                           
  8996                           ; BSR set to: 0
  8997  001FE0  BFB9               	btfsc	(xtoa@w+1)& (0+255),7,b
  8998  001FE2  D007               	goto	u7110
  8999  001FE4  51B9               	movf	(xtoa@w+1)& (0+255),w,b
  9000  001FE6  E103               	bnz	u7100
  9001  001FE8  05B8               	decf	xtoa@w& (0+255),w,b
  9002  001FEA  A0D8               	btfss	status,0,c
  9003  001FEC  D002               	goto	u7110
  9004  001FEE                     u7100:
  9005                           
  9006                           ; BSR set to: 0
  9007  001FEE  B24E               	btfsc	_flags,1,c
  9008  001FF0  D749               	goto	l6508
  9009  001FF2                     u7110:
  9010                           
  9011                           ; BSR set to: 0
  9012                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  9013  001FF2  A84E               	btfss	_flags,4,c
  9014  001FF4  D016               	goto	l6554
  9015                           
  9016                           ; BSR set to: 0
  9017                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  9018  001FF6  07C2               	decf	xtoa@i& (0+255),f,b
  9019  001FF8  A0D8               	btfss	status,0,c
  9020  001FFA  07C3               	decf	(xtoa@i+1)& (0+255),f,b
  9021                           
  9022                           ; BSR set to: 0
  9023                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  9024  001FFC  0E78               	movlw	low _dbuf
  9025  001FFE  25C2               	addwf	xtoa@i& (0+255),w,b
  9026  002000  6ED9               	movwf	fsr2l,c
  9027  002002  0E01               	movlw	high _dbuf
  9028  002004  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
  9029  002006  6EDA               	movwf	fsr2h,c
  9030  002008  C0A9  FFDF         	movff	xtoa@x,indf2
  9031                           
  9032                           ; BSR set to: 0
  9033                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  9034  00200C  07C2               	decf	xtoa@i& (0+255),f,b
  9035  00200E  A0D8               	btfss	status,0,c
  9036  002010  07C3               	decf	(xtoa@i+1)& (0+255),f,b
  9037                           
  9038                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  9039  002012  0E78               	movlw	low _dbuf
  9040  002014  25C2               	addwf	xtoa@i& (0+255),w,b
  9041  002016  6ED9               	movwf	fsr2l,c
  9042  002018  0E01               	movlw	high _dbuf
  9043  00201A  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
  9044  00201C  6EDA               	movwf	fsr2h,c
  9045  00201E  0E30               	movlw	48
  9046  002020  6EDF               	movwf	indf2,c
  9047  002022                     l6554:
  9048                           
  9049                           ; BSR set to: 0
  9050                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  9051  002022  C09F  F094         	movff	xtoa@fp,pad@fp
  9052  002026  C0A0  F095         	movff	xtoa@fp+1,pad@fp+1
  9053  00202A  0E78               	movlw	low _dbuf
  9054  00202C  25C2               	addwf	xtoa@i& (0+255),w,b
  9055  00202E  6F96               	movwf	pad@buf& (0+255),b
  9056  002030  0E01               	movlw	high _dbuf
  9057  002032  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
  9058  002034  6F97               	movwf	(pad@buf+1)& (0+255),b
  9059  002036  C0B8  F098         	movff	xtoa@w,pad@p
  9060  00203A  C0B9  F099         	movff	xtoa@w+1,pad@p+1
  9061  00203E  EC8D  F018         	call	_pad	;wreg free
  9062  002042  C094  F09F         	movff	?_pad,?_xtoa
  9063  002046  C095  F0A0         	movff	?_pad+1,?_xtoa+1
  9064  00204A  0012               	return		;funcret
  9065  00204C                     __end_of_xtoa:
  9066                           	opt callstack 0
  9067                           
  9068 ;; *************** function _toupper *****************
  9069 ;; Defined at:
  9070 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  9071 ;; Parameters:    Size  Location     Type
  9072 ;;  c               2    6[BANK0 ] int 
  9073 ;; Auto vars:     Size  Location     Type
  9074 ;;		None
  9075 ;; Return value:  Size  Location     Type
  9076 ;;                  2    6[BANK0 ] int 
  9077 ;; Registers used:
  9078 ;;		wreg, status,2, status,0
  9079 ;; Tracked objects:
  9080 ;;		On entry : 0/0
  9081 ;;		On exit  : 0/0
  9082 ;;		Unchanged: 0/0
  9083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9084 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9085 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9086 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9087 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9088 ;;Total ram usage:        8 bytes
  9089 ;; Hardware stack levels used:    1
  9090 ;; Hardware stack levels required when called:    4
  9091 ;; This function calls:
  9092 ;;		_islower
  9093 ;; This function is called by:
  9094 ;;		_xtoa
  9095 ;; This function uses a non-reentrant model
  9096 ;;
  9097                           
  9098                           	psect	text24
  9099  003716                     __ptext24:
  9100                           	opt callstack 0
  9101  003716                     _toupper:
  9102                           	opt callstack 21
  9103                           
  9104                           ;incstack = 0
  9105  003716  0E9F               	movlw	159
  9106  003718  0100               	movlb	0	; () banked
  9107  00371A  6F88               	movwf	??_toupper& (0+255),b
  9108  00371C  0EFF               	movlw	255
  9109  00371E  6F89               	movwf	(??_toupper+1)& (0+255),b
  9110  003720  C086  F08A         	movff	toupper@c,??_toupper+2
  9111  003724  C087  F08B         	movff	toupper@c+1,??_toupper+3
  9112  003728  5188               	movf	??_toupper& (0+255),w,b
  9113  00372A  278A               	addwf	(??_toupper+2)& (0+255),f,b
  9114  00372C  5189               	movf	(??_toupper+1)& (0+255),w,b
  9115  00372E  238B               	addwfc	(??_toupper+3)& (0+255),f,b
  9116  003730  518B               	movf	(??_toupper+3)& (0+255),w,b
  9117  003732  E106               	bnz	u6610
  9118  003734  0E1A               	movlw	26
  9119  003736  5D8A               	subwf	(??_toupper+2)& (0+255),w,b
  9120  003738  B0D8               	btfsc	status,0,c
  9121  00373A  D002               	goto	u6610
  9122  00373C  0E01               	movlw	1
  9123  00373E  D001               	goto	u6620
  9124  003740                     u6610:
  9125  003740  0E00               	movlw	0
  9126  003742                     u6620:
  9127  003742  6F8C               	movwf	_toupper$1675& (0+255),b
  9128  003744  6B8D               	clrf	(_toupper$1675+1)& (0+255),b
  9129                           
  9130                           ; BSR set to: 0
  9131  003746  518C               	movf	_toupper$1675& (0+255),w,b
  9132  003748  118D               	iorwf	(_toupper$1675+1)& (0+255),w,b
  9133  00374A  B4D8               	btfsc	status,2,c
  9134  00374C  D005               	goto	l1460
  9135                           
  9136                           ; BSR set to: 0
  9137  00374E  0E5F               	movlw	95
  9138  003750  1586               	andwf	toupper@c& (0+255),w,b
  9139  003752  6F86               	movwf	?_toupper& (0+255),b
  9140  003754  6B87               	clrf	(?_toupper+1)& (0+255),b
  9141  003756  0012               	return	
  9142  003758                     l1460:
  9143                           
  9144                           ; BSR set to: 0
  9145  003758  C086  F086         	movff	toupper@c,?_toupper
  9146  00375C  C087  F087         	movff	toupper@c+1,?_toupper+1
  9147                           
  9148                           ; BSR set to: 0
  9149  003760  0012               	return		;funcret
  9150  003762                     __end_of_toupper:
  9151                           	opt callstack 0
  9152                           
  9153 ;; *************** function _islower *****************
  9154 ;; Defined at:
  9155 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  9156 ;; Parameters:    Size  Location     Type
  9157 ;;  c               2    0[BANK0 ] int 
  9158 ;; Auto vars:     Size  Location     Type
  9159 ;;		None
  9160 ;; Return value:  Size  Location     Type
  9161 ;;                  2    0[BANK0 ] int 
  9162 ;; Registers used:
  9163 ;;		wreg, status,2, status,0
  9164 ;; Tracked objects:
  9165 ;;		On entry : 0/0
  9166 ;;		On exit  : 0/0
  9167 ;;		Unchanged: 0/0
  9168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9169 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9171 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9172 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9173 ;;Total ram usage:        6 bytes
  9174 ;; Hardware stack levels used:    1
  9175 ;; Hardware stack levels required when called:    3
  9176 ;; This function calls:
  9177 ;;		Nothing
  9178 ;; This function is called by:
  9179 ;;		_toupper
  9180 ;; This function uses a non-reentrant model
  9181 ;;
  9182                           
  9183                           	psect	text25
  9184  0038B8                     __ptext25:
  9185                           	opt callstack 0
  9186  0038B8                     _islower:
  9187                           	opt callstack 21
  9188                           
  9189                           ; BSR set to: 0
  9190                           ;incstack = 0
  9191  0038B8  0E9F               	movlw	159
  9192  0038BA  0100               	movlb	0	; () banked
  9193  0038BC  6F82               	movwf	??_islower& (0+255),b
  9194  0038BE  0EFF               	movlw	255
  9195  0038C0  6F83               	movwf	(??_islower+1)& (0+255),b
  9196  0038C2  C080  F084         	movff	islower@c,??_islower+2
  9197  0038C6  C081  F085         	movff	islower@c+1,??_islower+3
  9198  0038CA  5182               	movf	??_islower& (0+255),w,b
  9199  0038CC  2784               	addwf	(??_islower+2)& (0+255),f,b
  9200  0038CE  5183               	movf	(??_islower+1)& (0+255),w,b
  9201  0038D0  2385               	addwfc	(??_islower+3)& (0+255),f,b
  9202  0038D2  5185               	movf	(??_islower+3)& (0+255),w,b
  9203  0038D4  E106               	bnz	u6500
  9204  0038D6  0E1A               	movlw	26
  9205  0038D8  5D84               	subwf	(??_islower+2)& (0+255),w,b
  9206  0038DA  B0D8               	btfsc	status,0,c
  9207  0038DC  D002               	goto	u6500
  9208  0038DE  0E01               	movlw	1
  9209  0038E0  D001               	goto	u6510
  9210  0038E2                     u6500:
  9211  0038E2  0E00               	movlw	0
  9212  0038E4                     u6510:
  9213  0038E4  6F80               	movwf	?_islower& (0+255),b
  9214  0038E6  6B81               	clrf	(?_islower+1)& (0+255),b
  9215                           
  9216                           ; BSR set to: 0
  9217  0038E8  0012               	return		;funcret
  9218  0038EA                     __end_of_islower:
  9219                           	opt callstack 0
  9220                           
  9221 ;; *************** function _isupper *****************
  9222 ;; Defined at:
  9223 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  9224 ;; Parameters:    Size  Location     Type
  9225 ;;  c               2    0[BANK0 ] int 
  9226 ;; Auto vars:     Size  Location     Type
  9227 ;;		None
  9228 ;; Return value:  Size  Location     Type
  9229 ;;                  2    0[BANK0 ] int 
  9230 ;; Registers used:
  9231 ;;		wreg, status,2, status,0
  9232 ;; Tracked objects:
  9233 ;;		On entry : 0/0
  9234 ;;		On exit  : 0/0
  9235 ;;		Unchanged: 0/0
  9236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9237 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9239 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9240 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9241 ;;Total ram usage:        6 bytes
  9242 ;; Hardware stack levels used:    1
  9243 ;; Hardware stack levels required when called:    3
  9244 ;; This function calls:
  9245 ;;		Nothing
  9246 ;; This function is called by:
  9247 ;;		_xtoa
  9248 ;; This function uses a non-reentrant model
  9249 ;;
  9250                           
  9251                           	psect	text26
  9252  0038EA                     __ptext26:
  9253                           	opt callstack 0
  9254  0038EA                     _isupper:
  9255                           	opt callstack 22
  9256                           
  9257                           ; BSR set to: 0
  9258                           ;incstack = 0
  9259  0038EA  0EBF               	movlw	191
  9260  0038EC  0100               	movlb	0	; () banked
  9261  0038EE  6F82               	movwf	??_isupper& (0+255),b
  9262  0038F0  0EFF               	movlw	255
  9263  0038F2  6F83               	movwf	(??_isupper+1)& (0+255),b
  9264  0038F4  C080  F084         	movff	isupper@c,??_isupper+2
  9265  0038F8  C081  F085         	movff	isupper@c+1,??_isupper+3
  9266  0038FC  5182               	movf	??_isupper& (0+255),w,b
  9267  0038FE  2784               	addwf	(??_isupper+2)& (0+255),f,b
  9268  003900  5183               	movf	(??_isupper+1)& (0+255),w,b
  9269  003902  2385               	addwfc	(??_isupper+3)& (0+255),f,b
  9270  003904  5185               	movf	(??_isupper+3)& (0+255),w,b
  9271  003906  E106               	bnz	u6570
  9272  003908  0E1A               	movlw	26
  9273  00390A  5D84               	subwf	(??_isupper+2)& (0+255),w,b
  9274  00390C  B0D8               	btfsc	status,0,c
  9275  00390E  D002               	goto	u6570
  9276  003910  0E01               	movlw	1
  9277  003912  D001               	goto	u6580
  9278  003914                     u6570:
  9279  003914  0E00               	movlw	0
  9280  003916                     u6580:
  9281  003916  6F80               	movwf	?_isupper& (0+255),b
  9282  003918  6B81               	clrf	(?_isupper+1)& (0+255),b
  9283                           
  9284                           ; BSR set to: 0
  9285  00391A  0012               	return		;funcret
  9286  00391C                     __end_of_isupper:
  9287                           	opt callstack 0
  9288                           
  9289 ;; *************** function _isalpha *****************
  9290 ;; Defined at:
  9291 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  9292 ;; Parameters:    Size  Location     Type
  9293 ;;  c               2    0[BANK0 ] int 
  9294 ;; Auto vars:     Size  Location     Type
  9295 ;;		None
  9296 ;; Return value:  Size  Location     Type
  9297 ;;                  2    0[BANK0 ] int 
  9298 ;; Registers used:
  9299 ;;		wreg, status,2, status,0
  9300 ;; Tracked objects:
  9301 ;;		On entry : 0/0
  9302 ;;		On exit  : 0/0
  9303 ;;		Unchanged: 0/0
  9304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9305 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9307 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9308 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9309 ;;Total ram usage:        6 bytes
  9310 ;; Hardware stack levels used:    1
  9311 ;; Hardware stack levels required when called:    3
  9312 ;; This function calls:
  9313 ;;		Nothing
  9314 ;; This function is called by:
  9315 ;;		_xtoa
  9316 ;; This function uses a non-reentrant model
  9317 ;;
  9318                           
  9319                           	psect	text27
  9320  00381C                     __ptext27:
  9321                           	opt callstack 0
  9322  00381C                     _isalpha:
  9323                           	opt callstack 22
  9324                           
  9325                           ; BSR set to: 0
  9326                           ;incstack = 0
  9327  00381C  0E9F               	movlw	159
  9328  00381E  0100               	movlb	0	; () banked
  9329  003820  6F82               	movwf	??_isalpha& (0+255),b
  9330  003822  0EFF               	movlw	255
  9331  003824  6F83               	movwf	(??_isalpha+1)& (0+255),b
  9332  003826  0E20               	movlw	32
  9333  003828  1180               	iorwf	isalpha@c& (0+255),w,b
  9334  00382A  6F84               	movwf	(??_isalpha+2)& (0+255),b
  9335  00382C  0E00               	movlw	0
  9336  00382E  1181               	iorwf	(isalpha@c+1)& (0+255),w,b
  9337  003830  6F85               	movwf	(??_isalpha+3)& (0+255),b
  9338  003832  5182               	movf	??_isalpha& (0+255),w,b
  9339  003834  2784               	addwf	(??_isalpha+2)& (0+255),f,b
  9340  003836  5183               	movf	(??_isalpha+1)& (0+255),w,b
  9341  003838  2385               	addwfc	(??_isalpha+3)& (0+255),f,b
  9342  00383A  5185               	movf	(??_isalpha+3)& (0+255),w,b
  9343  00383C  E106               	bnz	u6590
  9344  00383E  0E1A               	movlw	26
  9345  003840  5D84               	subwf	(??_isalpha+2)& (0+255),w,b
  9346  003842  B0D8               	btfsc	status,0,c
  9347  003844  D002               	goto	u6590
  9348  003846  0E01               	movlw	1
  9349  003848  D001               	goto	u6600
  9350  00384A                     u6590:
  9351  00384A  0E00               	movlw	0
  9352  00384C                     u6600:
  9353  00384C  6F80               	movwf	?_isalpha& (0+255),b
  9354  00384E  6B81               	clrf	(?_isalpha+1)& (0+255),b
  9355                           
  9356                           ; BSR set to: 0
  9357  003850  0012               	return		;funcret
  9358  003852                     __end_of_isalpha:
  9359                           	opt callstack 0
  9360                           
  9361 ;; *************** function _dtoa *****************
  9362 ;; Defined at:
  9363 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9364 ;; Parameters:    Size  Location     Type
  9365 ;;  fp              2   31[BANK0 ] PTR struct _IO_FILE
  9366 ;;		 -> NULL(0), 
  9367 ;;  d               8   33[BANK0 ] long long 
  9368 ;; Auto vars:     Size  Location     Type
  9369 ;;  n               8   57[BANK0 ] long long 
  9370 ;;  i               2   65[BANK0 ] int 
  9371 ;;  s               2   55[BANK0 ] int 
  9372 ;;  w               2   53[BANK0 ] int 
  9373 ;;  p               2   51[BANK0 ] int 
  9374 ;; Return value:  Size  Location     Type
  9375 ;;                  2   31[BANK0 ] int 
  9376 ;; Registers used:
  9377 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9378 ;; Tracked objects:
  9379 ;;		On entry : 0/0
  9380 ;;		On exit  : 0/0
  9381 ;;		Unchanged: 0/0
  9382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9383 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9384 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9385 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9386 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9387 ;;Total ram usage:       36 bytes
  9388 ;; Hardware stack levels used:    1
  9389 ;; Hardware stack levels required when called:   10
  9390 ;; This function calls:
  9391 ;;		___aodiv
  9392 ;;		___aomod
  9393 ;;		_abs
  9394 ;;		_pad
  9395 ;; This function is called by:
  9396 ;;		_vfpfcnvrt
  9397 ;; This function uses a non-reentrant model
  9398 ;;
  9399                           
  9400                           	psect	text28
  9401  001BCE                     __ptext28:
  9402                           	opt callstack 0
  9403  001BCE                     _dtoa:
  9404                           	opt callstack 16
  9405                           
  9406                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  9407                           
  9408                           ; BSR set to: 0
  9409                           ;incstack = 0
  9410  001BCE  C0A1  F0B9         	movff	dtoa@d,dtoa@n
  9411  001BD2  C0A2  F0BA         	movff	dtoa@d+1,dtoa@n+1
  9412  001BD6  C0A3  F0BB         	movff	dtoa@d+2,dtoa@n+2
  9413  001BDA  C0A4  F0BC         	movff	dtoa@d+3,dtoa@n+3
  9414  001BDE  C0A5  F0BD         	movff	dtoa@d+4,dtoa@n+4
  9415  001BE2  C0A6  F0BE         	movff	dtoa@d+5,dtoa@n+5
  9416  001BE6  C0A7  F0BF         	movff	dtoa@d+6,dtoa@n+6
  9417  001BEA  C0A8  F0C0         	movff	dtoa@d+7,dtoa@n+7
  9418                           
  9419                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  9420  001BEE  0100               	movlb	0	; () banked
  9421  001BF0  AFC0               	btfss	(dtoa@n+7)& (0+255),7,b
  9422  001BF2  D002               	goto	u6810
  9423  001BF4  0E01               	movlw	1
  9424  001BF6  D001               	goto	u6820
  9425  001BF8                     u6810:
  9426  001BF8  0E00               	movlw	0
  9427  001BFA                     u6820:
  9428  001BFA  6FB7               	movwf	dtoa@s& (0+255),b
  9429  001BFC  6BB8               	clrf	(dtoa@s+1)& (0+255),b
  9430                           
  9431                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  9432  001BFE  51B7               	movf	dtoa@s& (0+255),w,b
  9433  001C00  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
  9434  001C02  B4D8               	btfsc	status,2,c
  9435  001C04  D010               	goto	l6436
  9436                           
  9437                           ; BSR set to: 0
  9438                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  9439  001C06  1FC0               	comf	(dtoa@n+7)& (0+255),f,b
  9440  001C08  1FBF               	comf	(dtoa@n+6)& (0+255),f,b
  9441  001C0A  1FBE               	comf	(dtoa@n+5)& (0+255),f,b
  9442  001C0C  1FBD               	comf	(dtoa@n+4)& (0+255),f,b
  9443  001C0E  1FBC               	comf	(dtoa@n+3)& (0+255),f,b
  9444  001C10  1FBB               	comf	(dtoa@n+2)& (0+255),f,b
  9445  001C12  1FBA               	comf	(dtoa@n+1)& (0+255),f,b
  9446  001C14  6DB9               	negf	dtoa@n& (0+255),b
  9447  001C16  0E00               	movlw	0
  9448  001C18  23BA               	addwfc	(dtoa@n+1)& (0+255),f,b
  9449  001C1A  23BB               	addwfc	(dtoa@n+2)& (0+255),f,b
  9450  001C1C  23BC               	addwfc	(dtoa@n+3)& (0+255),f,b
  9451  001C1E  23BD               	addwfc	(dtoa@n+4)& (0+255),f,b
  9452  001C20  23BE               	addwfc	(dtoa@n+5)& (0+255),f,b
  9453  001C22  23BF               	addwfc	(dtoa@n+6)& (0+255),f,b
  9454  001C24  23C0               	addwfc	(dtoa@n+7)& (0+255),f,b
  9455  001C26                     l6436:
  9456                           
  9457                           ; BSR set to: 0
  9458                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  9459  001C26  AE4D               	btfss	_prec+1,7,c
  9460                           
  9461                           ; BSR set to: 0
  9462                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  9463  001C28  924E               	bcf	_flags,1,c
  9464                           
  9465                           ; BSR set to: 0
  9466                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  9467  001C2A  BE4D               	btfsc	_prec+1,7,c
  9468  001C2C  D005               	goto	u6850
  9469  001C2E  504D               	movf	_prec+1,w,c
  9470  001C30  E108               	bnz	l595
  9471  001C32  044C               	decf	_prec,w,c
  9472  001C34  B0D8               	btfsc	status,0,c
  9473  001C36  D005               	goto	l595
  9474  001C38                     u6850:
  9475                           
  9476                           ; BSR set to: 0
  9477  001C38  0E00               	movlw	0
  9478  001C3A  6FB4               	movwf	(dtoa@p+1)& (0+255),b
  9479  001C3C  0E01               	movlw	1
  9480  001C3E  6FB3               	movwf	dtoa@p& (0+255),b
  9481  001C40  D004               	goto	l597
  9482  001C42                     l595:
  9483                           
  9484                           ; BSR set to: 0
  9485  001C42  C04C  F0B3         	movff	_prec,dtoa@p
  9486  001C46  C04D  F0B4         	movff	_prec+1,dtoa@p+1
  9487  001C4A                     l597:
  9488                           
  9489                           ; BSR set to: 0
  9490                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  9491  001C4A  C04A  F0B5         	movff	_width,dtoa@w
  9492  001C4E  C04B  F0B6         	movff	_width+1,dtoa@w+1
  9493                           
  9494                           ; BSR set to: 0
  9495                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  9496  001C52  51B7               	movf	dtoa@s& (0+255),w,b
  9497  001C54  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
  9498  001C56  A4D8               	btfss	status,2,c
  9499  001C58  D002               	goto	u6870
  9500                           
  9501                           ; BSR set to: 0
  9502  001C5A  A44E               	btfss	_flags,2,c
  9503  001C5C  D003               	goto	l6450
  9504  001C5E                     u6870:
  9505                           
  9506                           ; BSR set to: 0
  9507                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  9508  001C5E  07B5               	decf	dtoa@w& (0+255),f,b
  9509  001C60  A0D8               	btfss	status,0,c
  9510  001C62  07B6               	decf	(dtoa@w+1)& (0+255),f,b
  9511  001C64                     l6450:
  9512                           
  9513                           ; BSR set to: 0
  9514                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  9515  001C64  0E00               	movlw	0
  9516  001C66  6FC2               	movwf	(dtoa@i+1)& (0+255),b
  9517  001C68  0E1F               	movlw	31
  9518  001C6A  6FC1               	movwf	dtoa@i& (0+255),b
  9519                           
  9520                           ; BSR set to: 0
  9521                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  9522  001C6C  0E00               	movlw	0
  9523  001C6E  0101               	movlb	1	; () banked
  9524  001C70  6F97               	movwf	(_dbuf+31)& (0+255),b
  9525                           
  9526                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9527  001C72  D07D               	goto	l6464
  9528  001C74                     l6454:
  9529                           
  9530                           ; BSR set to: 0
  9531                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  9532  001C74  07C1               	decf	dtoa@i& (0+255),f,b
  9533  001C76  A0D8               	btfss	status,0,c
  9534  001C78  07C2               	decf	(dtoa@i+1)& (0+255),f,b
  9535                           
  9536                           ; BSR set to: 0
  9537                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  9538  001C7A  0E78               	movlw	low _dbuf
  9539  001C7C  25C1               	addwf	dtoa@i& (0+255),w,b
  9540  001C7E  6ED9               	movwf	fsr2l,c
  9541  001C80  0E01               	movlw	high _dbuf
  9542  001C82  21C2               	addwfc	(dtoa@i+1)& (0+255),w,b
  9543  001C84  6EDA               	movwf	fsr2h,c
  9544  001C86  C0B9  F080         	movff	dtoa@n,___aomod@dividend
  9545  001C8A  C0BA  F081         	movff	dtoa@n+1,___aomod@dividend+1
  9546  001C8E  C0BB  F082         	movff	dtoa@n+2,___aomod@dividend+2
  9547  001C92  C0BC  F083         	movff	dtoa@n+3,___aomod@dividend+3
  9548  001C96  C0BD  F084         	movff	dtoa@n+4,___aomod@dividend+4
  9549  001C9A  C0BE  F085         	movff	dtoa@n+5,___aomod@dividend+5
  9550  001C9E  C0BF  F086         	movff	dtoa@n+6,___aomod@dividend+6
  9551  001CA2  C0C0  F087         	movff	dtoa@n+7,___aomod@dividend+7
  9552  001CA6  0E0A               	movlw	10
  9553  001CA8  6F88               	movwf	___aomod@divisor& (0+255),b
  9554  001CAA  0E00               	movlw	0
  9555  001CAC  6F89               	movwf	(___aomod@divisor+1)& (0+255),b
  9556  001CAE  0E00               	movlw	0
  9557  001CB0  6F8A               	movwf	(___aomod@divisor+2)& (0+255),b
  9558  001CB2  0E00               	movlw	0
  9559  001CB4  6F8B               	movwf	(___aomod@divisor+3)& (0+255),b
  9560  001CB6  0E00               	movlw	0
  9561  001CB8  6F8C               	movwf	(___aomod@divisor+4)& (0+255),b
  9562  001CBA  0E00               	movlw	0
  9563  001CBC  6F8D               	movwf	(___aomod@divisor+5)& (0+255),b
  9564  001CBE  0E00               	movlw	0
  9565  001CC0  6F8E               	movwf	(___aomod@divisor+6)& (0+255),b
  9566  001CC2  0E00               	movlw	0
  9567  001CC4  6F8F               	movwf	(___aomod@divisor+7)& (0+255),b
  9568  001CC6  ECC6  F015         	call	___aomod	;wreg free
  9569  001CCA  C080  F0A9         	movff	?___aomod,??_dtoa
  9570  001CCE  C081  F0AA         	movff	?___aomod+1,??_dtoa+1
  9571  001CD2  C082  F0AB         	movff	?___aomod+2,??_dtoa+2
  9572  001CD6  C083  F0AC         	movff	?___aomod+3,??_dtoa+3
  9573  001CDA  C084  F0AD         	movff	?___aomod+4,??_dtoa+4
  9574  001CDE  C085  F0AE         	movff	?___aomod+5,??_dtoa+5
  9575  001CE2  C086  F0AF         	movff	?___aomod+6,??_dtoa+6
  9576  001CE6  C087  F0B0         	movff	?___aomod+7,??_dtoa+7
  9577  001CEA  C0A9  F092         	movff	??_dtoa,abs@a
  9578  001CEE  C0AB  F093         	movff	??_dtoa+2,abs@a+1
  9579  001CF2  EC29  F01C         	call	_abs	;wreg free
  9580  001CF6  0100               	movlb	0	; () banked
  9581  001CF8  5192               	movf	?_abs& (0+255),w,b
  9582  001CFA  0F30               	addlw	48
  9583  001CFC  6EDF               	movwf	indf2,c
  9584                           
  9585                           ; BSR set to: 0
  9586                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  9587  001CFE  07B3               	decf	dtoa@p& (0+255),f,b
  9588  001D00  A0D8               	btfss	status,0,c
  9589  001D02  07B4               	decf	(dtoa@p+1)& (0+255),f,b
  9590                           
  9591                           ; BSR set to: 0
  9592                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  9593  001D04  07B5               	decf	dtoa@w& (0+255),f,b
  9594  001D06  A0D8               	btfss	status,0,c
  9595  001D08  07B6               	decf	(dtoa@w+1)& (0+255),f,b
  9596                           
  9597                           ; BSR set to: 0
  9598                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  9599  001D0A  C0B9  F080         	movff	dtoa@n,___aodiv@dividend
  9600  001D0E  C0BA  F081         	movff	dtoa@n+1,___aodiv@dividend+1
  9601  001D12  C0BB  F082         	movff	dtoa@n+2,___aodiv@dividend+2
  9602  001D16  C0BC  F083         	movff	dtoa@n+3,___aodiv@dividend+3
  9603  001D1A  C0BD  F084         	movff	dtoa@n+4,___aodiv@dividend+4
  9604  001D1E  C0BE  F085         	movff	dtoa@n+5,___aodiv@dividend+5
  9605  001D22  C0BF  F086         	movff	dtoa@n+6,___aodiv@dividend+6
  9606  001D26  C0C0  F087         	movff	dtoa@n+7,___aodiv@dividend+7
  9607  001D2A  0E0A               	movlw	10
  9608  001D2C  6F88               	movwf	___aodiv@divisor& (0+255),b
  9609  001D2E  0E00               	movlw	0
  9610  001D30  6F89               	movwf	(___aodiv@divisor+1)& (0+255),b
  9611  001D32  0E00               	movlw	0
  9612  001D34  6F8A               	movwf	(___aodiv@divisor+2)& (0+255),b
  9613  001D36  0E00               	movlw	0
  9614  001D38  6F8B               	movwf	(___aodiv@divisor+3)& (0+255),b
  9615  001D3A  0E00               	movlw	0
  9616  001D3C  6F8C               	movwf	(___aodiv@divisor+4)& (0+255),b
  9617  001D3E  0E00               	movlw	0
  9618  001D40  6F8D               	movwf	(___aodiv@divisor+5)& (0+255),b
  9619  001D42  0E00               	movlw	0
  9620  001D44  6F8E               	movwf	(___aodiv@divisor+6)& (0+255),b
  9621  001D46  0E00               	movlw	0
  9622  001D48  6F8F               	movwf	(___aodiv@divisor+7)& (0+255),b
  9623  001D4A  EC44  F013         	call	___aodiv	;wreg free
  9624  001D4E  C080  F0B9         	movff	?___aodiv,dtoa@n
  9625  001D52  C081  F0BA         	movff	?___aodiv+1,dtoa@n+1
  9626  001D56  C082  F0BB         	movff	?___aodiv+2,dtoa@n+2
  9627  001D5A  C083  F0BC         	movff	?___aodiv+3,dtoa@n+3
  9628  001D5E  C084  F0BD         	movff	?___aodiv+4,dtoa@n+4
  9629  001D62  C085  F0BE         	movff	?___aodiv+5,dtoa@n+5
  9630  001D66  C086  F0BF         	movff	?___aodiv+6,dtoa@n+6
  9631  001D6A  C087  F0C0         	movff	?___aodiv+7,dtoa@n+7
  9632  001D6E                     l6464:
  9633                           
  9634                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9635  001D6E  0100               	movlb	0	; () banked
  9636  001D70  BFC2               	btfsc	(dtoa@i+1)& (0+255),7,b
  9637  001D72  D01F               	goto	u6920
  9638  001D74  51C2               	movf	(dtoa@i+1)& (0+255),w,b
  9639  001D76  E103               	bnz	u6880
  9640  001D78  05C1               	decf	dtoa@i& (0+255),w,b
  9641  001D7A  A0D8               	btfss	status,0,c
  9642  001D7C  D01A               	goto	u6920
  9643  001D7E                     u6880:
  9644                           
  9645                           ; BSR set to: 0
  9646  001D7E  51B9               	movf	dtoa@n& (0+255),w,b
  9647  001D80  11BA               	iorwf	(dtoa@n+1)& (0+255),w,b
  9648  001D82  11BB               	iorwf	(dtoa@n+2)& (0+255),w,b
  9649  001D84  11BC               	iorwf	(dtoa@n+3)& (0+255),w,b
  9650  001D86  11BD               	iorwf	(dtoa@n+4)& (0+255),w,b
  9651  001D88  11BE               	iorwf	(dtoa@n+5)& (0+255),w,b
  9652  001D8A  11BF               	iorwf	(dtoa@n+6)& (0+255),w,b
  9653  001D8C  11C0               	iorwf	(dtoa@n+7)& (0+255),w,b
  9654  001D8E  A4D8               	btfss	status,2,c
  9655  001D90  D771               	goto	l6454
  9656                           
  9657                           ; BSR set to: 0
  9658  001D92  BFB4               	btfsc	(dtoa@p+1)& (0+255),7,b
  9659  001D94  D005               	goto	u6900
  9660  001D96  51B4               	movf	(dtoa@p+1)& (0+255),w,b
  9661  001D98  E102               	bnz	u6901
  9662  001D9A  05B3               	decf	dtoa@p& (0+255),w,b
  9663  001D9C  B0D8               	btfsc	status,0,c
  9664  001D9E                     u6901:
  9665  001D9E  D76A               	goto	l6454
  9666  001DA0                     u6900:
  9667                           
  9668                           ; BSR set to: 0
  9669  001DA0  BFB6               	btfsc	(dtoa@w+1)& (0+255),7,b
  9670  001DA2  D007               	goto	u6920
  9671  001DA4  51B6               	movf	(dtoa@w+1)& (0+255),w,b
  9672  001DA6  E103               	bnz	u6910
  9673  001DA8  05B5               	decf	dtoa@w& (0+255),w,b
  9674  001DAA  A0D8               	btfss	status,0,c
  9675  001DAC  D002               	goto	u6920
  9676  001DAE                     u6910:
  9677                           
  9678                           ; BSR set to: 0
  9679  001DAE  B24E               	btfsc	_flags,1,c
  9680  001DB0  D761               	goto	l6454
  9681  001DB2                     u6920:
  9682                           
  9683                           ; BSR set to: 0
  9684                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  9685  001DB2  51B7               	movf	dtoa@s& (0+255),w,b
  9686  001DB4  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
  9687  001DB6  A4D8               	btfss	status,2,c
  9688  001DB8  D002               	goto	u6940
  9689                           
  9690                           ; BSR set to: 0
  9691  001DBA  A44E               	btfss	_flags,2,c
  9692  001DBC  D017               	goto	l6488
  9693  001DBE                     u6940:
  9694                           
  9695                           ; BSR set to: 0
  9696                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  9697  001DBE  07C1               	decf	dtoa@i& (0+255),f,b
  9698  001DC0  A0D8               	btfss	status,0,c
  9699  001DC2  07C2               	decf	(dtoa@i+1)& (0+255),f,b
  9700                           
  9701                           ; BSR set to: 0
  9702                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  9703  001DC4  51B7               	movf	dtoa@s& (0+255),w,b
  9704  001DC6  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
  9705  001DC8  A4D8               	btfss	status,2,c
  9706  001DCA  D004               	goto	l6484
  9707                           
  9708                           ; BSR set to: 0
  9709  001DCC  0E00               	movlw	0
  9710  001DCE  6FB2               	movwf	(_dtoa$1099+1)& (0+255),b
  9711  001DD0  0E2B               	movlw	43
  9712  001DD2  D003               	goto	L5
  9713  001DD4                     l6484:
  9714                           
  9715                           ; BSR set to: 0
  9716  001DD4  0E00               	movlw	0
  9717  001DD6  6FB2               	movwf	(_dtoa$1099+1)& (0+255),b
  9718  001DD8  0E2D               	movlw	45
  9719  001DDA                     L5:
  9720  001DDA  6FB1               	movwf	_dtoa$1099& (0+255),b
  9721                           
  9722                           ; BSR set to: 0
  9723  001DDC  0E78               	movlw	low _dbuf
  9724  001DDE  25C1               	addwf	dtoa@i& (0+255),w,b
  9725  001DE0  6ED9               	movwf	fsr2l,c
  9726  001DE2  0E01               	movlw	high _dbuf
  9727  001DE4  21C2               	addwfc	(dtoa@i+1)& (0+255),w,b
  9728  001DE6  6EDA               	movwf	fsr2h,c
  9729  001DE8  C0B1  FFDF         	movff	_dtoa$1099,indf2
  9730  001DEC                     l6488:
  9731                           
  9732                           ; BSR set to: 0
  9733                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  9734  001DEC  C09F  F094         	movff	dtoa@fp,pad@fp
  9735  001DF0  C0A0  F095         	movff	dtoa@fp+1,pad@fp+1
  9736  001DF4  0E78               	movlw	low _dbuf
  9737  001DF6  25C1               	addwf	dtoa@i& (0+255),w,b
  9738  001DF8  6F96               	movwf	pad@buf& (0+255),b
  9739  001DFA  0E01               	movlw	high _dbuf
  9740  001DFC  21C2               	addwfc	(dtoa@i+1)& (0+255),w,b
  9741  001DFE  6F97               	movwf	(pad@buf+1)& (0+255),b
  9742  001E00  C0B5  F098         	movff	dtoa@w,pad@p
  9743  001E04  C0B6  F099         	movff	dtoa@w+1,pad@p+1
  9744  001E08  EC8D  F018         	call	_pad	;wreg free
  9745  001E0C  C094  F09F         	movff	?_pad,?_dtoa
  9746  001E10  C095  F0A0         	movff	?_pad+1,?_dtoa+1
  9747  001E14  0012               	return		;funcret
  9748  001E16                     __end_of_dtoa:
  9749                           	opt callstack 0
  9750                           
  9751 ;; *************** function _pad *****************
  9752 ;; Defined at:
  9753 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9754 ;; Parameters:    Size  Location     Type
  9755 ;;  fp              2   20[BANK0 ] PTR struct _IO_FILE
  9756 ;;		 -> NULL(0), 
  9757 ;;  buf             2   22[BANK0 ] PTR unsigned char 
  9758 ;;		 -> dbuf(32), 
  9759 ;;  p               2   24[BANK0 ] int 
  9760 ;; Auto vars:     Size  Location     Type
  9761 ;;  w               2   29[BANK0 ] int 
  9762 ;;  i               2   27[BANK0 ] int 
  9763 ;; Return value:  Size  Location     Type
  9764 ;;                  2   20[BANK0 ] int 
  9765 ;; Registers used:
  9766 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9767 ;; Tracked objects:
  9768 ;;		On entry : 0/0
  9769 ;;		On exit  : 0/0
  9770 ;;		Unchanged: 0/0
  9771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9772 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9773 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9774 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9775 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9776 ;;Total ram usage:       11 bytes
  9777 ;; Hardware stack levels used:    1
  9778 ;; Hardware stack levels required when called:    9
  9779 ;; This function calls:
  9780 ;;		_fputc
  9781 ;;		_fputs
  9782 ;;		_strlen
  9783 ;; This function is called by:
  9784 ;;		_dtoa
  9785 ;;		_xtoa
  9786 ;; This function uses a non-reentrant model
  9787 ;;
  9788                           
  9789                           	psect	text29
  9790  00311A                     __ptext29:
  9791                           	opt callstack 0
  9792  00311A                     _pad:
  9793                           	opt callstack 16
  9794                           
  9795                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  9796                           
  9797                           ;incstack = 0
  9798  00311A  A04E               	btfss	_flags,0,c
  9799  00311C  D00A               	goto	l6292
  9800                           
  9801                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  9802  00311E  C096  F08D         	movff	pad@buf,fputs@s
  9803  003122  C097  F08E         	movff	pad@buf+1,fputs@s+1
  9804  003126  C094  F08F         	movff	pad@fp,fputs@fp
  9805  00312A  C095  F090         	movff	pad@fp+1,fputs@fp+1
  9806  00312E  ECF0  F01B         	call	_fputs	;wreg free
  9807  003132                     l6292:
  9808                           
  9809                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  9810  003132  0100               	movlb	0	; () banked
  9811  003134  BF99               	btfsc	(pad@p+1)& (0+255),7,b
  9812  003136  D005               	goto	l6296
  9813                           
  9814                           ; BSR set to: 0
  9815  003138  C098  F09D         	movff	pad@p,pad@w
  9816  00313C  C099  F09E         	movff	pad@p+1,pad@w+1
  9817  003140  D004               	goto	l584
  9818  003142                     l6296:
  9819                           
  9820                           ; BSR set to: 0
  9821  003142  0E00               	movlw	0
  9822  003144  6F9E               	movwf	(pad@w+1)& (0+255),b
  9823  003146  0E00               	movlw	0
  9824  003148  6F9D               	movwf	pad@w& (0+255),b
  9825  00314A                     l584:
  9826                           
  9827                           ; BSR set to: 0
  9828                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  9829  00314A  0E00               	movlw	0
  9830  00314C  6F9C               	movwf	(pad@i+1)& (0+255),b
  9831  00314E  0E00               	movlw	0
  9832  003150  6F9B               	movwf	pad@i& (0+255),b
  9833                           
  9834                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  9835  003152  D00D               	goto	l6302
  9836  003154                     l6298:
  9837                           
  9838                           ; BSR set to: 0
  9839                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  9840  003154  0E00               	movlw	0
  9841  003156  6F85               	movwf	(fputc@c+1)& (0+255),b
  9842  003158  0E20               	movlw	32
  9843  00315A  6F84               	movwf	fputc@c& (0+255),b
  9844  00315C  C094  F086         	movff	pad@fp,fputc@fp
  9845  003160  C095  F087         	movff	pad@fp+1,fputc@fp+1
  9846  003164  EC1E  F01A         	call	_fputc	;wreg free
  9847                           
  9848                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  9849  003168  0100               	movlb	0	; () banked
  9850  00316A  4B9B               	infsnz	pad@i& (0+255),f,b
  9851  00316C  2B9C               	incf	(pad@i+1)& (0+255),f,b
  9852  00316E                     l6302:
  9853                           
  9854                           ; BSR set to: 0
  9855                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  9856  00316E  519D               	movf	pad@w& (0+255),w,b
  9857  003170  5D9B               	subwf	pad@i& (0+255),w,b
  9858  003172  519C               	movf	(pad@i+1)& (0+255),w,b
  9859  003174  0A80               	xorlw	128
  9860  003176  6F9A               	movwf	??_pad& (0+255),b
  9861  003178  519E               	movf	(pad@w+1)& (0+255),w,b
  9862  00317A  0A80               	xorlw	128
  9863  00317C  599A               	subwfb	??_pad& (0+255),w,b
  9864  00317E  A0D8               	btfss	status,0,c
  9865  003180  D7E9               	goto	l6298
  9866                           
  9867                           ; BSR set to: 0
  9868                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  9869  003182  B04E               	btfsc	_flags,0,c
  9870  003184  D00A               	goto	l6306
  9871                           
  9872                           ; BSR set to: 0
  9873                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  9874  003186  C096  F08D         	movff	pad@buf,fputs@s
  9875  00318A  C097  F08E         	movff	pad@buf+1,fputs@s+1
  9876  00318E  C094  F08F         	movff	pad@fp,fputs@fp
  9877  003192  C095  F090         	movff	pad@fp+1,fputs@fp+1
  9878  003196  ECF0  F01B         	call	_fputs	;wreg free
  9879  00319A                     l6306:
  9880                           
  9881                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  9882  00319A  C096  F080         	movff	pad@buf,strlen@s
  9883  00319E  C097  F081         	movff	pad@buf+1,strlen@s+1
  9884  0031A2  ECA7  F01C         	call	_strlen	;wreg free
  9885  0031A6  0100               	movlb	0	; () banked
  9886  0031A8  519D               	movf	pad@w& (0+255),w,b
  9887  0031AA  2580               	addwf	?_strlen& (0+255),w,b
  9888  0031AC  6F94               	movwf	?_pad& (0+255),b
  9889  0031AE  519E               	movf	(pad@w+1)& (0+255),w,b
  9890  0031B0  2181               	addwfc	(?_strlen+1)& (0+255),w,b
  9891  0031B2  6F95               	movwf	(?_pad+1)& (0+255),b
  9892                           
  9893                           ; BSR set to: 0
  9894  0031B4  0012               	return		;funcret
  9895  0031B6                     __end_of_pad:
  9896                           	opt callstack 0
  9897                           
  9898 ;; *************** function _strlen *****************
  9899 ;; Defined at:
  9900 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  9901 ;; Parameters:    Size  Location     Type
  9902 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  9903 ;;		 -> dbuf(32), 
  9904 ;; Auto vars:     Size  Location     Type
  9905 ;;  a               2    2[BANK0 ] PTR const unsigned char 
  9906 ;;		 -> dbuf(32), 
  9907 ;; Return value:  Size  Location     Type
  9908 ;;                  2    0[BANK0 ] unsigned int 
  9909 ;; Registers used:
  9910 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9911 ;; Tracked objects:
  9912 ;;		On entry : 0/0
  9913 ;;		On exit  : 0/0
  9914 ;;		Unchanged: 0/0
  9915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9916 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9917 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9919 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9920 ;;Total ram usage:        4 bytes
  9921 ;; Hardware stack levels used:    1
  9922 ;; Hardware stack levels required when called:    3
  9923 ;; This function calls:
  9924 ;;		Nothing
  9925 ;; This function is called by:
  9926 ;;		_pad
  9927 ;; This function uses a non-reentrant model
  9928 ;;
  9929                           
  9930                           	psect	text30
  9931  00394E                     __ptext30:
  9932                           	opt callstack 0
  9933  00394E                     _strlen:
  9934                           	opt callstack 21
  9935                           
  9936                           ; BSR set to: 0
  9937                           ;incstack = 0
  9938  00394E  C080  F082         	movff	strlen@s,strlen@a
  9939  003952  C081  F083         	movff	strlen@s+1,strlen@a+1
  9940  003956  D003               	goto	l6274
  9941  003958                     l6272:
  9942  003958  0100               	movlb	0	; () banked
  9943  00395A  4B80               	infsnz	strlen@s& (0+255),f,b
  9944  00395C  2B81               	incf	(strlen@s+1)& (0+255),f,b
  9945  00395E                     l6274:
  9946  00395E  C080  FFD9         	movff	strlen@s,fsr2l
  9947  003962  C081  FFDA         	movff	strlen@s+1,fsr2h
  9948  003966  50DF               	movf	indf2,w,c
  9949  003968  A4D8               	btfss	status,2,c
  9950  00396A  D7F6               	goto	l6272
  9951  00396C  0100               	movlb	0	; () banked
  9952  00396E  5182               	movf	strlen@a& (0+255),w,b
  9953  003970  5D80               	subwf	strlen@s& (0+255),w,b
  9954  003972  6F80               	movwf	?_strlen& (0+255),b
  9955  003974  5183               	movf	(strlen@a+1)& (0+255),w,b
  9956  003976  5981               	subwfb	(strlen@s+1)& (0+255),w,b
  9957  003978  6F81               	movwf	(?_strlen+1)& (0+255),b
  9958                           
  9959                           ; BSR set to: 0
  9960  00397A  0012               	return		;funcret
  9961  00397C                     __end_of_strlen:
  9962                           	opt callstack 0
  9963                           
  9964 ;; *************** function _fputs *****************
  9965 ;; Defined at:
  9966 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  9967 ;; Parameters:    Size  Location     Type
  9968 ;;  s               2   13[BANK0 ] PTR const unsigned char 
  9969 ;;		 -> dbuf(32), 
  9970 ;;  fp              2   15[BANK0 ] PTR struct _IO_FILE
  9971 ;;		 -> NULL(0), 
  9972 ;; Auto vars:     Size  Location     Type
  9973 ;;  i               2   18[BANK0 ] int 
  9974 ;;  c               1   17[BANK0 ] unsigned char 
  9975 ;; Return value:  Size  Location     Type
  9976 ;;                  2   13[BANK0 ] int 
  9977 ;; Registers used:
  9978 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9979 ;; Tracked objects:
  9980 ;;		On entry : 0/0
  9981 ;;		On exit  : 0/0
  9982 ;;		Unchanged: 0/0
  9983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9984 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9985 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9987 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9988 ;;Total ram usage:        7 bytes
  9989 ;; Hardware stack levels used:    1
  9990 ;; Hardware stack levels required when called:    8
  9991 ;; This function calls:
  9992 ;;		_fputc
  9993 ;; This function is called by:
  9994 ;;		_pad
  9995 ;; This function uses a non-reentrant model
  9996 ;;
  9997                           
  9998                           	psect	text31
  9999  0037E0                     __ptext31:
 10000                           	opt callstack 0
 10001  0037E0                     _fputs:
 10002                           	opt callstack 16
 10003                           
 10004                           ; BSR set to: 0
 10005                           ;incstack = 0
 10006  0037E0  0E00               	movlw	0
 10007  0037E2  0100               	movlb	0	; () banked
 10008  0037E4  6F93               	movwf	(fputs@i+1)& (0+255),b
 10009  0037E6  0E00               	movlw	0
 10010  0037E8  6F92               	movwf	fputs@i& (0+255),b
 10011  0037EA  D00C               	goto	l6268
 10012  0037EC                     l6264:
 10013                           
 10014                           ; BSR set to: 0
 10015  0037EC  C091  F084         	movff	fputs@c,fputc@c
 10016  0037F0  6B85               	clrf	(fputc@c+1)& (0+255),b
 10017  0037F2  C08F  F086         	movff	fputs@fp,fputc@fp
 10018  0037F6  C090  F087         	movff	fputs@fp+1,fputc@fp+1
 10019  0037FA  EC1E  F01A         	call	_fputc	;wreg free
 10020  0037FE  0100               	movlb	0	; () banked
 10021  003800  4B92               	infsnz	fputs@i& (0+255),f,b
 10022  003802  2B93               	incf	(fputs@i+1)& (0+255),f,b
 10023  003804                     l6268:
 10024                           
 10025                           ; BSR set to: 0
 10026  003804  5192               	movf	fputs@i& (0+255),w,b
 10027  003806  258D               	addwf	fputs@s& (0+255),w,b
 10028  003808  6ED9               	movwf	fsr2l,c
 10029  00380A  5193               	movf	(fputs@i+1)& (0+255),w,b
 10030  00380C  218E               	addwfc	(fputs@s+1)& (0+255),w,b
 10031  00380E  6EDA               	movwf	fsr2h,c
 10032  003810  50DF               	movf	indf2,w,c
 10033  003812  6F91               	movwf	fputs@c& (0+255),b
 10034  003814  5191               	movf	fputs@c& (0+255),w,b
 10035  003816  B4D8               	btfsc	status,2,c
 10036  003818  0012               	return	
 10037  00381A  D7E8               	goto	l6264
 10038  00381C                     __end_of_fputs:
 10039                           	opt callstack 0
 10040                           
 10041 ;; *************** function _fputc *****************
 10042 ;; Defined at:
 10043 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
 10044 ;; Parameters:    Size  Location     Type
 10045 ;;  c               2    4[BANK0 ] int 
 10046 ;;  fp              2    6[BANK0 ] PTR struct _IO_FILE
 10047 ;;		 -> NULL(0), 
 10048 ;; Auto vars:     Size  Location     Type
 10049 ;;		None
 10050 ;; Return value:  Size  Location     Type
 10051 ;;                  2    4[BANK0 ] int 
 10052 ;; Registers used:
 10053 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10054 ;; Tracked objects:
 10055 ;;		On entry : 0/0
 10056 ;;		On exit  : 0/0
 10057 ;;		Unchanged: 0/0
 10058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10059 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10061 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10062 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10063 ;;Total ram usage:        9 bytes
 10064 ;; Hardware stack levels used:    1
 10065 ;; Hardware stack levels required when called:    7
 10066 ;; This function calls:
 10067 ;;		_putch
 10068 ;; This function is called by:
 10069 ;;		_pad
 10070 ;;		_vfpfcnvrt
 10071 ;;		_fputs
 10072 ;; This function uses a non-reentrant model
 10073 ;;
 10074                           
 10075                           	psect	text32
 10076  00343C                     __ptext32:
 10077                           	opt callstack 0
 10078  00343C                     _fputc:
 10079                           	opt callstack 16
 10080                           
 10081                           ; BSR set to: 0
 10082                           ;incstack = 0
 10083  00343C  0100               	movlb	0	; () banked
 10084  00343E  5186               	movf	fputc@fp& (0+255),w,b
 10085  003440  1187               	iorwf	(fputc@fp+1)& (0+255),w,b
 10086  003442  B4D8               	btfsc	status,2,c
 10087  003444  D004               	goto	u6450
 10088                           
 10089                           ; BSR set to: 0
 10090  003446  5186               	movf	fputc@fp& (0+255),w,b
 10091  003448  1187               	iorwf	(fputc@fp+1)& (0+255),w,b
 10092  00344A  A4D8               	btfss	status,2,c
 10093  00344C  D004               	goto	l6254
 10094  00344E                     u6450:
 10095                           
 10096                           ; BSR set to: 0
 10097  00344E  5184               	movf	fputc@c& (0+255),w,b
 10098  003450  EC71  F01D         	call	_putch
 10099  003454  0012               	return	
 10100  003456                     l6254:
 10101                           
 10102                           ; BSR set to: 0
 10103  003456  EE20 F004          	lfsr	2,4
 10104  00345A  5186               	movf	fputc@fp& (0+255),w,b
 10105  00345C  26D9               	addwf	fsr2l,f,c
 10106  00345E  5187               	movf	(fputc@fp+1)& (0+255),w,b
 10107  003460  22DA               	addwfc	fsr2h,f,c
 10108  003462  50DE               	movf	postinc2,w,c
 10109  003464  10DE               	iorwf	postinc2,w,c
 10110  003466  B4D8               	btfsc	status,2,c
 10111  003468  D016               	goto	u6470
 10112                           
 10113                           ; BSR set to: 0
 10114  00346A  EE20 F004          	lfsr	2,4
 10115  00346E  5186               	movf	fputc@fp& (0+255),w,b
 10116  003470  26D9               	addwf	fsr2l,f,c
 10117  003472  5187               	movf	(fputc@fp+1)& (0+255),w,b
 10118  003474  22DA               	addwfc	fsr2h,f,c
 10119  003476  EE10 F002          	lfsr	1,2
 10120  00347A  5186               	movf	fputc@fp& (0+255),w,b
 10121  00347C  26E1               	addwf	fsr1l,f,c
 10122  00347E  5187               	movf	(fputc@fp+1)& (0+255),w,b
 10123  003480  22E2               	addwfc	fsr1h,f,c
 10124  003482  50DE               	movf	postinc2,w,c
 10125  003484  5CE6               	subwf	postinc1,w,c
 10126  003486  50E6               	movf	postinc1,w,c
 10127  003488  0A80               	xorlw	128
 10128  00348A  6F8C               	movwf	(??_fputc+4)& (0+255),b
 10129  00348C  50DE               	movf	postinc2,w,c
 10130  00348E  0A80               	xorlw	128
 10131  003490  598C               	subwfb	(??_fputc+4)& (0+255),w,b
 10132  003492  B0D8               	btfsc	status,0,c
 10133  003494  0012               	return	
 10134  003496                     u6470:
 10135                           
 10136                           ; BSR set to: 0
 10137  003496  EE20 F002          	lfsr	2,2
 10138  00349A  5186               	movf	fputc@fp& (0+255),w,b
 10139  00349C  26D9               	addwf	fsr2l,f,c
 10140  00349E  5187               	movf	(fputc@fp+1)& (0+255),w,b
 10141  0034A0  22DA               	addwfc	fsr2h,f,c
 10142  0034A2  2ADE               	incf	postinc2,f,c
 10143  0034A4  0E00               	movlw	0
 10144  0034A6  22DD               	addwfc	postdec2,f,c
 10145  0034A8  0012               	return		;funcret
 10146  0034AA                     __end_of_fputc:
 10147                           	opt callstack 0
 10148                           
 10149 ;; *************** function _putch *****************
 10150 ;; Defined at:
 10151 ;;		line 102 in file "lcd.c"
 10152 ;; Parameters:    Size  Location     Type
 10153 ;;  data            1    wreg     unsigned char 
 10154 ;; Auto vars:     Size  Location     Type
 10155 ;;  data            1    3[BANK0 ] unsigned char 
 10156 ;; Return value:  Size  Location     Type
 10157 ;;                  1    wreg      void 
 10158 ;; Registers used:
 10159 ;;		wreg, status,2, status,0, cstack
 10160 ;; Tracked objects:
 10161 ;;		On entry : 0/0
 10162 ;;		On exit  : 0/0
 10163 ;;		Unchanged: 0/0
 10164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10166 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10168 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10169 ;;Total ram usage:        1 bytes
 10170 ;; Hardware stack levels used:    1
 10171 ;; Hardware stack levels required when called:    6
 10172 ;; This function calls:
 10173 ;;		_send_byte
 10174 ;; This function is called by:
 10175 ;;		_fputc
 10176 ;; This function uses a non-reentrant model
 10177 ;;
 10178                           
 10179                           	psect	text33
 10180  003AE2                     __ptext33:
 10181                           	opt callstack 0
 10182  003AE2                     _putch:
 10183                           	opt callstack 16
 10184                           
 10185                           ;incstack = 0
 10186                           ;putch@data stored from wreg
 10187  003AE2  0100               	movlb	0	; () banked
 10188  003AE4  6F83               	movwf	putch@data& (0+255),b
 10189                           
 10190                           ;lcd.c: 103:     LATDbits.LATD2 = 1;
 10191  003AE6  848C               	bsf	3980,2,c	;volatile
 10192                           
 10193                           ;lcd.c: 104:     send_byte((unsigned char)data);
 10194  003AE8  0100               	movlb	0	; () banked
 10195  003AEA  5183               	movf	putch@data& (0+255),w,b
 10196  003AEC  EC5B  F01D         	call	_send_byte
 10197  003AF0  0012               	return		;funcret
 10198  003AF2                     __end_of_putch:
 10199                           	opt callstack 0
 10200                           
 10201 ;; *************** function _abs *****************
 10202 ;; Defined at:
 10203 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
 10204 ;; Parameters:    Size  Location     Type
 10205 ;;  a               2   18[BANK0 ] int 
 10206 ;; Auto vars:     Size  Location     Type
 10207 ;;		None
 10208 ;; Return value:  Size  Location     Type
 10209 ;;                  2   18[BANK0 ] int 
 10210 ;; Registers used:
 10211 ;;		wreg, status,2, status,0
 10212 ;; Tracked objects:
 10213 ;;		On entry : 0/0
 10214 ;;		On exit  : 0/0
 10215 ;;		Unchanged: 0/0
 10216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10217 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10219 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10220 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10221 ;;Total ram usage:        4 bytes
 10222 ;; Hardware stack levels used:    1
 10223 ;; Hardware stack levels required when called:    3
 10224 ;; This function calls:
 10225 ;;		Nothing
 10226 ;; This function is called by:
 10227 ;;		_ultrasonic_main
 10228 ;;		_dtoa
 10229 ;; This function uses a non-reentrant model
 10230 ;;
 10231                           
 10232                           	psect	text34
 10233  003852                     __ptext34:
 10234                           	opt callstack 0
 10235  003852                     _abs:
 10236                           	opt callstack 22
 10237                           
 10238                           ;incstack = 0
 10239  003852  0100               	movlb	0	; () banked
 10240  003854  BF93               	btfsc	(abs@a+1)& (0+255),7,b
 10241  003856  D005               	goto	u6520
 10242  003858  5193               	movf	(abs@a+1)& (0+255),w,b
 10243  00385A  E110               	bnz	l1362
 10244  00385C  0592               	decf	abs@a& (0+255),w,b
 10245  00385E  B0D8               	btfsc	status,0,c
 10246  003860  D00D               	goto	l1362
 10247  003862                     u6520:
 10248                           
 10249                           ; BSR set to: 0
 10250  003862  C092  F094         	movff	abs@a,??_abs
 10251  003866  C093  F095         	movff	abs@a+1,??_abs+1
 10252  00386A  1F94               	comf	??_abs& (0+255),f,b
 10253  00386C  1F95               	comf	(??_abs+1)& (0+255),f,b
 10254  00386E  4B94               	infsnz	??_abs& (0+255),f,b
 10255  003870  2B95               	incf	(??_abs+1)& (0+255),f,b
 10256  003872  C094  F092         	movff	??_abs,?_abs
 10257  003876  C095  F093         	movff	??_abs+1,?_abs+1
 10258  00387A  0012               	return	
 10259  00387C                     l1362:
 10260                           
 10261                           ; BSR set to: 0
 10262  00387C  C092  F092         	movff	abs@a,?_abs
 10263  003880  C093  F093         	movff	abs@a+1,?_abs+1
 10264                           
 10265                           ; BSR set to: 0
 10266  003884  0012               	return		;funcret
 10267  003886                     __end_of_abs:
 10268                           	opt callstack 0
 10269                           
 10270 ;; *************** function ___aomod *****************
 10271 ;; Defined at:
 10272 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
 10273 ;; Parameters:    Size  Location     Type
 10274 ;;  dividend        8    0[BANK0 ] long long 
 10275 ;;  divisor         8    8[BANK0 ] long long 
 10276 ;; Auto vars:     Size  Location     Type
 10277 ;;  sign            1   17[BANK0 ] unsigned char 
 10278 ;;  counter         1   16[BANK0 ] unsigned char 
 10279 ;; Return value:  Size  Location     Type
 10280 ;;                  8    0[BANK0 ] long long 
 10281 ;; Registers used:
 10282 ;;		wreg, status,2, status,0
 10283 ;; Tracked objects:
 10284 ;;		On entry : 0/0
 10285 ;;		On exit  : 0/0
 10286 ;;		Unchanged: 0/0
 10287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10288 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10289 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10291 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10292 ;;Total ram usage:       18 bytes
 10293 ;; Hardware stack levels used:    1
 10294 ;; Hardware stack levels required when called:    3
 10295 ;; This function calls:
 10296 ;;		Nothing
 10297 ;; This function is called by:
 10298 ;;		_dtoa
 10299 ;; This function uses a non-reentrant model
 10300 ;;
 10301                           
 10302                           	psect	text35
 10303  002B8C                     __ptext35:
 10304                           	opt callstack 0
 10305  002B8C                     ___aomod:
 10306                           	opt callstack 22
 10307                           
 10308                           ; BSR set to: 0
 10309                           ;incstack = 0
 10310  002B8C  0E00               	movlw	0
 10311  002B8E  0100               	movlb	0	; () banked
 10312  002B90  6F91               	movwf	___aomod@sign& (0+255),b
 10313                           
 10314                           ; BSR set to: 0
 10315  002B92  AF87               	btfss	(___aomod@dividend+7)& (0+255),7,b
 10316  002B94  D012               	goto	l6390
 10317                           
 10318                           ; BSR set to: 0
 10319  002B96  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
 10320  002B98  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
 10321  002B9A  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
 10322  002B9C  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
 10323  002B9E  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
 10324  002BA0  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
 10325  002BA2  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
 10326  002BA4  6D80               	negf	___aomod@dividend& (0+255),b
 10327  002BA6  0E00               	movlw	0
 10328  002BA8  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 10329  002BAA  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 10330  002BAC  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 10331  002BAE  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 10332  002BB0  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 10333  002BB2  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 10334  002BB4  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 10335                           
 10336                           ; BSR set to: 0
 10337  002BB6  0E01               	movlw	1
 10338  002BB8  6F91               	movwf	___aomod@sign& (0+255),b
 10339  002BBA                     l6390:
 10340                           
 10341                           ; BSR set to: 0
 10342  002BBA  AF8F               	btfss	(___aomod@divisor+7)& (0+255),7,b
 10343  002BBC  D010               	goto	l6394
 10344                           
 10345                           ; BSR set to: 0
 10346  002BBE  1F8F               	comf	(___aomod@divisor+7)& (0+255),f,b
 10347  002BC0  1F8E               	comf	(___aomod@divisor+6)& (0+255),f,b
 10348  002BC2  1F8D               	comf	(___aomod@divisor+5)& (0+255),f,b
 10349  002BC4  1F8C               	comf	(___aomod@divisor+4)& (0+255),f,b
 10350  002BC6  1F8B               	comf	(___aomod@divisor+3)& (0+255),f,b
 10351  002BC8  1F8A               	comf	(___aomod@divisor+2)& (0+255),f,b
 10352  002BCA  1F89               	comf	(___aomod@divisor+1)& (0+255),f,b
 10353  002BCC  6D88               	negf	___aomod@divisor& (0+255),b
 10354  002BCE  0E00               	movlw	0
 10355  002BD0  2389               	addwfc	(___aomod@divisor+1)& (0+255),f,b
 10356  002BD2  238A               	addwfc	(___aomod@divisor+2)& (0+255),f,b
 10357  002BD4  238B               	addwfc	(___aomod@divisor+3)& (0+255),f,b
 10358  002BD6  238C               	addwfc	(___aomod@divisor+4)& (0+255),f,b
 10359  002BD8  238D               	addwfc	(___aomod@divisor+5)& (0+255),f,b
 10360  002BDA  238E               	addwfc	(___aomod@divisor+6)& (0+255),f,b
 10361  002BDC  238F               	addwfc	(___aomod@divisor+7)& (0+255),f,b
 10362  002BDE                     l6394:
 10363                           
 10364                           ; BSR set to: 0
 10365  002BDE  5188               	movf	___aomod@divisor& (0+255),w,b
 10366  002BE0  1189               	iorwf	(___aomod@divisor+1)& (0+255),w,b
 10367  002BE2  118A               	iorwf	(___aomod@divisor+2)& (0+255),w,b
 10368  002BE4  118B               	iorwf	(___aomod@divisor+3)& (0+255),w,b
 10369  002BE6  118C               	iorwf	(___aomod@divisor+4)& (0+255),w,b
 10370  002BE8  118D               	iorwf	(___aomod@divisor+5)& (0+255),w,b
 10371  002BEA  118E               	iorwf	(___aomod@divisor+6)& (0+255),w,b
 10372  002BEC  118F               	iorwf	(___aomod@divisor+7)& (0+255),w,b
 10373  002BEE  B4D8               	btfsc	status,2,c
 10374  002BF0  D03C               	goto	l6410
 10375                           
 10376                           ; BSR set to: 0
 10377  002BF2  0E01               	movlw	1
 10378  002BF4  6F90               	movwf	___aomod@counter& (0+255),b
 10379  002BF6  D00A               	goto	l6400
 10380  002BF8                     l6398:
 10381                           
 10382                           ; BSR set to: 0
 10383  002BF8  90D8               	bcf	status,0,c
 10384  002BFA  3788               	rlcf	___aomod@divisor& (0+255),f,b
 10385  002BFC  3789               	rlcf	(___aomod@divisor+1)& (0+255),f,b
 10386  002BFE  378A               	rlcf	(___aomod@divisor+2)& (0+255),f,b
 10387  002C00  378B               	rlcf	(___aomod@divisor+3)& (0+255),f,b
 10388  002C02  378C               	rlcf	(___aomod@divisor+4)& (0+255),f,b
 10389  002C04  378D               	rlcf	(___aomod@divisor+5)& (0+255),f,b
 10390  002C06  378E               	rlcf	(___aomod@divisor+6)& (0+255),f,b
 10391  002C08  378F               	rlcf	(___aomod@divisor+7)& (0+255),f,b
 10392  002C0A  2B90               	incf	___aomod@counter& (0+255),f,b
 10393  002C0C                     l6400:
 10394                           
 10395                           ; BSR set to: 0
 10396  002C0C  AF8F               	btfss	(___aomod@divisor+7)& (0+255),7,b
 10397  002C0E  D7F4               	goto	l6398
 10398  002C10                     u6760:
 10399                           
 10400                           ; BSR set to: 0
 10401  002C10  5188               	movf	___aomod@divisor& (0+255),w,b
 10402  002C12  5D80               	subwf	___aomod@dividend& (0+255),w,b
 10403  002C14  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
 10404  002C16  5981               	subwfb	(___aomod@dividend+1)& (0+255),w,b
 10405  002C18  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
 10406  002C1A  5982               	subwfb	(___aomod@dividend+2)& (0+255),w,b
 10407  002C1C  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
 10408  002C1E  5983               	subwfb	(___aomod@dividend+3)& (0+255),w,b
 10409  002C20  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
 10410  002C22  5984               	subwfb	(___aomod@dividend+4)& (0+255),w,b
 10411  002C24  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
 10412  002C26  5985               	subwfb	(___aomod@dividend+5)& (0+255),w,b
 10413  002C28  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
 10414  002C2A  5986               	subwfb	(___aomod@dividend+6)& (0+255),w,b
 10415  002C2C  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
 10416  002C2E  5987               	subwfb	(___aomod@dividend+7)& (0+255),w,b
 10417  002C30  A0D8               	btfss	status,0,c
 10418  002C32  D010               	goto	l6406
 10419                           
 10420                           ; BSR set to: 0
 10421  002C34  5188               	movf	___aomod@divisor& (0+255),w,b
 10422  002C36  5F80               	subwf	___aomod@dividend& (0+255),f,b
 10423  002C38  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
 10424  002C3A  5B81               	subwfb	(___aomod@dividend+1)& (0+255),f,b
 10425  002C3C  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
 10426  002C3E  5B82               	subwfb	(___aomod@dividend+2)& (0+255),f,b
 10427  002C40  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
 10428  002C42  5B83               	subwfb	(___aomod@dividend+3)& (0+255),f,b
 10429  002C44  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
 10430  002C46  5B84               	subwfb	(___aomod@dividend+4)& (0+255),f,b
 10431  002C48  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
 10432  002C4A  5B85               	subwfb	(___aomod@dividend+5)& (0+255),f,b
 10433  002C4C  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
 10434  002C4E  5B86               	subwfb	(___aomod@dividend+6)& (0+255),f,b
 10435  002C50  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
 10436  002C52  5B87               	subwfb	(___aomod@dividend+7)& (0+255),f,b
 10437  002C54                     l6406:
 10438                           
 10439                           ; BSR set to: 0
 10440  002C54  90D8               	bcf	status,0,c
 10441  002C56  338F               	rrcf	(___aomod@divisor+7)& (0+255),f,b
 10442  002C58  338E               	rrcf	(___aomod@divisor+6)& (0+255),f,b
 10443  002C5A  338D               	rrcf	(___aomod@divisor+5)& (0+255),f,b
 10444  002C5C  338C               	rrcf	(___aomod@divisor+4)& (0+255),f,b
 10445  002C5E  338B               	rrcf	(___aomod@divisor+3)& (0+255),f,b
 10446  002C60  338A               	rrcf	(___aomod@divisor+2)& (0+255),f,b
 10447  002C62  3389               	rrcf	(___aomod@divisor+1)& (0+255),f,b
 10448  002C64  3388               	rrcf	___aomod@divisor& (0+255),f,b
 10449                           
 10450                           ; BSR set to: 0
 10451  002C66  2F90               	decfsz	___aomod@counter& (0+255),f,b
 10452  002C68  D7D3               	goto	u6760
 10453  002C6A                     l6410:
 10454                           
 10455                           ; BSR set to: 0
 10456  002C6A  5191               	movf	___aomod@sign& (0+255),w,b
 10457  002C6C  B4D8               	btfsc	status,2,c
 10458  002C6E  D010               	goto	l6414
 10459                           
 10460                           ; BSR set to: 0
 10461  002C70  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
 10462  002C72  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
 10463  002C74  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
 10464  002C76  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
 10465  002C78  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
 10466  002C7A  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
 10467  002C7C  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
 10468  002C7E  6D80               	negf	___aomod@dividend& (0+255),b
 10469  002C80  0E00               	movlw	0
 10470  002C82  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 10471  002C84  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 10472  002C86  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 10473  002C88  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 10474  002C8A  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 10475  002C8C  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 10476  002C8E  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 10477  002C90                     l6414:
 10478                           
 10479                           ; BSR set to: 0
 10480  002C90  C080  F080         	movff	___aomod@dividend,?___aomod
 10481  002C94  C081  F081         	movff	___aomod@dividend+1,?___aomod+1
 10482  002C98  C082  F082         	movff	___aomod@dividend+2,?___aomod+2
 10483  002C9C  C083  F083         	movff	___aomod@dividend+3,?___aomod+3
 10484  002CA0  C084  F084         	movff	___aomod@dividend+4,?___aomod+4
 10485  002CA4  C085  F085         	movff	___aomod@dividend+5,?___aomod+5
 10486  002CA8  C086  F086         	movff	___aomod@dividend+6,?___aomod+6
 10487  002CAC  C087  F087         	movff	___aomod@dividend+7,?___aomod+7
 10488                           
 10489                           ; BSR set to: 0
 10490  002CB0  0012               	return		;funcret
 10491  002CB2                     __end_of___aomod:
 10492                           	opt callstack 0
 10493                           
 10494 ;; *************** function ___aodiv *****************
 10495 ;; Defined at:
 10496 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
 10497 ;; Parameters:    Size  Location     Type
 10498 ;;  dividend        8    0[BANK0 ] long long 
 10499 ;;  divisor         8    8[BANK0 ] long long 
 10500 ;; Auto vars:     Size  Location     Type
 10501 ;;  quotient        8   18[BANK0 ] long long 
 10502 ;;  sign            1   17[BANK0 ] unsigned char 
 10503 ;;  counter         1   16[BANK0 ] unsigned char 
 10504 ;; Return value:  Size  Location     Type
 10505 ;;                  8    0[BANK0 ] long long 
 10506 ;; Registers used:
 10507 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10508 ;; Tracked objects:
 10509 ;;		On entry : 0/0
 10510 ;;		On exit  : 0/0
 10511 ;;		Unchanged: 0/0
 10512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10513 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10514 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10516 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10517 ;;Total ram usage:       26 bytes
 10518 ;; Hardware stack levels used:    1
 10519 ;; Hardware stack levels required when called:    3
 10520 ;; This function calls:
 10521 ;;		Nothing
 10522 ;; This function is called by:
 10523 ;;		_dtoa
 10524 ;; This function uses a non-reentrant model
 10525 ;;
 10526                           
 10527                           	psect	text36
 10528  002688                     __ptext36:
 10529                           	opt callstack 0
 10530  002688                     ___aodiv:
 10531                           	opt callstack 22
 10532                           
 10533                           ; BSR set to: 0
 10534                           ;incstack = 0
 10535  002688  0E00               	movlw	0
 10536  00268A  0100               	movlb	0	; () banked
 10537  00268C  6F91               	movwf	___aodiv@sign& (0+255),b
 10538                           
 10539                           ; BSR set to: 0
 10540  00268E  AF8F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 10541  002690  D012               	goto	l6346
 10542                           
 10543                           ; BSR set to: 0
 10544  002692  1F8F               	comf	(___aodiv@divisor+7)& (0+255),f,b
 10545  002694  1F8E               	comf	(___aodiv@divisor+6)& (0+255),f,b
 10546  002696  1F8D               	comf	(___aodiv@divisor+5)& (0+255),f,b
 10547  002698  1F8C               	comf	(___aodiv@divisor+4)& (0+255),f,b
 10548  00269A  1F8B               	comf	(___aodiv@divisor+3)& (0+255),f,b
 10549  00269C  1F8A               	comf	(___aodiv@divisor+2)& (0+255),f,b
 10550  00269E  1F89               	comf	(___aodiv@divisor+1)& (0+255),f,b
 10551  0026A0  6D88               	negf	___aodiv@divisor& (0+255),b
 10552  0026A2  0E00               	movlw	0
 10553  0026A4  2389               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
 10554  0026A6  238A               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
 10555  0026A8  238B               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
 10556  0026AA  238C               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
 10557  0026AC  238D               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
 10558  0026AE  238E               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
 10559  0026B0  238F               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
 10560                           
 10561                           ; BSR set to: 0
 10562  0026B2  0E01               	movlw	1
 10563  0026B4  6F91               	movwf	___aodiv@sign& (0+255),b
 10564  0026B6                     l6346:
 10565                           
 10566                           ; BSR set to: 0
 10567  0026B6  AF87               	btfss	(___aodiv@dividend+7)& (0+255),7,b
 10568  0026B8  D012               	goto	l6352
 10569                           
 10570                           ; BSR set to: 0
 10571  0026BA  1F87               	comf	(___aodiv@dividend+7)& (0+255),f,b
 10572  0026BC  1F86               	comf	(___aodiv@dividend+6)& (0+255),f,b
 10573  0026BE  1F85               	comf	(___aodiv@dividend+5)& (0+255),f,b
 10574  0026C0  1F84               	comf	(___aodiv@dividend+4)& (0+255),f,b
 10575  0026C2  1F83               	comf	(___aodiv@dividend+3)& (0+255),f,b
 10576  0026C4  1F82               	comf	(___aodiv@dividend+2)& (0+255),f,b
 10577  0026C6  1F81               	comf	(___aodiv@dividend+1)& (0+255),f,b
 10578  0026C8  6D80               	negf	___aodiv@dividend& (0+255),b
 10579  0026CA  0E00               	movlw	0
 10580  0026CC  2381               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
 10581  0026CE  2382               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
 10582  0026D0  2383               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
 10583  0026D2  2384               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
 10584  0026D4  2385               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
 10585  0026D6  2386               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
 10586  0026D8  2387               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
 10587                           
 10588                           ; BSR set to: 0
 10589  0026DA  0E01               	movlw	1
 10590  0026DC  1B91               	xorwf	___aodiv@sign& (0+255),f,b
 10591  0026DE                     l6352:
 10592                           
 10593                           ; BSR set to: 0
 10594  0026DE  EE20  F092         	lfsr	2,___aodiv@quotient
 10595  0026E2  0E07               	movlw	7
 10596  0026E4                     u6681:
 10597  0026E4  6ADE               	clrf	postinc2,c
 10598  0026E6  06E8               	decf	wreg,f,c
 10599  0026E8  E2FD               	bc	u6681
 10600                           
 10601                           ; BSR set to: 0
 10602  0026EA  5188               	movf	___aodiv@divisor& (0+255),w,b
 10603  0026EC  1189               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
 10604  0026EE  118A               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
 10605  0026F0  118B               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
 10606  0026F2  118C               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
 10607  0026F4  118D               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
 10608  0026F6  118E               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
 10609  0026F8  118F               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
 10610  0026FA  B4D8               	btfsc	status,2,c
 10611  0026FC  D046               	goto	l6374
 10612                           
 10613                           ; BSR set to: 0
 10614  0026FE  0E01               	movlw	1
 10615  002700  6F90               	movwf	___aodiv@counter& (0+255),b
 10616  002702  D00A               	goto	l6360
 10617  002704                     l6358:
 10618                           
 10619                           ; BSR set to: 0
 10620  002704  90D8               	bcf	status,0,c
 10621  002706  3788               	rlcf	___aodiv@divisor& (0+255),f,b
 10622  002708  3789               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
 10623  00270A  378A               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
 10624  00270C  378B               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
 10625  00270E  378C               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
 10626  002710  378D               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
 10627  002712  378E               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
 10628  002714  378F               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
 10629  002716  2B90               	incf	___aodiv@counter& (0+255),f,b
 10630  002718                     l6360:
 10631                           
 10632                           ; BSR set to: 0
 10633  002718  AF8F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 10634  00271A  D7F4               	goto	l6358
 10635  00271C                     u6700:
 10636                           
 10637                           ; BSR set to: 0
 10638  00271C  90D8               	bcf	status,0,c
 10639  00271E  3792               	rlcf	___aodiv@quotient& (0+255),f,b
 10640  002720  3793               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
 10641  002722  3794               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
 10642  002724  3795               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
 10643  002726  3796               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
 10644  002728  3797               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
 10645  00272A  3798               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
 10646  00272C  3799               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
 10647                           
 10648                           ; BSR set to: 0
 10649  00272E  5188               	movf	___aodiv@divisor& (0+255),w,b
 10650  002730  5D80               	subwf	___aodiv@dividend& (0+255),w,b
 10651  002732  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
 10652  002734  5981               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
 10653  002736  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
 10654  002738  5982               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
 10655  00273A  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
 10656  00273C  5983               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
 10657  00273E  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
 10658  002740  5984               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
 10659  002742  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
 10660  002744  5985               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
 10661  002746  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
 10662  002748  5986               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
 10663  00274A  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
 10664  00274C  5987               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
 10665  00274E  A0D8               	btfss	status,0,c
 10666  002750  D011               	goto	l6370
 10667                           
 10668                           ; BSR set to: 0
 10669  002752  5188               	movf	___aodiv@divisor& (0+255),w,b
 10670  002754  5F80               	subwf	___aodiv@dividend& (0+255),f,b
 10671  002756  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
 10672  002758  5B81               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
 10673  00275A  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
 10674  00275C  5B82               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
 10675  00275E  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
 10676  002760  5B83               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
 10677  002762  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
 10678  002764  5B84               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
 10679  002766  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
 10680  002768  5B85               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
 10681  00276A  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
 10682  00276C  5B86               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
 10683  00276E  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
 10684  002770  5B87               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
 10685                           
 10686                           ; BSR set to: 0
 10687  002772  8192               	bsf	___aodiv@quotient& (0+255),0,b
 10688  002774                     l6370:
 10689                           
 10690                           ; BSR set to: 0
 10691  002774  90D8               	bcf	status,0,c
 10692  002776  338F               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
 10693  002778  338E               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
 10694  00277A  338D               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
 10695  00277C  338C               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
 10696  00277E  338B               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
 10697  002780  338A               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
 10698  002782  3389               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
 10699  002784  3388               	rrcf	___aodiv@divisor& (0+255),f,b
 10700                           
 10701                           ; BSR set to: 0
 10702  002786  2F90               	decfsz	___aodiv@counter& (0+255),f,b
 10703  002788  D7C9               	goto	u6700
 10704  00278A                     l6374:
 10705                           
 10706                           ; BSR set to: 0
 10707  00278A  5191               	movf	___aodiv@sign& (0+255),w,b
 10708  00278C  B4D8               	btfsc	status,2,c
 10709  00278E  D010               	goto	l6378
 10710                           
 10711                           ; BSR set to: 0
 10712  002790  1F99               	comf	(___aodiv@quotient+7)& (0+255),f,b
 10713  002792  1F98               	comf	(___aodiv@quotient+6)& (0+255),f,b
 10714  002794  1F97               	comf	(___aodiv@quotient+5)& (0+255),f,b
 10715  002796  1F96               	comf	(___aodiv@quotient+4)& (0+255),f,b
 10716  002798  1F95               	comf	(___aodiv@quotient+3)& (0+255),f,b
 10717  00279A  1F94               	comf	(___aodiv@quotient+2)& (0+255),f,b
 10718  00279C  1F93               	comf	(___aodiv@quotient+1)& (0+255),f,b
 10719  00279E  6D92               	negf	___aodiv@quotient& (0+255),b
 10720  0027A0  0E00               	movlw	0
 10721  0027A2  2393               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
 10722  0027A4  2394               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
 10723  0027A6  2395               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
 10724  0027A8  2396               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
 10725  0027AA  2397               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
 10726  0027AC  2398               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
 10727  0027AE  2399               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
 10728  0027B0                     l6378:
 10729                           
 10730                           ; BSR set to: 0
 10731  0027B0  C092  F080         	movff	___aodiv@quotient,?___aodiv
 10732  0027B4  C093  F081         	movff	___aodiv@quotient+1,?___aodiv+1
 10733  0027B8  C094  F082         	movff	___aodiv@quotient+2,?___aodiv+2
 10734  0027BC  C095  F083         	movff	___aodiv@quotient+3,?___aodiv+3
 10735  0027C0  C096  F084         	movff	___aodiv@quotient+4,?___aodiv+4
 10736  0027C4  C097  F085         	movff	___aodiv@quotient+5,?___aodiv+5
 10737  0027C8  C098  F086         	movff	___aodiv@quotient+6,?___aodiv+6
 10738  0027CC  C099  F087         	movff	___aodiv@quotient+7,?___aodiv+7
 10739                           
 10740                           ; BSR set to: 0
 10741  0027D0  0012               	return		;funcret
 10742  0027D2                     __end_of___aodiv:
 10743                           	opt callstack 0
 10744                           
 10745 ;; *************** function _atoi *****************
 10746 ;; Defined at:
 10747 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
 10748 ;; Parameters:    Size  Location     Type
 10749 ;;  s               2    7[BANK0 ] PTR const unsigned char 
 10750 ;;		 -> STR_61(10), STR_60(11), STR_59(11), STR_58(12), 
 10751 ;;		 -> STR_57(12), STR_56(10), STR_55(10), STR_54(13), 
 10752 ;;		 -> STR_53(8), STR_52(17), STR_51(15), STR_50(15), 
 10753 ;;		 -> STR_49(12), STR_48(17), STR_47(12), STR_46(15), 
 10754 ;;		 -> STR_45(18), STR_44(17), STR_43(12), STR_42(15), 
 10755 ;;		 -> STR_41(18), STR_40(17), STR_39(14), STR_38(14), 
 10756 ;;		 -> STR_37(17), STR_36(3), STR_35(9), STR_34(16), 
 10757 ;;		 -> STR_33(3), STR_32(9), STR_31(17), STR_30(15), 
 10758 ;;		 -> STR_29(15), STR_28(12), STR_27(10), STR_26(15), 
 10759 ;;		 -> STR_25(12), STR_24(10), STR_23(16), STR_22(12), 
 10760 ;;		 -> STR_21(3), STR_20(11), STR_19(8), STR_18(13), 
 10761 ;;		 -> STR_17(10), STR_16(17), STR_15(10), STR_14(16), 
 10762 ;;		 -> STR_13(10), STR_12(16), STR_11(10), STR_10(17), 
 10763 ;;		 -> STR_9(5), STR_8(10), STR_7(14), STR_6(6), 
 10764 ;;		 -> STR_5(10), STR_4(10), STR_3(11), STR_2(13), 
 10765 ;;		 -> STR_1(10), 
 10766 ;; Auto vars:     Size  Location     Type
 10767 ;;  n               2   20[BANK0 ] int 
 10768 ;;  neg             2   13[BANK0 ] int 
 10769 ;; Return value:  Size  Location     Type
 10770 ;;                  2    7[BANK0 ] int 
 10771 ;; Registers used:
 10772 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10773 ;; Tracked objects:
 10774 ;;		On entry : 0/0
 10775 ;;		On exit  : 0/0
 10776 ;;		Unchanged: 0/0
 10777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10778 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10779 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10780 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10781 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10782 ;;Total ram usage:       15 bytes
 10783 ;; Hardware stack levels used:    1
 10784 ;; Hardware stack levels required when called:    4
 10785 ;; This function calls:
 10786 ;;		___wmul
 10787 ;;		_isdigit
 10788 ;;		_isspace
 10789 ;; This function is called by:
 10790 ;;		_vfpfcnvrt
 10791 ;; This function uses a non-reentrant model
 10792 ;;
 10793                           
 10794                           	psect	text37
 10795  0027D2                     __ptext37:
 10796                           	opt callstack 0
 10797  0027D2                     _atoi:
 10798                           	opt callstack 22
 10799                           
 10800                           ; BSR set to: 0
 10801                           ;incstack = 0
 10802  0027D2  0E00               	movlw	0
 10803  0027D4  0100               	movlb	0	; () banked
 10804  0027D6  6F95               	movwf	(atoi@n+1)& (0+255),b
 10805  0027D8  0E00               	movlw	0
 10806  0027DA  6F94               	movwf	atoi@n& (0+255),b
 10807  0027DC  0E00               	movlw	0
 10808  0027DE  6F8E               	movwf	(atoi@neg+1)& (0+255),b
 10809  0027E0  0E00               	movlw	0
 10810  0027E2  6F8D               	movwf	atoi@neg& (0+255),b
 10811  0027E4  D002               	goto	l6562
 10812  0027E6                     l6560:
 10813                           
 10814                           ; BSR set to: 0
 10815  0027E6  4B87               	infsnz	atoi@s& (0+255),f,b
 10816  0027E8  2B88               	incf	(atoi@s+1)& (0+255),f,b
 10817  0027EA                     l6562:
 10818                           
 10819                           ; BSR set to: 0
 10820  0027EA  0E01               	movlw	1
 10821  0027EC  6F93               	movwf	_atoi$1584& (0+255),b
 10822                           
 10823                           ; BSR set to: 0
 10824  0027EE  C087  FFF6         	movff	atoi@s,tblptrl
 10825  0027F2  C088  FFF7         	movff	atoi@s+1,tblptrh
 10826  0027F6                     	if	0	;tblptru may be non-zero
 10827  0027F6                     	endif
 10828  0027F6                     	if	0	;tblptru may be non-zero
 10829  0027F6                     	endif
 10830  0027F6  0008               	tblrd		*
 10831  0027F8  50F5               	movf	tablat,w,c
 10832  0027FA  0A20               	xorlw	32
 10833  0027FC  B4D8               	btfsc	status,2,c
 10834  0027FE  D018               	goto	l6570
 10835                           
 10836                           ; BSR set to: 0
 10837  002800  0EF7               	movlw	247
 10838  002802  6F89               	movwf	??_atoi& (0+255),b
 10839  002804  0EFF               	movlw	255
 10840  002806  6F8A               	movwf	(??_atoi+1)& (0+255),b
 10841  002808  C087  FFF6         	movff	atoi@s,tblptrl
 10842  00280C  C088  FFF7         	movff	atoi@s+1,tblptrh
 10843  002810                     	if	0	;tblptru may be non-zero
 10844  002810                     	endif
 10845  002810                     	if	0	;tblptru may be non-zero
 10846  002810                     	endif
 10847  002810  0008               	tblrd		*
 10848  002812  50F5               	movf	tablat,w,c
 10849  002814  6F8B               	movwf	(??_atoi+2)& (0+255),b
 10850  002816  6B8C               	clrf	(??_atoi+3)& (0+255),b
 10851  002818  5189               	movf	??_atoi& (0+255),w,b
 10852  00281A  278B               	addwf	(??_atoi+2)& (0+255),f,b
 10853  00281C  518A               	movf	(??_atoi+1)& (0+255),w,b
 10854  00281E  238C               	addwfc	(??_atoi+3)& (0+255),f,b
 10855  002820  518C               	movf	(??_atoi+3)& (0+255),w,b
 10856  002822  E104               	bnz	u7140
 10857  002824  0E05               	movlw	5
 10858  002826  5D8B               	subwf	(??_atoi+2)& (0+255),w,b
 10859  002828  A0D8               	btfss	status,0,c
 10860  00282A  D002               	goto	l6570
 10861  00282C                     u7140:
 10862                           
 10863                           ; BSR set to: 0
 10864  00282C  0E00               	movlw	0
 10865  00282E  6F93               	movwf	_atoi$1584& (0+255),b
 10866  002830                     l6570:
 10867                           
 10868                           ; BSR set to: 0
 10869  002830  C093  F08F         	movff	_atoi$1584,_atoi$1583
 10870  002834  6B90               	clrf	(_atoi$1583+1)& (0+255),b
 10871                           
 10872                           ; BSR set to: 0
 10873  002836  518F               	movf	_atoi$1583& (0+255),w,b
 10874  002838  1190               	iorwf	(_atoi$1583+1)& (0+255),w,b
 10875  00283A  B4D8               	btfsc	status,2,c
 10876  00283C  D008               	goto	l6580
 10877  00283E  D7D3               	goto	l6560
 10878  002840                     l6576:
 10879                           
 10880                           ; BSR set to: 0
 10881  002840  0E00               	movlw	0
 10882  002842  6F8E               	movwf	(atoi@neg+1)& (0+255),b
 10883  002844  0E01               	movlw	1
 10884  002846  6F8D               	movwf	atoi@neg& (0+255),b
 10885  002848                     l6578:
 10886                           
 10887                           ; BSR set to: 0
 10888  002848  4B87               	infsnz	atoi@s& (0+255),f,b
 10889  00284A  2B88               	incf	(atoi@s+1)& (0+255),f,b
 10890  00284C  D02F               	goto	l6586
 10891  00284E                     l6580:
 10892                           
 10893                           ; BSR set to: 0
 10894  00284E  C087  FFF6         	movff	atoi@s,tblptrl
 10895  002852  C088  FFF7         	movff	atoi@s+1,tblptrh
 10896  002856                     	if	0	;tblptru may be non-zero
 10897  002856                     	endif
 10898  002856                     	if	0	;tblptru may be non-zero
 10899  002856                     	endif
 10900  002856  0008               	tblrd		*
 10901  002858  50F5               	movf	tablat,w,c
 10902  00285A  6F89               	movwf	??_atoi& (0+255),b
 10903  00285C  6B8A               	clrf	(??_atoi+1)& (0+255),b
 10904                           
 10905                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10906                           ; Switch size 1, requested type "simple"
 10907                           ; Number of cases is 1, Range of values is 0 to 0
 10908                           ; switch strategies available:
 10909                           ; Name         Instructions Cycles
 10910                           ; simple_byte            4     3 (average)
 10911                           ;	Chosen strategy is simple_byte
 10912  00285E  518A               	movf	(??_atoi+1)& (0+255),w,b
 10913  002860  0A00               	xorlw	0	; case 0
 10914  002862  A4D8               	btfss	status,2,c
 10915  002864  D023               	goto	l6586
 10916                           
 10917                           ; BSR set to: 0
 10918                           ; Switch size 1, requested type "simple"
 10919                           ; Number of cases is 2, Range of values is 43 to 45
 10920                           ; switch strategies available:
 10921                           ; Name         Instructions Cycles
 10922                           ; simple_byte            7     4 (average)
 10923                           ;	Chosen strategy is simple_byte
 10924  002866  5189               	movf	??_atoi& (0+255),w,b
 10925  002868  0A2B               	xorlw	43	; case 43
 10926  00286A  B4D8               	btfsc	status,2,c
 10927  00286C  D7ED               	goto	l6578
 10928  00286E  0A06               	xorlw	6	; case 45
 10929  002870  B4D8               	btfsc	status,2,c
 10930  002872  D7E6               	goto	l6576
 10931  002874  D01B               	goto	l6586
 10932  002876                     l6582:
 10933                           
 10934                           ; BSR set to: 0
 10935  002876  C094  F080         	movff	atoi@n,___wmul@multiplier
 10936  00287A  C095  F081         	movff	atoi@n+1,___wmul@multiplier+1
 10937  00287E  0E00               	movlw	0
 10938  002880  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10939  002882  0E0A               	movlw	10
 10940  002884  6F82               	movwf	___wmul@multiplicand& (0+255),b
 10941  002886  EC14  F01D         	call	___wmul	;wreg free
 10942  00288A  C087  FFF6         	movff	atoi@s,tblptrl
 10943  00288E  C088  FFF7         	movff	atoi@s+1,tblptrh
 10944  002892                     	if	0	;tblptru may be non-zero
 10945  002892                     	endif
 10946  002892                     	if	0	;tblptru may be non-zero
 10947  002892                     	endif
 10948  002892  0008               	tblrd		*
 10949  002894  50F5               	movf	tablat,w,c
 10950  002896  0100               	movlb	0	; () banked
 10951  002898  5F80               	subwf	?___wmul& (0+255),f,b
 10952  00289A  0E00               	movlw	0
 10953  00289C  5B81               	subwfb	(?___wmul+1)& (0+255),f,b
 10954  00289E  0E30               	movlw	48
 10955  0028A0  2580               	addwf	?___wmul& (0+255),w,b
 10956  0028A2  6F94               	movwf	atoi@n& (0+255),b
 10957  0028A4  0E00               	movlw	0
 10958  0028A6  2181               	addwfc	(?___wmul+1)& (0+255),w,b
 10959  0028A8  6F95               	movwf	(atoi@n+1)& (0+255),b
 10960  0028AA  D7CE               	goto	l6578
 10961  0028AC                     l6586:
 10962                           
 10963                           ; BSR set to: 0
 10964  0028AC  0ED0               	movlw	208
 10965  0028AE  6F89               	movwf	??_atoi& (0+255),b
 10966  0028B0  0EFF               	movlw	255
 10967  0028B2  6F8A               	movwf	(??_atoi+1)& (0+255),b
 10968  0028B4  C087  FFF6         	movff	atoi@s,tblptrl
 10969  0028B8  C088  FFF7         	movff	atoi@s+1,tblptrh
 10970  0028BC                     	if	0	;tblptru may be non-zero
 10971  0028BC                     	endif
 10972  0028BC                     	if	0	;tblptru may be non-zero
 10973  0028BC                     	endif
 10974  0028BC  0008               	tblrd		*
 10975  0028BE  50F5               	movf	tablat,w,c
 10976  0028C0  6F8B               	movwf	(??_atoi+2)& (0+255),b
 10977  0028C2  6B8C               	clrf	(??_atoi+3)& (0+255),b
 10978  0028C4  5189               	movf	??_atoi& (0+255),w,b
 10979  0028C6  278B               	addwf	(??_atoi+2)& (0+255),f,b
 10980  0028C8  518A               	movf	(??_atoi+1)& (0+255),w,b
 10981  0028CA  238C               	addwfc	(??_atoi+3)& (0+255),f,b
 10982  0028CC  518C               	movf	(??_atoi+3)& (0+255),w,b
 10983  0028CE  E106               	bnz	u7160
 10984  0028D0  0E0A               	movlw	10
 10985  0028D2  5D8B               	subwf	(??_atoi+2)& (0+255),w,b
 10986  0028D4  B0D8               	btfsc	status,0,c
 10987  0028D6  D002               	goto	u7160
 10988  0028D8  0E01               	movlw	1
 10989  0028DA  D001               	goto	u7170
 10990  0028DC                     u7160:
 10991  0028DC  0E00               	movlw	0
 10992  0028DE                     u7170:
 10993  0028DE  6F91               	movwf	_atoi$1585& (0+255),b
 10994  0028E0  6B92               	clrf	(_atoi$1585+1)& (0+255),b
 10995                           
 10996                           ; BSR set to: 0
 10997  0028E2  5191               	movf	_atoi$1585& (0+255),w,b
 10998  0028E4  1192               	iorwf	(_atoi$1585+1)& (0+255),w,b
 10999  0028E6  A4D8               	btfss	status,2,c
 11000  0028E8  D7C6               	goto	l6582
 11001                           
 11002                           ; BSR set to: 0
 11003  0028EA  518D               	movf	atoi@neg& (0+255),w,b
 11004  0028EC  118E               	iorwf	(atoi@neg+1)& (0+255),w,b
 11005  0028EE  A4D8               	btfss	status,2,c
 11006  0028F0  D00D               	goto	l1393
 11007                           
 11008                           ; BSR set to: 0
 11009  0028F2  C094  F089         	movff	atoi@n,??_atoi
 11010  0028F6  C095  F08A         	movff	atoi@n+1,??_atoi+1
 11011  0028FA  1F89               	comf	??_atoi& (0+255),f,b
 11012  0028FC  1F8A               	comf	(??_atoi+1)& (0+255),f,b
 11013  0028FE  4B89               	infsnz	??_atoi& (0+255),f,b
 11014  002900  2B8A               	incf	(??_atoi+1)& (0+255),f,b
 11015  002902  C089  F087         	movff	??_atoi,?_atoi
 11016  002906  C08A  F088         	movff	??_atoi+1,?_atoi+1
 11017  00290A  0012               	return	
 11018  00290C                     l1393:
 11019                           
 11020                           ; BSR set to: 0
 11021  00290C  C094  F087         	movff	atoi@n,?_atoi
 11022  002910  C095  F088         	movff	atoi@n+1,?_atoi+1
 11023                           
 11024                           ; BSR set to: 0
 11025  002914  0012               	return		;funcret
 11026  002916                     __end_of_atoi:
 11027                           	opt callstack 0
 11028                           
 11029 ;; *************** function _isspace *****************
 11030 ;; Defined at:
 11031 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
 11032 ;; Parameters:    Size  Location     Type
 11033 ;;  c               2    0[BANK0 ] int 
 11034 ;; Auto vars:     Size  Location     Type
 11035 ;;		None
 11036 ;; Return value:  Size  Location     Type
 11037 ;;                  2    0[BANK0 ] int 
 11038 ;; Registers used:
 11039 ;;		wreg, status,2, status,0
 11040 ;; Tracked objects:
 11041 ;;		On entry : 0/0
 11042 ;;		On exit  : 0/0
 11043 ;;		Unchanged: 0/0
 11044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11045 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11046 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11047 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11048 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11049 ;;Total ram usage:        7 bytes
 11050 ;; Hardware stack levels used:    1
 11051 ;; Hardware stack levels required when called:    3
 11052 ;; This function calls:
 11053 ;;		Nothing
 11054 ;; This function is called by:
 11055 ;;		_atoi
 11056 ;; This function uses a non-reentrant model
 11057 ;;
 11058                           
 11059                           	psect	text38
 11060  003762                     __ptext38:
 11061                           	opt callstack 0
 11062  003762                     _isspace:
 11063                           	opt callstack 22
 11064                           
 11065                           ; BSR set to: 0
 11066                           ;incstack = 0
 11067  003762  0E01               	movlw	1
 11068  003764  0100               	movlb	0	; () banked
 11069  003766  6F86               	movwf	_isspace$1610& (0+255),b
 11070                           
 11071                           ; BSR set to: 0
 11072  003768  0E20               	movlw	32
 11073  00376A  1980               	xorwf	isspace@c& (0+255),w,b
 11074  00376C  1181               	iorwf	(isspace@c+1)& (0+255),w,b
 11075  00376E  B4D8               	btfsc	status,2,c
 11076  003770  D014               	goto	l6426
 11077                           
 11078                           ; BSR set to: 0
 11079  003772  0EF7               	movlw	247
 11080  003774  6F82               	movwf	??_isspace& (0+255),b
 11081  003776  0EFF               	movlw	255
 11082  003778  6F83               	movwf	(??_isspace+1)& (0+255),b
 11083  00377A  C080  F084         	movff	isspace@c,??_isspace+2
 11084  00377E  C081  F085         	movff	isspace@c+1,??_isspace+3
 11085  003782  5182               	movf	??_isspace& (0+255),w,b
 11086  003784  2784               	addwf	(??_isspace+2)& (0+255),f,b
 11087  003786  5183               	movf	(??_isspace+1)& (0+255),w,b
 11088  003788  2385               	addwfc	(??_isspace+3)& (0+255),f,b
 11089  00378A  5185               	movf	(??_isspace+3)& (0+255),w,b
 11090  00378C  E104               	bnz	u6800
 11091  00378E  0E05               	movlw	5
 11092  003790  5D84               	subwf	(??_isspace+2)& (0+255),w,b
 11093  003792  A0D8               	btfss	status,0,c
 11094  003794  D002               	goto	l6426
 11095  003796                     u6800:
 11096                           
 11097                           ; BSR set to: 0
 11098  003796  0E00               	movlw	0
 11099  003798  6F86               	movwf	_isspace$1610& (0+255),b
 11100  00379A                     l6426:
 11101                           
 11102                           ; BSR set to: 0
 11103  00379A  C086  F080         	movff	_isspace$1610,?_isspace
 11104  00379E  6B81               	clrf	(?_isspace+1)& (0+255),b
 11105                           
 11106                           ; BSR set to: 0
 11107  0037A0  0012               	return		;funcret
 11108  0037A2                     __end_of_isspace:
 11109                           	opt callstack 0
 11110                           
 11111 ;; *************** function _isdigit *****************
 11112 ;; Defined at:
 11113 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
 11114 ;; Parameters:    Size  Location     Type
 11115 ;;  c               2    0[BANK0 ] int 
 11116 ;; Auto vars:     Size  Location     Type
 11117 ;;		None
 11118 ;; Return value:  Size  Location     Type
 11119 ;;                  2    0[BANK0 ] int 
 11120 ;; Registers used:
 11121 ;;		wreg, status,2, status,0
 11122 ;; Tracked objects:
 11123 ;;		On entry : 0/0
 11124 ;;		On exit  : 0/0
 11125 ;;		Unchanged: 0/0
 11126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11127 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11129 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11130 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11131 ;;Total ram usage:        6 bytes
 11132 ;; Hardware stack levels used:    1
 11133 ;; Hardware stack levels required when called:    3
 11134 ;; This function calls:
 11135 ;;		Nothing
 11136 ;; This function is called by:
 11137 ;;		_vfpfcnvrt
 11138 ;;		_atoi
 11139 ;; This function uses a non-reentrant model
 11140 ;;
 11141                           
 11142                           	psect	text39
 11143  00391C                     __ptext39:
 11144                           	opt callstack 0
 11145  00391C                     _isdigit:
 11146                           	opt callstack 23
 11147                           
 11148                           ; BSR set to: 0
 11149                           ;incstack = 0
 11150  00391C  0ED0               	movlw	208
 11151  00391E  0100               	movlb	0	; () banked
 11152  003920  6F82               	movwf	??_isdigit& (0+255),b
 11153  003922  0EFF               	movlw	255
 11154  003924  6F83               	movwf	(??_isdigit+1)& (0+255),b
 11155  003926  C080  F084         	movff	isdigit@c,??_isdigit+2
 11156  00392A  C081  F085         	movff	isdigit@c+1,??_isdigit+3
 11157  00392E  5182               	movf	??_isdigit& (0+255),w,b
 11158  003930  2784               	addwf	(??_isdigit+2)& (0+255),f,b
 11159  003932  5183               	movf	(??_isdigit+1)& (0+255),w,b
 11160  003934  2385               	addwfc	(??_isdigit+3)& (0+255),f,b
 11161  003936  5185               	movf	(??_isdigit+3)& (0+255),w,b
 11162  003938  E106               	bnz	u6640
 11163  00393A  0E0A               	movlw	10
 11164  00393C  5D84               	subwf	(??_isdigit+2)& (0+255),w,b
 11165  00393E  B0D8               	btfsc	status,0,c
 11166  003940  D002               	goto	u6640
 11167  003942  0E01               	movlw	1
 11168  003944  D001               	goto	u6650
 11169  003946                     u6640:
 11170  003946  0E00               	movlw	0
 11171  003948                     u6650:
 11172  003948  6F80               	movwf	?_isdigit& (0+255),b
 11173  00394A  6B81               	clrf	(?_isdigit+1)& (0+255),b
 11174                           
 11175                           ; BSR set to: 0
 11176  00394C  0012               	return		;funcret
 11177  00394E                     __end_of_isdigit:
 11178                           	opt callstack 0
 11179                           
 11180 ;; *************** function ___wmul *****************
 11181 ;; Defined at:
 11182 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 11183 ;; Parameters:    Size  Location     Type
 11184 ;;  multiplier      2    0[BANK0 ] unsigned int 
 11185 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 11186 ;; Auto vars:     Size  Location     Type
 11187 ;;  product         2    4[BANK0 ] unsigned int 
 11188 ;; Return value:  Size  Location     Type
 11189 ;;                  2    0[BANK0 ] unsigned int 
 11190 ;; Registers used:
 11191 ;;		wreg, status,2, status,0, prodl, prodh
 11192 ;; Tracked objects:
 11193 ;;		On entry : 0/0
 11194 ;;		On exit  : 0/0
 11195 ;;		Unchanged: 0/0
 11196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11197 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11198 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11200 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11201 ;;Total ram usage:        6 bytes
 11202 ;; Hardware stack levels used:    1
 11203 ;; Hardware stack levels required when called:    3
 11204 ;; This function calls:
 11205 ;;		Nothing
 11206 ;; This function is called by:
 11207 ;;		_main
 11208 ;;		_atoi
 11209 ;; This function uses a non-reentrant model
 11210 ;;
 11211                           
 11212                           	psect	text40
 11213  003A28                     __ptext40:
 11214                           	opt callstack 0
 11215  003A28                     ___wmul:
 11216                           	opt callstack 22
 11217                           
 11218                           ; BSR set to: 0
 11219                           ;incstack = 0
 11220  003A28  0100               	movlb	0	; () banked
 11221  003A2A  5180               	movf	___wmul@multiplier& (0+255),w,b
 11222  003A2C  0382               	mulwf	___wmul@multiplicand& (0+255),b
 11223  003A2E  CFF3 F084          	movff	prodl,___wmul@product
 11224  003A32  CFF4 F085          	movff	prodh,___wmul@product+1
 11225  003A36  5180               	movf	___wmul@multiplier& (0+255),w,b
 11226  003A38  0383               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 11227  003A3A  50F3               	movf	prodl,w,c
 11228  003A3C  2785               	addwf	(___wmul@product+1)& (0+255),f,b
 11229  003A3E  5181               	movf	(___wmul@multiplier+1)& (0+255),w,b
 11230  003A40  0382               	mulwf	___wmul@multiplicand& (0+255),b
 11231  003A42  50F3               	movf	prodl,w,c
 11232  003A44  2785               	addwf	(___wmul@product+1)& (0+255),f,b
 11233                           
 11234                           ; BSR set to: 0
 11235  003A46  C084  F080         	movff	___wmul@product,?___wmul
 11236  003A4A  C085  F081         	movff	___wmul@product+1,?___wmul+1
 11237                           
 11238                           ; BSR set to: 0
 11239  003A4E  0012               	return		;funcret
 11240  003A50                     __end_of___wmul:
 11241                           	opt callstack 0
 11242                           
 11243 ;; *************** function _initLCD *****************
 11244 ;; Defined at:
 11245 ;;		line 69 in file "lcd.c"
 11246 ;; Parameters:    Size  Location     Type
 11247 ;;		None
 11248 ;; Auto vars:     Size  Location     Type
 11249 ;;		None
 11250 ;; Return value:  Size  Location     Type
 11251 ;;                  1    wreg      void 
 11252 ;; Registers used:
 11253 ;;		wreg, status,2, status,0, cstack
 11254 ;; Tracked objects:
 11255 ;;		On entry : 0/0
 11256 ;;		On exit  : 0/0
 11257 ;;		Unchanged: 0/0
 11258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11261 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11262 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11263 ;;Total ram usage:        1 bytes
 11264 ;; Hardware stack levels used:    1
 11265 ;; Hardware stack levels required when called:    7
 11266 ;; This function calls:
 11267 ;;		_lcdInst
 11268 ;;		_send_byte
 11269 ;;		_send_nibble
 11270 ;; This function is called by:
 11271 ;;		_actuators_main
 11272 ;;		_UI_main
 11273 ;;		_main
 11274 ;; This function uses a non-reentrant model
 11275 ;;
 11276                           
 11277                           	psect	text41
 11278  0033CC                     __ptext41:
 11279                           	opt callstack 0
 11280  0033CC                     _initLCD:
 11281                           	opt callstack 23
 11282                           
 11283                           ;lcd.c: 70:     _delay((unsigned long)((15)*(10000000/4000.0)));
 11284                           
 11285                           ; BSR set to: 0
 11286                           ;incstack = 0
 11287  0033CC  0E31               	movlw	49
 11288  0033CE  0100               	movlb	0	; () banked
 11289  0033D0  6F84               	movwf	??_initLCD& (0+255),b
 11290  0033D2  0EB2               	movlw	178
 11291  0033D4                     u9547:
 11292  0033D4  2EE8               	decfsz	wreg,f,c
 11293  0033D6  D7FE               	bra	u9547
 11294  0033D8  2F84               	decfsz	??_initLCD& (0+255),f,b
 11295  0033DA  D7FC               	bra	u9547
 11296  0033DC  F000               	nop	
 11297                           
 11298                           ;lcd.c: 72:     LATDbits.LATD2 = 0;
 11299  0033DE  948C               	bcf	3980,2,c	;volatile
 11300                           
 11301                           ;lcd.c: 74:     send_nibble(0b0011);
 11302  0033E0  0E03               	movlw	3
 11303  0033E2  EC4E  F01D         	call	_send_nibble
 11304                           
 11305                           ;lcd.c: 75:     _delay((unsigned long)((5)*(10000000/4000.0)));
 11306  0033E6  0E11               	movlw	17
 11307  0033E8  0100               	movlb	0	; () banked
 11308  0033EA  6F84               	movwf	??_initLCD& (0+255),b
 11309  0033EC  0E3A               	movlw	58
 11310  0033EE                     u9557:
 11311  0033EE  2EE8               	decfsz	wreg,f,c
 11312  0033F0  D7FE               	bra	u9557
 11313  0033F2  2F84               	decfsz	??_initLCD& (0+255),f,b
 11314  0033F4  D7FC               	bra	u9557
 11315  0033F6  F000               	nop	
 11316                           
 11317                           ;lcd.c: 76:     send_nibble(0b0011);
 11318  0033F8  0E03               	movlw	3
 11319  0033FA  EC4E  F01D         	call	_send_nibble
 11320                           
 11321                           ;lcd.c: 77:     _delay((unsigned long)((150)*(10000000/4000000.0)));
 11322  0033FE  0E7D               	movlw	125
 11323  003400                     u9567:
 11324  003400  2EE8               	decfsz	wreg,f,c
 11325  003402  D7FE               	bra	u9567
 11326                           
 11327                           ;lcd.c: 78:     send_byte(0b00110010);
 11328  003404  0E32               	movlw	50
 11329  003406  EC5B  F01D         	call	_send_byte
 11330                           
 11331                           ;lcd.c: 80:     send_byte(0b00101000);
 11332  00340A  0E28               	movlw	40
 11333  00340C  EC5B  F01D         	call	_send_byte
 11334                           
 11335                           ;lcd.c: 81:     send_byte(0b00001000);
 11336  003410  0E08               	movlw	8
 11337  003412  EC5B  F01D         	call	_send_byte
 11338                           
 11339                           ;lcd.c: 82:     send_byte(0b00000001);
 11340  003416  0E01               	movlw	1
 11341  003418  EC5B  F01D         	call	_send_byte
 11342                           
 11343                           ;lcd.c: 83:     _delay((unsigned long)((5)*(10000000/4000.0)));
 11344  00341C  0E11               	movlw	17
 11345  00341E  0100               	movlb	0	; () banked
 11346  003420  6F84               	movwf	??_initLCD& (0+255),b
 11347  003422  0E3A               	movlw	58
 11348  003424                     u9577:
 11349  003424  2EE8               	decfsz	wreg,f,c
 11350  003426  D7FE               	bra	u9577
 11351  003428  2F84               	decfsz	??_initLCD& (0+255),f,b
 11352  00342A  D7FC               	bra	u9577
 11353  00342C  F000               	nop	
 11354                           
 11355                           ;lcd.c: 84:     send_byte(0b00000110);
 11356  00342E  0E06               	movlw	6
 11357  003430  EC5B  F01D         	call	_send_byte
 11358                           
 11359                           ;lcd.c: 87:     { lcdInst( (unsigned char)(8 | (1 << 2) | (1 << 1) | 1) );};
 11360  003434  0E0F               	movlw	15
 11361  003436  EC79  F01D         	call	_lcdInst
 11362  00343A  0012               	return		;funcret
 11363  00343C                     __end_of_initLCD:
 11364                           	opt callstack 0
 11365                           
 11366 ;; *************** function _lcdInst *****************
 11367 ;; Defined at:
 11368 ;;		line 64 in file "lcd.c"
 11369 ;; Parameters:    Size  Location     Type
 11370 ;;  data            1    wreg     unsigned char 
 11371 ;; Auto vars:     Size  Location     Type
 11372 ;;  data            1    3[BANK0 ] unsigned char 
 11373 ;; Return value:  Size  Location     Type
 11374 ;;                  1    wreg      void 
 11375 ;; Registers used:
 11376 ;;		wreg, status,2, status,0, cstack
 11377 ;; Tracked objects:
 11378 ;;		On entry : 0/0
 11379 ;;		On exit  : 0/0
 11380 ;;		Unchanged: 0/0
 11381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11383 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11385 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11386 ;;Total ram usage:        1 bytes
 11387 ;; Hardware stack levels used:    1
 11388 ;; Hardware stack levels required when called:    6
 11389 ;; This function calls:
 11390 ;;		_send_byte
 11391 ;; This function is called by:
 11392 ;;		_actuators_main
 11393 ;;		_stepper2
 11394 ;;		_stepper2_back
 11395 ;;		_initLCD
 11396 ;;		_print_echo
 11397 ;;		_ultrasonic_main
 11398 ;;		_number_deploy
 11399 ;;		_UI_main
 11400 ;;		_main
 11401 ;;		_lcd_shift_cursor
 11402 ;;		_lcd_shift_display
 11403 ;; This function uses a non-reentrant model
 11404 ;;
 11405                           
 11406                           	psect	text42
 11407  003AF2                     __ptext42:
 11408                           	opt callstack 0
 11409  003AF2                     _lcdInst:
 11410                           	opt callstack 22
 11411                           
 11412                           ;incstack = 0
 11413                           ;lcdInst@data stored from wreg
 11414  003AF2  0100               	movlb	0	; () banked
 11415  003AF4  6F83               	movwf	lcdInst@data& (0+255),b
 11416                           
 11417                           ;lcd.c: 65:     LATDbits.LATD2 = 0;
 11418  003AF6  948C               	bcf	3980,2,c	;volatile
 11419                           
 11420                           ;lcd.c: 66:     send_byte(data);
 11421  003AF8  0100               	movlb	0	; () banked
 11422  003AFA  5183               	movf	lcdInst@data& (0+255),w,b
 11423  003AFC  EC5B  F01D         	call	_send_byte
 11424  003B00  0012               	return		;funcret
 11425  003B02                     __end_of_lcdInst:
 11426                           	opt callstack 0
 11427                           
 11428 ;; *************** function _send_byte *****************
 11429 ;; Defined at:
 11430 ;;		line 55 in file "lcd.c"
 11431 ;; Parameters:    Size  Location     Type
 11432 ;;  data            1    wreg     unsigned char 
 11433 ;; Auto vars:     Size  Location     Type
 11434 ;;  data            1    2[BANK0 ] unsigned char 
 11435 ;; Return value:  Size  Location     Type
 11436 ;;                  1    wreg      void 
 11437 ;; Registers used:
 11438 ;;		wreg, status,2, status,0, cstack
 11439 ;; Tracked objects:
 11440 ;;		On entry : 0/0
 11441 ;;		On exit  : 0/0
 11442 ;;		Unchanged: 0/0
 11443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11445 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11447 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11448 ;;Total ram usage:        1 bytes
 11449 ;; Hardware stack levels used:    1
 11450 ;; Hardware stack levels required when called:    5
 11451 ;; This function calls:
 11452 ;;		_send_nibble
 11453 ;; This function is called by:
 11454 ;;		_lcdInst
 11455 ;;		_initLCD
 11456 ;;		_putch
 11457 ;; This function uses a non-reentrant model
 11458 ;;
 11459                           
 11460                           	psect	text43
 11461  003AB6                     __ptext43:
 11462                           	opt callstack 0
 11463  003AB6                     _send_byte:
 11464                           	opt callstack 16
 11465                           
 11466                           ;incstack = 0
 11467                           ;send_byte@data stored from wreg
 11468  003AB6  0100               	movlb	0	; () banked
 11469  003AB8  6F82               	movwf	send_byte@data& (0+255),b
 11470                           
 11471                           ;lcd.c: 57:     send_nibble(data >> 4);
 11472  003ABA  0100               	movlb	0	; () banked
 11473  003ABC  3982               	swapf	send_byte@data& (0+255),w,b
 11474  003ABE  0B0F               	andlw	15
 11475  003AC0  EC4E  F01D         	call	_send_nibble
 11476                           
 11477                           ;lcd.c: 60:     send_nibble(data);
 11478  003AC4  0100               	movlb	0	; () banked
 11479  003AC6  5182               	movf	send_byte@data& (0+255),w,b
 11480  003AC8  EC4E  F01D         	call	_send_nibble
 11481  003ACC  0012               	return		;funcret
 11482  003ACE                     __end_of_send_byte:
 11483                           	opt callstack 0
 11484                           
 11485 ;; *************** function _send_nibble *****************
 11486 ;; Defined at:
 11487 ;;		line 44 in file "lcd.c"
 11488 ;; Parameters:    Size  Location     Type
 11489 ;;  data            1    wreg     unsigned char 
 11490 ;; Auto vars:     Size  Location     Type
 11491 ;;  data            1    1[BANK0 ] unsigned char 
 11492 ;; Return value:  Size  Location     Type
 11493 ;;                  1    wreg      void 
 11494 ;; Registers used:
 11495 ;;		wreg, status,2, status,0, cstack
 11496 ;; Tracked objects:
 11497 ;;		On entry : 0/0
 11498 ;;		On exit  : 0/0
 11499 ;;		Unchanged: 0/0
 11500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11502 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11504 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11505 ;;Total ram usage:        1 bytes
 11506 ;; Hardware stack levels used:    1
 11507 ;; Hardware stack levels required when called:    4
 11508 ;; This function calls:
 11509 ;;		_pulse_e
 11510 ;; This function is called by:
 11511 ;;		_send_byte
 11512 ;;		_initLCD
 11513 ;; This function uses a non-reentrant model
 11514 ;;
 11515                           
 11516                           	psect	text44
 11517  003A9C                     __ptext44:
 11518                           	opt callstack 0
 11519  003A9C                     _send_nibble:
 11520                           	opt callstack 16
 11521                           
 11522                           ;incstack = 0
 11523                           ;send_nibble@data stored from wreg
 11524  003A9C  0100               	movlb	0	; () banked
 11525  003A9E  6F81               	movwf	send_nibble@data& (0+255),b
 11526                           
 11527                           ;lcd.c: 46:     LATD = (unsigned char)(LATD & 0x0F);
 11528  003AA0  508C               	movf	3980,w,c	;volatile
 11529  003AA2  0B0F               	andlw	15
 11530  003AA4  6E8C               	movwf	3980,c	;volatile
 11531                           
 11532                           ;lcd.c: 47:     LATD = (unsigned char)((data << 4) | LATD);
 11533  003AA6  0100               	movlb	0	; () banked
 11534  003AA8  3981               	swapf	send_nibble@data& (0+255),w,b
 11535  003AAA  0BF0               	andlw	240
 11536  003AAC  108C               	iorwf	3980,w,c	;volatile
 11537  003AAE  6E8C               	movwf	3980,c	;volatile
 11538                           
 11539                           ; BSR set to: 0
 11540                           ;lcd.c: 48:     pulse_e();
 11541  003AB0  ECBE  F01C         	call	_pulse_e	;wreg free
 11542  003AB4  0012               	return		;funcret
 11543  003AB6                     __end_of_send_nibble:
 11544                           	opt callstack 0
 11545                           
 11546 ;; *************** function _pulse_e *****************
 11547 ;; Defined at:
 11548 ;;		line 28 in file "lcd.c"
 11549 ;; Parameters:    Size  Location     Type
 11550 ;;		None
 11551 ;; Auto vars:     Size  Location     Type
 11552 ;;  interruptSta    1    0[BANK0 ] unsigned char 
 11553 ;; Return value:  Size  Location     Type
 11554 ;;                  1    wreg      void 
 11555 ;; Registers used:
 11556 ;;		wreg
 11557 ;; Tracked objects:
 11558 ;;		On entry : 0/0
 11559 ;;		On exit  : 0/0
 11560 ;;		Unchanged: 0/0
 11561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11563 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11565 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11566 ;;Total ram usage:        1 bytes
 11567 ;; Hardware stack levels used:    1
 11568 ;; Hardware stack levels required when called:    3
 11569 ;; This function calls:
 11570 ;;		Nothing
 11571 ;; This function is called by:
 11572 ;;		_send_nibble
 11573 ;; This function uses a non-reentrant model
 11574 ;;
 11575                           
 11576                           	psect	text45
 11577  00397C                     __ptext45:
 11578                           	opt callstack 0
 11579  00397C                     _pulse_e:
 11580                           	opt callstack 16
 11581                           
 11582                           ;lcd.c: 29:     unsigned char interruptState = INTCONbits.GIE;
 11583                           
 11584                           ;incstack = 0
 11585  00397C  0E00               	movlw	0
 11586  00397E  BEF2               	btfsc	4082,7,c	;volatile
 11587  003980  0E01               	movlw	1
 11588  003982  0100               	movlb	0	; () banked
 11589  003984  6F80               	movwf	pulse_e@interruptState& (0+255),b
 11590                           
 11591                           ; BSR set to: 0
 11592                           ;lcd.c: 30:     (INTCONbits.GIE = 0);
 11593  003986  9EF2               	bcf	4082,7,c	;volatile
 11594                           
 11595                           ; BSR set to: 0
 11596                           ;lcd.c: 31:     LATDbits.LATD3 = 1;
 11597  003988  868C               	bsf	3980,3,c	;volatile
 11598                           
 11599                           ;lcd.c: 34:     _delay((unsigned long)((25)*(10000000/4000000.0)));
 11600  00398A  0E14               	movlw	20
 11601  00398C                     u9587:
 11602  00398C  2EE8               	decfsz	wreg,f,c
 11603  00398E  D7FE               	bra	u9587
 11604  003990  D000               	nop2	
 11605                           
 11606                           ;lcd.c: 35:     LATDbits.LATD3 = 0;
 11607  003992  968C               	bcf	3980,3,c	;volatile
 11608                           
 11609                           ;lcd.c: 36:     _delay((unsigned long)((100)*(10000000/4000000.0)));
 11610  003994  0E53               	movlw	83
 11611  003996                     u9597:
 11612  003996  2EE8               	decfsz	wreg,f,c
 11613  003998  D7FE               	bra	u9597
 11614  00399A  F000               	nop	
 11615                           
 11616                           ;lcd.c: 37:     INTCONbits.GIE = interruptState;
 11617  00399C  0100               	movlb	0	; () banked
 11618  00399E  B180               	btfsc	pulse_e@interruptState& (0+255),0,b
 11619  0039A0  D002               	bra	u6435
 11620  0039A2  9EF2               	bcf	4082,7,c	;volatile
 11621  0039A4  D001               	bra	u6436
 11622  0039A6                     u6435:
 11623  0039A6  8EF2               	bsf	4082,7,c	;volatile
 11624  0039A8                     u6436:
 11625  0039A8  0012               	return		;funcret
 11626  0039AA                     __end_of_pulse_e:
 11627                           	opt callstack 0
 11628                           
 11629 ;; *************** function ___llmod *****************
 11630 ;; Defined at:
 11631 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\llmod.c"
 11632 ;; Parameters:    Size  Location     Type
 11633 ;;  dividend        4    0[BANK0 ] unsigned long 
 11634 ;;  divisor         4    4[BANK0 ] unsigned long 
 11635 ;; Auto vars:     Size  Location     Type
 11636 ;;  counter         1    8[BANK0 ] unsigned char 
 11637 ;; Return value:  Size  Location     Type
 11638 ;;                  4    0[BANK0 ] unsigned long 
 11639 ;; Registers used:
 11640 ;;		wreg, status,2, status,0
 11641 ;; Tracked objects:
 11642 ;;		On entry : 0/0
 11643 ;;		On exit  : 0/0
 11644 ;;		Unchanged: 0/0
 11645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11646 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11647 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11649 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11650 ;;Total ram usage:        9 bytes
 11651 ;; Hardware stack levels used:    1
 11652 ;; Hardware stack levels required when called:    3
 11653 ;; This function calls:
 11654 ;;		Nothing
 11655 ;; This function is called by:
 11656 ;;		_UI_main
 11657 ;; This function uses a non-reentrant model
 11658 ;;
 11659                           
 11660                           	psect	text46
 11661  0034AA                     __ptext46:
 11662                           	opt callstack 0
 11663  0034AA                     ___llmod:
 11664                           	opt callstack 26
 11665                           
 11666                           ;incstack = 0
 11667  0034AA  0100               	movlb	0	; () banked
 11668  0034AC  5184               	movf	___llmod@divisor& (0+255),w,b
 11669  0034AE  1185               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 11670  0034B0  1186               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 11671  0034B2  1187               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 11672  0034B4  B4D8               	btfsc	status,2,c
 11673  0034B6  D024               	goto	l1107
 11674                           
 11675                           ; BSR set to: 0
 11676  0034B8  0E01               	movlw	1
 11677  0034BA  6F88               	movwf	___llmod@counter& (0+255),b
 11678  0034BC  D006               	goto	l7356
 11679  0034BE                     l7354:
 11680                           
 11681                           ; BSR set to: 0
 11682  0034BE  90D8               	bcf	status,0,c
 11683  0034C0  3784               	rlcf	___llmod@divisor& (0+255),f,b
 11684  0034C2  3785               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 11685  0034C4  3786               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 11686  0034C6  3787               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 11687  0034C8  2B88               	incf	___llmod@counter& (0+255),f,b
 11688  0034CA                     l7356:
 11689                           
 11690                           ; BSR set to: 0
 11691  0034CA  AF87               	btfss	(___llmod@divisor+3)& (0+255),7,b
 11692  0034CC  D7F8               	goto	l7354
 11693  0034CE                     u7970:
 11694                           
 11695                           ; BSR set to: 0
 11696  0034CE  5184               	movf	___llmod@divisor& (0+255),w,b
 11697  0034D0  5D80               	subwf	___llmod@dividend& (0+255),w,b
 11698  0034D2  5185               	movf	(___llmod@divisor+1)& (0+255),w,b
 11699  0034D4  5981               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 11700  0034D6  5186               	movf	(___llmod@divisor+2)& (0+255),w,b
 11701  0034D8  5982               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 11702  0034DA  5187               	movf	(___llmod@divisor+3)& (0+255),w,b
 11703  0034DC  5983               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 11704  0034DE  A0D8               	btfss	status,0,c
 11705  0034E0  D008               	goto	l7362
 11706                           
 11707                           ; BSR set to: 0
 11708  0034E2  5184               	movf	___llmod@divisor& (0+255),w,b
 11709  0034E4  5F80               	subwf	___llmod@dividend& (0+255),f,b
 11710  0034E6  5185               	movf	(___llmod@divisor+1)& (0+255),w,b
 11711  0034E8  5B81               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 11712  0034EA  5186               	movf	(___llmod@divisor+2)& (0+255),w,b
 11713  0034EC  5B82               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 11714  0034EE  5187               	movf	(___llmod@divisor+3)& (0+255),w,b
 11715  0034F0  5B83               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 11716  0034F2                     l7362:
 11717                           
 11718                           ; BSR set to: 0
 11719  0034F2  90D8               	bcf	status,0,c
 11720  0034F4  3387               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 11721  0034F6  3386               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 11722  0034F8  3385               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 11723  0034FA  3384               	rrcf	___llmod@divisor& (0+255),f,b
 11724                           
 11725                           ; BSR set to: 0
 11726  0034FC  2F88               	decfsz	___llmod@counter& (0+255),f,b
 11727  0034FE  D7E7               	goto	u7970
 11728  003500                     l1107:
 11729                           
 11730                           ; BSR set to: 0
 11731  003500  C080  F080         	movff	___llmod@dividend,?___llmod
 11732  003504  C081  F081         	movff	___llmod@dividend+1,?___llmod+1
 11733  003508  C082  F082         	movff	___llmod@dividend+2,?___llmod+2
 11734  00350C  C083  F083         	movff	___llmod@dividend+3,?___llmod+3
 11735                           
 11736                           ; BSR set to: 0
 11737  003510  0012               	return		;funcret
 11738  003512                     __end_of___llmod:
 11739                           	opt callstack 0
 11740                           
 11741 ;; *************** function _I2C_Master_Write *****************
 11742 ;; Defined at:
 11743 ;;		line 70 in file "I2C.c"
 11744 ;; Parameters:    Size  Location     Type
 11745 ;;  byteToWrite     2    1[BANK0 ] unsigned int 
 11746 ;; Auto vars:     Size  Location     Type
 11747 ;;		None
 11748 ;; Return value:  Size  Location     Type
 11749 ;;                  1    wreg      void 
 11750 ;; Registers used:
 11751 ;;		wreg, status,2, status,0, cstack
 11752 ;; Tracked objects:
 11753 ;;		On entry : 0/0
 11754 ;;		On exit  : 0/0
 11755 ;;		Unchanged: 0/0
 11756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11757 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11760 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11761 ;;Total ram usage:        2 bytes
 11762 ;; Hardware stack levels used:    1
 11763 ;; Hardware stack levels required when called:    4
 11764 ;; This function calls:
 11765 ;;		_I2C_Master_Wait
 11766 ;; This function is called by:
 11767 ;;		_ultrasonic_main
 11768 ;;		_UI_main
 11769 ;;		_brake
 11770 ;;		_start
 11771 ;;		_backwards
 11772 ;; This function uses a non-reentrant model
 11773 ;;
 11774                           
 11775                           	psect	text47
 11776  003B02                     __ptext47:
 11777                           	opt callstack 0
 11778  003B02                     _I2C_Master_Write:
 11779                           	opt callstack 25
 11780                           
 11781                           ;I2C.c: 71:     I2C_Master_Wait();
 11782                           
 11783                           ; BSR set to: 0
 11784                           ;incstack = 0
 11785  003B02  EC67  F01D         	call	_I2C_Master_Wait	;wreg free
 11786                           
 11787                           ;I2C.c: 74:     SSPBUF = byteToWrite;
 11788  003B06  C081  FFC9         	movff	I2C_Master_Write@byteToWrite,4041	;volatile
 11789  003B0A  0012               	return		;funcret
 11790  003B0C                     __end_of_I2C_Master_Write:
 11791                           	opt callstack 0
 11792                           
 11793 ;; *************** function _I2C_Master_Stop *****************
 11794 ;; Defined at:
 11795 ;;		line 65 in file "I2C.c"
 11796 ;; Parameters:    Size  Location     Type
 11797 ;;		None
 11798 ;; Auto vars:     Size  Location     Type
 11799 ;;		None
 11800 ;; Return value:  Size  Location     Type
 11801 ;;                  1    wreg      void 
 11802 ;; Registers used:
 11803 ;;		wreg, status,2, status,0, cstack
 11804 ;; Tracked objects:
 11805 ;;		On entry : 0/0
 11806 ;;		On exit  : 0/0
 11807 ;;		Unchanged: 0/0
 11808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11813 ;;Total ram usage:        0 bytes
 11814 ;; Hardware stack levels used:    1
 11815 ;; Hardware stack levels required when called:    4
 11816 ;; This function calls:
 11817 ;;		_I2C_Master_Wait
 11818 ;; This function is called by:
 11819 ;;		_ultrasonic_main
 11820 ;;		_UI_main
 11821 ;;		_brake
 11822 ;;		_start
 11823 ;;		_backwards
 11824 ;; This function uses a non-reentrant model
 11825 ;;
 11826                           
 11827                           	psect	text48
 11828  003B0C                     __ptext48:
 11829                           	opt callstack 0
 11830  003B0C                     _I2C_Master_Stop:
 11831                           	opt callstack 25
 11832                           
 11833                           ;I2C.c: 66:     I2C_Master_Wait();
 11834                           
 11835                           ;incstack = 0
 11836  003B0C  EC67  F01D         	call	_I2C_Master_Wait	;wreg free
 11837                           
 11838                           ;I2C.c: 67:     SSPCON2bits.PEN = 1;
 11839  003B10  84C5               	bsf	4037,2,c	;volatile
 11840  003B12  0012               	return		;funcret
 11841  003B14                     __end_of_I2C_Master_Stop:
 11842                           	opt callstack 0
 11843                           
 11844 ;; *************** function _I2C_Master_Start *****************
 11845 ;; Defined at:
 11846 ;;		line 55 in file "I2C.c"
 11847 ;; Parameters:    Size  Location     Type
 11848 ;;		None
 11849 ;; Auto vars:     Size  Location     Type
 11850 ;;		None
 11851 ;; Return value:  Size  Location     Type
 11852 ;;                  1    wreg      void 
 11853 ;; Registers used:
 11854 ;;		wreg, status,2, status,0, cstack
 11855 ;; Tracked objects:
 11856 ;;		On entry : 0/0
 11857 ;;		On exit  : 0/0
 11858 ;;		Unchanged: 0/0
 11859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11864 ;;Total ram usage:        0 bytes
 11865 ;; Hardware stack levels used:    1
 11866 ;; Hardware stack levels required when called:    4
 11867 ;; This function calls:
 11868 ;;		_I2C_Master_Wait
 11869 ;; This function is called by:
 11870 ;;		_ultrasonic_main
 11871 ;;		_UI_main
 11872 ;;		_brake
 11873 ;;		_start
 11874 ;;		_backwards
 11875 ;; This function uses a non-reentrant model
 11876 ;;
 11877                           
 11878                           	psect	text49
 11879  003B14                     __ptext49:
 11880                           	opt callstack 0
 11881  003B14                     _I2C_Master_Start:
 11882                           	opt callstack 25
 11883                           
 11884                           ;I2C.c: 56:     I2C_Master_Wait();
 11885                           
 11886                           ;incstack = 0
 11887  003B14  EC67  F01D         	call	_I2C_Master_Wait	;wreg free
 11888                           
 11889                           ;I2C.c: 57:     SSPCON2bits.SEN = 1;
 11890  003B18  80C5               	bsf	4037,0,c	;volatile
 11891  003B1A  0012               	return		;funcret
 11892  003B1C                     __end_of_I2C_Master_Start:
 11893                           	opt callstack 0
 11894                           
 11895 ;; *************** function _I2C_Master_Read *****************
 11896 ;; Defined at:
 11897 ;;		line 77 in file "I2C.c"
 11898 ;; Parameters:    Size  Location     Type
 11899 ;;  ackBit          1    wreg     unsigned char 
 11900 ;; Auto vars:     Size  Location     Type
 11901 ;;  ackBit          1    1[BANK0 ] unsigned char 
 11902 ;;  receivedByte    1    2[BANK0 ] unsigned char 
 11903 ;; Return value:  Size  Location     Type
 11904 ;;                  1    wreg      unsigned char 
 11905 ;; Registers used:
 11906 ;;		wreg, status,2, status,0, cstack
 11907 ;; Tracked objects:
 11908 ;;		On entry : 0/0
 11909 ;;		On exit  : 0/0
 11910 ;;		Unchanged: 0/0
 11911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11913 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11915 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11916 ;;Total ram usage:        2 bytes
 11917 ;; Hardware stack levels used:    1
 11918 ;; Hardware stack levels required when called:    4
 11919 ;; This function calls:
 11920 ;;		_I2C_Master_Wait
 11921 ;; This function is called by:
 11922 ;;		_ultrasonic_main
 11923 ;;		_UI_main
 11924 ;; This function uses a non-reentrant model
 11925 ;;
 11926                           
 11927                           	psect	text50
 11928  0039D6                     __ptext50:
 11929                           	opt callstack 0
 11930  0039D6                     _I2C_Master_Read:
 11931                           	opt callstack 25
 11932                           
 11933                           ;incstack = 0
 11934                           ;I2C_Master_Read@ackBit stored from wreg
 11935  0039D6  0100               	movlb	0	; () banked
 11936  0039D8  6F81               	movwf	I2C_Master_Read@ackBit& (0+255),b
 11937                           
 11938                           ;I2C.c: 78:     I2C_Master_Wait();
 11939  0039DA  EC67  F01D         	call	_I2C_Master_Wait	;wreg free
 11940                           
 11941                           ;I2C.c: 79:     SSPCON2bits.RCEN = 1;
 11942  0039DE  86C5               	bsf	4037,3,c	;volatile
 11943                           
 11944                           ;I2C.c: 81:     I2C_Master_Wait();
 11945  0039E0  EC67  F01D         	call	_I2C_Master_Wait	;wreg free
 11946                           
 11947                           ;I2C.c: 84:     unsigned char receivedByte = SSPBUF;
 11948  0039E4  CFC9 F082          	movff	4041,I2C_Master_Read@receivedByte	;volatile
 11949                           
 11950                           ;I2C.c: 86:     I2C_Master_Wait();
 11951  0039E8  EC67  F01D         	call	_I2C_Master_Wait	;wreg free
 11952                           
 11953                           ;I2C.c: 87:     SSPCON2bits.ACKDT = ackBit;
 11954  0039EC  0100               	movlb	0	; () banked
 11955  0039EE  B181               	btfsc	I2C_Master_Read@ackBit& (0+255),0,b
 11956  0039F0  D002               	bra	u7515
 11957  0039F2  9AC5               	bcf	4037,5,c	;volatile
 11958  0039F4  D001               	bra	u7516
 11959  0039F6                     u7515:
 11960  0039F6  8AC5               	bsf	4037,5,c	;volatile
 11961  0039F8                     u7516:
 11962                           
 11963                           ;I2C.c: 88:     SSPCON2bits.ACKEN = 1;
 11964  0039F8  88C5               	bsf	4037,4,c	;volatile
 11965                           
 11966                           ;I2C.c: 90:     return receivedByte;
 11967  0039FA  0100               	movlb	0	; () banked
 11968  0039FC  5182               	movf	I2C_Master_Read@receivedByte& (0+255),w,b
 11969                           
 11970                           ; BSR set to: 0
 11971  0039FE  0012               	return		;funcret
 11972  003A00                     __end_of_I2C_Master_Read:
 11973                           	opt callstack 0
 11974                           
 11975 ;; *************** function _I2C_Master_Wait *****************
 11976 ;; Defined at:
 11977 ;;		line 21 in file "I2C.c"
 11978 ;; Parameters:    Size  Location     Type
 11979 ;;		None
 11980 ;; Auto vars:     Size  Location     Type
 11981 ;;		None
 11982 ;; Return value:  Size  Location     Type
 11983 ;;                  1    wreg      void 
 11984 ;; Registers used:
 11985 ;;		wreg, status,2, status,0
 11986 ;; Tracked objects:
 11987 ;;		On entry : 0/0
 11988 ;;		On exit  : 0/0
 11989 ;;		Unchanged: 0/0
 11990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11993 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11994 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11995 ;;Total ram usage:        1 bytes
 11996 ;; Hardware stack levels used:    1
 11997 ;; Hardware stack levels required when called:    3
 11998 ;; This function calls:
 11999 ;;		Nothing
 12000 ;; This function is called by:
 12001 ;;		_I2C_Master_Start
 12002 ;;		_I2C_Master_Stop
 12003 ;;		_I2C_Master_Write
 12004 ;;		_I2C_Master_Read
 12005 ;;		_I2C_Master_RepeatedStart
 12006 ;; This function uses a non-reentrant model
 12007 ;;
 12008                           
 12009                           	psect	text51
 12010  003ACE                     __ptext51:
 12011                           	opt callstack 0
 12012  003ACE                     _I2C_Master_Wait:
 12013                           	opt callstack 25
 12014                           
 12015                           ;I2C.c: 26:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F)){
 12016                           
 12017                           ;I2C.c: 28:     }
 12018                           
 12019                           ; BSR set to: 0
 12020                           ;incstack = 0
 12021  003ACE  B4C7               	btfsc	4039,2,c	;volatile
 12022  003AD0  D7FE               	goto	_I2C_Master_Wait
 12023  003AD2  CFC5 F080          	movff	4037,??_I2C_Master_Wait	;volatile
 12024  003AD6  0E1F               	movlw	31
 12025  003AD8  0100               	movlb	0	; () banked
 12026  003ADA  1780               	andwf	??_I2C_Master_Wait& (0+255),f,b
 12027  003ADC  B4D8               	btfsc	status,2,c
 12028  003ADE  0012               	return	
 12029  003AE0  D7F6               	goto	_I2C_Master_Wait
 12030  003AE2                     __end_of_I2C_Master_Wait:
 12031                           	opt callstack 0
 12032                           
 12033 ;; *************** function _I2C_Master_Init *****************
 12034 ;; Defined at:
 12035 ;;		line 32 in file "I2C.c"
 12036 ;; Parameters:    Size  Location     Type
 12037 ;;  clockFreq       4   13[BANK0 ] const unsigned long 
 12038 ;; Auto vars:     Size  Location     Type
 12039 ;;		None
 12040 ;; Return value:  Size  Location     Type
 12041 ;;                  1    wreg      void 
 12042 ;; Registers used:
 12043 ;;		wreg, status,2, status,0, cstack
 12044 ;; Tracked objects:
 12045 ;;		On entry : 0/0
 12046 ;;		On exit  : 0/0
 12047 ;;		Unchanged: 0/0
 12048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12049 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12051 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12052 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12053 ;;Total ram usage:        8 bytes
 12054 ;; Hardware stack levels used:    1
 12055 ;; Hardware stack levels required when called:    4
 12056 ;; This function calls:
 12057 ;;		___lldiv
 12058 ;; This function is called by:
 12059 ;;		_UI_main
 12060 ;;		_start
 12061 ;; This function uses a non-reentrant model
 12062 ;;
 12063                           
 12064                           	psect	text52
 12065  003512                     __ptext52:
 12066                           	opt callstack 0
 12067  003512                     _I2C_Master_Init:
 12068                           	opt callstack 25
 12069                           
 12070                           ;I2C.c: 34:     SSPCON1bits.SSPEN = 0;
 12071                           
 12072                           ; BSR set to: 0
 12073                           ;incstack = 0
 12074  003512  9AC6               	bcf	4038,5,c	;volatile
 12075                           
 12076                           ;I2C.c: 37:     TRISCbits.TRISC3 = 1;
 12077  003514  8694               	bsf	3988,3,c	;volatile
 12078                           
 12079                           ;I2C.c: 38:     TRISCbits.TRISC4 = 1;
 12080  003516  8894               	bsf	3988,4,c	;volatile
 12081                           
 12082                           ;I2C.c: 43:     SSPADD = (10000000 / (4 * clockFreq)) - 1;
 12083  003518  0E80               	movlw	128
 12084  00351A  0100               	movlb	0	; () banked
 12085  00351C  6F80               	movwf	___lldiv@dividend& (0+255),b
 12086  00351E  0E96               	movlw	150
 12087  003520  6F81               	movwf	(___lldiv@dividend+1)& (0+255),b
 12088  003522  0E98               	movlw	152
 12089  003524  6F82               	movwf	(___lldiv@dividend+2)& (0+255),b
 12090  003526  0E00               	movlw	0
 12091  003528  6F83               	movwf	(___lldiv@dividend+3)& (0+255),b
 12092  00352A  C08D  F091         	movff	I2C_Master_Init@clockFreq,??_I2C_Master_Init
 12093  00352E  C08E  F092         	movff	I2C_Master_Init@clockFreq+1,??_I2C_Master_Init+1
 12094  003532  C08F  F093         	movff	I2C_Master_Init@clockFreq+2,??_I2C_Master_Init+2
 12095  003536  C090  F094         	movff	I2C_Master_Init@clockFreq+3,??_I2C_Master_Init+3
 12096  00353A  0E02               	movlw	2
 12097  00353C                     u7505:
 12098  00353C  90D8               	bcf	status,0,c
 12099  00353E  3791               	rlcf	??_I2C_Master_Init& (0+255),f,b
 12100  003540  3792               	rlcf	(??_I2C_Master_Init+1)& (0+255),f,b
 12101  003542  3793               	rlcf	(??_I2C_Master_Init+2)& (0+255),f,b
 12102  003544  3794               	rlcf	(??_I2C_Master_Init+3)& (0+255),f,b
 12103  003546  2EE8               	decfsz	wreg,f,c
 12104  003548  D7F9               	goto	u7505
 12105  00354A  C091  F084         	movff	??_I2C_Master_Init,___lldiv@divisor
 12106  00354E  C092  F085         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
 12107  003552  C093  F086         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
 12108  003556  C094  F087         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
 12109  00355A  EC62  F019         	call	___lldiv	;wreg free
 12110  00355E  0100               	movlb	0	; () banked
 12111  003560  0580               	decf	?___lldiv& (0+255),w,b
 12112  003562  6EC8               	movwf	4040,c	;volatile
 12113                           
 12114                           ; BSR set to: 0
 12115                           ;I2C.c: 46:     SSPSTAT = 0b10000000;
 12116  003564  0E80               	movlw	128
 12117  003566  6EC7               	movwf	4039,c	;volatile
 12118                           
 12119                           ; BSR set to: 0
 12120                           ;I2C.c: 49:     SSPCON1 = 0b00101000;
 12121  003568  0E28               	movlw	40
 12122  00356A  6EC6               	movwf	4038,c	;volatile
 12123                           
 12124                           ; BSR set to: 0
 12125                           ;I2C.c: 52:     SSPCON2 = 0b00000000;
 12126  00356C  0E00               	movlw	0
 12127  00356E  6EC5               	movwf	4037,c	;volatile
 12128                           
 12129                           ; BSR set to: 0
 12130  003570  0012               	return		;funcret
 12131  003572                     __end_of_I2C_Master_Init:
 12132                           	opt callstack 0
 12133                           
 12134 ;; *************** function ___lldiv *****************
 12135 ;; Defined at:
 12136 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__lldiv.c"
 12137 ;; Parameters:    Size  Location     Type
 12138 ;;  dividend        4    0[BANK0 ] unsigned long 
 12139 ;;  divisor         4    4[BANK0 ] unsigned long 
 12140 ;; Auto vars:     Size  Location     Type
 12141 ;;  quotient        4    8[BANK0 ] unsigned long 
 12142 ;;  counter         1   12[BANK0 ] unsigned char 
 12143 ;; Return value:  Size  Location     Type
 12144 ;;                  4    0[BANK0 ] unsigned long 
 12145 ;; Registers used:
 12146 ;;		wreg, status,2, status,0
 12147 ;; Tracked objects:
 12148 ;;		On entry : 0/0
 12149 ;;		On exit  : 0/0
 12150 ;;		Unchanged: 0/0
 12151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12152 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12153 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12155 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12156 ;;Total ram usage:       13 bytes
 12157 ;; Hardware stack levels used:    1
 12158 ;; Hardware stack levels required when called:    3
 12159 ;; This function calls:
 12160 ;;		Nothing
 12161 ;; This function is called by:
 12162 ;;		_I2C_Master_Init
 12163 ;; This function uses a non-reentrant model
 12164 ;;
 12165                           
 12166                           	psect	text53
 12167  0032C4                     __ptext53:
 12168                           	opt callstack 0
 12169  0032C4                     ___lldiv:
 12170                           	opt callstack 25
 12171                           
 12172                           ; BSR set to: 0
 12173                           ;incstack = 0
 12174  0032C4  0E00               	movlw	0
 12175  0032C6  0100               	movlb	0	; () banked
 12176  0032C8  6F88               	movwf	___lldiv@quotient& (0+255),b
 12177  0032CA  0E00               	movlw	0
 12178  0032CC  6F89               	movwf	(___lldiv@quotient+1)& (0+255),b
 12179  0032CE  0E00               	movlw	0
 12180  0032D0  6F8A               	movwf	(___lldiv@quotient+2)& (0+255),b
 12181  0032D2  0E00               	movlw	0
 12182  0032D4  6F8B               	movwf	(___lldiv@quotient+3)& (0+255),b
 12183                           
 12184                           ; BSR set to: 0
 12185  0032D6  5184               	movf	___lldiv@divisor& (0+255),w,b
 12186  0032D8  1185               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 12187  0032DA  1186               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 12188  0032DC  1187               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 12189  0032DE  B4D8               	btfsc	status,2,c
 12190  0032E0  D02A               	goto	l714
 12191                           
 12192                           ; BSR set to: 0
 12193  0032E2  0E01               	movlw	1
 12194  0032E4  6F8C               	movwf	___lldiv@counter& (0+255),b
 12195  0032E6  D006               	goto	l6982
 12196  0032E8                     l6980:
 12197                           
 12198                           ; BSR set to: 0
 12199  0032E8  90D8               	bcf	status,0,c
 12200  0032EA  3784               	rlcf	___lldiv@divisor& (0+255),f,b
 12201  0032EC  3785               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 12202  0032EE  3786               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 12203  0032F0  3787               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 12204  0032F2  2B8C               	incf	___lldiv@counter& (0+255),f,b
 12205  0032F4                     l6982:
 12206                           
 12207                           ; BSR set to: 0
 12208  0032F4  AF87               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 12209  0032F6  D7F8               	goto	l6980
 12210  0032F8                     u7480:
 12211                           
 12212                           ; BSR set to: 0
 12213  0032F8  90D8               	bcf	status,0,c
 12214  0032FA  3788               	rlcf	___lldiv@quotient& (0+255),f,b
 12215  0032FC  3789               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 12216  0032FE  378A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 12217  003300  378B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 12218                           
 12219                           ; BSR set to: 0
 12220  003302  5184               	movf	___lldiv@divisor& (0+255),w,b
 12221  003304  5D80               	subwf	___lldiv@dividend& (0+255),w,b
 12222  003306  5185               	movf	(___lldiv@divisor+1)& (0+255),w,b
 12223  003308  5981               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 12224  00330A  5186               	movf	(___lldiv@divisor+2)& (0+255),w,b
 12225  00330C  5982               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 12226  00330E  5187               	movf	(___lldiv@divisor+3)& (0+255),w,b
 12227  003310  5983               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 12228  003312  A0D8               	btfss	status,0,c
 12229  003314  D009               	goto	l6992
 12230                           
 12231                           ; BSR set to: 0
 12232  003316  5184               	movf	___lldiv@divisor& (0+255),w,b
 12233  003318  5F80               	subwf	___lldiv@dividend& (0+255),f,b
 12234  00331A  5185               	movf	(___lldiv@divisor+1)& (0+255),w,b
 12235  00331C  5B81               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 12236  00331E  5186               	movf	(___lldiv@divisor+2)& (0+255),w,b
 12237  003320  5B82               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 12238  003322  5187               	movf	(___lldiv@divisor+3)& (0+255),w,b
 12239  003324  5B83               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 12240                           
 12241                           ; BSR set to: 0
 12242  003326  8188               	bsf	___lldiv@quotient& (0+255),0,b
 12243  003328                     l6992:
 12244                           
 12245                           ; BSR set to: 0
 12246  003328  90D8               	bcf	status,0,c
 12247  00332A  3387               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 12248  00332C  3386               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 12249  00332E  3385               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 12250  003330  3384               	rrcf	___lldiv@divisor& (0+255),f,b
 12251                           
 12252                           ; BSR set to: 0
 12253  003332  2F8C               	decfsz	___lldiv@counter& (0+255),f,b
 12254  003334  D7E1               	goto	u7480
 12255  003336                     l714:
 12256                           
 12257                           ; BSR set to: 0
 12258  003336  C088  F080         	movff	___lldiv@quotient,?___lldiv
 12259  00333A  C089  F081         	movff	___lldiv@quotient+1,?___lldiv+1
 12260  00333E  C08A  F082         	movff	___lldiv@quotient+2,?___lldiv+2
 12261  003342  C08B  F083         	movff	___lldiv@quotient+3,?___lldiv+3
 12262                           
 12263                           ; BSR set to: 0
 12264  003346  0012               	return		;funcret
 12265  003348                     __end_of___lldiv:
 12266                           	opt callstack 0
 12267                           
 12268 ;; *************** function _ISR *****************
 12269 ;; Defined at:
 12270 ;;		line 71 in file "main.c"
 12271 ;; Parameters:    Size  Location     Type
 12272 ;;		None
 12273 ;; Auto vars:     Size  Location     Type
 12274 ;;		None
 12275 ;; Return value:  Size  Location     Type
 12276 ;;                  1    wreg      void 
 12277 ;; Registers used:
 12278 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12279 ;; Tracked objects:
 12280 ;;		On entry : 0/0
 12281 ;;		On exit  : 0/0
 12282 ;;		Unchanged: 0/0
 12283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12286 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12287 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12288 ;;Total ram usage:        2 bytes
 12289 ;; Hardware stack levels used:    1
 12290 ;; Hardware stack levels required when called:    2
 12291 ;; This function calls:
 12292 ;;		_echo
 12293 ;; This function is called by:
 12294 ;;		Interrupt level 2
 12295 ;; This function uses a non-reentrant model
 12296 ;;
 12297                           
 12298                           	psect	intcode
 12299  000008                     __pintcode:
 12300                           	opt callstack 0
 12301  000008                     _ISR:
 12302                           	opt callstack 14
 12303                           
 12304                           ; BSR set to: 0
 12305                           ;incstack = 0
 12306  000008  826E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 12307  00000A  EDD1  F01B         	call	int_func,f	;refresh shadow registers
 12308                           
 12309                           	psect	intcode_body
 12310  0037A2                     __pintcode_body:
 12311                           	opt callstack 14
 12312  0037A2                     int_func:
 12313                           	opt callstack 14
 12314  0037A2  0006               	pop		; remove dummy address from shadow register refresh
 12315  0037A4  CFD9 F036          	movff	fsr2l,??_ISR
 12316  0037A8  CFDA F037          	movff	fsr2h,??_ISR+1
 12317                           
 12318                           ;main.c: 72:  if(RBIF == 1){
 12319  0037AC  A0F2               	btfss	4082,0,c	;volatile
 12320  0037AE  D012               	goto	i2l365
 12321                           
 12322                           ;main.c: 73:         if (sens){
 12323  0037B0  5058               	movf	_sens,w,c	;volatile
 12324  0037B2  1059               	iorwf	_sens+1,w,c	;volatile
 12325  0037B4  B4D8               	btfsc	status,2,c
 12326  0037B6  D005               	goto	i2l5952
 12327                           
 12328                           ;main.c: 74:             RBIE = 0;
 12329  0037B8  96F2               	bcf	4082,3,c	;volatile
 12330                           
 12331                           ;main.c: 75:             echo();
 12332  0037BA  EC13  F004         	call	_echo	;wreg free
 12333                           
 12334                           ;main.c: 76:             RBIF = 0;
 12335  0037BE  90F2               	bcf	4082,0,c	;volatile
 12336                           
 12337                           ;main.c: 77:             RBIE = 1;
 12338  0037C0  86F2               	bsf	4082,3,c	;volatile
 12339  0037C2                     i2l5952:
 12340                           
 12341                           ;main.c: 79:         if (~sens){
 12342  0037C2  2858               	incf	_sens,w,c	;volatile
 12343  0037C4  E103               	bnz	i2u617_40
 12344  0037C6  2859               	incf	_sens+1,w,c	;volatile
 12345  0037C8  B4D8               	btfsc	status,2,c
 12346  0037CA  D004               	goto	i2l365
 12347  0037CC                     i2u617_40:
 12348                           
 12349                           ;main.c: 80:             key_was_pressed = 1;
 12350  0037CC  0E01               	movlw	1
 12351  0037CE  0101               	movlb	1	; () banked
 12352  0037D0  6F77               	movwf	_key_was_pressed& (0+255),b	;volatile
 12353                           
 12354                           ; BSR set to: 1
 12355                           ;main.c: 81:             INT1IF = 0;
 12356  0037D2  90F0               	bcf	4080,0,c	;volatile
 12357  0037D4                     i2l365:
 12358  0037D4  C037  FFDA         	movff	??_ISR+1,fsr2h
 12359  0037D8  C036  FFD9         	movff	??_ISR,fsr2l
 12360  0037DC  926E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 12361  0037DE  0011               	retfie		f
 12362  0037E0                     __end_of_ISR:
 12363                           	opt callstack 0
 12364                           
 12365 ;; *************** function _echo *****************
 12366 ;; Defined at:
 12367 ;;		line 99 in file "main.c"
 12368 ;; Parameters:    Size  Location     Type
 12369 ;;		None
 12370 ;; Auto vars:     Size  Location     Type
 12371 ;;		None
 12372 ;; Return value:  Size  Location     Type
 12373 ;;                  1    wreg      void 
 12374 ;; Registers used:
 12375 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12376 ;; Tracked objects:
 12377 ;;		On entry : 0/0
 12378 ;;		On exit  : 0/0
 12379 ;;		Unchanged: 0/0
 12380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12383 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12384 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12385 ;;Total ram usage:        4 bytes
 12386 ;; Hardware stack levels used:    1
 12387 ;; Hardware stack levels required when called:    1
 12388 ;; This function calls:
 12389 ;;		___fldiv
 12390 ;;		___fltol
 12391 ;;		___xxtofl
 12392 ;;		i2___awdiv
 12393 ;; This function is called by:
 12394 ;;		_ISR
 12395 ;; This function uses a non-reentrant model
 12396 ;;
 12397                           
 12398                           	psect	text55
 12399  000826                     __ptext55:
 12400                           	opt callstack 0
 12401  000826                     _echo:
 12402                           	opt callstack 14
 12403                           
 12404                           ;main.c: 100:     if (b==1){
 12405                           
 12406                           ;incstack = 0
 12407  000826  045A               	decf	_b,w,c
 12408  000828  105B               	iorwf	_b+1,w,c
 12409  00082A  A4D8               	btfss	status,2,c
 12410  00082C  D0A2               	goto	i2l5392
 12411                           
 12412                           ;main.c: 101:         if (RB7 == 1){
 12413  00082E  BE81               	btfsc	3969,7,c	;volatile
 12414                           
 12415                           ;main.c: 102:             TMR1ON = 1;
 12416  000830  80CD               	bsf	4045,0,c	;volatile
 12417                           
 12418                           ;main.c: 104:         if (RB7 == 0){
 12419                           
 12420                           ;main.c: 103:         }
 12421  000832  BE81               	btfsc	3969,7,c	;volatile
 12422  000834  D037               	goto	i2l5368
 12423                           
 12424                           ;main.c: 105:             TMR1ON = 0;
 12425  000836  90CD               	bcf	4045,0,c	;volatile
 12426                           
 12427                           ;main.c: 106:             a[0] = (TMR1L | (TMR1H<<8))/58.82;
 12428  000838  0EAE               	movlw	174
 12429  00083A  6E13               	movwf	___fldiv@a,c
 12430  00083C  0E47               	movlw	71
 12431  00083E  6E14               	movwf	___fldiv@a+1,c
 12432  000840  0E6B               	movlw	107
 12433  000842  6E15               	movwf	___fldiv@a+2,c
 12434  000844  0E42               	movlw	66
 12435  000846  6E16               	movwf	___fldiv@a+3,c
 12436  000848  50CF               	movf	4047,w,c	;volatile
 12437  00084A  6E33               	movwf	(??_echo+1)& (0+255),c
 12438  00084C  6A32               	clrf	??_echo& (0+255),c
 12439  00084E  50CE               	movf	4046,w,c	;volatile
 12440  000850  6E34               	movwf	(??_echo+2)& (0+255),c
 12441  000852  6A35               	clrf	(??_echo+3)& (0+255),c
 12442  000854  5032               	movf	??_echo,w,c
 12443  000856  1234               	iorwf	??_echo+2,f,c
 12444  000858  5033               	movf	??_echo+1,w,c
 12445  00085A  1235               	iorwf	??_echo+3,f,c
 12446  00085C  C034  F001         	movff	??_echo+2,___xxtofl@val
 12447  000860  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 12448  000864  0E00               	movlw	0
 12449  000866  BE02               	btfsc	___xxtofl@val+1,7,c
 12450  000868  0EFF               	movlw	-1
 12451  00086A  6E03               	movwf	___xxtofl@val+2,c
 12452  00086C  6E04               	movwf	___xxtofl@val+3,c
 12453  00086E  0E01               	movlw	1
 12454  000870  EC8B  F014         	call	___xxtofl
 12455  000874  C001  F00F         	movff	?___xxtofl,___fldiv@b
 12456  000878  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 12457  00087C  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 12458  000880  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 12459  000884  ECA3  F00C         	call	___fldiv	;wreg free
 12460  000888  C00F  F028         	movff	?___fldiv,___fltol@f1
 12461  00088C  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 12462  000890  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 12463  000894  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 12464  000898  ECE0  F017         	call	___fltol	;wreg free
 12465  00089C  C028  F061         	movff	?___fltol,_a
 12466  0008A0  C029  F062         	movff	?___fltol+1,_a+1
 12467  0008A4                     i2l5368:
 12468                           
 12469                           ;main.c: 110:         if (a[0]>=2 && a[0]<=200){
 12470  0008A4  BE62               	btfsc	_a+1,7,c
 12471  0008A6  D065               	goto	i2l5392
 12472  0008A8  5062               	movf	_a+1,w,c
 12473  0008AA  E104               	bnz	i2u529_40
 12474  0008AC  0E02               	movlw	2
 12475  0008AE  5C61               	subwf	_a,w,c
 12476  0008B0  A0D8               	btfss	status,0,c
 12477  0008B2  D05F               	goto	i2l5392
 12478  0008B4                     i2u529_40:
 12479  0008B4  BE62               	btfsc	_a+1,7,c
 12480  0008B6  D006               	goto	i2u530_40
 12481  0008B8  5062               	movf	_a+1,w,c
 12482  0008BA  E15B               	bnz	i2l5392
 12483  0008BC  0EC9               	movlw	201
 12484  0008BE  5C61               	subwf	_a,w,c
 12485  0008C0  B0D8               	btfsc	status,0,c
 12486  0008C2  D057               	goto	i2l5392
 12487  0008C4                     i2u530_40:
 12488                           
 12489                           ;main.c: 111:             if ((~sumf[0])&&(dist_final[0][0]!=0)&&(dist_final[0][1]!=0)&&
      +                          (dist_final[0][2]!=0)){
 12490  0008C4  0440               	decf	_sumf,w,c
 12491  0008C6  B4D8               	btfsc	status,2,c
 12492  0008C8  D01B               	goto	i2l5384
 12493  0008CA  0102               	movlb	2	; () banked
 12494  0008CC  5150               	movf	_dist_final& (0+255),w,b
 12495  0008CE  1151               	iorwf	(_dist_final+1)& (0+255),w,b
 12496  0008D0  B4D8               	btfsc	status,2,c
 12497  0008D2  D016               	goto	i2l5384
 12498                           
 12499                           ; BSR set to: 2
 12500  0008D4  5152               	movf	(_dist_final+2)& (0+255),w,b
 12501  0008D6  1153               	iorwf	(_dist_final+3)& (0+255),w,b
 12502  0008D8  B4D8               	btfsc	status,2,c
 12503  0008DA  D012               	goto	i2l5384
 12504                           
 12505                           ; BSR set to: 2
 12506  0008DC  5154               	movf	(_dist_final+4)& (0+255),w,b
 12507  0008DE  1155               	iorwf	(_dist_final+5)& (0+255),w,b
 12508  0008E0  B4D8               	btfsc	status,2,c
 12509  0008E2  D00E               	goto	i2l5384
 12510                           
 12511                           ; BSR set to: 2
 12512                           ;main.c: 112:                 sum[0] = (dist_final[0][0]+dist_final[0][1]+dist_final[0][
      +                          2]);
 12513  0008E4  5154               	movf	(_dist_final+4)& (0+255),w,b
 12514  0008E6  2552               	addwf	(_dist_final+2)& (0+255),w,b
 12515  0008E8  6E32               	movwf	??_echo& (0+255),c
 12516  0008EA  5155               	movf	(_dist_final+5)& (0+255),w,b
 12517  0008EC  2153               	addwfc	(_dist_final+3)& (0+255),w,b
 12518  0008EE  6E33               	movwf	(??_echo+1)& (0+255),c
 12519  0008F0  5150               	movf	_dist_final& (0+255),w,b
 12520  0008F2  2432               	addwf	??_echo,w,c
 12521  0008F4  6E38               	movwf	_sum,c
 12522  0008F6  5151               	movf	(_dist_final+1)& (0+255),w,b
 12523  0008F8  2033               	addwfc	??_echo+1,w,c
 12524  0008FA  6E39               	movwf	_sum+1,c
 12525                           
 12526                           ; BSR set to: 2
 12527                           ;main.c: 113:                 sumf[0] = 1;
 12528  0008FC  0E01               	movlw	1
 12529  0008FE  6E40               	movwf	_sumf,c
 12530  000900                     i2l5384:
 12531                           
 12532                           ;main.c: 115:             if (sumf[0]){
 12533  000900  5040               	movf	_sumf,w,c
 12534  000902  B4D8               	btfsc	status,2,c
 12535  000904  D029               	goto	i2l5390
 12536                           
 12537                           ;main.c: 116:                 sum[0] = sum[0] - dist_final[0][meas] + a[0];
 12538  000906  90D8               	bcf	status,0,c
 12539  000908  3450               	rlcf	_meas,w,c	;volatile
 12540  00090A  6ED9               	movwf	fsr2l,c
 12541  00090C  3451               	rlcf	_meas+1,w,c	;volatile
 12542  00090E  6EDA               	movwf	fsr2h,c
 12543  000910  0E50               	movlw	low _dist_final
 12544  000912  26D9               	addwf	fsr2l,f,c
 12545  000914  0E02               	movlw	high _dist_final
 12546  000916  22DA               	addwfc	fsr2h,f,c
 12547  000918  CFDE F032          	movff	postinc2,??_echo
 12548  00091C  CFDD F033          	movff	postdec2,??_echo+1
 12549  000920  C038  F034         	movff	_sum,??_echo+2
 12550  000924  C039  F035         	movff	_sum+1,??_echo+3
 12551  000928  5032               	movf	??_echo,w,c
 12552  00092A  5E34               	subwf	??_echo+2,f,c
 12553  00092C  5033               	movf	??_echo+1,w,c
 12554  00092E  5A35               	subwfb	??_echo+3,f,c
 12555  000930  5061               	movf	_a,w,c
 12556  000932  2434               	addwf	??_echo+2,w,c
 12557  000934  6E38               	movwf	_sum,c
 12558  000936  5062               	movf	_a+1,w,c
 12559  000938  2035               	addwfc	??_echo+3,w,c
 12560  00093A  6E39               	movwf	_sum+1,c
 12561                           
 12562                           ;main.c: 117:                 dist_final[0][5] = (sum[0]/5);
 12563  00093C  C038  F001         	movff	_sum,i2___awdiv@dividend
 12564  000940  C039  F002         	movff	_sum+1,i2___awdiv@dividend+1
 12565  000944  0E00               	movlw	0
 12566  000946  6E04               	movwf	i2___awdiv@divisor+1,c
 12567  000948  0E05               	movlw	5
 12568  00094A  6E03               	movwf	i2___awdiv@divisor,c
 12569  00094C  ECA4  F019         	call	i2___awdiv	;wreg free
 12570  000950  C001  F25A         	movff	?i2___awdiv,_dist_final+10
 12571  000954  C002  F25B         	movff	?i2___awdiv+1,_dist_final+11
 12572  000958                     i2l5390:
 12573                           
 12574                           ;main.c: 119:             dist_final[0][meas] = a[0];
 12575  000958  90D8               	bcf	status,0,c
 12576  00095A  3450               	rlcf	_meas,w,c	;volatile
 12577  00095C  6ED9               	movwf	fsr2l,c
 12578  00095E  3451               	rlcf	_meas+1,w,c	;volatile
 12579  000960  6EDA               	movwf	fsr2h,c
 12580  000962  0E50               	movlw	low _dist_final
 12581  000964  26D9               	addwf	fsr2l,f,c
 12582  000966  0E02               	movlw	high _dist_final
 12583  000968  22DA               	addwfc	fsr2h,f,c
 12584  00096A  C061  FFDE         	movff	_a,postinc2
 12585  00096E  C062  FFDD         	movff	_a+1,postdec2
 12586  000972                     i2l5392:
 12587                           
 12588                           ;main.c: 122:     if (b==2){
 12589  000972  0E02               	movlw	2
 12590  000974  185A               	xorwf	_b,w,c
 12591  000976  105B               	iorwf	_b+1,w,c
 12592  000978  A4D8               	btfss	status,2,c
 12593  00097A  D0A4               	goto	i2l5426
 12594                           
 12595                           ;main.c: 123:         if (RB6 == 1){
 12596  00097C  BC81               	btfsc	3969,6,c	;volatile
 12597                           
 12598                           ;main.c: 124:             TMR1ON = 1;
 12599  00097E  80CD               	bsf	4045,0,c	;volatile
 12600                           
 12601                           ;main.c: 126:         if (RB6 == 0){
 12602                           
 12603                           ;main.c: 125:         }
 12604  000980  BC81               	btfsc	3969,6,c	;volatile
 12605  000982  D037               	goto	i2l5402
 12606                           
 12607                           ;main.c: 127:             TMR1ON = 0;
 12608  000984  90CD               	bcf	4045,0,c	;volatile
 12609                           
 12610                           ;main.c: 128:             a[1] = (TMR1L | (TMR1H<<8))/58.82;
 12611  000986  0EAE               	movlw	174
 12612  000988  6E13               	movwf	___fldiv@a,c
 12613  00098A  0E47               	movlw	71
 12614  00098C  6E14               	movwf	___fldiv@a+1,c
 12615  00098E  0E6B               	movlw	107
 12616  000990  6E15               	movwf	___fldiv@a+2,c
 12617  000992  0E42               	movlw	66
 12618  000994  6E16               	movwf	___fldiv@a+3,c
 12619  000996  50CF               	movf	4047,w,c	;volatile
 12620  000998  6E33               	movwf	(??_echo+1)& (0+255),c
 12621  00099A  6A32               	clrf	??_echo& (0+255),c
 12622  00099C  50CE               	movf	4046,w,c	;volatile
 12623  00099E  6E34               	movwf	(??_echo+2)& (0+255),c
 12624  0009A0  6A35               	clrf	(??_echo+3)& (0+255),c
 12625  0009A2  5032               	movf	??_echo,w,c
 12626  0009A4  1234               	iorwf	??_echo+2,f,c
 12627  0009A6  5033               	movf	??_echo+1,w,c
 12628  0009A8  1235               	iorwf	??_echo+3,f,c
 12629  0009AA  C034  F001         	movff	??_echo+2,___xxtofl@val
 12630  0009AE  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 12631  0009B2  0E00               	movlw	0
 12632  0009B4  BE02               	btfsc	___xxtofl@val+1,7,c
 12633  0009B6  0EFF               	movlw	-1
 12634  0009B8  6E03               	movwf	___xxtofl@val+2,c
 12635  0009BA  6E04               	movwf	___xxtofl@val+3,c
 12636  0009BC  0E01               	movlw	1
 12637  0009BE  EC8B  F014         	call	___xxtofl
 12638  0009C2  C001  F00F         	movff	?___xxtofl,___fldiv@b
 12639  0009C6  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 12640  0009CA  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 12641  0009CE  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 12642  0009D2  ECA3  F00C         	call	___fldiv	;wreg free
 12643  0009D6  C00F  F028         	movff	?___fldiv,___fltol@f1
 12644  0009DA  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 12645  0009DE  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 12646  0009E2  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 12647  0009E6  ECE0  F017         	call	___fltol	;wreg free
 12648  0009EA  C028  F063         	movff	?___fltol,_a+2
 12649  0009EE  C029  F064         	movff	?___fltol+1,_a+3
 12650  0009F2                     i2l5402:
 12651                           
 12652                           ;main.c: 131:                 if (a[1]>=2 && a[1]<=200){
 12653  0009F2  BE64               	btfsc	_a+3,7,c
 12654  0009F4  D067               	goto	i2l5426
 12655  0009F6  5064               	movf	_a+3,w,c
 12656  0009F8  E104               	bnz	i2u539_40
 12657  0009FA  0E02               	movlw	2
 12658  0009FC  5C63               	subwf	_a+2,w,c
 12659  0009FE  A0D8               	btfss	status,0,c
 12660  000A00  D061               	goto	i2l5426
 12661  000A02                     i2u539_40:
 12662  000A02  BE64               	btfsc	_a+3,7,c
 12663  000A04  D006               	goto	i2u540_40
 12664  000A06  5064               	movf	_a+3,w,c
 12665  000A08  E15D               	bnz	i2l5426
 12666  000A0A  0EC9               	movlw	201
 12667  000A0C  5C63               	subwf	_a+2,w,c
 12668  000A0E  B0D8               	btfsc	status,0,c
 12669  000A10  D059               	goto	i2l5426
 12670  000A12                     i2u540_40:
 12671                           
 12672                           ;main.c: 133:                 if ((~sumf[1])&&(dist_final[1][0]!=0)&&(dist_final[1][1]!=
      +                          0)&&(dist_final[1][2]!=0)){
 12673  000A12  0441               	decf	_sumf+1,w,c
 12674  000A14  B4D8               	btfsc	status,2,c
 12675  000A16  D01B               	goto	i2l5418
 12676  000A18  0102               	movlb	2	; () banked
 12677  000A1A  515C               	movf	(_dist_final+12)& (0+255),w,b
 12678  000A1C  115D               	iorwf	(_dist_final+13)& (0+255),w,b
 12679  000A1E  B4D8               	btfsc	status,2,c
 12680  000A20  D016               	goto	i2l5418
 12681                           
 12682                           ; BSR set to: 2
 12683  000A22  515E               	movf	(_dist_final+14)& (0+255),w,b
 12684  000A24  115F               	iorwf	(_dist_final+15)& (0+255),w,b
 12685  000A26  B4D8               	btfsc	status,2,c
 12686  000A28  D012               	goto	i2l5418
 12687                           
 12688                           ; BSR set to: 2
 12689  000A2A  5160               	movf	(_dist_final+16)& (0+255),w,b
 12690  000A2C  1161               	iorwf	(_dist_final+17)& (0+255),w,b
 12691  000A2E  B4D8               	btfsc	status,2,c
 12692  000A30  D00E               	goto	i2l5418
 12693                           
 12694                           ; BSR set to: 2
 12695                           ;main.c: 134:             sum[1] = (dist_final[1][0]+dist_final[1][1]+dist_final[1][2]);
 12696  000A32  515E               	movf	(_dist_final+14)& (0+255),w,b
 12697  000A34  255C               	addwf	(_dist_final+12)& (0+255),w,b
 12698  000A36  6E32               	movwf	??_echo& (0+255),c
 12699  000A38  515F               	movf	(_dist_final+15)& (0+255),w,b
 12700  000A3A  215D               	addwfc	(_dist_final+13)& (0+255),w,b
 12701  000A3C  6E33               	movwf	(??_echo+1)& (0+255),c
 12702  000A3E  5160               	movf	(_dist_final+16)& (0+255),w,b
 12703  000A40  2432               	addwf	??_echo,w,c
 12704  000A42  6E3A               	movwf	_sum+2,c
 12705  000A44  5161               	movf	(_dist_final+17)& (0+255),w,b
 12706  000A46  2033               	addwfc	??_echo+1,w,c
 12707  000A48  6E3B               	movwf	_sum+3,c
 12708                           
 12709                           ; BSR set to: 2
 12710                           ;main.c: 135:             sumf[1] = 1;
 12711  000A4A  0E01               	movlw	1
 12712  000A4C  6E41               	movwf	_sumf+1,c
 12713  000A4E                     i2l5418:
 12714                           
 12715                           ;main.c: 137:         if (sumf[1]){
 12716  000A4E  5041               	movf	_sumf+1,w,c
 12717  000A50  B4D8               	btfsc	status,2,c
 12718  000A52  D02B               	goto	i2l5424
 12719                           
 12720                           ;main.c: 138:             sum[1] = sum[1] - dist_final[1][meas] + a[1];
 12721  000A54  90D8               	bcf	status,0,c
 12722  000A56  3450               	rlcf	_meas,w,c	;volatile
 12723  000A58  6ED9               	movwf	fsr2l,c
 12724  000A5A  3451               	rlcf	_meas+1,w,c	;volatile
 12725  000A5C  6EDA               	movwf	fsr2h,c
 12726  000A5E  0E5C               	movlw	low (_dist_final+12)
 12727  000A60  26D9               	addwf	fsr2l,f,c
 12728  000A62  0E02               	movlw	high (_dist_final+12)
 12729  000A64  22DA               	addwfc	fsr2h,f,c
 12730  000A66  CFDE F032          	movff	postinc2,??_echo
 12731  000A6A  CFDD F033          	movff	postdec2,??_echo+1
 12732  000A6E  EE20  F03A         	lfsr	2,_sum+2
 12733  000A72  CFDE F034          	movff	postinc2,??_echo+2
 12734  000A76  CFDD F035          	movff	postdec2,??_echo+3
 12735  000A7A  5032               	movf	??_echo,w,c
 12736  000A7C  5E34               	subwf	??_echo+2,f,c
 12737  000A7E  5033               	movf	??_echo+1,w,c
 12738  000A80  5A35               	subwfb	??_echo+3,f,c
 12739  000A82  5063               	movf	_a+2,w,c
 12740  000A84  2434               	addwf	??_echo+2,w,c
 12741  000A86  6E3A               	movwf	_sum+2,c
 12742  000A88  5064               	movf	_a+3,w,c
 12743  000A8A  2035               	addwfc	??_echo+3,w,c
 12744  000A8C  6E3B               	movwf	_sum+3,c
 12745                           
 12746                           ;main.c: 139:             dist_final[1][5] = (sum[1]/5);
 12747  000A8E  C03A  F001         	movff	_sum+2,i2___awdiv@dividend
 12748  000A92  C03B  F002         	movff	_sum+3,i2___awdiv@dividend+1
 12749  000A96  0E00               	movlw	0
 12750  000A98  6E04               	movwf	i2___awdiv@divisor+1,c
 12751  000A9A  0E05               	movlw	5
 12752  000A9C  6E03               	movwf	i2___awdiv@divisor,c
 12753  000A9E  ECA4  F019         	call	i2___awdiv	;wreg free
 12754  000AA2  C001  F266         	movff	?i2___awdiv,_dist_final+22
 12755  000AA6  C002  F267         	movff	?i2___awdiv+1,_dist_final+23
 12756  000AAA                     i2l5424:
 12757                           
 12758                           ;main.c: 141:         dist_final[1][meas] = a[1];
 12759  000AAA  90D8               	bcf	status,0,c
 12760  000AAC  3450               	rlcf	_meas,w,c	;volatile
 12761  000AAE  6ED9               	movwf	fsr2l,c
 12762  000AB0  3451               	rlcf	_meas+1,w,c	;volatile
 12763  000AB2  6EDA               	movwf	fsr2h,c
 12764  000AB4  0E5C               	movlw	low (_dist_final+12)
 12765  000AB6  26D9               	addwf	fsr2l,f,c
 12766  000AB8  0E02               	movlw	high (_dist_final+12)
 12767  000ABA  22DA               	addwfc	fsr2h,f,c
 12768  000ABC  C063  FFDE         	movff	_a+2,postinc2
 12769  000AC0  C064  FFDD         	movff	_a+3,postdec2
 12770  000AC4                     i2l5426:
 12771                           
 12772                           ;main.c: 144:     if (b==3){
 12773  000AC4  0E03               	movlw	3
 12774  000AC6  185A               	xorwf	_b,w,c
 12775  000AC8  105B               	iorwf	_b+1,w,c
 12776  000ACA  A4D8               	btfss	status,2,c
 12777  000ACC  D0A4               	goto	i2l5460
 12778                           
 12779                           ;main.c: 145:         if (RB5 == 1){
 12780  000ACE  BA81               	btfsc	3969,5,c	;volatile
 12781                           
 12782                           ;main.c: 146:             TMR1ON = 1;
 12783  000AD0  80CD               	bsf	4045,0,c	;volatile
 12784                           
 12785                           ;main.c: 148:         if (RB5 == 0){
 12786                           
 12787                           ;main.c: 147:         }
 12788  000AD2  BA81               	btfsc	3969,5,c	;volatile
 12789  000AD4  D037               	goto	i2l5436
 12790                           
 12791                           ;main.c: 149:             TMR1ON = 0;
 12792  000AD6  90CD               	bcf	4045,0,c	;volatile
 12793                           
 12794                           ;main.c: 150:             a[2] = (TMR1L | (TMR1H<<8))/58.82;
 12795  000AD8  0EAE               	movlw	174
 12796  000ADA  6E13               	movwf	___fldiv@a,c
 12797  000ADC  0E47               	movlw	71
 12798  000ADE  6E14               	movwf	___fldiv@a+1,c
 12799  000AE0  0E6B               	movlw	107
 12800  000AE2  6E15               	movwf	___fldiv@a+2,c
 12801  000AE4  0E42               	movlw	66
 12802  000AE6  6E16               	movwf	___fldiv@a+3,c
 12803  000AE8  50CF               	movf	4047,w,c	;volatile
 12804  000AEA  6E33               	movwf	(??_echo+1)& (0+255),c
 12805  000AEC  6A32               	clrf	??_echo& (0+255),c
 12806  000AEE  50CE               	movf	4046,w,c	;volatile
 12807  000AF0  6E34               	movwf	(??_echo+2)& (0+255),c
 12808  000AF2  6A35               	clrf	(??_echo+3)& (0+255),c
 12809  000AF4  5032               	movf	??_echo,w,c
 12810  000AF6  1234               	iorwf	??_echo+2,f,c
 12811  000AF8  5033               	movf	??_echo+1,w,c
 12812  000AFA  1235               	iorwf	??_echo+3,f,c
 12813  000AFC  C034  F001         	movff	??_echo+2,___xxtofl@val
 12814  000B00  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 12815  000B04  0E00               	movlw	0
 12816  000B06  BE02               	btfsc	___xxtofl@val+1,7,c
 12817  000B08  0EFF               	movlw	-1
 12818  000B0A  6E03               	movwf	___xxtofl@val+2,c
 12819  000B0C  6E04               	movwf	___xxtofl@val+3,c
 12820  000B0E  0E01               	movlw	1
 12821  000B10  EC8B  F014         	call	___xxtofl
 12822  000B14  C001  F00F         	movff	?___xxtofl,___fldiv@b
 12823  000B18  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 12824  000B1C  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 12825  000B20  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 12826  000B24  ECA3  F00C         	call	___fldiv	;wreg free
 12827  000B28  C00F  F028         	movff	?___fldiv,___fltol@f1
 12828  000B2C  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 12829  000B30  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 12830  000B34  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 12831  000B38  ECE0  F017         	call	___fltol	;wreg free
 12832  000B3C  C028  F065         	movff	?___fltol,_a+4
 12833  000B40  C029  F066         	movff	?___fltol+1,_a+5
 12834  000B44                     i2l5436:
 12835                           
 12836                           ;main.c: 153:                 if (a[2]>=2 && a[2]<=200){
 12837  000B44  BE66               	btfsc	_a+5,7,c
 12838  000B46  D067               	goto	i2l5460
 12839  000B48  5066               	movf	_a+5,w,c
 12840  000B4A  E104               	bnz	i2u549_40
 12841  000B4C  0E02               	movlw	2
 12842  000B4E  5C65               	subwf	_a+4,w,c
 12843  000B50  A0D8               	btfss	status,0,c
 12844  000B52  D061               	goto	i2l5460
 12845  000B54                     i2u549_40:
 12846  000B54  BE66               	btfsc	_a+5,7,c
 12847  000B56  D006               	goto	i2u550_40
 12848  000B58  5066               	movf	_a+5,w,c
 12849  000B5A  E15D               	bnz	i2l5460
 12850  000B5C  0EC9               	movlw	201
 12851  000B5E  5C65               	subwf	_a+4,w,c
 12852  000B60  B0D8               	btfsc	status,0,c
 12853  000B62  D059               	goto	i2l5460
 12854  000B64                     i2u550_40:
 12855                           
 12856                           ;main.c: 155:                 if ((~sumf[2])&&(dist_final[2][0]!=0)&&(dist_final[2][1]!=
      +                          0)&&(dist_final[2][2]!=0)){
 12857  000B64  0442               	decf	_sumf+2,w,c
 12858  000B66  B4D8               	btfsc	status,2,c
 12859  000B68  D01B               	goto	i2l5452
 12860  000B6A  0102               	movlb	2	; () banked
 12861  000B6C  5168               	movf	(_dist_final+24)& (0+255),w,b
 12862  000B6E  1169               	iorwf	(_dist_final+25)& (0+255),w,b
 12863  000B70  B4D8               	btfsc	status,2,c
 12864  000B72  D016               	goto	i2l5452
 12865                           
 12866                           ; BSR set to: 2
 12867  000B74  516A               	movf	(_dist_final+26)& (0+255),w,b
 12868  000B76  116B               	iorwf	(_dist_final+27)& (0+255),w,b
 12869  000B78  B4D8               	btfsc	status,2,c
 12870  000B7A  D012               	goto	i2l5452
 12871                           
 12872                           ; BSR set to: 2
 12873  000B7C  516C               	movf	(_dist_final+28)& (0+255),w,b
 12874  000B7E  116D               	iorwf	(_dist_final+29)& (0+255),w,b
 12875  000B80  B4D8               	btfsc	status,2,c
 12876  000B82  D00E               	goto	i2l5452
 12877                           
 12878                           ; BSR set to: 2
 12879                           ;main.c: 156:             sum[2] = (dist_final[2][0]+dist_final[2][1]+dist_final[2][2]);
 12880  000B84  516A               	movf	(_dist_final+26)& (0+255),w,b
 12881  000B86  2568               	addwf	(_dist_final+24)& (0+255),w,b
 12882  000B88  6E32               	movwf	??_echo& (0+255),c
 12883  000B8A  516B               	movf	(_dist_final+27)& (0+255),w,b
 12884  000B8C  2169               	addwfc	(_dist_final+25)& (0+255),w,b
 12885  000B8E  6E33               	movwf	(??_echo+1)& (0+255),c
 12886  000B90  516C               	movf	(_dist_final+28)& (0+255),w,b
 12887  000B92  2432               	addwf	??_echo,w,c
 12888  000B94  6E3C               	movwf	_sum+4,c
 12889  000B96  516D               	movf	(_dist_final+29)& (0+255),w,b
 12890  000B98  2033               	addwfc	??_echo+1,w,c
 12891  000B9A  6E3D               	movwf	_sum+5,c
 12892                           
 12893                           ; BSR set to: 2
 12894                           ;main.c: 157:             sumf[2] = 1;
 12895  000B9C  0E01               	movlw	1
 12896  000B9E  6E42               	movwf	_sumf+2,c
 12897  000BA0                     i2l5452:
 12898                           
 12899                           ;main.c: 159:         if (sumf[2]){
 12900  000BA0  5042               	movf	_sumf+2,w,c
 12901  000BA2  B4D8               	btfsc	status,2,c
 12902  000BA4  D02B               	goto	i2l5458
 12903                           
 12904                           ;main.c: 160:             sum[2] = sum[2] - dist_final[2][meas] + a[2];
 12905  000BA6  90D8               	bcf	status,0,c
 12906  000BA8  3450               	rlcf	_meas,w,c	;volatile
 12907  000BAA  6ED9               	movwf	fsr2l,c
 12908  000BAC  3451               	rlcf	_meas+1,w,c	;volatile
 12909  000BAE  6EDA               	movwf	fsr2h,c
 12910  000BB0  0E68               	movlw	low (_dist_final+24)
 12911  000BB2  26D9               	addwf	fsr2l,f,c
 12912  000BB4  0E02               	movlw	high (_dist_final+24)
 12913  000BB6  22DA               	addwfc	fsr2h,f,c
 12914  000BB8  CFDE F032          	movff	postinc2,??_echo
 12915  000BBC  CFDD F033          	movff	postdec2,??_echo+1
 12916  000BC0  EE20  F03C         	lfsr	2,_sum+4
 12917  000BC4  CFDE F034          	movff	postinc2,??_echo+2
 12918  000BC8  CFDD F035          	movff	postdec2,??_echo+3
 12919  000BCC  5032               	movf	??_echo,w,c
 12920  000BCE  5E34               	subwf	??_echo+2,f,c
 12921  000BD0  5033               	movf	??_echo+1,w,c
 12922  000BD2  5A35               	subwfb	??_echo+3,f,c
 12923  000BD4  5065               	movf	_a+4,w,c
 12924  000BD6  2434               	addwf	??_echo+2,w,c
 12925  000BD8  6E3C               	movwf	_sum+4,c
 12926  000BDA  5066               	movf	_a+5,w,c
 12927  000BDC  2035               	addwfc	??_echo+3,w,c
 12928  000BDE  6E3D               	movwf	_sum+5,c
 12929                           
 12930                           ;main.c: 161:             dist_final[2][5] = (sum[2]/5);
 12931  000BE0  C03C  F001         	movff	_sum+4,i2___awdiv@dividend
 12932  000BE4  C03D  F002         	movff	_sum+5,i2___awdiv@dividend+1
 12933  000BE8  0E00               	movlw	0
 12934  000BEA  6E04               	movwf	i2___awdiv@divisor+1,c
 12935  000BEC  0E05               	movlw	5
 12936  000BEE  6E03               	movwf	i2___awdiv@divisor,c
 12937  000BF0  ECA4  F019         	call	i2___awdiv	;wreg free
 12938  000BF4  C001  F272         	movff	?i2___awdiv,_dist_final+34
 12939  000BF8  C002  F273         	movff	?i2___awdiv+1,_dist_final+35
 12940  000BFC                     i2l5458:
 12941                           
 12942                           ;main.c: 163:         dist_final[2][meas] = a[2];
 12943  000BFC  90D8               	bcf	status,0,c
 12944  000BFE  3450               	rlcf	_meas,w,c	;volatile
 12945  000C00  6ED9               	movwf	fsr2l,c
 12946  000C02  3451               	rlcf	_meas+1,w,c	;volatile
 12947  000C04  6EDA               	movwf	fsr2h,c
 12948  000C06  0E68               	movlw	low (_dist_final+24)
 12949  000C08  26D9               	addwf	fsr2l,f,c
 12950  000C0A  0E02               	movlw	high (_dist_final+24)
 12951  000C0C  22DA               	addwfc	fsr2h,f,c
 12952  000C0E  C065  FFDE         	movff	_a+4,postinc2
 12953  000C12  C066  FFDD         	movff	_a+5,postdec2
 12954  000C16                     i2l5460:
 12955                           
 12956                           ;main.c: 166:     if (b==4){
 12957  000C16  0E04               	movlw	4
 12958  000C18  185A               	xorwf	_b,w,c
 12959  000C1A  105B               	iorwf	_b+1,w,c
 12960  000C1C  A4D8               	btfss	status,2,c
 12961  000C1E  0012               	return	
 12962                           
 12963                           ;main.c: 167:         if (RB4 == 1){
 12964  000C20  B881               	btfsc	3969,4,c	;volatile
 12965                           
 12966                           ;main.c: 168:             TMR1ON = 1;
 12967  000C22  80CD               	bsf	4045,0,c	;volatile
 12968                           
 12969                           ;main.c: 170:         if (RB4 == 0){
 12970                           
 12971                           ;main.c: 169:         }
 12972  000C24  B881               	btfsc	3969,4,c	;volatile
 12973  000C26  D037               	goto	i2l5470
 12974                           
 12975                           ;main.c: 171:             TMR1ON = 0;
 12976  000C28  90CD               	bcf	4045,0,c	;volatile
 12977                           
 12978                           ;main.c: 172:             a[3] = (TMR1L | (TMR1H<<8))/58.82;
 12979  000C2A  0EAE               	movlw	174
 12980  000C2C  6E13               	movwf	___fldiv@a,c
 12981  000C2E  0E47               	movlw	71
 12982  000C30  6E14               	movwf	___fldiv@a+1,c
 12983  000C32  0E6B               	movlw	107
 12984  000C34  6E15               	movwf	___fldiv@a+2,c
 12985  000C36  0E42               	movlw	66
 12986  000C38  6E16               	movwf	___fldiv@a+3,c
 12987  000C3A  50CF               	movf	4047,w,c	;volatile
 12988  000C3C  6E33               	movwf	(??_echo+1)& (0+255),c
 12989  000C3E  6A32               	clrf	??_echo& (0+255),c
 12990  000C40  50CE               	movf	4046,w,c	;volatile
 12991  000C42  6E34               	movwf	(??_echo+2)& (0+255),c
 12992  000C44  6A35               	clrf	(??_echo+3)& (0+255),c
 12993  000C46  5032               	movf	??_echo,w,c
 12994  000C48  1234               	iorwf	??_echo+2,f,c
 12995  000C4A  5033               	movf	??_echo+1,w,c
 12996  000C4C  1235               	iorwf	??_echo+3,f,c
 12997  000C4E  C034  F001         	movff	??_echo+2,___xxtofl@val
 12998  000C52  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 12999  000C56  0E00               	movlw	0
 13000  000C58  BE02               	btfsc	___xxtofl@val+1,7,c
 13001  000C5A  0EFF               	movlw	-1
 13002  000C5C  6E03               	movwf	___xxtofl@val+2,c
 13003  000C5E  6E04               	movwf	___xxtofl@val+3,c
 13004  000C60  0E01               	movlw	1
 13005  000C62  EC8B  F014         	call	___xxtofl
 13006  000C66  C001  F00F         	movff	?___xxtofl,___fldiv@b
 13007  000C6A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 13008  000C6E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 13009  000C72  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 13010  000C76  ECA3  F00C         	call	___fldiv	;wreg free
 13011  000C7A  C00F  F028         	movff	?___fldiv,___fltol@f1
 13012  000C7E  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 13013  000C82  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 13014  000C86  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 13015  000C8A  ECE0  F017         	call	___fltol	;wreg free
 13016  000C8E  C028  F067         	movff	?___fltol,_a+6
 13017  000C92  C029  F068         	movff	?___fltol+1,_a+7
 13018  000C96                     i2l5470:
 13019                           
 13020                           ;main.c: 175:                 if (a[3]>=2 && a[3]<=200){
 13021  000C96  BE68               	btfsc	_a+7,7,c
 13022  000C98  0012               	return	
 13023  000C9A  5068               	movf	_a+7,w,c
 13024  000C9C  E104               	bnz	i2u559_40
 13025  000C9E  0E02               	movlw	2
 13026  000CA0  5C67               	subwf	_a+6,w,c
 13027  000CA2  A0D8               	btfss	status,0,c
 13028  000CA4  0012               	return	
 13029  000CA6                     i2u559_40:
 13030  000CA6  BE68               	btfsc	_a+7,7,c
 13031  000CA8  D006               	goto	i2u560_40
 13032  000CAA  5068               	movf	_a+7,w,c
 13033  000CAC  E15D               	bnz	i2l392
 13034  000CAE  0EC9               	movlw	201
 13035  000CB0  5C67               	subwf	_a+6,w,c
 13036  000CB2  B0D8               	btfsc	status,0,c
 13037  000CB4  0012               	return	
 13038  000CB6                     i2u560_40:
 13039                           
 13040                           ;main.c: 177:                 if ((~sumf[3])&&(dist_final[3][0]!=0)&&(dist_final[3][1]!=
      +                          0)&&(dist_final[3][2]!=0)){
 13041  000CB6  0443               	decf	_sumf+3,w,c
 13042  000CB8  B4D8               	btfsc	status,2,c
 13043  000CBA  D01B               	goto	i2l5486
 13044  000CBC  0102               	movlb	2	; () banked
 13045  000CBE  5174               	movf	(_dist_final+36)& (0+255),w,b
 13046  000CC0  1175               	iorwf	(_dist_final+37)& (0+255),w,b
 13047  000CC2  B4D8               	btfsc	status,2,c
 13048  000CC4  D016               	goto	i2l5486
 13049                           
 13050                           ; BSR set to: 2
 13051  000CC6  5176               	movf	(_dist_final+38)& (0+255),w,b
 13052  000CC8  1177               	iorwf	(_dist_final+39)& (0+255),w,b
 13053  000CCA  B4D8               	btfsc	status,2,c
 13054  000CCC  D012               	goto	i2l5486
 13055                           
 13056                           ; BSR set to: 2
 13057  000CCE  5178               	movf	(_dist_final+40)& (0+255),w,b
 13058  000CD0  1179               	iorwf	(_dist_final+41)& (0+255),w,b
 13059  000CD2  B4D8               	btfsc	status,2,c
 13060  000CD4  D00E               	goto	i2l5486
 13061                           
 13062                           ; BSR set to: 2
 13063                           ;main.c: 178:             sum[3] = (dist_final[3][0]+dist_final[3][1]+dist_final[3][2]);
 13064  000CD6  5176               	movf	(_dist_final+38)& (0+255),w,b
 13065  000CD8  2574               	addwf	(_dist_final+36)& (0+255),w,b
 13066  000CDA  6E32               	movwf	??_echo& (0+255),c
 13067  000CDC  5177               	movf	(_dist_final+39)& (0+255),w,b
 13068  000CDE  2175               	addwfc	(_dist_final+37)& (0+255),w,b
 13069  000CE0  6E33               	movwf	(??_echo+1)& (0+255),c
 13070  000CE2  5178               	movf	(_dist_final+40)& (0+255),w,b
 13071  000CE4  2432               	addwf	??_echo,w,c
 13072  000CE6  6E3E               	movwf	_sum+6,c
 13073  000CE8  5179               	movf	(_dist_final+41)& (0+255),w,b
 13074  000CEA  2033               	addwfc	??_echo+1,w,c
 13075  000CEC  6E3F               	movwf	_sum+7,c
 13076                           
 13077                           ; BSR set to: 2
 13078                           ;main.c: 179:             sumf[3] = 1;
 13079  000CEE  0E01               	movlw	1
 13080  000CF0  6E43               	movwf	_sumf+3,c
 13081  000CF2                     i2l5486:
 13082                           
 13083                           ;main.c: 181:         if (sumf[3]){
 13084  000CF2  5043               	movf	_sumf+3,w,c
 13085  000CF4  B4D8               	btfsc	status,2,c
 13086  000CF6  D02B               	goto	i2l5492
 13087                           
 13088                           ;main.c: 182:             sum[3] = sum[3] - dist_final[3][meas] + a[3];
 13089  000CF8  90D8               	bcf	status,0,c
 13090  000CFA  3450               	rlcf	_meas,w,c	;volatile
 13091  000CFC  6ED9               	movwf	fsr2l,c
 13092  000CFE  3451               	rlcf	_meas+1,w,c	;volatile
 13093  000D00  6EDA               	movwf	fsr2h,c
 13094  000D02  0E74               	movlw	low (_dist_final+36)
 13095  000D04  26D9               	addwf	fsr2l,f,c
 13096  000D06  0E02               	movlw	high (_dist_final+36)
 13097  000D08  22DA               	addwfc	fsr2h,f,c
 13098  000D0A  CFDE F032          	movff	postinc2,??_echo
 13099  000D0E  CFDD F033          	movff	postdec2,??_echo+1
 13100  000D12  EE20  F03E         	lfsr	2,_sum+6
 13101  000D16  CFDE F034          	movff	postinc2,??_echo+2
 13102  000D1A  CFDD F035          	movff	postdec2,??_echo+3
 13103  000D1E  5032               	movf	??_echo,w,c
 13104  000D20  5E34               	subwf	??_echo+2,f,c
 13105  000D22  5033               	movf	??_echo+1,w,c
 13106  000D24  5A35               	subwfb	??_echo+3,f,c
 13107  000D26  5067               	movf	_a+6,w,c
 13108  000D28  2434               	addwf	??_echo+2,w,c
 13109  000D2A  6E3E               	movwf	_sum+6,c
 13110  000D2C  5068               	movf	_a+7,w,c
 13111  000D2E  2035               	addwfc	??_echo+3,w,c
 13112  000D30  6E3F               	movwf	_sum+7,c
 13113                           
 13114                           ;main.c: 183:             dist_final[3][5] = (sum[3]/5);
 13115  000D32  C03E  F001         	movff	_sum+6,i2___awdiv@dividend
 13116  000D36  C03F  F002         	movff	_sum+7,i2___awdiv@dividend+1
 13117  000D3A  0E00               	movlw	0
 13118  000D3C  6E04               	movwf	i2___awdiv@divisor+1,c
 13119  000D3E  0E05               	movlw	5
 13120  000D40  6E03               	movwf	i2___awdiv@divisor,c
 13121  000D42  ECA4  F019         	call	i2___awdiv	;wreg free
 13122  000D46  C001  F27E         	movff	?i2___awdiv,_dist_final+46
 13123  000D4A  C002  F27F         	movff	?i2___awdiv+1,_dist_final+47
 13124  000D4E                     i2l5492:
 13125                           
 13126                           ;main.c: 185:         dist_final[3][meas] = a[3];
 13127  000D4E  90D8               	bcf	status,0,c
 13128  000D50  3450               	rlcf	_meas,w,c	;volatile
 13129  000D52  6ED9               	movwf	fsr2l,c
 13130  000D54  3451               	rlcf	_meas+1,w,c	;volatile
 13131  000D56  6EDA               	movwf	fsr2h,c
 13132  000D58  0E74               	movlw	low (_dist_final+36)
 13133  000D5A  26D9               	addwf	fsr2l,f,c
 13134  000D5C  0E02               	movlw	high (_dist_final+36)
 13135  000D5E  22DA               	addwfc	fsr2h,f,c
 13136  000D60  C067  FFDE         	movff	_a+6,postinc2
 13137  000D64  C068  FFDD         	movff	_a+7,postdec2
 13138  000D68                     i2l392:
 13139  000D68  0012               	return		;funcret
 13140  000D6A                     __end_of_echo:
 13141                           	opt callstack 0
 13142                           
 13143 ;; *************** function i2___awdiv *****************
 13144 ;; Defined at:
 13145 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
 13146 ;; Parameters:    Size  Location     Type
 13147 ;;  dividend        2    0[COMRAM] int 
 13148 ;;  divisor         2    2[COMRAM] int 
 13149 ;; Auto vars:     Size  Location     Type
 13150 ;;  __awdiv         2    6[COMRAM] int 
 13151 ;;  __awdiv         1    5[COMRAM] unsigned char 
 13152 ;;  __awdiv         1    4[COMRAM] unsigned char 
 13153 ;; Return value:  Size  Location     Type
 13154 ;;                  2    0[COMRAM] int 
 13155 ;; Registers used:
 13156 ;;		wreg, status,2, status,0
 13157 ;; Tracked objects:
 13158 ;;		On entry : 0/0
 13159 ;;		On exit  : 0/0
 13160 ;;		Unchanged: 0/0
 13161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13162 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13163 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13165 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13166 ;;Total ram usage:        8 bytes
 13167 ;; Hardware stack levels used:    1
 13168 ;; This function calls:
 13169 ;;		Nothing
 13170 ;; This function is called by:
 13171 ;;		_echo
 13172 ;; This function uses a non-reentrant model
 13173 ;;
 13174                           
 13175                           	psect	text56
 13176  003348                     __ptext56:
 13177                           	opt callstack 0
 13178  003348                     i2___awdiv:
 13179                           	opt callstack 14
 13180                           
 13181                           ;incstack = 0
 13182  003348  0E00               	movlw	0
 13183  00334A  6E06               	movwf	i2___awdiv@sign,c
 13184  00334C  AE04               	btfss	i2___awdiv@divisor+1,7,c
 13185  00334E  D006               	goto	i2l5228
 13186  003350  6C03               	negf	i2___awdiv@divisor,c
 13187  003352  1E04               	comf	i2___awdiv@divisor+1,f,c
 13188  003354  B0D8               	btfsc	status,0,c
 13189  003356  2A04               	incf	i2___awdiv@divisor+1,f,c
 13190  003358  0E01               	movlw	1
 13191  00335A  6E06               	movwf	i2___awdiv@sign,c
 13192  00335C                     i2l5228:
 13193  00335C  AE02               	btfss	i2___awdiv@dividend+1,7,c
 13194  00335E  D006               	goto	i2l5234
 13195  003360  6C01               	negf	i2___awdiv@dividend,c
 13196  003362  1E02               	comf	i2___awdiv@dividend+1,f,c
 13197  003364  B0D8               	btfsc	status,0,c
 13198  003366  2A02               	incf	i2___awdiv@dividend+1,f,c
 13199  003368  0E01               	movlw	1
 13200  00336A  1A06               	xorwf	i2___awdiv@sign,f,c
 13201  00336C                     i2l5234:
 13202  00336C  0E00               	movlw	0
 13203  00336E  6E08               	movwf	i2___awdiv@quotient+1,c
 13204  003370  0E00               	movlw	0
 13205  003372  6E07               	movwf	i2___awdiv@quotient,c
 13206  003374  5003               	movf	i2___awdiv@divisor,w,c
 13207  003376  1004               	iorwf	i2___awdiv@divisor+1,w,c
 13208  003378  B4D8               	btfsc	status,2,c
 13209  00337A  D01C               	goto	i2l5256
 13210  00337C  0E01               	movlw	1
 13211  00337E  6E05               	movwf	i2___awdiv@counter,c
 13212  003380  D004               	goto	i2l5242
 13213  003382                     i2l5240:
 13214  003382  90D8               	bcf	status,0,c
 13215  003384  3603               	rlcf	i2___awdiv@divisor,f,c
 13216  003386  3604               	rlcf	i2___awdiv@divisor+1,f,c
 13217  003388  2A05               	incf	i2___awdiv@counter,f,c
 13218  00338A                     i2l5242:
 13219  00338A  AE04               	btfss	i2___awdiv@divisor+1,7,c
 13220  00338C  D7FA               	goto	i2l5240
 13221  00338E                     i2u521_40:
 13222  00338E  90D8               	bcf	status,0,c
 13223  003390  3607               	rlcf	i2___awdiv@quotient,f,c
 13224  003392  3608               	rlcf	i2___awdiv@quotient+1,f,c
 13225  003394  5003               	movf	i2___awdiv@divisor,w,c
 13226  003396  5C01               	subwf	i2___awdiv@dividend,w,c
 13227  003398  5004               	movf	i2___awdiv@divisor+1,w,c
 13228  00339A  5802               	subwfb	i2___awdiv@dividend+1,w,c
 13229  00339C  A0D8               	btfss	status,0,c
 13230  00339E  D005               	goto	i2l5252
 13231  0033A0  5003               	movf	i2___awdiv@divisor,w,c
 13232  0033A2  5E01               	subwf	i2___awdiv@dividend,f,c
 13233  0033A4  5004               	movf	i2___awdiv@divisor+1,w,c
 13234  0033A6  5A02               	subwfb	i2___awdiv@dividend+1,f,c
 13235  0033A8  8007               	bsf	i2___awdiv@quotient,0,c
 13236  0033AA                     i2l5252:
 13237  0033AA  90D8               	bcf	status,0,c
 13238  0033AC  3204               	rrcf	i2___awdiv@divisor+1,f,c
 13239  0033AE  3203               	rrcf	i2___awdiv@divisor,f,c
 13240  0033B0  2E05               	decfsz	i2___awdiv@counter,f,c
 13241  0033B2  D7ED               	goto	i2u521_40
 13242  0033B4                     i2l5256:
 13243  0033B4  5006               	movf	i2___awdiv@sign,w,c
 13244  0033B6  B4D8               	btfsc	status,2,c
 13245  0033B8  D004               	goto	i2l5260
 13246  0033BA  6C07               	negf	i2___awdiv@quotient,c
 13247  0033BC  1E08               	comf	i2___awdiv@quotient+1,f,c
 13248  0033BE  B0D8               	btfsc	status,0,c
 13249  0033C0  2A08               	incf	i2___awdiv@quotient+1,f,c
 13250  0033C2                     i2l5260:
 13251  0033C2  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
 13252  0033C6  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 13253  0033CA  0012               	return		;funcret
 13254  0033CC                     __end_ofi2___awdiv:
 13255                           	opt callstack 0
 13256                           
 13257 ;; *************** function ___xxtofl *****************
 13258 ;; Defined at:
 13259 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 13260 ;; Parameters:    Size  Location     Type
 13261 ;;  sign            1    wreg     unsigned char 
 13262 ;;  val             4    0[COMRAM] long 
 13263 ;; Auto vars:     Size  Location     Type
 13264 ;;  sign            1    8[COMRAM] unsigned char 
 13265 ;;  arg             4   10[COMRAM] unsigned long 
 13266 ;;  exp             1    9[COMRAM] unsigned char 
 13267 ;; Return value:  Size  Location     Type
 13268 ;;                  4    0[COMRAM] unsigned char 
 13269 ;; Registers used:
 13270 ;;		wreg, status,2, status,0
 13271 ;; Tracked objects:
 13272 ;;		On entry : 0/0
 13273 ;;		On exit  : 0/0
 13274 ;;		Unchanged: 0/0
 13275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13276 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13277 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13278 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13279 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13280 ;;Total ram usage:       14 bytes
 13281 ;; Hardware stack levels used:    1
 13282 ;; This function calls:
 13283 ;;		Nothing
 13284 ;; This function is called by:
 13285 ;;		_echo
 13286 ;; This function uses a non-reentrant model
 13287 ;;
 13288                           
 13289                           	psect	text57
 13290  002916                     __ptext57:
 13291                           	opt callstack 0
 13292  002916                     ___xxtofl:
 13293                           	opt callstack 14
 13294                           
 13295                           ;incstack = 0
 13296                           ;___xxtofl@sign stored from wreg
 13297  002916  6E09               	movwf	___xxtofl@sign,c
 13298  002918  5009               	movf	___xxtofl@sign,w,c
 13299  00291A  A4D8               	btfss	status,2,c
 13300  00291C  AE04               	btfss	___xxtofl@val+3,7,c
 13301  00291E  D01A               	goto	i2l1342
 13302  002920  C001  F005         	movff	___xxtofl@val,??___xxtofl
 13303  002924  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 13304  002928  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 13305  00292C  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 13306  002930  1E05               	comf	??___xxtofl,f,c
 13307  002932  1E06               	comf	??___xxtofl+1,f,c
 13308  002934  1E07               	comf	??___xxtofl+2,f,c
 13309  002936  1E08               	comf	??___xxtofl+3,f,c
 13310  002938  2A05               	incf	??___xxtofl,f,c
 13311  00293A  0E00               	movlw	0
 13312  00293C  2206               	addwfc	??___xxtofl+1,f,c
 13313  00293E  2207               	addwfc	??___xxtofl+2,f,c
 13314  002940  2208               	addwfc	??___xxtofl+3,f,c
 13315  002942  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 13316  002946  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 13317  00294A  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 13318  00294E  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 13319  002952  D008               	goto	i2l5180
 13320  002954                     i2l1342:
 13321  002954  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 13322  002958  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 13323  00295C  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 13324  002960  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 13325  002964                     i2l5180:
 13326  002964  5001               	movf	___xxtofl@val,w,c
 13327  002966  1002               	iorwf	___xxtofl@val+1,w,c
 13328  002968  1003               	iorwf	___xxtofl@val+2,w,c
 13329  00296A  1004               	iorwf	___xxtofl@val+3,w,c
 13330  00296C  A4D8               	btfss	status,2,c
 13331  00296E  D009               	goto	i2l5186
 13332  002970  0E00               	movlw	0
 13333  002972  6E01               	movwf	?___xxtofl,c
 13334  002974  0E00               	movlw	0
 13335  002976  6E02               	movwf	?___xxtofl+1,c
 13336  002978  0E00               	movlw	0
 13337  00297A  6E03               	movwf	?___xxtofl+2,c
 13338  00297C  0E00               	movlw	0
 13339  00297E  6E04               	movwf	?___xxtofl+3,c
 13340  002980  0012               	return	
 13341  002982                     i2l5186:
 13342  002982  0E96               	movlw	150
 13343  002984  6E0A               	movwf	___xxtofl@exp,c
 13344  002986  D006               	goto	i2l5190
 13345  002988                     i2l5188:
 13346  002988  2A0A               	incf	___xxtofl@exp,f,c
 13347  00298A  90D8               	bcf	status,0,c
 13348  00298C  320E               	rrcf	___xxtofl@arg+3,f,c
 13349  00298E  320D               	rrcf	___xxtofl@arg+2,f,c
 13350  002990  320C               	rrcf	___xxtofl@arg+1,f,c
 13351  002992  320B               	rrcf	___xxtofl@arg,f,c
 13352  002994                     i2l5190:
 13353  002994  0E00               	movlw	0
 13354  002996  140B               	andwf	___xxtofl@arg,w,c
 13355  002998  6E05               	movwf	??___xxtofl& (0+255),c
 13356  00299A  0E00               	movlw	0
 13357  00299C  140C               	andwf	___xxtofl@arg+1,w,c
 13358  00299E  6E06               	movwf	(??___xxtofl+1)& (0+255),c
 13359  0029A0  0E00               	movlw	0
 13360  0029A2  140D               	andwf	___xxtofl@arg+2,w,c
 13361  0029A4  6E07               	movwf	(??___xxtofl+2)& (0+255),c
 13362  0029A6  0EFE               	movlw	254
 13363  0029A8  140E               	andwf	___xxtofl@arg+3,w,c
 13364  0029AA  6E08               	movwf	(??___xxtofl+3)& (0+255),c
 13365  0029AC  5005               	movf	??___xxtofl,w,c
 13366  0029AE  1006               	iorwf	??___xxtofl+1,w,c
 13367  0029B0  1007               	iorwf	??___xxtofl+2,w,c
 13368  0029B2  1008               	iorwf	??___xxtofl+3,w,c
 13369  0029B4  B4D8               	btfsc	status,2,c
 13370  0029B6  D00D               	goto	i2l1349
 13371  0029B8  D7E7               	goto	i2l5188
 13372  0029BA                     i2l5192:
 13373  0029BA  2A0A               	incf	___xxtofl@exp,f,c
 13374  0029BC  0E01               	movlw	1
 13375  0029BE  260B               	addwf	___xxtofl@arg,f,c
 13376  0029C0  0E00               	movlw	0
 13377  0029C2  220C               	addwfc	___xxtofl@arg+1,f,c
 13378  0029C4  220D               	addwfc	___xxtofl@arg+2,f,c
 13379  0029C6  220E               	addwfc	___xxtofl@arg+3,f,c
 13380  0029C8  90D8               	bcf	status,0,c
 13381  0029CA  320E               	rrcf	___xxtofl@arg+3,f,c
 13382  0029CC  320D               	rrcf	___xxtofl@arg+2,f,c
 13383  0029CE  320C               	rrcf	___xxtofl@arg+1,f,c
 13384  0029D0  320B               	rrcf	___xxtofl@arg,f,c
 13385  0029D2                     i2l1349:
 13386  0029D2  0E00               	movlw	0
 13387  0029D4  140B               	andwf	___xxtofl@arg,w,c
 13388  0029D6  6E05               	movwf	??___xxtofl& (0+255),c
 13389  0029D8  0E00               	movlw	0
 13390  0029DA  140C               	andwf	___xxtofl@arg+1,w,c
 13391  0029DC  6E06               	movwf	(??___xxtofl+1)& (0+255),c
 13392  0029DE  0E00               	movlw	0
 13393  0029E0  140D               	andwf	___xxtofl@arg+2,w,c
 13394  0029E2  6E07               	movwf	(??___xxtofl+2)& (0+255),c
 13395  0029E4  0EFF               	movlw	255
 13396  0029E6  140E               	andwf	___xxtofl@arg+3,w,c
 13397  0029E8  6E08               	movwf	(??___xxtofl+3)& (0+255),c
 13398  0029EA  5005               	movf	??___xxtofl,w,c
 13399  0029EC  1006               	iorwf	??___xxtofl+1,w,c
 13400  0029EE  1007               	iorwf	??___xxtofl+2,w,c
 13401  0029F0  1008               	iorwf	??___xxtofl+3,w,c
 13402  0029F2  B4D8               	btfsc	status,2,c
 13403  0029F4  D007               	goto	i2l5200
 13404  0029F6  D7E1               	goto	i2l5192
 13405  0029F8                     i2l5198:
 13406  0029F8  060A               	decf	___xxtofl@exp,f,c
 13407  0029FA  90D8               	bcf	status,0,c
 13408  0029FC  360B               	rlcf	___xxtofl@arg,f,c
 13409  0029FE  360C               	rlcf	___xxtofl@arg+1,f,c
 13410  002A00  360D               	rlcf	___xxtofl@arg+2,f,c
 13411  002A02  360E               	rlcf	___xxtofl@arg+3,f,c
 13412  002A04                     i2l5200:
 13413  002A04  BE0D               	btfsc	___xxtofl@arg+2,7,c
 13414  002A06  D003               	goto	i2u514_40
 13415  002A08  0E02               	movlw	2
 13416  002A0A  600A               	cpfslt	___xxtofl@exp,c
 13417  002A0C  D7F5               	goto	i2l5198
 13418  002A0E                     i2u514_40:
 13419  002A0E  A00A               	btfss	___xxtofl@exp,0,c
 13420  002A10  9E0D               	bcf	___xxtofl@arg+2,7,c
 13421  002A12  90D8               	bcf	status,0,c
 13422  002A14  320A               	rrcf	___xxtofl@exp,f,c
 13423  002A16  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 13424  002A1A  6A06               	clrf	(??___xxtofl+1)& (0+255),c
 13425  002A1C  6A07               	clrf	(??___xxtofl+2)& (0+255),c
 13426  002A1E  6A08               	clrf	(??___xxtofl+3)& (0+255),c
 13427  002A20  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 13428  002A24  6A07               	clrf	??___xxtofl+2,c
 13429  002A26  6A06               	clrf	??___xxtofl+1,c
 13430  002A28  6A05               	clrf	??___xxtofl,c
 13431  002A2A  5005               	movf	??___xxtofl,w,c
 13432  002A2C  120B               	iorwf	___xxtofl@arg,f,c
 13433  002A2E  5006               	movf	??___xxtofl+1,w,c
 13434  002A30  120C               	iorwf	___xxtofl@arg+1,f,c
 13435  002A32  5007               	movf	??___xxtofl+2,w,c
 13436  002A34  120D               	iorwf	___xxtofl@arg+2,f,c
 13437  002A36  5008               	movf	??___xxtofl+3,w,c
 13438  002A38  120E               	iorwf	___xxtofl@arg+3,f,c
 13439  002A3A  5009               	movf	___xxtofl@sign,w,c
 13440  002A3C  A4D8               	btfss	status,2,c
 13441  002A3E  AE04               	btfss	___xxtofl@val+3,7,c
 13442  002A40  D001               	goto	i2l5216
 13443  002A42  8E0E               	bsf	___xxtofl@arg+3,7,c
 13444  002A44                     i2l5216:
 13445  002A44  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 13446  002A48  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 13447  002A4C  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 13448  002A50  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 13449  002A54  0012               	return		;funcret
 13450  002A56                     __end_of___xxtofl:
 13451                           	opt callstack 0
 13452                           
 13453 ;; *************** function ___fltol *****************
 13454 ;; Defined at:
 13455 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 13456 ;; Parameters:    Size  Location     Type
 13457 ;;  f1              4   39[COMRAM] unsigned char 
 13458 ;; Auto vars:     Size  Location     Type
 13459 ;;  exp1            1   48[COMRAM] unsigned char 
 13460 ;;  sign1           1   47[COMRAM] unsigned char 
 13461 ;; Return value:  Size  Location     Type
 13462 ;;                  4   39[COMRAM] long 
 13463 ;; Registers used:
 13464 ;;		wreg, status,2, status,0
 13465 ;; Tracked objects:
 13466 ;;		On entry : 0/0
 13467 ;;		On exit  : 0/0
 13468 ;;		Unchanged: 0/0
 13469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13470 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13471 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13472 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13473 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13474 ;;Total ram usage:       10 bytes
 13475 ;; Hardware stack levels used:    1
 13476 ;; This function calls:
 13477 ;;		Nothing
 13478 ;; This function is called by:
 13479 ;;		_echo
 13480 ;; This function uses a non-reentrant model
 13481 ;;
 13482                           
 13483                           	psect	text58
 13484  002FC0                     __ptext58:
 13485                           	opt callstack 0
 13486  002FC0                     ___fltol:
 13487                           	opt callstack 14
 13488                           
 13489                           ;incstack = 0
 13490  002FC0  342A               	rlcf	___fltol@f1+2,w,c
 13491  002FC2  342B               	rlcf	___fltol@f1+3,w,c
 13492  002FC4  6E31               	movwf	___fltol@exp1,c
 13493  002FC6  5031               	movf	___fltol@exp1,w,c
 13494  002FC8  A4D8               	btfss	status,2,c
 13495  002FCA  D009               	goto	i2l5120
 13496  002FCC                     i2u498_40:
 13497  002FCC  0E00               	movlw	0
 13498  002FCE  6E28               	movwf	?___fltol,c
 13499  002FD0  0E00               	movlw	0
 13500  002FD2  6E29               	movwf	?___fltol+1,c
 13501  002FD4  0E00               	movlw	0
 13502  002FD6  6E2A               	movwf	?___fltol+2,c
 13503  002FD8  0E00               	movlw	0
 13504  002FDA  6E2B               	movwf	?___fltol+3,c
 13505  002FDC  0012               	return	
 13506  002FDE                     i2l5120:
 13507  002FDE  C028  F02C         	movff	___fltol@f1,??___fltol
 13508  002FE2  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
 13509  002FE6  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
 13510  002FEA  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
 13511  002FEE  0E20               	movlw	32
 13512  002FF0  D005               	goto	i2u499_40
 13513  002FF2                     i2u499_45:
 13514  002FF2  90D8               	bcf	status,0,c
 13515  002FF4  322F               	rrcf	??___fltol+3,f,c
 13516  002FF6  322E               	rrcf	??___fltol+2,f,c
 13517  002FF8  322D               	rrcf	??___fltol+1,f,c
 13518  002FFA  322C               	rrcf	??___fltol,f,c
 13519  002FFC                     i2u499_40:
 13520  002FFC  2EE8               	decfsz	wreg,f,c
 13521  002FFE  D7F9               	goto	i2u499_45
 13522  003000  502C               	movf	??___fltol,w,c
 13523  003002  6E30               	movwf	___fltol@sign1,c
 13524  003004  8E2A               	bsf	___fltol@f1+2,7,c
 13525  003006  0EFF               	movlw	255
 13526  003008  1628               	andwf	___fltol@f1,f,c
 13527  00300A  0EFF               	movlw	255
 13528  00300C  1629               	andwf	___fltol@f1+1,f,c
 13529  00300E  0EFF               	movlw	255
 13530  003010  162A               	andwf	___fltol@f1+2,f,c
 13531  003012  0E00               	movlw	0
 13532  003014  162B               	andwf	___fltol@f1+3,f,c
 13533  003016  0E96               	movlw	150
 13534  003018  5E31               	subwf	___fltol@exp1,f,c
 13535  00301A  AE31               	btfss	___fltol@exp1,7,c
 13536  00301C  D00D               	goto	i2l5140
 13537  00301E  5031               	movf	___fltol@exp1,w,c
 13538  003020  0A80               	xorlw	128
 13539  003022  0F97               	addlw	151
 13540  003024  A0D8               	btfss	status,0,c
 13541  003026  D7D2               	goto	i2u498_40
 13542  003028                     i2l5136:
 13543  003028  90D8               	bcf	status,0,c
 13544  00302A  322B               	rrcf	___fltol@f1+3,f,c
 13545  00302C  322A               	rrcf	___fltol@f1+2,f,c
 13546  00302E  3229               	rrcf	___fltol@f1+1,f,c
 13547  003030  3228               	rrcf	___fltol@f1,f,c
 13548  003032  3E31               	incfsz	___fltol@exp1,f,c
 13549  003034  D7F9               	goto	i2l5136
 13550  003036  D00D               	goto	i2u503_40
 13551  003038                     i2l5140:
 13552  003038  0E1F               	movlw	31
 13553  00303A  6431               	cpfsgt	___fltol@exp1,c
 13554  00303C  D007               	goto	i2l5148
 13555  00303E  D7C6               	goto	i2u498_40
 13556  003040                     i2l5146:
 13557  003040  90D8               	bcf	status,0,c
 13558  003042  3628               	rlcf	___fltol@f1,f,c
 13559  003044  3629               	rlcf	___fltol@f1+1,f,c
 13560  003046  362A               	rlcf	___fltol@f1+2,f,c
 13561  003048  362B               	rlcf	___fltol@f1+3,f,c
 13562  00304A  0631               	decf	___fltol@exp1,f,c
 13563  00304C                     i2l5148:
 13564  00304C  5031               	movf	___fltol@exp1,w,c
 13565  00304E  A4D8               	btfss	status,2,c
 13566  003050  D7F7               	goto	i2l5146
 13567  003052                     i2u503_40:
 13568  003052  5030               	movf	___fltol@sign1,w,c
 13569  003054  B4D8               	btfsc	status,2,c
 13570  003056  D008               	goto	i2l5154
 13571  003058  1E2B               	comf	___fltol@f1+3,f,c
 13572  00305A  1E2A               	comf	___fltol@f1+2,f,c
 13573  00305C  1E29               	comf	___fltol@f1+1,f,c
 13574  00305E  6C28               	negf	___fltol@f1,c
 13575  003060  0E00               	movlw	0
 13576  003062  2229               	addwfc	___fltol@f1+1,f,c
 13577  003064  222A               	addwfc	___fltol@f1+2,f,c
 13578  003066  222B               	addwfc	___fltol@f1+3,f,c
 13579  003068                     i2l5154:
 13580  003068  C028  F028         	movff	___fltol@f1,?___fltol
 13581  00306C  C029  F029         	movff	___fltol@f1+1,?___fltol+1
 13582  003070  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
 13583  003074  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
 13584  003078  0012               	return		;funcret
 13585  00307A                     __end_of___fltol:
 13586                           	opt callstack 0
 13587                           
 13588 ;; *************** function ___fldiv *****************
 13589 ;; Defined at:
 13590 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 13591 ;; Parameters:    Size  Location     Type
 13592 ;;  b               4   14[COMRAM] long 
 13593 ;;  a               4   18[COMRAM] long 
 13594 ;; Auto vars:     Size  Location     Type
 13595 ;;  grs             4   33[COMRAM] unsigned long 
 13596 ;;  rem             4   26[COMRAM] unsigned long 
 13597 ;;  new_exp         2   31[COMRAM] short 
 13598 ;;  aexp            1   38[COMRAM] unsigned char 
 13599 ;;  bexp            1   37[COMRAM] unsigned char 
 13600 ;;  sign            1   30[COMRAM] unsigned char 
 13601 ;; Return value:  Size  Location     Type
 13602 ;;                  4   14[COMRAM] unsigned char 
 13603 ;; Registers used:
 13604 ;;		wreg, status,2, status,0
 13605 ;; Tracked objects:
 13606 ;;		On entry : 0/0
 13607 ;;		On exit  : 0/0
 13608 ;;		Unchanged: 0/0
 13609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13610 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13611 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13612 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13613 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13614 ;;Total ram usage:       25 bytes
 13615 ;; Hardware stack levels used:    1
 13616 ;; This function calls:
 13617 ;;		Nothing
 13618 ;; This function is called by:
 13619 ;;		_echo
 13620 ;; This function uses a non-reentrant model
 13621 ;;
 13622                           
 13623                           	psect	text59
 13624  001946                     __ptext59:
 13625                           	opt callstack 0
 13626  001946                     ___fldiv:
 13627                           	opt callstack 14
 13628                           
 13629                           ;incstack = 0
 13630  001946  5012               	movf	___fldiv@b+3,w,c
 13631  001948  0B80               	andlw	128
 13632  00194A  6E1F               	movwf	___fldiv@sign,c
 13633  00194C  5012               	movf	___fldiv@b+3,w,c
 13634  00194E  2412               	addwf	___fldiv@b+3,w,c
 13635  001950  6E26               	movwf	___fldiv@bexp,c
 13636  001952  BE11               	btfsc	___fldiv@b+2,7,c
 13637  001954  8026               	bsf	___fldiv@bexp,0,c
 13638  001956  5026               	movf	___fldiv@bexp,w,c
 13639  001958  B4D8               	btfsc	status,2,c
 13640  00195A  D00D               	goto	i2l4948
 13641  00195C  2826               	incf	___fldiv@bexp,w,c
 13642  00195E  A4D8               	btfss	status,2,c
 13643  001960  D008               	goto	i2l4944
 13644  001962  0E00               	movlw	0
 13645  001964  6E0F               	movwf	___fldiv@b,c
 13646  001966  0E00               	movlw	0
 13647  001968  6E10               	movwf	___fldiv@b+1,c
 13648  00196A  0E00               	movlw	0
 13649  00196C  6E11               	movwf	___fldiv@b+2,c
 13650  00196E  0E00               	movlw	0
 13651  001970  6E12               	movwf	___fldiv@b+3,c
 13652  001972                     i2l4944:
 13653  001972  8E11               	bsf	___fldiv@b+2,7,c
 13654  001974  D006               	goto	L6
 13655  001976                     i2l4948:
 13656  001976  0E00               	movlw	0
 13657  001978  6E0F               	movwf	___fldiv@b,c
 13658  00197A  0E00               	movlw	0
 13659  00197C  6E10               	movwf	___fldiv@b+1,c
 13660  00197E  0E00               	movlw	0
 13661  001980  6E11               	movwf	___fldiv@b+2,c
 13662  001982                     L6:
 13663  001982  0E00               	movlw	0
 13664  001984  6E12               	movwf	___fldiv@b+3,c
 13665  001986  5016               	movf	___fldiv@a+3,w,c
 13666  001988  0B80               	andlw	128
 13667  00198A  1A1F               	xorwf	___fldiv@sign,f,c
 13668  00198C  5016               	movf	___fldiv@a+3,w,c
 13669  00198E  2416               	addwf	___fldiv@a+3,w,c
 13670  001990  6E27               	movwf	___fldiv@aexp,c
 13671  001992  BE15               	btfsc	___fldiv@a+2,7,c
 13672  001994  8027               	bsf	___fldiv@aexp,0,c
 13673  001996  5027               	movf	___fldiv@aexp,w,c
 13674  001998  B4D8               	btfsc	status,2,c
 13675  00199A  D00D               	goto	i2l4968
 13676  00199C  2827               	incf	___fldiv@aexp,w,c
 13677  00199E  A4D8               	btfss	status,2,c
 13678  0019A0  D008               	goto	i2l4964
 13679  0019A2  0E00               	movlw	0
 13680  0019A4  6E13               	movwf	___fldiv@a,c
 13681  0019A6  0E00               	movlw	0
 13682  0019A8  6E14               	movwf	___fldiv@a+1,c
 13683  0019AA  0E00               	movlw	0
 13684  0019AC  6E15               	movwf	___fldiv@a+2,c
 13685  0019AE  0E00               	movlw	0
 13686  0019B0  6E16               	movwf	___fldiv@a+3,c
 13687  0019B2                     i2l4964:
 13688  0019B2  8E15               	bsf	___fldiv@a+2,7,c
 13689  0019B4  D006               	goto	L7
 13690  0019B6                     i2l4968:
 13691  0019B6  0E00               	movlw	0
 13692  0019B8  6E13               	movwf	___fldiv@a,c
 13693  0019BA  0E00               	movlw	0
 13694  0019BC  6E14               	movwf	___fldiv@a+1,c
 13695  0019BE  0E00               	movlw	0
 13696  0019C0  6E15               	movwf	___fldiv@a+2,c
 13697  0019C2                     L7:
 13698  0019C2  0E00               	movlw	0
 13699  0019C4  6E16               	movwf	___fldiv@a+3,c
 13700  0019C6  5013               	movf	___fldiv@a,w,c
 13701  0019C8  1014               	iorwf	___fldiv@a+1,w,c
 13702  0019CA  1015               	iorwf	___fldiv@a+2,w,c
 13703  0019CC  1016               	iorwf	___fldiv@a+3,w,c
 13704  0019CE  A4D8               	btfss	status,2,c
 13705  0019D0  D017               	goto	i2l4982
 13706  0019D2  0E00               	movlw	0
 13707  0019D4  6E0F               	movwf	___fldiv@b,c
 13708  0019D6  0E00               	movlw	0
 13709  0019D8  6E10               	movwf	___fldiv@b+1,c
 13710  0019DA  0E00               	movlw	0
 13711  0019DC  6E11               	movwf	___fldiv@b+2,c
 13712  0019DE  0E00               	movlw	0
 13713  0019E0  6E12               	movwf	___fldiv@b+3,c
 13714  0019E2  0E80               	movlw	128
 13715  0019E4  1211               	iorwf	___fldiv@b+2,f,c
 13716  0019E6  0E7F               	movlw	127
 13717  0019E8  1212               	iorwf	___fldiv@b+3,f,c
 13718  0019EA                     i2l4976:
 13719  0019EA  501F               	movf	___fldiv@sign,w,c
 13720  0019EC  1212               	iorwf	___fldiv@b+3,f,c
 13721  0019EE  C00F  F00F         	movff	___fldiv@b,?___fldiv
 13722  0019F2  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
 13723  0019F6  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
 13724  0019FA  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
 13725  0019FE  0012               	return	
 13726  001A00                     i2l4982:
 13727  001A00  5026               	movf	___fldiv@bexp,w,c
 13728  001A02  A4D8               	btfss	status,2,c
 13729  001A04  D009               	goto	i2l4990
 13730  001A06  0E00               	movlw	0
 13731  001A08  6E0F               	movwf	?___fldiv,c
 13732  001A0A  0E00               	movlw	0
 13733  001A0C  6E10               	movwf	?___fldiv+1,c
 13734  001A0E  0E00               	movlw	0
 13735  001A10  6E11               	movwf	?___fldiv+2,c
 13736  001A12  0E00               	movlw	0
 13737  001A14  6E12               	movwf	?___fldiv+3,c
 13738  001A16  0012               	return	
 13739  001A18                     i2l4990:
 13740  001A18  5027               	movf	___fldiv@aexp,w,c
 13741  001A1A  C026  F017         	movff	___fldiv@bexp,??___fldiv
 13742  001A1E  6A18               	clrf	(??___fldiv+1)& (0+255),c
 13743  001A20  5E17               	subwf	??___fldiv,f,c
 13744  001A22  0E00               	movlw	0
 13745  001A24  5A18               	subwfb	??___fldiv+1,f,c
 13746  001A26  0E7F               	movlw	127
 13747  001A28  2417               	addwf	??___fldiv,w,c
 13748  001A2A  6E20               	movwf	___fldiv@new_exp,c
 13749  001A2C  0E00               	movlw	0
 13750  001A2E  2018               	addwfc	??___fldiv+1,w,c
 13751  001A30  6E21               	movwf	___fldiv@new_exp+1,c
 13752  001A32  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
 13753  001A36  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
 13754  001A3A  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
 13755  001A3E  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
 13756  001A42  0E00               	movlw	0
 13757  001A44  6E0F               	movwf	___fldiv@b,c
 13758  001A46  0E00               	movlw	0
 13759  001A48  6E10               	movwf	___fldiv@b+1,c
 13760  001A4A  0E00               	movlw	0
 13761  001A4C  6E11               	movwf	___fldiv@b+2,c
 13762  001A4E  0E00               	movlw	0
 13763  001A50  6E12               	movwf	___fldiv@b+3,c
 13764  001A52  0E00               	movlw	0
 13765  001A54  6E22               	movwf	___fldiv@grs,c
 13766  001A56  0E00               	movlw	0
 13767  001A58  6E23               	movwf	___fldiv@grs+1,c
 13768  001A5A  0E00               	movlw	0
 13769  001A5C  6E24               	movwf	___fldiv@grs+2,c
 13770  001A5E  0E00               	movlw	0
 13771  001A60  6E25               	movwf	___fldiv@grs+3,c
 13772  001A62  0E00               	movlw	0
 13773  001A64  6E27               	movwf	___fldiv@aexp,c
 13774  001A66  D028               	goto	i2l1271
 13775  001A68                     i2l5000:
 13776  001A68  5027               	movf	___fldiv@aexp,w,c
 13777  001A6A  B4D8               	btfsc	status,2,c
 13778  001A6C  D011               	goto	i2l5008
 13779  001A6E  90D8               	bcf	status,0,c
 13780  001A70  361B               	rlcf	___fldiv@rem,f,c
 13781  001A72  361C               	rlcf	___fldiv@rem+1,f,c
 13782  001A74  361D               	rlcf	___fldiv@rem+2,f,c
 13783  001A76  361E               	rlcf	___fldiv@rem+3,f,c
 13784  001A78  90D8               	bcf	status,0,c
 13785  001A7A  360F               	rlcf	___fldiv@b,f,c
 13786  001A7C  3610               	rlcf	___fldiv@b+1,f,c
 13787  001A7E  3611               	rlcf	___fldiv@b+2,f,c
 13788  001A80  3612               	rlcf	___fldiv@b+3,f,c
 13789  001A82  BE25               	btfsc	___fldiv@grs+3,7,c
 13790  001A84  800F               	bsf	___fldiv@b,0,c
 13791  001A86  90D8               	bcf	status,0,c
 13792  001A88  3622               	rlcf	___fldiv@grs,f,c
 13793  001A8A  3623               	rlcf	___fldiv@grs+1,f,c
 13794  001A8C  3624               	rlcf	___fldiv@grs+2,f,c
 13795  001A8E  3625               	rlcf	___fldiv@grs+3,f,c
 13796  001A90                     i2l5008:
 13797  001A90  5013               	movf	___fldiv@a,w,c
 13798  001A92  5C1B               	subwf	___fldiv@rem,w,c
 13799  001A94  5014               	movf	___fldiv@a+1,w,c
 13800  001A96  581C               	subwfb	___fldiv@rem+1,w,c
 13801  001A98  5015               	movf	___fldiv@a+2,w,c
 13802  001A9A  581D               	subwfb	___fldiv@rem+2,w,c
 13803  001A9C  5016               	movf	___fldiv@a+3,w,c
 13804  001A9E  581E               	subwfb	___fldiv@rem+3,w,c
 13805  001AA0  A0D8               	btfss	status,0,c
 13806  001AA2  D009               	goto	i2l5014
 13807  001AA4  8C25               	bsf	___fldiv@grs+3,6,c
 13808  001AA6  5013               	movf	___fldiv@a,w,c
 13809  001AA8  5E1B               	subwf	___fldiv@rem,f,c
 13810  001AAA  5014               	movf	___fldiv@a+1,w,c
 13811  001AAC  5A1C               	subwfb	___fldiv@rem+1,f,c
 13812  001AAE  5015               	movf	___fldiv@a+2,w,c
 13813  001AB0  5A1D               	subwfb	___fldiv@rem+2,f,c
 13814  001AB2  5016               	movf	___fldiv@a+3,w,c
 13815  001AB4  5A1E               	subwfb	___fldiv@rem+3,f,c
 13816  001AB6                     i2l5014:
 13817  001AB6  2A27               	incf	___fldiv@aexp,f,c
 13818  001AB8                     i2l1271:
 13819  001AB8  0E19               	movlw	25
 13820  001ABA  6427               	cpfsgt	___fldiv@aexp,c
 13821  001ABC  D7D5               	goto	i2l5000
 13822  001ABE  501B               	movf	___fldiv@rem,w,c
 13823  001AC0  101C               	iorwf	___fldiv@rem+1,w,c
 13824  001AC2  101D               	iorwf	___fldiv@rem+2,w,c
 13825  001AC4  101E               	iorwf	___fldiv@rem+3,w,c
 13826  001AC6  B4D8               	btfsc	status,2,c
 13827  001AC8  D011               	goto	i2l5026
 13828  001ACA  8022               	bsf	___fldiv@grs,0,c
 13829  001ACC  D00F               	goto	i2l5026
 13830  001ACE                     i2l5020:
 13831  001ACE  90D8               	bcf	status,0,c
 13832  001AD0  360F               	rlcf	___fldiv@b,f,c
 13833  001AD2  3610               	rlcf	___fldiv@b+1,f,c
 13834  001AD4  3611               	rlcf	___fldiv@b+2,f,c
 13835  001AD6  3612               	rlcf	___fldiv@b+3,f,c
 13836  001AD8  BE25               	btfsc	___fldiv@grs+3,7,c
 13837  001ADA  800F               	bsf	___fldiv@b,0,c
 13838  001ADC  90D8               	bcf	status,0,c
 13839  001ADE  3622               	rlcf	___fldiv@grs,f,c
 13840  001AE0  3623               	rlcf	___fldiv@grs+1,f,c
 13841  001AE2  3624               	rlcf	___fldiv@grs+2,f,c
 13842  001AE4  3625               	rlcf	___fldiv@grs+3,f,c
 13843  001AE6  0620               	decf	___fldiv@new_exp,f,c
 13844  001AE8  A0D8               	btfss	status,0,c
 13845  001AEA  0621               	decf	___fldiv@new_exp+1,f,c
 13846  001AEC                     i2l5026:
 13847  001AEC  AE11               	btfss	___fldiv@b+2,7,c
 13848  001AEE  D7EF               	goto	i2l5020
 13849  001AF0  0E00               	movlw	0
 13850  001AF2  6E27               	movwf	___fldiv@aexp,c
 13851  001AF4  AE25               	btfss	___fldiv@grs+3,7,c
 13852  001AF6  D017               	goto	i2l1282
 13853  001AF8  0EFF               	movlw	255
 13854  001AFA  1422               	andwf	___fldiv@grs,w,c
 13855  001AFC  6E17               	movwf	??___fldiv& (0+255),c
 13856  001AFE  0EFF               	movlw	255
 13857  001B00  1423               	andwf	___fldiv@grs+1,w,c
 13858  001B02  6E18               	movwf	(??___fldiv+1)& (0+255),c
 13859  001B04  0EFF               	movlw	255
 13860  001B06  1424               	andwf	___fldiv@grs+2,w,c
 13861  001B08  6E19               	movwf	(??___fldiv+2)& (0+255),c
 13862  001B0A  0E7F               	movlw	127
 13863  001B0C  1425               	andwf	___fldiv@grs+3,w,c
 13864  001B0E  6E1A               	movwf	(??___fldiv+3)& (0+255),c
 13865  001B10  5017               	movf	??___fldiv,w,c
 13866  001B12  1018               	iorwf	??___fldiv+1,w,c
 13867  001B14  1019               	iorwf	??___fldiv+2,w,c
 13868  001B16  101A               	iorwf	??___fldiv+3,w,c
 13869  001B18  B4D8               	btfsc	status,2,c
 13870  001B1A  D003               	goto	i2l1283
 13871  001B1C                     i2u485_40:
 13872  001B1C  0E01               	movlw	1
 13873  001B1E  6E27               	movwf	___fldiv@aexp,c
 13874  001B20  D002               	goto	i2l1282
 13875  001B22                     i2l1283:
 13876  001B22  B00F               	btfsc	___fldiv@b,0,c
 13877  001B24  D7FB               	goto	i2u485_40
 13878  001B26                     i2l1282:
 13879  001B26  5027               	movf	___fldiv@aexp,w,c
 13880  001B28  B4D8               	btfsc	status,2,c
 13881  001B2A  D01F               	goto	i2l5046
 13882  001B2C  0E01               	movlw	1
 13883  001B2E  260F               	addwf	___fldiv@b,f,c
 13884  001B30  0E00               	movlw	0
 13885  001B32  2210               	addwfc	___fldiv@b+1,f,c
 13886  001B34  2211               	addwfc	___fldiv@b+2,f,c
 13887  001B36  2212               	addwfc	___fldiv@b+3,f,c
 13888  001B38  A012               	btfss	___fldiv@b+3,0,c
 13889  001B3A  D017               	goto	i2l5046
 13890  001B3C  C00F  F017         	movff	___fldiv@b,??___fldiv
 13891  001B40  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
 13892  001B44  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
 13893  001B48  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
 13894  001B4C  341A               	rlcf	??___fldiv+3,w,c
 13895  001B4E  321A               	rrcf	??___fldiv+3,f,c
 13896  001B50  3219               	rrcf	??___fldiv+2,f,c
 13897  001B52  3218               	rrcf	??___fldiv+1,f,c
 13898  001B54  3217               	rrcf	??___fldiv,f,c
 13899  001B56  C017  F00F         	movff	??___fldiv,___fldiv@b
 13900  001B5A  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
 13901  001B5E  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
 13902  001B62  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
 13903  001B66  4A20               	infsnz	___fldiv@new_exp,f,c
 13904  001B68  2A21               	incf	___fldiv@new_exp+1,f,c
 13905  001B6A                     i2l5046:
 13906  001B6A  BE21               	btfsc	___fldiv@new_exp+1,7,c
 13907  001B6C  D010               	goto	i2l5050
 13908  001B6E  5021               	movf	___fldiv@new_exp+1,w,c
 13909  001B70  E103               	bnz	i2u489_40
 13910  001B72  2820               	incf	___fldiv@new_exp,w,c
 13911  001B74  A0D8               	btfss	status,0,c
 13912  001B76  D00B               	goto	i2l5050
 13913  001B78                     i2u489_40:
 13914  001B78  0E00               	movlw	0
 13915  001B7A  6E21               	movwf	___fldiv@new_exp+1,c
 13916  001B7C  6820               	setf	___fldiv@new_exp,c
 13917  001B7E  0E00               	movlw	0
 13918  001B80  6E0F               	movwf	___fldiv@b,c
 13919  001B82  0E00               	movlw	0
 13920  001B84  6E10               	movwf	___fldiv@b+1,c
 13921  001B86  0E00               	movlw	0
 13922  001B88  6E11               	movwf	___fldiv@b+2,c
 13923  001B8A  0E00               	movlw	0
 13924  001B8C  6E12               	movwf	___fldiv@b+3,c
 13925  001B8E                     i2l5050:
 13926  001B8E  BE21               	btfsc	___fldiv@new_exp+1,7,c
 13927  001B90  D005               	goto	i2u490_40
 13928  001B92  5021               	movf	___fldiv@new_exp+1,w,c
 13929  001B94  E111               	bnz	i2l5054
 13930  001B96  0420               	decf	___fldiv@new_exp,w,c
 13931  001B98  B0D8               	btfsc	status,0,c
 13932  001B9A  D00E               	goto	i2l5054
 13933  001B9C                     i2u490_40:
 13934  001B9C  0E00               	movlw	0
 13935  001B9E  6E21               	movwf	___fldiv@new_exp+1,c
 13936  001BA0  0E00               	movlw	0
 13937  001BA2  6E20               	movwf	___fldiv@new_exp,c
 13938  001BA4  0E00               	movlw	0
 13939  001BA6  6E0F               	movwf	___fldiv@b,c
 13940  001BA8  0E00               	movlw	0
 13941  001BAA  6E10               	movwf	___fldiv@b+1,c
 13942  001BAC  0E00               	movlw	0
 13943  001BAE  6E11               	movwf	___fldiv@b+2,c
 13944  001BB0  0E00               	movlw	0
 13945  001BB2  6E12               	movwf	___fldiv@b+3,c
 13946  001BB4  0E00               	movlw	0
 13947  001BB6  6E1F               	movwf	___fldiv@sign,c
 13948  001BB8                     i2l5054:
 13949  001BB8  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
 13950  001BBC  A026               	btfss	___fldiv@bexp,0,c
 13951  001BBE  D002               	goto	i2l5060
 13952  001BC0  8E11               	bsf	___fldiv@b+2,7,c
 13953  001BC2  D001               	goto	i2l5062
 13954  001BC4                     i2l5060:
 13955  001BC4  9E11               	bcf	___fldiv@b+2,7,c
 13956  001BC6                     i2l5062:
 13957  001BC6  90D8               	bcf	status,0,c
 13958  001BC8  3026               	rrcf	___fldiv@bexp,w,c
 13959  001BCA  6E12               	movwf	___fldiv@b+3,c
 13960  001BCC  D70E               	goto	i2l4976
 13961  001BCE                     __end_of___fldiv:
 13962                           	opt callstack 0
 13963                           
 13964                           	psect	rparam
 13965  0000                     
 13966                           	psect	temp
 13967  00006E                     btemp:
 13968                           	opt callstack 0
 13969  00006E                     	ds	1
 13970  0000                     int$flags	set	btemp
 13971  0000                     wtemp8	set	btemp+1
 13972  0000                     ttemp5	set	btemp+1
 13973  0000                     ttemp6	set	btemp+4
 13974  0000                     ttemp7	set	btemp+8
 13975                           tosu	equ	0xFFF
 13976                           tosh	equ	0xFFE
 13977                           tosl	equ	0xFFD
 13978                           stkptr	equ	0xFFC
 13979                           pclatu	equ	0xFFB
 13980                           pclath	equ	0xFFA
 13981                           pcl	equ	0xFF9
 13982                           tblptru	equ	0xFF8
 13983                           tblptrh	equ	0xFF7
 13984                           tblptrl	equ	0xFF6
 13985                           tablat	equ	0xFF5
 13986                           prodh	equ	0xFF4
 13987                           prodl	equ	0xFF3
 13988                           indf0	equ	0xFEF
 13989                           postinc0	equ	0xFEE
 13990                           postdec0	equ	0xFED
 13991                           preinc0	equ	0xFEC
 13992                           plusw0	equ	0xFEB
 13993                           fsr0h	equ	0xFEA
 13994                           fsr0l	equ	0xFE9
 13995                           wreg	equ	0xFE8
 13996                           indf1	equ	0xFE7
 13997                           postinc1	equ	0xFE6
 13998                           postdec1	equ	0xFE5
 13999                           preinc1	equ	0xFE4
 14000                           plusw1	equ	0xFE3
 14001                           fsr1h	equ	0xFE2
 14002                           fsr1l	equ	0xFE1
 14003                           bsr	equ	0xFE0
 14004                           indf2	equ	0xFDF
 14005                           postinc2	equ	0xFDE
 14006                           postdec2	equ	0xFDD
 14007                           preinc2	equ	0xFDC
 14008                           plusw2	equ	0xFDB
 14009                           fsr2h	equ	0xFDA
 14010                           fsr2l	equ	0xFD9
 14011                           status	equ	0xFD8


Data Sizes:
    Strings     556
    Constant    23
    Data        5
    BSS         238
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     55     109
    BANK0           128    127     128
    BANK1           256     92     152
    BANK2           256    108     236
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          244      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_61(CODE[10]), STR_60(CODE[11]), STR_59(CODE[11]), STR_58(CODE[12]), 
		 -> STR_57(CODE[12]), STR_56(CODE[10]), STR_55(CODE[10]), STR_54(CODE[13]), 
		 -> STR_53(CODE[8]), STR_52(CODE[17]), STR_51(CODE[15]), STR_50(CODE[15]), 
		 -> STR_49(CODE[12]), STR_48(CODE[17]), STR_47(CODE[12]), STR_46(CODE[15]), 
		 -> STR_45(CODE[18]), STR_44(CODE[17]), STR_43(CODE[12]), STR_42(CODE[15]), 
		 -> STR_41(CODE[18]), STR_40(CODE[17]), STR_39(CODE[14]), STR_38(CODE[14]), 
		 -> STR_37(CODE[17]), STR_36(CODE[3]), STR_35(CODE[9]), STR_34(CODE[16]), 
		 -> STR_33(CODE[3]), STR_32(CODE[9]), STR_31(CODE[17]), STR_30(CODE[15]), 
		 -> STR_29(CODE[15]), STR_28(CODE[12]), STR_27(CODE[10]), STR_26(CODE[15]), 
		 -> STR_25(CODE[12]), STR_24(CODE[10]), STR_23(CODE[16]), STR_22(CODE[12]), 
		 -> STR_21(CODE[3]), STR_20(CODE[11]), STR_19(CODE[8]), STR_18(CODE[13]), 
		 -> STR_17(CODE[10]), STR_16(CODE[17]), STR_15(CODE[10]), STR_14(CODE[16]), 
		 -> STR_13(CODE[10]), STR_12(CODE[16]), STR_11(CODE[10]), STR_10(CODE[17]), 
		 -> STR_9(CODE[5]), STR_8(CODE[10]), STR_7(CODE[14]), STR_6(CODE[6]), 
		 -> STR_5(CODE[10]), STR_4(CODE[10]), STR_3(CODE[11]), STR_2(CODE[13]), 
		 -> STR_1(CODE[10]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1623_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_61(CODE[10]), STR_60(CODE[11]), STR_59(CODE[11]), STR_58(CODE[12]), 
		 -> STR_57(CODE[12]), STR_56(CODE[10]), STR_55(CODE[10]), STR_54(CODE[13]), 
		 -> STR_53(CODE[8]), STR_52(CODE[17]), STR_51(CODE[15]), STR_50(CODE[15]), 
		 -> STR_49(CODE[12]), STR_48(CODE[17]), STR_47(CODE[12]), STR_46(CODE[15]), 
		 -> STR_45(CODE[18]), STR_44(CODE[17]), STR_43(CODE[12]), STR_42(CODE[15]), 
		 -> STR_41(CODE[18]), STR_40(CODE[17]), STR_39(CODE[14]), STR_38(CODE[14]), 
		 -> STR_37(CODE[17]), STR_36(CODE[3]), STR_35(CODE[9]), STR_34(CODE[16]), 
		 -> STR_33(CODE[3]), STR_32(CODE[9]), STR_31(CODE[17]), STR_30(CODE[15]), 
		 -> STR_29(CODE[15]), STR_28(CODE[12]), STR_27(CODE[10]), STR_26(CODE[15]), 
		 -> STR_25(CODE[12]), STR_24(CODE[10]), STR_23(CODE[16]), STR_22(CODE[12]), 
		 -> STR_21(CODE[3]), STR_20(CODE[11]), STR_19(CODE[8]), STR_18(CODE[13]), 
		 -> STR_17(CODE[10]), STR_16(CODE[17]), STR_15(CODE[10]), STR_14(CODE[16]), 
		 -> STR_13(CODE[10]), STR_12(CODE[16]), STR_11(CODE[10]), STR_10(CODE[17]), 
		 -> STR_9(CODE[5]), STR_8(CODE[10]), STR_7(CODE[14]), STR_6(CODE[6]), 
		 -> STR_5(CODE[10]), STR_4(CODE[10]), STR_3(CODE[11]), STR_2(CODE[13]), 
		 -> STR_1(CODE[10]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_61(CODE[10]), STR_60(CODE[11]), STR_59(CODE[11]), STR_58(CODE[12]), 
		 -> STR_57(CODE[12]), STR_56(CODE[10]), STR_55(CODE[10]), STR_54(CODE[13]), 
		 -> STR_53(CODE[8]), STR_52(CODE[17]), STR_51(CODE[15]), STR_50(CODE[15]), 
		 -> STR_49(CODE[12]), STR_48(CODE[17]), STR_47(CODE[12]), STR_46(CODE[15]), 
		 -> STR_45(CODE[18]), STR_44(CODE[17]), STR_43(CODE[12]), STR_42(CODE[15]), 
		 -> STR_41(CODE[18]), STR_40(CODE[17]), STR_39(CODE[14]), STR_38(CODE[14]), 
		 -> STR_37(CODE[17]), STR_36(CODE[3]), STR_35(CODE[9]), STR_34(CODE[16]), 
		 -> STR_33(CODE[3]), STR_32(CODE[9]), STR_31(CODE[17]), STR_30(CODE[15]), 
		 -> STR_29(CODE[15]), STR_28(CODE[12]), STR_27(CODE[10]), STR_26(CODE[15]), 
		 -> STR_25(CODE[12]), STR_24(CODE[10]), STR_23(CODE[16]), STR_22(CODE[12]), 
		 -> STR_21(CODE[3]), STR_20(CODE[11]), STR_19(CODE[8]), STR_18(CODE[13]), 
		 -> STR_17(CODE[10]), STR_16(CODE[17]), STR_15(CODE[10]), STR_14(CODE[16]), 
		 -> STR_13(CODE[10]), STR_12(CODE[16]), STR_11(CODE[10]), STR_10(CODE[17]), 
		 -> STR_9(CODE[5]), STR_8(CODE[10]), STR_7(CODE[14]), STR_6(CODE[6]), 
		 -> STR_5(CODE[10]), STR_4(CODE[10]), STR_3(CODE[11]), STR_2(CODE[13]), 
		 -> STR_1(CODE[10]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_61(CODE[10]), STR_60(CODE[11]), STR_59(CODE[11]), STR_58(CODE[12]), 
		 -> STR_57(CODE[12]), STR_56(CODE[10]), STR_55(CODE[10]), STR_54(CODE[13]), 
		 -> STR_53(CODE[8]), STR_52(CODE[17]), STR_51(CODE[15]), STR_50(CODE[15]), 
		 -> STR_49(CODE[12]), STR_48(CODE[17]), STR_47(CODE[12]), STR_46(CODE[15]), 
		 -> STR_45(CODE[18]), STR_44(CODE[17]), STR_43(CODE[12]), STR_42(CODE[15]), 
		 -> STR_41(CODE[18]), STR_40(CODE[17]), STR_39(CODE[14]), STR_38(CODE[14]), 
		 -> STR_37(CODE[17]), STR_36(CODE[3]), STR_35(CODE[9]), STR_34(CODE[16]), 
		 -> STR_33(CODE[3]), STR_32(CODE[9]), STR_31(CODE[17]), STR_30(CODE[15]), 
		 -> STR_29(CODE[15]), STR_28(CODE[12]), STR_27(CODE[10]), STR_26(CODE[15]), 
		 -> STR_25(CODE[12]), STR_24(CODE[10]), STR_23(CODE[16]), STR_22(CODE[12]), 
		 -> STR_21(CODE[3]), STR_20(CODE[11]), STR_19(CODE[8]), STR_18(CODE[13]), 
		 -> STR_17(CODE[10]), STR_16(CODE[17]), STR_15(CODE[10]), STR_14(CODE[16]), 
		 -> STR_13(CODE[10]), STR_12(CODE[16]), STR_11(CODE[10]), STR_10(CODE[17]), 
		 -> STR_9(CODE[5]), STR_8(CODE[10]), STR_7(CODE[14]), STR_6(CODE[6]), 
		 -> STR_5(CODE[10]), STR_4(CODE[10]), STR_3(CODE[11]), STR_2(CODE[13]), 
		 -> STR_1(CODE[10]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    min@array	PTR int  size(2) Largest target is 8
		 -> a(COMRAM[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_echo
    _echo->___fltol
    ___fltol->___fldiv
    ___fldiv->___xxtofl

Critical Paths under _main in BANK0

    _main->_number_deploy
    _ultrasonic_main->_print_echo
    _print_echo->_printf
    _start->_I2C_Master_Init
    _number_deploy->_printf
    _brake->_I2C_Master_Write
    _backwards->_I2C_Master_Write
    _actuators_main->_stepper
    _actuators_main->_stepper2
    _actuators_main->_stepper2_back
    _stepper2_back->_full_drive
    _stepper2->_full_drive
    _stepper->_full_drive
    _full_drive->_printf
    _servo->_servoRotate0
    _servo->_servoRotate180
    _UI_main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_send_byte
    _abs->___aomod
    _atoi->_isspace
    _initLCD->_lcdInst
    _lcdInst->_send_byte
    _send_byte->_send_nibble
    _send_nibble->_pulse_e
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_UI_main
    _actuators_main->_stepper2

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               110   110      0  272669
                                             90 BANK1      2     2      0
                                              0 BANK2    108   108      0
                            _UI_main
                             ___wmul
                     _actuators_main
                          _backwards
                              _brake
                            _initLCD
                            _lcdInst
                      _number_deploy
                             _printf
                              _start
                    _ultrasonic_main
 ---------------------------------------------------------------------------------
 (1) _ultrasonic_main                                     14    12      2   48732
                                            122 BANK0      4     2      2
                                              0 BANK1     10    10      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                                _abs
                            _lcdInst
                                _min
                         _print_echo
                             _printf
                               _trig
 ---------------------------------------------------------------------------------
 (2) _trig                                                 2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _print_echo                                           1     1      0   23053
                                            121 BANK0      1     1      0
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _min                                                 11     7      4     722
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 (1) _start                                                0     0      0    2013
                    _I2C_Master_Init
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _number_deploy                                       12     8      4   25004
                                            121 BANK0      6     2      4
                                              0 BANK1      6     6      0
                            ___awdiv
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1245
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _brake                                                0     0      0    1291
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _backwards                                            0     0      0    1291
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _actuators_main                                       8     4      4  142224
                                             12 BANK1      8     4      4
                            _initLCD
                            _lcdInst
                             _printf
                              _servo
                            _stepper
                           _stepper2
                      _stepper2_back
                        _system_init
 ---------------------------------------------------------------------------------
 (2) _system_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _stepper2_back                                        8     6      2   46934
                                            125 BANK0      2     0      2
                                              0 BANK1      6     6      0
                         _full_drive
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _stepper2                                            14    12      2   47219
                                            125 BANK0      2     0      2
                                              0 BANK1     12    12      0
                         _full_drive
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _stepper                                              8     6      2   23949
                                            125 BANK0      2     0      2
                                              0 BANK1      6     6      0
                         _full_drive
 ---------------------------------------------------------------------------------
 (3) _full_drive                                           4     2      2   23624
                                            121 BANK0      4     2      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _servo                                                2     2      0     136
                                              3 BANK0      2     2      0
                       _servoRotate0
                     _servoRotate180
 ---------------------------------------------------------------------------------
 (3) _servoRotate180                                       3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _servoRotate0                                         3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _UI_main                                             94    90      4   26760
                                            121 BANK0      4     0      4
                                              0 BANK1     90    90      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___llmod
                            _initLCD
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              12     4      8   22895
                                            109 BANK0     12     4      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   17312
                                            101 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6   16767
                                             70 BANK0     31    25      6
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    5847
                                             31 BANK0     39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     512
                                              6 BANK0      8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     191
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     191
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     191
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6173
                                             31 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3817
                                             20 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1602
                                             13 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1102
                                              4 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0     158
                                              3 BANK0      1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     273
                                             18 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              0 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1895
                                              7 BANK0     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     281
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     792
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     350
                                              4 BANK0      1     1      0
                            _lcdInst
                          _send_byte
                        _send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcdInst                                              1     1      0     158
                                              3 BANK0      1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (10) _send_byte                                           1     1      0     127
                                              2 BANK0      1     1      0
                        _send_nibble
 ---------------------------------------------------------------------------------
 (11) _send_nibble                                         1     1      0      65
                                              1 BANK0      1     1      0
                            _pulse_e
 ---------------------------------------------------------------------------------
 (12) _pulse_e                                             1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     412
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1291
                                              1 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      2     2      0      65
                                              1 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     722
                                             13 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     421
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _ISR                                                 2     2      0    3522
                                             53 COMRAM     2     2      0
                               _echo
 ---------------------------------------------------------------------------------
 (16) _echo                                                4     4      0    3522
                                             49 COMRAM     4     4      0
                            ___fldiv
                            ___fltol
                           ___xxtofl
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (17) i2___awdiv                                           8     4      4     508
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (17) ___xxtofl                                           14    10      4     626
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (17) ___fltol                                            10     6      4     533
                                             39 COMRAM    10     6      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (17) ___fldiv                                            25    17      8    1855
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UI_main
     _I2C_Master_Init
       ___lldiv
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     ___llmod
     _initLCD
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _send_byte
         _send_nibble
           _pulse_e
       _send_nibble
         _pulse_e
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
   ___wmul
   _actuators_main
     _initLCD
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _send_byte
         _send_nibble
           _pulse_e
       _send_nibble
         _pulse_e
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
     _servo
       _servoRotate0
       _servoRotate180
     _stepper
       _full_drive
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _toupper
                   _islower
     _stepper2
       _full_drive
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _toupper
                   _islower
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _toupper
                 _islower
     _stepper2_back
       _full_drive
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _toupper
                   _islower
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _toupper
                 _islower
     _system_init
   _backwards
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _brake
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _initLCD
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _send_byte
       _send_nibble
         _pulse_e
     _send_nibble
       _pulse_e
   _lcdInst
     _send_byte
       _send_nibble
         _pulse_e
   _number_deploy
     ___awdiv
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _fputc
           _putch
             _send_byte
               _send_nibble
                 _pulse_e
         _isdigit
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
           _toupper
             _islower
   _start
     _I2C_Master_Init
       ___lldiv
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _ultrasonic_main
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _abs
       ___aomod (ARG)
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _min
     _print_echo
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _toupper
                 _islower
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
     _trig

 _ISR (ROOT)
   _echo
     ___fldiv
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     i2___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EF3      0       0      38        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100     6C      EC      10       92.2%
BITBANK1           100      0       0       7        0.0%
BANK1              100     5C      98       8       59.4%
BITBANK14           F4      0       0      33        0.0%
BANK14              F4      0       0      34        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     7F      80       5      100.0%
BIGRAM_1            80      0       0      37        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     37      6D       1       86.5%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     271       6        0.0%
DATA                 0      0     271       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Apr 07 03:55:15 2019

                  ___fldiv@aexp 0027                    ___fldiv@bexp 0026                               _a 0061  
                             _b 005A                               _i 016D                    ___fldiv@sign 001F  
                   __CFG_CPD$ON 000000                    ___awdiv@sign 0085             ___wmul@multiplicand 0082  
                   __CFG_BORV$3 000000                 ??_number_deploy 00FD               stepper2@direction 010B  
                 servoRotate0@i 0081                    __CFG_CP0$OFF 000000                    __CFG_CP1$OFF 000000  
                  __CFG_CP2$OFF 000000                    __CFG_CP3$OFF 000000                     __CFG_OSC$HS 000000  
           __end_of_system_init 38B8                             l112 36D0                             l117 35D2  
               _ultrasonic_main 204C                             l530 1008                             l620 1E34  
                           l622 1E3C                             l714 3336                             l493 0290  
                           l584 314A                             l595 1C42                             l597 1C4A  
                           _GIE 007F97                    __CFG_CPB$OFF 000000                             _RB2 007C0A  
                           _RC1 007C11                             _RB3 007C0B                             _RC2 007C12  
                           _RB4 007C0C                             _RD0 007C18                             _RB5 007C0D  
                           _RD1 007C19                             _RB6 007C0E                             _RB7 007C0F  
                           _ISR 0008          __size_of_stepper2_back 00A0                             _abs 3852  
                           _cnt 0175                             _pad 311A                             _min 2CB2  
                           _sum 0038                  stepper2_back@i 0104                             wreg 000FE8  
                  __CFG_LVP$OFF 000000                            ?_ISR 0001                    ___fltol@exp1 0031  
                  __CFG_WDT$OFF 000000                            l1107 3500                            ?_abs 0092  
                          l1362 387C                            l1460 3758                            l1393 290C  
                          l7100 2EE2                            l6302 316E                            l7110 2F32  
                          ?_pad 0094                            l6400 2C0C                            l7120 2F76  
                          l7104 2EFA                            l6410 2C6A                            l6306 319A  
                          l7124 2F8E                            l6414 2C90                            l6406 2C54  
                          l6254 3456                            l6502 1E52                            l7070 31D4  
                          l7302 2DA0                            l7206 2E78                            l8022 0F6E  
                          l8030 0FA6                            l8006 0F1C                            l6360 2718  
                          l6352 26DE                            l6264 37EC                            l6272 3958  
                          l7320 3264                            l7304 2DA4                            l7216 2EAC  
                          l8104 1260                            l8040 0FE8                            l6426 379A  
                          l6370 2774                            l6346 26B6                            l6274 395E  
                          l6450 1C64                            l6530 1F34                            l6610 12B2  
                          l7314 3254                            l7250 2596                            l7242 2562  
                          l7234 251E                            l8034 0FCA                            l6268 3804  
                          l6292 3132                            l6436 1C26                            l6516 1EA6  
                          l6508 1E84                            l6612 12B4                            l7084 3210  
                          l7148 30D4                            l7228 24F0                            l8028 0F8C  
                          ?_min 0080                            l6358 2704                            l6374 278A  
                          l6390 2BBA                            l6454 1C74                            l6630 12D4  
                          l6622 12CC                            l6614 12C4                            l7326 327A  
                          l7342 32AC                            l7174 2DD6                            l6560 27E6  
                          l6296 3142                            l6464 1D6E                            l6720 3658  
                          l7328 3282                            l7512 2178                            l7520 2190  
                          l8072 114E                            l8064 10F2                            l7362 34F2  
                          l7354 34BE                            l6570 2830                            l6562 27EA  
                          l6378 27B0                            l6394 2BDE                            l6298 3154  
                          l6554 2022                            l6538 1FAC                            l6650 13AA  
                          l6634 12DE                            l6626 12D0                            l6618 12C8  
                          l7346 32BA                            l7338 32A2                            l7290 2CF2  
                          l7274 2652                            l7266 260E                            l7258 25DA  
                          l7186 2E10                            l8082 11B4                            l7356 34CA  
                          l6580 284E                            l6484 1DD4                            l6652 13B8  
                          l6636 1320                            l7380 2AB0                            l7196 2E44  
                          l7540 2220                            l7508 214A                            l7524 21A0  
                          l8076 115E                            l8068 1102                            l6582 2876  
                          l6398 2BF8                            l6718 3630                            l7710 01EA  
                          l7614 2480                            l7526 21A8                            l8086 11BA  
                          l6576 2840                            l6488 1DEC                            l6648 138C  
                          l7456 2B82                            l7288 2CE8                            l8088 11C4  
                          l6586 28AC                            l6578 2848                            l6682 1580  
                          l7538 221A                            l7482 20C0                            l6692 15C8  
                          l6668 14B2                            l7732 0270                            l7820 06A6  
                          l7652 00BC                            l7572 2314                            l7564 22CE  
                          l7484 20C8                            l7742 02B0                            l6918 18B0  
                          l6838 178E                            l6782 168E                            l7582 235E  
                          l7558 2294                            l6688 15BC                            l7824 06CC  
                          l7584 2368                            l7568 2300                            l7488 20D8  
                          l6698 15E0                            l7682 015E                            l6980 32E8  
                          l7852 0780                            l6956 1930                            l6876 1818  
                          l7596 23B4                            l6982 32F4                            l7870 0816  
                          l7774 0378                            l7758 0310                            l6798 16FA  
                          l6992 3328                            l7848 0778                            l7858 079A  
                          l7962 0E06                            l7954 0DD2                            l7868 0808  
                          l7798 051A                            l7978 0E60                            l7988 0E90  
                          STR_1 FD08                            STR_2 FC39                            STR_3 FCA3  
                          STR_4 FD08                            STR_5 FCFE                            STR_6 FD23  
                          STR_7 FC11                            STR_8 FD08                            STR_9 FD29  
                          _LATA 000F89                            _LATB 000F8A                            _LATC 000F8B  
                          _LATD 000F8C                            _LATE 000F8D                            u7000 1ED8  
                          u7010 1EDA                            u7100 1FEE                            u7110 1FF2  
                          u7030 1F12                            _RBIE 007F93                            u7040 1F14  
                          _RBIF 007F90                            u7140 282C                            u6500 38E2  
                          u7060 1F88                            u8100 22F6                            u8020 2142  
                          u6510 38E4                            u7070 1FBE                            u7310 14E6  
                          u8030 215A                            u7160 28DC                            u6520 3862  
                          u6600 384C                            u8200 23B0                            u8120 2324  
                          u7065 1F76                            u7170 28DE                            u6450 344E  
                          u6610 3740                            u7090 1FE0                            u7250 13F2  
                          u8130 2334                            u6435 39A6                            u7091 1FDE  
                          u6436 39A8                            u6700 271C                            u6620 3742  
                          u7260 13F4                            u8220 2490                            u8140 2344  
                          u6470 3496                            u7270 1400                            u8150 2354  
                          u8070 2226                            u9007 242C                            u6640 3946  
                          u6800 3796                            u8400 038A                            u8320 0200  
                          u7360 3714                            u7600 30FC                            u7505 353C  
                          u9017 2460                            u6650 3948                            u6810 1BF8  
                          u6570 3914                            u7290 1434                            u8410 039A  
                          u7370 361C                            u7530 31FA                            u8170 2380  
                          u8090 22C4                            u7610 2DD4                            u7515 39F6  
                          u8411 0398                            u9107 165E                            u9027 2A76  
                          u7516 39F8                            u6900 1DA0                            u6820 1BFA  
                          u6580 3916                            u8180 2390                            u7700 2510  
                          u6901 1D9E                            u9117 1672                            u9037 2AA2  
                          u6910 1DAE                            u6590 384A                            u7550 3236  
                          u8190 23A0                            u7710 252E                            u9207 1750  
                          u9127 1686                            u9047 2B04                            u7480 32F8  
                          u6760 2C10                            u6920 1DB2                            u7800 262E  
                          u7720 253E                            u6681 26E4                            u9217 176A  
                          u9137 16A2                            u9057 2B2E                            u6850 1C38  
                          u8370 02AC                            u7810 2662                            u7730 2572  
                          u8610 0DEE                            u9307 1878                            u9227 1784  
                          u9147 16B6                            u9067 3096                            u8611 0DEC  
                          u6940 1DBE                            u8460 081C                            u7820 2672  
                          u7740 2582                            u7660 2EC2                            u8700 0FB8  
                          u9317 1890                            u9237 17A6                            u9157 16CA  
                          u9077 2F46                            u8621 0E04                            u8605 0DDA  
                          u6870 1C5E                            u7830 2CD8                            u7750 25A6  
                          u7670 24C2                            u8710 1002                            u9407 35EA  
                          u9327 18A8                            u9247 17C0                            u9167 16DE  
                          u9087 1636                            u8607 0DDC                            u6880 1D7E  
                          u7760 25B6                            u7680 24D2                            u9417 35FE  
                          u9337 18C8                            u9257 17DA                            u9177 16F2  
                          u9097 164A                            u6970 1E28                            u7930 3286  
                          u7770 25EA                            u7690 2500                            u9507 0328  
                          u9427 36DC                            u9347 18E0                            u9267 17F4  
                          u9187 171C                            u7780 25FA                            u9517 03B4  
                          u9437 36E8                            u9357 18F8                            u9277 180E  
                          u9197 1736                            u6990 1EA2                            u7870 2D60  
                          u7790 261E                            u8670 0F46                            u8590 0DBC  
                          u9527 0540                            u9447 36F6                            u9367 1910  
                          u9287 1848                            u8807 10AA                            u7880 2D86  
                          u8680 0F56                            u9537 070E                            u9457 007A  
                          u9377 1928                            u9297 1860                            u8817 11D6  
                          u8585 0DAA                            u7970 34CE                            u8690 0FA6  
                          u9547 33D4                            u9467 011E                            u9387 39C2  
                          u8907 2260                            u8827 11FA                            u8587 0DAC  
                          u9557 33EE                            u9477 0192                            u9397 35D8  
                          u8917 2DEC                            u8837 122E                            u8757 0E1E  
                          u9567 3400                            u9487 0228                            u8927 2E02  
                          u8847 1252                            u8767 0E48                            u9577 3424  
                          u9497 02C8                            u8937 2E20                            u8857 205A  
                          u8777 0E72                            u9587 398C                            u8947 2E36  
                          u8867 208C                            u8787 0EA6                            u9597 3996  
                          u8957 2E54                            u8877 2110                            u8797 0ED8  
                          u8967 2E6A                            u8887 21EC                            u8977 2E88  
                          u8897 2234                            u8987 2E9E                            u8997 24A8  
                          _Pole 0200              main@poles_detected 02E6                     main@t_count 02E0  
                          abs@a 0092                            _data 005E                            _echo 0826  
                          _dbuf 0178                            _disp 016F                            _atoi 27D2  
                          _main 0D6A                            _dtoa 1BCE                            _meas 0050  
                          _keys FAEB                            _send 006D                            _tick 0056  
                          _prec 004C                            _sens 0058                            _temp 00FF  
                          _time 0164                            _nout 0048                            pad@i 009B  
                          pad@p 0098                            fsr1h 000FE2                            fsr2h 000FDA  
                          indf2 000FDF                            fsr1l 000FE1                            pad@w 009D  
                          fsr2l 000FD9                            _trig 2DC2                            _sumf 0040  
                          btemp 006E                            min@i 0089                            _xtoa 1E16  
                          prodh 000FF4                            prodl 000FF3                            start 000E  
       __size_of_actuators_main 0136                   __CFG_IESO$OFF 000000                 ___fldiv@new_exp 0020  
               __end_of_UI_main 0826                 servoRotate180@i 0081                   __CFG_MCLRE$ON 000000  
                  main@act_done 02DA                    ___param_bank 000000                           ??_ISR 0036  
                         ??_abs 0094                           ??_pad 009A                           ??_min 0084  
         actuators_main@act_cnt 0112           I2C_Master_Read@ackBit 0081                ?_I2C_Master_Init 008D  
              ?_I2C_Master_Read 0001                ?_I2C_Master_Wait 0001                ?_I2C_Master_Stop 0001  
                         ?_echo 0001                   ___fltol@sign1 0030                 __end_of___aodiv 27D2  
                         ?_atoi 0087                           ?_main 0001                           ?_dtoa 009F  
               __end_of___aomod 2CB2                 __end_of___fldiv 1BCE                 __end_of___awdiv 32C4  
                         STR_10 FB36                           STR_11 FCAE                           STR_20 FC8D  
                         STR_12 FB8A                           STR_21 FC00                           STR_13 FCB8  
                         STR_22 FC52                           STR_30 FBC8                           STR_14 FB9A  
                         STR_15 FCC2                           STR_23 FB7A                           STR_31 FB14  
                         STR_32 FD12                           STR_24 FCF4                           STR_40 FB69  
                         STR_16 FB47                           STR_33 FC00                           STR_17 FCCC  
                         STR_25 FC76                           STR_41 FB02                           STR_34 FB59  
                         STR_18 FC1F                           STR_50 FBD7                           STR_42 FBB9  
                         STR_26 FBAA                           STR_35 FD12                           STR_27 FCF4  
                         STR_19 FD1B                           STR_43 FC6A                           STR_51 FBE6  
                         STR_52 FB14                           STR_44 FB69                           STR_36 FC00  
                         STR_28 FC76                           STR_60 FC98                           STR_29 FBAA  
                         STR_45 FB02                           STR_53 FC31                           STR_61 FCE0  
                         STR_37 FB58                           STR_46 FBB9                           STR_54 FC2C  
                         STR_38 FC03                           STR_47 FC6A                           STR_55 FCEA  
                         STR_39 FBF5                           STR_56 FCD6                           STR_48 FB25  
                         STR_57 FC52                           STR_49 FC46                           STR_58 FC5E  
                         STR_59 FC82                 __end_of___fltol 307A                           ?_trig 0001  
               __end_of___lldiv 3348                 ___awdiv@divisor 0082                           ?_xtoa 009F  
                         _T1CON 000FCD                 __end_of___llmod 3512                           i2l365 37D4  
                         i2l392 0D68                 ___awdiv@counter 0084                    vfpfcnvrt@fmt 00C8  
                  vfpfcnvrt@llu 00D8                           _TMR1H 000FCF                           _TMR1L 000FCE  
                         _PORTB 000F81                           _TRISA 000F92                           _TRISB 000F93  
                         _TRISC 000F94                           _TRISD 000F95                           _TRISE 000F96  
                 __CFG_PWRT$OFF 000000                   __CFG_WRT0$OFF 000000                   __CFG_WRT1$OFF 000000  
                 __CFG_WRT2$OFF 000000                   __CFG_WRT3$OFF 000000                 __end_of_lcdInst 3B02  
                __CFG_EBTR0$OFF 000000                  __CFG_FCMEN$OFF 000000                  __CFG_EBTR1$OFF 000000  
                __CFG_EBTR2$OFF 000000                  __CFG_EBTR3$OFF 000000                   __CFG_WRTB$OFF 000000  
                 __CFG_WRTC$OFF 000000                   __CFG_WRTD$OFF 000000                 __end_of_initLCD 343C  
                __CFG_EBTRB$OFF 000000                           _brake 3A50                           _flags 004E  
                         _dists 0069                           _fputc 343C                 __end_of_isalpha 3852  
                         _fputs 37E0                 __end_of_isdigit 394E                           _servo 39AA  
                         atoi@n 0094                           pad@fp 0094                           atoi@s 0087  
                         _width 004A                           _state 0171                           _putch 3AE2  
                         _start 3674                           main@i 02D6                           main@k 02DE  
                         dtoa@d 00A1                           dtoa@i 00C1                           dtoa@n 00B9  
                         dtoa@p 00B3                           dtoa@s 00B7                           dtoa@w 00B5  
               __end_of_islower 38EA                 __end_of_isspace 37A2                 __end_of_isupper 391C  
                         tablat 000FF5                 send_nibble@data 0081                           plusw2 000FDB  
               __end_of_pulse_e 39AA                           ttemp5 006F                           ttemp6 0072  
                         ttemp7 0076                           status 000FD8     I2C_Master_Read@receivedByte 0082  
               __end_of_stepper 323E                           wtemp8 006F                           xtoa@c 00C4  
                         xtoa@d 00A1                           xtoa@i 00C2                           xtoa@n 00BA  
                         xtoa@p 00B6                           xtoa@w 00B8                           xtoa@x 00A9  
                 _stepper2_back 307A                 __end_of_toupper 3762                ??_servoRotate180 0080  
            __size_ofi2___awdiv 0084                  __CFG_PBADEN$ON 000000                    _toupper$1675 008C  
               __initialization 3572                    __end_of_echo 0D6A                     _system_init 3886  
                  __end_of_atoi 2916                    __end_of_main 126C                    __end_of_dtoa 1E16  
                  __end_of_keys FAFC         __end_of_ultrasonic_main 2278                    __end_of_trig 2EC4  
                  __end_of_xtoa 204C                          ??_echo 0032                          ??_atoi 0089  
                        ??_main 015A                          ??_dtoa 00A9                          ??_trig 0080  
                        ??_xtoa 00AA                   __activetblptr 000002            number_deploy@t_count 0104  
             ?_I2C_Master_Start 0001               ?_I2C_Master_Write 0081            number_deploy@tires_t 0100  
            ??_I2C_Master_Start 0081                          ?_brake 0001                          _ADCON1 000FC1  
            ??_I2C_Master_Write 0083                    ?_send_nibble 0001                          ?_fputc 0084  
              ___llmod@dividend 0080                          ?_fputs 008D                ___awdiv@dividend 0080  
                        ?_servo 0001                          ?_putch 0001                          ?_start 0001  
                        _INT1IE 007F83                          _INT1IF 007F80              stepper2@steps2_adj 00FD  
                        i2l1342 2954                          i2l1271 1AB8                          i2l1282 1B26  
                        i2l1283 1B22                          i2l1349 29D2                          i2l5000 1A68  
                        i2l5020 1ACE                          i2l5014 1AB6                          i2l5008 1A90  
                        i2l5120 2FDE                          i2l5200 2A04                          i2l5050 1B8E  
                        i2l5026 1AEC                          i2l5060 1BC4                          i2l5140 3038  
                        i2l5062 1BC6                          i2l5054 1BB8                          i2l5046 1B6A  
                        i2l5136 3028                          i2l5216 2A44                          i2l5240 3382  
                        i2l5154 3068                          i2l5146 3040                          i2l5242 338A  
                        i2l5234 336C                          i2l5402 09F2                          i2l5148 304C  
                        i2l5180 2964                          i2l5260 33C2                          i2l5252 33AA  
                        i2l5228 335C                          i2l5190 2994                          i2l5192 29BA  
                        i2l5256 33B4                          i2l5424 0AAA                          i2l5186 2982  
                        i2l5418 0A4E                          i2l5426 0AC4                          i2l5188 2988  
                        i2l5452 0BA0                          i2l5436 0B44                          i2l5460 0C16  
                        i2l5198 29F8                          i2l5470 0C96                          i2l5390 0958  
                        i2l5384 0900                          i2l5368 08A4                          i2l5392 0972  
                        i2l5458 0BFC                          i2l5492 0D4E                          i2l5486 0CF2  
                        i2l4944 1972                          i2l4964 19B2                          i2l4948 1976  
                        i2l4990 1A18                          i2l4982 1A00                          i2l4976 19EA  
                        i2l4968 19B6                          i2l5952 37C2                       ??_UI_main 0100  
                 vfpfcnvrt@done 00E1                          _TMR1ON 007E68                  ?_stepper2_back 00FD  
                        _SSPADD 000FC8                          _SSPBUF 000FC9                __end_of___xxtofl 2A56  
   number_deploy@poles_detected 00FB                  __CFG_XINST$OFF 000000                    vfprintf@cfmt 00EB  
                     ??___aodiv 0090                       ??___aomod 0090                          ___wmul 3A28  
                     ??___fldiv 0017                       ??___awdiv 0084                       ??___fltol 002C  
                     ??___lldiv 0088                       ??___llmod 0088                          clear_0 3598  
                        clear_1 35A4                          clear_2 35B4                ___awdiv@quotient 0086  
                     ??_lcdInst 0083                          _printf 3A00                          pad@buf 0096  
                        dtoa@fp 009F                          _strlen 394E                  i2___awdiv@sign 0006  
                     ??_initLCD 0084                          fputc@c 0084                          fputs@c 0091  
                        fputs@i 0092                    __pdataCOMRAM 0069                          fputs@s 008D  
                     ??_isalpha 0082                       ??_isdigit 0082               __end_ofi2___awdiv 33CC  
                     ??_islower 0082                    __mediumconst FAEA                       ??_isspace 0082  
                        tblptrh 000FF7                       ??_isupper 0082                          tblptrl 000FF6  
                        tblptru 000FF8                __end_of_vfprintf 3674                       ??_pulse_e 0080  
              __end_of_stepper2 2FC0  ultrasonic_main@min_us_dist_914 0108                       ??_stepper 00FF  
                        xtoa@fp 009F                       ??_toupper 0088                    ___xxtofl@arg 000B  
         pulse_e@interruptState 0080                    ___xxtofl@exp 000A                    ___xxtofl@val 0001  
                    __accesstop 0080         __end_of__initialization 35BA                  _actuators_main 2A56  
                 ___rparam_used 000001                      ___fltol@f1 0028                    stepper@i_376 0104  
            __size_of_backwards 0026             full_drive@direction 00FC                  __pcstackCOMRAM 0001  
                  stepper@stack 00FD                ?_ultrasonic_main 00FA                   __end_of_brake 3A76  
                 __end_of_fputc 34AA                   __end_of_fputs 381C                   __end_of_servo 39D6  
                 __end_of_putch 3AF2                   __end_of_start 36C6                 _key_was_pressed 0177  
         number_deploy@avg_dist 00F9                         ??_brake 0083                         ??_fputc 0088  
                       ??_fputs 0091                         ??_servo 0083                         ??_putch 0083  
                       ??_start 0095                 ??_stepper2_back 0100                      __pbssBANK0 00FF  
                    __pbssBANK1 015C                      __pbssBANK2 0200          __end_of_actuators_main 2B8C  
                       ?___wmul 0080              __size_of_send_byte 0018                         ?_printf 00ED  
        stepper2_back@direction 0101                         ?_strlen 0080           __end_of_number_deploy 249A  
                     ?___xxtofl 0001               __end_of_backwards 3A9C              __size_of_vfpfcnvrt 03AA  
                    _dist_final 0250                         _SSPCON1 000FC6                         _SSPCON2 000FC5  
                       _SSPSTAT 000FC7                         _UI_main 0012            __size_of_send_nibble 001A  
               ?_actuators_main 010C                         __Hparam 0000                         __Lparam 0000  
                  ?_system_init 0001                         ___aodiv 2688                         ___aomod 2B8C  
                       ___fldiv 1946                         ___awdiv 323E                         ___fltol 2FC0  
                       ___lldiv 32C4                 __size_of___wmul 0028                         ___llmod 34AA  
                     ?_vfprintf 00E5                       ?_stepper2 00FD                 __CFG_STVREN$OFF 000000  
                       __pcinit 3572                      _full_drive 1616                         __ramtop 1000  
                       _lcdInst 3AF2                         __ptext0 0D6A                         __ptext1 204C  
                       __ptext2 2DC2                         __ptext3 249A                         __ptext4 2CB2  
                       __ptext5 3674                         __ptext6 2278                         __ptext7 323E  
                       __ptext8 3A50                         __ptext9 3A76                 __size_of_printf 0028  
               __size_of_strlen 002E                         _initLCD 33CC                    __size_of_ISR 37D8  
                       _counter 0060                    __size_of_abs 0034                    __size_of_pad 009C  
                       _isalpha 381C                    __size_of_min 0110                         _isdigit 391C  
                    ??___xxtofl 0005                         _islower 38B8                         _isspace 3762  
                       _isupper 38EA        __size_of_I2C_Master_Init 0060        __size_of_I2C_Master_Read 002A  
      __size_of_I2C_Master_Wait 0014        __size_of_I2C_Master_Stop 0008                 _prev_dist_final 015C  
                       _pressed 016B                         atoi@neg 008D                         _pulse_e 397C  
                       _stepper 31B6                  __pintcode_body 37A2                         _toupper 3716  
          end_of_initialization 35BA                         min@size 0082             main@arduino_stopped 02DB  
         __end_of_LCD_SIZE_HORZ FB01               __end_of_send_byte 3ACE           __end_of_LCD_SIZE_VERT FB00  
                       fputc@fp 0086                   __Lmediumconst FAEA                         int_func 37A2  
                       fputs@fp 008F       __size_of_I2C_Master_Start 0008       __size_of_I2C_Master_Write 000A  
               ___lldiv@divisor 0084                 ___lldiv@counter 008C               __end_of_vfpfcnvrt 1616  
                 ?_servoRotate0 0001                  main@steps2_adj 02D4                         postdec1 000FE5  
                       postdec2 000FDD                         postinc0 000FEE                         postinc1 000FE6  
                       postinc2 000FDE                      ??_vfprintf 00EB                      ??_stepper2 0100  
                       strlen@a 0082                         strlen@s 0080                       _PORTAbits 000F80  
                    _print_echo 249A                   stepper2@i_384 0107                   ___xxtofl@sign 0009  
                     _TRISAbits 000F92                       _TRISBbits 000F93                       _TRISCbits 000F94  
                   ___fldiv@grs 0022                     ___fldiv@rem 001B                      main@i_1026 02E4  
                    main@i_1018 02D8                       i2___awdiv 3348     ultrasonic_main@step2_offset 0104  
                 send_byte@data 0082              i2___awdiv@dividend 0001           UI_main@poles_detected 00FB  
                ??_servoRotate0 0080     number_deploy@tires_detected 0102                     vfpfcnvrt@ap 00CA  
                   vfpfcnvrt@fp 00C6                     vfpfcnvrt@ll 00D0                  __end_of___wmul 3A50  
                   ?_full_drive 00F9         __size_of_servoRotate180 0056                   __pidataCOMRAM 3B1C  
                __end_of_printf 3A28                  __end_of_strlen 397C             start_initialization 3572  
                    min@minimum 0087              i2___awdiv@quotient 0007                     __end_of_ISR 37E0  
                   __end_of_abs 3886                     __end_of_pad 31B6                     __end_of_min 2DC2  
         stepper2@count_stepper 0109                      ?i2___awdiv 0001               ??_I2C_Master_Init 0091  
             ??_I2C_Master_Read 0081               ??_I2C_Master_Wait 0080               ??_I2C_Master_Stop 0081  
             main@prev_avg_dist 02E8                  _poles_detected 0052                 ___llmod@divisor 0084  
               ___llmod@counter 0088                    UI_main@t_dep 00F9                     vfprintf@fmt 00E7  
                      ??___wmul 0084        I2C_Master_Init@clockFreq 008D                __CFG_LPT1OSC$OFF 000000  
          __size_of_system_init 0032                        ??_printf 00F5                        ??_strlen 0082  
                   ?_print_echo 0001                       ___fldiv@a 0013                       ___fldiv@b 000F  
      __size_of_ultrasonic_main 022C                     __pbssCOMRAM 0038                   __pcstackBANK0 0080  
                 __pcstackBANK1 0100                   __pcstackBANK2 0280                ___aodiv@dividend 0080  
              ??_actuators_main 0110               __size_of___xxtofl 0140                       _backwards 3A76  
                      ?_UI_main 00F9           __end_of_stepper2_back 311A             __size_of_full_drive 0330  
                     _atoi$1583 008F                       _atoi$1584 0093                       _atoi$1585 0091  
              _I2C_Master_Start 3B14                _I2C_Master_Write 3B02                       _dtoa$1099 00B1  
             __CFG_CCP2MX$PORTC 000000                       __pintcode 0008                   __pmediumconst FAEA  
                      ?___aodiv 0080                        ?___aomod 0080                        ?___fldiv 000F  
                      ?___awdiv 0080                ___aodiv@quotient 0092                        ?___fltol 0028  
                      ?___lldiv 0080                        ?___llmod 0080                        ?_lcdInst 0001  
             __size_of_vfprintf 0056               __size_of_stepper2 00FC            full_drive@stepper_no 00F9  
                      ?_initLCD 0001                        ?_isalpha 0080                        ?_isdigit 0080  
                      ?_islower 0080                        ?_isspace 0080                        ?_isupper 0080  
          __end_of_servoRotate0 3716                   ??_send_nibble 0081                        ?_pulse_e 0001  
                __size_of_brake 0026                     ??i2___awdiv 0005                        ?_stepper 00FD  
                __size_of_fputc 006E                  __size_of_fputs 003C                        ?_toupper 0086  
                __size_of_servo 002C                      ?_backwards 0001                  __size_of_putch 0010  
                __size_of_start 0052                  ___wmul@product 0084                        _LATAbits 000F89  
                      _LATBbits 000F8A                        _LATCbits 000F8B                        _LATDbits 000F8C  
                      _LATEbits 000F8D                        UI_main@i 0159                main@pole_cl_dist 02D2  
                     _send_byte 3AB6             __size_of_print_echo 01EE          __size_of_number_deploy 0222  
                _LCD_LINE1_ADDR FAFE                  _LCD_LINE2_ADDR FB01                  _LCD_LINE3_ADDR FAFD  
                _LCD_LINE4_ADDR FAFC                        i2u503_40 3052                        i2u521_40 338E  
                      i2u514_40 2A0E                        i2u530_40 08C4                        i2u540_40 0A12  
                      i2u550_40 0B64                        i2u560_40 0CB6                        i2u529_40 08B4  
                      i2u617_40 37CC                        i2u490_40 1B9C                        i2u539_40 0A02  
                      i2u485_40 1B1C                        i2u549_40 0B54                        i2u559_40 0CA6  
                      i2u489_40 1B78                        i2u498_40 2FCC                        i2u499_40 2FFC  
                      i2u499_45 2FF2                __CFG_WDTPS$32768 000000      stepper2_back@count_stepper 0102  
                _servoRotate180 35C8                       _vfpfcnvrt 126C                       _xtoa$1110 00B2  
                     _xtoa$1111 00B4               ___wmul@multiplier 0080                       main@t_dep 02E2  
             i2___awdiv@divisor 0003                       main@stack 02DC               i2___awdiv@counter 0005  
                  _isspace$1610 0086                      vfpfcnvrt@c 00E0             actuators_main@stack 010C  
                     copy_data0 3586               ??_ultrasonic_main 00FC                 UI_main@keypress 0154  
        __end_of_LCD_LINE1_ADDR FAFF                __size_of_UI_main 0814          __end_of_LCD_LINE2_ADDR FB02  
        __end_of_LCD_LINE3_ADDR FAFE          __end_of_LCD_LINE4_ADDR FAFD             __end_of_send_nibble 3AB6  
                    ?_send_byte 0001                     UI_main@Pole 0104                        __Hrparam 0000  
                   UI_main@tick 0155                      vfprintf@ap 00E9                        __Lrparam 0000  
                    vfprintf@fp 00E5              __CFG_BOREN$SBORDIS 000000          __end_of_servoRotate180 361E  
              __size_of___aodiv 014A                __size_of___aomod 0126                __size_of___fldiv 0288  
              __size_of___awdiv 0086                __size_of___fltol 00BA                __size_of___lldiv 0084  
              __size_of___llmod 0068                    ??_full_drive 00FB                      ?_vfpfcnvrt 00C6  
               ___aodiv@divisor 0088                 ___aodiv@counter 0090                __size_of_lcdInst 0010  
      actuators_main@steps2_adj 010E                   _number_deploy 2278                 _I2C_Master_Init 3512  
               _I2C_Master_Read 39D6                __size_of_initLCD 0070                        ___xxtofl 2916  
               _I2C_Master_Wait 3ACE                 _I2C_Master_Stop 3B0C                __size_of_isalpha 0036  
              __size_of_isdigit 0032                __size_of_islower 0032                __size_of_isspace 0040  
                      __ptext10 2A56                        __ptext11 3886                        __ptext20 3A00  
                      __ptext12 307A                        __ptext21 361E                        __ptext13 2EC4  
                      __ptext30 394E                        __ptext22 126C                        __ptext14 31B6  
                      __ptext31 37E0                        __ptext23 1E16                        __ptext15 1616  
                      __ptext40 3A28                        __ptext32 343C                        __ptext24 3716  
                      __ptext16 39AA                        __ptext41 33CC                        __ptext33 3AE2  
                      __ptext25 38B8                        __ptext17 35C8                        __ptext50 39D6  
                      __ptext42 3AF2                        __ptext34 3852                        __ptext26 38EA  
                      __ptext18 36C6                        __ptext51 3ACE                        __ptext43 3AB6  
                      __ptext35 2B8C                        __ptext27 381C                        __ptext19 0012  
                      __ptext52 3512                        __ptext44 3A9C                        __ptext36 2688  
                      __ptext28 1BCE                        __ptext53 32C4                        __ptext45 397C  
                      __ptext37 27D2                        __ptext29 311A                        __ptext46 34AA  
                      __ptext38 3762                        __ptext55 0826                        __ptext47 3B02  
                      __ptext39 391C                        __ptext56 3348                        __ptext48 3B0C  
                      __ptext57 2916                        __ptext49 3B14                        __ptext58 2FC0  
                      __ptext59 1946                __size_of_isupper 0032                        _avg_dist 0044  
              __size_of_pulse_e 002E                     ??_backwards 0083                __size_of_stepper 0088  
              __size_of_toupper 004C                   __size_of_echo 0544                   __size_of_atoi 0144  
                 __size_of_main 0502                   __size_of_dtoa 0248         stepper2_back@steps2_adj 00FD  
                 __size_of_trig 0102                   __size_of_xtoa 0236              __end_of_full_drive 1946  
                      _keypress 005F                        _temp_int 0173                 ?_servoRotate180 0001  
                      int$flags 006E                        _vfprintf 361E                        main@Pole 0280  
                      _stepper2 2EC4                       printf@fmt 00ED     I2C_Master_Write@byteToWrite 0081  
              ___aomod@dividend 0080           __size_of_servoRotate0 0050                        min@array 0080  
                  ??_print_echo 00F9                  ?_number_deploy 00F9                       putch@data 0083  
                _vfpfcnvrt$1125 00E3        __end_of_I2C_Master_Start 3B1C        __end_of_I2C_Master_Write 3B0C  
                    _INTCONbits 000FF2           ultrasonic_main@sensed 0102                        isalpha@c 0080  
                      isdigit@c 0080                       stepper2@i 0105                     _send_nibble 3A9C  
                      intlevel2 0000                   _LCD_SIZE_HORZ FB00                        islower@c 0080  
                 _LCD_SIZE_VERT FAFF                        isspace@c 0080                ___lldiv@dividend 0080  
                   ??_send_byte 0082                        isupper@c 0080                  _tires_deployed 0054  
            __end_of_print_echo 2688                   ??_system_init 0080                    _servoRotate0 36C6  
                      printf@ap 00F7         __end_of_I2C_Master_Init 3572                 ___aomod@divisor 0088  
       __end_of_I2C_Master_Read 3A00         __end_of_I2C_Master_Wait 3AE2         __end_of_I2C_Master_Stop 3B14  
                   ??_vfpfcnvrt 00CC                     lcdInst@data 0083                 ___aomod@counter 0090  
                      stepper@i 0102       ultrasonic_main@steps2_adj 0106                ___lldiv@quotient 0088  
                      toupper@c 0086                     _SSPCON1bits 000FC6                     _SSPCON2bits 000FC5  
                   _timer_count 005C                    ___aodiv@sign 0091                    ___aomod@sign 0091  
          stepper@count_stepper 0100  
