

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Apr 06 15:13:14 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1,inline
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1,inline
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    73                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    80                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    81                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    82  0000                     
    83                           ; Version 2.05
    84                           ; Generated 20/12/2018 GMT
    85                           ; 
    86                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    87                           ; All rights reserved.
    88                           ; 
    89                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    90                           ; 
    91                           ; Redistribution and use in source and binary forms, with or without modification, are
    92                           ; permitted provided that the following conditions are met:
    93                           ; 
    94                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    95                           ;        conditions and the following disclaimer.
    96                           ; 
    97                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    98                           ;        of conditions and the following disclaimer in the documentation and/or other
    99                           ;        materials provided with the distribution.
   100                           ; 
   101                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   102                           ;        software without specific prior written permission.
   103                           ; 
   104                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   105                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   106                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   107                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   108                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   109                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   110                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   111                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   112                           ; 
   113                           ; 
   114                           ; Code-generator required, PIC18F4620 Definitions
   115                           ; 
   116                           ; SFR Addresses
   117  0000                     
   118                           	psect	idataCOMRAM
   119  003B10                     __pidataCOMRAM:
   120                           	opt callstack 0
   121                           
   122                           ;initializer for _dists
   123  003B10  0000               	dw	0
   124  003B12  FFFF               	dw	65535
   125                           
   126                           ;initializer for _send
   127  003B14  01                 	db	1
   128                           
   129                           	psect	mediumconst
   130  00FB0A                     __pmediumconst:
   131                           	opt callstack 0
   132  00FB0A  00                 	db	0
   133  00FB0B                     _keys:
   134                           	opt callstack 0
   135  00FB0B  31                 	db	49
   136  00FB0C  32                 	db	50
   137  00FB0D  33                 	db	51
   138  00FB0E  41                 	db	65
   139  00FB0F  34                 	db	52
   140  00FB10  35                 	db	53
   141  00FB11  36                 	db	54
   142  00FB12  42                 	db	66
   143  00FB13  37                 	db	55
   144  00FB14  38                 	db	56
   145  00FB15  39                 	db	57
   146  00FB16  43                 	db	67
   147  00FB17  2A                 	db	42
   148  00FB18  30                 	db	48
   149  00FB19  23                 	db	35
   150  00FB1A  44                 	db	68
   151  00FB1B  00                 	db	0
   152  00FB1C                     __end_of_keys:
   153                           	opt callstack 0
   154  00FB1C  50                 	db	80
   155  00FB1D                     __end_of_LCD_LINE4_ADDR:
   156                           	opt callstack 0
   157  00FB1D  10                 	db	16
   158  00FB1E                     __end_of_LCD_LINE3_ADDR:
   159                           	opt callstack 0
   160  00FB1E                     _LCD_LINE1_ADDR:
   161                           	opt callstack 0
   162  00FB1E  00                 	db	0
   163  00FB1F                     __end_of_LCD_LINE1_ADDR:
   164                           	opt callstack 0
   165  00FB1F                     _LCD_SIZE_VERT:
   166                           	opt callstack 0
   167  00FB1F  04                 	db	4
   168  00FB20                     __end_of_LCD_SIZE_VERT:
   169                           	opt callstack 0
   170  00FB20                     _LCD_SIZE_HORZ:
   171                           	opt callstack 0
   172  00FB20  10                 	db	16
   173  00FB21                     __end_of_LCD_SIZE_HORZ:
   174                           	opt callstack 0
   175  00FB21  40                 	db	64
   176  00FB22                     __end_of_LCD_LINE2_ADDR:
   177                           	opt callstack 0
   178  0000                     _PORTAbits	set	3968
   179  0000                     _TRISAbits	set	3986
   180  0000                     _PORTB	set	3969
   181  0000                     _LATBbits	set	3978
   182  0000                     _TRISBbits	set	3987
   183  0000                     _LATDbits	set	3980
   184  0000                     _LATE	set	3981
   185  0000                     _TRISE	set	3990
   186  0000                     _LATC	set	3979
   187  0000                     _TRISC	set	3988
   188  0000                     _TRISD	set	3989
   189  0000                     _LATD	set	3980
   190  0000                     _TRISA	set	3986
   191  0000                     _LATB	set	3978
   192  0000                     _TRISB	set	3987
   193  0000                     _LATAbits	set	3977
   194  0000                     _LATEbits	set	3981
   195  0000                     _LATCbits	set	3979
   196  0000                     _LATA	set	3977
   197  0000                     _TRISCbits	set	3988
   198  0000                     _RB2	set	31754
   199  0000                     _RB3	set	31755
   200  0000                     _RD0	set	31768
   201  0000                     _RD1	set	31769
   202  0000                     _RB4	set	31756
   203  0000                     _RB5	set	31757
   204  0000                     _RB6	set	31758
   205  0000                     _RB7	set	31759
   206  0000                     _RC2	set	31762
   207  0000                     _RC1	set	31761
   208  0000                     _T1CON	set	4045
   209  0000                     _TMR1H	set	4047
   210  0000                     _TMR1L	set	4046
   211  0000                     _ADCON1	set	4033
   212  0000                     _SSPBUF	set	4041
   213  0000                     _SSPCON2bits	set	4037
   214  0000                     _SSPCON1	set	4038
   215  0000                     _SSPADD	set	4040
   216  0000                     _SSPCON1bits	set	4038
   217  0000                     _SSPCON2	set	4037
   218  0000                     _SSPSTAT	set	4039
   219  0000                     _TMR1ON	set	32360
   220  0000                     _INTCONbits	set	4082
   221  0000                     _GIE	set	32663
   222  0000                     _INT1IE	set	32643
   223  0000                     _INT1IF	set	32640
   224  0000                     _RBIE	set	32659
   225  0000                     _RBIF	set	32656
   226  00FB22                     STR_39:
   227  00FB22  50                 	db	80	;'P'
   228  00FB23  25                 	db	37
   229  00FB24  64                 	db	100	;'d'
   230  00FB25  20                 	db	32
   231  00FB26  44                 	db	68	;'D'
   232  00FB27  65                 	db	101	;'e'
   233  00FB28  70                 	db	112	;'p'
   234  00FB29  3A                 	db	58	;':'
   235  00FB2A  25                 	db	37
   236  00FB2B  64                 	db	100	;'d'
   237  00FB2C  2C                 	db	44
   238  00FB2D  54                 	db	84	;'T'
   239  00FB2E  6F                 	db	111	;'o'
   240  00FB2F  74                 	db	116	;'t'
   241  00FB30  3A                 	db	58	;':'
   242  00FB31  25                 	db	37
   243  00FB32  64                 	db	100	;'d'
   244  00FB33  00                 	db	0
   245  00FB34                     STR_29:
   246  00FB34  20                 	db	32
   247  00FB35  20                 	db	32
   248  00FB36  20                 	db	32
   249  00FB37  20                 	db	32
   250  00FB38  20                 	db	32
   251  00FB39  30                 	db	48	;'0'
   252  00FB3A  2D                 	db	45
   253  00FB3B  4D                 	db	77	;'M'
   254  00FB3C  65                 	db	101	;'e'
   255  00FB3D  6E                 	db	110	;'n'
   256  00FB3E  75                 	db	117	;'u'
   257  00FB3F  20                 	db	32
   258  00FB40  20                 	db	32
   259  00FB41  20                 	db	32
   260  00FB42  20                 	db	32
   261  00FB43  20                 	db	32
   262  00FB44  00                 	db	0
   263  00FB45                     STR_46:
   264  00FB45  3C                 	db	60	;'<'
   265  00FB46  2A                 	db	42
   266  00FB47  20                 	db	32
   267  00FB48  20                 	db	32
   268  00FB49  20                 	db	32
   269  00FB4A  30                 	db	48	;'0'
   270  00FB4B  2D                 	db	45
   271  00FB4C  4D                 	db	77	;'M'
   272  00FB4D  65                 	db	101	;'e'
   273  00FB4E  6E                 	db	110	;'n'
   274  00FB4F  75                 	db	117	;'u'
   275  00FB50  20                 	db	32
   276  00FB51  20                 	db	32
   277  00FB52  20                 	db	32
   278  00FB53  20                 	db	32
   279  00FB54  20                 	db	32
   280  00FB55  00                 	db	0
   281  00FB56                     STR_10:
   282  00FB56  44                 	db	68	;'D'
   283  00FB57  69                 	db	105	;'i'
   284  00FB58  73                 	db	115	;'s'
   285  00FB59  74                 	db	116	;'t'
   286  00FB5A  31                 	db	49	;'1'
   287  00FB5B  3D                 	db	61	;'='
   288  00FB5C  25                 	db	37
   289  00FB5D  64                 	db	100	;'d'
   290  00FB5E  2C                 	db	44
   291  00FB5F  41                 	db	65	;'A'
   292  00FB60  76                 	db	118	;'v'
   293  00FB61  67                 	db	103	;'g'
   294  00FB62  3D                 	db	61	;'='
   295  00FB63  25                 	db	37
   296  00FB64  64                 	db	100	;'d'
   297  00FB65  20                 	db	32
   298  00FB66  00                 	db	0
   299  00FB67                     STR_16:
   300  00FB67  44                 	db	68	;'D'
   301  00FB68  69                 	db	105	;'i'
   302  00FB69  73                 	db	115	;'s'
   303  00FB6A  74                 	db	116	;'t'
   304  00FB6B  34                 	db	52	;'4'
   305  00FB6C  3D                 	db	61	;'='
   306  00FB6D  25                 	db	37
   307  00FB6E  64                 	db	100	;'d'
   308  00FB6F  2C                 	db	44
   309  00FB70  41                 	db	65	;'A'
   310  00FB71  76                 	db	118	;'v'
   311  00FB72  67                 	db	103	;'g'
   312  00FB73  3D                 	db	61	;'='
   313  00FB74  25                 	db	37
   314  00FB75  64                 	db	100	;'d'
   315  00FB76  20                 	db	32
   316  00FB77  00                 	db	0
   317  00FB78                     STR_35:
   318  00FB78  20                 	db	32
   319  00FB79  20                 	db	32
   320  00FB7A  20                 	db	32
   321  00FB7B  20                 	db	32
   322  00FB7C  20                 	db	32
   323  00FB7D  30                 	db	48	;'0'
   324  00FB7E  2D                 	db	45
   325  00FB7F  4D                 	db	77	;'M'
   326  00FB80  65                 	db	101	;'e'
   327  00FB81  6E                 	db	110	;'n'
   328  00FB82  75                 	db	117	;'u'
   329  00FB83  20                 	db	32
   330  00FB84  20                 	db	32
   331  00FB85  20                 	db	32
   332  00FB86  23                 	db	35
   333  00FB87  3E                 	db	62	;'>'
   334  00FB88  00                 	db	0
   335  00FB89                     STR_38:
   336  00FB89  3C                 	db	60	;'<'
   337  00FB8A  2A                 	db	42
   338  00FB8B  20                 	db	32
   339  00FB8C  20                 	db	32
   340  00FB8D  20                 	db	32
   341  00FB8E  30                 	db	48	;'0'
   342  00FB8F  2D                 	db	45
   343  00FB90  4D                 	db	77	;'M'
   344  00FB91  65                 	db	101	;'e'
   345  00FB92  6E                 	db	110	;'n'
   346  00FB93  75                 	db	117	;'u'
   347  00FB94  20                 	db	32
   348  00FB95  20                 	db	32
   349  00FB96  20                 	db	32
   350  00FB97  23                 	db	35
   351  00FB98  3E                 	db	62	;'>'
   352  00FB99  00                 	db	0
   353  00FB9A                     STR_21:
   354  00FB9A  64                 	db	100	;'d'
   355  00FB9B  65                 	db	101	;'e'
   356  00FB9C  74                 	db	116	;'t'
   357  00FB9D  2C                 	db	44
   358  00FB9E  25                 	db	37
   359  00FB9F  64                 	db	100	;'d'
   360  00FBA0  2C                 	db	44
   361  00FBA1  20                 	db	32
   362  00FBA2  74                 	db	116	;'t'
   363  00FBA3  63                 	db	99	;'c'
   364  00FBA4  6E                 	db	110	;'n'
   365  00FBA5  74                 	db	116	;'t'
   366  00FBA6  20                 	db	32
   367  00FBA7  25                 	db	37
   368  00FBA8  64                 	db	100	;'d'
   369  00FBA9  00                 	db	0
   370  00FBAA                     STR_12:
   371  00FBAA  44                 	db	68	;'D'
   372  00FBAB  69                 	db	105	;'i'
   373  00FBAC  73                 	db	115	;'s'
   374  00FBAD  74                 	db	116	;'t'
   375  00FBAE  32                 	db	50	;'2'
   376  00FBAF  3D                 	db	61	;'='
   377  00FBB0  25                 	db	37
   378  00FBB1  64                 	db	100	;'d'
   379  00FBB2  2C                 	db	44
   380  00FBB3  41                 	db	65	;'A'
   381  00FBB4  76                 	db	118	;'v'
   382  00FBB5  67                 	db	103	;'g'
   383  00FBB6  3D                 	db	61	;'='
   384  00FBB7  25                 	db	37
   385  00FBB8  64                 	db	100	;'d'
   386  00FBB9  00                 	db	0
   387  00FBBA                     STR_14:
   388  00FBBA  44                 	db	68	;'D'
   389  00FBBB  69                 	db	105	;'i'
   390  00FBBC  73                 	db	115	;'s'
   391  00FBBD  74                 	db	116	;'t'
   392  00FBBE  33                 	db	51	;'3'
   393  00FBBF  3D                 	db	61	;'='
   394  00FBC0  25                 	db	37
   395  00FBC1  64                 	db	100	;'d'
   396  00FBC2  2C                 	db	44
   397  00FBC3  41                 	db	65	;'A'
   398  00FBC4  76                 	db	118	;'v'
   399  00FBC5  67                 	db	103	;'g'
   400  00FBC6  3D                 	db	61	;'='
   401  00FBC7  25                 	db	37
   402  00FBC8  64                 	db	100	;'d'
   403  00FBC9  00                 	db	0
   404  00FBCA                     STR_24:
   405  00FBCA  33                 	db	51	;'3'
   406  00FBCB  20                 	db	32
   407  00FBCC  2D                 	db	45
   408  00FBCD  20                 	db	32
   409  00FBCE  44                 	db	68	;'D'
   410  00FBCF  61                 	db	97	;'a'
   411  00FBD0  74                 	db	116	;'t'
   412  00FBD1  65                 	db	101	;'e'
   413  00FBD2  26                 	db	38
   414  00FBD3  54                 	db	84	;'T'
   415  00FBD4  69                 	db	105	;'i'
   416  00FBD5  6D                 	db	109	;'m'
   417  00FBD6  65                 	db	101	;'e'
   418  00FBD7  20                 	db	32
   419  00FBD8  00                 	db	0
   420  00FBD9                     STR_40:
   421  00FBD9  44                 	db	68	;'D'
   422  00FBDA  69                 	db	105	;'i'
   423  00FBDB  73                 	db	115	;'s'
   424  00FBDC  74                 	db	116	;'t'
   425  00FBDD  54                 	db	84	;'T'
   426  00FBDE  6F                 	db	111	;'o'
   427  00FBDF  53                 	db	83	;'S'
   428  00FBE0  74                 	db	116	;'t'
   429  00FBE1  61                 	db	97	;'a'
   430  00FBE2  72                 	db	114	;'r'
   431  00FBE3  74                 	db	116	;'t'
   432  00FBE4  3A                 	db	58	;':'
   433  00FBE5  25                 	db	37
   434  00FBE6  64                 	db	100	;'d'
   435  00FBE7  00                 	db	0
   436  00FBE8                     STR_28:
   437  00FBE8  4D                 	db	77	;'M'
   438  00FBE9  61                 	db	97	;'a'
   439  00FBEA  63                 	db	99	;'c'
   440  00FBEB  68                 	db	104	;'h'
   441  00FBEC  69                 	db	105	;'i'
   442  00FBED  6E                 	db	110	;'n'
   443  00FBEE  65                 	db	101	;'e'
   444  00FBEF  20                 	db	32
   445  00FBF0  49                 	db	73	;'I'
   446  00FBF1  6E                 	db	110	;'n'
   447  00FBF2  20                 	db	32
   448  00FBF3  55                 	db	85	;'U'
   449  00FBF4  73                 	db	115	;'s'
   450  00FBF5  65                 	db	101	;'e'
   451  00FBF6  00                 	db	0
   452  00FBF7                     STR_48:
   453  00FBF7  25                 	db	37
   454  00FBF8  30                 	db	48	;'0'
   455  00FBF9  32                 	db	50	;'2'
   456  00FBFA  78                 	db	120	;'x'
   457  00FBFB  2F                 	db	47
   458  00FBFC  25                 	db	37
   459  00FBFD  30                 	db	48	;'0'
   460  00FBFE  32                 	db	50	;'2'
   461  00FBFF  78                 	db	120	;'x'
   462  00FC00  2F                 	db	47
   463  00FC01  25                 	db	37
   464  00FC02  30                 	db	48	;'0'
   465  00FC03  32                 	db	50	;'2'
   466  00FC04  78                 	db	120	;'x'
   467  00FC05  00                 	db	0
   468  00FC06                     STR_49:
   469  00FC06  25                 	db	37
   470  00FC07  30                 	db	48	;'0'
   471  00FC08  32                 	db	50	;'2'
   472  00FC09  78                 	db	120	;'x'
   473  00FC0A  3A                 	db	58	;':'
   474  00FC0B  25                 	db	37
   475  00FC0C  30                 	db	48	;'0'
   476  00FC0D  32                 	db	50	;'2'
   477  00FC0E  78                 	db	120	;'x'
   478  00FC0F  3A                 	db	58	;':'
   479  00FC10  25                 	db	37
   480  00FC11  30                 	db	48	;'0'
   481  00FC12  32                 	db	50	;'2'
   482  00FC13  78                 	db	120	;'x'
   483  00FC14  00                 	db	0
   484  00FC15                     STR_37:
   485  00FC15  4E                 	db	78	;'N'
   486  00FC16  6F                 	db	111	;'o'
   487  00FC17  2E                 	db	46
   488  00FC18  20                 	db	32
   489  00FC19  50                 	db	80	;'P'
   490  00FC1A  6F                 	db	111	;'o'
   491  00FC1B  6C                 	db	108	;'l'
   492  00FC1C  65                 	db	101	;'e'
   493  00FC1D  73                 	db	115	;'s'
   494  00FC1E  3A                 	db	58	;':'
   495  00FC1F  20                 	db	32
   496  00FC20  25                 	db	37
   497  00FC21  64                 	db	100	;'d'
   498  00FC22  00                 	db	0
   499  00FC23                     STR_36:
   500  00FC23  4E                 	db	78	;'N'
   501  00FC24  6F                 	db	111	;'o'
   502  00FC25  2E                 	db	46
   503  00FC26  20                 	db	32
   504  00FC27  54                 	db	84	;'T'
   505  00FC28  69                 	db	105	;'i'
   506  00FC29  72                 	db	114	;'r'
   507  00FC2A  65                 	db	101	;'e'
   508  00FC2B  73                 	db	115	;'s'
   509  00FC2C  3A                 	db	58	;':'
   510  00FC2D  20                 	db	32
   511  00FC2E  25                 	db	37
   512  00FC2F  64                 	db	100	;'d'
   513  00FC30  00                 	db	0
   514  00FC31                     STR_7:
   515  00FC31  53                 	db	83	;'S'
   516  00FC32  74                 	db	116	;'t'
   517  00FC33  65                 	db	101	;'e'
   518  00FC34  70                 	db	112	;'p'
   519  00FC35  20                 	db	32
   520  00FC36  73                 	db	115	;'s'
   521  00FC37  70                 	db	112	;'p'
   522  00FC38  65                 	db	101	;'e'
   523  00FC39  65                 	db	101	;'e'
   524  00FC3A  64                 	db	100	;'d'
   525  00FC3B  20                 	db	32
   526  00FC3C  25                 	db	37
   527  00FC3D  64                 	db	100	;'d'
   528  00FC3E  00                 	db	0
   529  00FC3F                     STR_52:
   530  00FC3F  6D                 	db	109	;'m'
   531  00FC40  6F                 	db	111	;'o'
   532  00FC41  72                 	db	114	;'r'
   533  00FC42  65                 	db	101	;'e'
   534  00FC43  20                 	db	32
   535  00FC44  77                 	db	119	;'w'
   536  00FC45  61                 	db	97	;'a'
   537  00FC46  69                 	db	105	;'i'
   538  00FC47  74                 	db	116	;'t'
   539  00FC48  69                 	db	105	;'i'
   540  00FC49  6E                 	db	110	;'n'
   541  00FC4A  67                 	db	103	;'g'
   542  00FC4B  00                 	db	0
   543  00FC4C                     STR_2:
   544  00FC4C  53                 	db	83	;'S'
   545  00FC4D  74                 	db	116	;'t'
   546  00FC4E  65                 	db	101	;'e'
   547  00FC4F  70                 	db	112	;'p'
   548  00FC50  70                 	db	112	;'p'
   549  00FC51  65                 	db	101	;'e'
   550  00FC52  72                 	db	114	;'r'
   551  00FC53  20                 	db	32
   552  00FC54  64                 	db	100	;'d'
   553  00FC55  6F                 	db	111	;'o'
   554  00FC56  6E                 	db	110	;'n'
   555  00FC57  65                 	db	101	;'e'
   556  00FC58  00                 	db	0
   557  00FC59                     STR_47:
   558  00FC59  44                 	db	68	;'D'
   559  00FC5A  41                 	db	65	;'A'
   560  00FC5B  54                 	db	84	;'T'
   561  00FC5C  45                 	db	69	;'E'
   562  00FC5D  20                 	db	32
   563  00FC5E  26                 	db	38
   564  00FC5F  20                 	db	32
   565  00FC60  54                 	db	84	;'T'
   566  00FC61  49                 	db	73	;'I'
   567  00FC62  4D                 	db	77	;'M'
   568  00FC63  45                 	db	69	;'E'
   569  00FC64  00                 	db	0
   570  00FC65                     STR_20:
   571  00FC65  73                 	db	115	;'s'
   572  00FC66  74                 	db	116	;'t'
   573  00FC67  65                 	db	101	;'e'
   574  00FC68  70                 	db	112	;'p'
   575  00FC69  73                 	db	115	;'s'
   576  00FC6A  61                 	db	97	;'a'
   577  00FC6B  64                 	db	100	;'d'
   578  00FC6C  6A                 	db	106	;'j'
   579  00FC6D  20                 	db	32
   580  00FC6E  25                 	db	37
   581  00FC6F  64                 	db	100	;'d'
   582  00FC70  00                 	db	0
   583  00FC71                     STR_55:
   584  00FC71  61                 	db	97	;'a'
   585  00FC72  76                 	db	118	;'v'
   586  00FC73  67                 	db	103	;'g'
   587  00FC74  20                 	db	32
   588  00FC75  64                 	db	100	;'d'
   589  00FC76  69                 	db	105	;'i'
   590  00FC77  73                 	db	115	;'s'
   591  00FC78  74                 	db	116	;'t'
   592  00FC79  20                 	db	32
   593  00FC7A  25                 	db	37
   594  00FC7B  64                 	db	100	;'d'
   595  00FC7C  00                 	db	0
   596  00FC7D                     STR_41:
   597  00FC7D  44                 	db	68	;'D'
   598  00FC7E  69                 	db	105	;'i'
   599  00FC7F  73                 	db	115	;'s'
   600  00FC80  74                 	db	116	;'t'
   601  00FC81  54                 	db	84	;'T'
   602  00FC82  6F                 	db	111	;'o'
   603  00FC83  43                 	db	67	;'C'
   604  00FC84  4C                 	db	76	;'L'
   605  00FC85  3A                 	db	58	;':'
   606  00FC86  25                 	db	37
   607  00FC87  64                 	db	100	;'d'
   608  00FC88  00                 	db	0
   609  00FC89                     STR_23:
   610  00FC89  32                 	db	50	;'2'
   611  00FC8A  20                 	db	32
   612  00FC8B  2D                 	db	45
   613  00FC8C  20                 	db	32
   614  00FC8D  53                 	db	83	;'S'
   615  00FC8E  75                 	db	117	;'u'
   616  00FC8F  6D                 	db	109	;'m'
   617  00FC90  6D                 	db	109	;'m'
   618  00FC91  61                 	db	97	;'a'
   619  00FC92  72                 	db	114	;'r'
   620  00FC93  79                 	db	121	;'y'
   621  00FC94  00                 	db	0
   622  00FC95                     STR_56:
   623  00FC95  70                 	db	112	;'p'
   624  00FC96  6F                 	db	111	;'o'
   625  00FC97  6C                 	db	108	;'l'
   626  00FC98  65                 	db	101	;'e'
   627  00FC99  73                 	db	115	;'s'
   628  00FC9A  20                 	db	32
   629  00FC9B  64                 	db	100	;'d'
   630  00FC9C  20                 	db	32
   631  00FC9D  25                 	db	37
   632  00FC9E  64                 	db	100	;'d'
   633  00FC9F  00                 	db	0
   634  00FCA0                     STR_18:
   635  00FCA0  6D                 	db	109	;'m'
   636  00FCA1  69                 	db	105	;'i'
   637  00FCA2  6E                 	db	110	;'n'
   638  00FCA3  69                 	db	105	;'i'
   639  00FCA4  6D                 	db	109	;'m'
   640  00FCA5  75                 	db	117	;'u'
   641  00FCA6  6D                 	db	109	;'m'
   642  00FCA7  20                 	db	32
   643  00FCA8  25                 	db	37
   644  00FCA9  64                 	db	100	;'d'
   645  00FCAA  00                 	db	0
   646  00FCAB                     STR_57:
   647  00FCAB  70                 	db	112	;'p'
   648  00FCAC  6F                 	db	111	;'o'
   649  00FCAD  6C                 	db	108	;'l'
   650  00FCAE  65                 	db	101	;'e'
   651  00FCAF  73                 	db	115	;'s'
   652  00FCB0  20                 	db	32
   653  00FCB1  64                 	db	100	;'d'
   654  00FCB2  6F                 	db	111	;'o'
   655  00FCB3  6E                 	db	110	;'n'
   656  00FCB4  65                 	db	101	;'e'
   657  00FCB5  00                 	db	0
   658  00FCB6                     STR_3:
   659  00FCB6  53                 	db	83	;'S'
   660  00FCB7  65                 	db	101	;'e'
   661  00FCB8  72                 	db	114	;'r'
   662  00FCB9  76                 	db	118	;'v'
   663  00FCBA  6F                 	db	111	;'o'
   664  00FCBB  20                 	db	32
   665  00FCBC  64                 	db	100	;'d'
   666  00FCBD  6F                 	db	111	;'o'
   667  00FCBE  6E                 	db	110	;'n'
   668  00FCBF  65                 	db	101	;'e'
   669  00FCC0  00                 	db	0
   670  00FCC1                     STR_11:
   671  00FCC1  44                 	db	68	;'D'
   672  00FCC2  69                 	db	105	;'i'
   673  00FCC3  73                 	db	115	;'s'
   674  00FCC4  74                 	db	116	;'t'
   675  00FCC5  31                 	db	49	;'1'
   676  00FCC6  20                 	db	32
   677  00FCC7  3D                 	db	61	;'='
   678  00FCC8  20                 	db	32
   679  00FCC9  58                 	db	88	;'X'
   680  00FCCA  00                 	db	0
   681  00FCCB                     STR_13:
   682  00FCCB  44                 	db	68	;'D'
   683  00FCCC  69                 	db	105	;'i'
   684  00FCCD  73                 	db	115	;'s'
   685  00FCCE  74                 	db	116	;'t'
   686  00FCCF  32                 	db	50	;'2'
   687  00FCD0  20                 	db	32
   688  00FCD1  3D                 	db	61	;'='
   689  00FCD2  20                 	db	32
   690  00FCD3  58                 	db	88	;'X'
   691  00FCD4  00                 	db	0
   692  00FCD5                     STR_15:
   693  00FCD5  44                 	db	68	;'D'
   694  00FCD6  69                 	db	105	;'i'
   695  00FCD7  73                 	db	115	;'s'
   696  00FCD8  74                 	db	116	;'t'
   697  00FCD9  33                 	db	51	;'3'
   698  00FCDA  20                 	db	32
   699  00FCDB  3D                 	db	61	;'='
   700  00FCDC  20                 	db	32
   701  00FCDD  58                 	db	88	;'X'
   702  00FCDE  00                 	db	0
   703  00FCDF                     STR_17:
   704  00FCDF  44                 	db	68	;'D'
   705  00FCE0  69                 	db	105	;'i'
   706  00FCE1  73                 	db	115	;'s'
   707  00FCE2  74                 	db	116	;'t'
   708  00FCE3  34                 	db	52	;'4'
   709  00FCE4  20                 	db	32
   710  00FCE5  3D                 	db	61	;'='
   711  00FCE6  20                 	db	32
   712  00FCE7  58                 	db	88	;'X'
   713  00FCE8  00                 	db	0
   714  00FCE9                     STR_58:
   715  00FCE9  62                 	db	98	;'b'
   716  00FCEA  61                 	db	97	;'a'
   717  00FCEB  63                 	db	99	;'c'
   718  00FCEC  6B                 	db	107	;'k'
   719  00FCED  77                 	db	119	;'w'
   720  00FCEE  61                 	db	97	;'a'
   721  00FCEF  72                 	db	114	;'r'
   722  00FCF0  64                 	db	100	;'d'
   723  00FCF1  73                 	db	115	;'s'
   724  00FCF2  00                 	db	0
   725  00FCF3                     STR_53:
   726  00FCF3  64                 	db	100	;'d'
   727  00FCF4  6F                 	db	111	;'o'
   728  00FCF5  6E                 	db	110	;'n'
   729  00FCF6  65                 	db	101	;'e'
   730  00FCF7  20                 	db	32
   731  00FCF8  77                 	db	119	;'w'
   732  00FCF9  61                 	db	97	;'a'
   733  00FCFA  69                 	db	105	;'i'
   734  00FCFB  74                 	db	116	;'t'
   735  00FCFC  00                 	db	0
   736  00FCFD                     STR_22:
   737  00FCFD  31                 	db	49	;'1'
   738  00FCFE  20                 	db	32
   739  00FCFF  2D                 	db	45
   740  00FD00  20                 	db	32
   741  00FD01  53                 	db	83	;'S'
   742  00FD02  74                 	db	116	;'t'
   743  00FD03  61                 	db	97	;'a'
   744  00FD04  72                 	db	114	;'r'
   745  00FD05  74                 	db	116	;'t'
   746  00FD06  00                 	db	0
   747  00FD07                     STR_5:
   748  00FD07  73                 	db	115	;'s'
   749  00FD08  74                 	db	116	;'t'
   750  00FD09  65                 	db	101	;'e'
   751  00FD0A  70                 	db	112	;'p'
   752  00FD0B  70                 	db	112	;'p'
   753  00FD0C  70                 	db	112	;'p'
   754  00FD0D  20                 	db	32
   755  00FD0E  25                 	db	37
   756  00FD0F  64                 	db	100	;'d'
   757  00FD10  00                 	db	0
   758  00FD11                     STR_1:
   759  00FD11  63                 	db	99	;'c'
   760  00FD12  6E                 	db	110	;'n'
   761  00FD13  74                 	db	116	;'t'
   762  00FD14  20                 	db	32
   763  00FD15  69                 	db	105	;'i'
   764  00FD16  73                 	db	115	;'s'
   765  00FD17  20                 	db	32
   766  00FD18  25                 	db	37
   767  00FD19  64                 	db	100	;'d'
   768  00FD1A  00                 	db	0
   769  00FD1B                     STR_30:
   770  00FD1B  4F                 	db	79	;'O'
   771  00FD1C  70                 	db	112	;'p'
   772  00FD1D  20                 	db	32
   773  00FD1E  54                 	db	84	;'T'
   774  00FD1F  69                 	db	105	;'i'
   775  00FD20  6D                 	db	109	;'m'
   776  00FD21  65                 	db	101	;'e'
   777  00FD22  3A                 	db	58	;':'
   778  00FD23  00                 	db	0
   779  00FD24                     STR_6:
   780  00FD24  73                 	db	115	;'s'
   781  00FD25  74                 	db	116	;'t'
   782  00FD26  65                 	db	101	;'e'
   783  00FD27  70                 	db	112	;'p'
   784  00FD28  31                 	db	49	;'1'
   785  00FD29  00                 	db	0
   786  00FD2A                     STR_9:
   787  00FD2A  77                 	db	119	;'w'
   788  00FD2B  68                 	db	104	;'h'
   789  00FD2C  61                 	db	97	;'a'
   790  00FD2D  74                 	db	116	;'t'
   791  00FD2E  00                 	db	0
   792  0000                     
   793                           ; #config settings
   794  00FD2F  00                 	db	0	; dummy byte at the end
   795  0000                     
   796                           	psect	cinit
   797  003566                     __pcinit:
   798                           	opt callstack 0
   799  003566                     start_initialization:
   800                           	opt callstack 0
   801  003566                     __initialization:
   802                           	opt callstack 0
   803                           
   804                           ; Initialize objects allocated to COMRAM (5 bytes)
   805                           ; load TBLPTR registers with __pidataCOMRAM
   806  003566  0E10               	movlw	low __pidataCOMRAM
   807  003568  6EF6               	movwf	tblptrl,c
   808  00356A  0E3B               	movlw	high __pidataCOMRAM
   809  00356C  6EF7               	movwf	tblptrh,c
   810  00356E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   811  003570  6EF8               	movwf	tblptru,c
   812  003572  EE00  F069         	lfsr	0,__pdataCOMRAM
   813  003576  EE10 F005          	lfsr	1,5
   814  00357A                     copy_data0:
   815  00357A  0009               	tblrd		*+
   816  00357C  CFF5 FFEE          	movff	tablat,postinc0
   817  003580  50E5               	movf	postdec1,w,c
   818  003582  50E1               	movf	fsr1l,w,c
   819  003584  E1FA               	bnz	copy_data0
   820                           
   821                           ; Clear objects allocated to BANK2 (127 bytes)
   822  003586  EE02  F000         	lfsr	0,__pbssBANK2
   823  00358A  0E7F               	movlw	127
   824  00358C                     clear_0:
   825  00358C  6AEE               	clrf	postinc0,c
   826  00358E  06E8               	decf	wreg,f,c
   827  003590  E1FD               	bnz	clear_0
   828                           
   829                           ; Clear objects allocated to BANK1 (61 bytes)
   830  003592  EE01  F05C         	lfsr	0,__pbssBANK1
   831  003596  0E3D               	movlw	61
   832  003598                     clear_1:
   833  003598  6AEE               	clrf	postinc0,c
   834  00359A  06E8               	decf	wreg,f,c
   835  00359C  E1FD               	bnz	clear_1
   836                           
   837                           ; Clear objects allocated to BANK0 (1 bytes)
   838  00359E  0100               	movlb	0
   839  0035A0  6BFF               	clrf	__pbssBANK0& (0+255),b
   840                           
   841                           ; Clear objects allocated to COMRAM (49 bytes)
   842  0035A2  EE00  F038         	lfsr	0,__pbssCOMRAM
   843  0035A6  0E31               	movlw	49
   844  0035A8                     clear_2:
   845  0035A8  6AEE               	clrf	postinc0,c
   846  0035AA  06E8               	decf	wreg,f,c
   847  0035AC  E1FD               	bnz	clear_2
   848  0035AE                     end_of_initialization:
   849                           	opt callstack 0
   850  0035AE                     __end_of__initialization:
   851                           	opt callstack 0
   852  0035AE  906E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   853  0035B0  926E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   854  0035B2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   855  0035B4  6EF8               	movwf	tblptru,c
   856  0035B6  0100               	movlb	0
   857  0035B8  EFB5  F006         	goto	_main	;jump to C main() function
   858                           
   859                           	psect	bssCOMRAM
   860  000038                     __pbssCOMRAM:
   861                           	opt callstack 0
   862  000038                     _sum:
   863                           	opt callstack 0
   864  000038                     	ds	8
   865  000040                     _sumf:
   866                           	opt callstack 0
   867  000040                     	ds	4
   868  000044                     _avg_dist:
   869                           	opt callstack 0
   870  000044                     	ds	4
   871  000048                     _nout:
   872                           	opt callstack 0
   873  000048                     	ds	2
   874  00004A                     _width:
   875                           	opt callstack 0
   876  00004A                     	ds	2
   877  00004C                     _prec:
   878                           	opt callstack 0
   879  00004C                     	ds	2
   880  00004E                     _flags:
   881                           	opt callstack 0
   882  00004E                     	ds	2
   883  000050                     _meas:
   884                           	opt callstack 0
   885  000050                     	ds	2
   886  000052                     _poles_detected:
   887                           	opt callstack 0
   888  000052                     	ds	2
   889  000054                     _tires_deployed:
   890                           	opt callstack 0
   891  000054                     	ds	2
   892  000056                     _tick:
   893                           	opt callstack 0
   894  000056                     	ds	2
   895  000058                     _sens:
   896                           	opt callstack 0
   897  000058                     	ds	2
   898  00005A                     _b:
   899                           	opt callstack 0
   900  00005A                     	ds	2
   901  00005C                     _timer_count:
   902                           	opt callstack 0
   903  00005C                     	ds	2
   904  00005E                     _data:
   905                           	opt callstack 0
   906  00005E                     	ds	1
   907  00005F                     _keypress:
   908                           	opt callstack 0
   909  00005F                     	ds	1
   910  000060                     _counter:
   911                           	opt callstack 0
   912  000060                     	ds	1
   913  000061                     _a:
   914                           	opt callstack 0
   915  000061                     	ds	8
   916                           
   917                           	psect	dataCOMRAM
   918  000069                     __pdataCOMRAM:
   919                           	opt callstack 0
   920  000069                     _dists:
   921                           	opt callstack 0
   922  000069                     	ds	4
   923  00006D                     _send:
   924                           	opt callstack 0
   925  00006D                     	ds	1
   926                           
   927                           	psect	bssBANK0
   928  0000FF                     __pbssBANK0:
   929                           	opt callstack 0
   930  0000FF                     _temp:
   931                           	opt callstack 0
   932  0000FF                     	ds	1
   933                           
   934                           	psect	bssBANK1
   935  00015C                     __pbssBANK1:
   936                           	opt callstack 0
   937  00015C                     _pressed:
   938                           	opt callstack 0
   939  00015C                     	ds	2
   940  00015E                     _i:
   941                           	opt callstack 0
   942  00015E                     	ds	2
   943  000160                     _disp:
   944                           	opt callstack 0
   945  000160                     	ds	2
   946  000162                     _state:
   947                           	opt callstack 0
   948  000162                     	ds	2
   949  000164                     _temp_int:
   950                           	opt callstack 0
   951  000164                     	ds	2
   952  000166                     _cnt:
   953                           	opt callstack 0
   954  000166                     	ds	2
   955  000168                     _key_was_pressed:
   956                           	opt callstack 0
   957  000168                     	ds	1
   958  000169                     _dist_final:
   959                           	opt callstack 0
   960  000169                     	ds	48
   961                           
   962                           	psect	bssBANK2
   963  000200                     __pbssBANK2:
   964                           	opt callstack 0
   965  000200                     _Pole:
   966                           	opt callstack 0
   967  000200                     	ds	80
   968  000250                     _prev_dist_final:
   969                           	opt callstack 0
   970  000250                     	ds	8
   971  000258                     _time:
   972                           	opt callstack 0
   973  000258                     	ds	7
   974  00025F                     _dbuf:
   975                           	opt callstack 0
   976  00025F                     	ds	32
   977                           
   978                           	psect	cstackBANK2
   979  00027F                     __pcstackBANK2:
   980                           	opt callstack 0
   981  00027F                     main@Pole:
   982                           	opt callstack 0
   983                           
   984                           ; 80 bytes @ 0x0
   985  00027F                     	ds	82
   986  0002D1                     main@pole_cl_dist:
   987                           	opt callstack 0
   988                           
   989                           ; 2 bytes @ 0x52
   990  0002D1                     	ds	2
   991  0002D3                     main@steps2_adj:
   992                           	opt callstack 0
   993                           
   994                           ; 2 bytes @ 0x54
   995  0002D3                     	ds	2
   996  0002D5                     main@i:
   997                           	opt callstack 0
   998                           
   999                           ; 2 bytes @ 0x56
  1000  0002D5                     	ds	2
  1001  0002D7                     main@i_1018:
  1002                           	opt callstack 0
  1003                           
  1004                           ; 2 bytes @ 0x58
  1005  0002D7                     	ds	2
  1006  0002D9                     main@stack:
  1007                           	opt callstack 0
  1008                           
  1009                           ; 2 bytes @ 0x5A
  1010  0002D9                     	ds	2
  1011  0002DB                     main@t_count:
  1012                           	opt callstack 0
  1013                           
  1014                           ; 2 bytes @ 0x5C
  1015  0002DB                     	ds	2
  1016  0002DD                     main@k:
  1017                           	opt callstack 0
  1018                           
  1019                           ; 2 bytes @ 0x5E
  1020  0002DD                     	ds	2
  1021  0002DF                     main@t_dep:
  1022                           	opt callstack 0
  1023                           
  1024                           ; 2 bytes @ 0x60
  1025  0002DF                     	ds	2
  1026  0002E1                     main@i_1026:
  1027                           	opt callstack 0
  1028                           
  1029                           ; 2 bytes @ 0x62
  1030  0002E1                     	ds	2
  1031  0002E3                     main@poles_detected:
  1032                           	opt callstack 0
  1033                           
  1034                           ; 2 bytes @ 0x64
  1035  0002E3                     	ds	2
  1036  0002E5                     main@prev_avg_dist:
  1037                           	opt callstack 0
  1038                           
  1039                           ; 4 bytes @ 0x66
  1040  0002E5                     	ds	4
  1041                           
  1042                           	psect	cstackBANK1
  1043  000100                     __pcstackBANK1:
  1044                           	opt callstack 0
  1045  000100                     ??_stepper2:
  1046  000100                     ??_stepper2_back:
  1047  000100                     ??_UI_main:
  1048  000100                     stepper@count_stepper:
  1049                           	opt callstack 0
  1050  000100                     number_deploy@tires_t:
  1051                           	opt callstack 0
  1052                           
  1053                           ; 2 bytes @ 0x0
  1054  000100                     	ds	1
  1055  000101                     stepper2_back@direction:
  1056                           	opt callstack 0
  1057                           
  1058                           ; 1 bytes @ 0x1
  1059  000101                     	ds	1
  1060  000102                     stepper@i:
  1061                           	opt callstack 0
  1062  000102                     stepper2_back@count_stepper:
  1063                           	opt callstack 0
  1064  000102                     ultrasonic_main@sensed:
  1065                           	opt callstack 0
  1066  000102                     number_deploy@tires_detected:
  1067                           	opt callstack 0
  1068                           
  1069                           ; 2 bytes @ 0x2
  1070  000102                     	ds	2
  1071  000104                     stepper@i_376:
  1072                           	opt callstack 0
  1073  000104                     stepper2_back@i:
  1074                           	opt callstack 0
  1075  000104                     ultrasonic_main@step2_offset:
  1076                           	opt callstack 0
  1077  000104                     number_deploy@t_count:
  1078                           	opt callstack 0
  1079  000104                     UI_main@Pole:
  1080                           	opt callstack 0
  1081                           
  1082                           ; 80 bytes @ 0x4
  1083  000104                     	ds	1
  1084  000105                     stepper2@i:
  1085                           	opt callstack 0
  1086                           
  1087                           ; 2 bytes @ 0x5
  1088  000105                     	ds	1
  1089  000106                     ultrasonic_main@steps2_adj:
  1090                           	opt callstack 0
  1091                           
  1092                           ; 2 bytes @ 0x6
  1093  000106                     	ds	1
  1094  000107                     stepper2@i_384:
  1095                           	opt callstack 0
  1096                           
  1097                           ; 2 bytes @ 0x7
  1098  000107                     	ds	1
  1099  000108                     ultrasonic_main@min_us_dist_917:
  1100                           	opt callstack 0
  1101                           
  1102                           ; 2 bytes @ 0x8
  1103  000108                     	ds	1
  1104  000109                     stepper2@count_stepper:
  1105                           	opt callstack 0
  1106                           
  1107                           ; 2 bytes @ 0x9
  1108  000109                     	ds	2
  1109  00010B                     stepper2@direction:
  1110                           	opt callstack 0
  1111                           
  1112                           ; 1 bytes @ 0xB
  1113  00010B                     	ds	1
  1114  00010C                     actuators_main@stack:
  1115                           	opt callstack 0
  1116                           
  1117                           ; 2 bytes @ 0xC
  1118  00010C                     	ds	2
  1119  00010E                     actuators_main@steps2_adj:
  1120                           	opt callstack 0
  1121                           
  1122                           ; 2 bytes @ 0xE
  1123  00010E                     	ds	2
  1124  000110                     ??_actuators_main:
  1125                           
  1126                           ; 1 bytes @ 0x10
  1127  000110                     	ds	2
  1128  000112                     actuators_main@act_cnt:
  1129                           	opt callstack 0
  1130                           
  1131                           ; 2 bytes @ 0x12
  1132  000112                     	ds	66
  1133  000154                     UI_main@keypress:
  1134                           	opt callstack 0
  1135                           
  1136                           ; 1 bytes @ 0x54
  1137  000154                     	ds	1
  1138  000155                     UI_main@tick:
  1139                           	opt callstack 0
  1140                           
  1141                           ; 4 bytes @ 0x55
  1142  000155                     	ds	4
  1143  000159                     UI_main@i:
  1144                           	opt callstack 0
  1145                           
  1146                           ; 1 bytes @ 0x59
  1147  000159                     	ds	1
  1148  00015A                     ??_main:
  1149                           
  1150                           ; 1 bytes @ 0x5A
  1151  00015A                     	ds	2
  1152                           
  1153                           	psect	cstackBANK0
  1154  000080                     __pcstackBANK0:
  1155                           	opt callstack 0
  1156  000080                     ??_I2C_Master_Wait:
  1157  000080                     ??_servoRotate0:
  1158  000080                     ??_servoRotate180:
  1159  000080                     ??_trig:
  1160  000080                     ?_strlen:
  1161                           	opt callstack 0
  1162  000080                     ?_isupper:
  1163                           	opt callstack 0
  1164  000080                     ?_isalpha:
  1165                           	opt callstack 0
  1166  000080                     ?_isdigit:
  1167                           	opt callstack 0
  1168  000080                     ?_isspace:
  1169                           	opt callstack 0
  1170  000080                     ?_islower:
  1171                           	opt callstack 0
  1172  000080                     ?_min:
  1173                           	opt callstack 0
  1174  000080                     ?___wmul:
  1175                           	opt callstack 0
  1176  000080                     ?___awdiv:
  1177                           	opt callstack 0
  1178  000080                     ?___lldiv:
  1179                           	opt callstack 0
  1180  000080                     ?___llmod:
  1181                           	opt callstack 0
  1182  000080                     ?___aodiv:
  1183                           	opt callstack 0
  1184  000080                     ?___aomod:
  1185                           	opt callstack 0
  1186  000080                     pulse_e@interruptState:
  1187                           	opt callstack 0
  1188  000080                     min@array:
  1189                           	opt callstack 0
  1190  000080                     ___wmul@multiplier:
  1191                           	opt callstack 0
  1192  000080                     ___awdiv@dividend:
  1193                           	opt callstack 0
  1194  000080                     isalpha@c:
  1195                           	opt callstack 0
  1196  000080                     isdigit@c:
  1197                           	opt callstack 0
  1198  000080                     isspace@c:
  1199                           	opt callstack 0
  1200  000080                     isupper@c:
  1201                           	opt callstack 0
  1202  000080                     strlen@s:
  1203                           	opt callstack 0
  1204  000080                     islower@c:
  1205                           	opt callstack 0
  1206  000080                     ___lldiv@dividend:
  1207                           	opt callstack 0
  1208  000080                     ___llmod@dividend:
  1209                           	opt callstack 0
  1210  000080                     ___aodiv@dividend:
  1211                           	opt callstack 0
  1212  000080                     ___aomod@dividend:
  1213                           	opt callstack 0
  1214                           
  1215                           ; 8 bytes @ 0x0
  1216  000080                     	ds	1
  1217  000081                     I2C_Master_Read@ackBit:
  1218                           	opt callstack 0
  1219  000081                     send_nibble@data:
  1220                           	opt callstack 0
  1221  000081                     I2C_Master_Write@byteToWrite:
  1222                           	opt callstack 0
  1223  000081                     servoRotate0@i:
  1224                           	opt callstack 0
  1225  000081                     servoRotate180@i:
  1226                           	opt callstack 0
  1227                           
  1228                           ; 2 bytes @ 0x1
  1229  000081                     	ds	1
  1230  000082                     ??_isupper:
  1231  000082                     ??_isalpha:
  1232  000082                     ??_isdigit:
  1233  000082                     ??_isspace:
  1234  000082                     ??_islower:
  1235  000082                     I2C_Master_Read@receivedByte:
  1236                           	opt callstack 0
  1237  000082                     send_byte@data:
  1238                           	opt callstack 0
  1239  000082                     min@size:
  1240                           	opt callstack 0
  1241  000082                     ___wmul@multiplicand:
  1242                           	opt callstack 0
  1243  000082                     ___awdiv@divisor:
  1244                           	opt callstack 0
  1245  000082                     strlen@a:
  1246                           	opt callstack 0
  1247                           
  1248                           ; 2 bytes @ 0x2
  1249  000082                     	ds	1
  1250  000083                     ??_servo:
  1251  000083                     lcdInst@data:
  1252                           	opt callstack 0
  1253  000083                     putch@data:
  1254                           	opt callstack 0
  1255  000083                     sense_tires@sensed:
  1256                           	opt callstack 0
  1257                           
  1258                           ; 2 bytes @ 0x3
  1259  000083                     	ds	1
  1260  000084                     ??_initLCD:
  1261  000084                     ??_min:
  1262  000084                     ___awdiv@counter:
  1263                           	opt callstack 0
  1264  000084                     ___wmul@product:
  1265                           	opt callstack 0
  1266  000084                     fputc@c:
  1267                           	opt callstack 0
  1268  000084                     ___lldiv@divisor:
  1269                           	opt callstack 0
  1270  000084                     ___llmod@divisor:
  1271                           	opt callstack 0
  1272                           
  1273                           ; 4 bytes @ 0x4
  1274  000084                     	ds	1
  1275  000085                     ___awdiv@sign:
  1276                           	opt callstack 0
  1277                           
  1278                           ; 1 bytes @ 0x5
  1279  000085                     	ds	1
  1280  000086                     ?_toupper:
  1281                           	opt callstack 0
  1282  000086                     _isspace$1610:
  1283                           	opt callstack 0
  1284  000086                     ___awdiv@quotient:
  1285                           	opt callstack 0
  1286  000086                     fputc@fp:
  1287                           	opt callstack 0
  1288  000086                     toupper@c:
  1289                           	opt callstack 0
  1290                           
  1291                           ; 2 bytes @ 0x6
  1292  000086                     	ds	1
  1293  000087                     ?_atoi:
  1294                           	opt callstack 0
  1295  000087                     min@minimum:
  1296                           	opt callstack 0
  1297  000087                     atoi@s:
  1298                           	opt callstack 0
  1299                           
  1300                           ; 2 bytes @ 0x7
  1301  000087                     	ds	1
  1302  000088                     ??_fputc:
  1303  000088                     ??_toupper:
  1304  000088                     ___llmod@counter:
  1305                           	opt callstack 0
  1306  000088                     ___lldiv@quotient:
  1307                           	opt callstack 0
  1308  000088                     ___aodiv@divisor:
  1309                           	opt callstack 0
  1310  000088                     ___aomod@divisor:
  1311                           	opt callstack 0
  1312                           
  1313                           ; 8 bytes @ 0x8
  1314  000088                     	ds	1
  1315  000089                     ??_atoi:
  1316  000089                     min@i:
  1317                           	opt callstack 0
  1318                           
  1319                           ; 2 bytes @ 0x9
  1320  000089                     	ds	3
  1321  00008C                     ___lldiv@counter:
  1322                           	opt callstack 0
  1323  00008C                     _toupper$1675:
  1324                           	opt callstack 0
  1325                           
  1326                           ; 2 bytes @ 0xC
  1327  00008C                     	ds	1
  1328  00008D                     atoi@neg:
  1329                           	opt callstack 0
  1330  00008D                     fputs@s:
  1331                           	opt callstack 0
  1332  00008D                     I2C_Master_Init@clockFreq:
  1333                           	opt callstack 0
  1334                           
  1335                           ; 4 bytes @ 0xD
  1336  00008D                     	ds	2
  1337  00008F                     _atoi$1583:
  1338                           	opt callstack 0
  1339  00008F                     fputs@fp:
  1340                           	opt callstack 0
  1341                           
  1342                           ; 2 bytes @ 0xF
  1343  00008F                     	ds	1
  1344  000090                     ___aodiv@counter:
  1345                           	opt callstack 0
  1346  000090                     ___aomod@counter:
  1347                           	opt callstack 0
  1348                           
  1349                           ; 1 bytes @ 0x10
  1350  000090                     	ds	1
  1351  000091                     ??_I2C_Master_Init:
  1352  000091                     ___aodiv@sign:
  1353                           	opt callstack 0
  1354  000091                     ___aomod@sign:
  1355                           	opt callstack 0
  1356  000091                     fputs@c:
  1357                           	opt callstack 0
  1358  000091                     _atoi$1585:
  1359                           	opt callstack 0
  1360                           
  1361                           ; 2 bytes @ 0x11
  1362  000091                     	ds	1
  1363  000092                     ?_abs:
  1364                           	opt callstack 0
  1365  000092                     abs@a:
  1366                           	opt callstack 0
  1367  000092                     fputs@i:
  1368                           	opt callstack 0
  1369  000092                     ___aodiv@quotient:
  1370                           	opt callstack 0
  1371                           
  1372                           ; 8 bytes @ 0x12
  1373  000092                     	ds	1
  1374  000093                     _atoi$1584:
  1375                           	opt callstack 0
  1376                           
  1377                           ; 1 bytes @ 0x13
  1378  000093                     	ds	1
  1379  000094                     ??_abs:
  1380  000094                     ?_pad:
  1381                           	opt callstack 0
  1382  000094                     pad@fp:
  1383                           	opt callstack 0
  1384  000094                     atoi@n:
  1385                           	opt callstack 0
  1386                           
  1387                           ; 2 bytes @ 0x14
  1388  000094                     	ds	1
  1389  000095                     
  1390                           ; 1 bytes @ 0x15
  1391  000095                     	ds	1
  1392  000096                     pad@buf:
  1393                           	opt callstack 0
  1394                           
  1395                           ; 2 bytes @ 0x16
  1396  000096                     	ds	2
  1397  000098                     pad@p:
  1398                           	opt callstack 0
  1399                           
  1400                           ; 2 bytes @ 0x18
  1401  000098                     	ds	2
  1402  00009A                     ??_pad:
  1403                           
  1404                           ; 1 bytes @ 0x1A
  1405  00009A                     	ds	1
  1406  00009B                     pad@i:
  1407                           	opt callstack 0
  1408                           
  1409                           ; 2 bytes @ 0x1B
  1410  00009B                     	ds	2
  1411  00009D                     pad@w:
  1412                           	opt callstack 0
  1413                           
  1414                           ; 2 bytes @ 0x1D
  1415  00009D                     	ds	2
  1416  00009F                     ?_dtoa:
  1417                           	opt callstack 0
  1418  00009F                     ?_xtoa:
  1419                           	opt callstack 0
  1420  00009F                     dtoa@fp:
  1421                           	opt callstack 0
  1422  00009F                     xtoa@fp:
  1423                           	opt callstack 0
  1424                           
  1425                           ; 2 bytes @ 0x1F
  1426  00009F                     	ds	2
  1427  0000A1                     dtoa@d:
  1428                           	opt callstack 0
  1429  0000A1                     xtoa@d:
  1430                           	opt callstack 0
  1431                           
  1432                           ; 8 bytes @ 0x21
  1433  0000A1                     	ds	8
  1434  0000A9                     ??_dtoa:
  1435  0000A9                     xtoa@x:
  1436                           	opt callstack 0
  1437                           
  1438                           ; 1 bytes @ 0x29
  1439  0000A9                     	ds	1
  1440  0000AA                     ??_xtoa:
  1441                           
  1442                           ; 1 bytes @ 0x2A
  1443  0000AA                     	ds	7
  1444  0000B1                     _dtoa$1099:
  1445                           	opt callstack 0
  1446                           
  1447                           ; 2 bytes @ 0x31
  1448  0000B1                     	ds	1
  1449  0000B2                     _xtoa$1110:
  1450                           	opt callstack 0
  1451                           
  1452                           ; 2 bytes @ 0x32
  1453  0000B2                     	ds	1
  1454  0000B3                     dtoa@p:
  1455                           	opt callstack 0
  1456                           
  1457                           ; 2 bytes @ 0x33
  1458  0000B3                     	ds	1
  1459  0000B4                     _xtoa$1111:
  1460                           	opt callstack 0
  1461                           
  1462                           ; 2 bytes @ 0x34
  1463  0000B4                     	ds	1
  1464  0000B5                     dtoa@w:
  1465                           	opt callstack 0
  1466                           
  1467                           ; 2 bytes @ 0x35
  1468  0000B5                     	ds	1
  1469  0000B6                     xtoa@p:
  1470                           	opt callstack 0
  1471                           
  1472                           ; 2 bytes @ 0x36
  1473  0000B6                     	ds	1
  1474  0000B7                     dtoa@s:
  1475                           	opt callstack 0
  1476                           
  1477                           ; 2 bytes @ 0x37
  1478  0000B7                     	ds	1
  1479  0000B8                     xtoa@w:
  1480                           	opt callstack 0
  1481                           
  1482                           ; 2 bytes @ 0x38
  1483  0000B8                     	ds	1
  1484  0000B9                     dtoa@n:
  1485                           	opt callstack 0
  1486                           
  1487                           ; 8 bytes @ 0x39
  1488  0000B9                     	ds	1
  1489  0000BA                     xtoa@n:
  1490                           	opt callstack 0
  1491                           
  1492                           ; 8 bytes @ 0x3A
  1493  0000BA                     	ds	7
  1494  0000C1                     dtoa@i:
  1495                           	opt callstack 0
  1496                           
  1497                           ; 2 bytes @ 0x41
  1498  0000C1                     	ds	1
  1499  0000C2                     xtoa@i:
  1500                           	opt callstack 0
  1501                           
  1502                           ; 2 bytes @ 0x42
  1503  0000C2                     	ds	2
  1504  0000C4                     xtoa@c:
  1505                           	opt callstack 0
  1506                           
  1507                           ; 2 bytes @ 0x44
  1508  0000C4                     	ds	2
  1509  0000C6                     ?_vfpfcnvrt:
  1510                           	opt callstack 0
  1511  0000C6                     vfpfcnvrt@fp:
  1512                           	opt callstack 0
  1513                           
  1514                           ; 2 bytes @ 0x46
  1515  0000C6                     	ds	2
  1516  0000C8                     vfpfcnvrt@fmt:
  1517                           	opt callstack 0
  1518                           
  1519                           ; 2 bytes @ 0x48
  1520  0000C8                     	ds	2
  1521  0000CA                     vfpfcnvrt@ap:
  1522                           	opt callstack 0
  1523                           
  1524                           ; 2 bytes @ 0x4A
  1525  0000CA                     	ds	2
  1526  0000CC                     ??_vfpfcnvrt:
  1527                           
  1528                           ; 1 bytes @ 0x4C
  1529  0000CC                     	ds	4
  1530  0000D0                     vfpfcnvrt@ll:
  1531                           	opt callstack 0
  1532                           
  1533                           ; 8 bytes @ 0x50
  1534  0000D0                     	ds	8
  1535  0000D8                     vfpfcnvrt@llu:
  1536                           	opt callstack 0
  1537                           
  1538                           ; 8 bytes @ 0x58
  1539  0000D8                     	ds	8
  1540  0000E0                     vfpfcnvrt@c:
  1541                           	opt callstack 0
  1542                           
  1543                           ; 1 bytes @ 0x60
  1544  0000E0                     	ds	1
  1545  0000E1                     vfpfcnvrt@done:
  1546                           	opt callstack 0
  1547                           
  1548                           ; 2 bytes @ 0x61
  1549  0000E1                     	ds	2
  1550  0000E3                     _vfpfcnvrt$1125:
  1551                           	opt callstack 0
  1552                           
  1553                           ; 2 bytes @ 0x63
  1554  0000E3                     	ds	2
  1555  0000E5                     ?_vfprintf:
  1556                           	opt callstack 0
  1557  0000E5                     vfprintf@fp:
  1558                           	opt callstack 0
  1559                           
  1560                           ; 2 bytes @ 0x65
  1561  0000E5                     	ds	2
  1562  0000E7                     vfprintf@fmt:
  1563                           	opt callstack 0
  1564                           
  1565                           ; 2 bytes @ 0x67
  1566  0000E7                     	ds	2
  1567  0000E9                     vfprintf@ap:
  1568                           	opt callstack 0
  1569                           
  1570                           ; 2 bytes @ 0x69
  1571  0000E9                     	ds	2
  1572  0000EB                     vfprintf@cfmt:
  1573                           	opt callstack 0
  1574                           
  1575                           ; 2 bytes @ 0x6B
  1576  0000EB                     	ds	2
  1577  0000ED                     ?_printf:
  1578                           	opt callstack 0
  1579  0000ED                     printf@fmt:
  1580                           	opt callstack 0
  1581                           
  1582                           ; 2 bytes @ 0x6D
  1583  0000ED                     	ds	8
  1584  0000F5                     
  1585                           ; 1 bytes @ 0x75
  1586  0000F5                     	ds	2
  1587  0000F7                     printf@ap:
  1588                           	opt callstack 0
  1589                           
  1590                           ; 2 bytes @ 0x77
  1591  0000F7                     	ds	2
  1592  0000F9                     ??_print_echo:
  1593  0000F9                     ?_number_deploy:
  1594                           	opt callstack 0
  1595  0000F9                     full_drive@stepper_no:
  1596                           	opt callstack 0
  1597  0000F9                     number_deploy@avg_dist:
  1598                           	opt callstack 0
  1599  0000F9                     UI_main@t_dep:
  1600                           	opt callstack 0
  1601                           
  1602                           ; 2 bytes @ 0x79
  1603  0000F9                     	ds	1
  1604  0000FA                     ?_ultrasonic_main:
  1605                           	opt callstack 0
  1606                           
  1607                           ; 2 bytes @ 0x7A
  1608  0000FA                     	ds	1
  1609  0000FB                     ??_full_drive:
  1610  0000FB                     number_deploy@poles_detected:
  1611                           	opt callstack 0
  1612  0000FB                     UI_main@poles_detected:
  1613                           	opt callstack 0
  1614                           
  1615                           ; 2 bytes @ 0x7B
  1616  0000FB                     	ds	1
  1617  0000FC                     ??_ultrasonic_main:
  1618  0000FC                     full_drive@direction:
  1619                           	opt callstack 0
  1620                           
  1621                           ; 1 bytes @ 0x7C
  1622  0000FC                     	ds	1
  1623  0000FD                     ??_number_deploy:
  1624  0000FD                     stepper@stack:
  1625                           	opt callstack 0
  1626  0000FD                     stepper2@steps2_adj:
  1627                           	opt callstack 0
  1628  0000FD                     stepper2_back@steps2_adj:
  1629                           	opt callstack 0
  1630                           
  1631                           ; 2 bytes @ 0x7D
  1632  0000FD                     	ds	2
  1633  0000FF                     
  1634                           ; 1 bytes @ 0x7F
  1635                           
  1636                           	psect	cstackCOMRAM
  1637  000001                     __pcstackCOMRAM:
  1638                           	opt callstack 0
  1639  000001                     ?i2___awdiv:
  1640                           	opt callstack 0
  1641  000001                     ?___xxtofl:
  1642                           	opt callstack 0
  1643  000001                     i2___awdiv@dividend:
  1644                           	opt callstack 0
  1645  000001                     ___xxtofl@val:
  1646                           	opt callstack 0
  1647                           
  1648                           ; 4 bytes @ 0x0
  1649  000001                     	ds	2
  1650  000003                     i2___awdiv@divisor:
  1651                           	opt callstack 0
  1652                           
  1653                           ; 2 bytes @ 0x2
  1654  000003                     	ds	2
  1655  000005                     ??___xxtofl:
  1656  000005                     i2___awdiv@counter:
  1657                           	opt callstack 0
  1658                           
  1659                           ; 1 bytes @ 0x4
  1660  000005                     	ds	1
  1661  000006                     i2___awdiv@sign:
  1662                           	opt callstack 0
  1663                           
  1664                           ; 1 bytes @ 0x5
  1665  000006                     	ds	1
  1666  000007                     i2___awdiv@quotient:
  1667                           	opt callstack 0
  1668                           
  1669                           ; 2 bytes @ 0x6
  1670  000007                     	ds	2
  1671  000009                     ___xxtofl@sign:
  1672                           	opt callstack 0
  1673                           
  1674                           ; 1 bytes @ 0x8
  1675  000009                     	ds	1
  1676  00000A                     ___xxtofl@exp:
  1677                           	opt callstack 0
  1678                           
  1679                           ; 1 bytes @ 0x9
  1680  00000A                     	ds	1
  1681  00000B                     ___xxtofl@arg:
  1682                           	opt callstack 0
  1683                           
  1684                           ; 4 bytes @ 0xA
  1685  00000B                     	ds	4
  1686  00000F                     ?___fldiv:
  1687                           	opt callstack 0
  1688  00000F                     ___fldiv@b:
  1689                           	opt callstack 0
  1690                           
  1691                           ; 4 bytes @ 0xE
  1692  00000F                     	ds	4
  1693  000013                     ___fldiv@a:
  1694                           	opt callstack 0
  1695                           
  1696                           ; 4 bytes @ 0x12
  1697  000013                     	ds	4
  1698  000017                     ??___fldiv:
  1699                           
  1700                           ; 1 bytes @ 0x16
  1701  000017                     	ds	4
  1702  00001B                     ___fldiv@rem:
  1703                           	opt callstack 0
  1704                           
  1705                           ; 4 bytes @ 0x1A
  1706  00001B                     	ds	4
  1707  00001F                     ___fldiv@sign:
  1708                           	opt callstack 0
  1709                           
  1710                           ; 1 bytes @ 0x1E
  1711  00001F                     	ds	1
  1712  000020                     ___fldiv@new_exp:
  1713                           	opt callstack 0
  1714                           
  1715                           ; 2 bytes @ 0x1F
  1716  000020                     	ds	2
  1717  000022                     ___fldiv@grs:
  1718                           	opt callstack 0
  1719                           
  1720                           ; 4 bytes @ 0x21
  1721  000022                     	ds	4
  1722  000026                     ___fldiv@bexp:
  1723                           	opt callstack 0
  1724                           
  1725                           ; 1 bytes @ 0x25
  1726  000026                     	ds	1
  1727  000027                     ___fldiv@aexp:
  1728                           	opt callstack 0
  1729                           
  1730                           ; 1 bytes @ 0x26
  1731  000027                     	ds	1
  1732  000028                     ?___fltol:
  1733                           	opt callstack 0
  1734  000028                     ___fltol@f1:
  1735                           	opt callstack 0
  1736                           
  1737                           ; 4 bytes @ 0x27
  1738  000028                     	ds	4
  1739  00002C                     ??___fltol:
  1740                           
  1741                           ; 1 bytes @ 0x2B
  1742  00002C                     	ds	4
  1743  000030                     ___fltol@sign1:
  1744                           	opt callstack 0
  1745                           
  1746                           ; 1 bytes @ 0x2F
  1747  000030                     	ds	1
  1748  000031                     ___fltol@exp1:
  1749                           	opt callstack 0
  1750                           
  1751                           ; 1 bytes @ 0x30
  1752  000031                     	ds	1
  1753  000032                     ??_echo:
  1754                           
  1755                           ; 1 bytes @ 0x31
  1756  000032                     	ds	4
  1757  000036                     ??_ISR:
  1758                           
  1759                           ; 1 bytes @ 0x35
  1760  000036                     	ds	2
  1761                           
  1762 ;;
  1763 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1764 ;;
  1765 ;; *************** function _main *****************
  1766 ;; Defined at:
  1767 ;;		line 683 in file "main.c"
  1768 ;; Parameters:    Size  Location     Type
  1769 ;;		None
  1770 ;; Auto vars:     Size  Location     Type
  1771 ;;  k               2   94[BANK2 ] int 
  1772 ;;  i               2   88[BANK2 ] int 
  1773 ;;  i               2   86[BANK2 ] int 
  1774 ;;  i               2   98[BANK2 ] int 
  1775 ;;  pole_cl_dist    2   82[BANK2 ] int 
  1776 ;;  Pole           80    0[BANK2 ] struct Poles[10]
  1777 ;;  prev_avg_dis    4  102[BANK2 ] volatile long 
  1778 ;;  poles_detect    2  100[BANK2 ] int 
  1779 ;;  t_dep           2   96[BANK2 ] int 
  1780 ;;  t_count         2   92[BANK2 ] int 
  1781 ;;  stack           2   90[BANK2 ] int 
  1782 ;;  steps2_adj      2   84[BANK2 ] int 
  1783 ;;  read            2    0        int 
  1784 ;; Return value:  Size  Location     Type
  1785 ;;                  1    wreg      void 
  1786 ;; Registers used:
  1787 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1788 ;; Tracked objects:
  1789 ;;		On entry : 0/0
  1790 ;;		On exit  : 0/0
  1791 ;;		Unchanged: 0/0
  1792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1794 ;;      Locals:         0       0       0     106       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1795 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1796 ;;      Totals:         0       0       2     106       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1797 ;;Total ram usage:      108 bytes
  1798 ;; Hardware stack levels required when called:   17
  1799 ;; This function calls:
  1800 ;;		_UI_main
  1801 ;;		___wmul
  1802 ;;		_actuators_main
  1803 ;;		_backwards
  1804 ;;		_brake
  1805 ;;		_initLCD
  1806 ;;		_lcdInst
  1807 ;;		_number_deploy
  1808 ;;		_printf
  1809 ;;		_start
  1810 ;;		_ultrasonic_main
  1811 ;; This function is called by:
  1812 ;;		Startup code after reset
  1813 ;; This function uses a non-reentrant model
  1814 ;;
  1815                           
  1816                           	psect	text0
  1817  000D6A                     __ptext0:
  1818                           	opt callstack 0
  1819  000D6A                     _main:
  1820                           	opt callstack 14
  1821                           
  1822                           ;main.c: 685:     int t_dep=0;
  1823                           
  1824                           ;incstack = 0
  1825  000D6A  0E00               	movlw	0
  1826  000D6C  0102               	movlb	2	; () banked
  1827  000D6E  6FE0               	movwf	(main@t_dep+1)& (0+255),b
  1828  000D70  0E00               	movlw	0
  1829  000D72  6FDF               	movwf	main@t_dep& (0+255),b
  1830                           
  1831                           ;main.c: 686:     int t_count;;main.c: 687:  TRISD = 0x00;
  1832  000D74  0E00               	movlw	0
  1833  000D76  6E95               	movwf	3989,c	;volatile
  1834                           
  1835                           ; BSR set to: 2
  1836                           ;main.c: 688:  GIE = 1;
  1837  000D78  8EF2               	bsf	4082,7,c	;volatile
  1838                           
  1839                           ;main.c: 690:     ADCON1=0x0F;
  1840  000D7A  0E0F               	movlw	15
  1841  000D7C  6EC1               	movwf	4033,c	;volatile
  1842                           
  1843                           ; BSR set to: 2
  1844                           ;main.c: 692:  initLCD();
  1845  000D7E  ECE0  F019         	call	_initLCD	;wreg free
  1846                           
  1847                           ;main.c: 694:  T1CON = 0x10;
  1848  000D82  0E10               	movlw	16
  1849  000D84  6ECD               	movwf	4045,c	;volatile
  1850                           
  1851                           ;main.c: 695:     int poles_detected=0;
  1852  000D86  0E00               	movlw	0
  1853  000D88  0102               	movlb	2	; () banked
  1854  000D8A  6FE4               	movwf	(main@poles_detected+1)& (0+255),b
  1855  000D8C  0E00               	movlw	0
  1856  000D8E  6FE3               	movwf	main@poles_detected& (0+255),b
  1857                           
  1858                           ; BSR set to: 2
  1859                           ;main.c: 697:     volatile long prev_avg_dist=0;
  1860                           
  1861                           ; BSR set to: 2
  1862  000D90  0E00               	movlw	0
  1863  000D92  6FE5               	movwf	main@prev_avg_dist& (0+255),b	;volatile
  1864  000D94  0E00               	movlw	0
  1865  000D96  6FE6               	movwf	(main@prev_avg_dist+1)& (0+255),b	;volatile
  1866  000D98  0E00               	movlw	0
  1867  000D9A  6FE7               	movwf	(main@prev_avg_dist+2)& (0+255),b	;volatile
  1868  000D9C  0E00               	movlw	0
  1869  000D9E  6FE8               	movwf	(main@prev_avg_dist+3)& (0+255),b	;volatile
  1870                           
  1871                           ; BSR set to: 2
  1872                           ;main.c: 699:     TRISAbits.RA4 = 0;
  1873  000DA0  9892               	bcf	3986,4,c	;volatile
  1874                           
  1875                           ; BSR set to: 2
  1876                           ;main.c: 700:     PORTAbits.RA4 = LATAbits.LATA4;
  1877  000DA2  A889               	btfss	3977,4,c	;volatile
  1878  000DA4  D002               	bra	u8495
  1879  000DA6  8880               	bsf	3968,4,c	;volatile
  1880  000DA8  D001               	bra	u8497
  1881  000DAA                     u8495:
  1882  000DAA  9880               	bcf	3968,4,c	;volatile
  1883  000DAC                     u8497:
  1884                           
  1885                           ;main.c: 702:     Poles Pole[10];;main.c: 710:     if (~sens){
  1886  000DAC  2858               	incf	_sens,w,c	;volatile
  1887  000DAE  E103               	bnz	u8500
  1888  000DB0  2859               	incf	_sens+1,w,c	;volatile
  1889  000DB2  B4D8               	btfsc	status,2,c
  1890  000DB4  D00B               	goto	l7849
  1891  000DB6                     u8500:
  1892                           
  1893                           ;main.c: 711:         UI_main( t_dep, poles_detected);
  1894  000DB6  0E00               	movlw	0
  1895  000DB8  0100               	movlb	0	; () banked
  1896  000DBA  6FFA               	movwf	(UI_main@t_dep+1)& (0+255),b
  1897  000DBC  0E00               	movlw	0
  1898  000DBE  6FF9               	movwf	UI_main@t_dep& (0+255),b
  1899  000DC0  0E00               	movlw	0
  1900  000DC2  6FFC               	movwf	(UI_main@poles_detected+1)& (0+255),b
  1901  000DC4  0E00               	movlw	0
  1902  000DC6  6FFB               	movwf	UI_main@poles_detected& (0+255),b
  1903  000DC8  EC09  F000         	call	_UI_main	;wreg free
  1904  000DCC                     l7849:
  1905                           
  1906                           ;main.c: 717:         if ((poles_detected <10)&&(avg_dist<4000)){
  1907  000DCC  0102               	movlb	2	; () banked
  1908  000DCE  BFE4               	btfsc	(main@poles_detected+1)& (0+255),7,b
  1909  000DD0  D006               	goto	u8510
  1910  000DD2  51E4               	movf	(main@poles_detected+1)& (0+255),w,b
  1911  000DD4  E103               	bnz	u8511
  1912  000DD6  0E0A               	movlw	10
  1913  000DD8  5DE3               	subwf	main@poles_detected& (0+255),w,b
  1914  000DDA  B0D8               	btfsc	status,0,c
  1915  000DDC                     u8511:
  1916  000DDC  D1C8               	goto	l7963
  1917  000DDE                     u8510:
  1918                           
  1919                           ; BSR set to: 2
  1920  000DDE  BE47               	btfsc	_avg_dist+3,7,c	;volatile
  1921  000DE0  D068               	goto	l7885
  1922  000DE2  5047               	movf	_avg_dist+3,w,c	;volatile
  1923  000DE4  1046               	iorwf	_avg_dist+2,w,c	;volatile
  1924  000DE6  E106               	bnz	u8521
  1925  000DE8  0EA0               	movlw	160
  1926  000DEA  5C44               	subwf	_avg_dist,w,c	;volatile
  1927  000DEC  0E0F               	movlw	15
  1928  000DEE  5845               	subwfb	_avg_dist+1,w,c	;volatile
  1929  000DF0  A0D8               	btfss	status,0,c
  1930  000DF2  D05F               	goto	l7885
  1931  000DF4                     u8521:
  1932  000DF4  D1BC               	goto	l7963
  1933  000DF6                     l7855:
  1934                           
  1935                           ;main.c: 728:                                         { lcdInst(0x01); _delay((unsigned 
      +                          long)((5)*(10000000/4000.0)));};
  1936  000DF6  0E01               	movlw	1
  1937  000DF8  EC73  F01D         	call	_lcdInst
  1938  000DFC  0E11               	movlw	17
  1939  000DFE  0101               	movlb	1	; () banked
  1940  000E00  6F5A               	movwf	??_main& (0+255),b
  1941  000E02  0E3A               	movlw	58
  1942  000E04                     u8637:
  1943  000E04  2EE8               	decfsz	wreg,f,c
  1944  000E06  D7FE               	bra	u8637
  1945  000E08  2F5A               	decfsz	??_main& (0+255),f,b
  1946  000E0A  D7FC               	bra	u8637
  1947  000E0C  F000               	nop	
  1948                           
  1949                           ;main.c: 730:                                         printf("waiting");
  1950  000E0E  0E44               	movlw	low (STR_52+5)
  1951  000E10  0100               	movlb	0	; () banked
  1952  000E12  6FED               	movwf	printf@fmt& (0+255),b
  1953  000E14  0EFC               	movlw	high (STR_52+5)
  1954  000E16  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  1955  000E18  ECFA  F01C         	call	_printf	;wreg free
  1956                           
  1957                           ;main.c: 733:                     if (!PORTAbits.RA4){
  1958  000E1C  B880               	btfsc	3968,4,c	;volatile
  1959  000E1E  D013               	goto	l7869
  1960                           
  1961                           ;main.c: 734:                                             { lcdInst(0x01); _delay((unsig
      +                          ned long)((5)*(10000000/4000.0)));};
  1962  000E20  0E01               	movlw	1
  1963  000E22  EC73  F01D         	call	_lcdInst
  1964  000E26  0E11               	movlw	17
  1965  000E28  0101               	movlb	1	; () banked
  1966  000E2A  6F5A               	movwf	??_main& (0+255),b
  1967  000E2C  0E3A               	movlw	58
  1968  000E2E                     u8647:
  1969  000E2E  2EE8               	decfsz	wreg,f,c
  1970  000E30  D7FE               	bra	u8647
  1971  000E32  2F5A               	decfsz	??_main& (0+255),f,b
  1972  000E34  D7FC               	bra	u8647
  1973  000E36  F000               	nop	
  1974                           
  1975                           ;main.c: 736:                     printf("more waiting");
  1976  000E38  0E3F               	movlw	low STR_52
  1977  000E3A  0100               	movlb	0	; () banked
  1978  000E3C  6FED               	movwf	printf@fmt& (0+255),b
  1979  000E3E  0EFC               	movlw	high STR_52
  1980  000E40  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  1981  000E42  ECFA  F01C         	call	_printf	;wreg free
  1982  000E46                     l7869:
  1983                           
  1984                           ;main.c: 738:                     if (PORTAbits.RA4){
  1985  000E46  A880               	btfss	3968,4,c	;volatile
  1986  000E48  D034               	goto	l7885
  1987                           
  1988                           ;main.c: 739:                     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/
      +                          4000.0)));};
  1989  000E4A  0E01               	movlw	1
  1990  000E4C  EC73  F01D         	call	_lcdInst
  1991  000E50  0E11               	movlw	17
  1992  000E52  0101               	movlb	1	; () banked
  1993  000E54  6F5A               	movwf	??_main& (0+255),b
  1994  000E56  0E3A               	movlw	58
  1995  000E58                     u8657:
  1996  000E58  2EE8               	decfsz	wreg,f,c
  1997  000E5A  D7FE               	bra	u8657
  1998  000E5C  2F5A               	decfsz	??_main& (0+255),f,b
  1999  000E5E  D7FC               	bra	u8657
  2000  000E60  F000               	nop	
  2001                           
  2002                           ;main.c: 740:                         printf("done wait");
  2003  000E62  0EF3               	movlw	low STR_53
  2004  000E64  0100               	movlb	0	; () banked
  2005  000E66  6FED               	movwf	printf@fmt& (0+255),b
  2006  000E68  0EFC               	movlw	high STR_53
  2007  000E6A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2008  000E6C  ECFA  F01C         	call	_printf	;wreg free
  2009                           
  2010                           ;main.c: 744:                 steps2_adj=ultrasonic_main();
  2011  000E70  EC09  F011         	call	_ultrasonic_main	;wreg free
  2012  000E74  C0FA  F2D3         	movff	?_ultrasonic_main,main@steps2_adj
  2013  000E78  C0FB  F2D4         	movff	?_ultrasonic_main+1,main@steps2_adj+1
  2014                           
  2015                           ;main.c: 745:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  2016  000E7C  0E01               	movlw	1
  2017  000E7E  EC73  F01D         	call	_lcdInst
  2018  000E82  0E11               	movlw	17
  2019  000E84  0101               	movlb	1	; () banked
  2020  000E86  6F5A               	movwf	??_main& (0+255),b
  2021  000E88  0E3A               	movlw	58
  2022  000E8A                     u8667:
  2023  000E8A  2EE8               	decfsz	wreg,f,c
  2024  000E8C  D7FE               	bra	u8667
  2025  000E8E  2F5A               	decfsz	??_main& (0+255),f,b
  2026  000E90  D7FC               	bra	u8667
  2027  000E92  F000               	nop	
  2028                           
  2029                           ;main.c: 746:     printf("stepsadj %d", steps2_adj);
  2030  000E94  0E65               	movlw	low STR_20
  2031  000E96  0100               	movlb	0	; () banked
  2032  000E98  6FED               	movwf	printf@fmt& (0+255),b
  2033  000E9A  0EFC               	movlw	high STR_20
  2034  000E9C  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2035  000E9E  C2D3  F0EF         	movff	main@steps2_adj,?_printf+2
  2036  000EA2  C2D4  F0F0         	movff	main@steps2_adj+1,?_printf+3
  2037  000EA6  ECFA  F01C         	call	_printf	;wreg free
  2038                           
  2039                           ;main.c: 747:     sens = 0;
  2040  000EAA  0E00               	movlw	0
  2041  000EAC  6E59               	movwf	_sens+1,c	;volatile
  2042  000EAE  0E00               	movlw	0
  2043  000EB0  6E58               	movwf	_sens,c	;volatile
  2044  000EB2                     l7885:
  2045                           
  2046                           ;main.c: 725:             while (sens){
  2047  000EB2  5058               	movf	_sens,w,c	;volatile
  2048  000EB4  1059               	iorwf	_sens+1,w,c	;volatile
  2049  000EB6  A4D8               	btfss	status,2,c
  2050  000EB8  D79E               	goto	l7855
  2051                           
  2052                           ;main.c: 774:             int pole_cl_dist = (avg_dist)-(prev_avg_dist);
  2053  000EBA  0102               	movlb	2	; () banked
  2054  000EBC  51E5               	movf	main@prev_avg_dist& (0+255),w,b	;volatile
  2055  000EBE  5C44               	subwf	_avg_dist,w,c	;volatile
  2056  000EC0  6FD1               	movwf	main@pole_cl_dist& (0+255),b
  2057  000EC2  51E6               	movf	(main@prev_avg_dist+1)& (0+255),w,b	;volatile
  2058  000EC4  5845               	subwfb	_avg_dist+1,w,c	;volatile
  2059  000EC6  6FD2               	movwf	(main@pole_cl_dist+1)& (0+255),b
  2060                           
  2061                           ; BSR set to: 2
  2062                           ;main.c: 775:             t_count = number_deploy(avg_dist, poles_detected);
  2063  000EC8  C044  F0F9         	movff	_avg_dist,number_deploy@avg_dist	;volatile
  2064  000ECC  C045  F0FA         	movff	_avg_dist+1,number_deploy@avg_dist+1	;volatile
  2065  000ED0  C2E3  F0FB         	movff	main@poles_detected,number_deploy@poles_detected
  2066  000ED4  C2E4  F0FC         	movff	main@poles_detected+1,number_deploy@poles_detected+1
  2067  000ED8  ECF6  F00F         	call	_number_deploy	;wreg free
  2068  000EDC  C0F9  F2DB         	movff	?_number_deploy,main@t_count
  2069  000EE0  C0FA  F2DC         	movff	?_number_deploy+1,main@t_count+1
  2070                           
  2071                           ;main.c: 780:             if (t_count<=2){
  2072  000EE4  0102               	movlb	2	; () banked
  2073  000EE6  BFDC               	btfsc	(main@t_count+1)& (0+255),7,b
  2074  000EE8  D006               	goto	u8560
  2075  000EEA  51DC               	movf	(main@t_count+1)& (0+255),w,b
  2076  000EEC  E162               	bnz	l7921
  2077  000EEE  0E03               	movlw	3
  2078  000EF0  5DDB               	subwf	main@t_count& (0+255),w,b
  2079  000EF2  B0D8               	btfsc	status,0,c
  2080  000EF4  D05E               	goto	u8600
  2081  000EF6                     u8560:
  2082                           
  2083                           ; BSR set to: 2
  2084                           ;main.c: 781:                 if (t_dep <8){
  2085  000EF6  BFE0               	btfsc	(main@t_dep+1)& (0+255),7,b
  2086  000EF8  D006               	goto	u8570
  2087  000EFA  51E0               	movf	(main@t_dep+1)& (0+255),w,b
  2088  000EFC  E12C               	bnz	l7909
  2089  000EFE  0E08               	movlw	8
  2090  000F00  5DDF               	subwf	main@t_dep& (0+255),w,b
  2091  000F02  B0D8               	btfsc	status,0,c
  2092  000F04  D028               	goto	u8580
  2093  000F06                     u8570:
  2094                           
  2095                           ; BSR set to: 2
  2096                           ;main.c: 784:                     stack = 1;
  2097  000F06  0E00               	movlw	0
  2098  000F08  6FDA               	movwf	(main@stack+1)& (0+255),b
  2099  000F0A  0E01               	movlw	1
  2100  000F0C  6FD9               	movwf	main@stack& (0+255),b
  2101                           
  2102                           ; BSR set to: 2
  2103                           ;main.c: 785:                                     brake();
  2104  000F0E  EC22  F01D         	call	_brake	;wreg free
  2105                           
  2106                           ;main.c: 787:                     for(int i=0; i<(t_count); i++){
  2107  000F12  0E00               	movlw	0
  2108  000F14  0102               	movlb	2	; () banked
  2109  000F16  6FD6               	movwf	(main@i+1)& (0+255),b
  2110  000F18  0E00               	movlw	0
  2111  000F1A  6FD5               	movwf	main@i& (0+255),b
  2112  000F1C  D00F               	goto	l7907
  2113  000F1E                     l7901:
  2114                           
  2115                           ; BSR set to: 1
  2116                           ;main.c: 789:                         actuators_main(stack, 110);
  2117  000F1E  C2D9  F10C         	movff	main@stack,actuators_main@stack
  2118  000F22  C2DA  F10D         	movff	main@stack+1,actuators_main@stack+1
  2119  000F26  0E00               	movlw	0
  2120  000F28  6F0F               	movwf	(actuators_main@steps2_adj+1)& (0+255),b
  2121  000F2A  0E6E               	movlw	110
  2122  000F2C  6F0E               	movwf	actuators_main@steps2_adj& (0+255),b
  2123  000F2E  ECDF  F014         	call	_actuators_main	;wreg free
  2124                           
  2125                           ;main.c: 790:                         t_dep++;
  2126  000F32  0102               	movlb	2	; () banked
  2127  000F34  4BDF               	infsnz	main@t_dep& (0+255),f,b
  2128  000F36  2BE0               	incf	(main@t_dep+1)& (0+255),f,b
  2129                           
  2130                           ; BSR set to: 2
  2131                           ;main.c: 791:                     }
  2132  000F38  4BD5               	infsnz	main@i& (0+255),f,b
  2133  000F3A  2BD6               	incf	(main@i+1)& (0+255),f,b
  2134  000F3C                     l7907:
  2135                           
  2136                           ; BSR set to: 2
  2137  000F3C  51DB               	movf	main@t_count& (0+255),w,b
  2138  000F3E  5DD5               	subwf	main@i& (0+255),w,b
  2139  000F40  51D6               	movf	(main@i+1)& (0+255),w,b
  2140  000F42  0A80               	xorlw	128
  2141  000F44  0101               	movlb	1	; () banked
  2142  000F46  6F5A               	movwf	??_main& (0+255),b
  2143  000F48  0102               	movlb	2	; () banked
  2144  000F4A  51DC               	movf	(main@t_count+1)& (0+255),w,b
  2145  000F4C  0A80               	xorlw	128
  2146  000F4E  0101               	movlb	1	; () banked
  2147  000F50  595A               	subwfb	??_main& (0+255),w,b
  2148  000F52  A0D8               	btfss	status,0,c
  2149  000F54  D7E4               	goto	l7901
  2150  000F56                     u8580:
  2151  000F56                     l7909:
  2152                           
  2153                           ;main.c: 793:                 if (t_dep >= 8){
  2154  000F56  0102               	movlb	2	; () banked
  2155  000F58  BFE0               	btfsc	(main@t_dep+1)& (0+255),7,b
  2156  000F5A  D02B               	goto	u8600
  2157  000F5C  51E0               	movf	(main@t_dep+1)& (0+255),w,b
  2158  000F5E  E104               	bnz	u8590
  2159  000F60  0E08               	movlw	8
  2160  000F62  5DDF               	subwf	main@t_dep& (0+255),w,b
  2161  000F64  A0D8               	btfss	status,0,c
  2162  000F66  D025               	goto	u8600
  2163  000F68                     u8590:
  2164                           
  2165                           ; BSR set to: 2
  2166                           ;main.c: 794:                     stack = 2;
  2167  000F68  0E00               	movlw	0
  2168  000F6A  6FDA               	movwf	(main@stack+1)& (0+255),b
  2169  000F6C  0E02               	movlw	2
  2170  000F6E  6FD9               	movwf	main@stack& (0+255),b
  2171                           
  2172                           ;main.c: 795:                     for(int i=0; i<(t_count); i++){
  2173  000F70  0E00               	movlw	0
  2174  000F72  6FD8               	movwf	(main@i_1018+1)& (0+255),b
  2175  000F74  0E00               	movlw	0
  2176  000F76  6FD7               	movwf	main@i_1018& (0+255),b
  2177  000F78  D00F               	goto	l7919
  2178  000F7A                     l7913:
  2179                           
  2180                           ; BSR set to: 1
  2181                           ;main.c: 797:                         actuators_main(stack, 110);
  2182  000F7A  C2D9  F10C         	movff	main@stack,actuators_main@stack
  2183  000F7E  C2DA  F10D         	movff	main@stack+1,actuators_main@stack+1
  2184  000F82  0E00               	movlw	0
  2185  000F84  6F0F               	movwf	(actuators_main@steps2_adj+1)& (0+255),b
  2186  000F86  0E6E               	movlw	110
  2187  000F88  6F0E               	movwf	actuators_main@steps2_adj& (0+255),b
  2188  000F8A  ECDF  F014         	call	_actuators_main	;wreg free
  2189                           
  2190                           ;main.c: 798:                         t_dep++;
  2191  000F8E  0102               	movlb	2	; () banked
  2192  000F90  4BDF               	infsnz	main@t_dep& (0+255),f,b
  2193  000F92  2BE0               	incf	(main@t_dep+1)& (0+255),f,b
  2194                           
  2195                           ; BSR set to: 2
  2196                           ;main.c: 799:                     }
  2197  000F94  4BD7               	infsnz	main@i_1018& (0+255),f,b
  2198  000F96  2BD8               	incf	(main@i_1018+1)& (0+255),f,b
  2199  000F98                     l7919:
  2200                           
  2201                           ; BSR set to: 2
  2202  000F98  51DB               	movf	main@t_count& (0+255),w,b
  2203  000F9A  5DD7               	subwf	main@i_1018& (0+255),w,b
  2204  000F9C  51D8               	movf	(main@i_1018+1)& (0+255),w,b
  2205  000F9E  0A80               	xorlw	128
  2206  000FA0  0101               	movlb	1	; () banked
  2207  000FA2  6F5A               	movwf	??_main& (0+255),b
  2208  000FA4  0102               	movlb	2	; () banked
  2209  000FA6  51DC               	movf	(main@t_count+1)& (0+255),w,b
  2210  000FA8  0A80               	xorlw	128
  2211  000FAA  0101               	movlb	1	; () banked
  2212  000FAC  595A               	subwfb	??_main& (0+255),w,b
  2213  000FAE  A0D8               	btfss	status,0,c
  2214  000FB0  D7E4               	goto	l7913
  2215  000FB2                     u8600:
  2216  000FB2                     l7921:
  2217                           
  2218                           ;main.c: 804:             Pole[poles_detected].dist_from_cl = pole_cl_dist;
  2219  000FB2  C2E3  F15A         	movff	main@poles_detected,??_main
  2220  000FB6  C2E4  F15B         	movff	main@poles_detected+1,??_main+1
  2221  000FBA  0101               	movlb	1	; () banked
  2222  000FBC  90D8               	bcf	status,0,c
  2223  000FBE  375A               	rlcf	??_main& (0+255),f,b
  2224  000FC0  375B               	rlcf	(??_main+1)& (0+255),f,b
  2225  000FC2  90D8               	bcf	status,0,c
  2226  000FC4  375A               	rlcf	??_main& (0+255),f,b
  2227  000FC6  375B               	rlcf	(??_main+1)& (0+255),f,b
  2228  000FC8  90D8               	bcf	status,0,c
  2229  000FCA  375A               	rlcf	??_main& (0+255),f,b
  2230  000FCC  375B               	rlcf	(??_main+1)& (0+255),f,b
  2231  000FCE  0E06               	movlw	6
  2232  000FD0  275A               	addwf	??_main& (0+255),f,b
  2233  000FD2  0E00               	movlw	0
  2234  000FD4  235B               	addwfc	(??_main+1)& (0+255),f,b
  2235  000FD6  0E7F               	movlw	low main@Pole
  2236  000FD8  255A               	addwf	??_main& (0+255),w,b
  2237  000FDA  6ED9               	movwf	fsr2l,c
  2238  000FDC  0E02               	movlw	high main@Pole
  2239  000FDE  215B               	addwfc	(??_main+1)& (0+255),w,b
  2240  000FE0  6EDA               	movwf	fsr2h,c
  2241  000FE2  C2D1  FFDE         	movff	main@pole_cl_dist,postinc2
  2242  000FE6  C2D2  FFDD         	movff	main@pole_cl_dist+1,postdec2
  2243                           
  2244                           ;main.c: 805:             Pole[poles_detected].dist_from_start = avg_dist;
  2245  000FEA  C2E3  F15A         	movff	main@poles_detected,??_main
  2246  000FEE  C2E4  F15B         	movff	main@poles_detected+1,??_main+1
  2247  000FF2  90D8               	bcf	status,0,c
  2248  000FF4  375A               	rlcf	??_main& (0+255),f,b
  2249  000FF6  375B               	rlcf	(??_main+1)& (0+255),f,b
  2250  000FF8  90D8               	bcf	status,0,c
  2251  000FFA  375A               	rlcf	??_main& (0+255),f,b
  2252  000FFC  375B               	rlcf	(??_main+1)& (0+255),f,b
  2253  000FFE  90D8               	bcf	status,0,c
  2254  001000  375A               	rlcf	??_main& (0+255),f,b
  2255  001002  375B               	rlcf	(??_main+1)& (0+255),f,b
  2256  001004  0E04               	movlw	4
  2257  001006  275A               	addwf	??_main& (0+255),f,b
  2258  001008  0E00               	movlw	0
  2259  00100A  235B               	addwfc	(??_main+1)& (0+255),f,b
  2260  00100C  0E7F               	movlw	low main@Pole
  2261  00100E  255A               	addwf	??_main& (0+255),w,b
  2262  001010  6ED9               	movwf	fsr2l,c
  2263  001012  0E02               	movlw	high main@Pole
  2264  001014  215B               	addwfc	(??_main+1)& (0+255),w,b
  2265  001016  6EDA               	movwf	fsr2h,c
  2266  001018  C044  FFDE         	movff	_avg_dist,postinc2	;volatile
  2267  00101C  C045  FFDD         	movff	_avg_dist+1,postdec2	;volatile
  2268                           
  2269                           ; BSR set to: 1
  2270                           ;main.c: 807:             prev_avg_dist = avg_dist ;
  2271  001020  C044  F2E5         	movff	_avg_dist,main@prev_avg_dist	;volatile
  2272  001024  C045  F2E6         	movff	_avg_dist+1,main@prev_avg_dist+1	;volatile
  2273  001028  C046  F2E7         	movff	_avg_dist+2,main@prev_avg_dist+2	;volatile
  2274  00102C  C047  F2E8         	movff	_avg_dist+3,main@prev_avg_dist+3	;volatile
  2275                           
  2276                           ; BSR set to: 1
  2277                           ;main.c: 808:             poles_detected++;
  2278  001030  0102               	movlb	2	; () banked
  2279  001032  4BE3               	infsnz	main@poles_detected& (0+255),f,b
  2280  001034  2BE4               	incf	(main@poles_detected+1)& (0+255),f,b
  2281                           
  2282                           ; BSR set to: 2
  2283                           ;main.c: 810:             start();
  2284  001036  EC34  F01B         	call	_start	;wreg free
  2285                           
  2286                           ;main.c: 816:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  2287  00103A  0E01               	movlw	1
  2288  00103C  EC73  F01D         	call	_lcdInst
  2289  001040  0E11               	movlw	17
  2290  001042  0101               	movlb	1	; () banked
  2291  001044  6F5A               	movwf	??_main& (0+255),b
  2292  001046  0E3A               	movlw	58
  2293  001048                     u8677:
  2294  001048  2EE8               	decfsz	wreg,f,c
  2295  00104A  D7FE               	bra	u8677
  2296  00104C  2F5A               	decfsz	??_main& (0+255),f,b
  2297  00104E  D7FC               	bra	u8677
  2298  001050  F000               	nop	
  2299                           
  2300                           ;main.c: 817:             printf("avg dist %d", avg_dist);
  2301  001052  0E71               	movlw	low STR_55
  2302  001054  0100               	movlb	0	; () banked
  2303  001056  6FED               	movwf	printf@fmt& (0+255),b
  2304  001058  0EFC               	movlw	high STR_55
  2305  00105A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2306  00105C  C044  F0EF         	movff	_avg_dist,?_printf+2	;volatile
  2307  001060  C045  F0F0         	movff	_avg_dist+1,?_printf+3	;volatile
  2308  001064  C046  F0F1         	movff	_avg_dist+2,?_printf+4	;volatile
  2309  001068  C047  F0F2         	movff	_avg_dist+3,?_printf+5	;volatile
  2310  00106C  ECFA  F01C         	call	_printf	;wreg free
  2311                           
  2312                           ;main.c: 818:             printf("poles d %d", poles_detected);
  2313  001070  0E95               	movlw	low STR_56
  2314  001072  0100               	movlb	0	; () banked
  2315  001074  6FED               	movwf	printf@fmt& (0+255),b
  2316  001076  0EFC               	movlw	high STR_56
  2317  001078  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2318  00107A  C2E3  F0EF         	movff	main@poles_detected,?_printf+2
  2319  00107E  C2E4  F0F0         	movff	main@poles_detected+1,?_printf+3
  2320  001082  ECFA  F01C         	call	_printf	;wreg free
  2321                           
  2322                           ;main.c: 819:                                 for (int i=0;i<4;i++){
  2323  001086  0E00               	movlw	0
  2324  001088  0102               	movlb	2	; () banked
  2325  00108A  6FE2               	movwf	(main@i_1026+1)& (0+255),b
  2326  00108C  0E00               	movlw	0
  2327  00108E  6FE1               	movwf	main@i_1026& (0+255),b
  2328  001090                     l7943:
  2329                           
  2330                           ; BSR set to: 2
  2331                           ;main.c: 820:                         sum[i] = 0 ;
  2332  001090  90D8               	bcf	status,0,c
  2333  001092  35E1               	rlcf	main@i_1026& (0+255),w,b
  2334  001094  6ED9               	movwf	fsr2l,c
  2335  001096  35E2               	rlcf	(main@i_1026+1)& (0+255),w,b
  2336  001098  6EDA               	movwf	fsr2h,c
  2337  00109A  0E38               	movlw	low _sum
  2338  00109C  26D9               	addwf	fsr2l,f,c
  2339  00109E  0E00               	movlw	high _sum
  2340  0010A0  22DA               	addwfc	fsr2h,f,c
  2341  0010A2  0E00               	movlw	0
  2342  0010A4  6EDE               	movwf	postinc2,c
  2343  0010A6  0E00               	movlw	0
  2344  0010A8  6EDD               	movwf	postdec2,c
  2345                           
  2346                           ;main.c: 821:                         a[i] =0 ;
  2347  0010AA  90D8               	bcf	status,0,c
  2348  0010AC  35E1               	rlcf	main@i_1026& (0+255),w,b
  2349  0010AE  6ED9               	movwf	fsr2l,c
  2350  0010B0  35E2               	rlcf	(main@i_1026+1)& (0+255),w,b
  2351  0010B2  6EDA               	movwf	fsr2h,c
  2352  0010B4  0E61               	movlw	low _a
  2353  0010B6  26D9               	addwf	fsr2l,f,c
  2354  0010B8  0E00               	movlw	high _a
  2355  0010BA  22DA               	addwfc	fsr2h,f,c
  2356  0010BC  0E00               	movlw	0
  2357  0010BE  6EDE               	movwf	postinc2,c
  2358  0010C0  0E00               	movlw	0
  2359  0010C2  6EDD               	movwf	postdec2,c
  2360                           
  2361                           ;main.c: 822:                         sumf[i] = 0 ;
  2362  0010C4  0E40               	movlw	low _sumf
  2363  0010C6  25E1               	addwf	main@i_1026& (0+255),w,b
  2364  0010C8  6ED9               	movwf	fsr2l,c
  2365  0010CA  0E00               	movlw	high _sumf
  2366  0010CC  21E2               	addwfc	(main@i_1026+1)& (0+255),w,b
  2367  0010CE  6EDA               	movwf	fsr2h,c
  2368  0010D0  0E00               	movlw	0
  2369  0010D2  6EDF               	movwf	indf2,c
  2370                           
  2371                           ; BSR set to: 2
  2372                           ;main.c: 824:                         for (int k=0;k<6;k++){
  2373  0010D4  0E00               	movlw	0
  2374  0010D6  6FDE               	movwf	(main@k+1)& (0+255),b
  2375  0010D8  0E00               	movlw	0
  2376  0010DA  6FDD               	movwf	main@k& (0+255),b
  2377  0010DC                     l7951:
  2378                           
  2379                           ; BSR set to: 2
  2380                           ;main.c: 825:                             dist_final[i][k] = 0;
  2381  0010DC  C2E1  F080         	movff	main@i_1026,___wmul@multiplier
  2382  0010E0  C2E2  F081         	movff	main@i_1026+1,___wmul@multiplier+1
  2383  0010E4  0E00               	movlw	0
  2384  0010E6  0100               	movlb	0	; () banked
  2385  0010E8  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2386  0010EA  0E0C               	movlw	12
  2387  0010EC  6F82               	movwf	___wmul@multiplicand& (0+255),b
  2388  0010EE  EC0E  F01D         	call	___wmul	;wreg free
  2389  0010F2  0E69               	movlw	low _dist_final
  2390  0010F4  0101               	movlb	1	; () banked
  2391  0010F6  6F5A               	movwf	??_main& (0+255),b
  2392  0010F8  0E01               	movlw	high _dist_final
  2393  0010FA  6F5B               	movwf	(??_main+1)& (0+255),b
  2394  0010FC  0100               	movlb	0	; () banked
  2395  0010FE  5180               	movf	?___wmul& (0+255),w,b
  2396  001100  0101               	movlb	1	; () banked
  2397  001102  275A               	addwf	??_main& (0+255),f,b
  2398  001104  0100               	movlb	0	; () banked
  2399  001106  5181               	movf	(?___wmul+1)& (0+255),w,b
  2400  001108  0101               	movlb	1	; () banked
  2401  00110A  235B               	addwfc	(??_main+1)& (0+255),f,b
  2402  00110C  90D8               	bcf	status,0,c
  2403  00110E  0102               	movlb	2	; () banked
  2404  001110  35DD               	rlcf	main@k& (0+255),w,b
  2405  001112  6ED9               	movwf	fsr2l,c
  2406  001114  35DE               	rlcf	(main@k+1)& (0+255),w,b
  2407  001116  6EDA               	movwf	fsr2h,c
  2408  001118  0101               	movlb	1	; () banked
  2409  00111A  515A               	movf	??_main& (0+255),w,b
  2410  00111C  26D9               	addwf	fsr2l,f,c
  2411  00111E  515B               	movf	(??_main+1)& (0+255),w,b
  2412  001120  22DA               	addwfc	fsr2h,f,c
  2413  001122  0E00               	movlw	0
  2414  001124  6EDE               	movwf	postinc2,c
  2415  001126  0E00               	movlw	0
  2416  001128  6EDD               	movwf	postdec2,c
  2417                           
  2418                           ; BSR set to: 1
  2419                           ;main.c: 826:                         }
  2420  00112A  0102               	movlb	2	; () banked
  2421  00112C  4BDD               	infsnz	main@k& (0+255),f,b
  2422  00112E  2BDE               	incf	(main@k+1)& (0+255),f,b
  2423                           
  2424                           ; BSR set to: 2
  2425  001130  BFDE               	btfsc	(main@k+1)& (0+255),7,b
  2426  001132  D7D4               	goto	l7951
  2427  001134  51DE               	movf	(main@k+1)& (0+255),w,b
  2428  001136  E104               	bnz	u8610
  2429  001138  0E06               	movlw	6
  2430  00113A  5DDD               	subwf	main@k& (0+255),w,b
  2431  00113C  A0D8               	btfss	status,0,c
  2432  00113E  D7CE               	goto	l7951
  2433  001140                     u8610:
  2434                           
  2435                           ; BSR set to: 2
  2436                           ;main.c: 827:                     }
  2437  001140  4BE1               	infsnz	main@i_1026& (0+255),f,b
  2438  001142  2BE2               	incf	(main@i_1026+1)& (0+255),f,b
  2439                           
  2440                           ; BSR set to: 2
  2441  001144  BFE2               	btfsc	(main@i_1026+1)& (0+255),7,b
  2442  001146  D7A4               	goto	l7943
  2443  001148  51E2               	movf	(main@i_1026+1)& (0+255),w,b
  2444  00114A  E104               	bnz	u8620
  2445  00114C  0E04               	movlw	4
  2446  00114E  5DE1               	subwf	main@i_1026& (0+255),w,b
  2447  001150  A0D8               	btfss	status,0,c
  2448  001152  D79E               	goto	l7943
  2449  001154                     u8620:
  2450                           
  2451                           ; BSR set to: 2
  2452                           ;main.c: 828:             _delay((unsigned long)((3000)*(10000000/4000.0)));
  2453  001154  0E27               	movlw	39
  2454  001156  0101               	movlb	1	; () banked
  2455  001158  6F5B               	movwf	(??_main+1)& (0+255),b
  2456  00115A  0E0D               	movlw	13
  2457  00115C  6F5A               	movwf	??_main& (0+255),b
  2458  00115E  0E26               	movlw	38
  2459  001160                     u8687:
  2460  001160  2EE8               	decfsz	wreg,f,c
  2461  001162  D7FE               	bra	u8687
  2462  001164  2F5A               	decfsz	??_main& (0+255),f,b
  2463  001166  D7FC               	bra	u8687
  2464  001168  2F5B               	decfsz	(??_main+1)& (0+255),f,b
  2465  00116A  D7FA               	bra	u8687
  2466  00116C  D04D               	goto	L1
  2467  00116E                     l7963:
  2468                           
  2469                           ; BSR set to: 2
  2470                           ;main.c: 831:             brake();
  2471  00116E  EC22  F01D         	call	_brake	;wreg free
  2472                           
  2473                           ;main.c: 832:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  2474  001172  0E01               	movlw	1
  2475  001174  EC73  F01D         	call	_lcdInst
  2476  001178  0E11               	movlw	17
  2477  00117A  0101               	movlb	1	; () banked
  2478  00117C  6F5A               	movwf	??_main& (0+255),b
  2479  00117E  0E3A               	movlw	58
  2480  001180                     u8697:
  2481  001180  2EE8               	decfsz	wreg,f,c
  2482  001182  D7FE               	bra	u8697
  2483  001184  2F5A               	decfsz	??_main& (0+255),f,b
  2484  001186  D7FC               	bra	u8697
  2485  001188  F000               	nop	
  2486                           
  2487                           ;main.c: 833:             printf("poles done");
  2488  00118A  0EAB               	movlw	low STR_57
  2489  00118C  0100               	movlb	0	; () banked
  2490  00118E  6FED               	movwf	printf@fmt& (0+255),b
  2491  001190  0EFC               	movlw	high STR_57
  2492  001192  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2493  001194  ECFA  F01C         	call	_printf	;wreg free
  2494                           
  2495                           ;main.c: 834:             _delay((unsigned long)((1000)*(10000000/4000.0)));
  2496  001198  0E0D               	movlw	13
  2497  00119A  0101               	movlb	1	; () banked
  2498  00119C  6F5B               	movwf	(??_main+1)& (0+255),b
  2499  00119E  0EAF               	movlw	175
  2500  0011A0  6F5A               	movwf	??_main& (0+255),b
  2501  0011A2  0EB6               	movlw	182
  2502  0011A4                     u8707:
  2503  0011A4  2EE8               	decfsz	wreg,f,c
  2504  0011A6  D7FE               	bra	u8707
  2505  0011A8  2F5A               	decfsz	??_main& (0+255),f,b
  2506  0011AA  D7FC               	bra	u8707
  2507  0011AC  2F5B               	decfsz	(??_main+1)& (0+255),f,b
  2508  0011AE  D7FA               	bra	u8707
  2509  0011B0  F000               	nop	
  2510                           
  2511                           ;main.c: 835:             UI_main(t_dep, poles_detected);
  2512  0011B2  C2DF  F0F9         	movff	main@t_dep,UI_main@t_dep
  2513  0011B6  C2E0  F0FA         	movff	main@t_dep+1,UI_main@t_dep+1
  2514  0011BA  C2E3  F0FB         	movff	main@poles_detected,UI_main@poles_detected
  2515  0011BE  C2E4  F0FC         	movff	main@poles_detected+1,UI_main@poles_detected+1
  2516  0011C2  EC09  F000         	call	_UI_main	;wreg free
  2517                           
  2518                           ;main.c: 836:             backwards();
  2519  0011C6  EC35  F01D         	call	_backwards	;wreg free
  2520                           
  2521                           ;main.c: 837:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  2522  0011CA  0E01               	movlw	1
  2523  0011CC  EC73  F01D         	call	_lcdInst
  2524  0011D0  0E11               	movlw	17
  2525  0011D2  0101               	movlb	1	; () banked
  2526  0011D4  6F5A               	movwf	??_main& (0+255),b
  2527  0011D6  0E3A               	movlw	58
  2528  0011D8                     u8717:
  2529  0011D8  2EE8               	decfsz	wreg,f,c
  2530  0011DA  D7FE               	bra	u8717
  2531  0011DC  2F5A               	decfsz	??_main& (0+255),f,b
  2532  0011DE  D7FC               	bra	u8717
  2533  0011E0  F000               	nop	
  2534                           
  2535                           ;main.c: 838:             printf("backwards");
  2536  0011E2  0EE9               	movlw	low STR_58
  2537  0011E4  0100               	movlb	0	; () banked
  2538  0011E6  6FED               	movwf	printf@fmt& (0+255),b
  2539  0011E8  0EFC               	movlw	high STR_58
  2540  0011EA  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2541  0011EC  ECFA  F01C         	call	_printf	;wreg free
  2542                           
  2543                           ;main.c: 839:             _delay((unsigned long)((1000)*(10000000/4000.0)));
  2544  0011F0  0E0D               	movlw	13
  2545  0011F2  0101               	movlb	1	; () banked
  2546  0011F4  6F5B               	movwf	(??_main+1)& (0+255),b
  2547  0011F6  0EAF               	movlw	175
  2548  0011F8  6F5A               	movwf	??_main& (0+255),b
  2549  0011FA  0EB6               	movlw	182
  2550  0011FC                     u8727:
  2551  0011FC  2EE8               	decfsz	wreg,f,c
  2552  0011FE  D7FE               	bra	u8727
  2553  001200  2F5A               	decfsz	??_main& (0+255),f,b
  2554  001202  D7FC               	bra	u8727
  2555  001204  2F5B               	decfsz	(??_main+1)& (0+255),f,b
  2556  001206  D7FA               	bra	u8727
  2557  001208                     L1:
  2558  001208  F000               	nop	
  2559  00120A  D5E0               	goto	l7849
  2560  00120C                     __end_of_main:
  2561                           	opt callstack 0
  2562                           
  2563 ;; *************** function _ultrasonic_main *****************
  2564 ;; Defined at:
  2565 ;;		line 291 in file "main.c"
  2566 ;; Parameters:    Size  Location     Type
  2567 ;;		None
  2568 ;; Auto vars:     Size  Location     Type
  2569 ;;  min_us_dist     2    8[BANK1 ] int 
  2570 ;;  steps2_adj      2    6[BANK1 ] int 
  2571 ;;  step2_offset    2    4[BANK1 ] int 
  2572 ;;  sensed          2    2[BANK1 ] int 
  2573 ;;  min_us_dist     2    0        int 
  2574 ;; Return value:  Size  Location     Type
  2575 ;;                  2  122[BANK0 ] int 
  2576 ;; Registers used:
  2577 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2578 ;; Tracked objects:
  2579 ;;		On entry : 0/0
  2580 ;;		On exit  : 0/0
  2581 ;;		Unchanged: 0/0
  2582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2583 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2584 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2585 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2586 ;;      Totals:         0       4      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2587 ;;Total ram usage:       14 bytes
  2588 ;; Hardware stack levels used:    1
  2589 ;; Hardware stack levels required when called:   15
  2590 ;; This function calls:
  2591 ;;		_I2C_Master_Read
  2592 ;;		_I2C_Master_Start
  2593 ;;		_I2C_Master_Stop
  2594 ;;		_I2C_Master_Write
  2595 ;;		_abs
  2596 ;;		_lcdInst
  2597 ;;		_min
  2598 ;;		_print_echo
  2599 ;;		_printf
  2600 ;;		_sense_tires
  2601 ;;		_trig
  2602 ;; This function is called by:
  2603 ;;		_main
  2604 ;; This function uses a non-reentrant model
  2605 ;;
  2606                           
  2607                           	psect	text1
  2608  002212                     __ptext1:
  2609                           	opt callstack 0
  2610  002212                     _ultrasonic_main:
  2611                           	opt callstack 15
  2612                           
  2613                           ;main.c: 292:     TRISBbits.RB0 = 0;
  2614                           
  2615                           ;incstack = 0
  2616  002212  9093               	bcf	3987,0,c	;volatile
  2617                           
  2618                           ;main.c: 293:     LATBbits.LATB0 = 1;
  2619  002214  808A               	bsf	3978,0,c	;volatile
  2620                           
  2621                           ;main.c: 295:  TRISB = 0b11110000;
  2622  002216  0EF0               	movlw	240
  2623  002218  6E93               	movwf	3987,c	;volatile
  2624                           
  2625                           ;main.c: 297:     RBIF = 0;
  2626  00221A  90F2               	bcf	4082,0,c	;volatile
  2627                           
  2628                           ;main.c: 298:  RBIE = 1;
  2629  00221C  86F2               	bsf	4082,3,c	;volatile
  2630                           
  2631                           ;main.c: 300:     int sensed = 0;
  2632  00221E  0E00               	movlw	0
  2633  002220  0101               	movlb	1	; () banked
  2634  002222  6F03               	movwf	(ultrasonic_main@sensed+1)& (0+255),b
  2635  002224  0E00               	movlw	0
  2636  002226  6F02               	movwf	ultrasonic_main@sensed& (0+255),b
  2637                           
  2638                           ;main.c: 302:     int steps2_adj=0;
  2639  002228  0E00               	movlw	0
  2640  00222A  6F07               	movwf	(ultrasonic_main@steps2_adj+1)& (0+255),b
  2641  00222C  0E00               	movlw	0
  2642  00222E  6F06               	movwf	ultrasonic_main@steps2_adj& (0+255),b
  2643                           
  2644                           ;main.c: 303:     int step2_offset=0;
  2645  002230  0E00               	movlw	0
  2646  002232  6F05               	movwf	(ultrasonic_main@step2_offset+1)& (0+255),b
  2647  002234  0E00               	movlw	0
  2648  002236  6F04               	movwf	ultrasonic_main@step2_offset& (0+255),b
  2649                           
  2650                           ;main.c: 304:     while(send){
  2651  002238  D078               	goto	u8030
  2652  00223A                     l7407:
  2653                           
  2654                           ;main.c: 305:         for (meas=0; meas<3;meas++){
  2655  00223A  0E00               	movlw	0
  2656  00223C  6E51               	movwf	_meas+1,c	;volatile
  2657  00223E  0E00               	movlw	0
  2658  002240  6E50               	movwf	_meas,c	;volatile
  2659  002242  BE51               	btfsc	_meas+1,7,c	;volatile
  2660  002244  D003               	goto	l7413
  2661  002246  5051               	movf	_meas+1,w,c	;volatile
  2662  002248  E170               	bnz	l7445
  2663  00224A  D06B               	goto	L2
  2664  00224C                     l7413:
  2665                           
  2666                           ;main.c: 306:         trig();
  2667  00224C  EC95  F016         	call	_trig	;wreg free
  2668                           
  2669                           ;main.c: 307:         RBIE = 0;
  2670  002250  96F2               	bcf	4082,3,c	;volatile
  2671                           
  2672                           ;main.c: 308:         print_echo();
  2673  002252  EC01  F012         	call	_print_echo	;wreg free
  2674                           
  2675                           ;main.c: 309:         RBIE = 1;
  2676  002256  86F2               	bsf	4082,3,c	;volatile
  2677                           
  2678                           ;main.c: 310:                     int min_us_dist = min(a, 4);
  2679  002258  0E61               	movlw	low _a
  2680  00225A  0100               	movlb	0	; () banked
  2681  00225C  6F80               	movwf	min@array& (0+255),b
  2682  00225E  0E00               	movlw	high _a
  2683  002260  6F81               	movwf	(min@array+1)& (0+255),b
  2684  002262  0E00               	movlw	0
  2685  002264  6F83               	movwf	(min@size+1)& (0+255),b
  2686  002266  0E04               	movlw	4
  2687  002268  6F82               	movwf	min@size& (0+255),b
  2688  00226A  EC0D  F016         	call	_min	;wreg free
  2689  00226E  C080  F108         	movff	?_min,ultrasonic_main@min_us_dist_917
  2690  002272  C081  F109         	movff	?_min+1,ultrasonic_main@min_us_dist_917+1
  2691                           
  2692                           ;main.c: 311:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  2693  002276  0E01               	movlw	1
  2694  002278  EC73  F01D         	call	_lcdInst
  2695  00227C  0E11               	movlw	17
  2696  00227E  0100               	movlb	0	; () banked
  2697  002280  6FFC               	movwf	??_ultrasonic_main& (0+255),b
  2698  002282  0E3A               	movlw	58
  2699  002284                     u8737:
  2700  002284  2EE8               	decfsz	wreg,f,c
  2701  002286  D7FE               	bra	u8737
  2702  002288  2FFC               	decfsz	??_ultrasonic_main& (0+255),f,b
  2703  00228A  D7FC               	bra	u8737
  2704  00228C  F000               	nop	
  2705                           
  2706                           ;main.c: 312:     printf("minimum %d", min_us_dist);
  2707  00228E  0EA0               	movlw	low STR_18
  2708  002290  0100               	movlb	0	; () banked
  2709  002292  6FED               	movwf	printf@fmt& (0+255),b
  2710  002294  0EFC               	movlw	high STR_18
  2711  002296  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2712  002298  C108  F0EF         	movff	ultrasonic_main@min_us_dist_917,?_printf+2
  2713  00229C  C109  F0F0         	movff	ultrasonic_main@min_us_dist_917+1,?_printf+3
  2714  0022A0  ECFA  F01C         	call	_printf	;wreg free
  2715                           
  2716                           ;main.c: 313:     _delay((unsigned long)((1000)*(10000000/4000.0)));
  2717  0022A4  0E0D               	movlw	13
  2718  0022A6  0100               	movlb	0	; () banked
  2719  0022A8  6FFD               	movwf	(??_ultrasonic_main+1)& (0+255),b
  2720  0022AA  0EAF               	movlw	175
  2721  0022AC  6FFC               	movwf	??_ultrasonic_main& (0+255),b
  2722  0022AE  0EB6               	movlw	182
  2723  0022B0                     u8747:
  2724  0022B0  2EE8               	decfsz	wreg,f,c
  2725  0022B2  D7FE               	bra	u8747
  2726  0022B4  2FFC               	decfsz	??_ultrasonic_main& (0+255),f,b
  2727  0022B6  D7FC               	bra	u8747
  2728  0022B8  2FFD               	decfsz	(??_ultrasonic_main+1)& (0+255),f,b
  2729  0022BA  D7FA               	bra	u8747
  2730  0022BC  F000               	nop	
  2731                           
  2732                           ;main.c: 314:     if (min_us_dist<14){
  2733  0022BE  0101               	movlb	1	; () banked
  2734  0022C0  BF09               	btfsc	(ultrasonic_main@min_us_dist_917+1)& (0+255),7,b
  2735  0022C2  D006               	goto	u8020
  2736  0022C4  5109               	movf	(ultrasonic_main@min_us_dist_917+1)& (0+255),w,b
  2737  0022C6  E109               	bnz	l7435
  2738  0022C8  0E0E               	movlw	14
  2739  0022CA  5D08               	subwf	ultrasonic_main@min_us_dist_917& (0+255),w,b
  2740  0022CC  B0D8               	btfsc	status,0,c
  2741  0022CE  D005               	goto	l7435
  2742  0022D0                     u8020:
  2743                           
  2744                           ; BSR set to: 1
  2745                           ;main.c: 315:         step2_offset = 0;
  2746  0022D0  0E00               	movlw	0
  2747  0022D2  6F05               	movwf	(ultrasonic_main@step2_offset+1)& (0+255),b
  2748  0022D4  0E00               	movlw	0
  2749  0022D6  6F04               	movwf	ultrasonic_main@step2_offset& (0+255),b
  2750                           
  2751                           ;main.c: 316:     }
  2752  0022D8  D00F               	goto	l7437
  2753  0022DA                     l7435:
  2754                           
  2755                           ; BSR set to: 1
  2756                           ;main.c: 318:     step2_offset = abs(min_us_dist - 14);
  2757  0022DA  0EF2               	movlw	242
  2758  0022DC  2508               	addwf	ultrasonic_main@min_us_dist_917& (0+255),w,b
  2759  0022DE  0100               	movlb	0	; () banked
  2760  0022E0  6F92               	movwf	abs@a& (0+255),b
  2761  0022E2  0EFF               	movlw	255
  2762  0022E4  0101               	movlb	1	; () banked
  2763  0022E6  2109               	addwfc	(ultrasonic_main@min_us_dist_917+1)& (0+255),w,b
  2764  0022E8  0100               	movlb	0	; () banked
  2765  0022EA  6F93               	movwf	(abs@a+1)& (0+255),b
  2766  0022EC  EC23  F01C         	call	_abs	;wreg free
  2767  0022F0  C092  F104         	movff	?_abs,ultrasonic_main@step2_offset
  2768  0022F4  C093  F105         	movff	?_abs+1,ultrasonic_main@step2_offset+1
  2769  0022F8                     l7437:
  2770                           
  2771                           ;main.c: 320:     steps2_adj = 110 + step2_offset;
  2772  0022F8  0E6E               	movlw	110
  2773  0022FA  0101               	movlb	1	; () banked
  2774  0022FC  2504               	addwf	ultrasonic_main@step2_offset& (0+255),w,b
  2775  0022FE  6F06               	movwf	ultrasonic_main@steps2_adj& (0+255),b
  2776  002300  0E00               	movlw	0
  2777  002302  2105               	addwfc	(ultrasonic_main@step2_offset+1)& (0+255),w,b
  2778  002304  6F07               	movwf	(ultrasonic_main@steps2_adj+1)& (0+255),b
  2779                           
  2780                           ; BSR set to: 1
  2781                           ;main.c: 321:         sensed++;
  2782  002306  4B02               	infsnz	ultrasonic_main@sensed& (0+255),f,b
  2783  002308  2B03               	incf	(ultrasonic_main@sensed+1)& (0+255),f,b
  2784                           
  2785                           ; BSR set to: 1
  2786                           ;main.c: 322:         sense_tires(sensed);
  2787  00230A  C102  F083         	movff	ultrasonic_main@sensed,sense_tires@sensed
  2788  00230E  C103  F084         	movff	ultrasonic_main@sensed+1,sense_tires@sensed+1
  2789  002312  EC8F  F018         	call	_sense_tires	;wreg free
  2790                           
  2791                           ;main.c: 323:         }
  2792  002316  4A50               	infsnz	_meas,f,c	;volatile
  2793  002318  2A51               	incf	_meas+1,f,c	;volatile
  2794  00231A  BE51               	btfsc	_meas+1,7,c	;volatile
  2795  00231C  D797               	goto	l7413
  2796  00231E  5051               	movf	_meas+1,w,c	;volatile
  2797  002320  E104               	bnz	u8030
  2798  002322                     L2:
  2799  002322  0E03               	movlw	3
  2800  002324  5C50               	subwf	_meas,w,c	;volatile
  2801  002326  A0D8               	btfss	status,0,c
  2802  002328  D791               	goto	l7413
  2803  00232A                     u8030:
  2804  00232A                     l7445:
  2805                           
  2806                           ;main.c: 304:     while(send){
  2807  00232A  506D               	movf	_send,w,c
  2808  00232C  B4D8               	btfsc	status,2,c
  2809  00232E  D03D               	goto	l7461
  2810  002330  D784               	goto	l7407
  2811  002332                     l7447:
  2812                           
  2813                           ;main.c: 335:         I2C_Master_Start();
  2814  002332  EC84  F01D         	call	_I2C_Master_Start	;wreg free
  2815                           
  2816                           ;main.c: 336:         I2C_Master_Write(0b00010001);
  2817  002336  0E00               	movlw	0
  2818  002338  0100               	movlb	0	; () banked
  2819  00233A  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  2820  00233C  0E11               	movlw	17
  2821  00233E  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  2822  002340  EC7B  F01D         	call	_I2C_Master_Write	;wreg free
  2823                           
  2824                           ;main.c: 337:         avg_dist = I2C_Master_Read(1);
  2825  002344  0E01               	movlw	1
  2826  002346  ECE5  F01C         	call	_I2C_Master_Read
  2827  00234A  0100               	movlb	0	; () banked
  2828  00234C  6FFC               	movwf	??_ultrasonic_main& (0+255),b
  2829  00234E  51FC               	movf	??_ultrasonic_main& (0+255),w,b
  2830  002350  6E44               	movwf	_avg_dist,c	;volatile
  2831  002352  6A45               	clrf	_avg_dist+1,c	;volatile
  2832  002354  6A46               	clrf	_avg_dist+2,c	;volatile
  2833  002356  6A47               	clrf	_avg_dist+3,c	;volatile
  2834                           
  2835                           ;main.c: 338:         I2C_Master_Stop();
  2836  002358  EC80  F01D         	call	_I2C_Master_Stop	;wreg free
  2837                           
  2838                           ;main.c: 339:         if(avg_dist){
  2839  00235C  5044               	movf	_avg_dist,w,c	;volatile
  2840  00235E  1045               	iorwf	_avg_dist+1,w,c	;volatile
  2841  002360  1046               	iorwf	_avg_dist+2,w,c	;volatile
  2842  002362  1047               	iorwf	_avg_dist+3,w,c	;volatile
  2843  002364  B4D8               	btfsc	status,2,c
  2844  002366  D01E               	goto	l7459
  2845                           
  2846                           ;main.c: 342:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  2847  002368  0E01               	movlw	1
  2848  00236A  EC73  F01D         	call	_lcdInst
  2849  00236E  0E11               	movlw	17
  2850  002370  0100               	movlb	0	; () banked
  2851  002372  6FFC               	movwf	??_ultrasonic_main& (0+255),b
  2852  002374  0E3A               	movlw	58
  2853  002376                     u8757:
  2854  002376  2EE8               	decfsz	wreg,f,c
  2855  002378  D7FE               	bra	u8757
  2856  00237A  2FFC               	decfsz	??_ultrasonic_main& (0+255),f,b
  2857  00237C  D7FC               	bra	u8757
  2858  00237E  F000               	nop	
  2859                           
  2860                           ;main.c: 350:             printf("%d",avg_dist);
  2861  002380  0E20               	movlw	low (STR_37+11)
  2862  002382  0100               	movlb	0	; () banked
  2863  002384  6FED               	movwf	printf@fmt& (0+255),b
  2864  002386  0EFC               	movlw	high (STR_37+11)
  2865  002388  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2866  00238A  C044  F0EF         	movff	_avg_dist,?_printf+2	;volatile
  2867  00238E  C045  F0F0         	movff	_avg_dist+1,?_printf+3	;volatile
  2868  002392  C046  F0F1         	movff	_avg_dist+2,?_printf+4	;volatile
  2869  002396  C047  F0F2         	movff	_avg_dist+3,?_printf+5	;volatile
  2870  00239A  ECFA  F01C         	call	_printf	;wreg free
  2871                           
  2872                           ;main.c: 357:         send = 1;
  2873  00239E  0E01               	movlw	1
  2874  0023A0  6E6D               	movwf	_send,c
  2875                           
  2876                           ;main.c: 358:         }
  2877  0023A2  D003               	goto	l7461
  2878  0023A4                     l7459:
  2879                           
  2880                           ;main.c: 361:             send = 0;
  2881  0023A4  0E00               	movlw	0
  2882  0023A6  6E6D               	movwf	_send,c
  2883                           
  2884                           ;main.c: 362:             break;
  2885  0023A8  D003               	goto	u8060
  2886  0023AA                     l7461:
  2887                           
  2888                           ;main.c: 333:     while (~send){
  2889  0023AA  046D               	decf	_send,w,c
  2890  0023AC  A4D8               	btfss	status,2,c
  2891  0023AE  D7C1               	goto	l7447
  2892  0023B0                     u8060:
  2893                           
  2894                           ;main.c: 365:          { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));}
      +                          ;
  2895  0023B0  0E01               	movlw	1
  2896  0023B2  EC73  F01D         	call	_lcdInst
  2897  0023B6  0E11               	movlw	17
  2898  0023B8  0100               	movlb	0	; () banked
  2899  0023BA  6FFC               	movwf	??_ultrasonic_main& (0+255),b
  2900  0023BC  0E3A               	movlw	58
  2901  0023BE                     u8767:
  2902  0023BE  2EE8               	decfsz	wreg,f,c
  2903  0023C0  D7FE               	bra	u8767
  2904  0023C2  2FFC               	decfsz	??_ultrasonic_main& (0+255),f,b
  2905  0023C4  D7FC               	bra	u8767
  2906  0023C6  F000               	nop	
  2907                           
  2908                           ;main.c: 366:     printf("stepsadj %d", steps2_adj);
  2909  0023C8  0E65               	movlw	low STR_20
  2910  0023CA  0100               	movlb	0	; () banked
  2911  0023CC  6FED               	movwf	printf@fmt& (0+255),b
  2912  0023CE  0EFC               	movlw	high STR_20
  2913  0023D0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2914  0023D2  C106  F0EF         	movff	ultrasonic_main@steps2_adj,?_printf+2
  2915  0023D6  C107  F0F0         	movff	ultrasonic_main@steps2_adj+1,?_printf+3
  2916  0023DA  ECFA  F01C         	call	_printf	;wreg free
  2917                           
  2918                           ;main.c: 367:     _delay((unsigned long)((1000)*(10000000/4000.0)));
  2919  0023DE  0E0D               	movlw	13
  2920  0023E0  0100               	movlb	0	; () banked
  2921  0023E2  6FFD               	movwf	(??_ultrasonic_main+1)& (0+255),b
  2922  0023E4  0EAF               	movlw	175
  2923  0023E6  6FFC               	movwf	??_ultrasonic_main& (0+255),b
  2924  0023E8  0EB6               	movlw	182
  2925  0023EA                     u8777:
  2926  0023EA  2EE8               	decfsz	wreg,f,c
  2927  0023EC  D7FE               	bra	u8777
  2928  0023EE  2FFC               	decfsz	??_ultrasonic_main& (0+255),f,b
  2929  0023F0  D7FC               	bra	u8777
  2930  0023F2  2FFD               	decfsz	(??_ultrasonic_main+1)& (0+255),f,b
  2931  0023F4  D7FA               	bra	u8777
  2932  0023F6  F000               	nop	
  2933                           
  2934                           ;main.c: 368:     return steps2_adj;
  2935  0023F8  C106  F0FA         	movff	ultrasonic_main@steps2_adj,?_ultrasonic_main
  2936  0023FC  C107  F0FB         	movff	ultrasonic_main@steps2_adj+1,?_ultrasonic_main+1
  2937  002400  0012               	return		;funcret
  2938  002402                     __end_of_ultrasonic_main:
  2939                           	opt callstack 0
  2940                           
  2941 ;; *************** function _trig *****************
  2942 ;; Defined at:
  2943 ;;		line 190 in file "main.c"
  2944 ;; Parameters:    Size  Location     Type
  2945 ;;		None
  2946 ;; Auto vars:     Size  Location     Type
  2947 ;;		None
  2948 ;; Return value:  Size  Location     Type
  2949 ;;                  1    wreg      void 
  2950 ;; Registers used:
  2951 ;;		wreg, status,2, status,0
  2952 ;; Tracked objects:
  2953 ;;		On entry : 0/0
  2954 ;;		On exit  : 0/0
  2955 ;;		Unchanged: 0/0
  2956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2959 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2960 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2961 ;;Total ram usage:        2 bytes
  2962 ;; Hardware stack levels used:    1
  2963 ;; Hardware stack levels required when called:    3
  2964 ;; This function calls:
  2965 ;;		Nothing
  2966 ;; This function is called by:
  2967 ;;		_ultrasonic_main
  2968 ;; This function uses a non-reentrant model
  2969 ;;
  2970                           
  2971                           	psect	text2
  2972  002D2A                     __ptext2:
  2973                           	opt callstack 0
  2974  002D2A                     _trig:
  2975                           	opt callstack 26
  2976                           
  2977                           ;main.c: 191:     for(b=1; b<5; b++){
  2978                           
  2979                           ;incstack = 0
  2980  002D2A  0E00               	movlw	0
  2981  002D2C  6E5B               	movwf	_b+1,c
  2982  002D2E  0E01               	movlw	1
  2983  002D30  6E5A               	movwf	_b,c
  2984  002D32  BE5B               	btfsc	_b+1,7,c
  2985  002D34  D004               	goto	l7091
  2986  002D36  505B               	movf	_b+1,w,c
  2987  002D38  E101               	bnz	u7530
  2988  002D3A  D072               	goto	L3
  2989  002D3C                     u7530:
  2990  002D3C  0012               	return	
  2991  002D3E                     l7091:
  2992                           
  2993                           ;main.c: 192:         TMR1H = 0;
  2994  002D3E  0E00               	movlw	0
  2995  002D40  6ECF               	movwf	4047,c	;volatile
  2996                           
  2997                           ;main.c: 193:         TMR1L = 0;
  2998  002D42  0E00               	movlw	0
  2999  002D44  6ECE               	movwf	4046,c	;volatile
  3000                           
  3001                           ;main.c: 194:         if(b==1){
  3002  002D46  045A               	decf	_b,w,c
  3003  002D48  105B               	iorwf	_b+1,w,c
  3004  002D4A  A4D8               	btfss	status,2,c
  3005  002D4C  D015               	goto	l7103
  3006                           
  3007                           ;main.c: 195:             RBIE = 0;
  3008  002D4E  96F2               	bcf	4082,3,c	;volatile
  3009                           
  3010                           ;main.c: 196:             RD1 = 1;
  3011  002D50  8283               	bsf	3971,1,c	;volatile
  3012                           
  3013                           ;main.c: 197:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  3014  002D52  0E08               	movlw	8
  3015  002D54                     u8787:
  3016  002D54  2EE8               	decfsz	wreg,f,c
  3017  002D56  D7FE               	bra	u8787
  3018  002D58  F000               	nop	
  3019                           
  3020                           ;main.c: 198:             RD1 = 0;
  3021  002D5A  9283               	bcf	3971,1,c	;volatile
  3022                           
  3023                           ;main.c: 200:             RBIE = 1;
  3024  002D5C  86F2               	bsf	4082,3,c	;volatile
  3025                           
  3026                           ;main.c: 201:             _delay((unsigned long)((135)*(10000000/4000.0)));
  3027  002D5E  0E02               	movlw	2
  3028  002D60  0100               	movlb	0	; () banked
  3029  002D62  6F81               	movwf	(??_trig+1)& (0+255),b
  3030  002D64  0EB7               	movlw	183
  3031  002D66  6F80               	movwf	??_trig& (0+255),b
  3032  002D68  0E4C               	movlw	76
  3033  002D6A                     u8797:
  3034  002D6A  2EE8               	decfsz	wreg,f,c
  3035  002D6C  D7FE               	bra	u8797
  3036  002D6E  2F80               	decfsz	??_trig& (0+255),f,b
  3037  002D70  D7FC               	bra	u8797
  3038  002D72  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  3039  002D74  D7FA               	bra	u8797
  3040  002D76  F000               	nop	
  3041  002D78                     l7103:
  3042                           
  3043                           ;main.c: 203:         if(b==2){
  3044  002D78  0E02               	movlw	2
  3045  002D7A  185A               	xorwf	_b,w,c
  3046  002D7C  105B               	iorwf	_b+1,w,c
  3047  002D7E  A4D8               	btfss	status,2,c
  3048  002D80  D015               	goto	l7113
  3049                           
  3050                           ;main.c: 204:             RBIE = 0;
  3051  002D82  96F2               	bcf	4082,3,c	;volatile
  3052                           
  3053                           ;main.c: 205:             RD0 = 1;
  3054  002D84  8083               	bsf	3971,0,c	;volatile
  3055                           
  3056                           ;main.c: 206:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  3057  002D86  0E08               	movlw	8
  3058  002D88                     u8807:
  3059  002D88  2EE8               	decfsz	wreg,f,c
  3060  002D8A  D7FE               	bra	u8807
  3061  002D8C  F000               	nop	
  3062                           
  3063                           ;main.c: 207:             RD0 = 0;
  3064  002D8E  9083               	bcf	3971,0,c	;volatile
  3065                           
  3066                           ;main.c: 209:             RBIE = 1;
  3067  002D90  86F2               	bsf	4082,3,c	;volatile
  3068                           
  3069                           ;main.c: 210:             _delay((unsigned long)((135)*(10000000/4000.0)));
  3070  002D92  0E02               	movlw	2
  3071  002D94  0100               	movlb	0	; () banked
  3072  002D96  6F81               	movwf	(??_trig+1)& (0+255),b
  3073  002D98  0EB7               	movlw	183
  3074  002D9A  6F80               	movwf	??_trig& (0+255),b
  3075  002D9C  0E4C               	movlw	76
  3076  002D9E                     u8817:
  3077  002D9E  2EE8               	decfsz	wreg,f,c
  3078  002DA0  D7FE               	bra	u8817
  3079  002DA2  2F80               	decfsz	??_trig& (0+255),f,b
  3080  002DA4  D7FC               	bra	u8817
  3081  002DA6  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  3082  002DA8  D7FA               	bra	u8817
  3083  002DAA  F000               	nop	
  3084  002DAC                     l7113:
  3085                           
  3086                           ;main.c: 212:         if(b==3){
  3087  002DAC  0E03               	movlw	3
  3088  002DAE  185A               	xorwf	_b,w,c
  3089  002DB0  105B               	iorwf	_b+1,w,c
  3090  002DB2  A4D8               	btfss	status,2,c
  3091  002DB4  D015               	goto	l7123
  3092                           
  3093                           ;main.c: 213:             RBIE = 0;
  3094  002DB6  96F2               	bcf	4082,3,c	;volatile
  3095                           
  3096                           ;main.c: 214:             RB3 = 1;
  3097  002DB8  8681               	bsf	3969,3,c	;volatile
  3098                           
  3099                           ;main.c: 215:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  3100  002DBA  0E08               	movlw	8
  3101  002DBC                     u8827:
  3102  002DBC  2EE8               	decfsz	wreg,f,c
  3103  002DBE  D7FE               	bra	u8827
  3104  002DC0  F000               	nop	
  3105                           
  3106                           ;main.c: 216:             RB3 = 0;
  3107  002DC2  9681               	bcf	3969,3,c	;volatile
  3108                           
  3109                           ;main.c: 218:             RBIE = 1;
  3110  002DC4  86F2               	bsf	4082,3,c	;volatile
  3111                           
  3112                           ;main.c: 219:             _delay((unsigned long)((135)*(10000000/4000.0)));
  3113  002DC6  0E02               	movlw	2
  3114  002DC8  0100               	movlb	0	; () banked
  3115  002DCA  6F81               	movwf	(??_trig+1)& (0+255),b
  3116  002DCC  0EB7               	movlw	183
  3117  002DCE  6F80               	movwf	??_trig& (0+255),b
  3118  002DD0  0E4C               	movlw	76
  3119  002DD2                     u8837:
  3120  002DD2  2EE8               	decfsz	wreg,f,c
  3121  002DD4  D7FE               	bra	u8837
  3122  002DD6  2F80               	decfsz	??_trig& (0+255),f,b
  3123  002DD8  D7FC               	bra	u8837
  3124  002DDA  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  3125  002DDC  D7FA               	bra	u8837
  3126  002DDE  F000               	nop	
  3127  002DE0                     l7123:
  3128                           
  3129                           ;main.c: 221:         if(b==4){
  3130  002DE0  0E04               	movlw	4
  3131  002DE2  185A               	xorwf	_b,w,c
  3132  002DE4  105B               	iorwf	_b+1,w,c
  3133  002DE6  A4D8               	btfss	status,2,c
  3134  002DE8  D015               	goto	l7133
  3135                           
  3136                           ;main.c: 222:             RBIE = 0;
  3137  002DEA  96F2               	bcf	4082,3,c	;volatile
  3138                           
  3139                           ;main.c: 223:             RB2 = 1;
  3140  002DEC  8481               	bsf	3969,2,c	;volatile
  3141                           
  3142                           ;main.c: 224:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  3143  002DEE  0E08               	movlw	8
  3144  002DF0                     u8847:
  3145  002DF0  2EE8               	decfsz	wreg,f,c
  3146  002DF2  D7FE               	bra	u8847
  3147  002DF4  F000               	nop	
  3148                           
  3149                           ;main.c: 225:             RB2 = 0;
  3150  002DF6  9481               	bcf	3969,2,c	;volatile
  3151                           
  3152                           ;main.c: 227:             RBIE = 1;
  3153  002DF8  86F2               	bsf	4082,3,c	;volatile
  3154                           
  3155                           ;main.c: 228:             _delay((unsigned long)((135)*(10000000/4000.0)));
  3156  002DFA  0E02               	movlw	2
  3157  002DFC  0100               	movlb	0	; () banked
  3158  002DFE  6F81               	movwf	(??_trig+1)& (0+255),b
  3159  002E00  0EB7               	movlw	183
  3160  002E02  6F80               	movwf	??_trig& (0+255),b
  3161  002E04  0E4C               	movlw	76
  3162  002E06                     u8857:
  3163  002E06  2EE8               	decfsz	wreg,f,c
  3164  002E08  D7FE               	bra	u8857
  3165  002E0A  2F80               	decfsz	??_trig& (0+255),f,b
  3166  002E0C  D7FC               	bra	u8857
  3167  002E0E  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  3168  002E10  D7FA               	bra	u8857
  3169  002E12  F000               	nop	
  3170  002E14                     l7133:
  3171                           
  3172                           ;main.c: 230:     }
  3173  002E14  4A5A               	infsnz	_b,f,c
  3174  002E16  2A5B               	incf	_b+1,f,c
  3175  002E18  BE5B               	btfsc	_b+1,7,c
  3176  002E1A  D791               	goto	l7091
  3177  002E1C  505B               	movf	_b+1,w,c
  3178  002E1E  E105               	bnz	u7580
  3179  002E20                     L3:
  3180  002E20  0E05               	movlw	5
  3181  002E22  5C5A               	subwf	_b,w,c
  3182  002E24  B0D8               	btfsc	status,0,c
  3183  002E26  0012               	return	
  3184  002E28  D78A               	goto	l7091
  3185  002E2A                     u7580:
  3186  002E2A  0012               	return		;funcret
  3187  002E2C                     __end_of_trig:
  3188                           	opt callstack 0
  3189                           
  3190 ;; *************** function _sense_tires *****************
  3191 ;; Defined at:
  3192 ;;		line 371 in file "main.c"
  3193 ;; Parameters:    Size  Location     Type
  3194 ;;  sensed          2    3[BANK0 ] int 
  3195 ;; Auto vars:     Size  Location     Type
  3196 ;;		None
  3197 ;; Return value:  Size  Location     Type
  3198 ;;                  1    wreg      void 
  3199 ;; Registers used:
  3200 ;;		wreg, status,2, status,0, cstack
  3201 ;; Tracked objects:
  3202 ;;		On entry : 0/0
  3203 ;;		On exit  : 0/0
  3204 ;;		Unchanged: 0/0
  3205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3206 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3209 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3210 ;;Total ram usage:        2 bytes
  3211 ;; Hardware stack levels used:    1
  3212 ;; Hardware stack levels required when called:    6
  3213 ;; This function calls:
  3214 ;;		_brake
  3215 ;; This function is called by:
  3216 ;;		_ultrasonic_main
  3217 ;; This function uses a non-reentrant model
  3218 ;;
  3219                           
  3220                           	psect	text3
  3221  00311E                     __ptext3:
  3222                           	opt callstack 0
  3223  00311E                     _sense_tires:
  3224                           	opt callstack 23
  3225                           
  3226                           ;main.c: 376:                 if ((dist_final[0][5]>=2 && dist_final[0][5] <= 30) ||(dis
      +                          t_final[1][5]>=2 && dist_final[1][5] <= 30)||(dist_final[2][5]>=2 && dist_final[2][5] <=
      +                           30)||(dist_final[3][5] >=2 && dist_final[3][5]<= 30)){
  3227                           
  3228                           ;incstack = 0
  3229  00311E  0101               	movlb	1	; () banked
  3230  003120  BF74               	btfsc	(_dist_final+11)& (0+255),7,b
  3231  003122  D00E               	goto	u7830
  3232  003124  5174               	movf	(_dist_final+11)& (0+255),w,b
  3233  003126  E104               	bnz	u7820
  3234  003128  0E02               	movlw	2
  3235  00312A  5D73               	subwf	(_dist_final+10)& (0+255),w,b
  3236  00312C  A0D8               	btfss	status,0,c
  3237  00312E  D008               	goto	u7830
  3238  003130                     u7820:
  3239                           
  3240                           ; BSR set to: 1
  3241  003130  BF74               	btfsc	(_dist_final+11)& (0+255),7,b
  3242  003132  D036               	goto	u7890
  3243  003134  5174               	movf	(_dist_final+11)& (0+255),w,b
  3244  003136  E104               	bnz	u7830
  3245  003138  0E1F               	movlw	31
  3246  00313A  5D73               	subwf	(_dist_final+10)& (0+255),w,b
  3247  00313C  A0D8               	btfss	status,0,c
  3248  00313E  D030               	goto	u7890
  3249  003140                     u7830:
  3250                           
  3251                           ; BSR set to: 1
  3252  003140  BF80               	btfsc	(_dist_final+23)& (0+255),7,b
  3253  003142  D00E               	goto	u7850
  3254  003144  5180               	movf	(_dist_final+23)& (0+255),w,b
  3255  003146  E104               	bnz	u7840
  3256  003148  0E02               	movlw	2
  3257  00314A  5D7F               	subwf	(_dist_final+22)& (0+255),w,b
  3258  00314C  A0D8               	btfss	status,0,c
  3259  00314E  D008               	goto	u7850
  3260  003150                     u7840:
  3261                           
  3262                           ; BSR set to: 1
  3263  003150  BF80               	btfsc	(_dist_final+23)& (0+255),7,b
  3264  003152  D026               	goto	u7890
  3265  003154  5180               	movf	(_dist_final+23)& (0+255),w,b
  3266  003156  E104               	bnz	u7850
  3267  003158  0E1F               	movlw	31
  3268  00315A  5D7F               	subwf	(_dist_final+22)& (0+255),w,b
  3269  00315C  A0D8               	btfss	status,0,c
  3270  00315E  D020               	goto	u7890
  3271  003160                     u7850:
  3272                           
  3273                           ; BSR set to: 1
  3274  003160  BF8C               	btfsc	(_dist_final+35)& (0+255),7,b
  3275  003162  D00E               	goto	u7870
  3276  003164  518C               	movf	(_dist_final+35)& (0+255),w,b
  3277  003166  E104               	bnz	u7860
  3278  003168  0E02               	movlw	2
  3279  00316A  5D8B               	subwf	(_dist_final+34)& (0+255),w,b
  3280  00316C  A0D8               	btfss	status,0,c
  3281  00316E  D008               	goto	u7870
  3282  003170                     u7860:
  3283                           
  3284                           ; BSR set to: 1
  3285  003170  BF8C               	btfsc	(_dist_final+35)& (0+255),7,b
  3286  003172  D016               	goto	u7890
  3287  003174  518C               	movf	(_dist_final+35)& (0+255),w,b
  3288  003176  E104               	bnz	u7870
  3289  003178  0E1F               	movlw	31
  3290  00317A  5D8B               	subwf	(_dist_final+34)& (0+255),w,b
  3291  00317C  A0D8               	btfss	status,0,c
  3292  00317E  D010               	goto	u7890
  3293  003180                     u7870:
  3294                           
  3295                           ; BSR set to: 1
  3296  003180  BF98               	btfsc	(_dist_final+47)& (0+255),7,b
  3297  003182  0012               	return	
  3298  003184  5198               	movf	(_dist_final+47)& (0+255),w,b
  3299  003186  E104               	bnz	u7880
  3300  003188  0E02               	movlw	2
  3301  00318A  5D97               	subwf	(_dist_final+46)& (0+255),w,b
  3302  00318C  A0D8               	btfss	status,0,c
  3303  00318E  0012               	return	
  3304  003190                     u7880:
  3305                           
  3306                           ; BSR set to: 1
  3307  003190  BF98               	btfsc	(_dist_final+47)& (0+255),7,b
  3308  003192  D006               	goto	u7890
  3309  003194  5198               	movf	(_dist_final+47)& (0+255),w,b
  3310  003196  E108               	bnz	l464
  3311  003198  0E1F               	movlw	31
  3312  00319A  5D97               	subwf	(_dist_final+46)& (0+255),w,b
  3313  00319C  B0D8               	btfsc	status,0,c
  3314  00319E  0012               	return	
  3315  0031A0                     u7890:
  3316                           
  3317                           ; BSR set to: 1
  3318                           ;main.c: 378:                     brake();
  3319  0031A0  EC22  F01D         	call	_brake	;wreg free
  3320                           
  3321                           ;main.c: 380:                     send = 0;
  3322  0031A4  0E00               	movlw	0
  3323  0031A6  6E6D               	movwf	_send,c
  3324  0031A8                     l464:
  3325  0031A8  0012               	return		;funcret
  3326  0031AA                     __end_of_sense_tires:
  3327                           	opt callstack 0
  3328                           
  3329 ;; *************** function _brake *****************
  3330 ;; Defined at:
  3331 ;;		line 656 in file "main.c"
  3332 ;; Parameters:    Size  Location     Type
  3333 ;;		None
  3334 ;; Auto vars:     Size  Location     Type
  3335 ;;		None
  3336 ;; Return value:  Size  Location     Type
  3337 ;;                  1    wreg      void 
  3338 ;; Registers used:
  3339 ;;		wreg, status,2, status,0, cstack
  3340 ;; Tracked objects:
  3341 ;;		On entry : 0/0
  3342 ;;		On exit  : 0/0
  3343 ;;		Unchanged: 0/0
  3344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3349 ;;Total ram usage:        0 bytes
  3350 ;; Hardware stack levels used:    1
  3351 ;; Hardware stack levels required when called:    5
  3352 ;; This function calls:
  3353 ;;		_I2C_Master_Start
  3354 ;;		_I2C_Master_Stop
  3355 ;;		_I2C_Master_Write
  3356 ;; This function is called by:
  3357 ;;		_sense_tires
  3358 ;;		_main
  3359 ;; This function uses a non-reentrant model
  3360 ;;
  3361                           
  3362                           	psect	text4
  3363  003A44                     __ptext4:
  3364                           	opt callstack 0
  3365  003A44                     _brake:
  3366                           	opt callstack 23
  3367                           
  3368                           ;main.c: 657:     I2C_Master_Start();
  3369                           
  3370                           ;incstack = 0
  3371  003A44  EC84  F01D         	call	_I2C_Master_Start	;wreg free
  3372                           
  3373                           ;main.c: 658:     I2C_Master_Write(0b00010000);
  3374  003A48  0E00               	movlw	0
  3375  003A4A  0100               	movlb	0	; () banked
  3376  003A4C  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  3377  003A4E  0E10               	movlw	16
  3378  003A50  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  3379  003A52  EC7B  F01D         	call	_I2C_Master_Write	;wreg free
  3380                           
  3381                           ;main.c: 659:     I2C_Master_Write('9');
  3382  003A56  0E00               	movlw	0
  3383  003A58  0100               	movlb	0	; () banked
  3384  003A5A  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  3385  003A5C  0E39               	movlw	57
  3386  003A5E  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  3387  003A60  EC7B  F01D         	call	_I2C_Master_Write	;wreg free
  3388                           
  3389                           ;main.c: 660:     I2C_Master_Stop();
  3390  003A64  EC80  F01D         	call	_I2C_Master_Stop	;wreg free
  3391  003A68  0012               	return		;funcret
  3392  003A6A                     __end_of_brake:
  3393                           	opt callstack 0
  3394                           
  3395 ;; *************** function _print_echo *****************
  3396 ;; Defined at:
  3397 ;;		line 233 in file "main.c"
  3398 ;; Parameters:    Size  Location     Type
  3399 ;;		None
  3400 ;; Auto vars:     Size  Location     Type
  3401 ;;		None
  3402 ;; Return value:  Size  Location     Type
  3403 ;;                  1    wreg      void 
  3404 ;; Registers used:
  3405 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3406 ;; Tracked objects:
  3407 ;;		On entry : 0/0
  3408 ;;		On exit  : 0/0
  3409 ;;		Unchanged: 0/0
  3410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3413 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3414 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3415 ;;Total ram usage:        1 bytes
  3416 ;; Hardware stack levels used:    1
  3417 ;; Hardware stack levels required when called:   14
  3418 ;; This function calls:
  3419 ;;		_lcdInst
  3420 ;;		_printf
  3421 ;; This function is called by:
  3422 ;;		_ultrasonic_main
  3423 ;; This function uses a non-reentrant model
  3424 ;;
  3425                           
  3426                           	psect	text5
  3427  002402                     __ptext5:
  3428                           	opt callstack 0
  3429  002402                     _print_echo:
  3430                           	opt callstack 15
  3431                           
  3432                           ;main.c: 234:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  3433                           
  3434                           ;incstack = 0
  3435  002402  0E01               	movlw	1
  3436  002404  EC73  F01D         	call	_lcdInst
  3437  002408  0E11               	movlw	17
  3438  00240A  0100               	movlb	0	; () banked
  3439  00240C  6FF9               	movwf	??_print_echo& (0+255),b
  3440  00240E  0E3A               	movlw	58
  3441  002410                     u8867:
  3442  002410  2EE8               	decfsz	wreg,f,c
  3443  002412  D7FE               	bra	u8867
  3444  002414  2FF9               	decfsz	??_print_echo& (0+255),f,b
  3445  002416  D7FC               	bra	u8867
  3446  002418  F000               	nop	
  3447                           
  3448                           ;main.c: 235:     if(a[0]>=2 && a[0]<=400){
  3449  00241A  BE62               	btfsc	_a+1,7,c
  3450  00241C  D01D               	goto	l7145
  3451  00241E  5062               	movf	_a+1,w,c
  3452  002420  E104               	bnz	u7590
  3453  002422  0E02               	movlw	2
  3454  002424  5C61               	subwf	_a,w,c
  3455  002426  A0D8               	btfss	status,0,c
  3456  002428  D017               	goto	l7145
  3457  00242A                     u7590:
  3458  00242A  BE62               	btfsc	_a+1,7,c
  3459  00242C  D006               	goto	u7600
  3460  00242E  0E91               	movlw	145
  3461  002430  5C61               	subwf	_a,w,c
  3462  002432  0E01               	movlw	1
  3463  002434  5862               	subwfb	_a+1,w,c
  3464  002436  B0D8               	btfsc	status,0,c
  3465  002438  D00F               	goto	l7145
  3466  00243A                     u7600:
  3467                           
  3468                           ;main.c: 236:         printf("Dist1=%d,Avg=%d ",a[0],dist_final[0][5]);
  3469  00243A  0E56               	movlw	low STR_10
  3470  00243C  0100               	movlb	0	; () banked
  3471  00243E  6FED               	movwf	printf@fmt& (0+255),b
  3472  002440  0EFB               	movlw	high STR_10
  3473  002442  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3474  002444  C061  F0EF         	movff	_a,?_printf+2
  3475  002448  C062  F0F0         	movff	_a+1,?_printf+3
  3476  00244C  C173  F0F1         	movff	_dist_final+10,?_printf+4
  3477  002450  C174  F0F2         	movff	_dist_final+11,?_printf+5
  3478  002454  ECFA  F01C         	call	_printf	;wreg free
  3479  002458                     l7145:
  3480                           
  3481                           ;main.c: 238:     if(!(a[0]>=2 && a[0]<=400)){
  3482  002458  BE62               	btfsc	_a+1,7,c
  3483  00245A  D00E               	goto	u7620
  3484  00245C  5062               	movf	_a+1,w,c
  3485  00245E  E104               	bnz	u7610
  3486  002460  0E02               	movlw	2
  3487  002462  5C61               	subwf	_a,w,c
  3488  002464  A0D8               	btfss	status,0,c
  3489  002466  D008               	goto	u7620
  3490  002468                     u7610:
  3491  002468  BE62               	btfsc	_a+1,7,c
  3492  00246A  D00D               	goto	l7151
  3493  00246C  0E91               	movlw	145
  3494  00246E  5C61               	subwf	_a,w,c
  3495  002470  0E01               	movlw	1
  3496  002472  5862               	subwfb	_a+1,w,c
  3497  002474  A0D8               	btfss	status,0,c
  3498  002476  D007               	goto	l7151
  3499  002478                     u7620:
  3500                           
  3501                           ;main.c: 239:         printf("Dist1 = X");
  3502  002478  0EC1               	movlw	low STR_11
  3503  00247A  0100               	movlb	0	; () banked
  3504  00247C  6FED               	movwf	printf@fmt& (0+255),b
  3505  00247E  0EFC               	movlw	high STR_11
  3506  002480  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3507  002482  ECFA  F01C         	call	_printf	;wreg free
  3508  002486                     l7151:
  3509                           
  3510                           ;main.c: 241:     if(a[1]>=2 && a[1]<=400){
  3511  002486  BE64               	btfsc	_a+3,7,c
  3512  002488  D020               	goto	l7159
  3513  00248A  5064               	movf	_a+3,w,c
  3514  00248C  E104               	bnz	u7630
  3515  00248E  0E02               	movlw	2
  3516  002490  5C63               	subwf	_a+2,w,c
  3517  002492  A0D8               	btfss	status,0,c
  3518  002494  D01A               	goto	l7159
  3519  002496                     u7630:
  3520  002496  BE64               	btfsc	_a+3,7,c
  3521  002498  D006               	goto	u7640
  3522  00249A  0E91               	movlw	145
  3523  00249C  5C63               	subwf	_a+2,w,c
  3524  00249E  0E01               	movlw	1
  3525  0024A0  5864               	subwfb	_a+3,w,c
  3526  0024A2  B0D8               	btfsc	status,0,c
  3527  0024A4  D012               	goto	l7159
  3528  0024A6                     u7640:
  3529  0024A6  0EC0               	movlw	192
  3530  0024A8  EC73  F01D         	call	_lcdInst
  3531                           
  3532                           ;main.c: 243:         printf("Dist2=%d,Avg=%d",a[1],dist_final[1][5]);
  3533  0024AC  0EAA               	movlw	low STR_12
  3534  0024AE  0100               	movlb	0	; () banked
  3535  0024B0  6FED               	movwf	printf@fmt& (0+255),b
  3536  0024B2  0EFB               	movlw	high STR_12
  3537  0024B4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3538  0024B6  C063  F0EF         	movff	_a+2,?_printf+2
  3539  0024BA  C064  F0F0         	movff	_a+3,?_printf+3
  3540  0024BE  C17F  F0F1         	movff	_dist_final+22,?_printf+4
  3541  0024C2  C180  F0F2         	movff	_dist_final+23,?_printf+5
  3542  0024C6  ECFA  F01C         	call	_printf	;wreg free
  3543  0024CA                     l7159:
  3544                           
  3545                           ;main.c: 245:     if(!(a[1]>=2 && a[1]<=400)){
  3546  0024CA  BE64               	btfsc	_a+3,7,c
  3547  0024CC  D00E               	goto	u7660
  3548  0024CE  5064               	movf	_a+3,w,c
  3549  0024D0  E104               	bnz	u7650
  3550  0024D2  0E02               	movlw	2
  3551  0024D4  5C63               	subwf	_a+2,w,c
  3552  0024D6  A0D8               	btfss	status,0,c
  3553  0024D8  D008               	goto	u7660
  3554  0024DA                     u7650:
  3555  0024DA  BE64               	btfsc	_a+3,7,c
  3556  0024DC  D010               	goto	l7167
  3557  0024DE  0E91               	movlw	145
  3558  0024E0  5C63               	subwf	_a+2,w,c
  3559  0024E2  0E01               	movlw	1
  3560  0024E4  5864               	subwfb	_a+3,w,c
  3561  0024E6  A0D8               	btfss	status,0,c
  3562  0024E8  D00A               	goto	l7167
  3563  0024EA                     u7660:
  3564  0024EA  0EC0               	movlw	192
  3565  0024EC  EC73  F01D         	call	_lcdInst
  3566                           
  3567                           ;main.c: 247:         printf("Dist2 = X");
  3568  0024F0  0ECB               	movlw	low STR_13
  3569  0024F2  0100               	movlb	0	; () banked
  3570  0024F4  6FED               	movwf	printf@fmt& (0+255),b
  3571  0024F6  0EFC               	movlw	high STR_13
  3572  0024F8  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3573  0024FA  ECFA  F01C         	call	_printf	;wreg free
  3574  0024FE                     l7167:
  3575                           
  3576                           ;main.c: 249:     if(a[2]>=2 && a[2]<=400){
  3577  0024FE  BE66               	btfsc	_a+5,7,c
  3578  002500  D020               	goto	l7175
  3579  002502  5066               	movf	_a+5,w,c
  3580  002504  E104               	bnz	u7670
  3581  002506  0E02               	movlw	2
  3582  002508  5C65               	subwf	_a+4,w,c
  3583  00250A  A0D8               	btfss	status,0,c
  3584  00250C  D01A               	goto	l7175
  3585  00250E                     u7670:
  3586  00250E  BE66               	btfsc	_a+5,7,c
  3587  002510  D006               	goto	u7680
  3588  002512  0E91               	movlw	145
  3589  002514  5C65               	subwf	_a+4,w,c
  3590  002516  0E01               	movlw	1
  3591  002518  5866               	subwfb	_a+5,w,c
  3592  00251A  B0D8               	btfsc	status,0,c
  3593  00251C  D012               	goto	l7175
  3594  00251E                     u7680:
  3595  00251E  0E90               	movlw	144
  3596  002520  EC73  F01D         	call	_lcdInst
  3597                           
  3598                           ;main.c: 251:         printf("Dist3=%d,Avg=%d",a[2],dist_final[2][5]);
  3599  002524  0EBA               	movlw	low STR_14
  3600  002526  0100               	movlb	0	; () banked
  3601  002528  6FED               	movwf	printf@fmt& (0+255),b
  3602  00252A  0EFB               	movlw	high STR_14
  3603  00252C  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3604  00252E  C065  F0EF         	movff	_a+4,?_printf+2
  3605  002532  C066  F0F0         	movff	_a+5,?_printf+3
  3606  002536  C18B  F0F1         	movff	_dist_final+34,?_printf+4
  3607  00253A  C18C  F0F2         	movff	_dist_final+35,?_printf+5
  3608  00253E  ECFA  F01C         	call	_printf	;wreg free
  3609  002542                     l7175:
  3610                           
  3611                           ;main.c: 253:     if(!(a[2]>=2 && a[2]<=400)){
  3612  002542  BE66               	btfsc	_a+5,7,c
  3613  002544  D00E               	goto	u7700
  3614  002546  5066               	movf	_a+5,w,c
  3615  002548  E104               	bnz	u7690
  3616  00254A  0E02               	movlw	2
  3617  00254C  5C65               	subwf	_a+4,w,c
  3618  00254E  A0D8               	btfss	status,0,c
  3619  002550  D008               	goto	u7700
  3620  002552                     u7690:
  3621  002552  BE66               	btfsc	_a+5,7,c
  3622  002554  D010               	goto	l7183
  3623  002556  0E91               	movlw	145
  3624  002558  5C65               	subwf	_a+4,w,c
  3625  00255A  0E01               	movlw	1
  3626  00255C  5866               	subwfb	_a+5,w,c
  3627  00255E  A0D8               	btfss	status,0,c
  3628  002560  D00A               	goto	l7183
  3629  002562                     u7700:
  3630  002562  0E90               	movlw	144
  3631  002564  EC73  F01D         	call	_lcdInst
  3632                           
  3633                           ;main.c: 255:         printf("Dist3 = X");
  3634  002568  0ED5               	movlw	low STR_15
  3635  00256A  0100               	movlb	0	; () banked
  3636  00256C  6FED               	movwf	printf@fmt& (0+255),b
  3637  00256E  0EFC               	movlw	high STR_15
  3638  002570  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3639  002572  ECFA  F01C         	call	_printf	;wreg free
  3640  002576                     l7183:
  3641                           
  3642                           ;main.c: 257:     if(a[3]>=2 && a[3]<=400){
  3643  002576  BE68               	btfsc	_a+7,7,c
  3644  002578  D020               	goto	l7191
  3645  00257A  5068               	movf	_a+7,w,c
  3646  00257C  E104               	bnz	u7710
  3647  00257E  0E02               	movlw	2
  3648  002580  5C67               	subwf	_a+6,w,c
  3649  002582  A0D8               	btfss	status,0,c
  3650  002584  D01A               	goto	l7191
  3651  002586                     u7710:
  3652  002586  BE68               	btfsc	_a+7,7,c
  3653  002588  D006               	goto	u7720
  3654  00258A  0E91               	movlw	145
  3655  00258C  5C67               	subwf	_a+6,w,c
  3656  00258E  0E01               	movlw	1
  3657  002590  5868               	subwfb	_a+7,w,c
  3658  002592  B0D8               	btfsc	status,0,c
  3659  002594  D012               	goto	l7191
  3660  002596                     u7720:
  3661  002596  0ED0               	movlw	208
  3662  002598  EC73  F01D         	call	_lcdInst
  3663                           
  3664                           ;main.c: 259:         printf("Dist4=%d,Avg=%d ",a[3],dist_final[3][5]);
  3665  00259C  0E67               	movlw	low STR_16
  3666  00259E  0100               	movlb	0	; () banked
  3667  0025A0  6FED               	movwf	printf@fmt& (0+255),b
  3668  0025A2  0EFB               	movlw	high STR_16
  3669  0025A4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3670  0025A6  C067  F0EF         	movff	_a+6,?_printf+2
  3671  0025AA  C068  F0F0         	movff	_a+7,?_printf+3
  3672  0025AE  C197  F0F1         	movff	_dist_final+46,?_printf+4
  3673  0025B2  C198  F0F2         	movff	_dist_final+47,?_printf+5
  3674  0025B6  ECFA  F01C         	call	_printf	;wreg free
  3675  0025BA                     l7191:
  3676                           
  3677                           ;main.c: 262:     if(!(a[3]>=2 && a[3]<=400)){
  3678  0025BA  BE68               	btfsc	_a+7,7,c
  3679  0025BC  D00E               	goto	u7740
  3680  0025BE  5068               	movf	_a+7,w,c
  3681  0025C0  E104               	bnz	u7730
  3682  0025C2  0E02               	movlw	2
  3683  0025C4  5C67               	subwf	_a+6,w,c
  3684  0025C6  A0D8               	btfss	status,0,c
  3685  0025C8  D008               	goto	u7740
  3686  0025CA                     u7730:
  3687  0025CA  BE68               	btfsc	_a+7,7,c
  3688  0025CC  0012               	return	
  3689  0025CE  0E91               	movlw	145
  3690  0025D0  5C67               	subwf	_a+6,w,c
  3691  0025D2  0E01               	movlw	1
  3692  0025D4  5868               	subwfb	_a+7,w,c
  3693  0025D6  A0D8               	btfss	status,0,c
  3694  0025D8  0012               	return	
  3695  0025DA                     u7740:
  3696  0025DA  0ED0               	movlw	208
  3697  0025DC  EC73  F01D         	call	_lcdInst
  3698                           
  3699                           ;main.c: 264:         printf("Dist4 = X");
  3700  0025E0  0EDF               	movlw	low STR_17
  3701  0025E2  0100               	movlb	0	; () banked
  3702  0025E4  6FED               	movwf	printf@fmt& (0+255),b
  3703  0025E6  0EFC               	movlw	high STR_17
  3704  0025E8  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3705  0025EA  ECFA  F01C         	call	_printf	;wreg free
  3706  0025EE  0012               	return		;funcret
  3707  0025F0                     __end_of_print_echo:
  3708                           	opt callstack 0
  3709                           
  3710 ;; *************** function _min *****************
  3711 ;; Defined at:
  3712 ;;		line 267 in file "main.c"
  3713 ;; Parameters:    Size  Location     Type
  3714 ;;  array           2    0[BANK0 ] PTR int 
  3715 ;;		 -> a(8), 
  3716 ;;  size            2    2[BANK0 ] int 
  3717 ;; Auto vars:     Size  Location     Type
  3718 ;;  i               2    9[BANK0 ] int 
  3719 ;;  minimum         2    7[BANK0 ] int 
  3720 ;; Return value:  Size  Location     Type
  3721 ;;                  2    0[BANK0 ] int 
  3722 ;; Registers used:
  3723 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3724 ;; Tracked objects:
  3725 ;;		On entry : 0/0
  3726 ;;		On exit  : 0/0
  3727 ;;		Unchanged: 0/0
  3728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3729 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3730 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3731 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3732 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3733 ;;Total ram usage:       11 bytes
  3734 ;; Hardware stack levels used:    1
  3735 ;; Hardware stack levels required when called:    3
  3736 ;; This function calls:
  3737 ;;		Nothing
  3738 ;; This function is called by:
  3739 ;;		_ultrasonic_main
  3740 ;; This function uses a non-reentrant model
  3741 ;;
  3742                           
  3743                           	psect	text6
  3744  002C1A                     __ptext6:
  3745                           	opt callstack 0
  3746  002C1A                     _min:
  3747                           	opt callstack 26
  3748                           
  3749                           ;main.c: 268:     int minimum =0 ;
  3750                           
  3751                           ;incstack = 0
  3752  002C1A  0E00               	movlw	0
  3753  002C1C  0100               	movlb	0	; () banked
  3754  002C1E  6F88               	movwf	(min@minimum+1)& (0+255),b
  3755  002C20  0E00               	movlw	0
  3756  002C22  6F87               	movwf	min@minimum& (0+255),b
  3757                           
  3758                           ; BSR set to: 0
  3759                           ;main.c: 269:     if (array[0]<=23){
  3760  002C24  C080  FFD9         	movff	min@array,fsr2l
  3761  002C28  C081  FFDA         	movff	min@array+1,fsr2h
  3762  002C2C  0E01               	movlw	1
  3763  002C2E  BEDB               	btfsc	plusw2,7,c
  3764  002C30  D007               	goto	u7750
  3765  002C32  0E01               	movlw	1
  3766  002C34  50DB               	movf	plusw2,w,c
  3767  002C36  E10C               	bnz	l7205
  3768  002C38  0E18               	movlw	24
  3769  002C3A  5CDE               	subwf	postinc2,w,c
  3770  002C3C  B0D8               	btfsc	status,0,c
  3771  002C3E  D008               	goto	l7205
  3772  002C40                     u7750:
  3773                           
  3774                           ; BSR set to: 0
  3775                           ;main.c: 270:          minimum = array[0];}
  3776  002C40  C080  FFD9         	movff	min@array,fsr2l
  3777  002C44  C081  FFDA         	movff	min@array+1,fsr2h
  3778  002C48  CFDE F087          	movff	postinc2,min@minimum
  3779  002C4C  CFDD F088          	movff	postdec2,min@minimum+1
  3780  002C50                     l7205:
  3781                           
  3782                           ; BSR set to: 0
  3783                           ;main.c: 274:     for (int i = 0; i<size; i++){
  3784  002C50  0E00               	movlw	0
  3785  002C52  6F8A               	movwf	(min@i+1)& (0+255),b
  3786  002C54  0E00               	movlw	0
  3787  002C56  6F89               	movwf	min@i& (0+255),b
  3788  002C58  D059               	goto	l7221
  3789  002C5A                     l7207:
  3790                           
  3791                           ; BSR set to: 0
  3792                           ;main.c: 278:         if ((minimum==0)||(minimum>=array[i])&&(array[i]!=0)&&(array[i]>=1
      +                          4)&&(array[i]<=23)){
  3793  002C5A  5187               	movf	min@minimum& (0+255),w,b
  3794  002C5C  1188               	iorwf	(min@minimum+1)& (0+255),w,b
  3795  002C5E  B4D8               	btfsc	status,2,c
  3796  002C60  D046               	goto	u7800
  3797                           
  3798                           ; BSR set to: 0
  3799  002C62  90D8               	bcf	status,0,c
  3800  002C64  3589               	rlcf	min@i& (0+255),w,b
  3801  002C66  6ED9               	movwf	fsr2l,c
  3802  002C68  358A               	rlcf	(min@i+1)& (0+255),w,b
  3803  002C6A  6EDA               	movwf	fsr2h,c
  3804  002C6C  5180               	movf	min@array& (0+255),w,b
  3805  002C6E  26D9               	addwf	fsr2l,f,c
  3806  002C70  5181               	movf	(min@array+1)& (0+255),w,b
  3807  002C72  22DA               	addwfc	fsr2h,f,c
  3808  002C74  50DE               	movf	postinc2,w,c
  3809  002C76  5D87               	subwf	min@minimum& (0+255),w,b
  3810  002C78  5188               	movf	(min@minimum+1)& (0+255),w,b
  3811  002C7A  0A80               	xorlw	128
  3812  002C7C  6F86               	movwf	(??_min+2)& (0+255),b
  3813  002C7E  50DE               	movf	postinc2,w,c
  3814  002C80  0A80               	xorlw	128
  3815  002C82  5986               	subwfb	(??_min+2)& (0+255),w,b
  3816  002C84  A0D8               	btfss	status,0,c
  3817  002C86  D040               	goto	l7219
  3818                           
  3819                           ; BSR set to: 0
  3820  002C88  90D8               	bcf	status,0,c
  3821  002C8A  3589               	rlcf	min@i& (0+255),w,b
  3822  002C8C  6ED9               	movwf	fsr2l,c
  3823  002C8E  358A               	rlcf	(min@i+1)& (0+255),w,b
  3824  002C90  6EDA               	movwf	fsr2h,c
  3825  002C92  5180               	movf	min@array& (0+255),w,b
  3826  002C94  26D9               	addwf	fsr2l,f,c
  3827  002C96  5181               	movf	(min@array+1)& (0+255),w,b
  3828  002C98  22DA               	addwfc	fsr2h,f,c
  3829  002C9A  50DE               	movf	postinc2,w,c
  3830  002C9C  10DE               	iorwf	postinc2,w,c
  3831  002C9E  B4D8               	btfsc	status,2,c
  3832  002CA0  D033               	goto	l7219
  3833                           
  3834                           ; BSR set to: 0
  3835  002CA2  90D8               	bcf	status,0,c
  3836  002CA4  3589               	rlcf	min@i& (0+255),w,b
  3837  002CA6  6ED9               	movwf	fsr2l,c
  3838  002CA8  358A               	rlcf	(min@i+1)& (0+255),w,b
  3839  002CAA  6EDA               	movwf	fsr2h,c
  3840  002CAC  5180               	movf	min@array& (0+255),w,b
  3841  002CAE  26D9               	addwf	fsr2l,f,c
  3842  002CB0  5181               	movf	(min@array+1)& (0+255),w,b
  3843  002CB2  22DA               	addwfc	fsr2h,f,c
  3844  002CB4  0E01               	movlw	1
  3845  002CB6  BEDB               	btfsc	plusw2,7,c
  3846  002CB8  D027               	goto	l7219
  3847  002CBA  0E01               	movlw	1
  3848  002CBC  50DB               	movf	plusw2,w,c
  3849  002CBE  E104               	bnz	u7790
  3850  002CC0  0E0E               	movlw	14
  3851  002CC2  5CDE               	subwf	postinc2,w,c
  3852  002CC4  A0D8               	btfss	status,0,c
  3853  002CC6  D020               	goto	l7219
  3854  002CC8                     u7790:
  3855                           
  3856                           ; BSR set to: 0
  3857  002CC8  90D8               	bcf	status,0,c
  3858  002CCA  3589               	rlcf	min@i& (0+255),w,b
  3859  002CCC  6ED9               	movwf	fsr2l,c
  3860  002CCE  358A               	rlcf	(min@i+1)& (0+255),w,b
  3861  002CD0  6EDA               	movwf	fsr2h,c
  3862  002CD2  5180               	movf	min@array& (0+255),w,b
  3863  002CD4  26D9               	addwf	fsr2l,f,c
  3864  002CD6  5181               	movf	(min@array+1)& (0+255),w,b
  3865  002CD8  22DA               	addwfc	fsr2h,f,c
  3866  002CDA  0E01               	movlw	1
  3867  002CDC  BEDB               	btfsc	plusw2,7,c
  3868  002CDE  D007               	goto	u7800
  3869  002CE0  0E01               	movlw	1
  3870  002CE2  50DB               	movf	plusw2,w,c
  3871  002CE4  E111               	bnz	l7219
  3872  002CE6  0E18               	movlw	24
  3873  002CE8  5CDE               	subwf	postinc2,w,c
  3874  002CEA  B0D8               	btfsc	status,0,c
  3875  002CEC  D00D               	goto	l7219
  3876  002CEE                     u7800:
  3877                           
  3878                           ; BSR set to: 0
  3879                           ;main.c: 282:             minimum = array[i];
  3880  002CEE  90D8               	bcf	status,0,c
  3881  002CF0  3589               	rlcf	min@i& (0+255),w,b
  3882  002CF2  6ED9               	movwf	fsr2l,c
  3883  002CF4  358A               	rlcf	(min@i+1)& (0+255),w,b
  3884  002CF6  6EDA               	movwf	fsr2h,c
  3885  002CF8  5180               	movf	min@array& (0+255),w,b
  3886  002CFA  26D9               	addwf	fsr2l,f,c
  3887  002CFC  5181               	movf	(min@array+1)& (0+255),w,b
  3888  002CFE  22DA               	addwfc	fsr2h,f,c
  3889  002D00  CFDE F087          	movff	postinc2,min@minimum
  3890  002D04  CFDD F088          	movff	postdec2,min@minimum+1
  3891  002D08                     l7219:
  3892                           
  3893                           ; BSR set to: 0
  3894                           ;main.c: 287:     }
  3895  002D08  4B89               	infsnz	min@i& (0+255),f,b
  3896  002D0A  2B8A               	incf	(min@i+1)& (0+255),f,b
  3897  002D0C                     l7221:
  3898                           
  3899                           ; BSR set to: 0
  3900  002D0C  5182               	movf	min@size& (0+255),w,b
  3901  002D0E  5D89               	subwf	min@i& (0+255),w,b
  3902  002D10  518A               	movf	(min@i+1)& (0+255),w,b
  3903  002D12  0A80               	xorlw	128
  3904  002D14  6F84               	movwf	??_min& (0+255),b
  3905  002D16  5183               	movf	(min@size+1)& (0+255),w,b
  3906  002D18  0A80               	xorlw	128
  3907  002D1A  5984               	subwfb	??_min& (0+255),w,b
  3908  002D1C  A0D8               	btfss	status,0,c
  3909  002D1E  D79D               	goto	l7207
  3910                           
  3911                           ; BSR set to: 0
  3912                           ;main.c: 288:     return minimum;
  3913  002D20  C087  F080         	movff	min@minimum,?_min
  3914  002D24  C088  F081         	movff	min@minimum+1,?_min+1
  3915                           
  3916                           ; BSR set to: 0
  3917  002D28  0012               	return		;funcret
  3918  002D2A                     __end_of_min:
  3919                           	opt callstack 0
  3920                           
  3921 ;; *************** function _start *****************
  3922 ;; Defined at:
  3923 ;;		line 663 in file "main.c"
  3924 ;; Parameters:    Size  Location     Type
  3925 ;;		None
  3926 ;; Auto vars:     Size  Location     Type
  3927 ;;		None
  3928 ;; Return value:  Size  Location     Type
  3929 ;;                  1    wreg      void 
  3930 ;; Registers used:
  3931 ;;		wreg, status,2, status,0, cstack
  3932 ;; Tracked objects:
  3933 ;;		On entry : 0/0
  3934 ;;		On exit  : 0/0
  3935 ;;		Unchanged: 0/0
  3936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3941 ;;Total ram usage:        0 bytes
  3942 ;; Hardware stack levels used:    1
  3943 ;; Hardware stack levels required when called:    5
  3944 ;; This function calls:
  3945 ;;		_I2C_Master_Init
  3946 ;;		_I2C_Master_Start
  3947 ;;		_I2C_Master_Stop
  3948 ;;		_I2C_Master_Write
  3949 ;; This function is called by:
  3950 ;;		_main
  3951 ;; This function uses a non-reentrant model
  3952 ;;
  3953                           
  3954                           	psect	text7
  3955  003668                     __ptext7:
  3956                           	opt callstack 0
  3957  003668                     _start:
  3958                           	opt callstack 25
  3959                           
  3960                           ;main.c: 664:     I2C_Master_Init(100000);
  3961                           
  3962                           ; BSR set to: 0
  3963                           ;incstack = 0
  3964  003668  0EA0               	movlw	160
  3965  00366A  0100               	movlb	0	; () banked
  3966  00366C  6F8D               	movwf	I2C_Master_Init@clockFreq& (0+255),b
  3967  00366E  0E86               	movlw	134
  3968  003670  6F8E               	movwf	(I2C_Master_Init@clockFreq+1)& (0+255),b
  3969  003672  0E01               	movlw	1
  3970  003674  6F8F               	movwf	(I2C_Master_Init@clockFreq+2)& (0+255),b
  3971  003676  0E00               	movlw	0
  3972  003678  6F90               	movwf	(I2C_Master_Init@clockFreq+3)& (0+255),b
  3973  00367A  EC83  F01A         	call	_I2C_Master_Init	;wreg free
  3974                           
  3975                           ;main.c: 665:     I2C_Master_Start();
  3976  00367E  EC84  F01D         	call	_I2C_Master_Start	;wreg free
  3977                           
  3978                           ;main.c: 666:     I2C_Master_Write(0b00010000);
  3979  003682  0E00               	movlw	0
  3980  003684  0100               	movlb	0	; () banked
  3981  003686  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  3982  003688  0E10               	movlw	16
  3983  00368A  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  3984  00368C  EC7B  F01D         	call	_I2C_Master_Write	;wreg free
  3985                           
  3986                           ;main.c: 667:     I2C_Master_Stop();
  3987  003690  EC80  F01D         	call	_I2C_Master_Stop	;wreg free
  3988                           
  3989                           ;main.c: 669:     I2C_Master_Start();
  3990  003694  EC84  F01D         	call	_I2C_Master_Start	;wreg free
  3991                           
  3992                           ;main.c: 670:     I2C_Master_Write(0b00010000);
  3993  003698  0E00               	movlw	0
  3994  00369A  0100               	movlb	0	; () banked
  3995  00369C  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  3996  00369E  0E10               	movlw	16
  3997  0036A0  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  3998  0036A2  EC7B  F01D         	call	_I2C_Master_Write	;wreg free
  3999                           
  4000                           ;main.c: 671:     I2C_Master_Write('2');
  4001  0036A6  0E00               	movlw	0
  4002  0036A8  0100               	movlb	0	; () banked
  4003  0036AA  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4004  0036AC  0E32               	movlw	50
  4005  0036AE  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4006  0036B0  EC7B  F01D         	call	_I2C_Master_Write	;wreg free
  4007                           
  4008                           ;main.c: 672:     I2C_Master_Stop();
  4009  0036B4  EC80  F01D         	call	_I2C_Master_Stop	;wreg free
  4010  0036B8  0012               	return		;funcret
  4011  0036BA                     __end_of_start:
  4012                           	opt callstack 0
  4013                           
  4014 ;; *************** function _number_deploy *****************
  4015 ;; Defined at:
  4016 ;;		line 406 in file "main.c"
  4017 ;; Parameters:    Size  Location     Type
  4018 ;;  avg_dist        2  121[BANK0 ] int 
  4019 ;;  poles_detect    2  123[BANK0 ] int 
  4020 ;; Auto vars:     Size  Location     Type
  4021 ;;  t_count         2    4[BANK1 ] int 
  4022 ;;  tires_detect    2    2[BANK1 ] int 
  4023 ;;  tires_t         2    0[BANK1 ] int 
  4024 ;; Return value:  Size  Location     Type
  4025 ;;                  2  121[BANK0 ] int 
  4026 ;; Registers used:
  4027 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4028 ;; Tracked objects:
  4029 ;;		On entry : 0/0
  4030 ;;		On exit  : 0/0
  4031 ;;		Unchanged: 0/0
  4032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4033 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4034 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4035 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4036 ;;      Totals:         0       6       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4037 ;;Total ram usage:       12 bytes
  4038 ;; Hardware stack levels used:    1
  4039 ;; Hardware stack levels required when called:   14
  4040 ;; This function calls:
  4041 ;;		___awdiv
  4042 ;;		_lcdInst
  4043 ;;		_printf
  4044 ;; This function is called by:
  4045 ;;		_main
  4046 ;; This function uses a non-reentrant model
  4047 ;;
  4048                           
  4049                           	psect	text8
  4050  001FEC                     __ptext8:
  4051                           	opt callstack 0
  4052  001FEC                     _number_deploy:
  4053                           	opt callstack 16
  4054                           
  4055                           ;main.c: 407:     int tires_t=0;
  4056                           
  4057                           ;incstack = 0
  4058  001FEC  0E00               	movlw	0
  4059  001FEE  0101               	movlb	1	; () banked
  4060  001FF0  6F01               	movwf	(number_deploy@tires_t+1)& (0+255),b
  4061  001FF2  0E00               	movlw	0
  4062  001FF4  6F00               	movwf	number_deploy@tires_t& (0+255),b
  4063                           
  4064                           ;main.c: 408:     int tires_detected=0;
  4065  001FF6  0E00               	movlw	0
  4066  001FF8  6F03               	movwf	(number_deploy@tires_detected+1)& (0+255),b
  4067  001FFA  0E00               	movlw	0
  4068  001FFC  6F02               	movwf	number_deploy@tires_detected& (0+255),b
  4069                           
  4070                           ;main.c: 409:     int t_count = 0;
  4071  001FFE  0E00               	movlw	0
  4072  002000  6F05               	movwf	(number_deploy@t_count+1)& (0+255),b
  4073  002002  0E00               	movlw	0
  4074  002004  6F04               	movwf	number_deploy@t_count& (0+255),b
  4075                           
  4076                           ;main.c: 412:     while (t_count<3){
  4077  002006  D0FB               	goto	l7535
  4078  002008                     l7477:
  4079                           
  4080                           ; BSR set to: 1
  4081                           ;main.c: 413:   if (poles_detected != 0){
  4082  002008  0100               	movlb	0	; () banked
  4083  00200A  51FB               	movf	number_deploy@poles_detected& (0+255),w,b
  4084  00200C  11FC               	iorwf	(number_deploy@poles_detected+1)& (0+255),w,b
  4085  00200E  B4D8               	btfsc	status,2,c
  4086  002010  D031               	goto	l7487
  4087                           
  4088                           ; BSR set to: 0
  4089                           ;main.c: 414:    if ((avg_dist/1000)<30){
  4090  002012  C0F9  F080         	movff	number_deploy@avg_dist,___awdiv@dividend
  4091  002016  C0FA  F081         	movff	number_deploy@avg_dist+1,___awdiv@dividend+1
  4092  00201A  0E03               	movlw	3
  4093  00201C  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  4094  00201E  0EE8               	movlw	232
  4095  002020  6F82               	movwf	___awdiv@divisor& (0+255),b
  4096  002022  EC19  F019         	call	___awdiv	;wreg free
  4097  002026  0100               	movlb	0	; () banked
  4098  002028  BF81               	btfsc	(?___awdiv+1)& (0+255),7,b
  4099  00202A  D006               	goto	u8080
  4100  00202C  5181               	movf	(?___awdiv+1)& (0+255),w,b
  4101  00202E  E109               	bnz	l7483
  4102  002030  0E1E               	movlw	30
  4103  002032  5D80               	subwf	?___awdiv& (0+255),w,b
  4104  002034  B0D8               	btfsc	status,0,c
  4105  002036  D005               	goto	l7483
  4106  002038                     u8080:
  4107                           
  4108                           ; BSR set to: 0
  4109                           ;main.c: 416:     tires_t = 1;
  4110  002038  0E00               	movlw	0
  4111  00203A  0101               	movlb	1	; () banked
  4112  00203C  6F01               	movwf	(number_deploy@tires_t+1)& (0+255),b
  4113  00203E  0E01               	movlw	1
  4114  002040  6F00               	movwf	number_deploy@tires_t& (0+255),b
  4115  002042                     l7483:
  4116                           
  4117                           ;main.c: 418:    if ((avg_dist/1000)>30){
  4118  002042  C0F9  F080         	movff	number_deploy@avg_dist,___awdiv@dividend
  4119  002046  C0FA  F081         	movff	number_deploy@avg_dist+1,___awdiv@dividend+1
  4120  00204A  0E03               	movlw	3
  4121  00204C  0100               	movlb	0	; () banked
  4122  00204E  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  4123  002050  0EE8               	movlw	232
  4124  002052  6F82               	movwf	___awdiv@divisor& (0+255),b
  4125  002054  EC19  F019         	call	___awdiv	;wreg free
  4126  002058  0100               	movlb	0	; () banked
  4127  00205A  BF81               	btfsc	(?___awdiv+1)& (0+255),7,b
  4128  00205C  D00B               	goto	l7487
  4129  00205E  5181               	movf	(?___awdiv+1)& (0+255),w,b
  4130  002060  E104               	bnz	u8090
  4131  002062  0E1F               	movlw	31
  4132  002064  5D80               	subwf	?___awdiv& (0+255),w,b
  4133  002066  A0D8               	btfss	status,0,c
  4134  002068  D005               	goto	l7487
  4135  00206A                     u8090:
  4136                           
  4137                           ; BSR set to: 0
  4138                           ;main.c: 419:     tires_t = 2;
  4139  00206A  0E00               	movlw	0
  4140  00206C  0101               	movlb	1	; () banked
  4141  00206E  6F01               	movwf	(number_deploy@tires_t+1)& (0+255),b
  4142  002070  0E02               	movlw	2
  4143  002072  6F00               	movwf	number_deploy@tires_t& (0+255),b
  4144  002074                     l7487:
  4145                           
  4146                           ;main.c: 423:   if (poles_detected == 0){
  4147  002074  0100               	movlb	0	; () banked
  4148  002076  51FB               	movf	number_deploy@poles_detected& (0+255),w,b
  4149  002078  11FC               	iorwf	(number_deploy@poles_detected+1)& (0+255),w,b
  4150  00207A  A4D8               	btfss	status,2,c
  4151  00207C  D005               	goto	l7491
  4152                           
  4153                           ; BSR set to: 0
  4154                           ;main.c: 424:    tires_t = 2;
  4155  00207E  0E00               	movlw	0
  4156  002080  0101               	movlb	1	; () banked
  4157  002082  6F01               	movwf	(number_deploy@tires_t+1)& (0+255),b
  4158  002084  0E02               	movlw	2
  4159  002086  6F00               	movwf	number_deploy@tires_t& (0+255),b
  4160  002088                     l7491:
  4161                           
  4162                           ;main.c: 427:   if ((a[0]>=2 && a[0] <= 15)){
  4163  002088  BE62               	btfsc	_a+1,7,c
  4164  00208A  D028               	goto	l7503
  4165  00208C  5062               	movf	_a+1,w,c
  4166  00208E  E104               	bnz	u8110
  4167  002090  0E02               	movlw	2
  4168  002092  5C61               	subwf	_a,w,c
  4169  002094  A0D8               	btfss	status,0,c
  4170  002096  D022               	goto	l7503
  4171  002098                     u8110:
  4172  002098  BE62               	btfsc	_a+1,7,c
  4173  00209A  D006               	goto	u8120
  4174  00209C  5062               	movf	_a+1,w,c
  4175  00209E  E11E               	bnz	l7503
  4176  0020A0  0E10               	movlw	16
  4177  0020A2  5C61               	subwf	_a,w,c
  4178  0020A4  B0D8               	btfsc	status,0,c
  4179  0020A6  D01A               	goto	l7503
  4180  0020A8                     u8120:
  4181                           
  4182                           ;main.c: 429:             if ((a[1]>=2 && a[1] <= 15)){
  4183  0020A8  BE64               	btfsc	_a+3,7,c
  4184  0020AA  D013               	goto	l7501
  4185  0020AC  5064               	movf	_a+3,w,c
  4186  0020AE  E104               	bnz	u8130
  4187  0020B0  0E02               	movlw	2
  4188  0020B2  5C63               	subwf	_a+2,w,c
  4189  0020B4  A0D8               	btfss	status,0,c
  4190  0020B6  D00D               	goto	l7501
  4191  0020B8                     u8130:
  4192  0020B8  BE64               	btfsc	_a+3,7,c
  4193  0020BA  D006               	goto	u8140
  4194  0020BC  5064               	movf	_a+3,w,c
  4195  0020BE  E109               	bnz	l7501
  4196  0020C0  0E10               	movlw	16
  4197  0020C2  5C63               	subwf	_a+2,w,c
  4198  0020C4  B0D8               	btfsc	status,0,c
  4199  0020C6  D005               	goto	l7501
  4200  0020C8                     u8140:
  4201                           
  4202                           ;main.c: 431:                 tires_detected = 1;
  4203  0020C8  0E00               	movlw	0
  4204  0020CA  0101               	movlb	1	; () banked
  4205  0020CC  6F03               	movwf	(number_deploy@tires_detected+1)& (0+255),b
  4206  0020CE  0E01               	movlw	1
  4207  0020D0  D004               	goto	L4
  4208  0020D2                     l7501:
  4209                           
  4210                           ;main.c: 434:                 tires_detected = 0;
  4211  0020D2  0E00               	movlw	0
  4212  0020D4  0101               	movlb	1	; () banked
  4213  0020D6  6F03               	movwf	(number_deploy@tires_detected+1)& (0+255),b
  4214  0020D8  0E00               	movlw	0
  4215  0020DA                     L4:
  4216  0020DA  6F02               	movwf	number_deploy@tires_detected& (0+255),b
  4217  0020DC                     l7503:
  4218                           
  4219                           ;main.c: 437:         if ((tires_detected==1)){
  4220  0020DC  0101               	movlb	1	; () banked
  4221  0020DE  0502               	decf	number_deploy@tires_detected& (0+255),w,b
  4222  0020E0  1103               	iorwf	(number_deploy@tires_detected+1)& (0+255),w,b
  4223  0020E2  B4D8               	btfsc	status,2,c
  4224                           
  4225                           ; BSR set to: 1
  4226                           ;main.c: 438:             if((a[2]>=2 && a[2] <= 15)&&(a[3] >=2 && a[3]<= 15)){
  4227  0020E4  BE66               	btfsc	_a+5,7,c
  4228  0020E6  D020               	goto	l7515
  4229  0020E8  5066               	movf	_a+5,w,c
  4230  0020EA  E104               	bnz	u8160
  4231  0020EC  0E02               	movlw	2
  4232  0020EE  5C65               	subwf	_a+4,w,c
  4233  0020F0  A0D8               	btfss	status,0,c
  4234  0020F2  D01A               	goto	l7515
  4235  0020F4                     u8160:
  4236                           
  4237                           ; BSR set to: 1
  4238  0020F4  BE66               	btfsc	_a+5,7,c
  4239  0020F6  D006               	goto	u8170
  4240  0020F8  5066               	movf	_a+5,w,c
  4241  0020FA  E116               	bnz	l7515
  4242  0020FC  0E10               	movlw	16
  4243  0020FE  5C65               	subwf	_a+4,w,c
  4244  002100  B0D8               	btfsc	status,0,c
  4245  002102  D012               	goto	l7515
  4246  002104                     u8170:
  4247                           
  4248                           ; BSR set to: 1
  4249  002104  BE68               	btfsc	_a+7,7,c
  4250  002106  D010               	goto	l7515
  4251  002108  5068               	movf	_a+7,w,c
  4252  00210A  E104               	bnz	u8180
  4253  00210C  0E02               	movlw	2
  4254  00210E  5C67               	subwf	_a+6,w,c
  4255  002110  A0D8               	btfss	status,0,c
  4256  002112  D00A               	goto	l7515
  4257  002114                     u8180:
  4258                           
  4259                           ; BSR set to: 1
  4260  002114  BE68               	btfsc	_a+7,7,c
  4261  002116  D006               	goto	u8190
  4262  002118  5068               	movf	_a+7,w,c
  4263  00211A  E106               	bnz	l7515
  4264  00211C  0E10               	movlw	16
  4265  00211E  5C67               	subwf	_a+6,w,c
  4266  002120  B0D8               	btfsc	status,0,c
  4267  002122  D002               	goto	l7515
  4268  002124                     u8190:
  4269                           
  4270                           ; BSR set to: 1
  4271                           ;main.c: 439:                 tires_detected++;
  4272  002124  4B02               	infsnz	number_deploy@tires_detected& (0+255),f,b
  4273  002126  2B03               	incf	(number_deploy@tires_detected+1)& (0+255),f,b
  4274  002128                     l7515:
  4275                           
  4276                           ; BSR set to: 1
  4277                           ;main.c: 443:     t_count = tires_t - tires_detected;
  4278  002128  5102               	movf	number_deploy@tires_detected& (0+255),w,b
  4279  00212A  5D00               	subwf	number_deploy@tires_t& (0+255),w,b
  4280  00212C  6F04               	movwf	number_deploy@t_count& (0+255),b
  4281  00212E  5103               	movf	(number_deploy@tires_detected+1)& (0+255),w,b
  4282  002130  5901               	subwfb	(number_deploy@tires_t+1)& (0+255),w,b
  4283  002132  6F05               	movwf	(number_deploy@t_count+1)& (0+255),b
  4284                           
  4285                           ; BSR set to: 1
  4286                           ;main.c: 444:     Pole[poles_detected].tires_deployed = t_count;
  4287  002134  C0FB  F0FD         	movff	number_deploy@poles_detected,??_number_deploy
  4288  002138  C0FC  F0FE         	movff	number_deploy@poles_detected+1,??_number_deploy+1
  4289  00213C  0100               	movlb	0	; () banked
  4290  00213E  90D8               	bcf	status,0,c
  4291  002140  37FD               	rlcf	??_number_deploy& (0+255),f,b
  4292  002142  37FE               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4293  002144  90D8               	bcf	status,0,c
  4294  002146  37FD               	rlcf	??_number_deploy& (0+255),f,b
  4295  002148  37FE               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4296  00214A  90D8               	bcf	status,0,c
  4297  00214C  37FD               	rlcf	??_number_deploy& (0+255),f,b
  4298  00214E  37FE               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4299  002150  0E00               	movlw	low _Pole
  4300  002152  25FD               	addwf	??_number_deploy& (0+255),w,b
  4301  002154  6ED9               	movwf	fsr2l,c
  4302  002156  0E02               	movlw	high _Pole
  4303  002158  21FE               	addwfc	(??_number_deploy+1)& (0+255),w,b
  4304  00215A  6EDA               	movwf	fsr2h,c
  4305  00215C  C104  FFDE         	movff	number_deploy@t_count,postinc2
  4306  002160  C105  FFDD         	movff	number_deploy@t_count+1,postdec2
  4307                           
  4308                           ; BSR set to: 0
  4309                           ;main.c: 445:     Pole[poles_detected].tires_final = tires_t;
  4310  002164  C0FB  F0FD         	movff	number_deploy@poles_detected,??_number_deploy
  4311  002168  C0FC  F0FE         	movff	number_deploy@poles_detected+1,??_number_deploy+1
  4312  00216C  90D8               	bcf	status,0,c
  4313  00216E  37FD               	rlcf	??_number_deploy& (0+255),f,b
  4314  002170  37FE               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4315  002172  90D8               	bcf	status,0,c
  4316  002174  37FD               	rlcf	??_number_deploy& (0+255),f,b
  4317  002176  37FE               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4318  002178  90D8               	bcf	status,0,c
  4319  00217A  37FD               	rlcf	??_number_deploy& (0+255),f,b
  4320  00217C  37FE               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4321  00217E  0E02               	movlw	low (_Pole+2)
  4322  002180  25FD               	addwf	??_number_deploy& (0+255),w,b
  4323  002182  6ED9               	movwf	fsr2l,c
  4324  002184  0E02               	movlw	high (_Pole+2)
  4325  002186  21FE               	addwfc	(??_number_deploy+1)& (0+255),w,b
  4326  002188  6EDA               	movwf	fsr2h,c
  4327  00218A  C100  FFDE         	movff	number_deploy@tires_t,postinc2
  4328  00218E  C101  FFDD         	movff	number_deploy@tires_t+1,postdec2
  4329                           
  4330                           ; BSR set to: 0
  4331                           ;main.c: 446:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  4332  002192  0E01               	movlw	1
  4333  002194  EC73  F01D         	call	_lcdInst
  4334  002198  0E11               	movlw	17
  4335  00219A  0100               	movlb	0	; () banked
  4336  00219C  6FFD               	movwf	??_number_deploy& (0+255),b
  4337  00219E  0E3A               	movlw	58
  4338  0021A0                     u8877:
  4339  0021A0  2EE8               	decfsz	wreg,f,c
  4340  0021A2  D7FE               	bra	u8877
  4341  0021A4  2FFD               	decfsz	??_number_deploy& (0+255),f,b
  4342  0021A6  D7FC               	bra	u8877
  4343  0021A8  F000               	nop	
  4344                           
  4345                           ;main.c: 447:     printf("det,%d, tcnt %d",tires_detected,t_count);
  4346  0021AA  0E9A               	movlw	low STR_21
  4347  0021AC  0100               	movlb	0	; () banked
  4348  0021AE  6FED               	movwf	printf@fmt& (0+255),b
  4349  0021B0  0EFB               	movlw	high STR_21
  4350  0021B2  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4351  0021B4  C102  F0EF         	movff	number_deploy@tires_detected,?_printf+2
  4352  0021B8  C103  F0F0         	movff	number_deploy@tires_detected+1,?_printf+3
  4353  0021BC  C104  F0F1         	movff	number_deploy@t_count,?_printf+4
  4354  0021C0  C105  F0F2         	movff	number_deploy@t_count+1,?_printf+5
  4355  0021C4  ECFA  F01C         	call	_printf	;wreg free
  4356                           
  4357                           ;main.c: 448:     _delay((unsigned long)((1000)*(10000000/4000.0)));
  4358  0021C8  0E0D               	movlw	13
  4359  0021CA  0100               	movlb	0	; () banked
  4360  0021CC  6FFE               	movwf	(??_number_deploy+1)& (0+255),b
  4361  0021CE  0EAF               	movlw	175
  4362  0021D0  6FFD               	movwf	??_number_deploy& (0+255),b
  4363  0021D2  0EB6               	movlw	182
  4364  0021D4                     u8887:
  4365  0021D4  2EE8               	decfsz	wreg,f,c
  4366  0021D6  D7FE               	bra	u8887
  4367  0021D8  2FFD               	decfsz	??_number_deploy& (0+255),f,b
  4368  0021DA  D7FC               	bra	u8887
  4369  0021DC  2FFE               	decfsz	(??_number_deploy+1)& (0+255),f,b
  4370  0021DE  D7FA               	bra	u8887
  4371  0021E0  F000               	nop	
  4372                           
  4373                           ;main.c: 450:     if (t_count<=2){
  4374  0021E2  0101               	movlb	1	; () banked
  4375  0021E4  BF05               	btfsc	(number_deploy@t_count+1)& (0+255),7,b
  4376  0021E6  D006               	goto	u8200
  4377  0021E8  5105               	movf	(number_deploy@t_count+1)& (0+255),w,b
  4378  0021EA  E109               	bnz	l7535
  4379  0021EC  0E03               	movlw	3
  4380  0021EE  5D04               	subwf	number_deploy@t_count& (0+255),w,b
  4381  0021F0  B0D8               	btfsc	status,0,c
  4382  0021F2  D005               	goto	l7535
  4383  0021F4                     u8200:
  4384                           
  4385                           ; BSR set to: 1
  4386                           ;main.c: 454:         return (int) t_count;
  4387  0021F4  C104  F0F9         	movff	number_deploy@t_count,?_number_deploy
  4388  0021F8  C105  F0FA         	movff	number_deploy@t_count+1,?_number_deploy+1
  4389  0021FC  0012               	return	
  4390  0021FE                     l7535:
  4391                           
  4392                           ; BSR set to: 1
  4393                           ;main.c: 412:     while (t_count<3){
  4394  0021FE  BF05               	btfsc	(number_deploy@t_count+1)& (0+255),7,b
  4395  002200  D703               	goto	l7477
  4396  002202  5105               	movf	(number_deploy@t_count+1)& (0+255),w,b
  4397  002204  E105               	bnz	u8210
  4398  002206  0E03               	movlw	3
  4399  002208  5D04               	subwf	number_deploy@t_count& (0+255),w,b
  4400  00220A  B0D8               	btfsc	status,0,c
  4401  00220C  0012               	return	
  4402  00220E  D6FC               	goto	l7477
  4403  002210                     u8210:
  4404                           
  4405                           ; BSR set to: 1
  4406  002210  0012               	return		;funcret
  4407  002212                     __end_of_number_deploy:
  4408                           	opt callstack 0
  4409                           
  4410 ;; *************** function ___awdiv *****************
  4411 ;; Defined at:
  4412 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  4413 ;; Parameters:    Size  Location     Type
  4414 ;;  dividend        2    0[BANK0 ] int 
  4415 ;;  divisor         2    2[BANK0 ] int 
  4416 ;; Auto vars:     Size  Location     Type
  4417 ;;  quotient        2    6[BANK0 ] int 
  4418 ;;  sign            1    5[BANK0 ] unsigned char 
  4419 ;;  counter         1    4[BANK0 ] unsigned char 
  4420 ;; Return value:  Size  Location     Type
  4421 ;;                  2    0[BANK0 ] int 
  4422 ;; Registers used:
  4423 ;;		wreg, status,2, status,0
  4424 ;; Tracked objects:
  4425 ;;		On entry : 0/0
  4426 ;;		On exit  : 0/0
  4427 ;;		Unchanged: 0/0
  4428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4429 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4430 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4432 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4433 ;;Total ram usage:        8 bytes
  4434 ;; Hardware stack levels used:    1
  4435 ;; Hardware stack levels required when called:    3
  4436 ;; This function calls:
  4437 ;;		Nothing
  4438 ;; This function is called by:
  4439 ;;		_number_deploy
  4440 ;; This function uses a non-reentrant model
  4441 ;;
  4442                           
  4443                           	psect	text9
  4444  003232                     __ptext9:
  4445                           	opt callstack 0
  4446  003232                     ___awdiv:
  4447                           	opt callstack 26
  4448                           
  4449                           ; BSR set to: 1
  4450                           ;incstack = 0
  4451  003232  0E00               	movlw	0
  4452  003234  0100               	movlb	0	; () banked
  4453  003236  6F85               	movwf	___awdiv@sign& (0+255),b
  4454                           
  4455                           ; BSR set to: 0
  4456  003238  AF83               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  4457  00323A  D006               	goto	l7253
  4458                           
  4459                           ; BSR set to: 0
  4460  00323C  6D82               	negf	___awdiv@divisor& (0+255),b
  4461  00323E  1F83               	comf	(___awdiv@divisor+1)& (0+255),f,b
  4462  003240  B0D8               	btfsc	status,0,c
  4463  003242  2B83               	incf	(___awdiv@divisor+1)& (0+255),f,b
  4464                           
  4465                           ; BSR set to: 0
  4466  003244  0E01               	movlw	1
  4467  003246  6F85               	movwf	___awdiv@sign& (0+255),b
  4468  003248                     l7253:
  4469                           
  4470                           ; BSR set to: 0
  4471  003248  AF81               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  4472  00324A  D006               	goto	l7259
  4473                           
  4474                           ; BSR set to: 0
  4475  00324C  6D80               	negf	___awdiv@dividend& (0+255),b
  4476  00324E  1F81               	comf	(___awdiv@dividend+1)& (0+255),f,b
  4477  003250  B0D8               	btfsc	status,0,c
  4478  003252  2B81               	incf	(___awdiv@dividend+1)& (0+255),f,b
  4479                           
  4480                           ; BSR set to: 0
  4481  003254  0E01               	movlw	1
  4482  003256  1B85               	xorwf	___awdiv@sign& (0+255),f,b
  4483  003258                     l7259:
  4484                           
  4485                           ; BSR set to: 0
  4486  003258  0E00               	movlw	0
  4487  00325A  6F87               	movwf	(___awdiv@quotient+1)& (0+255),b
  4488  00325C  0E00               	movlw	0
  4489  00325E  6F86               	movwf	___awdiv@quotient& (0+255),b
  4490                           
  4491                           ; BSR set to: 0
  4492  003260  5182               	movf	___awdiv@divisor& (0+255),w,b
  4493  003262  1183               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  4494  003264  B4D8               	btfsc	status,2,c
  4495  003266  D01C               	goto	l7281
  4496                           
  4497                           ; BSR set to: 0
  4498  003268  0E01               	movlw	1
  4499  00326A  6F84               	movwf	___awdiv@counter& (0+255),b
  4500  00326C  D004               	goto	l7267
  4501  00326E                     l7265:
  4502                           
  4503                           ; BSR set to: 0
  4504  00326E  90D8               	bcf	status,0,c
  4505  003270  3782               	rlcf	___awdiv@divisor& (0+255),f,b
  4506  003272  3783               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  4507  003274  2B84               	incf	___awdiv@counter& (0+255),f,b
  4508  003276                     l7267:
  4509                           
  4510                           ; BSR set to: 0
  4511  003276  AF83               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  4512  003278  D7FA               	goto	l7265
  4513  00327A                     u7930:
  4514                           
  4515                           ; BSR set to: 0
  4516  00327A  90D8               	bcf	status,0,c
  4517  00327C  3786               	rlcf	___awdiv@quotient& (0+255),f,b
  4518  00327E  3787               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  4519                           
  4520                           ; BSR set to: 0
  4521  003280  5182               	movf	___awdiv@divisor& (0+255),w,b
  4522  003282  5D80               	subwf	___awdiv@dividend& (0+255),w,b
  4523  003284  5183               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4524  003286  5981               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  4525  003288  A0D8               	btfss	status,0,c
  4526  00328A  D005               	goto	l7277
  4527                           
  4528                           ; BSR set to: 0
  4529  00328C  5182               	movf	___awdiv@divisor& (0+255),w,b
  4530  00328E  5F80               	subwf	___awdiv@dividend& (0+255),f,b
  4531  003290  5183               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4532  003292  5B81               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  4533                           
  4534                           ; BSR set to: 0
  4535  003294  8186               	bsf	___awdiv@quotient& (0+255),0,b
  4536  003296                     l7277:
  4537                           
  4538                           ; BSR set to: 0
  4539  003296  90D8               	bcf	status,0,c
  4540  003298  3383               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  4541  00329A  3382               	rrcf	___awdiv@divisor& (0+255),f,b
  4542                           
  4543                           ; BSR set to: 0
  4544  00329C  2F84               	decfsz	___awdiv@counter& (0+255),f,b
  4545  00329E  D7ED               	goto	u7930
  4546  0032A0                     l7281:
  4547                           
  4548                           ; BSR set to: 0
  4549  0032A0  5185               	movf	___awdiv@sign& (0+255),w,b
  4550  0032A2  B4D8               	btfsc	status,2,c
  4551  0032A4  D004               	goto	l7285
  4552                           
  4553                           ; BSR set to: 0
  4554  0032A6  6D86               	negf	___awdiv@quotient& (0+255),b
  4555  0032A8  1F87               	comf	(___awdiv@quotient+1)& (0+255),f,b
  4556  0032AA  B0D8               	btfsc	status,0,c
  4557  0032AC  2B87               	incf	(___awdiv@quotient+1)& (0+255),f,b
  4558  0032AE                     l7285:
  4559                           
  4560                           ; BSR set to: 0
  4561  0032AE  C086  F080         	movff	___awdiv@quotient,?___awdiv
  4562  0032B2  C087  F081         	movff	___awdiv@quotient+1,?___awdiv+1
  4563                           
  4564                           ; BSR set to: 0
  4565  0032B6  0012               	return		;funcret
  4566  0032B8                     __end_of___awdiv:
  4567                           	opt callstack 0
  4568                           
  4569 ;; *************** function _backwards *****************
  4570 ;; Defined at:
  4571 ;;		line 674 in file "main.c"
  4572 ;; Parameters:    Size  Location     Type
  4573 ;;		None
  4574 ;; Auto vars:     Size  Location     Type
  4575 ;;		None
  4576 ;; Return value:  Size  Location     Type
  4577 ;;                  1    wreg      void 
  4578 ;; Registers used:
  4579 ;;		wreg, status,2, status,0, cstack
  4580 ;; Tracked objects:
  4581 ;;		On entry : 0/0
  4582 ;;		On exit  : 0/0
  4583 ;;		Unchanged: 0/0
  4584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4589 ;;Total ram usage:        0 bytes
  4590 ;; Hardware stack levels used:    1
  4591 ;; Hardware stack levels required when called:    5
  4592 ;; This function calls:
  4593 ;;		_I2C_Master_Start
  4594 ;;		_I2C_Master_Stop
  4595 ;;		_I2C_Master_Write
  4596 ;; This function is called by:
  4597 ;;		_main
  4598 ;; This function uses a non-reentrant model
  4599 ;;
  4600                           
  4601                           	psect	text10
  4602  003A6A                     __ptext10:
  4603                           	opt callstack 0
  4604  003A6A                     _backwards:
  4605                           	opt callstack 25
  4606                           
  4607                           ;main.c: 675:     I2C_Master_Start();
  4608                           
  4609                           ; BSR set to: 0
  4610                           ;incstack = 0
  4611  003A6A  EC84  F01D         	call	_I2C_Master_Start	;wreg free
  4612                           
  4613                           ;main.c: 676:     I2C_Master_Write(0b00010000);
  4614  003A6E  0E00               	movlw	0
  4615  003A70  0100               	movlb	0	; () banked
  4616  003A72  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4617  003A74  0E10               	movlw	16
  4618  003A76  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4619  003A78  EC7B  F01D         	call	_I2C_Master_Write	;wreg free
  4620                           
  4621                           ;main.c: 677:     I2C_Master_Write('5');
  4622  003A7C  0E00               	movlw	0
  4623  003A7E  0100               	movlb	0	; () banked
  4624  003A80  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4625  003A82  0E35               	movlw	53
  4626  003A84  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4627  003A86  EC7B  F01D         	call	_I2C_Master_Write	;wreg free
  4628                           
  4629                           ;main.c: 678:     I2C_Master_Stop();
  4630  003A8A  EC80  F01D         	call	_I2C_Master_Stop	;wreg free
  4631  003A8E  0012               	return		;funcret
  4632  003A90                     __end_of_backwards:
  4633                           	opt callstack 0
  4634                           
  4635 ;; *************** function _actuators_main *****************
  4636 ;; Defined at:
  4637 ;;		line 3 in file "actuators_main.c"
  4638 ;; Parameters:    Size  Location     Type
  4639 ;;  stack           2   12[BANK1 ] int 
  4640 ;;  steps2_adj      2   14[BANK1 ] int 
  4641 ;; Auto vars:     Size  Location     Type
  4642 ;;  act_cnt         2   18[BANK1 ] int 
  4643 ;; Return value:  Size  Location     Type
  4644 ;;                  1    wreg      void 
  4645 ;; Registers used:
  4646 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4647 ;; Tracked objects:
  4648 ;;		On entry : 0/0
  4649 ;;		On exit  : 0/0
  4650 ;;		Unchanged: 0/0
  4651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4652 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4653 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4654 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4655 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4656 ;;Total ram usage:        8 bytes
  4657 ;; Hardware stack levels used:    1
  4658 ;; Hardware stack levels required when called:   16
  4659 ;; This function calls:
  4660 ;;		_initLCD
  4661 ;;		_lcdInst
  4662 ;;		_printf
  4663 ;;		_servo
  4664 ;;		_stepper
  4665 ;;		_stepper2
  4666 ;;		_stepper2_back
  4667 ;;		_system_init
  4668 ;; This function is called by:
  4669 ;;		_main
  4670 ;; This function uses a non-reentrant model
  4671 ;;
  4672                           
  4673                           	psect	text11
  4674  0029BE                     __ptext11:
  4675                           	opt callstack 0
  4676  0029BE                     _actuators_main:
  4677                           	opt callstack 14
  4678                           
  4679                           ;actuators_main.c: 4:     int act_cnt = 0;
  4680                           
  4681                           ;incstack = 0
  4682  0029BE  0E00               	movlw	0
  4683  0029C0  0101               	movlb	1	; () banked
  4684  0029C2  6F13               	movwf	(actuators_main@act_cnt+1)& (0+255),b
  4685  0029C4  0E00               	movlw	0
  4686  0029C6  6F12               	movwf	actuators_main@act_cnt& (0+255),b
  4687                           
  4688                           ; BSR set to: 1
  4689                           ;actuators_main.c: 5:     system_init();
  4690  0029C8  EC3D  F01C         	call	_system_init	;wreg free
  4691                           
  4692                           ;actuators_main.c: 6:     initLCD();
  4693  0029CC  ECE0  F019         	call	_initLCD	;wreg free
  4694                           
  4695                           ;actuators_main.c: 7:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  4696  0029D0  0E01               	movlw	1
  4697  0029D2  EC73  F01D         	call	_lcdInst
  4698  0029D6  0E11               	movlw	17
  4699  0029D8  0101               	movlb	1	; () banked
  4700  0029DA  6F10               	movwf	??_actuators_main& (0+255),b
  4701  0029DC  0E3A               	movlw	58
  4702  0029DE                     u8897:
  4703  0029DE  2EE8               	decfsz	wreg,f,c
  4704  0029E0  D7FE               	bra	u8897
  4705  0029E2  2F10               	decfsz	??_actuators_main& (0+255),f,b
  4706  0029E4  D7FC               	bra	u8897
  4707  0029E6  F000               	nop	
  4708                           
  4709                           ;actuators_main.c: 8:     printf("cnt is %d",act_cnt);
  4710  0029E8  0E11               	movlw	low STR_1
  4711  0029EA  0100               	movlb	0	; () banked
  4712  0029EC  6FED               	movwf	printf@fmt& (0+255),b
  4713  0029EE  0EFD               	movlw	high STR_1
  4714  0029F0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4715  0029F2  0E00               	movlw	0
  4716  0029F4  6FF0               	movwf	(?_printf+3)& (0+255),b
  4717  0029F6  0E00               	movlw	0
  4718  0029F8  6FEF               	movwf	(?_printf+2)& (0+255),b
  4719  0029FA  ECFA  F01C         	call	_printf	;wreg free
  4720                           
  4721                           ;actuators_main.c: 9:     _delay((unsigned long)((200)*(10000000/4000.0)));
  4722  0029FE  0E03               	movlw	3
  4723  002A00  0101               	movlb	1	; () banked
  4724  002A02  6F11               	movwf	(??_actuators_main+1)& (0+255),b
  4725  002A04  0E8A               	movlw	138
  4726  002A06  6F10               	movwf	??_actuators_main& (0+255),b
  4727  002A08  0E55               	movlw	85
  4728  002A0A                     u8907:
  4729  002A0A  2EE8               	decfsz	wreg,f,c
  4730  002A0C  D7FE               	bra	u8907
  4731  002A0E  2F10               	decfsz	??_actuators_main& (0+255),f,b
  4732  002A10  D7FC               	bra	u8907
  4733  002A12  2F11               	decfsz	(??_actuators_main+1)& (0+255),f,b
  4734  002A14  D7FA               	bra	u8907
  4735  002A16  D000               	nop2	
  4736  002A18                     l7319:
  4737                           
  4738                           ;actuators_main.c: 11:     if (act_cnt==0){
  4739  002A18  0101               	movlb	1	; () banked
  4740  002A1A  5112               	movf	actuators_main@act_cnt& (0+255),w,b
  4741  002A1C  1113               	iorwf	(actuators_main@act_cnt+1)& (0+255),w,b
  4742  002A1E  A4D8               	btfss	status,2,c
  4743  002A20  D064               	goto	l7395
  4744                           
  4745                           ; BSR set to: 1
  4746                           ;actuators_main.c: 15:         stepper(stack);
  4747  002A22  C10C  F0FD         	movff	actuators_main@stack,stepper@stack
  4748  002A26  C10D  F0FE         	movff	actuators_main@stack+1,stepper@stack+1
  4749  002A2A  ECD5  F018         	call	_stepper	;wreg free
  4750                           
  4751                           ;actuators_main.c: 16:         stepper2(0, steps2_adj);
  4752  002A2E  C10E  F0FD         	movff	actuators_main@steps2_adj,stepper2@steps2_adj
  4753  002A32  C10F  F0FE         	movff	actuators_main@steps2_adj+1,stepper2@steps2_adj+1
  4754  002A36  0E00               	movlw	0
  4755  002A38  EC16  F017         	call	_stepper2
  4756                           
  4757                           ;actuators_main.c: 17:                 stepper2_back(1, steps2_adj);
  4758  002A3C  C10E  F0FD         	movff	actuators_main@steps2_adj,stepper2_back@steps2_adj
  4759  002A40  C10F  F0FE         	movff	actuators_main@steps2_adj+1,stepper2_back@steps2_adj+1
  4760  002A44  0E01               	movlw	1
  4761  002A46  ECF1  F017         	call	_stepper2_back
  4762                           
  4763                           ;actuators_main.c: 20:                 LATA = 0b00000000;
  4764  002A4A  0E00               	movlw	0
  4765  002A4C  6E89               	movwf	3977,c	;volatile
  4766                           
  4767                           ;actuators_main.c: 21:         LATCbits.LATC0 = 0;
  4768  002A4E  908B               	bcf	3979,0,c	;volatile
  4769                           
  4770                           ;actuators_main.c: 22:         LATEbits.LATE0 = 0;
  4771  002A50  908D               	bcf	3981,0,c	;volatile
  4772                           
  4773                           ;actuators_main.c: 23:         LATEbits.LATE1 = 0;
  4774  002A52  928D               	bcf	3981,1,c	;volatile
  4775                           
  4776                           ;actuators_main.c: 24:         LATEbits.LATE2 = 0;
  4777  002A54  948D               	bcf	3981,2,c	;volatile
  4778                           
  4779                           ;actuators_main.c: 25:         LATCbits.LATC5 = 0;
  4780  002A56  9A8B               	bcf	3979,5,c	;volatile
  4781                           
  4782                           ;actuators_main.c: 26:         LATCbits.LATC6 = 0;
  4783  002A58  9C8B               	bcf	3979,6,c	;volatile
  4784                           
  4785                           ;actuators_main.c: 27:         LATCbits.LATC7 = 0;
  4786  002A5A  9E8B               	bcf	3979,7,c	;volatile
  4787                           
  4788                           ;actuators_main.c: 28:         LATAbits.LATA5 = 0;
  4789  002A5C  9A89               	bcf	3977,5,c	;volatile
  4790                           
  4791                           ;actuators_main.c: 30:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/400
      +                          0.0)));};
  4792  002A5E  0E01               	movlw	1
  4793  002A60  EC73  F01D         	call	_lcdInst
  4794  002A64  0E11               	movlw	17
  4795  002A66  0101               	movlb	1	; () banked
  4796  002A68  6F10               	movwf	??_actuators_main& (0+255),b
  4797  002A6A  0E3A               	movlw	58
  4798  002A6C                     u8917:
  4799  002A6C  2EE8               	decfsz	wreg,f,c
  4800  002A6E  D7FE               	bra	u8917
  4801  002A70  2F10               	decfsz	??_actuators_main& (0+255),f,b
  4802  002A72  D7FC               	bra	u8917
  4803  002A74  F000               	nop	
  4804                           
  4805                           ;actuators_main.c: 31:         printf("Stepper done");
  4806  002A76  0E4C               	movlw	low STR_2
  4807  002A78  0100               	movlb	0	; () banked
  4808  002A7A  6FED               	movwf	printf@fmt& (0+255),b
  4809  002A7C  0EFC               	movlw	high STR_2
  4810  002A7E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4811  002A80  ECFA  F01C         	call	_printf	;wreg free
  4812                           
  4813                           ;actuators_main.c: 33:         servo();
  4814  002A84  ECCF  F01C         	call	_servo	;wreg free
  4815                           
  4816                           ;actuators_main.c: 34:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/400
      +                          0.0)));};
  4817  002A88  0E01               	movlw	1
  4818  002A8A  EC73  F01D         	call	_lcdInst
  4819  002A8E  0E11               	movlw	17
  4820  002A90  0101               	movlb	1	; () banked
  4821  002A92  6F10               	movwf	??_actuators_main& (0+255),b
  4822  002A94  0E3A               	movlw	58
  4823  002A96                     u8927:
  4824  002A96  2EE8               	decfsz	wreg,f,c
  4825  002A98  D7FE               	bra	u8927
  4826  002A9A  2F10               	decfsz	??_actuators_main& (0+255),f,b
  4827  002A9C  D7FC               	bra	u8927
  4828  002A9E  F000               	nop	
  4829                           
  4830                           ;actuators_main.c: 35:         printf("Servo done");
  4831  002AA0  0EB6               	movlw	low STR_3
  4832  002AA2  0100               	movlb	0	; () banked
  4833  002AA4  6FED               	movwf	printf@fmt& (0+255),b
  4834  002AA6  0EFC               	movlw	high STR_3
  4835  002AA8  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4836  002AAA  ECFA  F01C         	call	_printf	;wreg free
  4837                           
  4838                           ;actuators_main.c: 36:                 LATA = 0b00000000;
  4839  002AAE  0E00               	movlw	0
  4840  002AB0  6E89               	movwf	3977,c	;volatile
  4841                           
  4842                           ;actuators_main.c: 37:         LATCbits.LATC0 = 0;
  4843  002AB2  908B               	bcf	3979,0,c	;volatile
  4844                           
  4845                           ;actuators_main.c: 38:         LATEbits.LATE0 = 0;
  4846  002AB4  908D               	bcf	3981,0,c	;volatile
  4847                           
  4848                           ;actuators_main.c: 39:         LATEbits.LATE1 = 0;
  4849  002AB6  928D               	bcf	3981,1,c	;volatile
  4850                           
  4851                           ;actuators_main.c: 40:         LATEbits.LATE2 = 0;
  4852  002AB8  948D               	bcf	3981,2,c	;volatile
  4853                           
  4854                           ;actuators_main.c: 41:         LATCbits.LATC5 = 0;
  4855  002ABA  9A8B               	bcf	3979,5,c	;volatile
  4856                           
  4857                           ;actuators_main.c: 42:         LATCbits.LATC6 = 0;
  4858  002ABC  9C8B               	bcf	3979,6,c	;volatile
  4859                           
  4860                           ;actuators_main.c: 43:         LATCbits.LATC7 = 0;
  4861  002ABE  9E8B               	bcf	3979,7,c	;volatile
  4862                           
  4863                           ;actuators_main.c: 44:         LATAbits.LATA5 = 0;
  4864  002AC0  9A89               	bcf	3977,5,c	;volatile
  4865                           
  4866                           ;actuators_main.c: 49:         stepper2(1, steps2_adj);
  4867  002AC2  C10E  F0FD         	movff	actuators_main@steps2_adj,stepper2@steps2_adj
  4868  002AC6  C10F  F0FE         	movff	actuators_main@steps2_adj+1,stepper2@steps2_adj+1
  4869  002ACA  0E01               	movlw	1
  4870  002ACC  EC16  F017         	call	_stepper2
  4871                           
  4872                           ;actuators_main.c: 50:                         LATA = 0b00000000;
  4873  002AD0  0E00               	movlw	0
  4874  002AD2  6E89               	movwf	3977,c	;volatile
  4875                           
  4876                           ;actuators_main.c: 51:         LATCbits.LATC0 = 0;
  4877  002AD4  908B               	bcf	3979,0,c	;volatile
  4878                           
  4879                           ;actuators_main.c: 52:         LATEbits.LATE0 = 0;
  4880  002AD6  908D               	bcf	3981,0,c	;volatile
  4881                           
  4882                           ;actuators_main.c: 53:         LATEbits.LATE1 = 0;
  4883  002AD8  928D               	bcf	3981,1,c	;volatile
  4884                           
  4885                           ;actuators_main.c: 54:         LATEbits.LATE2 = 0;
  4886  002ADA  948D               	bcf	3981,2,c	;volatile
  4887                           
  4888                           ;actuators_main.c: 55:         LATCbits.LATC5 = 0;
  4889  002ADC  9A8B               	bcf	3979,5,c	;volatile
  4890                           
  4891                           ;actuators_main.c: 56:         LATCbits.LATC6 = 0;
  4892  002ADE  9C8B               	bcf	3979,6,c	;volatile
  4893                           
  4894                           ;actuators_main.c: 57:         LATCbits.LATC7 = 0;
  4895  002AE0  9E8B               	bcf	3979,7,c	;volatile
  4896                           
  4897                           ;actuators_main.c: 58:         LATAbits.LATA5 = 0;
  4898  002AE2  9A89               	bcf	3977,5,c	;volatile
  4899                           
  4900                           ;actuators_main.c: 59:         act_cnt++;
  4901  002AE4  0101               	movlb	1	; () banked
  4902  002AE6  4B12               	infsnz	actuators_main@act_cnt& (0+255),f,b
  4903  002AE8  2B13               	incf	(actuators_main@act_cnt+1)& (0+255),f,b
  4904  002AEA                     l7395:
  4905                           
  4906                           ; BSR set to: 1
  4907                           ;actuators_main.c: 62:     if(act_cnt){
  4908  002AEA  5112               	movf	actuators_main@act_cnt& (0+255),w,b
  4909  002AEC  1113               	iorwf	(actuators_main@act_cnt+1)& (0+255),w,b
  4910  002AEE  A4D8               	btfss	status,2,c
  4911  002AF0  0012               	return	
  4912  002AF2  D792               	goto	l7319
  4913  002AF4                     __end_of_actuators_main:
  4914                           	opt callstack 0
  4915                           
  4916 ;; *************** function _system_init *****************
  4917 ;; Defined at:
  4918 ;;		line 72 in file "actuators_main.c"
  4919 ;; Parameters:    Size  Location     Type
  4920 ;;		None
  4921 ;; Auto vars:     Size  Location     Type
  4922 ;;		None
  4923 ;; Return value:  Size  Location     Type
  4924 ;;                  1    wreg      void 
  4925 ;; Registers used:
  4926 ;;		wreg, status,2
  4927 ;; Tracked objects:
  4928 ;;		On entry : 0/0
  4929 ;;		On exit  : 0/0
  4930 ;;		Unchanged: 0/0
  4931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4936 ;;Total ram usage:        0 bytes
  4937 ;; Hardware stack levels used:    1
  4938 ;; Hardware stack levels required when called:    3
  4939 ;; This function calls:
  4940 ;;		Nothing
  4941 ;; This function is called by:
  4942 ;;		_actuators_main
  4943 ;; This function uses a non-reentrant model
  4944 ;;
  4945                           
  4946                           	psect	text12
  4947  00387A                     __ptext12:
  4948                           	opt callstack 0
  4949  00387A                     _system_init:
  4950                           	opt callstack 26
  4951                           
  4952                           ;actuators_main.c: 73:     TRISB = 0x00;
  4953                           
  4954                           ; BSR set to: 1
  4955                           ;incstack = 0
  4956  00387A  0E00               	movlw	0
  4957  00387C  6E93               	movwf	3987,c	;volatile
  4958                           
  4959                           ;actuators_main.c: 75:     LATB = 0x0F;
  4960  00387E  0E0F               	movlw	15
  4961  003880  6E8A               	movwf	3978,c	;volatile
  4962                           
  4963                           ;actuators_main.c: 76:     TRISA = 0x00;
  4964  003882  0E00               	movlw	0
  4965  003884  6E92               	movwf	3986,c	;volatile
  4966                           
  4967                           ;actuators_main.c: 77:     LATA = 0x0F;
  4968  003886  0E0F               	movlw	15
  4969  003888  6E89               	movwf	3977,c	;volatile
  4970                           
  4971                           ;actuators_main.c: 79:     TRISCbits.TRISC1 = 0;
  4972  00388A  9294               	bcf	3988,1,c	;volatile
  4973                           
  4974                           ;actuators_main.c: 82:     TRISCbits.TRISC2 = 0;
  4975  00388C  9494               	bcf	3988,2,c	;volatile
  4976                           
  4977                           ;actuators_main.c: 85:     LATD = 0x00;
  4978  00388E  0E00               	movlw	0
  4979  003890  6E8C               	movwf	3980,c	;volatile
  4980                           
  4981                           ;actuators_main.c: 86:     TRISD = 0x00;
  4982  003892  0E00               	movlw	0
  4983  003894  6E95               	movwf	3989,c	;volatile
  4984                           
  4985                           ;actuators_main.c: 88:     ADCON1 = 0b00001111;
  4986  003896  0E0F               	movlw	15
  4987  003898  6EC1               	movwf	4033,c	;volatile
  4988                           
  4989                           ;actuators_main.c: 90:     TRISC = 0x00;
  4990  00389A  0E00               	movlw	0
  4991  00389C  6E94               	movwf	3988,c	;volatile
  4992                           
  4993                           ;actuators_main.c: 91:     LATC = 0x00;
  4994  00389E  0E00               	movlw	0
  4995  0038A0  6E8B               	movwf	3979,c	;volatile
  4996                           
  4997                           ;actuators_main.c: 92:     TRISE = 0x00;
  4998  0038A2  0E00               	movlw	0
  4999  0038A4  6E96               	movwf	3990,c	;volatile
  5000                           
  5001                           ;actuators_main.c: 93:     LATE = 0x00;
  5002  0038A6  0E00               	movlw	0
  5003  0038A8  6E8D               	movwf	3981,c	;volatile
  5004  0038AA  0012               	return		;funcret
  5005  0038AC                     __end_of_system_init:
  5006                           	opt callstack 0
  5007                           
  5008 ;; *************** function _stepper2_back *****************
  5009 ;; Defined at:
  5010 ;;		line 314 in file "actuators_main.c"
  5011 ;; Parameters:    Size  Location     Type
  5012 ;;  direction       1    wreg     unsigned char 
  5013 ;;  steps2_adj      2  125[BANK0 ] int 
  5014 ;; Auto vars:     Size  Location     Type
  5015 ;;  direction       1    1[BANK1 ] unsigned char 
  5016 ;;  i               2    4[BANK1 ] int 
  5017 ;;  count_steppe    2    2[BANK1 ] int 
  5018 ;; Return value:  Size  Location     Type
  5019 ;;                  1    wreg      void 
  5020 ;; Registers used:
  5021 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5022 ;; Tracked objects:
  5023 ;;		On entry : 0/0
  5024 ;;		On exit  : 0/0
  5025 ;;		Unchanged: 0/0
  5026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5027 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5028 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5029 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5030 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5031 ;;Total ram usage:        8 bytes
  5032 ;; Hardware stack levels used:    1
  5033 ;; Hardware stack levels required when called:   15
  5034 ;; This function calls:
  5035 ;;		_full_drive
  5036 ;;		_lcdInst
  5037 ;;		_printf
  5038 ;; This function is called by:
  5039 ;;		_actuators_main
  5040 ;; This function uses a non-reentrant model
  5041 ;;
  5042                           
  5043                           	psect	text13
  5044  002FE2                     __ptext13:
  5045                           	opt callstack 0
  5046  002FE2                     _stepper2_back:
  5047                           	opt callstack 14
  5048                           
  5049                           ;incstack = 0
  5050                           ;stepper2_back@direction stored from wreg
  5051  002FE2  0101               	movlb	1	; () banked
  5052  002FE4  6F01               	movwf	stepper2_back@direction& (0+255),b
  5053                           
  5054                           ;actuators_main.c: 332:     int count_stepper = 0;
  5055  002FE6  0E00               	movlw	0
  5056  002FE8  0101               	movlb	1	; () banked
  5057  002FEA  6F03               	movwf	(stepper2_back@count_stepper+1)& (0+255),b
  5058  002FEC  0E00               	movlw	0
  5059  002FEE  6F02               	movwf	stepper2_back@count_stepper& (0+255),b
  5060                           
  5061                           ; BSR set to: 1
  5062                           ;actuators_main.c: 335:             { lcdInst(0x01); _delay((unsigned long)((5)*(1000000
      +                          0/4000.0)));};
  5063                           
  5064                           ; BSR set to: 1
  5065                           ;actuators_main.c: 334:         if (count_stepper<1){
  5066  002FF0  0E01               	movlw	1
  5067  002FF2  EC73  F01D         	call	_lcdInst
  5068  002FF6  0E11               	movlw	17
  5069  002FF8  0101               	movlb	1	; () banked
  5070  002FFA  6F00               	movwf	??_stepper2_back& (0+255),b
  5071  002FFC  0E3A               	movlw	58
  5072  002FFE                     u8937:
  5073  002FFE  2EE8               	decfsz	wreg,f,c
  5074  003000  D7FE               	bra	u8937
  5075  003002  2F00               	decfsz	??_stepper2_back& (0+255),f,b
  5076  003004  D7FC               	bra	u8937
  5077  003006  F000               	nop	
  5078                           
  5079                           ;actuators_main.c: 336:             printf("step1");
  5080  003008  0E24               	movlw	low STR_6
  5081  00300A  0100               	movlb	0	; () banked
  5082  00300C  6FED               	movwf	printf@fmt& (0+255),b
  5083  00300E  0EFD               	movlw	high STR_6
  5084  003010  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5085  003012  ECFA  F01C         	call	_printf	;wreg free
  5086  003016  0EC0               	movlw	192
  5087  003018  EC73  F01D         	call	_lcdInst
  5088                           
  5089                           ;actuators_main.c: 338:             printf("Step speed %d",4);
  5090  00301C  0E31               	movlw	low STR_7
  5091  00301E  0100               	movlb	0	; () banked
  5092  003020  6FED               	movwf	printf@fmt& (0+255),b
  5093  003022  0EFC               	movlw	high STR_7
  5094  003024  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5095  003026  0E00               	movlw	0
  5096  003028  6FF0               	movwf	(?_printf+3)& (0+255),b
  5097  00302A  0E04               	movlw	4
  5098  00302C  6FEF               	movwf	(?_printf+2)& (0+255),b
  5099  00302E  ECFA  F01C         	call	_printf	;wreg free
  5100                           
  5101                           ;actuators_main.c: 339:             for(int i=0;i<5;i++){
  5102  003032  0E00               	movlw	0
  5103  003034  0101               	movlb	1	; () banked
  5104  003036  6F05               	movwf	(stepper2_back@i+1)& (0+255),b
  5105  003038  0E00               	movlw	0
  5106  00303A  6F04               	movwf	stepper2_back@i& (0+255),b
  5107  00303C                     l7065:
  5108                           
  5109                           ; BSR set to: 1
  5110                           ;actuators_main.c: 341:                 full_drive(direction, 2);
  5111  00303C  0E00               	movlw	0
  5112  00303E  0100               	movlb	0	; () banked
  5113  003040  6FFA               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5114  003042  0E02               	movlw	2
  5115  003044  6FF9               	movwf	full_drive@stepper_no& (0+255),b
  5116  003046  0101               	movlb	1	; () banked
  5117  003048  5101               	movf	stepper2_back@direction& (0+255),w,b
  5118  00304A  ECDB  F00A         	call	_full_drive
  5119                           
  5120                           ;actuators_main.c: 343:             }
  5121  00304E  0101               	movlb	1	; () banked
  5122  003050  4B04               	infsnz	stepper2_back@i& (0+255),f,b
  5123  003052  2B05               	incf	(stepper2_back@i+1)& (0+255),f,b
  5124                           
  5125                           ; BSR set to: 1
  5126  003054  BF05               	btfsc	(stepper2_back@i+1)& (0+255),7,b
  5127  003056  D7F2               	goto	l7065
  5128  003058  5105               	movf	(stepper2_back@i+1)& (0+255),w,b
  5129  00305A  E104               	bnz	u7520
  5130  00305C  0E05               	movlw	5
  5131  00305E  5D04               	subwf	stepper2_back@i& (0+255),w,b
  5132  003060  A0D8               	btfss	status,0,c
  5133  003062  D7EC               	goto	l7065
  5134  003064                     u7520:
  5135                           
  5136                           ; BSR set to: 1
  5137                           ;actuators_main.c: 344:             printf("cnt is %d", count_stepper);
  5138  003064  0E11               	movlw	low STR_1
  5139  003066  0100               	movlb	0	; () banked
  5140  003068  6FED               	movwf	printf@fmt& (0+255),b
  5141  00306A  0EFD               	movlw	high STR_1
  5142  00306C  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5143  00306E  C102  F0EF         	movff	stepper2_back@count_stepper,?_printf+2
  5144  003072  C103  F0F0         	movff	stepper2_back@count_stepper+1,?_printf+3
  5145  003076  ECFA  F01C         	call	_printf	;wreg free
  5146                           
  5147                           ;actuators_main.c: 345:             count_stepper++;
  5148  00307A  0101               	movlb	1	; () banked
  5149  00307C  4B02               	infsnz	stepper2_back@count_stepper& (0+255),f,b
  5150  00307E  2B03               	incf	(stepper2_back@count_stepper+1)& (0+255),f,b
  5151                           
  5152                           ; BSR set to: 1
  5153  003080  0012               	return		;funcret
  5154  003082                     __end_of_stepper2_back:
  5155                           	opt callstack 0
  5156                           
  5157 ;; *************** function _stepper2 *****************
  5158 ;; Defined at:
  5159 ;;		line 229 in file "actuators_main.c"
  5160 ;; Parameters:    Size  Location     Type
  5161 ;;  direction       1    wreg     unsigned char 
  5162 ;;  steps2_adj      2  125[BANK0 ] int 
  5163 ;; Auto vars:     Size  Location     Type
  5164 ;;  direction       1   11[BANK1 ] unsigned char 
  5165 ;;  i               2    7[BANK1 ] int 
  5166 ;;  i               2    5[BANK1 ] int 
  5167 ;;  count_steppe    2    9[BANK1 ] int 
  5168 ;; Return value:  Size  Location     Type
  5169 ;;                  1    wreg      void 
  5170 ;; Registers used:
  5171 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5172 ;; Tracked objects:
  5173 ;;		On entry : 0/0
  5174 ;;		On exit  : 0/0
  5175 ;;		Unchanged: 0/0
  5176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5177 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5178 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5179 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5180 ;;      Totals:         0       2      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5181 ;;Total ram usage:       14 bytes
  5182 ;; Hardware stack levels used:    1
  5183 ;; Hardware stack levels required when called:   15
  5184 ;; This function calls:
  5185 ;;		_full_drive
  5186 ;;		_lcdInst
  5187 ;;		_printf
  5188 ;; This function is called by:
  5189 ;;		_actuators_main
  5190 ;; This function uses a non-reentrant model
  5191 ;;
  5192                           
  5193                           	psect	text14
  5194  002E2C                     __ptext14:
  5195                           	opt callstack 0
  5196  002E2C                     _stepper2:
  5197                           	opt callstack 14
  5198                           
  5199                           ; BSR set to: 1
  5200                           ;incstack = 0
  5201                           ;stepper2@direction stored from wreg
  5202  002E2C  0101               	movlb	1	; () banked
  5203  002E2E  6F0B               	movwf	stepper2@direction& (0+255),b
  5204                           
  5205                           ;actuators_main.c: 247:     int count_stepper = 0;
  5206  002E30  0E00               	movlw	0
  5207  002E32  0101               	movlb	1	; () banked
  5208  002E34  6F0A               	movwf	(stepper2@count_stepper+1)& (0+255),b
  5209  002E36  0E00               	movlw	0
  5210  002E38  6F09               	movwf	stepper2@count_stepper& (0+255),b
  5211                           
  5212                           ; BSR set to: 1
  5213                           ;actuators_main.c: 250:     if (direction == 0){
  5214                           
  5215                           ; BSR set to: 1
  5216                           ;actuators_main.c: 249:         if (count_stepper<1){
  5217  002E3A  510B               	movf	stepper2@direction& (0+255),w,b
  5218  002E3C  A4D8               	btfss	status,2,c
  5219  002E3E  D02D               	goto	l7027
  5220                           
  5221                           ; BSR set to: 1
  5222                           ;actuators_main.c: 255:             for(int i=0;i<steps2_adj;i++){
  5223  002E40  0E00               	movlw	0
  5224  002E42  6F06               	movwf	(stepper2@i+1)& (0+255),b
  5225  002E44  0E00               	movlw	0
  5226  002E46  6F05               	movwf	stepper2@i& (0+255),b
  5227  002E48  D00C               	goto	l7021
  5228  002E4A                     l7017:
  5229                           
  5230                           ; BSR set to: 1
  5231                           ;actuators_main.c: 257:                 full_drive(direction, 2);
  5232  002E4A  0E00               	movlw	0
  5233  002E4C  0100               	movlb	0	; () banked
  5234  002E4E  6FFA               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5235  002E50  0E02               	movlw	2
  5236  002E52  6FF9               	movwf	full_drive@stepper_no& (0+255),b
  5237  002E54  0101               	movlb	1	; () banked
  5238  002E56  510B               	movf	stepper2@direction& (0+255),w,b
  5239  002E58  ECDB  F00A         	call	_full_drive
  5240                           
  5241                           ;actuators_main.c: 259:             }
  5242  002E5C  0101               	movlb	1	; () banked
  5243  002E5E  4B05               	infsnz	stepper2@i& (0+255),f,b
  5244  002E60  2B06               	incf	(stepper2@i+1)& (0+255),f,b
  5245  002E62                     l7021:
  5246                           
  5247                           ; BSR set to: 1
  5248  002E62  0100               	movlb	0	; () banked
  5249  002E64  51FD               	movf	stepper2@steps2_adj& (0+255),w,b
  5250  002E66  0101               	movlb	1	; () banked
  5251  002E68  5D05               	subwf	stepper2@i& (0+255),w,b
  5252  002E6A  5106               	movf	(stepper2@i+1)& (0+255),w,b
  5253  002E6C  0A80               	xorlw	128
  5254  002E6E  6F00               	movwf	??_stepper2& (0+255),b
  5255  002E70  0100               	movlb	0	; () banked
  5256  002E72  51FE               	movf	(stepper2@steps2_adj+1)& (0+255),w,b
  5257  002E74  0A80               	xorlw	128
  5258  002E76  0101               	movlb	1	; () banked
  5259  002E78  5900               	subwfb	??_stepper2& (0+255),w,b
  5260  002E7A  A0D8               	btfss	status,0,c
  5261  002E7C  D7E6               	goto	l7017
  5262                           
  5263                           ; BSR set to: 1
  5264                           ;actuators_main.c: 260:             printf("cnt is %d", count_stepper);
  5265  002E7E  0E11               	movlw	low STR_1
  5266  002E80  0100               	movlb	0	; () banked
  5267  002E82  6FED               	movwf	printf@fmt& (0+255),b
  5268  002E84  0EFD               	movlw	high STR_1
  5269  002E86  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5270  002E88  C109  F0EF         	movff	stepper2@count_stepper,?_printf+2
  5271  002E8C  C10A  F0F0         	movff	stepper2@count_stepper+1,?_printf+3
  5272  002E90  ECFA  F01C         	call	_printf	;wreg free
  5273                           
  5274                           ;actuators_main.c: 261:             count_stepper++;
  5275  002E94  0101               	movlb	1	; () banked
  5276  002E96  4B09               	infsnz	stepper2@count_stepper& (0+255),f,b
  5277  002E98  2B0A               	incf	(stepper2@count_stepper+1)& (0+255),f,b
  5278  002E9A                     l7027:
  5279                           
  5280                           ; BSR set to: 1
  5281                           ;actuators_main.c: 263:     if (direction == 1){
  5282  002E9A  050B               	decf	stepper2@direction& (0+255),w,b
  5283  002E9C  A4D8               	btfss	status,2,c
  5284  002E9E  0012               	return	
  5285                           
  5286                           ; BSR set to: 1
  5287                           ;actuators_main.c: 264:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/40
      +                          00.0)));};
  5288  002EA0  0E01               	movlw	1
  5289  002EA2  EC73  F01D         	call	_lcdInst
  5290  002EA6  0E11               	movlw	17
  5291  002EA8  0101               	movlb	1	; () banked
  5292  002EAA  6F00               	movwf	??_stepper2& (0+255),b
  5293  002EAC  0E3A               	movlw	58
  5294  002EAE                     u8947:
  5295  002EAE  2EE8               	decfsz	wreg,f,c
  5296  002EB0  D7FE               	bra	u8947
  5297  002EB2  2F00               	decfsz	??_stepper2& (0+255),f,b
  5298  002EB4  D7FC               	bra	u8947
  5299  002EB6  F000               	nop	
  5300                           
  5301                           ;actuators_main.c: 265:                         printf("steppp %d", steps2_adj-(5));
  5302  002EB8  0E07               	movlw	low STR_5
  5303  002EBA  0100               	movlb	0	; () banked
  5304  002EBC  6FED               	movwf	printf@fmt& (0+255),b
  5305  002EBE  0EFD               	movlw	high STR_5
  5306  002EC0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5307  002EC2  0EFB               	movlw	251
  5308  002EC4  25FD               	addwf	stepper2@steps2_adj& (0+255),w,b
  5309  002EC6  6FEF               	movwf	(?_printf+2)& (0+255),b
  5310  002EC8  0EFF               	movlw	255
  5311  002ECA  21FE               	addwfc	(stepper2@steps2_adj+1)& (0+255),w,b
  5312  002ECC  6FF0               	movwf	(?_printf+3)& (0+255),b
  5313  002ECE  ECFA  F01C         	call	_printf	;wreg free
  5314                           
  5315                           ;actuators_main.c: 267:                 for(int i=0;i<(steps2_adj-(5));i++){
  5316  002ED2  0E00               	movlw	0
  5317  002ED4  0101               	movlb	1	; () banked
  5318  002ED6  6F08               	movwf	(stepper2@i_384+1)& (0+255),b
  5319  002ED8  0E00               	movlw	0
  5320  002EDA  6F07               	movwf	stepper2@i_384& (0+255),b
  5321  002EDC  D00C               	goto	l7041
  5322  002EDE                     l7037:
  5323                           
  5324                           ; BSR set to: 1
  5325                           ;actuators_main.c: 269:                     full_drive(direction, 2);
  5326  002EDE  0E00               	movlw	0
  5327  002EE0  0100               	movlb	0	; () banked
  5328  002EE2  6FFA               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5329  002EE4  0E02               	movlw	2
  5330  002EE6  6FF9               	movwf	full_drive@stepper_no& (0+255),b
  5331  002EE8  0101               	movlb	1	; () banked
  5332  002EEA  510B               	movf	stepper2@direction& (0+255),w,b
  5333  002EEC  ECDB  F00A         	call	_full_drive
  5334                           
  5335                           ;actuators_main.c: 271:                 }
  5336  002EF0  0101               	movlb	1	; () banked
  5337  002EF2  4B07               	infsnz	stepper2@i_384& (0+255),f,b
  5338  002EF4  2B08               	incf	(stepper2@i_384+1)& (0+255),f,b
  5339  002EF6                     l7041:
  5340                           
  5341                           ; BSR set to: 1
  5342  002EF6  0EFB               	movlw	251
  5343  002EF8  6F00               	movwf	??_stepper2& (0+255),b
  5344  002EFA  0EFF               	movlw	255
  5345  002EFC  6F01               	movwf	(??_stepper2+1)& (0+255),b
  5346  002EFE  C0FD  F102         	movff	stepper2@steps2_adj,??_stepper2+2
  5347  002F02  C0FE  F103         	movff	stepper2@steps2_adj+1,??_stepper2+3
  5348  002F06  5100               	movf	??_stepper2& (0+255),w,b
  5349  002F08  2702               	addwf	(??_stepper2+2)& (0+255),f,b
  5350  002F0A  5101               	movf	(??_stepper2+1)& (0+255),w,b
  5351  002F0C  2303               	addwfc	(??_stepper2+3)& (0+255),f,b
  5352  002F0E  5102               	movf	(??_stepper2+2)& (0+255),w,b
  5353  002F10  5D07               	subwf	stepper2@i_384& (0+255),w,b
  5354  002F12  5108               	movf	(stepper2@i_384+1)& (0+255),w,b
  5355  002F14  0A80               	xorlw	128
  5356  002F16  6F04               	movwf	(??_stepper2+4)& (0+255),b
  5357  002F18  5103               	movf	(??_stepper2+3)& (0+255),w,b
  5358  002F1A  0A80               	xorlw	128
  5359  002F1C  5904               	subwfb	(??_stepper2+4)& (0+255),w,b
  5360  002F1E  A0D8               	btfss	status,0,c
  5361  002F20  D7DE               	goto	l7037
  5362                           
  5363                           ; BSR set to: 1
  5364                           ;actuators_main.c: 272:                 count_stepper++;
  5365  002F22  4B09               	infsnz	stepper2@count_stepper& (0+255),f,b
  5366  002F24  2B0A               	incf	(stepper2@count_stepper+1)& (0+255),f,b
  5367                           
  5368                           ; BSR set to: 1
  5369  002F26  0012               	return		;funcret
  5370  002F28                     __end_of_stepper2:
  5371                           	opt callstack 0
  5372                           
  5373 ;; *************** function _stepper *****************
  5374 ;; Defined at:
  5375 ;;		line 182 in file "actuators_main.c"
  5376 ;; Parameters:    Size  Location     Type
  5377 ;;  stack           2  125[BANK0 ] int 
  5378 ;; Auto vars:     Size  Location     Type
  5379 ;;  i               2    4[BANK1 ] int 
  5380 ;;  i               2    2[BANK1 ] int 
  5381 ;;  count_steppe    2    0[BANK1 ] int 
  5382 ;; Return value:  Size  Location     Type
  5383 ;;                  1    wreg      void 
  5384 ;; Registers used:
  5385 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5386 ;; Tracked objects:
  5387 ;;		On entry : 0/0
  5388 ;;		On exit  : 0/0
  5389 ;;		Unchanged: 0/0
  5390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5391 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5392 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5394 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5395 ;;Total ram usage:        8 bytes
  5396 ;; Hardware stack levels used:    1
  5397 ;; Hardware stack levels required when called:   15
  5398 ;; This function calls:
  5399 ;;		_full_drive
  5400 ;; This function is called by:
  5401 ;;		_actuators_main
  5402 ;; This function uses a non-reentrant model
  5403 ;;
  5404                           
  5405                           	psect	text15
  5406  0031AA                     __ptext15:
  5407                           	opt callstack 0
  5408  0031AA                     _stepper:
  5409                           	opt callstack 14
  5410                           
  5411                           ;actuators_main.c: 183:     int count_stepper = 0;
  5412                           
  5413                           ; BSR set to: 1
  5414                           ;incstack = 0
  5415  0031AA  0E00               	movlw	0
  5416  0031AC  0101               	movlb	1	; () banked
  5417  0031AE  6F01               	movwf	(stepper@count_stepper+1)& (0+255),b
  5418  0031B0  0E00               	movlw	0
  5419  0031B2  6F00               	movwf	stepper@count_stepper& (0+255),b
  5420                           
  5421                           ; BSR set to: 1
  5422                           ;actuators_main.c: 192:             if (stack == 1){
  5423                           
  5424                           ; BSR set to: 1
  5425                           ;actuators_main.c: 186:         if (count_stepper<1){
  5426  0031B4  0100               	movlb	0	; () banked
  5427  0031B6  05FD               	decf	stepper@stack& (0+255),w,b
  5428  0031B8  11FE               	iorwf	(stepper@stack+1)& (0+255),w,b
  5429  0031BA  A4D8               	btfss	status,2,c
  5430  0031BC  D018               	goto	u7450
  5431                           
  5432                           ; BSR set to: 0
  5433                           ;actuators_main.c: 193:                 for(int i=0;i<14;i++){
  5434  0031BE  0E00               	movlw	0
  5435  0031C0  0101               	movlb	1	; () banked
  5436  0031C2  6F03               	movwf	(stepper@i+1)& (0+255),b
  5437  0031C4  0E00               	movlw	0
  5438  0031C6  6F02               	movwf	stepper@i& (0+255),b
  5439  0031C8                     l6987:
  5440                           
  5441                           ; BSR set to: 1
  5442                           ;actuators_main.c: 195:                     full_drive(0, 1);
  5443  0031C8  0E00               	movlw	0
  5444  0031CA  0100               	movlb	0	; () banked
  5445  0031CC  6FFA               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5446  0031CE  0E01               	movlw	1
  5447  0031D0  6FF9               	movwf	full_drive@stepper_no& (0+255),b
  5448  0031D2  0E00               	movlw	0
  5449  0031D4  ECDB  F00A         	call	_full_drive
  5450                           
  5451                           ;actuators_main.c: 197:                 }
  5452  0031D8  0101               	movlb	1	; () banked
  5453  0031DA  4B02               	infsnz	stepper@i& (0+255),f,b
  5454  0031DC  2B03               	incf	(stepper@i+1)& (0+255),f,b
  5455                           
  5456                           ; BSR set to: 1
  5457  0031DE  BF03               	btfsc	(stepper@i+1)& (0+255),7,b
  5458  0031E0  D7F3               	goto	l6987
  5459  0031E2  5103               	movf	(stepper@i+1)& (0+255),w,b
  5460  0031E4  E104               	bnz	u7450
  5461  0031E6  0E0E               	movlw	14
  5462  0031E8  5D02               	subwf	stepper@i& (0+255),w,b
  5463  0031EA  A0D8               	btfss	status,0,c
  5464  0031EC  D7ED               	goto	l6987
  5465  0031EE                     u7450:
  5466                           
  5467                           ;actuators_main.c: 199:             if (stack == 2){
  5468  0031EE  0E02               	movlw	2
  5469  0031F0  0100               	movlb	0	; () banked
  5470  0031F2  19FD               	xorwf	stepper@stack& (0+255),w,b
  5471  0031F4  11FE               	iorwf	(stepper@stack+1)& (0+255),w,b
  5472  0031F6  A4D8               	btfss	status,2,c
  5473  0031F8  D018               	goto	u7470
  5474                           
  5475                           ; BSR set to: 0
  5476                           ;actuators_main.c: 200:                 for(int i=0;i<14;i++){
  5477  0031FA  0E00               	movlw	0
  5478  0031FC  0101               	movlb	1	; () banked
  5479  0031FE  6F05               	movwf	(stepper@i_376+1)& (0+255),b
  5480  003200  0E00               	movlw	0
  5481  003202  6F04               	movwf	stepper@i_376& (0+255),b
  5482  003204                     l7001:
  5483                           
  5484                           ; BSR set to: 1
  5485                           ;actuators_main.c: 201:                     full_drive(0, 3);
  5486  003204  0E00               	movlw	0
  5487  003206  0100               	movlb	0	; () banked
  5488  003208  6FFA               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5489  00320A  0E03               	movlw	3
  5490  00320C  6FF9               	movwf	full_drive@stepper_no& (0+255),b
  5491  00320E  0E00               	movlw	0
  5492  003210  ECDB  F00A         	call	_full_drive
  5493                           
  5494                           ;actuators_main.c: 204:                 }
  5495  003214  0101               	movlb	1	; () banked
  5496  003216  4B04               	infsnz	stepper@i_376& (0+255),f,b
  5497  003218  2B05               	incf	(stepper@i_376+1)& (0+255),f,b
  5498                           
  5499                           ; BSR set to: 1
  5500  00321A  BF05               	btfsc	(stepper@i_376+1)& (0+255),7,b
  5501  00321C  D7F3               	goto	l7001
  5502  00321E  5105               	movf	(stepper@i_376+1)& (0+255),w,b
  5503  003220  E104               	bnz	u7470
  5504  003222  0E0E               	movlw	14
  5505  003224  5D04               	subwf	stepper@i_376& (0+255),w,b
  5506  003226  A0D8               	btfss	status,0,c
  5507  003228  D7ED               	goto	l7001
  5508  00322A                     u7470:
  5509                           
  5510                           ;actuators_main.c: 207:             count_stepper++;
  5511  00322A  0101               	movlb	1	; () banked
  5512  00322C  4B00               	infsnz	stepper@count_stepper& (0+255),f,b
  5513  00322E  2B01               	incf	(stepper@count_stepper+1)& (0+255),f,b
  5514                           
  5515                           ; BSR set to: 1
  5516                           
  5517                           ;actuators_main.c: 208:         }
  5518  003230  0012               	return		;funcret
  5519  003232                     __end_of_stepper:
  5520                           	opt callstack 0
  5521                           
  5522 ;; *************** function _full_drive *****************
  5523 ;; Defined at:
  5524 ;;		line 363 in file "actuators_main.c"
  5525 ;; Parameters:    Size  Location     Type
  5526 ;;  direction       1    wreg     unsigned char 
  5527 ;;  stepper_no      2  121[BANK0 ] int 
  5528 ;; Auto vars:     Size  Location     Type
  5529 ;;  direction       1  124[BANK0 ] unsigned char 
  5530 ;; Return value:  Size  Location     Type
  5531 ;;                  1    wreg      void 
  5532 ;; Registers used:
  5533 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5534 ;; Tracked objects:
  5535 ;;		On entry : 0/0
  5536 ;;		On exit  : 0/0
  5537 ;;		Unchanged: 0/0
  5538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5539 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5540 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5541 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5542 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5543 ;;Total ram usage:        4 bytes
  5544 ;; Hardware stack levels used:    1
  5545 ;; Hardware stack levels required when called:   14
  5546 ;; This function calls:
  5547 ;;		_printf
  5548 ;; This function is called by:
  5549 ;;		_stepper
  5550 ;;		_stepper2
  5551 ;;		_stepper2_back
  5552 ;; This function uses a non-reentrant model
  5553 ;;
  5554                           
  5555                           	psect	text16
  5556  0015B6                     __ptext16:
  5557                           	opt callstack 0
  5558  0015B6                     _full_drive:
  5559                           	opt callstack 14
  5560                           
  5561                           ; BSR set to: 1
  5562                           ;incstack = 0
  5563                           ;full_drive@direction stored from wreg
  5564  0015B6  0100               	movlb	0	; () banked
  5565  0015B8  6FFC               	movwf	full_drive@direction& (0+255),b
  5566                           
  5567                           ;actuators_main.c: 364:     if (stepper_no == 1){
  5568  0015BA  0100               	movlb	0	; () banked
  5569  0015BC  05F9               	decf	full_drive@stepper_no& (0+255),w,b
  5570  0015BE  11FA               	iorwf	(full_drive@stepper_no+1)& (0+255),w,b
  5571  0015C0  A4D8               	btfss	status,2,c
  5572  0015C2  D06B               	goto	l6725
  5573                           
  5574                           ; BSR set to: 0
  5575                           ;actuators_main.c: 365:         if (direction == 1){
  5576  0015C4  05FC               	decf	full_drive@direction& (0+255),w,b
  5577  0015C6  A4D8               	btfss	status,2,c
  5578  0015C8  D032               	goto	l6709
  5579                           
  5580                           ; BSR set to: 0
  5581                           ;actuators_main.c: 366:             LATA = 0b00000011;
  5582  0015CA  0E03               	movlw	3
  5583  0015CC  6E89               	movwf	3977,c	;volatile
  5584                           
  5585                           ; BSR set to: 0
  5586                           ;actuators_main.c: 367:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5587  0015CE  0E1E               	movlw	30
  5588  0015D0  0100               	movlb	0	; () banked
  5589  0015D2  6FFB               	movwf	??_full_drive& (0+255),b
  5590  0015D4  0E37               	movlw	55
  5591  0015D6                     u8957:
  5592  0015D6  2EE8               	decfsz	wreg,f,c
  5593  0015D8  D7FE               	bra	u8957
  5594  0015DA  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5595  0015DC  D7FC               	bra	u8957
  5596                           
  5597                           ;actuators_main.c: 368:             LATA = 0b00000110;
  5598  0015DE  0E06               	movlw	6
  5599  0015E0  6E89               	movwf	3977,c	;volatile
  5600                           
  5601                           ;actuators_main.c: 369:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5602  0015E2  0E1E               	movlw	30
  5603  0015E4  0100               	movlb	0	; () banked
  5604  0015E6  6FFB               	movwf	??_full_drive& (0+255),b
  5605  0015E8  0E37               	movlw	55
  5606  0015EA                     u8967:
  5607  0015EA  2EE8               	decfsz	wreg,f,c
  5608  0015EC  D7FE               	bra	u8967
  5609  0015EE  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5610  0015F0  D7FC               	bra	u8967
  5611                           
  5612                           ;actuators_main.c: 370:             LATA = 0b00001100;
  5613  0015F2  0E0C               	movlw	12
  5614  0015F4  6E89               	movwf	3977,c	;volatile
  5615                           
  5616                           ;actuators_main.c: 371:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5617  0015F6  0E1E               	movlw	30
  5618  0015F8  0100               	movlb	0	; () banked
  5619  0015FA  6FFB               	movwf	??_full_drive& (0+255),b
  5620  0015FC  0E37               	movlw	55
  5621  0015FE                     u8977:
  5622  0015FE  2EE8               	decfsz	wreg,f,c
  5623  001600  D7FE               	bra	u8977
  5624  001602  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5625  001604  D7FC               	bra	u8977
  5626                           
  5627                           ;actuators_main.c: 372:             LATA = 0b00001001;
  5628  001606  0E09               	movlw	9
  5629  001608  6E89               	movwf	3977,c	;volatile
  5630                           
  5631                           ;actuators_main.c: 373:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5632  00160A  0E1E               	movlw	30
  5633  00160C  0100               	movlb	0	; () banked
  5634  00160E  6FFB               	movwf	??_full_drive& (0+255),b
  5635  001610  0E37               	movlw	55
  5636  001612                     u8987:
  5637  001612  2EE8               	decfsz	wreg,f,c
  5638  001614  D7FE               	bra	u8987
  5639  001616  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5640  001618  D7FC               	bra	u8987
  5641                           
  5642                           ;actuators_main.c: 374:             LATA = 0b00000011;
  5643  00161A  0E03               	movlw	3
  5644  00161C  6E89               	movwf	3977,c	;volatile
  5645                           
  5646                           ;actuators_main.c: 375:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5647  00161E  0E1E               	movlw	30
  5648  001620  0100               	movlb	0	; () banked
  5649  001622  6FFB               	movwf	??_full_drive& (0+255),b
  5650  001624  0E37               	movlw	55
  5651  001626                     u8997:
  5652  001626  2EE8               	decfsz	wreg,f,c
  5653  001628  D7FE               	bra	u8997
  5654  00162A  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5655  00162C  D7FC               	bra	u8997
  5656  00162E                     l6709:
  5657                           
  5658                           ;actuators_main.c: 377:         if (direction == 0){
  5659  00162E  0100               	movlb	0	; () banked
  5660  001630  51FC               	movf	full_drive@direction& (0+255),w,b
  5661  001632  A4D8               	btfss	status,2,c
  5662  001634  D032               	goto	l6725
  5663                           
  5664                           ; BSR set to: 0
  5665                           ;actuators_main.c: 378:             LATA = 0b00001001;
  5666  001636  0E09               	movlw	9
  5667  001638  6E89               	movwf	3977,c	;volatile
  5668                           
  5669                           ; BSR set to: 0
  5670                           ;actuators_main.c: 379:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5671  00163A  0E1E               	movlw	30
  5672  00163C  0100               	movlb	0	; () banked
  5673  00163E  6FFB               	movwf	??_full_drive& (0+255),b
  5674  001640  0E37               	movlw	55
  5675  001642                     u9007:
  5676  001642  2EE8               	decfsz	wreg,f,c
  5677  001644  D7FE               	bra	u9007
  5678  001646  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5679  001648  D7FC               	bra	u9007
  5680                           
  5681                           ;actuators_main.c: 380:             LATA = 0b00001100;
  5682  00164A  0E0C               	movlw	12
  5683  00164C  6E89               	movwf	3977,c	;volatile
  5684                           
  5685                           ;actuators_main.c: 381:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5686  00164E  0E1E               	movlw	30
  5687  001650  0100               	movlb	0	; () banked
  5688  001652  6FFB               	movwf	??_full_drive& (0+255),b
  5689  001654  0E37               	movlw	55
  5690  001656                     u9017:
  5691  001656  2EE8               	decfsz	wreg,f,c
  5692  001658  D7FE               	bra	u9017
  5693  00165A  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5694  00165C  D7FC               	bra	u9017
  5695                           
  5696                           ;actuators_main.c: 382:             LATA = 0b00000110;
  5697  00165E  0E06               	movlw	6
  5698  001660  6E89               	movwf	3977,c	;volatile
  5699                           
  5700                           ;actuators_main.c: 383:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5701  001662  0E1E               	movlw	30
  5702  001664  0100               	movlb	0	; () banked
  5703  001666  6FFB               	movwf	??_full_drive& (0+255),b
  5704  001668  0E37               	movlw	55
  5705  00166A                     u9027:
  5706  00166A  2EE8               	decfsz	wreg,f,c
  5707  00166C  D7FE               	bra	u9027
  5708  00166E  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5709  001670  D7FC               	bra	u9027
  5710                           
  5711                           ;actuators_main.c: 384:             LATA = 0b00000011;
  5712  001672  0E03               	movlw	3
  5713  001674  6E89               	movwf	3977,c	;volatile
  5714                           
  5715                           ;actuators_main.c: 385:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5716  001676  0E1E               	movlw	30
  5717  001678  0100               	movlb	0	; () banked
  5718  00167A  6FFB               	movwf	??_full_drive& (0+255),b
  5719  00167C  0E37               	movlw	55
  5720  00167E                     u9037:
  5721  00167E  2EE8               	decfsz	wreg,f,c
  5722  001680  D7FE               	bra	u9037
  5723  001682  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5724  001684  D7FC               	bra	u9037
  5725                           
  5726                           ;actuators_main.c: 386:             LATA = 0b00001001;
  5727  001686  0E09               	movlw	9
  5728  001688  6E89               	movwf	3977,c	;volatile
  5729                           
  5730                           ;actuators_main.c: 387:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5731  00168A  0E1E               	movlw	30
  5732  00168C  0100               	movlb	0	; () banked
  5733  00168E  6FFB               	movwf	??_full_drive& (0+255),b
  5734  001690  0E37               	movlw	55
  5735  001692                     u9047:
  5736  001692  2EE8               	decfsz	wreg,f,c
  5737  001694  D7FE               	bra	u9047
  5738  001696  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5739  001698  D7FC               	bra	u9047
  5740  00169A                     l6725:
  5741                           
  5742                           ;actuators_main.c: 390:     if (stepper_no == 2){
  5743  00169A  0E02               	movlw	2
  5744  00169C  0100               	movlb	0	; () banked
  5745  00169E  19F9               	xorwf	full_drive@stepper_no& (0+255),w,b
  5746  0016A0  11FA               	iorwf	(full_drive@stepper_no+1)& (0+255),w,b
  5747  0016A2  A4D8               	btfss	status,2,c
  5748  0016A4  D089               	goto	l6803
  5749                           
  5750                           ; BSR set to: 0
  5751                           ;actuators_main.c: 391:         if (direction == 1){
  5752  0016A6  05FC               	decf	full_drive@direction& (0+255),w,b
  5753  0016A8  A4D8               	btfss	status,2,c
  5754  0016AA  D041               	goto	l6765
  5755                           
  5756                           ; BSR set to: 0
  5757                           ;actuators_main.c: 392:             LATCbits.LATC0 = 1;
  5758  0016AC  808B               	bsf	3979,0,c	;volatile
  5759                           
  5760                           ;actuators_main.c: 393:             LATEbits.LATE0 = 1;
  5761  0016AE  808D               	bsf	3981,0,c	;volatile
  5762                           
  5763                           ;actuators_main.c: 394:             LATEbits.LATE1 = 0;
  5764  0016B0  928D               	bcf	3981,1,c	;volatile
  5765                           
  5766                           ;actuators_main.c: 395:             LATEbits.LATE2 = 0;
  5767  0016B2  948D               	bcf	3981,2,c	;volatile
  5768                           
  5769                           ; BSR set to: 0
  5770                           ;actuators_main.c: 396:             _delay((unsigned long)((4)*(10000000/4000.0)));
  5771  0016B4  0E0D               	movlw	13
  5772  0016B6  0100               	movlb	0	; () banked
  5773  0016B8  6FFB               	movwf	??_full_drive& (0+255),b
  5774  0016BA  0EFB               	movlw	251
  5775  0016BC                     u9057:
  5776  0016BC  2EE8               	decfsz	wreg,f,c
  5777  0016BE  D7FE               	bra	u9057
  5778  0016C0  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5779  0016C2  D7FC               	bra	u9057
  5780  0016C4  D000               	nop2	
  5781                           
  5782                           ;actuators_main.c: 397:             LATCbits.LATC0 = 0;
  5783  0016C6  908B               	bcf	3979,0,c	;volatile
  5784                           
  5785                           ;actuators_main.c: 398:             LATEbits.LATE0 = 1;
  5786  0016C8  808D               	bsf	3981,0,c	;volatile
  5787                           
  5788                           ;actuators_main.c: 399:             LATEbits.LATE1 = 1;
  5789  0016CA  828D               	bsf	3981,1,c	;volatile
  5790                           
  5791                           ;actuators_main.c: 400:             LATEbits.LATE2 = 0;
  5792  0016CC  948D               	bcf	3981,2,c	;volatile
  5793                           
  5794                           ;actuators_main.c: 401:             _delay((unsigned long)((4)*(10000000/4000.0)));
  5795  0016CE  0E0D               	movlw	13
  5796  0016D0  0100               	movlb	0	; () banked
  5797  0016D2  6FFB               	movwf	??_full_drive& (0+255),b
  5798  0016D4  0EFB               	movlw	251
  5799  0016D6                     u9067:
  5800  0016D6  2EE8               	decfsz	wreg,f,c
  5801  0016D8  D7FE               	bra	u9067
  5802  0016DA  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5803  0016DC  D7FC               	bra	u9067
  5804  0016DE  D000               	nop2	
  5805                           
  5806                           ;actuators_main.c: 402:             LATCbits.LATC0 = 0;
  5807  0016E0  908B               	bcf	3979,0,c	;volatile
  5808                           
  5809                           ;actuators_main.c: 403:             LATEbits.LATE0 = 0;
  5810  0016E2  908D               	bcf	3981,0,c	;volatile
  5811                           
  5812                           ;actuators_main.c: 404:             LATEbits.LATE1 = 1;
  5813  0016E4  828D               	bsf	3981,1,c	;volatile
  5814                           
  5815                           ;actuators_main.c: 405:             LATEbits.LATE2 = 1;
  5816  0016E6  848D               	bsf	3981,2,c	;volatile
  5817                           
  5818                           ;actuators_main.c: 406:             _delay((unsigned long)((4)*(10000000/4000.0)));
  5819  0016E8  0E0D               	movlw	13
  5820  0016EA  0100               	movlb	0	; () banked
  5821  0016EC  6FFB               	movwf	??_full_drive& (0+255),b
  5822  0016EE  0EFB               	movlw	251
  5823  0016F0                     u9077:
  5824  0016F0  2EE8               	decfsz	wreg,f,c
  5825  0016F2  D7FE               	bra	u9077
  5826  0016F4  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5827  0016F6  D7FC               	bra	u9077
  5828  0016F8  D000               	nop2	
  5829                           
  5830                           ;actuators_main.c: 407:             LATCbits.LATC0 = 1;
  5831  0016FA  808B               	bsf	3979,0,c	;volatile
  5832                           
  5833                           ;actuators_main.c: 408:             LATEbits.LATE0 = 0;
  5834  0016FC  908D               	bcf	3981,0,c	;volatile
  5835                           
  5836                           ;actuators_main.c: 409:             LATEbits.LATE1 = 0;
  5837  0016FE  928D               	bcf	3981,1,c	;volatile
  5838                           
  5839                           ;actuators_main.c: 410:             LATEbits.LATE2 = 1;
  5840  001700  848D               	bsf	3981,2,c	;volatile
  5841                           
  5842                           ;actuators_main.c: 411:             _delay((unsigned long)((4)*(10000000/4000.0)));
  5843  001702  0E0D               	movlw	13
  5844  001704  0100               	movlb	0	; () banked
  5845  001706  6FFB               	movwf	??_full_drive& (0+255),b
  5846  001708  0EFB               	movlw	251
  5847  00170A                     u9087:
  5848  00170A  2EE8               	decfsz	wreg,f,c
  5849  00170C  D7FE               	bra	u9087
  5850  00170E  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5851  001710  D7FC               	bra	u9087
  5852  001712  D000               	nop2	
  5853                           
  5854                           ;actuators_main.c: 412:             LATCbits.LATC0 = 1;
  5855  001714  808B               	bsf	3979,0,c	;volatile
  5856                           
  5857                           ;actuators_main.c: 413:             LATEbits.LATE0 = 1;
  5858  001716  808D               	bsf	3981,0,c	;volatile
  5859                           
  5860                           ;actuators_main.c: 414:             LATEbits.LATE1 = 0;
  5861  001718  928D               	bcf	3981,1,c	;volatile
  5862                           
  5863                           ;actuators_main.c: 415:             LATEbits.LATE2 = 0;
  5864  00171A  948D               	bcf	3981,2,c	;volatile
  5865                           
  5866                           ;actuators_main.c: 416:             _delay((unsigned long)((4)*(10000000/4000.0)));
  5867  00171C  0E0D               	movlw	13
  5868  00171E  0100               	movlb	0	; () banked
  5869  001720  6FFB               	movwf	??_full_drive& (0+255),b
  5870  001722  0EFB               	movlw	251
  5871  001724                     u9097:
  5872  001724  2EE8               	decfsz	wreg,f,c
  5873  001726  D7FE               	bra	u9097
  5874  001728  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5875  00172A  D7FC               	bra	u9097
  5876  00172C  D000               	nop2	
  5877  00172E                     l6765:
  5878                           
  5879                           ;actuators_main.c: 418:         if (direction == 0){
  5880  00172E  0100               	movlb	0	; () banked
  5881  001730  51FC               	movf	full_drive@direction& (0+255),w,b
  5882  001732  A4D8               	btfss	status,2,c
  5883  001734  D041               	goto	l6803
  5884                           
  5885                           ; BSR set to: 0
  5886                           ;actuators_main.c: 419:             LATCbits.LATC0 = 1;
  5887  001736  808B               	bsf	3979,0,c	;volatile
  5888                           
  5889                           ;actuators_main.c: 420:             LATEbits.LATE0 = 0;
  5890  001738  908D               	bcf	3981,0,c	;volatile
  5891                           
  5892                           ;actuators_main.c: 421:             LATEbits.LATE1 = 0;
  5893  00173A  928D               	bcf	3981,1,c	;volatile
  5894                           
  5895                           ;actuators_main.c: 422:             LATEbits.LATE2 = 1;
  5896  00173C  848D               	bsf	3981,2,c	;volatile
  5897                           
  5898                           ; BSR set to: 0
  5899                           ;actuators_main.c: 423:             _delay((unsigned long)((4)*(10000000/4000.0)));
  5900  00173E  0E0D               	movlw	13
  5901  001740  0100               	movlb	0	; () banked
  5902  001742  6FFB               	movwf	??_full_drive& (0+255),b
  5903  001744  0EFB               	movlw	251
  5904  001746                     u9107:
  5905  001746  2EE8               	decfsz	wreg,f,c
  5906  001748  D7FE               	bra	u9107
  5907  00174A  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5908  00174C  D7FC               	bra	u9107
  5909  00174E  D000               	nop2	
  5910                           
  5911                           ;actuators_main.c: 424:             LATCbits.LATC0 = 0;
  5912  001750  908B               	bcf	3979,0,c	;volatile
  5913                           
  5914                           ;actuators_main.c: 425:             LATEbits.LATE0 = 0;
  5915  001752  908D               	bcf	3981,0,c	;volatile
  5916                           
  5917                           ;actuators_main.c: 426:             LATEbits.LATE1 = 1;
  5918  001754  828D               	bsf	3981,1,c	;volatile
  5919                           
  5920                           ;actuators_main.c: 427:             LATEbits.LATE2 = 1;
  5921  001756  848D               	bsf	3981,2,c	;volatile
  5922                           
  5923                           ;actuators_main.c: 428:             _delay((unsigned long)((4)*(10000000/4000.0)));
  5924  001758  0E0D               	movlw	13
  5925  00175A  0100               	movlb	0	; () banked
  5926  00175C  6FFB               	movwf	??_full_drive& (0+255),b
  5927  00175E  0EFB               	movlw	251
  5928  001760                     u9117:
  5929  001760  2EE8               	decfsz	wreg,f,c
  5930  001762  D7FE               	bra	u9117
  5931  001764  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5932  001766  D7FC               	bra	u9117
  5933  001768  D000               	nop2	
  5934                           
  5935                           ;actuators_main.c: 429:             LATCbits.LATC0 = 0;
  5936  00176A  908B               	bcf	3979,0,c	;volatile
  5937                           
  5938                           ;actuators_main.c: 430:             LATEbits.LATE0 = 1;
  5939  00176C  808D               	bsf	3981,0,c	;volatile
  5940                           
  5941                           ;actuators_main.c: 431:             LATEbits.LATE1 = 1;
  5942  00176E  828D               	bsf	3981,1,c	;volatile
  5943                           
  5944                           ;actuators_main.c: 432:             LATEbits.LATE2 = 0;
  5945  001770  948D               	bcf	3981,2,c	;volatile
  5946                           
  5947                           ;actuators_main.c: 433:             _delay((unsigned long)((4)*(10000000/4000.0)));
  5948  001772  0E0D               	movlw	13
  5949  001774  0100               	movlb	0	; () banked
  5950  001776  6FFB               	movwf	??_full_drive& (0+255),b
  5951  001778  0EFB               	movlw	251
  5952  00177A                     u9127:
  5953  00177A  2EE8               	decfsz	wreg,f,c
  5954  00177C  D7FE               	bra	u9127
  5955  00177E  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5956  001780  D7FC               	bra	u9127
  5957  001782  D000               	nop2	
  5958                           
  5959                           ;actuators_main.c: 434:             LATCbits.LATC0 = 1;
  5960  001784  808B               	bsf	3979,0,c	;volatile
  5961                           
  5962                           ;actuators_main.c: 435:             LATEbits.LATE0 = 1;
  5963  001786  808D               	bsf	3981,0,c	;volatile
  5964                           
  5965                           ;actuators_main.c: 436:             LATEbits.LATE1 = 0;
  5966  001788  928D               	bcf	3981,1,c	;volatile
  5967                           
  5968                           ;actuators_main.c: 437:             LATEbits.LATE2 = 0;
  5969  00178A  948D               	bcf	3981,2,c	;volatile
  5970                           
  5971                           ;actuators_main.c: 438:             _delay((unsigned long)((4)*(10000000/4000.0)));
  5972  00178C  0E0D               	movlw	13
  5973  00178E  0100               	movlb	0	; () banked
  5974  001790  6FFB               	movwf	??_full_drive& (0+255),b
  5975  001792  0EFB               	movlw	251
  5976  001794                     u9137:
  5977  001794  2EE8               	decfsz	wreg,f,c
  5978  001796  D7FE               	bra	u9137
  5979  001798  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5980  00179A  D7FC               	bra	u9137
  5981  00179C  D000               	nop2	
  5982                           
  5983                           ;actuators_main.c: 439:             LATCbits.LATC0 = 1;
  5984  00179E  808B               	bsf	3979,0,c	;volatile
  5985                           
  5986                           ;actuators_main.c: 440:             LATEbits.LATE0 = 0;
  5987  0017A0  908D               	bcf	3981,0,c	;volatile
  5988                           
  5989                           ;actuators_main.c: 441:             LATEbits.LATE1 = 0;
  5990  0017A2  928D               	bcf	3981,1,c	;volatile
  5991                           
  5992                           ;actuators_main.c: 442:             LATEbits.LATE2 = 1;
  5993  0017A4  848D               	bsf	3981,2,c	;volatile
  5994                           
  5995                           ;actuators_main.c: 443:             _delay((unsigned long)((4)*(10000000/4000.0)));
  5996  0017A6  0E0D               	movlw	13
  5997  0017A8  0100               	movlb	0	; () banked
  5998  0017AA  6FFB               	movwf	??_full_drive& (0+255),b
  5999  0017AC  0EFB               	movlw	251
  6000  0017AE                     u9147:
  6001  0017AE  2EE8               	decfsz	wreg,f,c
  6002  0017B0  D7FE               	bra	u9147
  6003  0017B2  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6004  0017B4  D7FC               	bra	u9147
  6005  0017B6  D000               	nop2	
  6006  0017B8                     l6803:
  6007                           
  6008                           ;actuators_main.c: 446:     if (stepper_no == 3){
  6009  0017B8  0E03               	movlw	3
  6010  0017BA  0100               	movlb	0	; () banked
  6011  0017BC  19F9               	xorwf	full_drive@stepper_no& (0+255),w,b
  6012  0017BE  11FA               	iorwf	(full_drive@stepper_no+1)& (0+255),w,b
  6013  0017C0  A4D8               	btfss	status,2,c
  6014  0017C2  D086               	goto	l6883
  6015                           
  6016                           ; BSR set to: 0
  6017                           ;actuators_main.c: 447:         printf("what");
  6018  0017C4  0E2A               	movlw	low STR_9
  6019  0017C6  6FED               	movwf	printf@fmt& (0+255),b
  6020  0017C8  0EFD               	movlw	high STR_9
  6021  0017CA  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6022  0017CC  ECFA  F01C         	call	_printf	;wreg free
  6023                           
  6024                           ;actuators_main.c: 448:         if (direction == 0){
  6025  0017D0  0100               	movlb	0	; () banked
  6026  0017D2  51FC               	movf	full_drive@direction& (0+255),w,b
  6027  0017D4  A4D8               	btfss	status,2,c
  6028  0017D6  D03C               	goto	l6845
  6029                           
  6030                           ; BSR set to: 0
  6031                           ;actuators_main.c: 449:             LATCbits.LATC5 = 1;
  6032  0017D8  8A8B               	bsf	3979,5,c	;volatile
  6033                           
  6034                           ;actuators_main.c: 450:             LATCbits.LATC6 = 0;
  6035  0017DA  9C8B               	bcf	3979,6,c	;volatile
  6036                           
  6037                           ;actuators_main.c: 451:             LATCbits.LATC7 = 0;
  6038  0017DC  9E8B               	bcf	3979,7,c	;volatile
  6039                           
  6040                           ;actuators_main.c: 452:             LATAbits.LATA5 = 1;
  6041  0017DE  8A89               	bsf	3977,5,c	;volatile
  6042                           
  6043                           ; BSR set to: 0
  6044                           ;actuators_main.c: 453:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6045  0017E0  0E1E               	movlw	30
  6046  0017E2  0100               	movlb	0	; () banked
  6047  0017E4  6FFB               	movwf	??_full_drive& (0+255),b
  6048  0017E6  0E37               	movlw	55
  6049  0017E8                     u9157:
  6050  0017E8  2EE8               	decfsz	wreg,f,c
  6051  0017EA  D7FE               	bra	u9157
  6052  0017EC  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6053  0017EE  D7FC               	bra	u9157
  6054                           
  6055                           ;actuators_main.c: 454:             LATCbits.LATC5 = 1;
  6056  0017F0  8A8B               	bsf	3979,5,c	;volatile
  6057                           
  6058                           ;actuators_main.c: 455:             LATCbits.LATC6 = 1;
  6059  0017F2  8C8B               	bsf	3979,6,c	;volatile
  6060                           
  6061                           ;actuators_main.c: 456:             LATCbits.LATC7 = 0;
  6062  0017F4  9E8B               	bcf	3979,7,c	;volatile
  6063                           
  6064                           ;actuators_main.c: 457:             LATAbits.LATA5 = 0;
  6065  0017F6  9A89               	bcf	3977,5,c	;volatile
  6066                           
  6067                           ;actuators_main.c: 458:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6068  0017F8  0E1E               	movlw	30
  6069  0017FA  0100               	movlb	0	; () banked
  6070  0017FC  6FFB               	movwf	??_full_drive& (0+255),b
  6071  0017FE  0E37               	movlw	55
  6072  001800                     u9167:
  6073  001800  2EE8               	decfsz	wreg,f,c
  6074  001802  D7FE               	bra	u9167
  6075  001804  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6076  001806  D7FC               	bra	u9167
  6077                           
  6078                           ;actuators_main.c: 459:             LATCbits.LATC5 = 0;
  6079  001808  9A8B               	bcf	3979,5,c	;volatile
  6080                           
  6081                           ;actuators_main.c: 460:             LATCbits.LATC6 = 1;
  6082  00180A  8C8B               	bsf	3979,6,c	;volatile
  6083                           
  6084                           ;actuators_main.c: 461:             LATCbits.LATC7 = 1;
  6085  00180C  8E8B               	bsf	3979,7,c	;volatile
  6086                           
  6087                           ;actuators_main.c: 462:             LATAbits.LATA5 = 0;
  6088  00180E  9A89               	bcf	3977,5,c	;volatile
  6089                           
  6090                           ;actuators_main.c: 463:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6091  001810  0E1E               	movlw	30
  6092  001812  0100               	movlb	0	; () banked
  6093  001814  6FFB               	movwf	??_full_drive& (0+255),b
  6094  001816  0E37               	movlw	55
  6095  001818                     u9177:
  6096  001818  2EE8               	decfsz	wreg,f,c
  6097  00181A  D7FE               	bra	u9177
  6098  00181C  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6099  00181E  D7FC               	bra	u9177
  6100                           
  6101                           ;actuators_main.c: 464:             LATCbits.LATC5 = 0;
  6102  001820  9A8B               	bcf	3979,5,c	;volatile
  6103                           
  6104                           ;actuators_main.c: 465:             LATCbits.LATC6 = 0;
  6105  001822  9C8B               	bcf	3979,6,c	;volatile
  6106                           
  6107                           ;actuators_main.c: 466:             LATCbits.LATC7 = 1;
  6108  001824  8E8B               	bsf	3979,7,c	;volatile
  6109                           
  6110                           ;actuators_main.c: 467:             LATAbits.LATA5 = 1;
  6111  001826  8A89               	bsf	3977,5,c	;volatile
  6112                           
  6113                           ;actuators_main.c: 468:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6114  001828  0E1E               	movlw	30
  6115  00182A  0100               	movlb	0	; () banked
  6116  00182C  6FFB               	movwf	??_full_drive& (0+255),b
  6117  00182E  0E37               	movlw	55
  6118  001830                     u9187:
  6119  001830  2EE8               	decfsz	wreg,f,c
  6120  001832  D7FE               	bra	u9187
  6121  001834  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6122  001836  D7FC               	bra	u9187
  6123                           
  6124                           ;actuators_main.c: 469:             LATCbits.LATC5 = 1;
  6125  001838  8A8B               	bsf	3979,5,c	;volatile
  6126                           
  6127                           ;actuators_main.c: 470:             LATCbits.LATC6 = 0;
  6128  00183A  9C8B               	bcf	3979,6,c	;volatile
  6129                           
  6130                           ;actuators_main.c: 471:             LATCbits.LATC7 = 0;
  6131  00183C  9E8B               	bcf	3979,7,c	;volatile
  6132                           
  6133                           ;actuators_main.c: 472:             LATAbits.LATA5 = 1;
  6134  00183E  8A89               	bsf	3977,5,c	;volatile
  6135                           
  6136                           ;actuators_main.c: 473:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6137  001840  0E1E               	movlw	30
  6138  001842  0100               	movlb	0	; () banked
  6139  001844  6FFB               	movwf	??_full_drive& (0+255),b
  6140  001846  0E37               	movlw	55
  6141  001848                     u9197:
  6142  001848  2EE8               	decfsz	wreg,f,c
  6143  00184A  D7FE               	bra	u9197
  6144  00184C  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6145  00184E  D7FC               	bra	u9197
  6146  001850                     l6845:
  6147                           
  6148                           ;actuators_main.c: 475:         if (direction == 1){
  6149  001850  0100               	movlb	0	; () banked
  6150  001852  05FC               	decf	full_drive@direction& (0+255),w,b
  6151  001854  A4D8               	btfss	status,2,c
  6152  001856  D03C               	goto	l6883
  6153                           
  6154                           ; BSR set to: 0
  6155                           ;actuators_main.c: 476:             LATCbits.LATC5 = 1;
  6156  001858  8A8B               	bsf	3979,5,c	;volatile
  6157                           
  6158                           ;actuators_main.c: 477:             LATCbits.LATC6 = 1;
  6159  00185A  8C8B               	bsf	3979,6,c	;volatile
  6160                           
  6161                           ;actuators_main.c: 478:             LATCbits.LATC7 = 0;
  6162  00185C  9E8B               	bcf	3979,7,c	;volatile
  6163                           
  6164                           ;actuators_main.c: 479:             LATAbits.LATA5 = 0;
  6165  00185E  9A89               	bcf	3977,5,c	;volatile
  6166                           
  6167                           ; BSR set to: 0
  6168                           ;actuators_main.c: 480:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6169  001860  0E1E               	movlw	30
  6170  001862  0100               	movlb	0	; () banked
  6171  001864  6FFB               	movwf	??_full_drive& (0+255),b
  6172  001866  0E37               	movlw	55
  6173  001868                     u9207:
  6174  001868  2EE8               	decfsz	wreg,f,c
  6175  00186A  D7FE               	bra	u9207
  6176  00186C  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6177  00186E  D7FC               	bra	u9207
  6178                           
  6179                           ;actuators_main.c: 481:             LATCbits.LATC5 = 0;
  6180  001870  9A8B               	bcf	3979,5,c	;volatile
  6181                           
  6182                           ;actuators_main.c: 482:             LATCbits.LATC6 = 1;
  6183  001872  8C8B               	bsf	3979,6,c	;volatile
  6184                           
  6185                           ;actuators_main.c: 483:             LATCbits.LATC7 = 1;
  6186  001874  8E8B               	bsf	3979,7,c	;volatile
  6187                           
  6188                           ;actuators_main.c: 484:             LATAbits.LATA5 = 0;
  6189  001876  9A89               	bcf	3977,5,c	;volatile
  6190                           
  6191                           ;actuators_main.c: 485:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6192  001878  0E1E               	movlw	30
  6193  00187A  0100               	movlb	0	; () banked
  6194  00187C  6FFB               	movwf	??_full_drive& (0+255),b
  6195  00187E  0E37               	movlw	55
  6196  001880                     u9217:
  6197  001880  2EE8               	decfsz	wreg,f,c
  6198  001882  D7FE               	bra	u9217
  6199  001884  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6200  001886  D7FC               	bra	u9217
  6201                           
  6202                           ;actuators_main.c: 486:             LATCbits.LATC5 = 0;
  6203  001888  9A8B               	bcf	3979,5,c	;volatile
  6204                           
  6205                           ;actuators_main.c: 487:             LATCbits.LATC6 = 0;
  6206  00188A  9C8B               	bcf	3979,6,c	;volatile
  6207                           
  6208                           ;actuators_main.c: 488:             LATCbits.LATC7 = 1;
  6209  00188C  8E8B               	bsf	3979,7,c	;volatile
  6210                           
  6211                           ;actuators_main.c: 489:             LATAbits.LATA5 = 1;
  6212  00188E  8A89               	bsf	3977,5,c	;volatile
  6213                           
  6214                           ;actuators_main.c: 490:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6215  001890  0E1E               	movlw	30
  6216  001892  0100               	movlb	0	; () banked
  6217  001894  6FFB               	movwf	??_full_drive& (0+255),b
  6218  001896  0E37               	movlw	55
  6219  001898                     u9227:
  6220  001898  2EE8               	decfsz	wreg,f,c
  6221  00189A  D7FE               	bra	u9227
  6222  00189C  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6223  00189E  D7FC               	bra	u9227
  6224                           
  6225                           ;actuators_main.c: 491:             LATCbits.LATC5 = 1;
  6226  0018A0  8A8B               	bsf	3979,5,c	;volatile
  6227                           
  6228                           ;actuators_main.c: 492:             LATCbits.LATC6 = 0;
  6229  0018A2  9C8B               	bcf	3979,6,c	;volatile
  6230                           
  6231                           ;actuators_main.c: 493:             LATCbits.LATC7 = 0;
  6232  0018A4  9E8B               	bcf	3979,7,c	;volatile
  6233                           
  6234                           ;actuators_main.c: 494:             LATAbits.LATA5 = 1;
  6235  0018A6  8A89               	bsf	3977,5,c	;volatile
  6236                           
  6237                           ;actuators_main.c: 495:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6238  0018A8  0E1E               	movlw	30
  6239  0018AA  0100               	movlb	0	; () banked
  6240  0018AC  6FFB               	movwf	??_full_drive& (0+255),b
  6241  0018AE  0E37               	movlw	55
  6242  0018B0                     u9237:
  6243  0018B0  2EE8               	decfsz	wreg,f,c
  6244  0018B2  D7FE               	bra	u9237
  6245  0018B4  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6246  0018B6  D7FC               	bra	u9237
  6247                           
  6248                           ;actuators_main.c: 496:             LATCbits.LATC5 = 1;
  6249  0018B8  8A8B               	bsf	3979,5,c	;volatile
  6250                           
  6251                           ;actuators_main.c: 497:             LATCbits.LATC6 = 1;
  6252  0018BA  8C8B               	bsf	3979,6,c	;volatile
  6253                           
  6254                           ;actuators_main.c: 498:             LATCbits.LATC7 = 0;
  6255  0018BC  9E8B               	bcf	3979,7,c	;volatile
  6256                           
  6257                           ;actuators_main.c: 499:             LATAbits.LATA5 = 0;
  6258  0018BE  9A89               	bcf	3977,5,c	;volatile
  6259                           
  6260                           ;actuators_main.c: 500:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6261  0018C0  0E1E               	movlw	30
  6262  0018C2  0100               	movlb	0	; () banked
  6263  0018C4  6FFB               	movwf	??_full_drive& (0+255),b
  6264  0018C6  0E37               	movlw	55
  6265  0018C8                     u9247:
  6266  0018C8  2EE8               	decfsz	wreg,f,c
  6267  0018CA  D7FE               	bra	u9247
  6268  0018CC  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6269  0018CE  D7FC               	bra	u9247
  6270  0018D0                     l6883:
  6271                           
  6272                           ;actuators_main.c: 503:                     LATA = 0b00000000;
  6273  0018D0  0E00               	movlw	0
  6274  0018D2  6E89               	movwf	3977,c	;volatile
  6275                           
  6276                           ;actuators_main.c: 504:         LATCbits.LATC0 = 0;
  6277  0018D4  908B               	bcf	3979,0,c	;volatile
  6278                           
  6279                           ;actuators_main.c: 505:         LATEbits.LATE0 = 0;
  6280  0018D6  908D               	bcf	3981,0,c	;volatile
  6281                           
  6282                           ;actuators_main.c: 506:         LATEbits.LATE1 = 0;
  6283  0018D8  928D               	bcf	3981,1,c	;volatile
  6284                           
  6285                           ;actuators_main.c: 507:         LATEbits.LATE2 = 0;
  6286  0018DA  948D               	bcf	3981,2,c	;volatile
  6287                           
  6288                           ;actuators_main.c: 508:         LATCbits.LATC5 = 0;
  6289  0018DC  9A8B               	bcf	3979,5,c	;volatile
  6290                           
  6291                           ;actuators_main.c: 509:         LATCbits.LATC6 = 0;
  6292  0018DE  9C8B               	bcf	3979,6,c	;volatile
  6293                           
  6294                           ;actuators_main.c: 510:         LATCbits.LATC7 = 0;
  6295  0018E0  9E8B               	bcf	3979,7,c	;volatile
  6296                           
  6297                           ;actuators_main.c: 511:         LATAbits.LATA5 = 0;
  6298  0018E2  9A89               	bcf	3977,5,c	;volatile
  6299  0018E4  0012               	return		;funcret
  6300  0018E6                     __end_of_full_drive:
  6301                           	opt callstack 0
  6302                           
  6303 ;; *************** function _servo *****************
  6304 ;; Defined at:
  6305 ;;		line 165 in file "actuators_main.c"
  6306 ;; Parameters:    Size  Location     Type
  6307 ;;		None
  6308 ;; Auto vars:     Size  Location     Type
  6309 ;;		None
  6310 ;; Return value:  Size  Location     Type
  6311 ;;                  1    wreg      void 
  6312 ;; Registers used:
  6313 ;;		wreg, status,2, status,0, cstack
  6314 ;; Tracked objects:
  6315 ;;		On entry : 0/0
  6316 ;;		On exit  : 0/0
  6317 ;;		Unchanged: 0/0
  6318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6321 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6322 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6323 ;;Total ram usage:        2 bytes
  6324 ;; Hardware stack levels used:    1
  6325 ;; Hardware stack levels required when called:    4
  6326 ;; This function calls:
  6327 ;;		_servoRotate0
  6328 ;;		_servoRotate180
  6329 ;; This function is called by:
  6330 ;;		_actuators_main
  6331 ;; This function uses a non-reentrant model
  6332 ;;
  6333                           
  6334                           	psect	text17
  6335  00399E                     __ptext17:
  6336                           	opt callstack 0
  6337  00399E                     _servo:
  6338                           	opt callstack 25
  6339                           
  6340                           ;actuators_main.c: 167:   TRISC = 0;
  6341                           
  6342                           ;incstack = 0
  6343  00399E  0E00               	movlw	0
  6344  0039A0  6E94               	movwf	3988,c	;volatile
  6345                           
  6346                           ;actuators_main.c: 168:   {;actuators_main.c: 170:     servoRotate0();
  6347  0039A2  EC5D  F01B         	call	_servoRotate0	;wreg free
  6348                           
  6349                           ;actuators_main.c: 174:     servoRotate180();
  6350  0039A6  ECDE  F01A         	call	_servoRotate180	;wreg free
  6351                           
  6352                           ;actuators_main.c: 176:     _delay((unsigned long)((500)*(10000000/4000.0)));
  6353  0039AA  0E07               	movlw	7
  6354  0039AC  0100               	movlb	0	; () banked
  6355  0039AE  6F84               	movwf	(??_servo+1)& (0+255),b
  6356  0039B0  0E58               	movlw	88
  6357  0039B2  6F83               	movwf	??_servo& (0+255),b
  6358  0039B4  0E59               	movlw	89
  6359  0039B6                     u9257:
  6360  0039B6  2EE8               	decfsz	wreg,f,c
  6361  0039B8  D7FE               	bra	u9257
  6362  0039BA  2F83               	decfsz	??_servo& (0+255),f,b
  6363  0039BC  D7FC               	bra	u9257
  6364  0039BE  2F84               	decfsz	(??_servo+1)& (0+255),f,b
  6365  0039C0  D7FA               	bra	u9257
  6366  0039C2  D000               	nop2	
  6367                           
  6368                           ;actuators_main.c: 177:     servoRotate0();
  6369  0039C4  EC5D  F01B         	call	_servoRotate0	;wreg free
  6370  0039C8  0012               	return		;funcret
  6371  0039CA                     __end_of_servo:
  6372                           	opt callstack 0
  6373                           
  6374 ;; *************** function _servoRotate180 *****************
  6375 ;; Defined at:
  6376 ;;		line 136 in file "actuators_main.c"
  6377 ;; Parameters:    Size  Location     Type
  6378 ;;		None
  6379 ;; Auto vars:     Size  Location     Type
  6380 ;;  i               2    1[BANK0 ] unsigned int 
  6381 ;; Return value:  Size  Location     Type
  6382 ;;                  1    wreg      void 
  6383 ;; Registers used:
  6384 ;;		wreg, status,2, status,0
  6385 ;; Tracked objects:
  6386 ;;		On entry : 0/0
  6387 ;;		On exit  : 0/0
  6388 ;;		Unchanged: 0/0
  6389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6391 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6392 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6393 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6394 ;;Total ram usage:        3 bytes
  6395 ;; Hardware stack levels used:    1
  6396 ;; Hardware stack levels required when called:    3
  6397 ;; This function calls:
  6398 ;;		Nothing
  6399 ;; This function is called by:
  6400 ;;		_servo
  6401 ;; This function uses a non-reentrant model
  6402 ;;
  6403                           
  6404                           	psect	text18
  6405  0035BC                     __ptext18:
  6406                           	opt callstack 0
  6407  0035BC                     _servoRotate180:
  6408                           	opt callstack 25
  6409                           
  6410                           ;actuators_main.c: 138:   unsigned int i;;actuators_main.c: 141: for(i=0;i<15;i++){
  6411                           
  6412                           ;incstack = 0
  6413  0035BC  0E00               	movlw	0
  6414  0035BE  0100               	movlb	0	; () banked
  6415  0035C0  6F82               	movwf	(servoRotate180@i+1)& (0+255),b
  6416  0035C2  0E00               	movlw	0
  6417  0035C4  6F81               	movwf	servoRotate180@i& (0+255),b
  6418  0035C6                     l117:
  6419                           
  6420                           ; BSR set to: 0
  6421                           ;actuators_main.c: 143:         {;actuators_main.c: 144:           RC1 = 1;
  6422  0035C6  8282               	bsf	3970,1,c	;volatile
  6423                           
  6424                           ;actuators_main.c: 145:           RC2 = 1;
  6425  0035C8  8482               	bsf	3970,2,c	;volatile
  6426                           
  6427                           ; BSR set to: 0
  6428                           ;actuators_main.c: 147:           _delay((unsigned long)((475)*(10000000/4000000.0)));
  6429  0035CA  0EED               	movlw	237
  6430  0035CC                     u9267:
  6431  0035CC  D000               	nop2	
  6432  0035CE  2EE8               	decfsz	wreg,f,c
  6433  0035D0  D7FD               	bra	u9267
  6434  0035D2  D000               	nop2	
  6435                           
  6436                           ;actuators_main.c: 148:           RC2 =0;
  6437  0035D4  9482               	bcf	3970,2,c	;volatile
  6438                           
  6439                           ;actuators_main.c: 149:           _delay((unsigned long)((2100)*(10000000/4000000.0)));
  6440  0035D6  0E07               	movlw	7
  6441  0035D8  0100               	movlb	0	; () banked
  6442  0035DA  6F80               	movwf	??_servoRotate180& (0+255),b
  6443  0035DC  0ED0               	movlw	208
  6444  0035DE                     u9277:
  6445  0035DE  2EE8               	decfsz	wreg,f,c
  6446  0035E0  D7FE               	bra	u9277
  6447  0035E2  2F80               	decfsz	??_servoRotate180& (0+255),f,b
  6448  0035E4  D7FC               	bra	u9277
  6449  0035E6  F000               	nop	
  6450                           
  6451                           ;actuators_main.c: 150:           RC1 = 0;
  6452  0035E8  9282               	bcf	3970,1,c	;volatile
  6453                           
  6454                           ;actuators_main.c: 151:           _delay((unsigned long)((13525)*(10000000/4000000.0)));
  6455  0035EA  0E2C               	movlw	44
  6456  0035EC  0100               	movlb	0	; () banked
  6457  0035EE  6F80               	movwf	??_servoRotate180& (0+255),b
  6458  0035F0  0EE8               	movlw	232
  6459  0035F2                     u9287:
  6460  0035F2  2EE8               	decfsz	wreg,f,c
  6461  0035F4  D7FE               	bra	u9287
  6462  0035F6  2F80               	decfsz	??_servoRotate180& (0+255),f,b
  6463  0035F8  D7FC               	bra	u9287
  6464  0035FA  F000               	nop	
  6465                           
  6466                           ;actuators_main.c: 152:         };actuators_main.c: 163: }
  6467  0035FC  0100               	movlb	0	; () banked
  6468  0035FE  4B81               	infsnz	servoRotate180@i& (0+255),f,b
  6469  003600  2B82               	incf	(servoRotate180@i+1)& (0+255),f,b
  6470  003602  5182               	movf	(servoRotate180@i+1)& (0+255),w,b
  6471  003604  E105               	bnz	u7290
  6472  003606  0E0F               	movlw	15
  6473  003608  5D81               	subwf	servoRotate180@i& (0+255),w,b
  6474  00360A  B0D8               	btfsc	status,0,c
  6475  00360C  0012               	return	
  6476  00360E  D7DB               	goto	l117
  6477  003610                     u7290:
  6478                           
  6479                           ; BSR set to: 0
  6480  003610  0012               	return		;funcret
  6481  003612                     __end_of_servoRotate180:
  6482                           	opt callstack 0
  6483                           
  6484 ;; *************** function _servoRotate0 *****************
  6485 ;; Defined at:
  6486 ;;		line 97 in file "actuators_main.c"
  6487 ;; Parameters:    Size  Location     Type
  6488 ;;		None
  6489 ;; Auto vars:     Size  Location     Type
  6490 ;;  i               2    1[BANK0 ] unsigned int 
  6491 ;; Return value:  Size  Location     Type
  6492 ;;                  1    wreg      void 
  6493 ;; Registers used:
  6494 ;;		wreg, status,2, status,0
  6495 ;; Tracked objects:
  6496 ;;		On entry : 0/0
  6497 ;;		On exit  : 0/0
  6498 ;;		Unchanged: 0/0
  6499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6501 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6502 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6503 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6504 ;;Total ram usage:        3 bytes
  6505 ;; Hardware stack levels used:    1
  6506 ;; Hardware stack levels required when called:    3
  6507 ;; This function calls:
  6508 ;;		Nothing
  6509 ;; This function is called by:
  6510 ;;		_servo
  6511 ;; This function uses a non-reentrant model
  6512 ;;
  6513                           
  6514                           	psect	text19
  6515  0036BA                     __ptext19:
  6516                           	opt callstack 0
  6517  0036BA                     _servoRotate0:
  6518                           	opt callstack 25
  6519                           
  6520                           ;actuators_main.c: 99:     unsigned int i;;actuators_main.c: 102:       for(i=0;i<15;i++
      +                          )
  6521                           
  6522                           ; BSR set to: 0
  6523                           ;incstack = 0
  6524  0036BA  0E00               	movlw	0
  6525  0036BC  0100               	movlb	0	; () banked
  6526  0036BE  6F82               	movwf	(servoRotate0@i+1)& (0+255),b
  6527  0036C0  0E00               	movlw	0
  6528  0036C2  6F81               	movwf	servoRotate0@i& (0+255),b
  6529  0036C4                     l112:
  6530                           
  6531                           ; BSR set to: 0
  6532                           ;actuators_main.c: 103:           {;actuators_main.c: 105:             RC1 = 1;
  6533  0036C4  8282               	bsf	3970,1,c	;volatile
  6534                           
  6535                           ;actuators_main.c: 106:             RC2 = 1;
  6536  0036C6  8482               	bsf	3970,2,c	;volatile
  6537                           
  6538                           ; BSR set to: 0
  6539                           ;actuators_main.c: 107:             _delay((unsigned long)((1100)*(10000000/4000000.0)))
      +                          ;
  6540  0036C8  0E04               	movlw	4
  6541  0036CA  0100               	movlb	0	; () banked
  6542  0036CC  6F80               	movwf	??_servoRotate0& (0+255),b
  6543  0036CE  0E91               	movlw	145
  6544  0036D0                     u9297:
  6545  0036D0  2EE8               	decfsz	wreg,f,c
  6546  0036D2  D7FE               	bra	u9297
  6547  0036D4  2F80               	decfsz	??_servoRotate0& (0+255),f,b
  6548  0036D6  D7FC               	bra	u9297
  6549                           
  6550                           ;actuators_main.c: 108:             RC2 = 0;
  6551  0036D8  9482               	bcf	3970,2,c	;volatile
  6552                           
  6553                           ;actuators_main.c: 109:             _delay((unsigned long)((300)*(10000000/4000000.0)));
  6554  0036DA  0EFA               	movlw	250
  6555  0036DC                     u9307:
  6556  0036DC  2EE8               	decfsz	wreg,f,c
  6557  0036DE  D7FE               	bra	u9307
  6558                           
  6559                           ;actuators_main.c: 110:             RC1 = 0;
  6560  0036E0  9282               	bcf	3970,1,c	;volatile
  6561                           
  6562                           ;actuators_main.c: 114:             _delay((unsigned long)((18600)*(10000000/4000000.0))
      +                          );
  6563  0036E2  0E3D               	movlw	61
  6564  0036E4  0100               	movlb	0	; () banked
  6565  0036E6  6F80               	movwf	??_servoRotate0& (0+255),b
  6566  0036E8  0E62               	movlw	98
  6567  0036EA                     u9317:
  6568  0036EA  2EE8               	decfsz	wreg,f,c
  6569  0036EC  D7FE               	bra	u9317
  6570  0036EE  2F80               	decfsz	??_servoRotate0& (0+255),f,b
  6571  0036F0  D7FC               	bra	u9317
  6572  0036F2  F000               	nop	
  6573                           
  6574                           ;actuators_main.c: 124:           }
  6575  0036F4  0100               	movlb	0	; () banked
  6576  0036F6  4B81               	infsnz	servoRotate0@i& (0+255),f,b
  6577  0036F8  2B82               	incf	(servoRotate0@i+1)& (0+255),f,b
  6578  0036FA  5182               	movf	(servoRotate0@i+1)& (0+255),w,b
  6579  0036FC  E105               	bnz	u7280
  6580  0036FE  0E0F               	movlw	15
  6581  003700  5D81               	subwf	servoRotate0@i& (0+255),w,b
  6582  003702  B0D8               	btfsc	status,0,c
  6583  003704  0012               	return	
  6584  003706  D7DE               	goto	l112
  6585  003708                     u7280:
  6586                           
  6587                           ; BSR set to: 0
  6588  003708  0012               	return		;funcret
  6589  00370A                     __end_of_servoRotate0:
  6590                           	opt callstack 0
  6591                           
  6592 ;; *************** function _UI_main *****************
  6593 ;; Defined at:
  6594 ;;		line 472 in file "main.c"
  6595 ;; Parameters:    Size  Location     Type
  6596 ;;  t_dep           2  121[BANK0 ] int 
  6597 ;;  poles_detect    2  123[BANK0 ] int 
  6598 ;; Auto vars:     Size  Location     Type
  6599 ;;  i               1   89[BANK1 ] unsigned char 
  6600 ;;  keypress        1   84[BANK1 ] unsigned char 
  6601 ;;  Pole           80    4[BANK1 ] struct Poles[10]
  6602 ;;  tick            4   85[BANK1 ] unsigned long 
  6603 ;; Return value:  Size  Location     Type
  6604 ;;                  1    wreg      void 
  6605 ;; Registers used:
  6606 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6607 ;; Tracked objects:
  6608 ;;		On entry : 0/0
  6609 ;;		On exit  : 0/0
  6610 ;;		Unchanged: 0/0
  6611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6612 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6613 ;;      Locals:         0       0      86       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6614 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6615 ;;      Totals:         0       4      90       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6616 ;;Total ram usage:       94 bytes
  6617 ;; Hardware stack levels used:    1
  6618 ;; Hardware stack levels required when called:   14
  6619 ;; This function calls:
  6620 ;;		_I2C_Master_Init
  6621 ;;		_I2C_Master_Read
  6622 ;;		_I2C_Master_Start
  6623 ;;		_I2C_Master_Stop
  6624 ;;		_I2C_Master_Write
  6625 ;;		___llmod
  6626 ;;		_initLCD
  6627 ;;		_lcdInst
  6628 ;;		_printf
  6629 ;; This function is called by:
  6630 ;;		_main
  6631 ;; This function uses a non-reentrant model
  6632 ;;
  6633                           
  6634                           	psect	text20
  6635  000012                     __ptext20:
  6636                           	opt callstack 0
  6637  000012                     _UI_main:
  6638                           	opt callstack 16
  6639                           
  6640                           ;main.c: 473:     sens = 0;
  6641                           
  6642                           ; BSR set to: 0
  6643                           ;incstack = 0
  6644  000012  0E00               	movlw	0
  6645  000014  6E59               	movwf	_sens+1,c	;volatile
  6646  000016  0E00               	movlw	0
  6647  000018  6E58               	movwf	_sens,c	;volatile
  6648                           
  6649                           ;main.c: 478:     LATD = 0x00;
  6650  00001A  0E00               	movlw	0
  6651  00001C  6E8C               	movwf	3980,c	;volatile
  6652                           
  6653                           ;main.c: 479:     TRISD = 0x00;
  6654  00001E  0E00               	movlw	0
  6655  000020  6E95               	movwf	3989,c	;volatile
  6656                           
  6657                           ;main.c: 482:     TRISD = 0x00;
  6658  000022  0E00               	movlw	0
  6659  000024  6E95               	movwf	3989,c	;volatile
  6660                           
  6661                           ;main.c: 485:     INT1IE = 1;
  6662  000026  86F0               	bsf	4080,3,c	;volatile
  6663                           
  6664                           ;main.c: 488:     initLCD();
  6665  000028  ECE0  F019         	call	_initLCD	;wreg free
  6666                           
  6667                           ;main.c: 491:     (INTCONbits.GIE = 1);
  6668  00002C  8EF2               	bsf	4082,7,c	;volatile
  6669                           
  6670                           ;main.c: 493:     I2C_Master_Init(100000);
  6671  00002E  0EA0               	movlw	160
  6672  000030  0100               	movlb	0	; () banked
  6673  000032  6F8D               	movwf	I2C_Master_Init@clockFreq& (0+255),b
  6674  000034  0E86               	movlw	134
  6675  000036  6F8E               	movwf	(I2C_Master_Init@clockFreq+1)& (0+255),b
  6676  000038  0E01               	movlw	1
  6677  00003A  6F8F               	movwf	(I2C_Master_Init@clockFreq+2)& (0+255),b
  6678  00003C  0E00               	movlw	0
  6679  00003E  6F90               	movwf	(I2C_Master_Init@clockFreq+3)& (0+255),b
  6680  000040  EC83  F01A         	call	_I2C_Master_Init	;wreg free
  6681                           
  6682                           ;main.c: 494:     I2C_Master_Start();
  6683  000044  EC84  F01D         	call	_I2C_Master_Start	;wreg free
  6684                           
  6685                           ;main.c: 495:     I2C_Master_Write(0b00010000);
  6686  000048  0E00               	movlw	0
  6687  00004A  0100               	movlb	0	; () banked
  6688  00004C  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  6689  00004E  0E10               	movlw	16
  6690  000050  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  6691  000052  EC7B  F01D         	call	_I2C_Master_Write	;wreg free
  6692                           
  6693                           ;main.c: 496:     I2C_Master_Stop();
  6694  000056  EC80  F01D         	call	_I2C_Master_Stop	;wreg free
  6695                           
  6696                           ;main.c: 506:     if((pressed == 0)&&(sens==0)){
  6697  00005A  0101               	movlb	1	; () banked
  6698  00005C  515C               	movf	_pressed& (0+255),w,b
  6699  00005E  115D               	iorwf	(_pressed+1)& (0+255),w,b
  6700  000060  A4D8               	btfss	status,2,c
  6701  000062  D3DC               	goto	u8450
  6702                           
  6703                           ; BSR set to: 1
  6704  000064  5058               	movf	_sens,w,c	;volatile
  6705  000066  1059               	iorwf	_sens+1,w,c	;volatile
  6706  000068  A4D8               	btfss	status,2,c
  6707  00006A  D3D8               	goto	u8450
  6708                           
  6709                           ; BSR set to: 1
  6710                           ;main.c: 507:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  6711  00006C  0E01               	movlw	1
  6712  00006E  EC73  F01D         	call	_lcdInst
  6713  000072  0E11               	movlw	17
  6714  000074  0101               	movlb	1	; () banked
  6715  000076  6F00               	movwf	??_UI_main& (0+255),b
  6716  000078  0E3A               	movlw	58
  6717  00007A                     u9327:
  6718  00007A  2EE8               	decfsz	wreg,f,c
  6719  00007C  D7FE               	bra	u9327
  6720  00007E  2F00               	decfsz	??_UI_main& (0+255),f,b
  6721  000080  D7FC               	bra	u9327
  6722  000082  F000               	nop	
  6723                           
  6724                           ;main.c: 508:         printf("1 - Start");
  6725  000084  0EFD               	movlw	low STR_22
  6726  000086  0100               	movlb	0	; () banked
  6727  000088  6FED               	movwf	printf@fmt& (0+255),b
  6728  00008A  0EFC               	movlw	high STR_22
  6729  00008C  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6730  00008E  ECFA  F01C         	call	_printf	;wreg free
  6731  000092  0EC0               	movlw	192
  6732  000094  EC73  F01D         	call	_lcdInst
  6733                           
  6734                           ;main.c: 510:         printf("2 - Summary");
  6735  000098  0E89               	movlw	low STR_23
  6736  00009A  0100               	movlb	0	; () banked
  6737  00009C  6FED               	movwf	printf@fmt& (0+255),b
  6738  00009E  0EFC               	movlw	high STR_23
  6739  0000A0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6740  0000A2  ECFA  F01C         	call	_printf	;wreg free
  6741  0000A6  0E90               	movlw	144
  6742  0000A8  EC73  F01D         	call	_lcdInst
  6743                           
  6744                           ;main.c: 512:         printf("3 - Date&Time ");
  6745  0000AC  0ECA               	movlw	low STR_24
  6746  0000AE  0100               	movlb	0	; () banked
  6747  0000B0  6FED               	movwf	printf@fmt& (0+255),b
  6748  0000B2  0EFB               	movlw	high STR_24
  6749  0000B4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6750  0000B6  ECFA  F01C         	call	_printf	;wreg free
  6751  0000BA  D3B0               	goto	u8450
  6752  0000BC                     l7573:
  6753                           
  6754                           ;main.c: 523:         if (send){
  6755  0000BC  506D               	movf	_send,w,c
  6756  0000BE  B4D8               	btfsc	status,2,c
  6757  0000C0  D3AD               	goto	u8450
  6758                           
  6759                           ;main.c: 524:         if(key_was_pressed){
  6760  0000C2  0101               	movlb	1	; () banked
  6761  0000C4  5168               	movf	_key_was_pressed& (0+255),w,b	;volatile
  6762  0000C6  B4D8               	btfsc	status,2,c
  6763  0000C8  D3A9               	goto	u8450
  6764                           
  6765                           ; BSR set to: 1
  6766                           ;main.c: 525:             pressed = 1;
  6767  0000CA  0E00               	movlw	0
  6768  0000CC  6F5D               	movwf	(_pressed+1)& (0+255),b
  6769  0000CE  0E01               	movlw	1
  6770  0000D0  6F5C               	movwf	_pressed& (0+255),b
  6771                           
  6772                           ;main.c: 526:             key_was_pressed = 0;
  6773  0000D2  0E00               	movlw	0
  6774  0000D4  6F68               	movwf	_key_was_pressed& (0+255),b	;volatile
  6775                           
  6776                           ; BSR set to: 1
  6777                           ;main.c: 527:             unsigned char keypress = (PORTB & 0xF0) >> 4;
  6778  0000D6  3881               	swapf	3969,w,c	;volatile
  6779  0000D8  0B0F               	andlw	15
  6780  0000DA  0B0F               	andlw	15
  6781  0000DC  6F54               	movwf	UI_main@keypress& (0+255),b
  6782                           
  6783                           ; BSR set to: 1
  6784                           ;main.c: 528:             temp = keys[keypress];
  6785  0000DE  0E0B               	movlw	low _keys
  6786  0000E0  2554               	addwf	UI_main@keypress& (0+255),w,b
  6787  0000E2  6EF6               	movwf	tblptrl,c
  6788  0000E4  6AF7               	clrf	tblptrh,c
  6789  0000E6  0EFB               	movlw	high _keys
  6790  0000E8  22F7               	addwfc	tblptrh,f,c
  6791  0000EA                     	if	0	;There are less than 3 active tblptr bytes
  6792  0000EA                     	endif
  6793  0000EA  0008               	tblrd		*
  6794  0000EC  CFF5 F0FF          	movff	tablat,_temp
  6795                           
  6796                           ; BSR set to: 1
  6797                           ;main.c: 529:             temp_int = (temp-'0');
  6798  0000F0  0ED0               	movlw	208
  6799  0000F2  0100               	movlb	0	; () banked
  6800  0000F4  25FF               	addwf	_temp& (0+255),w,b
  6801  0000F6  0101               	movlb	1	; () banked
  6802  0000F8  6F64               	movwf	_temp_int& (0+255),b
  6803  0000FA  6B65               	clrf	(_temp_int+1)& (0+255),b
  6804  0000FC  0EFF               	movlw	255
  6805  0000FE  2365               	addwfc	(_temp_int+1)& (0+255),f,b
  6806                           
  6807                           ; BSR set to: 1
  6808                           ;main.c: 531:             if (temp_int == 0){
  6809  000100  5164               	movf	_temp_int& (0+255),w,b
  6810  000102  1165               	iorwf	(_temp_int+1)& (0+255),w,b
  6811  000104  A4D8               	btfss	status,2,c
  6812  000106  D02B               	goto	l7603
  6813                           
  6814                           ; BSR set to: 1
  6815                           ;main.c: 532:                 state = 0;
  6816  000108  0E00               	movlw	0
  6817  00010A  6F63               	movwf	(_state+1)& (0+255),b
  6818  00010C  0E00               	movlw	0
  6819  00010E  6F62               	movwf	_state& (0+255),b
  6820                           
  6821                           ; BSR set to: 1
  6822                           ;main.c: 533:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  6823  000110  0E01               	movlw	1
  6824  000112  EC73  F01D         	call	_lcdInst
  6825  000116  0E11               	movlw	17
  6826  000118  0101               	movlb	1	; () banked
  6827  00011A  6F00               	movwf	??_UI_main& (0+255),b
  6828  00011C  0E3A               	movlw	58
  6829  00011E                     u9337:
  6830  00011E  2EE8               	decfsz	wreg,f,c
  6831  000120  D7FE               	bra	u9337
  6832  000122  2F00               	decfsz	??_UI_main& (0+255),f,b
  6833  000124  D7FC               	bra	u9337
  6834  000126  F000               	nop	
  6835                           
  6836                           ;main.c: 534:                 printf("1 - Start");
  6837  000128  0EFD               	movlw	low STR_22
  6838  00012A  0100               	movlb	0	; () banked
  6839  00012C  6FED               	movwf	printf@fmt& (0+255),b
  6840  00012E  0EFC               	movlw	high STR_22
  6841  000130  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6842  000132  ECFA  F01C         	call	_printf	;wreg free
  6843  000136  0EC0               	movlw	192
  6844  000138  EC73  F01D         	call	_lcdInst
  6845                           
  6846                           ;main.c: 536:                 printf("2 - Summary");
  6847  00013C  0E89               	movlw	low STR_23
  6848  00013E  0100               	movlb	0	; () banked
  6849  000140  6FED               	movwf	printf@fmt& (0+255),b
  6850  000142  0EFC               	movlw	high STR_23
  6851  000144  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6852  000146  ECFA  F01C         	call	_printf	;wreg free
  6853  00014A  0E90               	movlw	144
  6854  00014C  EC73  F01D         	call	_lcdInst
  6855                           
  6856                           ;main.c: 538:                 printf("3 - Date&Time ");
  6857  000150  0ECA               	movlw	low STR_24
  6858  000152  0100               	movlb	0	; () banked
  6859  000154  6FED               	movwf	printf@fmt& (0+255),b
  6860  000156  0EFB               	movlw	high STR_24
  6861  000158  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6862  00015A  ECFA  F01C         	call	_printf	;wreg free
  6863  00015E                     l7603:
  6864                           
  6865                           ;main.c: 541:             if ((temp_int == 1)&&(temp!= '*')&&(temp!= '#')){
  6866  00015E  0101               	movlb	1	; () banked
  6867  000160  0564               	decf	_temp_int& (0+255),w,b
  6868  000162  1165               	iorwf	(_temp_int+1)& (0+255),w,b
  6869  000164  A4D8               	btfss	status,2,c
  6870  000166  D041               	goto	l7631
  6871                           
  6872                           ; BSR set to: 1
  6873  000168  0E2A               	movlw	42
  6874  00016A  0100               	movlb	0	; () banked
  6875  00016C  19FF               	xorwf	_temp& (0+255),w,b
  6876  00016E  B4D8               	btfsc	status,2,c
  6877  000170  D03C               	goto	l7631
  6878                           
  6879                           ; BSR set to: 0
  6880  000172  0E23               	movlw	35
  6881  000174  19FF               	xorwf	_temp& (0+255),w,b
  6882  000176  B4D8               	btfsc	status,2,c
  6883  000178  D038               	goto	l7631
  6884                           
  6885                           ; BSR set to: 0
  6886                           ;main.c: 542:                 state = 0;
  6887  00017A  0E00               	movlw	0
  6888  00017C  0101               	movlb	1	; () banked
  6889  00017E  6F63               	movwf	(_state+1)& (0+255),b
  6890  000180  0E00               	movlw	0
  6891  000182  6F62               	movwf	_state& (0+255),b
  6892                           
  6893                           ; BSR set to: 1
  6894                           ;main.c: 543:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  6895  000184  0E01               	movlw	1
  6896  000186  EC73  F01D         	call	_lcdInst
  6897  00018A  0E11               	movlw	17
  6898  00018C  0101               	movlb	1	; () banked
  6899  00018E  6F00               	movwf	??_UI_main& (0+255),b
  6900  000190  0E3A               	movlw	58
  6901  000192                     u9347:
  6902  000192  2EE8               	decfsz	wreg,f,c
  6903  000194  D7FE               	bra	u9347
  6904  000196  2F00               	decfsz	??_UI_main& (0+255),f,b
  6905  000198  D7FC               	bra	u9347
  6906  00019A  F000               	nop	
  6907                           
  6908                           ;main.c: 544:                 printf("Machine In Use");
  6909  00019C  0EE8               	movlw	low STR_28
  6910  00019E  0100               	movlb	0	; () banked
  6911  0001A0  6FED               	movwf	printf@fmt& (0+255),b
  6912  0001A2  0EFB               	movlw	high STR_28
  6913  0001A4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6914  0001A6  ECFA  F01C         	call	_printf	;wreg free
  6915  0001AA  0ED0               	movlw	208
  6916  0001AC  EC73  F01D         	call	_lcdInst
  6917                           
  6918                           ;main.c: 546:                 printf("     0-Menu     ");
  6919  0001B0  0E34               	movlw	low STR_29
  6920  0001B2  0100               	movlb	0	; () banked
  6921  0001B4  6FED               	movwf	printf@fmt& (0+255),b
  6922  0001B6  0EFB               	movlw	high STR_29
  6923  0001B8  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6924  0001BA  ECFA  F01C         	call	_printf	;wreg free
  6925                           
  6926                           ;main.c: 550:                 I2C_Master_Start();
  6927  0001BE  EC84  F01D         	call	_I2C_Master_Start	;wreg free
  6928                           
  6929                           ;main.c: 551:                 I2C_Master_Write(0b00010000);
  6930  0001C2  0E00               	movlw	0
  6931  0001C4  0100               	movlb	0	; () banked
  6932  0001C6  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  6933  0001C8  0E10               	movlw	16
  6934  0001CA  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  6935  0001CC  EC7B  F01D         	call	_I2C_Master_Write	;wreg free
  6936                           
  6937                           ;main.c: 552:                 I2C_Master_Write('1');
  6938  0001D0  0E00               	movlw	0
  6939  0001D2  0100               	movlb	0	; () banked
  6940  0001D4  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  6941  0001D6  0E31               	movlw	49
  6942  0001D8  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  6943  0001DA  EC7B  F01D         	call	_I2C_Master_Write	;wreg free
  6944                           
  6945                           ;main.c: 553:                 I2C_Master_Stop();
  6946  0001DE  EC80  F01D         	call	_I2C_Master_Stop	;wreg free
  6947                           
  6948                           ;main.c: 555:                 sens = 1;
  6949  0001E2  0E00               	movlw	0
  6950  0001E4  6E59               	movwf	_sens+1,c	;volatile
  6951  0001E6  0E01               	movlw	1
  6952  0001E8  6E58               	movwf	_sens,c	;volatile
  6953  0001EA                     l7631:
  6954                           
  6955                           ;main.c: 558:                 if ((temp_int == 2)||(state == 2)){
  6956  0001EA  0E02               	movlw	2
  6957  0001EC  0101               	movlb	1	; () banked
  6958  0001EE  1964               	xorwf	_temp_int& (0+255),w,b
  6959  0001F0  1165               	iorwf	(_temp_int+1)& (0+255),w,b
  6960  0001F2  B4D8               	btfsc	status,2,c
  6961  0001F4  D005               	goto	u8310
  6962                           
  6963                           ; BSR set to: 1
  6964  0001F6  0E02               	movlw	2
  6965  0001F8  1962               	xorwf	_state& (0+255),w,b
  6966  0001FA  1163               	iorwf	(_state+1)& (0+255),w,b
  6967  0001FC  A4D8               	btfss	status,2,c
  6968  0001FE  D253               	goto	l7741
  6969  000200                     u8310:
  6970                           
  6971                           ; BSR set to: 1
  6972                           ;main.c: 559:                     if ((temp_int == 2)){
  6973  000200  0E02               	movlw	2
  6974  000202  1964               	xorwf	_temp_int& (0+255),w,b
  6975  000204  1165               	iorwf	(_temp_int+1)& (0+255),w,b
  6976  000206  A4D8               	btfss	status,2,c
  6977  000208  D033               	goto	l7653
  6978                           
  6979                           ; BSR set to: 1
  6980                           ;main.c: 560:                         state = 2;
  6981  00020A  0E00               	movlw	0
  6982  00020C  6F63               	movwf	(_state+1)& (0+255),b
  6983  00020E  0E02               	movlw	2
  6984  000210  6F62               	movwf	_state& (0+255),b
  6985                           
  6986                           ;main.c: 561:                         disp = 0;
  6987  000212  0E00               	movlw	0
  6988  000214  6F61               	movwf	(_disp+1)& (0+255),b
  6989  000216  0E00               	movlw	0
  6990  000218  6F60               	movwf	_disp& (0+255),b
  6991                           
  6992                           ; BSR set to: 1
  6993                           ;main.c: 562:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  6994  00021A  0E01               	movlw	1
  6995  00021C  EC73  F01D         	call	_lcdInst
  6996  000220  0E11               	movlw	17
  6997  000222  0101               	movlb	1	; () banked
  6998  000224  6F00               	movwf	??_UI_main& (0+255),b
  6999  000226  0E3A               	movlw	58
  7000  000228                     u9357:
  7001  000228  2EE8               	decfsz	wreg,f,c
  7002  00022A  D7FE               	bra	u9357
  7003  00022C  2F00               	decfsz	??_UI_main& (0+255),f,b
  7004  00022E  D7FC               	bra	u9357
  7005  000230  F000               	nop	
  7006                           
  7007                           ;main.c: 563:                         printf("Op Time:");
  7008  000232  0E1B               	movlw	low STR_30
  7009  000234  0100               	movlb	0	; () banked
  7010  000236  6FED               	movwf	printf@fmt& (0+255),b
  7011  000238  0EFD               	movlw	high STR_30
  7012  00023A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7013  00023C  ECFA  F01C         	call	_printf	;wreg free
  7014  000240  0EC0               	movlw	192
  7015  000242  EC73  F01D         	call	_lcdInst
  7016                           
  7017                           ;main.c: 565:                         printf("%d", cnt);
  7018  000246  0E20               	movlw	low (STR_37+11)
  7019  000248  0100               	movlb	0	; () banked
  7020  00024A  6FED               	movwf	printf@fmt& (0+255),b
  7021  00024C  0EFC               	movlw	high (STR_37+11)
  7022  00024E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7023  000250  0E00               	movlw	0
  7024  000252  6FF0               	movwf	(?_printf+3)& (0+255),b
  7025  000254  0E00               	movlw	0
  7026  000256  6FEF               	movwf	(?_printf+2)& (0+255),b
  7027  000258  ECFA  F01C         	call	_printf	;wreg free
  7028  00025C  0ED0               	movlw	208
  7029  00025E  EC73  F01D         	call	_lcdInst
  7030                           
  7031                           ;main.c: 567:                         printf("    0-Menu   #>");
  7032  000262  0E79               	movlw	low (STR_35+1)
  7033  000264  0100               	movlb	0	; () banked
  7034  000266  6FED               	movwf	printf@fmt& (0+255),b
  7035  000268  0EFB               	movlw	high (STR_35+1)
  7036  00026A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7037  00026C  ECFA  F01C         	call	_printf	;wreg free
  7038  000270                     l7653:
  7039                           
  7040                           ;main.c: 569:                     if ((temp == '*') && (disp != 0)){
  7041  000270  0E2A               	movlw	42
  7042  000272  0100               	movlb	0	; () banked
  7043  000274  19FF               	xorwf	_temp& (0+255),w,b
  7044  000276  A4D8               	btfss	status,2,c
  7045  000278  D00B               	goto	l494
  7046                           
  7047                           ; BSR set to: 0
  7048  00027A  0101               	movlb	1	; () banked
  7049  00027C  5160               	movf	_disp& (0+255),w,b
  7050  00027E  1161               	iorwf	(_disp+1)& (0+255),w,b
  7051  000280  B4D8               	btfsc	status,2,c
  7052  000282  D006               	goto	l494
  7053                           
  7054                           ; BSR set to: 1
  7055                           ;main.c: 570:                         disp = disp - 1;
  7056  000284  0EFF               	movlw	255
  7057  000286  2560               	addwf	_disp& (0+255),w,b
  7058  000288  6F60               	movwf	_disp& (0+255),b
  7059  00028A  0EFF               	movlw	255
  7060  00028C  2161               	addwfc	(_disp+1)& (0+255),w,b
  7061  00028E  6F61               	movwf	(_disp+1)& (0+255),b
  7062  000290                     l494:
  7063                           
  7064                           ;main.c: 572:                     if ((temp == '#')&& (disp <12)){
  7065  000290  0E23               	movlw	35
  7066  000292  0100               	movlb	0	; () banked
  7067  000294  19FF               	xorwf	_temp& (0+255),w,b
  7068  000296  A4D8               	btfss	status,2,c
  7069  000298  D00B               	goto	l7663
  7070                           
  7071                           ; BSR set to: 0
  7072  00029A  0101               	movlb	1	; () banked
  7073  00029C  BF61               	btfsc	(_disp+1)& (0+255),7,b
  7074  00029E  D006               	goto	u8360
  7075  0002A0  5161               	movf	(_disp+1)& (0+255),w,b
  7076  0002A2  E106               	bnz	l7663
  7077  0002A4  0E0C               	movlw	12
  7078  0002A6  5D60               	subwf	_disp& (0+255),w,b
  7079  0002A8  B0D8               	btfsc	status,0,c
  7080  0002AA  D002               	goto	l7663
  7081  0002AC                     u8360:
  7082                           
  7083                           ; BSR set to: 1
  7084                           ;main.c: 573:                         disp++;
  7085  0002AC  4B60               	infsnz	_disp& (0+255),f,b
  7086  0002AE  2B61               	incf	(_disp+1)& (0+255),f,b
  7087  0002B0                     l7663:
  7088                           
  7089                           ;main.c: 575:                     if (disp == 0){
  7090  0002B0  0101               	movlb	1	; () banked
  7091  0002B2  5160               	movf	_disp& (0+255),w,b
  7092  0002B4  1161               	iorwf	(_disp+1)& (0+255),w,b
  7093  0002B6  A4D8               	btfss	status,2,c
  7094  0002B8  D02B               	goto	l7679
  7095                           
  7096                           ; BSR set to: 1
  7097                           ;main.c: 576:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  7098  0002BA  0E01               	movlw	1
  7099  0002BC  EC73  F01D         	call	_lcdInst
  7100  0002C0  0E11               	movlw	17
  7101  0002C2  0101               	movlb	1	; () banked
  7102  0002C4  6F00               	movwf	??_UI_main& (0+255),b
  7103  0002C6  0E3A               	movlw	58
  7104  0002C8                     u9367:
  7105  0002C8  2EE8               	decfsz	wreg,f,c
  7106  0002CA  D7FE               	bra	u9367
  7107  0002CC  2F00               	decfsz	??_UI_main& (0+255),f,b
  7108  0002CE  D7FC               	bra	u9367
  7109  0002D0  F000               	nop	
  7110                           
  7111                           ;main.c: 577:                         printf("Op Time:");
  7112  0002D2  0E1B               	movlw	low STR_30
  7113  0002D4  0100               	movlb	0	; () banked
  7114  0002D6  6FED               	movwf	printf@fmt& (0+255),b
  7115  0002D8  0EFD               	movlw	high STR_30
  7116  0002DA  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7117  0002DC  ECFA  F01C         	call	_printf	;wreg free
  7118  0002E0  0EC0               	movlw	192
  7119  0002E2  EC73  F01D         	call	_lcdInst
  7120                           
  7121                           ;main.c: 579:                         printf("%d", cnt);
  7122  0002E6  0E20               	movlw	low (STR_37+11)
  7123  0002E8  0100               	movlb	0	; () banked
  7124  0002EA  6FED               	movwf	printf@fmt& (0+255),b
  7125  0002EC  0EFC               	movlw	high (STR_37+11)
  7126  0002EE  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7127  0002F0  0E00               	movlw	0
  7128  0002F2  6FF0               	movwf	(?_printf+3)& (0+255),b
  7129  0002F4  0E00               	movlw	0
  7130  0002F6  6FEF               	movwf	(?_printf+2)& (0+255),b
  7131  0002F8  ECFA  F01C         	call	_printf	;wreg free
  7132  0002FC  0ED0               	movlw	208
  7133  0002FE  EC73  F01D         	call	_lcdInst
  7134                           
  7135                           ;main.c: 581:                         printf("     0-Menu   #>");
  7136  000302  0E78               	movlw	low STR_35
  7137  000304  0100               	movlb	0	; () banked
  7138  000306  6FED               	movwf	printf@fmt& (0+255),b
  7139  000308  0EFB               	movlw	high STR_35
  7140  00030A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7141  00030C  ECFA  F01C         	call	_printf	;wreg free
  7142  000310                     l7679:
  7143                           
  7144                           ;main.c: 584:                     if (disp == 1){
  7145  000310  0101               	movlb	1	; () banked
  7146  000312  0560               	decf	_disp& (0+255),w,b
  7147  000314  1161               	iorwf	(_disp+1)& (0+255),w,b
  7148  000316  A4D8               	btfss	status,2,c
  7149  000318  D02F               	goto	l7695
  7150                           
  7151                           ; BSR set to: 1
  7152                           ;main.c: 585:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  7153  00031A  0E01               	movlw	1
  7154  00031C  EC73  F01D         	call	_lcdInst
  7155  000320  0E11               	movlw	17
  7156  000322  0101               	movlb	1	; () banked
  7157  000324  6F00               	movwf	??_UI_main& (0+255),b
  7158  000326  0E3A               	movlw	58
  7159  000328                     u9377:
  7160  000328  2EE8               	decfsz	wreg,f,c
  7161  00032A  D7FE               	bra	u9377
  7162  00032C  2F00               	decfsz	??_UI_main& (0+255),f,b
  7163  00032E  D7FC               	bra	u9377
  7164  000330  F000               	nop	
  7165                           
  7166                           ;main.c: 586:                         printf("No. Tires: %d",t_dep);
  7167  000332  0E23               	movlw	low STR_36
  7168  000334  0100               	movlb	0	; () banked
  7169  000336  6FED               	movwf	printf@fmt& (0+255),b
  7170  000338  0EFC               	movlw	high STR_36
  7171  00033A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7172  00033C  C0F9  F0EF         	movff	UI_main@t_dep,?_printf+2
  7173  000340  C0FA  F0F0         	movff	UI_main@t_dep+1,?_printf+3
  7174  000344  ECFA  F01C         	call	_printf	;wreg free
  7175  000348  0EC0               	movlw	192
  7176  00034A  EC73  F01D         	call	_lcdInst
  7177                           
  7178                           ;main.c: 588:                         printf("No. Poles: %d", poles_detected);
  7179  00034E  0E15               	movlw	low STR_37
  7180  000350  0100               	movlb	0	; () banked
  7181  000352  6FED               	movwf	printf@fmt& (0+255),b
  7182  000354  0EFC               	movlw	high STR_37
  7183  000356  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7184  000358  C0FB  F0EF         	movff	UI_main@poles_detected,?_printf+2
  7185  00035C  C0FC  F0F0         	movff	UI_main@poles_detected+1,?_printf+3
  7186  000360  ECFA  F01C         	call	_printf	;wreg free
  7187  000364  0ED0               	movlw	208
  7188  000366  EC73  F01D         	call	_lcdInst
  7189                           
  7190                           ;main.c: 590:                         printf("<*   0-Menu   #>");
  7191  00036A  0E89               	movlw	low STR_38
  7192  00036C  0100               	movlb	0	; () banked
  7193  00036E  6FED               	movwf	printf@fmt& (0+255),b
  7194  000370  0EFB               	movlw	high STR_38
  7195  000372  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7196  000374  ECFA  F01C         	call	_printf	;wreg free
  7197  000378                     l7695:
  7198                           
  7199                           ;main.c: 593:                     if (disp > 1 && disp <11){
  7200  000378  0101               	movlb	1	; () banked
  7201  00037A  BF61               	btfsc	(_disp+1)& (0+255),7,b
  7202  00037C  D0CE               	goto	l7719
  7203  00037E  5161               	movf	(_disp+1)& (0+255),w,b
  7204  000380  E104               	bnz	u8390
  7205  000382  0E02               	movlw	2
  7206  000384  5D60               	subwf	_disp& (0+255),w,b
  7207  000386  A0D8               	btfss	status,0,c
  7208  000388  D0C8               	goto	l7719
  7209  00038A                     u8390:
  7210                           
  7211                           ; BSR set to: 1
  7212  00038A  BF61               	btfsc	(_disp+1)& (0+255),7,b
  7213  00038C  D006               	goto	u8400
  7214  00038E  5161               	movf	(_disp+1)& (0+255),w,b
  7215  000390  E103               	bnz	u8401
  7216  000392  0E0B               	movlw	11
  7217  000394  5D60               	subwf	_disp& (0+255),w,b
  7218  000396  B0D8               	btfsc	status,0,c
  7219  000398                     u8401:
  7220  000398  D0C0               	goto	l7719
  7221  00039A                     u8400:
  7222                           
  7223                           ; BSR set to: 1
  7224                           ;main.c: 594:                         i = disp - 2;
  7225  00039A  0EFE               	movlw	254
  7226  00039C  2560               	addwf	_disp& (0+255),w,b
  7227  00039E  6F5E               	movwf	_i& (0+255),b
  7228  0003A0  0EFF               	movlw	255
  7229  0003A2  2161               	addwfc	(_disp+1)& (0+255),w,b
  7230  0003A4  6F5F               	movwf	(_i+1)& (0+255),b
  7231                           
  7232                           ; BSR set to: 1
  7233                           ;main.c: 595:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  7234  0003A6  0E01               	movlw	1
  7235  0003A8  EC73  F01D         	call	_lcdInst
  7236  0003AC  0E11               	movlw	17
  7237  0003AE  0101               	movlb	1	; () banked
  7238  0003B0  6F00               	movwf	??_UI_main& (0+255),b
  7239  0003B2  0E3A               	movlw	58
  7240  0003B4                     u9387:
  7241  0003B4  2EE8               	decfsz	wreg,f,c
  7242  0003B6  D7FE               	bra	u9387
  7243  0003B8  2F00               	decfsz	??_UI_main& (0+255),f,b
  7244  0003BA  D7FC               	bra	u9387
  7245  0003BC  F000               	nop	
  7246                           
  7247                           ;main.c: 596:                         printf("P%d Dep:%d,Tot:%d", i+1 , Pole[i].tires_de
      +                          ployed,Pole[i].tires_final);
  7248  0003BE  0E22               	movlw	low STR_39
  7249  0003C0  0100               	movlb	0	; () banked
  7250  0003C2  6FED               	movwf	printf@fmt& (0+255),b
  7251  0003C4  0EFB               	movlw	high STR_39
  7252  0003C6  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7253  0003C8  0E01               	movlw	1
  7254  0003CA  0101               	movlb	1	; () banked
  7255  0003CC  255E               	addwf	_i& (0+255),w,b
  7256  0003CE  0100               	movlb	0	; () banked
  7257  0003D0  6FEF               	movwf	(?_printf+2)& (0+255),b
  7258  0003D2  0E00               	movlw	0
  7259  0003D4  0101               	movlb	1	; () banked
  7260  0003D6  215F               	addwfc	(_i+1)& (0+255),w,b
  7261  0003D8  0100               	movlb	0	; () banked
  7262  0003DA  6FF0               	movwf	(?_printf+3)& (0+255),b
  7263  0003DC  C15E  F100         	movff	_i,??_UI_main
  7264  0003E0  C15F  F101         	movff	_i+1,??_UI_main+1
  7265  0003E4  0101               	movlb	1	; () banked
  7266  0003E6  90D8               	bcf	status,0,c
  7267  0003E8  3700               	rlcf	??_UI_main& (0+255),f,b
  7268  0003EA  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7269  0003EC  90D8               	bcf	status,0,c
  7270  0003EE  3700               	rlcf	??_UI_main& (0+255),f,b
  7271  0003F0  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7272  0003F2  90D8               	bcf	status,0,c
  7273  0003F4  3700               	rlcf	??_UI_main& (0+255),f,b
  7274  0003F6  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7275  0003F8  0E04               	movlw	low UI_main@Pole
  7276  0003FA  2500               	addwf	??_UI_main& (0+255),w,b
  7277  0003FC  6ED9               	movwf	fsr2l,c
  7278  0003FE  0E01               	movlw	high UI_main@Pole
  7279  000400  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  7280  000402  6EDA               	movwf	fsr2h,c
  7281  000404  CFDE F0F1          	movff	postinc2,?_printf+4
  7282  000408  CFDD F0F2          	movff	postdec2,?_printf+5
  7283  00040C  C15E  F102         	movff	_i,??_UI_main+2
  7284  000410  C15F  F103         	movff	_i+1,??_UI_main+3
  7285  000414  90D8               	bcf	status,0,c
  7286  000416  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  7287  000418  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  7288  00041A  90D8               	bcf	status,0,c
  7289  00041C  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  7290  00041E  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  7291  000420  90D8               	bcf	status,0,c
  7292  000422  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  7293  000424  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  7294  000426  0E02               	movlw	2
  7295  000428  2702               	addwf	(??_UI_main+2)& (0+255),f,b
  7296  00042A  0E00               	movlw	0
  7297  00042C  2303               	addwfc	(??_UI_main+3)& (0+255),f,b
  7298  00042E  0E04               	movlw	low UI_main@Pole
  7299  000430  2502               	addwf	(??_UI_main+2)& (0+255),w,b
  7300  000432  6ED9               	movwf	fsr2l,c
  7301  000434  0E01               	movlw	high UI_main@Pole
  7302  000436  2103               	addwfc	(??_UI_main+3)& (0+255),w,b
  7303  000438  6EDA               	movwf	fsr2h,c
  7304  00043A  CFDE F0F3          	movff	postinc2,?_printf+6
  7305  00043E  CFDD F0F4          	movff	postdec2,?_printf+7
  7306  000442  ECFA  F01C         	call	_printf	;wreg free
  7307  000446  0EC0               	movlw	192
  7308  000448  EC73  F01D         	call	_lcdInst
  7309                           
  7310                           ;main.c: 598:                         printf("DistToStart:%d",i+1 , Pole[i].dist_from_st
      +                          art);
  7311  00044C  0ED9               	movlw	low STR_40
  7312  00044E  0100               	movlb	0	; () banked
  7313  000450  6FED               	movwf	printf@fmt& (0+255),b
  7314  000452  0EFB               	movlw	high STR_40
  7315  000454  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7316  000456  0E01               	movlw	1
  7317  000458  0101               	movlb	1	; () banked
  7318  00045A  255E               	addwf	_i& (0+255),w,b
  7319  00045C  0100               	movlb	0	; () banked
  7320  00045E  6FEF               	movwf	(?_printf+2)& (0+255),b
  7321  000460  0E00               	movlw	0
  7322  000462  0101               	movlb	1	; () banked
  7323  000464  215F               	addwfc	(_i+1)& (0+255),w,b
  7324  000466  0100               	movlb	0	; () banked
  7325  000468  6FF0               	movwf	(?_printf+3)& (0+255),b
  7326  00046A  C15E  F100         	movff	_i,??_UI_main
  7327  00046E  C15F  F101         	movff	_i+1,??_UI_main+1
  7328  000472  0101               	movlb	1	; () banked
  7329  000474  90D8               	bcf	status,0,c
  7330  000476  3700               	rlcf	??_UI_main& (0+255),f,b
  7331  000478  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7332  00047A  90D8               	bcf	status,0,c
  7333  00047C  3700               	rlcf	??_UI_main& (0+255),f,b
  7334  00047E  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7335  000480  90D8               	bcf	status,0,c
  7336  000482  3700               	rlcf	??_UI_main& (0+255),f,b
  7337  000484  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7338  000486  0E04               	movlw	4
  7339  000488  2700               	addwf	??_UI_main& (0+255),f,b
  7340  00048A  0E00               	movlw	0
  7341  00048C  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  7342  00048E  0E04               	movlw	low UI_main@Pole
  7343  000490  2500               	addwf	??_UI_main& (0+255),w,b
  7344  000492  6ED9               	movwf	fsr2l,c
  7345  000494  0E01               	movlw	high UI_main@Pole
  7346  000496  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  7347  000498  6EDA               	movwf	fsr2h,c
  7348  00049A  CFDE F0F1          	movff	postinc2,?_printf+4
  7349  00049E  CFDD F0F2          	movff	postdec2,?_printf+5
  7350  0004A2  ECFA  F01C         	call	_printf	;wreg free
  7351  0004A6  0E90               	movlw	144
  7352  0004A8  EC73  F01D         	call	_lcdInst
  7353                           
  7354                           ;main.c: 600:                         printf("DistToCL:%d",i+1 , Pole[i].dist_from_cl);
  7355  0004AC  0E7D               	movlw	low STR_41
  7356  0004AE  0100               	movlb	0	; () banked
  7357  0004B0  6FED               	movwf	printf@fmt& (0+255),b
  7358  0004B2  0EFC               	movlw	high STR_41
  7359  0004B4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7360  0004B6  0E01               	movlw	1
  7361  0004B8  0101               	movlb	1	; () banked
  7362  0004BA  255E               	addwf	_i& (0+255),w,b
  7363  0004BC  0100               	movlb	0	; () banked
  7364  0004BE  6FEF               	movwf	(?_printf+2)& (0+255),b
  7365  0004C0  0E00               	movlw	0
  7366  0004C2  0101               	movlb	1	; () banked
  7367  0004C4  215F               	addwfc	(_i+1)& (0+255),w,b
  7368  0004C6  0100               	movlb	0	; () banked
  7369  0004C8  6FF0               	movwf	(?_printf+3)& (0+255),b
  7370  0004CA  C15E  F100         	movff	_i,??_UI_main
  7371  0004CE  C15F  F101         	movff	_i+1,??_UI_main+1
  7372  0004D2  0101               	movlb	1	; () banked
  7373  0004D4  90D8               	bcf	status,0,c
  7374  0004D6  3700               	rlcf	??_UI_main& (0+255),f,b
  7375  0004D8  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7376  0004DA  90D8               	bcf	status,0,c
  7377  0004DC  3700               	rlcf	??_UI_main& (0+255),f,b
  7378  0004DE  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7379  0004E0  90D8               	bcf	status,0,c
  7380  0004E2  3700               	rlcf	??_UI_main& (0+255),f,b
  7381  0004E4  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7382  0004E6  0E06               	movlw	6
  7383  0004E8  2700               	addwf	??_UI_main& (0+255),f,b
  7384  0004EA  0E00               	movlw	0
  7385  0004EC  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  7386  0004EE  0E04               	movlw	low UI_main@Pole
  7387  0004F0  2500               	addwf	??_UI_main& (0+255),w,b
  7388  0004F2  6ED9               	movwf	fsr2l,c
  7389  0004F4  0E01               	movlw	high UI_main@Pole
  7390  0004F6  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  7391  0004F8  6EDA               	movwf	fsr2h,c
  7392  0004FA  CFDE F0F1          	movff	postinc2,?_printf+4
  7393  0004FE  CFDD F0F2          	movff	postdec2,?_printf+5
  7394  000502  ECFA  F01C         	call	_printf	;wreg free
  7395  000506  0ED0               	movlw	208
  7396  000508  EC73  F01D         	call	_lcdInst
  7397                           
  7398                           ;main.c: 602:                         printf("<*   0-Menu   #>");
  7399  00050C  0E89               	movlw	low STR_38
  7400  00050E  0100               	movlb	0	; () banked
  7401  000510  6FED               	movwf	printf@fmt& (0+255),b
  7402  000512  0EFB               	movlw	high STR_38
  7403  000514  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7404  000516  ECFA  F01C         	call	_printf	;wreg free
  7405  00051A                     l7719:
  7406                           
  7407                           ;main.c: 604:                     if (disp == 11){
  7408  00051A  0E0B               	movlw	11
  7409  00051C  0101               	movlb	1	; () banked
  7410  00051E  1960               	xorwf	_disp& (0+255),w,b
  7411  000520  1161               	iorwf	(_disp+1)& (0+255),w,b
  7412  000522  A4D8               	btfss	status,2,c
  7413  000524  D0C0               	goto	l7741
  7414                           
  7415                           ; BSR set to: 1
  7416                           ;main.c: 605:                         i = disp - 2;
  7417  000526  0EFE               	movlw	254
  7418  000528  2560               	addwf	_disp& (0+255),w,b
  7419  00052A  6F5E               	movwf	_i& (0+255),b
  7420  00052C  0EFF               	movlw	255
  7421  00052E  2161               	addwfc	(_disp+1)& (0+255),w,b
  7422  000530  6F5F               	movwf	(_i+1)& (0+255),b
  7423                           
  7424                           ; BSR set to: 1
  7425                           ;main.c: 606:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  7426  000532  0E01               	movlw	1
  7427  000534  EC73  F01D         	call	_lcdInst
  7428  000538  0E11               	movlw	17
  7429  00053A  0101               	movlb	1	; () banked
  7430  00053C  6F00               	movwf	??_UI_main& (0+255),b
  7431  00053E  0E3A               	movlw	58
  7432  000540                     u9397:
  7433  000540  2EE8               	decfsz	wreg,f,c
  7434  000542  D7FE               	bra	u9397
  7435  000544  2F00               	decfsz	??_UI_main& (0+255),f,b
  7436  000546  D7FC               	bra	u9397
  7437  000548  F000               	nop	
  7438                           
  7439                           ;main.c: 607:                         printf("P%d Dep:%d,Tot:%d", i+1 , Pole[i].tires_de
      +                          ployed,Pole[i].tires_final);
  7440  00054A  0E22               	movlw	low STR_39
  7441  00054C  0100               	movlb	0	; () banked
  7442  00054E  6FED               	movwf	printf@fmt& (0+255),b
  7443  000550  0EFB               	movlw	high STR_39
  7444  000552  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7445  000554  0E01               	movlw	1
  7446  000556  0101               	movlb	1	; () banked
  7447  000558  255E               	addwf	_i& (0+255),w,b
  7448  00055A  0100               	movlb	0	; () banked
  7449  00055C  6FEF               	movwf	(?_printf+2)& (0+255),b
  7450  00055E  0E00               	movlw	0
  7451  000560  0101               	movlb	1	; () banked
  7452  000562  215F               	addwfc	(_i+1)& (0+255),w,b
  7453  000564  0100               	movlb	0	; () banked
  7454  000566  6FF0               	movwf	(?_printf+3)& (0+255),b
  7455  000568  C15E  F100         	movff	_i,??_UI_main
  7456  00056C  C15F  F101         	movff	_i+1,??_UI_main+1
  7457  000570  0101               	movlb	1	; () banked
  7458  000572  90D8               	bcf	status,0,c
  7459  000574  3700               	rlcf	??_UI_main& (0+255),f,b
  7460  000576  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7461  000578  90D8               	bcf	status,0,c
  7462  00057A  3700               	rlcf	??_UI_main& (0+255),f,b
  7463  00057C  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7464  00057E  90D8               	bcf	status,0,c
  7465  000580  3700               	rlcf	??_UI_main& (0+255),f,b
  7466  000582  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7467  000584  0E04               	movlw	low UI_main@Pole
  7468  000586  2500               	addwf	??_UI_main& (0+255),w,b
  7469  000588  6ED9               	movwf	fsr2l,c
  7470  00058A  0E01               	movlw	high UI_main@Pole
  7471  00058C  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  7472  00058E  6EDA               	movwf	fsr2h,c
  7473  000590  CFDE F0F1          	movff	postinc2,?_printf+4
  7474  000594  CFDD F0F2          	movff	postdec2,?_printf+5
  7475  000598  C15E  F102         	movff	_i,??_UI_main+2
  7476  00059C  C15F  F103         	movff	_i+1,??_UI_main+3
  7477  0005A0  90D8               	bcf	status,0,c
  7478  0005A2  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  7479  0005A4  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  7480  0005A6  90D8               	bcf	status,0,c
  7481  0005A8  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  7482  0005AA  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  7483  0005AC  90D8               	bcf	status,0,c
  7484  0005AE  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  7485  0005B0  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  7486  0005B2  0E02               	movlw	2
  7487  0005B4  2702               	addwf	(??_UI_main+2)& (0+255),f,b
  7488  0005B6  0E00               	movlw	0
  7489  0005B8  2303               	addwfc	(??_UI_main+3)& (0+255),f,b
  7490  0005BA  0E04               	movlw	low UI_main@Pole
  7491  0005BC  2502               	addwf	(??_UI_main+2)& (0+255),w,b
  7492  0005BE  6ED9               	movwf	fsr2l,c
  7493  0005C0  0E01               	movlw	high UI_main@Pole
  7494  0005C2  2103               	addwfc	(??_UI_main+3)& (0+255),w,b
  7495  0005C4  6EDA               	movwf	fsr2h,c
  7496  0005C6  CFDE F0F3          	movff	postinc2,?_printf+6
  7497  0005CA  CFDD F0F4          	movff	postdec2,?_printf+7
  7498  0005CE  ECFA  F01C         	call	_printf	;wreg free
  7499  0005D2  0EC0               	movlw	192
  7500  0005D4  EC73  F01D         	call	_lcdInst
  7501                           
  7502                           ;main.c: 609:                         printf("DistToStart:%d",i+1 , Pole[i].dist_from_st
      +                          art);
  7503  0005D8  0ED9               	movlw	low STR_40
  7504  0005DA  0100               	movlb	0	; () banked
  7505  0005DC  6FED               	movwf	printf@fmt& (0+255),b
  7506  0005DE  0EFB               	movlw	high STR_40
  7507  0005E0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7508  0005E2  0E01               	movlw	1
  7509  0005E4  0101               	movlb	1	; () banked
  7510  0005E6  255E               	addwf	_i& (0+255),w,b
  7511  0005E8  0100               	movlb	0	; () banked
  7512  0005EA  6FEF               	movwf	(?_printf+2)& (0+255),b
  7513  0005EC  0E00               	movlw	0
  7514  0005EE  0101               	movlb	1	; () banked
  7515  0005F0  215F               	addwfc	(_i+1)& (0+255),w,b
  7516  0005F2  0100               	movlb	0	; () banked
  7517  0005F4  6FF0               	movwf	(?_printf+3)& (0+255),b
  7518  0005F6  C15E  F100         	movff	_i,??_UI_main
  7519  0005FA  C15F  F101         	movff	_i+1,??_UI_main+1
  7520  0005FE  0101               	movlb	1	; () banked
  7521  000600  90D8               	bcf	status,0,c
  7522  000602  3700               	rlcf	??_UI_main& (0+255),f,b
  7523  000604  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7524  000606  90D8               	bcf	status,0,c
  7525  000608  3700               	rlcf	??_UI_main& (0+255),f,b
  7526  00060A  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7527  00060C  90D8               	bcf	status,0,c
  7528  00060E  3700               	rlcf	??_UI_main& (0+255),f,b
  7529  000610  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7530  000612  0E04               	movlw	4
  7531  000614  2700               	addwf	??_UI_main& (0+255),f,b
  7532  000616  0E00               	movlw	0
  7533  000618  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  7534  00061A  0E04               	movlw	low UI_main@Pole
  7535  00061C  2500               	addwf	??_UI_main& (0+255),w,b
  7536  00061E  6ED9               	movwf	fsr2l,c
  7537  000620  0E01               	movlw	high UI_main@Pole
  7538  000622  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  7539  000624  6EDA               	movwf	fsr2h,c
  7540  000626  CFDE F0F1          	movff	postinc2,?_printf+4
  7541  00062A  CFDD F0F2          	movff	postdec2,?_printf+5
  7542  00062E  ECFA  F01C         	call	_printf	;wreg free
  7543  000632  0E90               	movlw	144
  7544  000634  EC73  F01D         	call	_lcdInst
  7545                           
  7546                           ;main.c: 611:                         printf("DistToCL:%d",i+1 , Pole[i].dist_from_cl);
  7547  000638  0E7D               	movlw	low STR_41
  7548  00063A  0100               	movlb	0	; () banked
  7549  00063C  6FED               	movwf	printf@fmt& (0+255),b
  7550  00063E  0EFC               	movlw	high STR_41
  7551  000640  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7552  000642  0E01               	movlw	1
  7553  000644  0101               	movlb	1	; () banked
  7554  000646  255E               	addwf	_i& (0+255),w,b
  7555  000648  0100               	movlb	0	; () banked
  7556  00064A  6FEF               	movwf	(?_printf+2)& (0+255),b
  7557  00064C  0E00               	movlw	0
  7558  00064E  0101               	movlb	1	; () banked
  7559  000650  215F               	addwfc	(_i+1)& (0+255),w,b
  7560  000652  0100               	movlb	0	; () banked
  7561  000654  6FF0               	movwf	(?_printf+3)& (0+255),b
  7562  000656  C15E  F100         	movff	_i,??_UI_main
  7563  00065A  C15F  F101         	movff	_i+1,??_UI_main+1
  7564  00065E  0101               	movlb	1	; () banked
  7565  000660  90D8               	bcf	status,0,c
  7566  000662  3700               	rlcf	??_UI_main& (0+255),f,b
  7567  000664  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7568  000666  90D8               	bcf	status,0,c
  7569  000668  3700               	rlcf	??_UI_main& (0+255),f,b
  7570  00066A  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7571  00066C  90D8               	bcf	status,0,c
  7572  00066E  3700               	rlcf	??_UI_main& (0+255),f,b
  7573  000670  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7574  000672  0E06               	movlw	6
  7575  000674  2700               	addwf	??_UI_main& (0+255),f,b
  7576  000676  0E00               	movlw	0
  7577  000678  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  7578  00067A  0E04               	movlw	low UI_main@Pole
  7579  00067C  2500               	addwf	??_UI_main& (0+255),w,b
  7580  00067E  6ED9               	movwf	fsr2l,c
  7581  000680  0E01               	movlw	high UI_main@Pole
  7582  000682  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  7583  000684  6EDA               	movwf	fsr2h,c
  7584  000686  CFDE F0F1          	movff	postinc2,?_printf+4
  7585  00068A  CFDD F0F2          	movff	postdec2,?_printf+5
  7586  00068E  ECFA  F01C         	call	_printf	;wreg free
  7587  000692  0ED0               	movlw	208
  7588  000694  EC73  F01D         	call	_lcdInst
  7589                           
  7590                           ;main.c: 613:                         printf("<*   0-Menu     ");
  7591  000698  0E45               	movlw	low STR_46
  7592  00069A  0100               	movlb	0	; () banked
  7593  00069C  6FED               	movwf	printf@fmt& (0+255),b
  7594  00069E  0EFB               	movlw	high STR_46
  7595  0006A0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7596  0006A2  ECFA  F01C         	call	_printf	;wreg free
  7597  0006A6                     l7741:
  7598                           
  7599                           ;main.c: 616:             if (temp_int == 3){
  7600  0006A6  0E03               	movlw	3
  7601  0006A8  0101               	movlb	1	; () banked
  7602  0006AA  1964               	xorwf	_temp_int& (0+255),w,b
  7603  0006AC  1165               	iorwf	(_temp_int+1)& (0+255),w,b
  7604  0006AE  A4D8               	btfss	status,2,c
  7605  0006B0  D0B5               	goto	u8450
  7606                           
  7607                           ; BSR set to: 1
  7608                           ;main.c: 617:                 state = 0;
  7609  0006B2  0E00               	movlw	0
  7610  0006B4  6F63               	movwf	(_state+1)& (0+255),b
  7611  0006B6  0E00               	movlw	0
  7612  0006B8  6F62               	movwf	_state& (0+255),b
  7613                           
  7614                           ;main.c: 618:                 tick = 0;
  7615  0006BA  0E00               	movlw	0
  7616  0006BC  6F55               	movwf	UI_main@tick& (0+255),b
  7617  0006BE  0E00               	movlw	0
  7618  0006C0  6F56               	movwf	(UI_main@tick+1)& (0+255),b
  7619  0006C2  0E00               	movlw	0
  7620  0006C4  6F57               	movwf	(UI_main@tick+2)& (0+255),b
  7621  0006C6  0E00               	movlw	0
  7622  0006C8  6F58               	movwf	(UI_main@tick+3)& (0+255),b
  7623                           
  7624                           ;main.c: 619:                 while(~key_was_pressed){
  7625  0006CA  D0A5               	goto	l7791
  7626  0006CC                     l7745:
  7627                           
  7628                           ; BSR set to: 1
  7629                           ;main.c: 620:                     if(tick % 1000 == 0){
  7630  0006CC  C155  F080         	movff	UI_main@tick,___llmod@dividend
  7631  0006D0  C156  F081         	movff	UI_main@tick+1,___llmod@dividend+1
  7632  0006D4  C157  F082         	movff	UI_main@tick+2,___llmod@dividend+2
  7633  0006D8  C158  F083         	movff	UI_main@tick+3,___llmod@dividend+3
  7634  0006DC  0EE8               	movlw	232
  7635  0006DE  0100               	movlb	0	; () banked
  7636  0006E0  6F84               	movwf	___llmod@divisor& (0+255),b
  7637  0006E2  0E03               	movlw	3
  7638  0006E4  6F85               	movwf	(___llmod@divisor+1)& (0+255),b
  7639  0006E6  0E00               	movlw	0
  7640  0006E8  6F86               	movwf	(___llmod@divisor+2)& (0+255),b
  7641  0006EA  0E00               	movlw	0
  7642  0006EC  6F87               	movwf	(___llmod@divisor+3)& (0+255),b
  7643  0006EE  EC4F  F01A         	call	___llmod	;wreg free
  7644  0006F2  0100               	movlb	0	; () banked
  7645  0006F4  5180               	movf	?___llmod& (0+255),w,b
  7646  0006F6  1181               	iorwf	(?___llmod+1)& (0+255),w,b
  7647  0006F8  1182               	iorwf	(?___llmod+2)& (0+255),w,b
  7648  0006FA  1183               	iorwf	(?___llmod+3)& (0+255),w,b
  7649  0006FC  A4D8               	btfss	status,2,c
  7650  0006FE  D084               	goto	l7789
  7651                           
  7652                           ; BSR set to: 0
  7653                           ;main.c: 621:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  7654  000700  0E01               	movlw	1
  7655  000702  EC73  F01D         	call	_lcdInst
  7656  000706  0E11               	movlw	17
  7657  000708  0101               	movlb	1	; () banked
  7658  00070A  6F00               	movwf	??_UI_main& (0+255),b
  7659  00070C  0E3A               	movlw	58
  7660  00070E                     u9407:
  7661  00070E  2EE8               	decfsz	wreg,f,c
  7662  000710  D7FE               	bra	u9407
  7663  000712  2F00               	decfsz	??_UI_main& (0+255),f,b
  7664  000714  D7FC               	bra	u9407
  7665  000716  F000               	nop	
  7666                           
  7667                           ;main.c: 622:                         printf("DATE & TIME");
  7668  000718  0E59               	movlw	low STR_47
  7669  00071A  0100               	movlb	0	; () banked
  7670  00071C  6FED               	movwf	printf@fmt& (0+255),b
  7671  00071E  0EFC               	movlw	high STR_47
  7672  000720  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7673  000722  ECFA  F01C         	call	_printf	;wreg free
  7674                           
  7675                           ;main.c: 623:                         I2C_Master_Init(100000);
  7676  000726  0EA0               	movlw	160
  7677  000728  0100               	movlb	0	; () banked
  7678  00072A  6F8D               	movwf	I2C_Master_Init@clockFreq& (0+255),b
  7679  00072C  0E86               	movlw	134
  7680  00072E  6F8E               	movwf	(I2C_Master_Init@clockFreq+1)& (0+255),b
  7681  000730  0E01               	movlw	1
  7682  000732  6F8F               	movwf	(I2C_Master_Init@clockFreq+2)& (0+255),b
  7683  000734  0E00               	movlw	0
  7684  000736  6F90               	movwf	(I2C_Master_Init@clockFreq+3)& (0+255),b
  7685  000738  EC83  F01A         	call	_I2C_Master_Init	;wreg free
  7686                           
  7687                           ;main.c: 624:                         I2C_Master_Start();
  7688  00073C  EC84  F01D         	call	_I2C_Master_Start	;wreg free
  7689                           
  7690                           ;main.c: 625:                         I2C_Master_Write(0b11010000);
  7691  000740  0E00               	movlw	0
  7692  000742  0100               	movlb	0	; () banked
  7693  000744  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  7694  000746  0ED0               	movlw	208
  7695  000748  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  7696  00074A  EC7B  F01D         	call	_I2C_Master_Write	;wreg free
  7697                           
  7698                           ;main.c: 626:                         I2C_Master_Write(0x00);
  7699  00074E  0E00               	movlw	0
  7700  000750  0100               	movlb	0	; () banked
  7701  000752  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  7702  000754  0E00               	movlw	0
  7703  000756  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  7704  000758  EC7B  F01D         	call	_I2C_Master_Write	;wreg free
  7705                           
  7706                           ;main.c: 627:                         I2C_Master_Stop();
  7707  00075C  EC80  F01D         	call	_I2C_Master_Stop	;wreg free
  7708                           
  7709                           ;main.c: 629:                         I2C_Master_Start();
  7710  000760  EC84  F01D         	call	_I2C_Master_Start	;wreg free
  7711                           
  7712                           ;main.c: 630:                         I2C_Master_Write(0b11010001);
  7713  000764  0E00               	movlw	0
  7714  000766  0100               	movlb	0	; () banked
  7715  000768  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  7716  00076A  0ED1               	movlw	209
  7717  00076C  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  7718  00076E  EC7B  F01D         	call	_I2C_Master_Write	;wreg free
  7719                           
  7720                           ;main.c: 631:                         for(unsigned char i = 0; i < 6; i++){
  7721  000772  0E00               	movlw	0
  7722  000774  0101               	movlb	1	; () banked
  7723  000776  6F59               	movwf	UI_main@i& (0+255),b
  7724  000778                     l7769:
  7725                           
  7726                           ; BSR set to: 1
  7727  000778  0E05               	movlw	5
  7728  00077A  6559               	cpfsgt	UI_main@i& (0+255),b
  7729  00077C  D001               	goto	l7773
  7730  00077E  D00D               	goto	l7779
  7731  000780                     l7773:
  7732                           
  7733                           ; BSR set to: 1
  7734                           ;main.c: 632:                             time[i] = I2C_Master_Read(0);
  7735  000780  0E58               	movlw	low _time
  7736  000782  2559               	addwf	UI_main@i& (0+255),w,b
  7737  000784  6ED9               	movwf	fsr2l,c
  7738  000786  6ADA               	clrf	fsr2h,c
  7739  000788  0E02               	movlw	high _time
  7740  00078A  22DA               	addwfc	fsr2h,f,c
  7741  00078C  0E00               	movlw	0
  7742  00078E  ECE5  F01C         	call	_I2C_Master_Read
  7743  000792  6EDF               	movwf	indf2,c
  7744                           
  7745                           ;main.c: 633:                         }
  7746  000794  0101               	movlb	1	; () banked
  7747  000796  2B59               	incf	UI_main@i& (0+255),f,b
  7748  000798  D7EF               	goto	l7769
  7749  00079A                     l7779:
  7750                           
  7751                           ; BSR set to: 1
  7752                           ;main.c: 634:                         time[6] = I2C_Master_Read(1);
  7753  00079A  0E01               	movlw	1
  7754  00079C  ECE5  F01C         	call	_I2C_Master_Read
  7755  0007A0  0102               	movlb	2	; () banked
  7756  0007A2  6F5E               	movwf	(_time+6)& (0+255),b
  7757                           
  7758                           ;main.c: 635:                         I2C_Master_Stop();
  7759  0007A4  EC80  F01D         	call	_I2C_Master_Stop	;wreg free
  7760  0007A8  0EC0               	movlw	192
  7761  0007AA  EC73  F01D         	call	_lcdInst
  7762                           
  7763                           ;main.c: 639:                         printf("%02x/%02x/%02x", time[6],time[5],time[4]);
  7764  0007AE  0EF7               	movlw	low STR_48
  7765  0007B0  0100               	movlb	0	; () banked
  7766  0007B2  6FED               	movwf	printf@fmt& (0+255),b
  7767  0007B4  0EFB               	movlw	high STR_48
  7768  0007B6  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7769  0007B8  C25E  F0EF         	movff	_time+6,?_printf+2
  7770  0007BC  6BF0               	clrf	(?_printf+3)& (0+255),b
  7771  0007BE  C25D  F0F1         	movff	_time+5,?_printf+4
  7772  0007C2  6BF2               	clrf	(?_printf+5)& (0+255),b
  7773  0007C4  C25C  F0F3         	movff	_time+4,?_printf+6
  7774  0007C8  6BF4               	clrf	(?_printf+7)& (0+255),b
  7775  0007CA  ECFA  F01C         	call	_printf	;wreg free
  7776  0007CE  0E90               	movlw	144
  7777  0007D0  EC73  F01D         	call	_lcdInst
  7778                           
  7779                           ;main.c: 641:                         printf("%02x:%02x:%02x", time[2],time[1],time[0]);
  7780  0007D4  0E06               	movlw	low STR_49
  7781  0007D6  0100               	movlb	0	; () banked
  7782  0007D8  6FED               	movwf	printf@fmt& (0+255),b
  7783  0007DA  0EFC               	movlw	high STR_49
  7784  0007DC  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7785  0007DE  C25A  F0EF         	movff	_time+2,?_printf+2
  7786  0007E2  6BF0               	clrf	(?_printf+3)& (0+255),b
  7787  0007E4  C259  F0F1         	movff	_time+1,?_printf+4
  7788  0007E8  6BF2               	clrf	(?_printf+5)& (0+255),b
  7789  0007EA  C258  F0F3         	movff	_time,?_printf+6
  7790  0007EE  6BF4               	clrf	(?_printf+7)& (0+255),b
  7791  0007F0  ECFA  F01C         	call	_printf	;wreg free
  7792  0007F4  0ED0               	movlw	208
  7793  0007F6  EC73  F01D         	call	_lcdInst
  7794                           
  7795                           ;main.c: 643:                         printf("     0-Menu     ");
  7796  0007FA  0E34               	movlw	low STR_29
  7797  0007FC  0100               	movlb	0	; () banked
  7798  0007FE  6FED               	movwf	printf@fmt& (0+255),b
  7799  000800  0EFB               	movlw	high STR_29
  7800  000802  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7801  000804  ECFA  F01C         	call	_printf	;wreg free
  7802  000808                     l7789:
  7803                           
  7804                           ;main.c: 646:                     tick++;
  7805  000808  0E01               	movlw	1
  7806  00080A  0101               	movlb	1	; () banked
  7807  00080C  2755               	addwf	UI_main@tick& (0+255),f,b
  7808  00080E  0E00               	movlw	0
  7809  000810  2356               	addwfc	(UI_main@tick+1)& (0+255),f,b
  7810  000812  2357               	addwfc	(UI_main@tick+2)& (0+255),f,b
  7811  000814  2358               	addwfc	(UI_main@tick+3)& (0+255),f,b
  7812  000816                     l7791:
  7813                           
  7814                           ; BSR set to: 1
  7815                           ;main.c: 619:                 while(~key_was_pressed){
  7816  000816  0568               	decf	_key_was_pressed& (0+255),w,b	;volatile
  7817  000818  A4D8               	btfss	status,2,c
  7818  00081A  D758               	goto	l7745
  7819  00081C                     u8450:
  7820                           
  7821                           ;main.c: 514:     while(sens==0){
  7822  00081C  5058               	movf	_sens,w,c	;volatile
  7823  00081E  1059               	iorwf	_sens+1,w,c	;volatile
  7824  000820  A4D8               	btfss	status,2,c
  7825  000822  0012               	return	
  7826  000824  D44B               	goto	l7573
  7827  000826                     __end_of_UI_main:
  7828                           	opt callstack 0
  7829                           
  7830 ;; *************** function _printf *****************
  7831 ;; Defined at:
  7832 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  7833 ;; Parameters:    Size  Location     Type
  7834 ;;  fmt             2  109[BANK0 ] PTR const unsigned char 
  7835 ;;		 -> STR_58(10), STR_57(11), STR_56(11), STR_55(12), 
  7836 ;;		 -> STR_54(12), STR_53(10), STR_52(13), STR_51(8), 
  7837 ;;		 -> STR_50(17), STR_49(15), STR_48(15), STR_47(12), 
  7838 ;;		 -> STR_46(17), STR_45(12), STR_44(15), STR_43(18), 
  7839 ;;		 -> STR_42(17), STR_41(12), STR_40(15), STR_39(18), 
  7840 ;;		 -> STR_38(17), STR_37(14), STR_36(14), STR_35(17), 
  7841 ;;		 -> STR_34(3), STR_33(9), STR_32(16), STR_31(3), 
  7842 ;;		 -> STR_30(9), STR_29(17), STR_28(15), STR_27(15), 
  7843 ;;		 -> STR_26(12), STR_25(10), STR_24(15), STR_23(12), 
  7844 ;;		 -> STR_22(10), STR_21(16), STR_20(12), STR_19(3), 
  7845 ;;		 -> STR_18(11), STR_17(10), STR_16(17), STR_15(10), 
  7846 ;;		 -> STR_14(16), STR_13(10), STR_12(16), STR_11(10), 
  7847 ;;		 -> STR_10(17), STR_9(5), STR_8(10), STR_7(14), 
  7848 ;;		 -> STR_6(6), STR_5(10), STR_4(10), STR_3(11), 
  7849 ;;		 -> STR_2(13), STR_1(10), 
  7850 ;; Auto vars:     Size  Location     Type
  7851 ;;  ap              2  119[BANK0 ] PTR void [1]
  7852 ;;		 -> ?_printf(2), 
  7853 ;;  ret             2    0        int 
  7854 ;; Return value:  Size  Location     Type
  7855 ;;                  2  109[BANK0 ] int 
  7856 ;; Registers used:
  7857 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7858 ;; Tracked objects:
  7859 ;;		On entry : 0/0
  7860 ;;		On exit  : 0/0
  7861 ;;		Unchanged: 0/0
  7862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7863 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7864 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7866 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7867 ;;Total ram usage:       12 bytes
  7868 ;; Hardware stack levels used:    1
  7869 ;; Hardware stack levels required when called:   13
  7870 ;; This function calls:
  7871 ;;		_vfprintf
  7872 ;; This function is called by:
  7873 ;;		_actuators_main
  7874 ;;		_stepper2
  7875 ;;		_stepper2_back
  7876 ;;		_full_drive
  7877 ;;		_print_echo
  7878 ;;		_ultrasonic_main
  7879 ;;		_number_deploy
  7880 ;;		_UI_main
  7881 ;;		_main
  7882 ;; This function uses a non-reentrant model
  7883 ;;
  7884                           
  7885                           	psect	text21
  7886  0039F4                     __ptext21:
  7887                           	opt callstack 0
  7888  0039F4                     _printf:
  7889                           	opt callstack 16
  7890                           
  7891                           ;incstack = 0
  7892  0039F4  0EEF               	movlw	low (?_printf+2)
  7893  0039F6  0100               	movlb	0	; () banked
  7894  0039F8  6FF7               	movwf	printf@ap& (0+255),b
  7895  0039FA  0E00               	movlw	high (?_printf+2)
  7896  0039FC  6FF8               	movwf	(printf@ap+1)& (0+255),b
  7897                           
  7898                           ; BSR set to: 0
  7899  0039FE  0E00               	movlw	0
  7900  003A00  6FE5               	movwf	vfprintf@fp& (0+255),b
  7901  003A02  0E00               	movlw	0
  7902  003A04  6FE6               	movwf	(vfprintf@fp+1)& (0+255),b
  7903  003A06  C0ED  F0E7         	movff	printf@fmt,vfprintf@fmt
  7904  003A0A  C0EE  F0E8         	movff	printf@fmt+1,vfprintf@fmt+1
  7905  003A0E  0EF7               	movlw	low printf@ap
  7906  003A10  6FE9               	movwf	vfprintf@ap& (0+255),b
  7907  003A12  0E00               	movlw	high printf@ap
  7908  003A14  6FEA               	movwf	(vfprintf@ap+1)& (0+255),b
  7909  003A16  EC09  F01B         	call	_vfprintf	;wreg free
  7910  003A1A  0012               	return		;funcret
  7911  003A1C                     __end_of_printf:
  7912                           	opt callstack 0
  7913                           
  7914 ;; *************** function _vfprintf *****************
  7915 ;; Defined at:
  7916 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7917 ;; Parameters:    Size  Location     Type
  7918 ;;  fp              2  101[BANK0 ] PTR struct _IO_FILE
  7919 ;;		 -> NULL(0), 
  7920 ;;  fmt             2  103[BANK0 ] PTR const unsigned char 
  7921 ;;		 -> STR_58(10), STR_57(11), STR_56(11), STR_55(12), 
  7922 ;;		 -> STR_54(12), STR_53(10), STR_52(13), STR_51(8), 
  7923 ;;		 -> STR_50(17), STR_49(15), STR_48(15), STR_47(12), 
  7924 ;;		 -> STR_46(17), STR_45(12), STR_44(15), STR_43(18), 
  7925 ;;		 -> STR_42(17), STR_41(12), STR_40(15), STR_39(18), 
  7926 ;;		 -> STR_38(17), STR_37(14), STR_36(14), STR_35(17), 
  7927 ;;		 -> STR_34(3), STR_33(9), STR_32(16), STR_31(3), 
  7928 ;;		 -> STR_30(9), STR_29(17), STR_28(15), STR_27(15), 
  7929 ;;		 -> STR_26(12), STR_25(10), STR_24(15), STR_23(12), 
  7930 ;;		 -> STR_22(10), STR_21(16), STR_20(12), STR_19(3), 
  7931 ;;		 -> STR_18(11), STR_17(10), STR_16(17), STR_15(10), 
  7932 ;;		 -> STR_14(16), STR_13(10), STR_12(16), STR_11(10), 
  7933 ;;		 -> STR_10(17), STR_9(5), STR_8(10), STR_7(14), 
  7934 ;;		 -> STR_6(6), STR_5(10), STR_4(10), STR_3(11), 
  7935 ;;		 -> STR_2(13), STR_1(10), 
  7936 ;;  ap              2  105[BANK0 ] PTR PTR void 
  7937 ;;		 -> printf@ap(2), 
  7938 ;; Auto vars:     Size  Location     Type
  7939 ;;  cfmt            2  107[BANK0 ] PTR unsigned char 
  7940 ;;		 -> STR_58(10), STR_57(11), STR_56(11), STR_55(12), 
  7941 ;;		 -> STR_54(12), STR_53(10), STR_52(13), STR_51(8), 
  7942 ;;		 -> STR_50(17), STR_49(15), STR_48(15), STR_47(12), 
  7943 ;;		 -> STR_46(17), STR_45(12), STR_44(15), STR_43(18), 
  7944 ;;		 -> STR_42(17), STR_41(12), STR_40(15), STR_39(18), 
  7945 ;;		 -> STR_38(17), STR_37(14), STR_36(14), STR_35(17), 
  7946 ;;		 -> STR_34(3), STR_33(9), STR_32(16), STR_31(3), 
  7947 ;;		 -> STR_30(9), STR_29(17), STR_28(15), STR_27(15), 
  7948 ;;		 -> STR_26(12), STR_25(10), STR_24(15), STR_23(12), 
  7949 ;;		 -> STR_22(10), STR_21(16), STR_20(12), STR_19(3), 
  7950 ;;		 -> STR_18(11), STR_17(10), STR_16(17), STR_15(10), 
  7951 ;;		 -> STR_14(16), STR_13(10), STR_12(16), STR_11(10), 
  7952 ;;		 -> STR_10(17), STR_9(5), STR_8(10), STR_7(14), 
  7953 ;;		 -> STR_6(6), STR_5(10), STR_4(10), STR_3(11), 
  7954 ;;		 -> STR_2(13), STR_1(10), 
  7955 ;; Return value:  Size  Location     Type
  7956 ;;                  2  101[BANK0 ] int 
  7957 ;; Registers used:
  7958 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7959 ;; Tracked objects:
  7960 ;;		On entry : 0/0
  7961 ;;		On exit  : 0/0
  7962 ;;		Unchanged: 0/0
  7963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7964 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7965 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7967 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7968 ;;Total ram usage:        8 bytes
  7969 ;; Hardware stack levels used:    1
  7970 ;; Hardware stack levels required when called:   12
  7971 ;; This function calls:
  7972 ;;		_vfpfcnvrt
  7973 ;; This function is called by:
  7974 ;;		_printf
  7975 ;; This function uses a non-reentrant model
  7976 ;;
  7977                           
  7978                           	psect	text22
  7979  003612                     __ptext22:
  7980                           	opt callstack 0
  7981  003612                     _vfprintf:
  7982                           	opt callstack 16
  7983                           
  7984                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  7985                           
  7986                           ;incstack = 0
  7987  003612  C0E7  F0EB         	movff	vfprintf@fmt,vfprintf@cfmt
  7988  003616  C0E8  F0EC         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  7989                           
  7990                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  7991  00361A  0E00               	movlw	0
  7992  00361C  6E49               	movwf	_nout+1,c
  7993  00361E  0E00               	movlw	0
  7994  003620  6E48               	movwf	_nout,c
  7995                           
  7996                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  7997  003622  D014               	goto	l6639
  7998  003624                     l6637:
  7999                           
  8000                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  8001  003624  C0E5  F0C6         	movff	vfprintf@fp,vfpfcnvrt@fp
  8002  003628  C0E6  F0C7         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  8003  00362C  0EEB               	movlw	low vfprintf@cfmt
  8004  00362E  0100               	movlb	0	; () banked
  8005  003630  6FC8               	movwf	vfpfcnvrt@fmt& (0+255),b
  8006  003632  0E00               	movlw	high vfprintf@cfmt
  8007  003634  6FC9               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  8008  003636  C0E9  F0CA         	movff	vfprintf@ap,vfpfcnvrt@ap
  8009  00363A  C0EA  F0CB         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  8010  00363E  EC06  F009         	call	_vfpfcnvrt	;wreg free
  8011  003642  0100               	movlb	0	; () banked
  8012  003644  51C6               	movf	?_vfpfcnvrt& (0+255),w,b
  8013  003646  2648               	addwf	_nout,f,c
  8014  003648  51C7               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  8015  00364A  2249               	addwfc	_nout+1,f,c
  8016  00364C                     l6639:
  8017                           
  8018                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  8019  00364C  C0EB  FFF6         	movff	vfprintf@cfmt,tblptrl
  8020  003650  C0EC  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  8021  003654                     	if	0	;tblptru may be non-zero
  8022  003654                     	endif
  8023  003654                     	if	0	;tblptru may be non-zero
  8024  003654                     	endif
  8025  003654  0008               	tblrd		*
  8026  003656  50F5               	movf	tablat,w,c
  8027  003658  0900               	iorlw	0
  8028  00365A  A4D8               	btfss	status,2,c
  8029  00365C  D7E3               	goto	l6637
  8030                           
  8031                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  8032  00365E  C048  F0E5         	movff	_nout,?_vfprintf
  8033  003662  C049  F0E6         	movff	_nout+1,?_vfprintf+1
  8034  003666  0012               	return		;funcret
  8035  003668                     __end_of_vfprintf:
  8036                           	opt callstack 0
  8037                           
  8038 ;; *************** function _vfpfcnvrt *****************
  8039 ;; Defined at:
  8040 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8041 ;; Parameters:    Size  Location     Type
  8042 ;;  fp              2   70[BANK0 ] PTR struct _IO_FILE
  8043 ;;		 -> NULL(0), 
  8044 ;;  fmt             2   72[BANK0 ] PTR PTR unsigned char 
  8045 ;;		 -> vfprintf@cfmt(2), 
  8046 ;;  ap              2   74[BANK0 ] PTR PTR void 
  8047 ;;		 -> printf@ap(2), 
  8048 ;; Auto vars:     Size  Location     Type
  8049 ;;  llu             8   88[BANK0 ] unsigned long long 
  8050 ;;  ll              8   80[BANK0 ] long long 
  8051 ;;  f               4    0        long long 
  8052 ;;  vp              3    0        PTR void 
  8053 ;;  ct              3    0        unsigned char [3]
  8054 ;;  cp              3    0        PTR unsigned char 
  8055 ;;  done            2   97[BANK0 ] int 
  8056 ;;  i               2    0        int 
  8057 ;;  c               1   96[BANK0 ] unsigned char 
  8058 ;; Return value:  Size  Location     Type
  8059 ;;                  2   70[BANK0 ] int 
  8060 ;; Registers used:
  8061 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8062 ;; Tracked objects:
  8063 ;;		On entry : 0/0
  8064 ;;		On exit  : 0/0
  8065 ;;		Unchanged: 0/0
  8066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8067 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8068 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8069 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8070 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8071 ;;Total ram usage:       31 bytes
  8072 ;; Hardware stack levels used:    1
  8073 ;; Hardware stack levels required when called:   11
  8074 ;; This function calls:
  8075 ;;		_atoi
  8076 ;;		_dtoa
  8077 ;;		_fputc
  8078 ;;		_isdigit
  8079 ;;		_xtoa
  8080 ;; This function is called by:
  8081 ;;		_vfprintf
  8082 ;; This function uses a non-reentrant model
  8083 ;;
  8084                           
  8085                           	psect	text23
  8086  00120C                     __ptext23:
  8087                           	opt callstack 0
  8088  00120C                     _vfpfcnvrt:
  8089                           	opt callstack 16
  8090                           
  8091                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  8092                           
  8093                           ;incstack = 0
  8094  00120C  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8095  001210  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8096  001214  CFDE FFF6          	movff	postinc2,tblptrl
  8097  001218  CFDD FFF7          	movff	postdec2,tblptrh
  8098  00121C                     	if	0	;tblptru may be non-zero
  8099  00121C                     	endif
  8100  00121C                     	if	0	;tblptru may be non-zero
  8101  00121C                     	endif
  8102  00121C  0008               	tblrd		*
  8103  00121E  50F5               	movf	tablat,w,c
  8104  001220  0A25               	xorlw	37
  8105  001222  A4D8               	btfss	status,2,c
  8106  001224  D1AD               	goto	l6613
  8107                           
  8108                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  8109  001226  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8110  00122A  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8111  00122E  2ADE               	incf	postinc2,f,c
  8112  001230  0E00               	movlw	0
  8113  001232  22DD               	addwfc	postdec2,f,c
  8114                           
  8115                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  8116  001234  0E00               	movlw	0
  8117  001236  6E4B               	movwf	_width+1,c
  8118  001238  0E00               	movlw	0
  8119  00123A  6E4A               	movwf	_width,c
  8120  00123C  C04A  F04E         	movff	_width,_flags
  8121  001240  C04B  F04F         	movff	_width+1,_flags+1
  8122                           
  8123                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  8124  001244  684C               	setf	_prec,c
  8125  001246  684D               	setf	_prec+1,c
  8126                           
  8127                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  8128  001248  0E00               	movlw	0
  8129  00124A  0100               	movlb	0	; () banked
  8130  00124C  6FE2               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  8131  00124E  0E00               	movlw	0
  8132  001250  D014               	goto	L5
  8133  001252                     l6525:
  8134                           
  8135                           ; BSR set to: 0
  8136                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  8137  001252  804E               	bsf	_flags,0,c
  8138  001254                     l6527:
  8139                           
  8140                           ; BSR set to: 0
  8141                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  8142  001254  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8143  001258  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8144  00125C  2ADE               	incf	postinc2,f,c
  8145  00125E  0E00               	movlw	0
  8146  001260  22DD               	addwfc	postdec2,f,c
  8147                           
  8148                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  8149  001262  D02E               	goto	l6551
  8150  001264                     l6529:
  8151                           
  8152                           ; BSR set to: 0
  8153                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  8154  001264  824E               	bsf	_flags,1,c
  8155  001266  D7F6               	goto	l6527
  8156  001268                     l6533:
  8157                           
  8158                           ; BSR set to: 0
  8159                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  8160  001268  844E               	bsf	_flags,2,c
  8161  00126A  D7F4               	goto	l6527
  8162  00126C                     l6537:
  8163                           
  8164                           ; BSR set to: 0
  8165                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  8166  00126C  864E               	bsf	_flags,3,c
  8167  00126E  D7F2               	goto	l6527
  8168  001270                     l6541:
  8169                           
  8170                           ; BSR set to: 0
  8171                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  8172  001270  884E               	bsf	_flags,4,c
  8173  001272  D7F0               	goto	l6527
  8174  001274                     l6545:
  8175                           
  8176                           ; BSR set to: 0
  8177                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  8178  001274  0E00               	movlw	0
  8179  001276  6FE2               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  8180  001278  0E01               	movlw	1
  8181  00127A                     L5:
  8182  00127A  6FE1               	movwf	vfpfcnvrt@done& (0+255),b
  8183                           
  8184                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  8185  00127C  D021               	goto	l6551
  8186  00127E                     l6549:
  8187                           
  8188                           ; BSR set to: 0
  8189  00127E  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8190  001282  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8191  001286  CFDE FFF6          	movff	postinc2,tblptrl
  8192  00128A  CFDD FFF7          	movff	postdec2,tblptrh
  8193  00128E                     	if	0	;tblptru may be non-zero
  8194  00128E                     	endif
  8195  00128E                     	if	0	;tblptru may be non-zero
  8196  00128E                     	endif
  8197  00128E  0008               	tblrd		*
  8198  001290  50F5               	movf	tablat,w,c
  8199  001292  6FCC               	movwf	??_vfpfcnvrt& (0+255),b
  8200  001294  6BCD               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  8201                           
  8202                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8203                           ; Switch size 1, requested type "simple"
  8204                           ; Number of cases is 1, Range of values is 0 to 0
  8205                           ; switch strategies available:
  8206                           ; Name         Instructions Cycles
  8207                           ; simple_byte            4     3 (average)
  8208                           ;	Chosen strategy is simple_byte
  8209  001296  51CD               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  8210  001298  0A00               	xorlw	0	; case 0
  8211  00129A  A4D8               	btfss	status,2,c
  8212  00129C  D7EB               	goto	l6545
  8213                           
  8214                           ; BSR set to: 0
  8215                           ; Switch size 1, requested type "simple"
  8216                           ; Number of cases is 5, Range of values is 32 to 48
  8217                           ; switch strategies available:
  8218                           ; Name         Instructions Cycles
  8219                           ; simple_byte           16     9 (average)
  8220                           ;	Chosen strategy is simple_byte
  8221  00129E  51CC               	movf	??_vfpfcnvrt& (0+255),w,b
  8222  0012A0  0A20               	xorlw	32	; case 32
  8223  0012A2  B4D8               	btfsc	status,2,c
  8224  0012A4  D7E3               	goto	l6537
  8225  0012A6  0A03               	xorlw	3	; case 35
  8226  0012A8  B4D8               	btfsc	status,2,c
  8227  0012AA  D7E2               	goto	l6541
  8228  0012AC  0A08               	xorlw	8	; case 43
  8229  0012AE  B4D8               	btfsc	status,2,c
  8230  0012B0  D7DB               	goto	l6533
  8231  0012B2  0A06               	xorlw	6	; case 45
  8232  0012B4  B4D8               	btfsc	status,2,c
  8233  0012B6  D7CD               	goto	l6525
  8234  0012B8  0A1D               	xorlw	29	; case 48
  8235  0012BA  B4D8               	btfsc	status,2,c
  8236  0012BC  D7D3               	goto	l6529
  8237  0012BE  D7DA               	goto	l6545
  8238  0012C0                     l6551:
  8239                           
  8240                           ; BSR set to: 0
  8241                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  8242  0012C0  51E1               	movf	vfpfcnvrt@done& (0+255),w,b
  8243  0012C2  11E2               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  8244  0012C4  B4D8               	btfsc	status,2,c
  8245  0012C6  D7DB               	goto	l6549
  8246                           
  8247                           ; BSR set to: 0
  8248                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  8249  0012C8  B04E               	btfsc	_flags,0,c
  8250                           
  8251                           ; BSR set to: 0
  8252                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  8253  0012CA  924E               	bcf	_flags,1,c
  8254                           
  8255                           ; BSR set to: 0
  8256                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  8257  0012CC  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8258  0012D0  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8259  0012D4  CFDE FFF6          	movff	postinc2,tblptrl
  8260  0012D8  CFDD FFF7          	movff	postdec2,tblptrh
  8261  0012DC                     	if	0	;tblptru may be non-zero
  8262  0012DC                     	endif
  8263  0012DC                     	if	0	;tblptru may be non-zero
  8264  0012DC                     	endif
  8265  0012DC  0008               	tblrd		*
  8266  0012DE  50F5               	movf	tablat,w,c
  8267  0012E0  0A2A               	xorlw	42
  8268  0012E2  A4D8               	btfss	status,2,c
  8269  0012E4  D023               	goto	l6563
  8270                           
  8271                           ; BSR set to: 0
  8272                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  8273  0012E6  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8274  0012EA  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8275  0012EE  2ADE               	incf	postinc2,f,c
  8276  0012F0  0E00               	movlw	0
  8277  0012F2  22DD               	addwfc	postdec2,f,c
  8278                           
  8279                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  8280  0012F4  C0CA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8281  0012F8  C0CB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8282  0012FC  CFDF F0CC          	movff	indf2,??_vfpfcnvrt
  8283  001300  0E02               	movlw	2
  8284  001302  26DE               	addwf	postinc2,f,c
  8285  001304  CFDF F0CD          	movff	indf2,??_vfpfcnvrt+1
  8286  001308  0E00               	movlw	0
  8287  00130A  22DD               	addwfc	postdec2,f,c
  8288  00130C  C0CC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8289  001310  C0CD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8290  001314  CFDE F04A          	movff	postinc2,_width
  8291  001318  CFDD F04B          	movff	postdec2,_width+1
  8292                           
  8293                           ; BSR set to: 0
  8294                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  8295  00131C  AE4B               	btfss	_width+1,7,c
  8296  00131E  D040               	goto	u7190
  8297                           
  8298                           ; BSR set to: 0
  8299                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  8300  001320  804E               	bsf	_flags,0,c
  8301                           
  8302                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  8303  001322  6C4A               	negf	_width,c
  8304  001324  1E4B               	comf	_width+1,f,c
  8305  001326  B0D8               	btfsc	status,0,c
  8306  001328  2A4B               	incf	_width+1,f,c
  8307  00132A  D03A               	goto	u7190
  8308  00132C                     l6563:
  8309                           
  8310                           ; BSR set to: 0
  8311                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  8312  00132C  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8313  001330  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8314  001334  CFDE F087          	movff	postinc2,atoi@s
  8315  001338  CFDD F088          	movff	postdec2,atoi@s+1
  8316  00133C  EC9D  F013         	call	_atoi	;wreg free
  8317  001340  C087  F04A         	movff	?_atoi,_width
  8318  001344  C088  F04B         	movff	?_atoi+1,_width+1
  8319                           
  8320                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  8321  001348  D007               	goto	l6567
  8322  00134A                     l6565:
  8323                           
  8324                           ; BSR set to: 0
  8325                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  8326  00134A  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8327  00134E  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8328  001352  2ADE               	incf	postinc2,f,c
  8329  001354  0E00               	movlw	0
  8330  001356  22DD               	addwfc	postdec2,f,c
  8331  001358                     l6567:
  8332  001358  0ED0               	movlw	208
  8333  00135A  0100               	movlb	0	; () banked
  8334  00135C  6FCC               	movwf	??_vfpfcnvrt& (0+255),b
  8335  00135E  0EFF               	movlw	255
  8336  001360  6FCD               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  8337  001362  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8338  001366  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8339  00136A  CFDE FFF6          	movff	postinc2,tblptrl
  8340  00136E  CFDD FFF7          	movff	postdec2,tblptrh
  8341  001372                     	if	0	;tblptru may be non-zero
  8342  001372                     	endif
  8343  001372                     	if	0	;tblptru may be non-zero
  8344  001372                     	endif
  8345  001372  0008               	tblrd		*
  8346  001374  50F5               	movf	tablat,w,c
  8347  001376  6FCE               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  8348  001378  6BCF               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  8349  00137A  51CC               	movf	??_vfpfcnvrt& (0+255),w,b
  8350  00137C  27CE               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  8351  00137E  51CD               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  8352  001380  23CF               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  8353  001382  51CF               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  8354  001384  E106               	bnz	u7170
  8355  001386  0E0A               	movlw	10
  8356  001388  5DCE               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  8357  00138A  B0D8               	btfsc	status,0,c
  8358  00138C  D002               	goto	u7170
  8359  00138E  0E01               	movlw	1
  8360  001390  D001               	goto	u7180
  8361  001392                     u7170:
  8362  001392  0E00               	movlw	0
  8363  001394                     u7180:
  8364  001394  6FE3               	movwf	_vfpfcnvrt$1125& (0+255),b
  8365  001396  6BE4               	clrf	(_vfpfcnvrt$1125+1)& (0+255),b
  8366                           
  8367                           ; BSR set to: 0
  8368  001398  51E3               	movf	_vfpfcnvrt$1125& (0+255),w,b
  8369  00139A  11E4               	iorwf	(_vfpfcnvrt$1125+1)& (0+255),w,b
  8370  00139C  A4D8               	btfss	status,2,c
  8371  00139E  D7D5               	goto	l6565
  8372  0013A0                     u7190:
  8373                           
  8374                           ; BSR set to: 0
  8375                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  8376  0013A0  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8377  0013A4  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8378  0013A8  CFDE FFF6          	movff	postinc2,tblptrl
  8379  0013AC  CFDD FFF7          	movff	postdec2,tblptrh
  8380  0013B0                     	if	0	;tblptru may be non-zero
  8381  0013B0                     	endif
  8382  0013B0                     	if	0	;tblptru may be non-zero
  8383  0013B0                     	endif
  8384  0013B0  0008               	tblrd		*
  8385  0013B2  50F5               	movf	tablat,w,c
  8386  0013B4  0A64               	xorlw	100
  8387  0013B6  B4D8               	btfsc	status,2,c
  8388  0013B8  D00D               	goto	u7210
  8389                           
  8390                           ; BSR set to: 0
  8391  0013BA  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8392  0013BE  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8393  0013C2  CFDE FFF6          	movff	postinc2,tblptrl
  8394  0013C6  CFDD FFF7          	movff	postdec2,tblptrh
  8395  0013CA                     	if	0	;tblptru may be non-zero
  8396  0013CA                     	endif
  8397  0013CA                     	if	0	;tblptru may be non-zero
  8398  0013CA                     	endif
  8399  0013CA  0008               	tblrd		*
  8400  0013CC  50F5               	movf	tablat,w,c
  8401  0013CE  0A69               	xorlw	105
  8402  0013D0  A4D8               	btfss	status,2,c
  8403  0013D2  D03F               	goto	l6583
  8404  0013D4                     u7210:
  8405                           
  8406                           ; BSR set to: 0
  8407                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  8408  0013D4  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8409  0013D8  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8410  0013DC  2ADE               	incf	postinc2,f,c
  8411  0013DE  0E00               	movlw	0
  8412  0013E0  22DD               	addwfc	postdec2,f,c
  8413                           
  8414                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  8415  0013E2  C0CA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8416  0013E6  C0CB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8417  0013EA  CFDF F0CC          	movff	indf2,??_vfpfcnvrt
  8418  0013EE  0E02               	movlw	2
  8419  0013F0  26DE               	addwf	postinc2,f,c
  8420  0013F2  CFDF F0CD          	movff	indf2,??_vfpfcnvrt+1
  8421  0013F6  0E00               	movlw	0
  8422  0013F8  22DD               	addwfc	postdec2,f,c
  8423  0013FA  C0CC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8424  0013FE  C0CD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8425  001402  CFDE F0D0          	movff	postinc2,vfpfcnvrt@ll
  8426  001406  CFDD F0D1          	movff	postdec2,vfpfcnvrt@ll+1
  8427  00140A  0E00               	movlw	0
  8428  00140C  BFD1               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  8429  00140E  0EFF               	movlw	-1
  8430  001410  6FD2               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  8431  001412  6FD3               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  8432  001414  6FD4               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  8433  001416  6FD5               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  8434  001418  6FD6               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  8435  00141A  6FD7               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  8436                           
  8437                           ; BSR set to: 0
  8438                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  8439  00141C  C0C6  F09F         	movff	vfpfcnvrt@fp,dtoa@fp
  8440  001420  C0C7  F0A0         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  8441  001424  C0D0  F0A1         	movff	vfpfcnvrt@ll,dtoa@d
  8442  001428  C0D1  F0A2         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  8443  00142C  C0D2  F0A3         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  8444  001430  C0D3  F0A4         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  8445  001434  C0D4  F0A5         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  8446  001438  C0D5  F0A6         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  8447  00143C  C0D6  F0A7         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  8448  001440  C0D7  F0A8         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  8449  001444  ECB7  F00D         	call	_dtoa	;wreg free
  8450  001448  C09F  F0C6         	movff	?_dtoa,?_vfpfcnvrt
  8451  00144C  C0A0  F0C7         	movff	?_dtoa+1,?_vfpfcnvrt+1
  8452  001450  0012               	return	
  8453  001452                     l6583:
  8454                           
  8455                           ; BSR set to: 0
  8456                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  8457  001452  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8458  001456  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8459  00145A  CFDE FFF6          	movff	postinc2,tblptrl
  8460  00145E  CFDD FFF7          	movff	postdec2,tblptrh
  8461  001462                     	if	0	;tblptru may be non-zero
  8462  001462                     	endif
  8463  001462                     	if	0	;tblptru may be non-zero
  8464  001462                     	endif
  8465  001462  0008               	tblrd		*
  8466  001464  50F5               	movf	tablat,w,c
  8467  001466  0A78               	xorlw	120
  8468  001468  B4D8               	btfsc	status,2,c
  8469  00146A  D00D               	goto	u7230
  8470                           
  8471                           ; BSR set to: 0
  8472  00146C  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8473  001470  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8474  001474  CFDE FFF6          	movff	postinc2,tblptrl
  8475  001478  CFDD FFF7          	movff	postdec2,tblptrh
  8476  00147C                     	if	0	;tblptru may be non-zero
  8477  00147C                     	endif
  8478  00147C                     	if	0	;tblptru may be non-zero
  8479  00147C                     	endif
  8480  00147C  0008               	tblrd		*
  8481  00147E  50F5               	movf	tablat,w,c
  8482  001480  0A58               	xorlw	88
  8483  001482  A4D8               	btfss	status,2,c
  8484  001484  D04D               	goto	l6597
  8485  001486                     u7230:
  8486                           
  8487                           ; BSR set to: 0
  8488                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  8489  001486  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8490  00148A  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8491  00148E  CFDE FFF6          	movff	postinc2,tblptrl
  8492  001492  CFDD FFF7          	movff	postdec2,tblptrh
  8493  001496                     	if	0	;tblptru may be non-zero
  8494  001496                     	endif
  8495  001496                     	if	0	;tblptru may be non-zero
  8496  001496                     	endif
  8497  001496  0008               	tblrd		*
  8498  001498  CFF5 F0E0          	movff	tablat,vfpfcnvrt@c
  8499                           
  8500                           ; BSR set to: 0
  8501                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  8502  00149C  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8503  0014A0  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8504  0014A4  2ADE               	incf	postinc2,f,c
  8505  0014A6  0E00               	movlw	0
  8506  0014A8  22DD               	addwfc	postdec2,f,c
  8507                           
  8508                           ; BSR set to: 0
  8509                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  8510  0014AA  C0CA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8511  0014AE  C0CB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8512  0014B2  CFDF F0CC          	movff	indf2,??_vfpfcnvrt
  8513  0014B6  0E02               	movlw	2
  8514  0014B8  26DE               	addwf	postinc2,f,c
  8515  0014BA  CFDF F0CD          	movff	indf2,??_vfpfcnvrt+1
  8516  0014BE  0E00               	movlw	0
  8517  0014C0  22DD               	addwfc	postdec2,f,c
  8518  0014C2  C0CC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8519  0014C6  C0CD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8520  0014CA  CFDE F0CE          	movff	postinc2,??_vfpfcnvrt+2
  8521  0014CE  CFDD F0CF          	movff	postdec2,??_vfpfcnvrt+3
  8522  0014D2  C0CE  F0D8         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  8523  0014D6  C0CF  F0D9         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  8524  0014DA  6BDA               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  8525  0014DC  6BDB               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  8526  0014DE  6BDC               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  8527  0014E0  6BDD               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  8528  0014E2  6BDE               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  8529  0014E4  6BDF               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  8530                           
  8531                           ; BSR set to: 0
  8532                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
  8533  0014E6  C0C6  F09F         	movff	vfpfcnvrt@fp,xtoa@fp
  8534  0014EA  C0C7  F0A0         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  8535  0014EE  C0D8  F0A1         	movff	vfpfcnvrt@llu,xtoa@d
  8536  0014F2  C0D9  F0A2         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  8537  0014F6  C0DA  F0A3         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  8538  0014FA  C0DB  F0A4         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  8539  0014FE  C0DC  F0A5         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  8540  001502  C0DD  F0A6         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  8541  001506  C0DE  F0A7         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  8542  00150A  C0DF  F0A8         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  8543  00150E  C0E0  F0A9         	movff	vfpfcnvrt@c,xtoa@x
  8544  001512  ECDB  F00E         	call	_xtoa	;wreg free
  8545  001516  C09F  F0C6         	movff	?_xtoa,?_vfpfcnvrt
  8546  00151A  C0A0  F0C7         	movff	?_xtoa+1,?_vfpfcnvrt+1
  8547  00151E  0012               	return	
  8548  001520                     l6597:
  8549                           
  8550                           ; BSR set to: 0
  8551                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  8552  001520  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8553  001524  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8554  001528  CFDE FFF6          	movff	postinc2,tblptrl
  8555  00152C  CFDD FFF7          	movff	postdec2,tblptrh
  8556  001530                     	if	0	;tblptru may be non-zero
  8557  001530                     	endif
  8558  001530                     	if	0	;tblptru may be non-zero
  8559  001530                     	endif
  8560  001530  0008               	tblrd		*
  8561  001532  50F5               	movf	tablat,w,c
  8562  001534  0A25               	xorlw	37
  8563  001536  A4D8               	btfss	status,2,c
  8564  001538  D017               	goto	l6607
  8565                           
  8566                           ; BSR set to: 0
  8567                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  8568  00153A  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8569  00153E  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8570  001542  2ADE               	incf	postinc2,f,c
  8571  001544  0E00               	movlw	0
  8572  001546  22DD               	addwfc	postdec2,f,c
  8573                           
  8574                           ; BSR set to: 0
  8575                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  8576  001548  0E00               	movlw	0
  8577  00154A  6F85               	movwf	(fputc@c+1)& (0+255),b
  8578  00154C  0E25               	movlw	37
  8579  00154E  6F84               	movwf	fputc@c& (0+255),b
  8580  001550  C0C6  F086         	movff	vfpfcnvrt@fp,fputc@fp
  8581  001554  C0C7  F087         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  8582  001558  EC18  F01A         	call	_fputc	;wreg free
  8583  00155C                     l6603:
  8584                           
  8585                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  8586  00155C  0E00               	movlw	0
  8587  00155E  0100               	movlb	0	; () banked
  8588  001560  6FC7               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  8589  001562  0E01               	movlw	1
  8590  001564  6FC6               	movwf	?_vfpfcnvrt& (0+255),b
  8591  001566  0012               	return	
  8592  001568                     l6607:
  8593                           
  8594                           ; BSR set to: 0
  8595                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  8596  001568  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8597  00156C  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8598  001570  2ADE               	incf	postinc2,f,c
  8599  001572  0E00               	movlw	0
  8600  001574  22DD               	addwfc	postdec2,f,c
  8601                           
  8602                           ; BSR set to: 0
  8603                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  8604  001576  0E00               	movlw	0
  8605  001578  6FC7               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  8606  00157A  0E00               	movlw	0
  8607  00157C  6FC6               	movwf	?_vfpfcnvrt& (0+255),b
  8608  00157E  0012               	return	
  8609  001580                     l6613:
  8610                           
  8611                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  8612  001580  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8613  001584  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8614  001588  CFDE FFF6          	movff	postinc2,tblptrl
  8615  00158C  CFDD FFF7          	movff	postdec2,tblptrh
  8616  001590                     	if	0	;tblptru may be non-zero
  8617  001590                     	endif
  8618  001590                     	if	0	;tblptru may be non-zero
  8619  001590                     	endif
  8620  001590  0008               	tblrd		*
  8621  001592  50F5               	movf	tablat,w,c
  8622  001594  0100               	movlb	0	; () banked
  8623  001596  6F84               	movwf	fputc@c& (0+255),b
  8624  001598  6B85               	clrf	(fputc@c+1)& (0+255),b
  8625  00159A  C0C6  F086         	movff	vfpfcnvrt@fp,fputc@fp
  8626  00159E  C0C7  F087         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  8627  0015A2  EC18  F01A         	call	_fputc	;wreg free
  8628                           
  8629                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  8630  0015A6  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8631  0015AA  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8632  0015AE  2ADE               	incf	postinc2,f,c
  8633  0015B0  0E00               	movlw	0
  8634  0015B2  22DD               	addwfc	postdec2,f,c
  8635  0015B4  D7D3               	goto	l6603
  8636  0015B6                     __end_of_vfpfcnvrt:
  8637                           	opt callstack 0
  8638                           
  8639 ;; *************** function _xtoa *****************
  8640 ;; Defined at:
  8641 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8642 ;; Parameters:    Size  Location     Type
  8643 ;;  fp              2   31[BANK0 ] PTR struct _IO_FILE
  8644 ;;		 -> NULL(0), 
  8645 ;;  d               8   33[BANK0 ] unsigned long long 
  8646 ;;  x               1   41[BANK0 ] unsigned char 
  8647 ;; Auto vars:     Size  Location     Type
  8648 ;;  n               8   58[BANK0 ] unsigned long long 
  8649 ;;  c               2   68[BANK0 ] int 
  8650 ;;  i               2   66[BANK0 ] int 
  8651 ;;  w               2   56[BANK0 ] int 
  8652 ;;  p               2   54[BANK0 ] int 
  8653 ;; Return value:  Size  Location     Type
  8654 ;;                  2   31[BANK0 ] int 
  8655 ;; Registers used:
  8656 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8657 ;; Tracked objects:
  8658 ;;		On entry : 0/0
  8659 ;;		On exit  : 0/0
  8660 ;;		Unchanged: 0/0
  8661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8662 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8663 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8664 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8665 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8666 ;;Total ram usage:       39 bytes
  8667 ;; Hardware stack levels used:    1
  8668 ;; Hardware stack levels required when called:   10
  8669 ;; This function calls:
  8670 ;;		_isalpha
  8671 ;;		_isupper
  8672 ;;		_pad
  8673 ;;		_toupper
  8674 ;; This function is called by:
  8675 ;;		_vfpfcnvrt
  8676 ;; This function uses a non-reentrant model
  8677 ;;
  8678                           
  8679                           	psect	text24
  8680  001DB6                     __ptext24:
  8681                           	opt callstack 0
  8682  001DB6                     _xtoa:
  8683                           	opt callstack 16
  8684                           
  8685                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  8686                           
  8687                           ;incstack = 0
  8688  001DB6  AE4D               	btfss	_prec+1,7,c
  8689                           
  8690                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  8691  001DB8  924E               	bcf	_flags,1,c
  8692                           
  8693                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  8694  001DBA  BE4D               	btfsc	_prec+1,7,c
  8695  001DBC  D005               	goto	u6890
  8696  001DBE  504D               	movf	_prec+1,w,c
  8697  001DC0  E109               	bnz	l619
  8698  001DC2  044C               	decf	_prec,w,c
  8699  001DC4  B0D8               	btfsc	status,0,c
  8700  001DC6  D006               	goto	l619
  8701  001DC8                     u6890:
  8702  001DC8  0E00               	movlw	0
  8703  001DCA  0100               	movlb	0	; () banked
  8704  001DCC  6FB7               	movwf	(xtoa@p+1)& (0+255),b
  8705  001DCE  0E01               	movlw	1
  8706  001DD0  6FB6               	movwf	xtoa@p& (0+255),b
  8707  001DD2  D004               	goto	l621
  8708  001DD4                     l619:
  8709  001DD4  C04C  F0B6         	movff	_prec,xtoa@p
  8710  001DD8  C04D  F0B7         	movff	_prec+1,xtoa@p+1
  8711  001DDC                     l621:
  8712                           
  8713                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  8714  001DDC  C04A  F0B8         	movff	_width,xtoa@w
  8715  001DE0  C04B  F0B9         	movff	_width+1,xtoa@w+1
  8716                           
  8717                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  8718  001DE4  A84E               	btfss	_flags,4,c
  8719  001DE6  D005               	goto	l6417
  8720                           
  8721                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  8722  001DE8  0100               	movlb	0	; () banked
  8723  001DEA  0EFE               	movlw	254
  8724  001DEC  27B8               	addwf	xtoa@w& (0+255),f,b
  8725  001DEE  0EFF               	movlw	255
  8726  001DF0  23B9               	addwfc	(xtoa@w+1)& (0+255),f,b
  8727  001DF2                     l6417:
  8728                           
  8729                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  8730  001DF2  C0A1  F0BA         	movff	xtoa@d,xtoa@n
  8731  001DF6  C0A2  F0BB         	movff	xtoa@d+1,xtoa@n+1
  8732  001DFA  C0A3  F0BC         	movff	xtoa@d+2,xtoa@n+2
  8733  001DFE  C0A4  F0BD         	movff	xtoa@d+3,xtoa@n+3
  8734  001E02  C0A5  F0BE         	movff	xtoa@d+4,xtoa@n+4
  8735  001E06  C0A6  F0BF         	movff	xtoa@d+5,xtoa@n+5
  8736  001E0A  C0A7  F0C0         	movff	xtoa@d+6,xtoa@n+6
  8737  001E0E  C0A8  F0C1         	movff	xtoa@d+7,xtoa@n+7
  8738                           
  8739                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  8740  001E12  0E00               	movlw	0
  8741  001E14  0100               	movlb	0	; () banked
  8742  001E16  6FC3               	movwf	(xtoa@i+1)& (0+255),b
  8743  001E18  0E1F               	movlw	31
  8744  001E1A  6FC2               	movwf	xtoa@i& (0+255),b
  8745                           
  8746                           ; BSR set to: 0
  8747                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  8748  001E1C  0E00               	movlw	0
  8749  001E1E  0102               	movlb	2	; () banked
  8750  001E20  6F7E               	movwf	(_dbuf+31)& (0+255),b
  8751                           
  8752                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8753  001E22  D094               	goto	l6453
  8754  001E24                     l6423:
  8755                           
  8756                           ; BSR set to: 0
  8757                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  8758  001E24  07C2               	decf	xtoa@i& (0+255),f,b
  8759  001E26  A0D8               	btfss	status,0,c
  8760  001E28  07C3               	decf	(xtoa@i+1)& (0+255),f,b
  8761                           
  8762                           ; BSR set to: 0
  8763                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  8764  001E2A  0E0F               	movlw	15
  8765  001E2C  15BA               	andwf	xtoa@n& (0+255),w,b
  8766  001E2E  6FC4               	movwf	xtoa@c& (0+255),b
  8767  001E30  6BC5               	clrf	(xtoa@c+1)& (0+255),b
  8768                           
  8769                           ; BSR set to: 0
  8770                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  8771  001E32  BFC5               	btfsc	(xtoa@c+1)& (0+255),7,b
  8772  001E34  D008               	goto	l6431
  8773  001E36  51C5               	movf	(xtoa@c+1)& (0+255),w,b
  8774  001E38  E104               	bnz	u6910
  8775  001E3A  0E0A               	movlw	10
  8776  001E3C  5DC4               	subwf	xtoa@c& (0+255),w,b
  8777  001E3E  A0D8               	btfss	status,0,c
  8778  001E40  D002               	goto	l6431
  8779  001E42                     u6910:
  8780                           
  8781                           ; BSR set to: 0
  8782  001E42  0E57               	movlw	87
  8783  001E44  D001               	goto	L6
  8784  001E46                     l6431:
  8785                           
  8786                           ; BSR set to: 0
  8787  001E46  0E30               	movlw	48
  8788  001E48                     L6:
  8789  001E48  25C4               	addwf	xtoa@c& (0+255),w,b
  8790  001E4A  6FC4               	movwf	xtoa@c& (0+255),b
  8791  001E4C  0E00               	movlw	0
  8792  001E4E  21C5               	addwfc	(xtoa@c+1)& (0+255),w,b
  8793  001E50  6FC5               	movwf	(xtoa@c+1)& (0+255),b
  8794                           
  8795                           ; BSR set to: 0
  8796                           
  8797                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 646:       
      +                            if ((0 ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsi
      +                          gned)(c)|32)-'a') < 26)) {
  8798  001E52  0EBF               	movlw	191
  8799  001E54  6FAA               	movwf	??_xtoa& (0+255),b
  8800  001E56  0EFF               	movlw	255
  8801  001E58  6FAB               	movwf	(??_xtoa+1)& (0+255),b
  8802  001E5A  51A9               	movf	xtoa@x& (0+255),w,b
  8803  001E5C  6FAC               	movwf	(??_xtoa+2)& (0+255),b
  8804  001E5E  6BAD               	clrf	(??_xtoa+3)& (0+255),b
  8805  001E60  51AA               	movf	??_xtoa& (0+255),w,b
  8806  001E62  27AC               	addwf	(??_xtoa+2)& (0+255),f,b
  8807  001E64  51AB               	movf	(??_xtoa+1)& (0+255),w,b
  8808  001E66  23AD               	addwfc	(??_xtoa+3)& (0+255),f,b
  8809  001E68  51AD               	movf	(??_xtoa+3)& (0+255),w,b
  8810  001E6A  E106               	bnz	u6920
  8811  001E6C  0E1A               	movlw	26
  8812  001E6E  5DAC               	subwf	(??_xtoa+2)& (0+255),w,b
  8813  001E70  B0D8               	btfsc	status,0,c
  8814  001E72  D002               	goto	u6920
  8815  001E74  0E01               	movlw	1
  8816  001E76  D001               	goto	u6930
  8817  001E78                     u6920:
  8818  001E78  0E00               	movlw	0
  8819  001E7A                     u6930:
  8820  001E7A  6FB2               	movwf	_xtoa$1110& (0+255),b
  8821  001E7C  6BB3               	clrf	(_xtoa$1110+1)& (0+255),b
  8822                           
  8823                           ; BSR set to: 0
  8824  001E7E  51B2               	movf	_xtoa$1110& (0+255),w,b
  8825  001E80  11B3               	iorwf	(_xtoa$1110+1)& (0+255),w,b
  8826  001E82  B4D8               	btfsc	status,2,c
  8827  001E84  D027               	goto	l6445
  8828                           
  8829                           ; BSR set to: 0
  8830  001E86  0E9F               	movlw	159
  8831  001E88  6FAA               	movwf	??_xtoa& (0+255),b
  8832  001E8A  0EFF               	movlw	255
  8833  001E8C  6FAB               	movwf	(??_xtoa+1)& (0+255),b
  8834  001E8E  0E20               	movlw	32
  8835  001E90  11C4               	iorwf	xtoa@c& (0+255),w,b
  8836  001E92  6FAC               	movwf	(??_xtoa+2)& (0+255),b
  8837  001E94  0E00               	movlw	0
  8838  001E96  11C5               	iorwf	(xtoa@c+1)& (0+255),w,b
  8839  001E98  6FAD               	movwf	(??_xtoa+3)& (0+255),b
  8840  001E9A  51AA               	movf	??_xtoa& (0+255),w,b
  8841  001E9C  27AC               	addwf	(??_xtoa+2)& (0+255),f,b
  8842  001E9E  51AB               	movf	(??_xtoa+1)& (0+255),w,b
  8843  001EA0  23AD               	addwfc	(??_xtoa+3)& (0+255),f,b
  8844  001EA2  51AD               	movf	(??_xtoa+3)& (0+255),w,b
  8845  001EA4  E106               	bnz	u6950
  8846  001EA6  0E1A               	movlw	26
  8847  001EA8  5DAC               	subwf	(??_xtoa+2)& (0+255),w,b
  8848  001EAA  B0D8               	btfsc	status,0,c
  8849  001EAC  D002               	goto	u6950
  8850  001EAE  0E01               	movlw	1
  8851  001EB0  D001               	goto	u6960
  8852  001EB2                     u6950:
  8853  001EB2  0E00               	movlw	0
  8854  001EB4                     u6960:
  8855  001EB4  6FB4               	movwf	_xtoa$1111& (0+255),b
  8856  001EB6  6BB5               	clrf	(_xtoa$1111+1)& (0+255),b
  8857                           
  8858                           ; BSR set to: 0
  8859  001EB8  51B4               	movf	_xtoa$1111& (0+255),w,b
  8860  001EBA  11B5               	iorwf	(_xtoa$1111+1)& (0+255),w,b
  8861  001EBC  B4D8               	btfsc	status,2,c
  8862  001EBE  D00A               	goto	l6445
  8863                           
  8864                           ; BSR set to: 0
  8865                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  8866  001EC0  C0C4  F086         	movff	xtoa@c,toupper@c
  8867  001EC4  C0C5  F087         	movff	xtoa@c+1,toupper@c+1
  8868  001EC8  EC85  F01B         	call	_toupper	;wreg free
  8869  001ECC  C086  F0C4         	movff	?_toupper,xtoa@c
  8870  001ED0  C087  F0C5         	movff	?_toupper+1,xtoa@c+1
  8871  001ED4                     l6445:
  8872                           
  8873                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  8874  001ED4  0E5F               	movlw	low _dbuf
  8875  001ED6  0100               	movlb	0	; () banked
  8876  001ED8  25C2               	addwf	xtoa@i& (0+255),w,b
  8877  001EDA  6ED9               	movwf	fsr2l,c
  8878  001EDC  0E02               	movlw	high _dbuf
  8879  001EDE  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
  8880  001EE0  6EDA               	movwf	fsr2h,c
  8881  001EE2  C0C4  FFDF         	movff	xtoa@c,indf2
  8882                           
  8883                           ; BSR set to: 0
  8884                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  8885  001EE6  07B6               	decf	xtoa@p& (0+255),f,b
  8886  001EE8  A0D8               	btfss	status,0,c
  8887  001EEA  07B7               	decf	(xtoa@p+1)& (0+255),f,b
  8888                           
  8889                           ; BSR set to: 0
  8890                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  8891  001EEC  07B8               	decf	xtoa@w& (0+255),f,b
  8892  001EEE  A0D8               	btfss	status,0,c
  8893  001EF0  07B9               	decf	(xtoa@w+1)& (0+255),f,b
  8894                           
  8895                           ; BSR set to: 0
  8896                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  8897  001EF2  C0BA  F0AA         	movff	xtoa@n,??_xtoa
  8898  001EF6  C0BB  F0AB         	movff	xtoa@n+1,??_xtoa+1
  8899  001EFA  C0BC  F0AC         	movff	xtoa@n+2,??_xtoa+2
  8900  001EFE  C0BD  F0AD         	movff	xtoa@n+3,??_xtoa+3
  8901  001F02  C0BE  F0AE         	movff	xtoa@n+4,??_xtoa+4
  8902  001F06  C0BF  F0AF         	movff	xtoa@n+5,??_xtoa+5
  8903  001F0A  C0C0  F0B0         	movff	xtoa@n+6,??_xtoa+6
  8904  001F0E  C0C1  F0B1         	movff	xtoa@n+7,??_xtoa+7
  8905  001F12  0E05               	movlw	5
  8906  001F14  D009               	goto	u6980
  8907  001F16                     u6985:
  8908  001F16  90D8               	bcf	status,0,c
  8909  001F18  33B1               	rrcf	(??_xtoa+7)& (0+255),f,b
  8910  001F1A  33B0               	rrcf	(??_xtoa+6)& (0+255),f,b
  8911  001F1C  33AF               	rrcf	(??_xtoa+5)& (0+255),f,b
  8912  001F1E  33AE               	rrcf	(??_xtoa+4)& (0+255),f,b
  8913  001F20  33AD               	rrcf	(??_xtoa+3)& (0+255),f,b
  8914  001F22  33AC               	rrcf	(??_xtoa+2)& (0+255),f,b
  8915  001F24  33AB               	rrcf	(??_xtoa+1)& (0+255),f,b
  8916  001F26  33AA               	rrcf	??_xtoa& (0+255),f,b
  8917  001F28                     u6980:
  8918  001F28  2EE8               	decfsz	wreg,f,c
  8919  001F2A  D7F5               	goto	u6985
  8920  001F2C  C0AA  F0BA         	movff	??_xtoa,xtoa@n
  8921  001F30  C0AB  F0BB         	movff	??_xtoa+1,xtoa@n+1
  8922  001F34  C0AC  F0BC         	movff	??_xtoa+2,xtoa@n+2
  8923  001F38  C0AD  F0BD         	movff	??_xtoa+3,xtoa@n+3
  8924  001F3C  C0AE  F0BE         	movff	??_xtoa+4,xtoa@n+4
  8925  001F40  C0AF  F0BF         	movff	??_xtoa+5,xtoa@n+5
  8926  001F44  C0B0  F0C0         	movff	??_xtoa+6,xtoa@n+6
  8927  001F48  C0B1  F0C1         	movff	??_xtoa+7,xtoa@n+7
  8928  001F4C                     l6453:
  8929                           
  8930                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8931  001F4C  0100               	movlb	0	; () banked
  8932  001F4E  BFC3               	btfsc	(xtoa@i+1)& (0+255),7,b
  8933  001F50  D020               	goto	u7030
  8934  001F52  51C3               	movf	(xtoa@i+1)& (0+255),w,b
  8935  001F54  E104               	bnz	u6990
  8936  001F56  0E02               	movlw	2
  8937  001F58  5DC2               	subwf	xtoa@i& (0+255),w,b
  8938  001F5A  A0D8               	btfss	status,0,c
  8939  001F5C  D01A               	goto	u7030
  8940  001F5E                     u6990:
  8941                           
  8942                           ; BSR set to: 0
  8943  001F5E  51BA               	movf	xtoa@n& (0+255),w,b
  8944  001F60  11BB               	iorwf	(xtoa@n+1)& (0+255),w,b
  8945  001F62  11BC               	iorwf	(xtoa@n+2)& (0+255),w,b
  8946  001F64  11BD               	iorwf	(xtoa@n+3)& (0+255),w,b
  8947  001F66  11BE               	iorwf	(xtoa@n+4)& (0+255),w,b
  8948  001F68  11BF               	iorwf	(xtoa@n+5)& (0+255),w,b
  8949  001F6A  11C0               	iorwf	(xtoa@n+6)& (0+255),w,b
  8950  001F6C  11C1               	iorwf	(xtoa@n+7)& (0+255),w,b
  8951  001F6E  A4D8               	btfss	status,2,c
  8952  001F70  D759               	goto	l6423
  8953                           
  8954                           ; BSR set to: 0
  8955  001F72  BFB7               	btfsc	(xtoa@p+1)& (0+255),7,b
  8956  001F74  D005               	goto	u7010
  8957  001F76  51B7               	movf	(xtoa@p+1)& (0+255),w,b
  8958  001F78  E102               	bnz	u7011
  8959  001F7A  05B6               	decf	xtoa@p& (0+255),w,b
  8960  001F7C  B0D8               	btfsc	status,0,c
  8961  001F7E                     u7011:
  8962  001F7E  D752               	goto	l6423
  8963  001F80                     u7010:
  8964                           
  8965                           ; BSR set to: 0
  8966  001F80  BFB9               	btfsc	(xtoa@w+1)& (0+255),7,b
  8967  001F82  D007               	goto	u7030
  8968  001F84  51B9               	movf	(xtoa@w+1)& (0+255),w,b
  8969  001F86  E103               	bnz	u7020
  8970  001F88  05B8               	decf	xtoa@w& (0+255),w,b
  8971  001F8A  A0D8               	btfss	status,0,c
  8972  001F8C  D002               	goto	u7030
  8973  001F8E                     u7020:
  8974                           
  8975                           ; BSR set to: 0
  8976  001F8E  B24E               	btfsc	_flags,1,c
  8977  001F90  D749               	goto	l6423
  8978  001F92                     u7030:
  8979                           
  8980                           ; BSR set to: 0
  8981                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  8982  001F92  A84E               	btfss	_flags,4,c
  8983  001F94  D016               	goto	l6469
  8984                           
  8985                           ; BSR set to: 0
  8986                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  8987  001F96  07C2               	decf	xtoa@i& (0+255),f,b
  8988  001F98  A0D8               	btfss	status,0,c
  8989  001F9A  07C3               	decf	(xtoa@i+1)& (0+255),f,b
  8990                           
  8991                           ; BSR set to: 0
  8992                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  8993  001F9C  0E5F               	movlw	low _dbuf
  8994  001F9E  25C2               	addwf	xtoa@i& (0+255),w,b
  8995  001FA0  6ED9               	movwf	fsr2l,c
  8996  001FA2  0E02               	movlw	high _dbuf
  8997  001FA4  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
  8998  001FA6  6EDA               	movwf	fsr2h,c
  8999  001FA8  C0A9  FFDF         	movff	xtoa@x,indf2
  9000                           
  9001                           ; BSR set to: 0
  9002                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  9003  001FAC  07C2               	decf	xtoa@i& (0+255),f,b
  9004  001FAE  A0D8               	btfss	status,0,c
  9005  001FB0  07C3               	decf	(xtoa@i+1)& (0+255),f,b
  9006                           
  9007                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  9008  001FB2  0E5F               	movlw	low _dbuf
  9009  001FB4  25C2               	addwf	xtoa@i& (0+255),w,b
  9010  001FB6  6ED9               	movwf	fsr2l,c
  9011  001FB8  0E02               	movlw	high _dbuf
  9012  001FBA  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
  9013  001FBC  6EDA               	movwf	fsr2h,c
  9014  001FBE  0E30               	movlw	48
  9015  001FC0  6EDF               	movwf	indf2,c
  9016  001FC2                     l6469:
  9017                           
  9018                           ; BSR set to: 0
  9019                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  9020  001FC2  C09F  F094         	movff	xtoa@fp,pad@fp
  9021  001FC6  C0A0  F095         	movff	xtoa@fp+1,pad@fp+1
  9022  001FCA  0E5F               	movlw	low _dbuf
  9023  001FCC  25C2               	addwf	xtoa@i& (0+255),w,b
  9024  001FCE  6F96               	movwf	pad@buf& (0+255),b
  9025  001FD0  0E02               	movlw	high _dbuf
  9026  001FD2  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
  9027  001FD4  6F97               	movwf	(pad@buf+1)& (0+255),b
  9028  001FD6  C0B8  F098         	movff	xtoa@w,pad@p
  9029  001FDA  C0B9  F099         	movff	xtoa@w+1,pad@p+1
  9030  001FDE  EC41  F018         	call	_pad	;wreg free
  9031  001FE2  C094  F09F         	movff	?_pad,?_xtoa
  9032  001FE6  C095  F0A0         	movff	?_pad+1,?_xtoa+1
  9033  001FEA  0012               	return		;funcret
  9034  001FEC                     __end_of_xtoa:
  9035                           	opt callstack 0
  9036                           
  9037 ;; *************** function _toupper *****************
  9038 ;; Defined at:
  9039 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  9040 ;; Parameters:    Size  Location     Type
  9041 ;;  c               2    6[BANK0 ] int 
  9042 ;; Auto vars:     Size  Location     Type
  9043 ;;		None
  9044 ;; Return value:  Size  Location     Type
  9045 ;;                  2    6[BANK0 ] int 
  9046 ;; Registers used:
  9047 ;;		wreg, status,2, status,0
  9048 ;; Tracked objects:
  9049 ;;		On entry : 0/0
  9050 ;;		On exit  : 0/0
  9051 ;;		Unchanged: 0/0
  9052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9053 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9054 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9055 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9056 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9057 ;;Total ram usage:        8 bytes
  9058 ;; Hardware stack levels used:    1
  9059 ;; Hardware stack levels required when called:    4
  9060 ;; This function calls:
  9061 ;;		_islower
  9062 ;; This function is called by:
  9063 ;;		_xtoa
  9064 ;; This function uses a non-reentrant model
  9065 ;;
  9066                           
  9067                           	psect	text25
  9068  00370A                     __ptext25:
  9069                           	opt callstack 0
  9070  00370A                     _toupper:
  9071                           	opt callstack 21
  9072                           
  9073                           ;incstack = 0
  9074  00370A  0E9F               	movlw	159
  9075  00370C  0100               	movlb	0	; () banked
  9076  00370E  6F88               	movwf	??_toupper& (0+255),b
  9077  003710  0EFF               	movlw	255
  9078  003712  6F89               	movwf	(??_toupper+1)& (0+255),b
  9079  003714  C086  F08A         	movff	toupper@c,??_toupper+2
  9080  003718  C087  F08B         	movff	toupper@c+1,??_toupper+3
  9081  00371C  5188               	movf	??_toupper& (0+255),w,b
  9082  00371E  278A               	addwf	(??_toupper+2)& (0+255),f,b
  9083  003720  5189               	movf	(??_toupper+1)& (0+255),w,b
  9084  003722  238B               	addwfc	(??_toupper+3)& (0+255),f,b
  9085  003724  518B               	movf	(??_toupper+3)& (0+255),w,b
  9086  003726  E106               	bnz	u6530
  9087  003728  0E1A               	movlw	26
  9088  00372A  5D8A               	subwf	(??_toupper+2)& (0+255),w,b
  9089  00372C  B0D8               	btfsc	status,0,c
  9090  00372E  D002               	goto	u6530
  9091  003730  0E01               	movlw	1
  9092  003732  D001               	goto	u6540
  9093  003734                     u6530:
  9094  003734  0E00               	movlw	0
  9095  003736                     u6540:
  9096  003736  6F8C               	movwf	_toupper$1675& (0+255),b
  9097  003738  6B8D               	clrf	(_toupper$1675+1)& (0+255),b
  9098                           
  9099                           ; BSR set to: 0
  9100  00373A  518C               	movf	_toupper$1675& (0+255),w,b
  9101  00373C  118D               	iorwf	(_toupper$1675+1)& (0+255),w,b
  9102  00373E  B4D8               	btfsc	status,2,c
  9103  003740  D005               	goto	l1459
  9104                           
  9105                           ; BSR set to: 0
  9106  003742  0E5F               	movlw	95
  9107  003744  1586               	andwf	toupper@c& (0+255),w,b
  9108  003746  6F86               	movwf	?_toupper& (0+255),b
  9109  003748  6B87               	clrf	(?_toupper+1)& (0+255),b
  9110  00374A  0012               	return	
  9111  00374C                     l1459:
  9112                           
  9113                           ; BSR set to: 0
  9114  00374C  C086  F086         	movff	toupper@c,?_toupper
  9115  003750  C087  F087         	movff	toupper@c+1,?_toupper+1
  9116                           
  9117                           ; BSR set to: 0
  9118  003754  0012               	return		;funcret
  9119  003756                     __end_of_toupper:
  9120                           	opt callstack 0
  9121                           
  9122 ;; *************** function _islower *****************
  9123 ;; Defined at:
  9124 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  9125 ;; Parameters:    Size  Location     Type
  9126 ;;  c               2    0[BANK0 ] int 
  9127 ;; Auto vars:     Size  Location     Type
  9128 ;;		None
  9129 ;; Return value:  Size  Location     Type
  9130 ;;                  2    0[BANK0 ] int 
  9131 ;; Registers used:
  9132 ;;		wreg, status,2, status,0
  9133 ;; Tracked objects:
  9134 ;;		On entry : 0/0
  9135 ;;		On exit  : 0/0
  9136 ;;		Unchanged: 0/0
  9137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9138 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9140 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9141 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9142 ;;Total ram usage:        6 bytes
  9143 ;; Hardware stack levels used:    1
  9144 ;; Hardware stack levels required when called:    3
  9145 ;; This function calls:
  9146 ;;		Nothing
  9147 ;; This function is called by:
  9148 ;;		_toupper
  9149 ;; This function uses a non-reentrant model
  9150 ;;
  9151                           
  9152                           	psect	text26
  9153  0038AC                     __ptext26:
  9154                           	opt callstack 0
  9155  0038AC                     _islower:
  9156                           	opt callstack 21
  9157                           
  9158                           ; BSR set to: 0
  9159                           ;incstack = 0
  9160  0038AC  0E9F               	movlw	159
  9161  0038AE  0100               	movlb	0	; () banked
  9162  0038B0  6F82               	movwf	??_islower& (0+255),b
  9163  0038B2  0EFF               	movlw	255
  9164  0038B4  6F83               	movwf	(??_islower+1)& (0+255),b
  9165  0038B6  C080  F084         	movff	islower@c,??_islower+2
  9166  0038BA  C081  F085         	movff	islower@c+1,??_islower+3
  9167  0038BE  5182               	movf	??_islower& (0+255),w,b
  9168  0038C0  2784               	addwf	(??_islower+2)& (0+255),f,b
  9169  0038C2  5183               	movf	(??_islower+1)& (0+255),w,b
  9170  0038C4  2385               	addwfc	(??_islower+3)& (0+255),f,b
  9171  0038C6  5185               	movf	(??_islower+3)& (0+255),w,b
  9172  0038C8  E106               	bnz	u6420
  9173  0038CA  0E1A               	movlw	26
  9174  0038CC  5D84               	subwf	(??_islower+2)& (0+255),w,b
  9175  0038CE  B0D8               	btfsc	status,0,c
  9176  0038D0  D002               	goto	u6420
  9177  0038D2  0E01               	movlw	1
  9178  0038D4  D001               	goto	u6430
  9179  0038D6                     u6420:
  9180  0038D6  0E00               	movlw	0
  9181  0038D8                     u6430:
  9182  0038D8  6F80               	movwf	?_islower& (0+255),b
  9183  0038DA  6B81               	clrf	(?_islower+1)& (0+255),b
  9184                           
  9185                           ; BSR set to: 0
  9186  0038DC  0012               	return		;funcret
  9187  0038DE                     __end_of_islower:
  9188                           	opt callstack 0
  9189                           
  9190 ;; *************** function _isupper *****************
  9191 ;; Defined at:
  9192 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  9193 ;; Parameters:    Size  Location     Type
  9194 ;;  c               2    0[BANK0 ] int 
  9195 ;; Auto vars:     Size  Location     Type
  9196 ;;		None
  9197 ;; Return value:  Size  Location     Type
  9198 ;;                  2    0[BANK0 ] int 
  9199 ;; Registers used:
  9200 ;;		wreg, status,2, status,0
  9201 ;; Tracked objects:
  9202 ;;		On entry : 0/0
  9203 ;;		On exit  : 0/0
  9204 ;;		Unchanged: 0/0
  9205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9206 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9208 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9209 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9210 ;;Total ram usage:        6 bytes
  9211 ;; Hardware stack levels used:    1
  9212 ;; Hardware stack levels required when called:    3
  9213 ;; This function calls:
  9214 ;;		Nothing
  9215 ;; This function is called by:
  9216 ;;		_xtoa
  9217 ;; This function uses a non-reentrant model
  9218 ;;
  9219                           
  9220                           	psect	text27
  9221  0038DE                     __ptext27:
  9222                           	opt callstack 0
  9223  0038DE                     _isupper:
  9224                           	opt callstack 22
  9225                           
  9226                           ; BSR set to: 0
  9227                           ;incstack = 0
  9228  0038DE  0EBF               	movlw	191
  9229  0038E0  0100               	movlb	0	; () banked
  9230  0038E2  6F82               	movwf	??_isupper& (0+255),b
  9231  0038E4  0EFF               	movlw	255
  9232  0038E6  6F83               	movwf	(??_isupper+1)& (0+255),b
  9233  0038E8  C080  F084         	movff	isupper@c,??_isupper+2
  9234  0038EC  C081  F085         	movff	isupper@c+1,??_isupper+3
  9235  0038F0  5182               	movf	??_isupper& (0+255),w,b
  9236  0038F2  2784               	addwf	(??_isupper+2)& (0+255),f,b
  9237  0038F4  5183               	movf	(??_isupper+1)& (0+255),w,b
  9238  0038F6  2385               	addwfc	(??_isupper+3)& (0+255),f,b
  9239  0038F8  5185               	movf	(??_isupper+3)& (0+255),w,b
  9240  0038FA  E106               	bnz	u6490
  9241  0038FC  0E1A               	movlw	26
  9242  0038FE  5D84               	subwf	(??_isupper+2)& (0+255),w,b
  9243  003900  B0D8               	btfsc	status,0,c
  9244  003902  D002               	goto	u6490
  9245  003904  0E01               	movlw	1
  9246  003906  D001               	goto	u6500
  9247  003908                     u6490:
  9248  003908  0E00               	movlw	0
  9249  00390A                     u6500:
  9250  00390A  6F80               	movwf	?_isupper& (0+255),b
  9251  00390C  6B81               	clrf	(?_isupper+1)& (0+255),b
  9252                           
  9253                           ; BSR set to: 0
  9254  00390E  0012               	return		;funcret
  9255  003910                     __end_of_isupper:
  9256                           	opt callstack 0
  9257                           
  9258 ;; *************** function _isalpha *****************
  9259 ;; Defined at:
  9260 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  9261 ;; Parameters:    Size  Location     Type
  9262 ;;  c               2    0[BANK0 ] int 
  9263 ;; Auto vars:     Size  Location     Type
  9264 ;;		None
  9265 ;; Return value:  Size  Location     Type
  9266 ;;                  2    0[BANK0 ] int 
  9267 ;; Registers used:
  9268 ;;		wreg, status,2, status,0
  9269 ;; Tracked objects:
  9270 ;;		On entry : 0/0
  9271 ;;		On exit  : 0/0
  9272 ;;		Unchanged: 0/0
  9273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9274 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9276 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9277 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9278 ;;Total ram usage:        6 bytes
  9279 ;; Hardware stack levels used:    1
  9280 ;; Hardware stack levels required when called:    3
  9281 ;; This function calls:
  9282 ;;		Nothing
  9283 ;; This function is called by:
  9284 ;;		_xtoa
  9285 ;; This function uses a non-reentrant model
  9286 ;;
  9287                           
  9288                           	psect	text28
  9289  003810                     __ptext28:
  9290                           	opt callstack 0
  9291  003810                     _isalpha:
  9292                           	opt callstack 22
  9293                           
  9294                           ; BSR set to: 0
  9295                           ;incstack = 0
  9296  003810  0E9F               	movlw	159
  9297  003812  0100               	movlb	0	; () banked
  9298  003814  6F82               	movwf	??_isalpha& (0+255),b
  9299  003816  0EFF               	movlw	255
  9300  003818  6F83               	movwf	(??_isalpha+1)& (0+255),b
  9301  00381A  0E20               	movlw	32
  9302  00381C  1180               	iorwf	isalpha@c& (0+255),w,b
  9303  00381E  6F84               	movwf	(??_isalpha+2)& (0+255),b
  9304  003820  0E00               	movlw	0
  9305  003822  1181               	iorwf	(isalpha@c+1)& (0+255),w,b
  9306  003824  6F85               	movwf	(??_isalpha+3)& (0+255),b
  9307  003826  5182               	movf	??_isalpha& (0+255),w,b
  9308  003828  2784               	addwf	(??_isalpha+2)& (0+255),f,b
  9309  00382A  5183               	movf	(??_isalpha+1)& (0+255),w,b
  9310  00382C  2385               	addwfc	(??_isalpha+3)& (0+255),f,b
  9311  00382E  5185               	movf	(??_isalpha+3)& (0+255),w,b
  9312  003830  E106               	bnz	u6510
  9313  003832  0E1A               	movlw	26
  9314  003834  5D84               	subwf	(??_isalpha+2)& (0+255),w,b
  9315  003836  B0D8               	btfsc	status,0,c
  9316  003838  D002               	goto	u6510
  9317  00383A  0E01               	movlw	1
  9318  00383C  D001               	goto	u6520
  9319  00383E                     u6510:
  9320  00383E  0E00               	movlw	0
  9321  003840                     u6520:
  9322  003840  6F80               	movwf	?_isalpha& (0+255),b
  9323  003842  6B81               	clrf	(?_isalpha+1)& (0+255),b
  9324                           
  9325                           ; BSR set to: 0
  9326  003844  0012               	return		;funcret
  9327  003846                     __end_of_isalpha:
  9328                           	opt callstack 0
  9329                           
  9330 ;; *************** function _dtoa *****************
  9331 ;; Defined at:
  9332 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9333 ;; Parameters:    Size  Location     Type
  9334 ;;  fp              2   31[BANK0 ] PTR struct _IO_FILE
  9335 ;;		 -> NULL(0), 
  9336 ;;  d               8   33[BANK0 ] long long 
  9337 ;; Auto vars:     Size  Location     Type
  9338 ;;  n               8   57[BANK0 ] long long 
  9339 ;;  i               2   65[BANK0 ] int 
  9340 ;;  s               2   55[BANK0 ] int 
  9341 ;;  w               2   53[BANK0 ] int 
  9342 ;;  p               2   51[BANK0 ] int 
  9343 ;; Return value:  Size  Location     Type
  9344 ;;                  2   31[BANK0 ] int 
  9345 ;; Registers used:
  9346 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9347 ;; Tracked objects:
  9348 ;;		On entry : 0/0
  9349 ;;		On exit  : 0/0
  9350 ;;		Unchanged: 0/0
  9351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9352 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9353 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9354 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9355 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9356 ;;Total ram usage:       36 bytes
  9357 ;; Hardware stack levels used:    1
  9358 ;; Hardware stack levels required when called:   10
  9359 ;; This function calls:
  9360 ;;		___aodiv
  9361 ;;		___aomod
  9362 ;;		_abs
  9363 ;;		_pad
  9364 ;; This function is called by:
  9365 ;;		_vfpfcnvrt
  9366 ;; This function uses a non-reentrant model
  9367 ;;
  9368                           
  9369                           	psect	text29
  9370  001B6E                     __ptext29:
  9371                           	opt callstack 0
  9372  001B6E                     _dtoa:
  9373                           	opt callstack 16
  9374                           
  9375                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  9376                           
  9377                           ; BSR set to: 0
  9378                           ;incstack = 0
  9379  001B6E  C0A1  F0B9         	movff	dtoa@d,dtoa@n
  9380  001B72  C0A2  F0BA         	movff	dtoa@d+1,dtoa@n+1
  9381  001B76  C0A3  F0BB         	movff	dtoa@d+2,dtoa@n+2
  9382  001B7A  C0A4  F0BC         	movff	dtoa@d+3,dtoa@n+3
  9383  001B7E  C0A5  F0BD         	movff	dtoa@d+4,dtoa@n+4
  9384  001B82  C0A6  F0BE         	movff	dtoa@d+5,dtoa@n+5
  9385  001B86  C0A7  F0BF         	movff	dtoa@d+6,dtoa@n+6
  9386  001B8A  C0A8  F0C0         	movff	dtoa@d+7,dtoa@n+7
  9387                           
  9388                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  9389  001B8E  0100               	movlb	0	; () banked
  9390  001B90  AFC0               	btfss	(dtoa@n+7)& (0+255),7,b
  9391  001B92  D002               	goto	u6730
  9392  001B94  0E01               	movlw	1
  9393  001B96  D001               	goto	u6740
  9394  001B98                     u6730:
  9395  001B98  0E00               	movlw	0
  9396  001B9A                     u6740:
  9397  001B9A  6FB7               	movwf	dtoa@s& (0+255),b
  9398  001B9C  6BB8               	clrf	(dtoa@s+1)& (0+255),b
  9399                           
  9400                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  9401  001B9E  51B7               	movf	dtoa@s& (0+255),w,b
  9402  001BA0  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
  9403  001BA2  B4D8               	btfsc	status,2,c
  9404  001BA4  D010               	goto	l6351
  9405                           
  9406                           ; BSR set to: 0
  9407                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  9408  001BA6  1FC0               	comf	(dtoa@n+7)& (0+255),f,b
  9409  001BA8  1FBF               	comf	(dtoa@n+6)& (0+255),f,b
  9410  001BAA  1FBE               	comf	(dtoa@n+5)& (0+255),f,b
  9411  001BAC  1FBD               	comf	(dtoa@n+4)& (0+255),f,b
  9412  001BAE  1FBC               	comf	(dtoa@n+3)& (0+255),f,b
  9413  001BB0  1FBB               	comf	(dtoa@n+2)& (0+255),f,b
  9414  001BB2  1FBA               	comf	(dtoa@n+1)& (0+255),f,b
  9415  001BB4  6DB9               	negf	dtoa@n& (0+255),b
  9416  001BB6  0E00               	movlw	0
  9417  001BB8  23BA               	addwfc	(dtoa@n+1)& (0+255),f,b
  9418  001BBA  23BB               	addwfc	(dtoa@n+2)& (0+255),f,b
  9419  001BBC  23BC               	addwfc	(dtoa@n+3)& (0+255),f,b
  9420  001BBE  23BD               	addwfc	(dtoa@n+4)& (0+255),f,b
  9421  001BC0  23BE               	addwfc	(dtoa@n+5)& (0+255),f,b
  9422  001BC2  23BF               	addwfc	(dtoa@n+6)& (0+255),f,b
  9423  001BC4  23C0               	addwfc	(dtoa@n+7)& (0+255),f,b
  9424  001BC6                     l6351:
  9425                           
  9426                           ; BSR set to: 0
  9427                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  9428  001BC6  AE4D               	btfss	_prec+1,7,c
  9429                           
  9430                           ; BSR set to: 0
  9431                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  9432  001BC8  924E               	bcf	_flags,1,c
  9433                           
  9434                           ; BSR set to: 0
  9435                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  9436  001BCA  BE4D               	btfsc	_prec+1,7,c
  9437  001BCC  D005               	goto	u6770
  9438  001BCE  504D               	movf	_prec+1,w,c
  9439  001BD0  E108               	bnz	l594
  9440  001BD2  044C               	decf	_prec,w,c
  9441  001BD4  B0D8               	btfsc	status,0,c
  9442  001BD6  D005               	goto	l594
  9443  001BD8                     u6770:
  9444                           
  9445                           ; BSR set to: 0
  9446  001BD8  0E00               	movlw	0
  9447  001BDA  6FB4               	movwf	(dtoa@p+1)& (0+255),b
  9448  001BDC  0E01               	movlw	1
  9449  001BDE  6FB3               	movwf	dtoa@p& (0+255),b
  9450  001BE0  D004               	goto	l596
  9451  001BE2                     l594:
  9452                           
  9453                           ; BSR set to: 0
  9454  001BE2  C04C  F0B3         	movff	_prec,dtoa@p
  9455  001BE6  C04D  F0B4         	movff	_prec+1,dtoa@p+1
  9456  001BEA                     l596:
  9457                           
  9458                           ; BSR set to: 0
  9459                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  9460  001BEA  C04A  F0B5         	movff	_width,dtoa@w
  9461  001BEE  C04B  F0B6         	movff	_width+1,dtoa@w+1
  9462                           
  9463                           ; BSR set to: 0
  9464                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  9465  001BF2  51B7               	movf	dtoa@s& (0+255),w,b
  9466  001BF4  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
  9467  001BF6  A4D8               	btfss	status,2,c
  9468  001BF8  D002               	goto	u6790
  9469                           
  9470                           ; BSR set to: 0
  9471  001BFA  A44E               	btfss	_flags,2,c
  9472  001BFC  D003               	goto	l6365
  9473  001BFE                     u6790:
  9474                           
  9475                           ; BSR set to: 0
  9476                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  9477  001BFE  07B5               	decf	dtoa@w& (0+255),f,b
  9478  001C00  A0D8               	btfss	status,0,c
  9479  001C02  07B6               	decf	(dtoa@w+1)& (0+255),f,b
  9480  001C04                     l6365:
  9481                           
  9482                           ; BSR set to: 0
  9483                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  9484  001C04  0E00               	movlw	0
  9485  001C06  6FC2               	movwf	(dtoa@i+1)& (0+255),b
  9486  001C08  0E1F               	movlw	31
  9487  001C0A  6FC1               	movwf	dtoa@i& (0+255),b
  9488                           
  9489                           ; BSR set to: 0
  9490                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  9491  001C0C  0E00               	movlw	0
  9492  001C0E  0102               	movlb	2	; () banked
  9493  001C10  6F7E               	movwf	(_dbuf+31)& (0+255),b
  9494                           
  9495                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9496  001C12  D07D               	goto	l6379
  9497  001C14                     l6369:
  9498                           
  9499                           ; BSR set to: 0
  9500                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  9501  001C14  07C1               	decf	dtoa@i& (0+255),f,b
  9502  001C16  A0D8               	btfss	status,0,c
  9503  001C18  07C2               	decf	(dtoa@i+1)& (0+255),f,b
  9504                           
  9505                           ; BSR set to: 0
  9506                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  9507  001C1A  0E5F               	movlw	low _dbuf
  9508  001C1C  25C1               	addwf	dtoa@i& (0+255),w,b
  9509  001C1E  6ED9               	movwf	fsr2l,c
  9510  001C20  0E02               	movlw	high _dbuf
  9511  001C22  21C2               	addwfc	(dtoa@i+1)& (0+255),w,b
  9512  001C24  6EDA               	movwf	fsr2h,c
  9513  001C26  C0B9  F080         	movff	dtoa@n,___aomod@dividend
  9514  001C2A  C0BA  F081         	movff	dtoa@n+1,___aomod@dividend+1
  9515  001C2E  C0BB  F082         	movff	dtoa@n+2,___aomod@dividend+2
  9516  001C32  C0BC  F083         	movff	dtoa@n+3,___aomod@dividend+3
  9517  001C36  C0BD  F084         	movff	dtoa@n+4,___aomod@dividend+4
  9518  001C3A  C0BE  F085         	movff	dtoa@n+5,___aomod@dividend+5
  9519  001C3E  C0BF  F086         	movff	dtoa@n+6,___aomod@dividend+6
  9520  001C42  C0C0  F087         	movff	dtoa@n+7,___aomod@dividend+7
  9521  001C46  0E0A               	movlw	10
  9522  001C48  6F88               	movwf	___aomod@divisor& (0+255),b
  9523  001C4A  0E00               	movlw	0
  9524  001C4C  6F89               	movwf	(___aomod@divisor+1)& (0+255),b
  9525  001C4E  0E00               	movlw	0
  9526  001C50  6F8A               	movwf	(___aomod@divisor+2)& (0+255),b
  9527  001C52  0E00               	movlw	0
  9528  001C54  6F8B               	movwf	(___aomod@divisor+3)& (0+255),b
  9529  001C56  0E00               	movlw	0
  9530  001C58  6F8C               	movwf	(___aomod@divisor+4)& (0+255),b
  9531  001C5A  0E00               	movlw	0
  9532  001C5C  6F8D               	movwf	(___aomod@divisor+5)& (0+255),b
  9533  001C5E  0E00               	movlw	0
  9534  001C60  6F8E               	movwf	(___aomod@divisor+6)& (0+255),b
  9535  001C62  0E00               	movlw	0
  9536  001C64  6F8F               	movwf	(___aomod@divisor+7)& (0+255),b
  9537  001C66  EC7A  F015         	call	___aomod	;wreg free
  9538  001C6A  C080  F0A9         	movff	?___aomod,??_dtoa
  9539  001C6E  C081  F0AA         	movff	?___aomod+1,??_dtoa+1
  9540  001C72  C082  F0AB         	movff	?___aomod+2,??_dtoa+2
  9541  001C76  C083  F0AC         	movff	?___aomod+3,??_dtoa+3
  9542  001C7A  C084  F0AD         	movff	?___aomod+4,??_dtoa+4
  9543  001C7E  C085  F0AE         	movff	?___aomod+5,??_dtoa+5
  9544  001C82  C086  F0AF         	movff	?___aomod+6,??_dtoa+6
  9545  001C86  C087  F0B0         	movff	?___aomod+7,??_dtoa+7
  9546  001C8A  C0A9  F092         	movff	??_dtoa,abs@a
  9547  001C8E  C0AB  F093         	movff	??_dtoa+2,abs@a+1
  9548  001C92  EC23  F01C         	call	_abs	;wreg free
  9549  001C96  0100               	movlb	0	; () banked
  9550  001C98  5192               	movf	?_abs& (0+255),w,b
  9551  001C9A  0F30               	addlw	48
  9552  001C9C  6EDF               	movwf	indf2,c
  9553                           
  9554                           ; BSR set to: 0
  9555                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  9556  001C9E  07B3               	decf	dtoa@p& (0+255),f,b
  9557  001CA0  A0D8               	btfss	status,0,c
  9558  001CA2  07B4               	decf	(dtoa@p+1)& (0+255),f,b
  9559                           
  9560                           ; BSR set to: 0
  9561                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  9562  001CA4  07B5               	decf	dtoa@w& (0+255),f,b
  9563  001CA6  A0D8               	btfss	status,0,c
  9564  001CA8  07B6               	decf	(dtoa@w+1)& (0+255),f,b
  9565                           
  9566                           ; BSR set to: 0
  9567                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  9568  001CAA  C0B9  F080         	movff	dtoa@n,___aodiv@dividend
  9569  001CAE  C0BA  F081         	movff	dtoa@n+1,___aodiv@dividend+1
  9570  001CB2  C0BB  F082         	movff	dtoa@n+2,___aodiv@dividend+2
  9571  001CB6  C0BC  F083         	movff	dtoa@n+3,___aodiv@dividend+3
  9572  001CBA  C0BD  F084         	movff	dtoa@n+4,___aodiv@dividend+4
  9573  001CBE  C0BE  F085         	movff	dtoa@n+5,___aodiv@dividend+5
  9574  001CC2  C0BF  F086         	movff	dtoa@n+6,___aodiv@dividend+6
  9575  001CC6  C0C0  F087         	movff	dtoa@n+7,___aodiv@dividend+7
  9576  001CCA  0E0A               	movlw	10
  9577  001CCC  6F88               	movwf	___aodiv@divisor& (0+255),b
  9578  001CCE  0E00               	movlw	0
  9579  001CD0  6F89               	movwf	(___aodiv@divisor+1)& (0+255),b
  9580  001CD2  0E00               	movlw	0
  9581  001CD4  6F8A               	movwf	(___aodiv@divisor+2)& (0+255),b
  9582  001CD6  0E00               	movlw	0
  9583  001CD8  6F8B               	movwf	(___aodiv@divisor+3)& (0+255),b
  9584  001CDA  0E00               	movlw	0
  9585  001CDC  6F8C               	movwf	(___aodiv@divisor+4)& (0+255),b
  9586  001CDE  0E00               	movlw	0
  9587  001CE0  6F8D               	movwf	(___aodiv@divisor+5)& (0+255),b
  9588  001CE2  0E00               	movlw	0
  9589  001CE4  6F8E               	movwf	(___aodiv@divisor+6)& (0+255),b
  9590  001CE6  0E00               	movlw	0
  9591  001CE8  6F8F               	movwf	(___aodiv@divisor+7)& (0+255),b
  9592  001CEA  ECF8  F012         	call	___aodiv	;wreg free
  9593  001CEE  C080  F0B9         	movff	?___aodiv,dtoa@n
  9594  001CF2  C081  F0BA         	movff	?___aodiv+1,dtoa@n+1
  9595  001CF6  C082  F0BB         	movff	?___aodiv+2,dtoa@n+2
  9596  001CFA  C083  F0BC         	movff	?___aodiv+3,dtoa@n+3
  9597  001CFE  C084  F0BD         	movff	?___aodiv+4,dtoa@n+4
  9598  001D02  C085  F0BE         	movff	?___aodiv+5,dtoa@n+5
  9599  001D06  C086  F0BF         	movff	?___aodiv+6,dtoa@n+6
  9600  001D0A  C087  F0C0         	movff	?___aodiv+7,dtoa@n+7
  9601  001D0E                     l6379:
  9602                           
  9603                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9604  001D0E  0100               	movlb	0	; () banked
  9605  001D10  BFC2               	btfsc	(dtoa@i+1)& (0+255),7,b
  9606  001D12  D01F               	goto	u6840
  9607  001D14  51C2               	movf	(dtoa@i+1)& (0+255),w,b
  9608  001D16  E103               	bnz	u6800
  9609  001D18  05C1               	decf	dtoa@i& (0+255),w,b
  9610  001D1A  A0D8               	btfss	status,0,c
  9611  001D1C  D01A               	goto	u6840
  9612  001D1E                     u6800:
  9613                           
  9614                           ; BSR set to: 0
  9615  001D1E  51B9               	movf	dtoa@n& (0+255),w,b
  9616  001D20  11BA               	iorwf	(dtoa@n+1)& (0+255),w,b
  9617  001D22  11BB               	iorwf	(dtoa@n+2)& (0+255),w,b
  9618  001D24  11BC               	iorwf	(dtoa@n+3)& (0+255),w,b
  9619  001D26  11BD               	iorwf	(dtoa@n+4)& (0+255),w,b
  9620  001D28  11BE               	iorwf	(dtoa@n+5)& (0+255),w,b
  9621  001D2A  11BF               	iorwf	(dtoa@n+6)& (0+255),w,b
  9622  001D2C  11C0               	iorwf	(dtoa@n+7)& (0+255),w,b
  9623  001D2E  A4D8               	btfss	status,2,c
  9624  001D30  D771               	goto	l6369
  9625                           
  9626                           ; BSR set to: 0
  9627  001D32  BFB4               	btfsc	(dtoa@p+1)& (0+255),7,b
  9628  001D34  D005               	goto	u6820
  9629  001D36  51B4               	movf	(dtoa@p+1)& (0+255),w,b
  9630  001D38  E102               	bnz	u6821
  9631  001D3A  05B3               	decf	dtoa@p& (0+255),w,b
  9632  001D3C  B0D8               	btfsc	status,0,c
  9633  001D3E                     u6821:
  9634  001D3E  D76A               	goto	l6369
  9635  001D40                     u6820:
  9636                           
  9637                           ; BSR set to: 0
  9638  001D40  BFB6               	btfsc	(dtoa@w+1)& (0+255),7,b
  9639  001D42  D007               	goto	u6840
  9640  001D44  51B6               	movf	(dtoa@w+1)& (0+255),w,b
  9641  001D46  E103               	bnz	u6830
  9642  001D48  05B5               	decf	dtoa@w& (0+255),w,b
  9643  001D4A  A0D8               	btfss	status,0,c
  9644  001D4C  D002               	goto	u6840
  9645  001D4E                     u6830:
  9646                           
  9647                           ; BSR set to: 0
  9648  001D4E  B24E               	btfsc	_flags,1,c
  9649  001D50  D761               	goto	l6369
  9650  001D52                     u6840:
  9651                           
  9652                           ; BSR set to: 0
  9653                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  9654  001D52  51B7               	movf	dtoa@s& (0+255),w,b
  9655  001D54  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
  9656  001D56  A4D8               	btfss	status,2,c
  9657  001D58  D002               	goto	u6860
  9658                           
  9659                           ; BSR set to: 0
  9660  001D5A  A44E               	btfss	_flags,2,c
  9661  001D5C  D017               	goto	l6403
  9662  001D5E                     u6860:
  9663                           
  9664                           ; BSR set to: 0
  9665                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  9666  001D5E  07C1               	decf	dtoa@i& (0+255),f,b
  9667  001D60  A0D8               	btfss	status,0,c
  9668  001D62  07C2               	decf	(dtoa@i+1)& (0+255),f,b
  9669                           
  9670                           ; BSR set to: 0
  9671                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  9672  001D64  51B7               	movf	dtoa@s& (0+255),w,b
  9673  001D66  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
  9674  001D68  A4D8               	btfss	status,2,c
  9675  001D6A  D004               	goto	l6399
  9676                           
  9677                           ; BSR set to: 0
  9678  001D6C  0E00               	movlw	0
  9679  001D6E  6FB2               	movwf	(_dtoa$1099+1)& (0+255),b
  9680  001D70  0E2B               	movlw	43
  9681  001D72  D003               	goto	L7
  9682  001D74                     l6399:
  9683                           
  9684                           ; BSR set to: 0
  9685  001D74  0E00               	movlw	0
  9686  001D76  6FB2               	movwf	(_dtoa$1099+1)& (0+255),b
  9687  001D78  0E2D               	movlw	45
  9688  001D7A                     L7:
  9689  001D7A  6FB1               	movwf	_dtoa$1099& (0+255),b
  9690                           
  9691                           ; BSR set to: 0
  9692  001D7C  0E5F               	movlw	low _dbuf
  9693  001D7E  25C1               	addwf	dtoa@i& (0+255),w,b
  9694  001D80  6ED9               	movwf	fsr2l,c
  9695  001D82  0E02               	movlw	high _dbuf
  9696  001D84  21C2               	addwfc	(dtoa@i+1)& (0+255),w,b
  9697  001D86  6EDA               	movwf	fsr2h,c
  9698  001D88  C0B1  FFDF         	movff	_dtoa$1099,indf2
  9699  001D8C                     l6403:
  9700                           
  9701                           ; BSR set to: 0
  9702                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  9703  001D8C  C09F  F094         	movff	dtoa@fp,pad@fp
  9704  001D90  C0A0  F095         	movff	dtoa@fp+1,pad@fp+1
  9705  001D94  0E5F               	movlw	low _dbuf
  9706  001D96  25C1               	addwf	dtoa@i& (0+255),w,b
  9707  001D98  6F96               	movwf	pad@buf& (0+255),b
  9708  001D9A  0E02               	movlw	high _dbuf
  9709  001D9C  21C2               	addwfc	(dtoa@i+1)& (0+255),w,b
  9710  001D9E  6F97               	movwf	(pad@buf+1)& (0+255),b
  9711  001DA0  C0B5  F098         	movff	dtoa@w,pad@p
  9712  001DA4  C0B6  F099         	movff	dtoa@w+1,pad@p+1
  9713  001DA8  EC41  F018         	call	_pad	;wreg free
  9714  001DAC  C094  F09F         	movff	?_pad,?_dtoa
  9715  001DB0  C095  F0A0         	movff	?_pad+1,?_dtoa+1
  9716  001DB4  0012               	return		;funcret
  9717  001DB6                     __end_of_dtoa:
  9718                           	opt callstack 0
  9719                           
  9720 ;; *************** function _pad *****************
  9721 ;; Defined at:
  9722 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9723 ;; Parameters:    Size  Location     Type
  9724 ;;  fp              2   20[BANK0 ] PTR struct _IO_FILE
  9725 ;;		 -> NULL(0), 
  9726 ;;  buf             2   22[BANK0 ] PTR unsigned char 
  9727 ;;		 -> dbuf(32), 
  9728 ;;  p               2   24[BANK0 ] int 
  9729 ;; Auto vars:     Size  Location     Type
  9730 ;;  w               2   29[BANK0 ] int 
  9731 ;;  i               2   27[BANK0 ] int 
  9732 ;; Return value:  Size  Location     Type
  9733 ;;                  2   20[BANK0 ] int 
  9734 ;; Registers used:
  9735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9736 ;; Tracked objects:
  9737 ;;		On entry : 0/0
  9738 ;;		On exit  : 0/0
  9739 ;;		Unchanged: 0/0
  9740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9741 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9742 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9743 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9744 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9745 ;;Total ram usage:       11 bytes
  9746 ;; Hardware stack levels used:    1
  9747 ;; Hardware stack levels required when called:    9
  9748 ;; This function calls:
  9749 ;;		_fputc
  9750 ;;		_fputs
  9751 ;;		_strlen
  9752 ;; This function is called by:
  9753 ;;		_dtoa
  9754 ;;		_xtoa
  9755 ;; This function uses a non-reentrant model
  9756 ;;
  9757                           
  9758                           	psect	text30
  9759  003082                     __ptext30:
  9760                           	opt callstack 0
  9761  003082                     _pad:
  9762                           	opt callstack 16
  9763                           
  9764                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  9765                           
  9766                           ;incstack = 0
  9767  003082  A04E               	btfss	_flags,0,c
  9768  003084  D00A               	goto	l6207
  9769                           
  9770                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  9771  003086  C096  F08D         	movff	pad@buf,fputs@s
  9772  00308A  C097  F08E         	movff	pad@buf+1,fputs@s+1
  9773  00308E  C094  F08F         	movff	pad@fp,fputs@fp
  9774  003092  C095  F090         	movff	pad@fp+1,fputs@fp+1
  9775  003096  ECEA  F01B         	call	_fputs	;wreg free
  9776  00309A                     l6207:
  9777                           
  9778                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  9779  00309A  0100               	movlb	0	; () banked
  9780  00309C  BF99               	btfsc	(pad@p+1)& (0+255),7,b
  9781  00309E  D005               	goto	l6211
  9782                           
  9783                           ; BSR set to: 0
  9784  0030A0  C098  F09D         	movff	pad@p,pad@w
  9785  0030A4  C099  F09E         	movff	pad@p+1,pad@w+1
  9786  0030A8  D004               	goto	l583
  9787  0030AA                     l6211:
  9788                           
  9789                           ; BSR set to: 0
  9790  0030AA  0E00               	movlw	0
  9791  0030AC  6F9E               	movwf	(pad@w+1)& (0+255),b
  9792  0030AE  0E00               	movlw	0
  9793  0030B0  6F9D               	movwf	pad@w& (0+255),b
  9794  0030B2                     l583:
  9795                           
  9796                           ; BSR set to: 0
  9797                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  9798  0030B2  0E00               	movlw	0
  9799  0030B4  6F9C               	movwf	(pad@i+1)& (0+255),b
  9800  0030B6  0E00               	movlw	0
  9801  0030B8  6F9B               	movwf	pad@i& (0+255),b
  9802                           
  9803                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  9804  0030BA  D00D               	goto	l6217
  9805  0030BC                     l6213:
  9806                           
  9807                           ; BSR set to: 0
  9808                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  9809  0030BC  0E00               	movlw	0
  9810  0030BE  6F85               	movwf	(fputc@c+1)& (0+255),b
  9811  0030C0  0E20               	movlw	32
  9812  0030C2  6F84               	movwf	fputc@c& (0+255),b
  9813  0030C4  C094  F086         	movff	pad@fp,fputc@fp
  9814  0030C8  C095  F087         	movff	pad@fp+1,fputc@fp+1
  9815  0030CC  EC18  F01A         	call	_fputc	;wreg free
  9816                           
  9817                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  9818  0030D0  0100               	movlb	0	; () banked
  9819  0030D2  4B9B               	infsnz	pad@i& (0+255),f,b
  9820  0030D4  2B9C               	incf	(pad@i+1)& (0+255),f,b
  9821  0030D6                     l6217:
  9822                           
  9823                           ; BSR set to: 0
  9824                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  9825  0030D6  519D               	movf	pad@w& (0+255),w,b
  9826  0030D8  5D9B               	subwf	pad@i& (0+255),w,b
  9827  0030DA  519C               	movf	(pad@i+1)& (0+255),w,b
  9828  0030DC  0A80               	xorlw	128
  9829  0030DE  6F9A               	movwf	??_pad& (0+255),b
  9830  0030E0  519E               	movf	(pad@w+1)& (0+255),w,b
  9831  0030E2  0A80               	xorlw	128
  9832  0030E4  599A               	subwfb	??_pad& (0+255),w,b
  9833  0030E6  A0D8               	btfss	status,0,c
  9834  0030E8  D7E9               	goto	l6213
  9835                           
  9836                           ; BSR set to: 0
  9837                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  9838  0030EA  B04E               	btfsc	_flags,0,c
  9839  0030EC  D00A               	goto	l6221
  9840                           
  9841                           ; BSR set to: 0
  9842                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  9843  0030EE  C096  F08D         	movff	pad@buf,fputs@s
  9844  0030F2  C097  F08E         	movff	pad@buf+1,fputs@s+1
  9845  0030F6  C094  F08F         	movff	pad@fp,fputs@fp
  9846  0030FA  C095  F090         	movff	pad@fp+1,fputs@fp+1
  9847  0030FE  ECEA  F01B         	call	_fputs	;wreg free
  9848  003102                     l6221:
  9849                           
  9850                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  9851  003102  C096  F080         	movff	pad@buf,strlen@s
  9852  003106  C097  F081         	movff	pad@buf+1,strlen@s+1
  9853  00310A  ECA1  F01C         	call	_strlen	;wreg free
  9854  00310E  0100               	movlb	0	; () banked
  9855  003110  519D               	movf	pad@w& (0+255),w,b
  9856  003112  2580               	addwf	?_strlen& (0+255),w,b
  9857  003114  6F94               	movwf	?_pad& (0+255),b
  9858  003116  519E               	movf	(pad@w+1)& (0+255),w,b
  9859  003118  2181               	addwfc	(?_strlen+1)& (0+255),w,b
  9860  00311A  6F95               	movwf	(?_pad+1)& (0+255),b
  9861                           
  9862                           ; BSR set to: 0
  9863  00311C  0012               	return		;funcret
  9864  00311E                     __end_of_pad:
  9865                           	opt callstack 0
  9866                           
  9867 ;; *************** function _strlen *****************
  9868 ;; Defined at:
  9869 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  9870 ;; Parameters:    Size  Location     Type
  9871 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  9872 ;;		 -> dbuf(32), 
  9873 ;; Auto vars:     Size  Location     Type
  9874 ;;  a               2    2[BANK0 ] PTR const unsigned char 
  9875 ;;		 -> dbuf(32), 
  9876 ;; Return value:  Size  Location     Type
  9877 ;;                  2    0[BANK0 ] unsigned int 
  9878 ;; Registers used:
  9879 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9880 ;; Tracked objects:
  9881 ;;		On entry : 0/0
  9882 ;;		On exit  : 0/0
  9883 ;;		Unchanged: 0/0
  9884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9885 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9886 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9888 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9889 ;;Total ram usage:        4 bytes
  9890 ;; Hardware stack levels used:    1
  9891 ;; Hardware stack levels required when called:    3
  9892 ;; This function calls:
  9893 ;;		Nothing
  9894 ;; This function is called by:
  9895 ;;		_pad
  9896 ;; This function uses a non-reentrant model
  9897 ;;
  9898                           
  9899                           	psect	text31
  9900  003942                     __ptext31:
  9901                           	opt callstack 0
  9902  003942                     _strlen:
  9903                           	opt callstack 21
  9904                           
  9905                           ; BSR set to: 0
  9906                           ;incstack = 0
  9907  003942  C080  F082         	movff	strlen@s,strlen@a
  9908  003946  C081  F083         	movff	strlen@s+1,strlen@a+1
  9909  00394A  D003               	goto	l6189
  9910  00394C                     l6187:
  9911  00394C  0100               	movlb	0	; () banked
  9912  00394E  4B80               	infsnz	strlen@s& (0+255),f,b
  9913  003950  2B81               	incf	(strlen@s+1)& (0+255),f,b
  9914  003952                     l6189:
  9915  003952  C080  FFD9         	movff	strlen@s,fsr2l
  9916  003956  C081  FFDA         	movff	strlen@s+1,fsr2h
  9917  00395A  50DF               	movf	indf2,w,c
  9918  00395C  A4D8               	btfss	status,2,c
  9919  00395E  D7F6               	goto	l6187
  9920  003960  0100               	movlb	0	; () banked
  9921  003962  5182               	movf	strlen@a& (0+255),w,b
  9922  003964  5D80               	subwf	strlen@s& (0+255),w,b
  9923  003966  6F80               	movwf	?_strlen& (0+255),b
  9924  003968  5183               	movf	(strlen@a+1)& (0+255),w,b
  9925  00396A  5981               	subwfb	(strlen@s+1)& (0+255),w,b
  9926  00396C  6F81               	movwf	(?_strlen+1)& (0+255),b
  9927                           
  9928                           ; BSR set to: 0
  9929  00396E  0012               	return		;funcret
  9930  003970                     __end_of_strlen:
  9931                           	opt callstack 0
  9932                           
  9933 ;; *************** function _fputs *****************
  9934 ;; Defined at:
  9935 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  9936 ;; Parameters:    Size  Location     Type
  9937 ;;  s               2   13[BANK0 ] PTR const unsigned char 
  9938 ;;		 -> dbuf(32), 
  9939 ;;  fp              2   15[BANK0 ] PTR struct _IO_FILE
  9940 ;;		 -> NULL(0), 
  9941 ;; Auto vars:     Size  Location     Type
  9942 ;;  i               2   18[BANK0 ] int 
  9943 ;;  c               1   17[BANK0 ] unsigned char 
  9944 ;; Return value:  Size  Location     Type
  9945 ;;                  2   13[BANK0 ] int 
  9946 ;; Registers used:
  9947 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9948 ;; Tracked objects:
  9949 ;;		On entry : 0/0
  9950 ;;		On exit  : 0/0
  9951 ;;		Unchanged: 0/0
  9952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9953 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9954 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9956 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9957 ;;Total ram usage:        7 bytes
  9958 ;; Hardware stack levels used:    1
  9959 ;; Hardware stack levels required when called:    8
  9960 ;; This function calls:
  9961 ;;		_fputc
  9962 ;; This function is called by:
  9963 ;;		_pad
  9964 ;; This function uses a non-reentrant model
  9965 ;;
  9966                           
  9967                           	psect	text32
  9968  0037D4                     __ptext32:
  9969                           	opt callstack 0
  9970  0037D4                     _fputs:
  9971                           	opt callstack 16
  9972                           
  9973                           ; BSR set to: 0
  9974                           ;incstack = 0
  9975  0037D4  0E00               	movlw	0
  9976  0037D6  0100               	movlb	0	; () banked
  9977  0037D8  6F93               	movwf	(fputs@i+1)& (0+255),b
  9978  0037DA  0E00               	movlw	0
  9979  0037DC  6F92               	movwf	fputs@i& (0+255),b
  9980  0037DE  D00C               	goto	l6183
  9981  0037E0                     l6179:
  9982                           
  9983                           ; BSR set to: 0
  9984  0037E0  C091  F084         	movff	fputs@c,fputc@c
  9985  0037E4  6B85               	clrf	(fputc@c+1)& (0+255),b
  9986  0037E6  C08F  F086         	movff	fputs@fp,fputc@fp
  9987  0037EA  C090  F087         	movff	fputs@fp+1,fputc@fp+1
  9988  0037EE  EC18  F01A         	call	_fputc	;wreg free
  9989  0037F2  0100               	movlb	0	; () banked
  9990  0037F4  4B92               	infsnz	fputs@i& (0+255),f,b
  9991  0037F6  2B93               	incf	(fputs@i+1)& (0+255),f,b
  9992  0037F8                     l6183:
  9993                           
  9994                           ; BSR set to: 0
  9995  0037F8  5192               	movf	fputs@i& (0+255),w,b
  9996  0037FA  258D               	addwf	fputs@s& (0+255),w,b
  9997  0037FC  6ED9               	movwf	fsr2l,c
  9998  0037FE  5193               	movf	(fputs@i+1)& (0+255),w,b
  9999  003800  218E               	addwfc	(fputs@s+1)& (0+255),w,b
 10000  003802  6EDA               	movwf	fsr2h,c
 10001  003804  50DF               	movf	indf2,w,c
 10002  003806  6F91               	movwf	fputs@c& (0+255),b
 10003  003808  5191               	movf	fputs@c& (0+255),w,b
 10004  00380A  B4D8               	btfsc	status,2,c
 10005  00380C  0012               	return	
 10006  00380E  D7E8               	goto	l6179
 10007  003810                     __end_of_fputs:
 10008                           	opt callstack 0
 10009                           
 10010 ;; *************** function _fputc *****************
 10011 ;; Defined at:
 10012 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
 10013 ;; Parameters:    Size  Location     Type
 10014 ;;  c               2    4[BANK0 ] int 
 10015 ;;  fp              2    6[BANK0 ] PTR struct _IO_FILE
 10016 ;;		 -> NULL(0), 
 10017 ;; Auto vars:     Size  Location     Type
 10018 ;;		None
 10019 ;; Return value:  Size  Location     Type
 10020 ;;                  2    4[BANK0 ] int 
 10021 ;; Registers used:
 10022 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10023 ;; Tracked objects:
 10024 ;;		On entry : 0/0
 10025 ;;		On exit  : 0/0
 10026 ;;		Unchanged: 0/0
 10027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10028 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10030 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10031 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10032 ;;Total ram usage:        9 bytes
 10033 ;; Hardware stack levels used:    1
 10034 ;; Hardware stack levels required when called:    7
 10035 ;; This function calls:
 10036 ;;		_putch
 10037 ;; This function is called by:
 10038 ;;		_pad
 10039 ;;		_vfpfcnvrt
 10040 ;;		_fputs
 10041 ;; This function uses a non-reentrant model
 10042 ;;
 10043                           
 10044                           	psect	text33
 10045  003430                     __ptext33:
 10046                           	opt callstack 0
 10047  003430                     _fputc:
 10048                           	opt callstack 16
 10049                           
 10050                           ; BSR set to: 0
 10051                           ;incstack = 0
 10052  003430  0100               	movlb	0	; () banked
 10053  003432  5186               	movf	fputc@fp& (0+255),w,b
 10054  003434  1187               	iorwf	(fputc@fp+1)& (0+255),w,b
 10055  003436  B4D8               	btfsc	status,2,c
 10056  003438  D004               	goto	u6370
 10057                           
 10058                           ; BSR set to: 0
 10059  00343A  5186               	movf	fputc@fp& (0+255),w,b
 10060  00343C  1187               	iorwf	(fputc@fp+1)& (0+255),w,b
 10061  00343E  A4D8               	btfss	status,2,c
 10062  003440  D004               	goto	l6169
 10063  003442                     u6370:
 10064                           
 10065                           ; BSR set to: 0
 10066  003442  5184               	movf	fputc@c& (0+255),w,b
 10067  003444  EC6B  F01D         	call	_putch
 10068  003448  0012               	return	
 10069  00344A                     l6169:
 10070                           
 10071                           ; BSR set to: 0
 10072  00344A  EE20 F004          	lfsr	2,4
 10073  00344E  5186               	movf	fputc@fp& (0+255),w,b
 10074  003450  26D9               	addwf	fsr2l,f,c
 10075  003452  5187               	movf	(fputc@fp+1)& (0+255),w,b
 10076  003454  22DA               	addwfc	fsr2h,f,c
 10077  003456  50DE               	movf	postinc2,w,c
 10078  003458  10DE               	iorwf	postinc2,w,c
 10079  00345A  B4D8               	btfsc	status,2,c
 10080  00345C  D016               	goto	u6390
 10081                           
 10082                           ; BSR set to: 0
 10083  00345E  EE20 F004          	lfsr	2,4
 10084  003462  5186               	movf	fputc@fp& (0+255),w,b
 10085  003464  26D9               	addwf	fsr2l,f,c
 10086  003466  5187               	movf	(fputc@fp+1)& (0+255),w,b
 10087  003468  22DA               	addwfc	fsr2h,f,c
 10088  00346A  EE10 F002          	lfsr	1,2
 10089  00346E  5186               	movf	fputc@fp& (0+255),w,b
 10090  003470  26E1               	addwf	fsr1l,f,c
 10091  003472  5187               	movf	(fputc@fp+1)& (0+255),w,b
 10092  003474  22E2               	addwfc	fsr1h,f,c
 10093  003476  50DE               	movf	postinc2,w,c
 10094  003478  5CE6               	subwf	postinc1,w,c
 10095  00347A  50E6               	movf	postinc1,w,c
 10096  00347C  0A80               	xorlw	128
 10097  00347E  6F8C               	movwf	(??_fputc+4)& (0+255),b
 10098  003480  50DE               	movf	postinc2,w,c
 10099  003482  0A80               	xorlw	128
 10100  003484  598C               	subwfb	(??_fputc+4)& (0+255),w,b
 10101  003486  B0D8               	btfsc	status,0,c
 10102  003488  0012               	return	
 10103  00348A                     u6390:
 10104                           
 10105                           ; BSR set to: 0
 10106  00348A  EE20 F002          	lfsr	2,2
 10107  00348E  5186               	movf	fputc@fp& (0+255),w,b
 10108  003490  26D9               	addwf	fsr2l,f,c
 10109  003492  5187               	movf	(fputc@fp+1)& (0+255),w,b
 10110  003494  22DA               	addwfc	fsr2h,f,c
 10111  003496  2ADE               	incf	postinc2,f,c
 10112  003498  0E00               	movlw	0
 10113  00349A  22DD               	addwfc	postdec2,f,c
 10114  00349C  0012               	return		;funcret
 10115  00349E                     __end_of_fputc:
 10116                           	opt callstack 0
 10117                           
 10118 ;; *************** function _putch *****************
 10119 ;; Defined at:
 10120 ;;		line 102 in file "lcd.c"
 10121 ;; Parameters:    Size  Location     Type
 10122 ;;  data            1    wreg     unsigned char 
 10123 ;; Auto vars:     Size  Location     Type
 10124 ;;  data            1    3[BANK0 ] unsigned char 
 10125 ;; Return value:  Size  Location     Type
 10126 ;;                  1    wreg      void 
 10127 ;; Registers used:
 10128 ;;		wreg, status,2, status,0, cstack
 10129 ;; Tracked objects:
 10130 ;;		On entry : 0/0
 10131 ;;		On exit  : 0/0
 10132 ;;		Unchanged: 0/0
 10133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10135 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10137 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10138 ;;Total ram usage:        1 bytes
 10139 ;; Hardware stack levels used:    1
 10140 ;; Hardware stack levels required when called:    6
 10141 ;; This function calls:
 10142 ;;		_send_byte
 10143 ;; This function is called by:
 10144 ;;		_fputc
 10145 ;; This function uses a non-reentrant model
 10146 ;;
 10147                           
 10148                           	psect	text34
 10149  003AD6                     __ptext34:
 10150                           	opt callstack 0
 10151  003AD6                     _putch:
 10152                           	opt callstack 16
 10153                           
 10154                           ;incstack = 0
 10155                           ;putch@data stored from wreg
 10156  003AD6  0100               	movlb	0	; () banked
 10157  003AD8  6F83               	movwf	putch@data& (0+255),b
 10158                           
 10159                           ;lcd.c: 103:     LATDbits.LATD2 = 1;
 10160  003ADA  848C               	bsf	3980,2,c	;volatile
 10161                           
 10162                           ;lcd.c: 104:     send_byte((unsigned char)data);
 10163  003ADC  0100               	movlb	0	; () banked
 10164  003ADE  5183               	movf	putch@data& (0+255),w,b
 10165  003AE0  EC55  F01D         	call	_send_byte
 10166  003AE4  0012               	return		;funcret
 10167  003AE6                     __end_of_putch:
 10168                           	opt callstack 0
 10169                           
 10170 ;; *************** function _abs *****************
 10171 ;; Defined at:
 10172 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
 10173 ;; Parameters:    Size  Location     Type
 10174 ;;  a               2   18[BANK0 ] int 
 10175 ;; Auto vars:     Size  Location     Type
 10176 ;;		None
 10177 ;; Return value:  Size  Location     Type
 10178 ;;                  2   18[BANK0 ] int 
 10179 ;; Registers used:
 10180 ;;		wreg, status,2, status,0
 10181 ;; Tracked objects:
 10182 ;;		On entry : 0/0
 10183 ;;		On exit  : 0/0
 10184 ;;		Unchanged: 0/0
 10185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10186 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10188 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10189 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10190 ;;Total ram usage:        4 bytes
 10191 ;; Hardware stack levels used:    1
 10192 ;; Hardware stack levels required when called:    3
 10193 ;; This function calls:
 10194 ;;		Nothing
 10195 ;; This function is called by:
 10196 ;;		_ultrasonic_main
 10197 ;;		_dtoa
 10198 ;; This function uses a non-reentrant model
 10199 ;;
 10200                           
 10201                           	psect	text35
 10202  003846                     __ptext35:
 10203                           	opt callstack 0
 10204  003846                     _abs:
 10205                           	opt callstack 22
 10206                           
 10207                           ;incstack = 0
 10208  003846  0100               	movlb	0	; () banked
 10209  003848  BF93               	btfsc	(abs@a+1)& (0+255),7,b
 10210  00384A  D005               	goto	u6440
 10211  00384C  5193               	movf	(abs@a+1)& (0+255),w,b
 10212  00384E  E110               	bnz	l1361
 10213  003850  0592               	decf	abs@a& (0+255),w,b
 10214  003852  B0D8               	btfsc	status,0,c
 10215  003854  D00D               	goto	l1361
 10216  003856                     u6440:
 10217                           
 10218                           ; BSR set to: 0
 10219  003856  C092  F094         	movff	abs@a,??_abs
 10220  00385A  C093  F095         	movff	abs@a+1,??_abs+1
 10221  00385E  1F94               	comf	??_abs& (0+255),f,b
 10222  003860  1F95               	comf	(??_abs+1)& (0+255),f,b
 10223  003862  4B94               	infsnz	??_abs& (0+255),f,b
 10224  003864  2B95               	incf	(??_abs+1)& (0+255),f,b
 10225  003866  C094  F092         	movff	??_abs,?_abs
 10226  00386A  C095  F093         	movff	??_abs+1,?_abs+1
 10227  00386E  0012               	return	
 10228  003870                     l1361:
 10229                           
 10230                           ; BSR set to: 0
 10231  003870  C092  F092         	movff	abs@a,?_abs
 10232  003874  C093  F093         	movff	abs@a+1,?_abs+1
 10233                           
 10234                           ; BSR set to: 0
 10235  003878  0012               	return		;funcret
 10236  00387A                     __end_of_abs:
 10237                           	opt callstack 0
 10238                           
 10239 ;; *************** function ___aomod *****************
 10240 ;; Defined at:
 10241 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
 10242 ;; Parameters:    Size  Location     Type
 10243 ;;  dividend        8    0[BANK0 ] long long 
 10244 ;;  divisor         8    8[BANK0 ] long long 
 10245 ;; Auto vars:     Size  Location     Type
 10246 ;;  sign            1   17[BANK0 ] unsigned char 
 10247 ;;  counter         1   16[BANK0 ] unsigned char 
 10248 ;; Return value:  Size  Location     Type
 10249 ;;                  8    0[BANK0 ] long long 
 10250 ;; Registers used:
 10251 ;;		wreg, status,2, status,0
 10252 ;; Tracked objects:
 10253 ;;		On entry : 0/0
 10254 ;;		On exit  : 0/0
 10255 ;;		Unchanged: 0/0
 10256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10257 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10258 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10260 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10261 ;;Total ram usage:       18 bytes
 10262 ;; Hardware stack levels used:    1
 10263 ;; Hardware stack levels required when called:    3
 10264 ;; This function calls:
 10265 ;;		Nothing
 10266 ;; This function is called by:
 10267 ;;		_dtoa
 10268 ;; This function uses a non-reentrant model
 10269 ;;
 10270                           
 10271                           	psect	text36
 10272  002AF4                     __ptext36:
 10273                           	opt callstack 0
 10274  002AF4                     ___aomod:
 10275                           	opt callstack 22
 10276                           
 10277                           ; BSR set to: 0
 10278                           ;incstack = 0
 10279  002AF4  0E00               	movlw	0
 10280  002AF6  0100               	movlb	0	; () banked
 10281  002AF8  6F91               	movwf	___aomod@sign& (0+255),b
 10282                           
 10283                           ; BSR set to: 0
 10284  002AFA  AF87               	btfss	(___aomod@dividend+7)& (0+255),7,b
 10285  002AFC  D012               	goto	l6305
 10286                           
 10287                           ; BSR set to: 0
 10288  002AFE  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
 10289  002B00  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
 10290  002B02  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
 10291  002B04  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
 10292  002B06  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
 10293  002B08  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
 10294  002B0A  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
 10295  002B0C  6D80               	negf	___aomod@dividend& (0+255),b
 10296  002B0E  0E00               	movlw	0
 10297  002B10  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 10298  002B12  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 10299  002B14  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 10300  002B16  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 10301  002B18  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 10302  002B1A  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 10303  002B1C  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 10304                           
 10305                           ; BSR set to: 0
 10306  002B1E  0E01               	movlw	1
 10307  002B20  6F91               	movwf	___aomod@sign& (0+255),b
 10308  002B22                     l6305:
 10309                           
 10310                           ; BSR set to: 0
 10311  002B22  AF8F               	btfss	(___aomod@divisor+7)& (0+255),7,b
 10312  002B24  D010               	goto	l6309
 10313                           
 10314                           ; BSR set to: 0
 10315  002B26  1F8F               	comf	(___aomod@divisor+7)& (0+255),f,b
 10316  002B28  1F8E               	comf	(___aomod@divisor+6)& (0+255),f,b
 10317  002B2A  1F8D               	comf	(___aomod@divisor+5)& (0+255),f,b
 10318  002B2C  1F8C               	comf	(___aomod@divisor+4)& (0+255),f,b
 10319  002B2E  1F8B               	comf	(___aomod@divisor+3)& (0+255),f,b
 10320  002B30  1F8A               	comf	(___aomod@divisor+2)& (0+255),f,b
 10321  002B32  1F89               	comf	(___aomod@divisor+1)& (0+255),f,b
 10322  002B34  6D88               	negf	___aomod@divisor& (0+255),b
 10323  002B36  0E00               	movlw	0
 10324  002B38  2389               	addwfc	(___aomod@divisor+1)& (0+255),f,b
 10325  002B3A  238A               	addwfc	(___aomod@divisor+2)& (0+255),f,b
 10326  002B3C  238B               	addwfc	(___aomod@divisor+3)& (0+255),f,b
 10327  002B3E  238C               	addwfc	(___aomod@divisor+4)& (0+255),f,b
 10328  002B40  238D               	addwfc	(___aomod@divisor+5)& (0+255),f,b
 10329  002B42  238E               	addwfc	(___aomod@divisor+6)& (0+255),f,b
 10330  002B44  238F               	addwfc	(___aomod@divisor+7)& (0+255),f,b
 10331  002B46                     l6309:
 10332                           
 10333                           ; BSR set to: 0
 10334  002B46  5188               	movf	___aomod@divisor& (0+255),w,b
 10335  002B48  1189               	iorwf	(___aomod@divisor+1)& (0+255),w,b
 10336  002B4A  118A               	iorwf	(___aomod@divisor+2)& (0+255),w,b
 10337  002B4C  118B               	iorwf	(___aomod@divisor+3)& (0+255),w,b
 10338  002B4E  118C               	iorwf	(___aomod@divisor+4)& (0+255),w,b
 10339  002B50  118D               	iorwf	(___aomod@divisor+5)& (0+255),w,b
 10340  002B52  118E               	iorwf	(___aomod@divisor+6)& (0+255),w,b
 10341  002B54  118F               	iorwf	(___aomod@divisor+7)& (0+255),w,b
 10342  002B56  B4D8               	btfsc	status,2,c
 10343  002B58  D03C               	goto	l6325
 10344                           
 10345                           ; BSR set to: 0
 10346  002B5A  0E01               	movlw	1
 10347  002B5C  6F90               	movwf	___aomod@counter& (0+255),b
 10348  002B5E  D00A               	goto	l6315
 10349  002B60                     l6313:
 10350                           
 10351                           ; BSR set to: 0
 10352  002B60  90D8               	bcf	status,0,c
 10353  002B62  3788               	rlcf	___aomod@divisor& (0+255),f,b
 10354  002B64  3789               	rlcf	(___aomod@divisor+1)& (0+255),f,b
 10355  002B66  378A               	rlcf	(___aomod@divisor+2)& (0+255),f,b
 10356  002B68  378B               	rlcf	(___aomod@divisor+3)& (0+255),f,b
 10357  002B6A  378C               	rlcf	(___aomod@divisor+4)& (0+255),f,b
 10358  002B6C  378D               	rlcf	(___aomod@divisor+5)& (0+255),f,b
 10359  002B6E  378E               	rlcf	(___aomod@divisor+6)& (0+255),f,b
 10360  002B70  378F               	rlcf	(___aomod@divisor+7)& (0+255),f,b
 10361  002B72  2B90               	incf	___aomod@counter& (0+255),f,b
 10362  002B74                     l6315:
 10363                           
 10364                           ; BSR set to: 0
 10365  002B74  AF8F               	btfss	(___aomod@divisor+7)& (0+255),7,b
 10366  002B76  D7F4               	goto	l6313
 10367  002B78                     u6680:
 10368                           
 10369                           ; BSR set to: 0
 10370  002B78  5188               	movf	___aomod@divisor& (0+255),w,b
 10371  002B7A  5D80               	subwf	___aomod@dividend& (0+255),w,b
 10372  002B7C  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
 10373  002B7E  5981               	subwfb	(___aomod@dividend+1)& (0+255),w,b
 10374  002B80  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
 10375  002B82  5982               	subwfb	(___aomod@dividend+2)& (0+255),w,b
 10376  002B84  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
 10377  002B86  5983               	subwfb	(___aomod@dividend+3)& (0+255),w,b
 10378  002B88  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
 10379  002B8A  5984               	subwfb	(___aomod@dividend+4)& (0+255),w,b
 10380  002B8C  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
 10381  002B8E  5985               	subwfb	(___aomod@dividend+5)& (0+255),w,b
 10382  002B90  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
 10383  002B92  5986               	subwfb	(___aomod@dividend+6)& (0+255),w,b
 10384  002B94  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
 10385  002B96  5987               	subwfb	(___aomod@dividend+7)& (0+255),w,b
 10386  002B98  A0D8               	btfss	status,0,c
 10387  002B9A  D010               	goto	l6321
 10388                           
 10389                           ; BSR set to: 0
 10390  002B9C  5188               	movf	___aomod@divisor& (0+255),w,b
 10391  002B9E  5F80               	subwf	___aomod@dividend& (0+255),f,b
 10392  002BA0  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
 10393  002BA2  5B81               	subwfb	(___aomod@dividend+1)& (0+255),f,b
 10394  002BA4  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
 10395  002BA6  5B82               	subwfb	(___aomod@dividend+2)& (0+255),f,b
 10396  002BA8  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
 10397  002BAA  5B83               	subwfb	(___aomod@dividend+3)& (0+255),f,b
 10398  002BAC  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
 10399  002BAE  5B84               	subwfb	(___aomod@dividend+4)& (0+255),f,b
 10400  002BB0  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
 10401  002BB2  5B85               	subwfb	(___aomod@dividend+5)& (0+255),f,b
 10402  002BB4  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
 10403  002BB6  5B86               	subwfb	(___aomod@dividend+6)& (0+255),f,b
 10404  002BB8  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
 10405  002BBA  5B87               	subwfb	(___aomod@dividend+7)& (0+255),f,b
 10406  002BBC                     l6321:
 10407                           
 10408                           ; BSR set to: 0
 10409  002BBC  90D8               	bcf	status,0,c
 10410  002BBE  338F               	rrcf	(___aomod@divisor+7)& (0+255),f,b
 10411  002BC0  338E               	rrcf	(___aomod@divisor+6)& (0+255),f,b
 10412  002BC2  338D               	rrcf	(___aomod@divisor+5)& (0+255),f,b
 10413  002BC4  338C               	rrcf	(___aomod@divisor+4)& (0+255),f,b
 10414  002BC6  338B               	rrcf	(___aomod@divisor+3)& (0+255),f,b
 10415  002BC8  338A               	rrcf	(___aomod@divisor+2)& (0+255),f,b
 10416  002BCA  3389               	rrcf	(___aomod@divisor+1)& (0+255),f,b
 10417  002BCC  3388               	rrcf	___aomod@divisor& (0+255),f,b
 10418                           
 10419                           ; BSR set to: 0
 10420  002BCE  2F90               	decfsz	___aomod@counter& (0+255),f,b
 10421  002BD0  D7D3               	goto	u6680
 10422  002BD2                     l6325:
 10423                           
 10424                           ; BSR set to: 0
 10425  002BD2  5191               	movf	___aomod@sign& (0+255),w,b
 10426  002BD4  B4D8               	btfsc	status,2,c
 10427  002BD6  D010               	goto	l6329
 10428                           
 10429                           ; BSR set to: 0
 10430  002BD8  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
 10431  002BDA  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
 10432  002BDC  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
 10433  002BDE  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
 10434  002BE0  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
 10435  002BE2  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
 10436  002BE4  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
 10437  002BE6  6D80               	negf	___aomod@dividend& (0+255),b
 10438  002BE8  0E00               	movlw	0
 10439  002BEA  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 10440  002BEC  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 10441  002BEE  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 10442  002BF0  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 10443  002BF2  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 10444  002BF4  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 10445  002BF6  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 10446  002BF8                     l6329:
 10447                           
 10448                           ; BSR set to: 0
 10449  002BF8  C080  F080         	movff	___aomod@dividend,?___aomod
 10450  002BFC  C081  F081         	movff	___aomod@dividend+1,?___aomod+1
 10451  002C00  C082  F082         	movff	___aomod@dividend+2,?___aomod+2
 10452  002C04  C083  F083         	movff	___aomod@dividend+3,?___aomod+3
 10453  002C08  C084  F084         	movff	___aomod@dividend+4,?___aomod+4
 10454  002C0C  C085  F085         	movff	___aomod@dividend+5,?___aomod+5
 10455  002C10  C086  F086         	movff	___aomod@dividend+6,?___aomod+6
 10456  002C14  C087  F087         	movff	___aomod@dividend+7,?___aomod+7
 10457                           
 10458                           ; BSR set to: 0
 10459  002C18  0012               	return		;funcret
 10460  002C1A                     __end_of___aomod:
 10461                           	opt callstack 0
 10462                           
 10463 ;; *************** function ___aodiv *****************
 10464 ;; Defined at:
 10465 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
 10466 ;; Parameters:    Size  Location     Type
 10467 ;;  dividend        8    0[BANK0 ] long long 
 10468 ;;  divisor         8    8[BANK0 ] long long 
 10469 ;; Auto vars:     Size  Location     Type
 10470 ;;  quotient        8   18[BANK0 ] long long 
 10471 ;;  sign            1   17[BANK0 ] unsigned char 
 10472 ;;  counter         1   16[BANK0 ] unsigned char 
 10473 ;; Return value:  Size  Location     Type
 10474 ;;                  8    0[BANK0 ] long long 
 10475 ;; Registers used:
 10476 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10477 ;; Tracked objects:
 10478 ;;		On entry : 0/0
 10479 ;;		On exit  : 0/0
 10480 ;;		Unchanged: 0/0
 10481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10482 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10483 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10485 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10486 ;;Total ram usage:       26 bytes
 10487 ;; Hardware stack levels used:    1
 10488 ;; Hardware stack levels required when called:    3
 10489 ;; This function calls:
 10490 ;;		Nothing
 10491 ;; This function is called by:
 10492 ;;		_dtoa
 10493 ;; This function uses a non-reentrant model
 10494 ;;
 10495                           
 10496                           	psect	text37
 10497  0025F0                     __ptext37:
 10498                           	opt callstack 0
 10499  0025F0                     ___aodiv:
 10500                           	opt callstack 22
 10501                           
 10502                           ; BSR set to: 0
 10503                           ;incstack = 0
 10504  0025F0  0E00               	movlw	0
 10505  0025F2  0100               	movlb	0	; () banked
 10506  0025F4  6F91               	movwf	___aodiv@sign& (0+255),b
 10507                           
 10508                           ; BSR set to: 0
 10509  0025F6  AF8F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 10510  0025F8  D012               	goto	l6261
 10511                           
 10512                           ; BSR set to: 0
 10513  0025FA  1F8F               	comf	(___aodiv@divisor+7)& (0+255),f,b
 10514  0025FC  1F8E               	comf	(___aodiv@divisor+6)& (0+255),f,b
 10515  0025FE  1F8D               	comf	(___aodiv@divisor+5)& (0+255),f,b
 10516  002600  1F8C               	comf	(___aodiv@divisor+4)& (0+255),f,b
 10517  002602  1F8B               	comf	(___aodiv@divisor+3)& (0+255),f,b
 10518  002604  1F8A               	comf	(___aodiv@divisor+2)& (0+255),f,b
 10519  002606  1F89               	comf	(___aodiv@divisor+1)& (0+255),f,b
 10520  002608  6D88               	negf	___aodiv@divisor& (0+255),b
 10521  00260A  0E00               	movlw	0
 10522  00260C  2389               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
 10523  00260E  238A               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
 10524  002610  238B               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
 10525  002612  238C               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
 10526  002614  238D               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
 10527  002616  238E               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
 10528  002618  238F               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
 10529                           
 10530                           ; BSR set to: 0
 10531  00261A  0E01               	movlw	1
 10532  00261C  6F91               	movwf	___aodiv@sign& (0+255),b
 10533  00261E                     l6261:
 10534                           
 10535                           ; BSR set to: 0
 10536  00261E  AF87               	btfss	(___aodiv@dividend+7)& (0+255),7,b
 10537  002620  D012               	goto	l6267
 10538                           
 10539                           ; BSR set to: 0
 10540  002622  1F87               	comf	(___aodiv@dividend+7)& (0+255),f,b
 10541  002624  1F86               	comf	(___aodiv@dividend+6)& (0+255),f,b
 10542  002626  1F85               	comf	(___aodiv@dividend+5)& (0+255),f,b
 10543  002628  1F84               	comf	(___aodiv@dividend+4)& (0+255),f,b
 10544  00262A  1F83               	comf	(___aodiv@dividend+3)& (0+255),f,b
 10545  00262C  1F82               	comf	(___aodiv@dividend+2)& (0+255),f,b
 10546  00262E  1F81               	comf	(___aodiv@dividend+1)& (0+255),f,b
 10547  002630  6D80               	negf	___aodiv@dividend& (0+255),b
 10548  002632  0E00               	movlw	0
 10549  002634  2381               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
 10550  002636  2382               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
 10551  002638  2383               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
 10552  00263A  2384               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
 10553  00263C  2385               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
 10554  00263E  2386               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
 10555  002640  2387               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
 10556                           
 10557                           ; BSR set to: 0
 10558  002642  0E01               	movlw	1
 10559  002644  1B91               	xorwf	___aodiv@sign& (0+255),f,b
 10560  002646                     l6267:
 10561                           
 10562                           ; BSR set to: 0
 10563  002646  EE20  F092         	lfsr	2,___aodiv@quotient
 10564  00264A  0E07               	movlw	7
 10565  00264C                     u6601:
 10566  00264C  6ADE               	clrf	postinc2,c
 10567  00264E  06E8               	decf	wreg,f,c
 10568  002650  E2FD               	bc	u6601
 10569                           
 10570                           ; BSR set to: 0
 10571  002652  5188               	movf	___aodiv@divisor& (0+255),w,b
 10572  002654  1189               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
 10573  002656  118A               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
 10574  002658  118B               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
 10575  00265A  118C               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
 10576  00265C  118D               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
 10577  00265E  118E               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
 10578  002660  118F               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
 10579  002662  B4D8               	btfsc	status,2,c
 10580  002664  D046               	goto	l6289
 10581                           
 10582                           ; BSR set to: 0
 10583  002666  0E01               	movlw	1
 10584  002668  6F90               	movwf	___aodiv@counter& (0+255),b
 10585  00266A  D00A               	goto	l6275
 10586  00266C                     l6273:
 10587                           
 10588                           ; BSR set to: 0
 10589  00266C  90D8               	bcf	status,0,c
 10590  00266E  3788               	rlcf	___aodiv@divisor& (0+255),f,b
 10591  002670  3789               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
 10592  002672  378A               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
 10593  002674  378B               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
 10594  002676  378C               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
 10595  002678  378D               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
 10596  00267A  378E               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
 10597  00267C  378F               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
 10598  00267E  2B90               	incf	___aodiv@counter& (0+255),f,b
 10599  002680                     l6275:
 10600                           
 10601                           ; BSR set to: 0
 10602  002680  AF8F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 10603  002682  D7F4               	goto	l6273
 10604  002684                     u6620:
 10605                           
 10606                           ; BSR set to: 0
 10607  002684  90D8               	bcf	status,0,c
 10608  002686  3792               	rlcf	___aodiv@quotient& (0+255),f,b
 10609  002688  3793               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
 10610  00268A  3794               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
 10611  00268C  3795               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
 10612  00268E  3796               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
 10613  002690  3797               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
 10614  002692  3798               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
 10615  002694  3799               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
 10616                           
 10617                           ; BSR set to: 0
 10618  002696  5188               	movf	___aodiv@divisor& (0+255),w,b
 10619  002698  5D80               	subwf	___aodiv@dividend& (0+255),w,b
 10620  00269A  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
 10621  00269C  5981               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
 10622  00269E  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
 10623  0026A0  5982               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
 10624  0026A2  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
 10625  0026A4  5983               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
 10626  0026A6  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
 10627  0026A8  5984               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
 10628  0026AA  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
 10629  0026AC  5985               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
 10630  0026AE  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
 10631  0026B0  5986               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
 10632  0026B2  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
 10633  0026B4  5987               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
 10634  0026B6  A0D8               	btfss	status,0,c
 10635  0026B8  D011               	goto	l6285
 10636                           
 10637                           ; BSR set to: 0
 10638  0026BA  5188               	movf	___aodiv@divisor& (0+255),w,b
 10639  0026BC  5F80               	subwf	___aodiv@dividend& (0+255),f,b
 10640  0026BE  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
 10641  0026C0  5B81               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
 10642  0026C2  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
 10643  0026C4  5B82               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
 10644  0026C6  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
 10645  0026C8  5B83               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
 10646  0026CA  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
 10647  0026CC  5B84               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
 10648  0026CE  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
 10649  0026D0  5B85               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
 10650  0026D2  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
 10651  0026D4  5B86               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
 10652  0026D6  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
 10653  0026D8  5B87               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
 10654                           
 10655                           ; BSR set to: 0
 10656  0026DA  8192               	bsf	___aodiv@quotient& (0+255),0,b
 10657  0026DC                     l6285:
 10658                           
 10659                           ; BSR set to: 0
 10660  0026DC  90D8               	bcf	status,0,c
 10661  0026DE  338F               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
 10662  0026E0  338E               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
 10663  0026E2  338D               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
 10664  0026E4  338C               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
 10665  0026E6  338B               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
 10666  0026E8  338A               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
 10667  0026EA  3389               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
 10668  0026EC  3388               	rrcf	___aodiv@divisor& (0+255),f,b
 10669                           
 10670                           ; BSR set to: 0
 10671  0026EE  2F90               	decfsz	___aodiv@counter& (0+255),f,b
 10672  0026F0  D7C9               	goto	u6620
 10673  0026F2                     l6289:
 10674                           
 10675                           ; BSR set to: 0
 10676  0026F2  5191               	movf	___aodiv@sign& (0+255),w,b
 10677  0026F4  B4D8               	btfsc	status,2,c
 10678  0026F6  D010               	goto	l6293
 10679                           
 10680                           ; BSR set to: 0
 10681  0026F8  1F99               	comf	(___aodiv@quotient+7)& (0+255),f,b
 10682  0026FA  1F98               	comf	(___aodiv@quotient+6)& (0+255),f,b
 10683  0026FC  1F97               	comf	(___aodiv@quotient+5)& (0+255),f,b
 10684  0026FE  1F96               	comf	(___aodiv@quotient+4)& (0+255),f,b
 10685  002700  1F95               	comf	(___aodiv@quotient+3)& (0+255),f,b
 10686  002702  1F94               	comf	(___aodiv@quotient+2)& (0+255),f,b
 10687  002704  1F93               	comf	(___aodiv@quotient+1)& (0+255),f,b
 10688  002706  6D92               	negf	___aodiv@quotient& (0+255),b
 10689  002708  0E00               	movlw	0
 10690  00270A  2393               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
 10691  00270C  2394               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
 10692  00270E  2395               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
 10693  002710  2396               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
 10694  002712  2397               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
 10695  002714  2398               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
 10696  002716  2399               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
 10697  002718                     l6293:
 10698                           
 10699                           ; BSR set to: 0
 10700  002718  C092  F080         	movff	___aodiv@quotient,?___aodiv
 10701  00271C  C093  F081         	movff	___aodiv@quotient+1,?___aodiv+1
 10702  002720  C094  F082         	movff	___aodiv@quotient+2,?___aodiv+2
 10703  002724  C095  F083         	movff	___aodiv@quotient+3,?___aodiv+3
 10704  002728  C096  F084         	movff	___aodiv@quotient+4,?___aodiv+4
 10705  00272C  C097  F085         	movff	___aodiv@quotient+5,?___aodiv+5
 10706  002730  C098  F086         	movff	___aodiv@quotient+6,?___aodiv+6
 10707  002734  C099  F087         	movff	___aodiv@quotient+7,?___aodiv+7
 10708                           
 10709                           ; BSR set to: 0
 10710  002738  0012               	return		;funcret
 10711  00273A                     __end_of___aodiv:
 10712                           	opt callstack 0
 10713                           
 10714 ;; *************** function _atoi *****************
 10715 ;; Defined at:
 10716 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
 10717 ;; Parameters:    Size  Location     Type
 10718 ;;  s               2    7[BANK0 ] PTR const unsigned char 
 10719 ;;		 -> STR_58(10), STR_57(11), STR_56(11), STR_55(12), 
 10720 ;;		 -> STR_54(12), STR_53(10), STR_52(13), STR_51(8), 
 10721 ;;		 -> STR_50(17), STR_49(15), STR_48(15), STR_47(12), 
 10722 ;;		 -> STR_46(17), STR_45(12), STR_44(15), STR_43(18), 
 10723 ;;		 -> STR_42(17), STR_41(12), STR_40(15), STR_39(18), 
 10724 ;;		 -> STR_38(17), STR_37(14), STR_36(14), STR_35(17), 
 10725 ;;		 -> STR_34(3), STR_33(9), STR_32(16), STR_31(3), 
 10726 ;;		 -> STR_30(9), STR_29(17), STR_28(15), STR_27(15), 
 10727 ;;		 -> STR_26(12), STR_25(10), STR_24(15), STR_23(12), 
 10728 ;;		 -> STR_22(10), STR_21(16), STR_20(12), STR_19(3), 
 10729 ;;		 -> STR_18(11), STR_17(10), STR_16(17), STR_15(10), 
 10730 ;;		 -> STR_14(16), STR_13(10), STR_12(16), STR_11(10), 
 10731 ;;		 -> STR_10(17), STR_9(5), STR_8(10), STR_7(14), 
 10732 ;;		 -> STR_6(6), STR_5(10), STR_4(10), STR_3(11), 
 10733 ;;		 -> STR_2(13), STR_1(10), 
 10734 ;; Auto vars:     Size  Location     Type
 10735 ;;  n               2   20[BANK0 ] int 
 10736 ;;  neg             2   13[BANK0 ] int 
 10737 ;; Return value:  Size  Location     Type
 10738 ;;                  2    7[BANK0 ] int 
 10739 ;; Registers used:
 10740 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10741 ;; Tracked objects:
 10742 ;;		On entry : 0/0
 10743 ;;		On exit  : 0/0
 10744 ;;		Unchanged: 0/0
 10745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10746 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10747 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10748 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10749 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10750 ;;Total ram usage:       15 bytes
 10751 ;; Hardware stack levels used:    1
 10752 ;; Hardware stack levels required when called:    4
 10753 ;; This function calls:
 10754 ;;		___wmul
 10755 ;;		_isdigit
 10756 ;;		_isspace
 10757 ;; This function is called by:
 10758 ;;		_vfpfcnvrt
 10759 ;; This function uses a non-reentrant model
 10760 ;;
 10761                           
 10762                           	psect	text38
 10763  00273A                     __ptext38:
 10764                           	opt callstack 0
 10765  00273A                     _atoi:
 10766                           	opt callstack 22
 10767                           
 10768                           ; BSR set to: 0
 10769                           ;incstack = 0
 10770  00273A  0E00               	movlw	0
 10771  00273C  0100               	movlb	0	; () banked
 10772  00273E  6F95               	movwf	(atoi@n+1)& (0+255),b
 10773  002740  0E00               	movlw	0
 10774  002742  6F94               	movwf	atoi@n& (0+255),b
 10775  002744  0E00               	movlw	0
 10776  002746  6F8E               	movwf	(atoi@neg+1)& (0+255),b
 10777  002748  0E00               	movlw	0
 10778  00274A  6F8D               	movwf	atoi@neg& (0+255),b
 10779  00274C  D002               	goto	l6477
 10780  00274E                     l6475:
 10781                           
 10782                           ; BSR set to: 0
 10783  00274E  4B87               	infsnz	atoi@s& (0+255),f,b
 10784  002750  2B88               	incf	(atoi@s+1)& (0+255),f,b
 10785  002752                     l6477:
 10786                           
 10787                           ; BSR set to: 0
 10788  002752  0E01               	movlw	1
 10789  002754  6F93               	movwf	_atoi$1584& (0+255),b
 10790                           
 10791                           ; BSR set to: 0
 10792  002756  C087  FFF6         	movff	atoi@s,tblptrl
 10793  00275A  C088  FFF7         	movff	atoi@s+1,tblptrh
 10794  00275E                     	if	0	;tblptru may be non-zero
 10795  00275E                     	endif
 10796  00275E                     	if	0	;tblptru may be non-zero
 10797  00275E                     	endif
 10798  00275E  0008               	tblrd		*
 10799  002760  50F5               	movf	tablat,w,c
 10800  002762  0A20               	xorlw	32
 10801  002764  B4D8               	btfsc	status,2,c
 10802  002766  D018               	goto	l6485
 10803                           
 10804                           ; BSR set to: 0
 10805  002768  0EF7               	movlw	247
 10806  00276A  6F89               	movwf	??_atoi& (0+255),b
 10807  00276C  0EFF               	movlw	255
 10808  00276E  6F8A               	movwf	(??_atoi+1)& (0+255),b
 10809  002770  C087  FFF6         	movff	atoi@s,tblptrl
 10810  002774  C088  FFF7         	movff	atoi@s+1,tblptrh
 10811  002778                     	if	0	;tblptru may be non-zero
 10812  002778                     	endif
 10813  002778                     	if	0	;tblptru may be non-zero
 10814  002778                     	endif
 10815  002778  0008               	tblrd		*
 10816  00277A  50F5               	movf	tablat,w,c
 10817  00277C  6F8B               	movwf	(??_atoi+2)& (0+255),b
 10818  00277E  6B8C               	clrf	(??_atoi+3)& (0+255),b
 10819  002780  5189               	movf	??_atoi& (0+255),w,b
 10820  002782  278B               	addwf	(??_atoi+2)& (0+255),f,b
 10821  002784  518A               	movf	(??_atoi+1)& (0+255),w,b
 10822  002786  238C               	addwfc	(??_atoi+3)& (0+255),f,b
 10823  002788  518C               	movf	(??_atoi+3)& (0+255),w,b
 10824  00278A  E104               	bnz	u7060
 10825  00278C  0E05               	movlw	5
 10826  00278E  5D8B               	subwf	(??_atoi+2)& (0+255),w,b
 10827  002790  A0D8               	btfss	status,0,c
 10828  002792  D002               	goto	l6485
 10829  002794                     u7060:
 10830                           
 10831                           ; BSR set to: 0
 10832  002794  0E00               	movlw	0
 10833  002796  6F93               	movwf	_atoi$1584& (0+255),b
 10834  002798                     l6485:
 10835                           
 10836                           ; BSR set to: 0
 10837  002798  C093  F08F         	movff	_atoi$1584,_atoi$1583
 10838  00279C  6B90               	clrf	(_atoi$1583+1)& (0+255),b
 10839                           
 10840                           ; BSR set to: 0
 10841  00279E  518F               	movf	_atoi$1583& (0+255),w,b
 10842  0027A0  1190               	iorwf	(_atoi$1583+1)& (0+255),w,b
 10843  0027A2  B4D8               	btfsc	status,2,c
 10844  0027A4  D008               	goto	l6495
 10845  0027A6  D7D3               	goto	l6475
 10846  0027A8                     l6491:
 10847                           
 10848                           ; BSR set to: 0
 10849  0027A8  0E00               	movlw	0
 10850  0027AA  6F8E               	movwf	(atoi@neg+1)& (0+255),b
 10851  0027AC  0E01               	movlw	1
 10852  0027AE  6F8D               	movwf	atoi@neg& (0+255),b
 10853  0027B0                     l6493:
 10854                           
 10855                           ; BSR set to: 0
 10856  0027B0  4B87               	infsnz	atoi@s& (0+255),f,b
 10857  0027B2  2B88               	incf	(atoi@s+1)& (0+255),f,b
 10858  0027B4  D02F               	goto	l6501
 10859  0027B6                     l6495:
 10860                           
 10861                           ; BSR set to: 0
 10862  0027B6  C087  FFF6         	movff	atoi@s,tblptrl
 10863  0027BA  C088  FFF7         	movff	atoi@s+1,tblptrh
 10864  0027BE                     	if	0	;tblptru may be non-zero
 10865  0027BE                     	endif
 10866  0027BE                     	if	0	;tblptru may be non-zero
 10867  0027BE                     	endif
 10868  0027BE  0008               	tblrd		*
 10869  0027C0  50F5               	movf	tablat,w,c
 10870  0027C2  6F89               	movwf	??_atoi& (0+255),b
 10871  0027C4  6B8A               	clrf	(??_atoi+1)& (0+255),b
 10872                           
 10873                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10874                           ; Switch size 1, requested type "simple"
 10875                           ; Number of cases is 1, Range of values is 0 to 0
 10876                           ; switch strategies available:
 10877                           ; Name         Instructions Cycles
 10878                           ; simple_byte            4     3 (average)
 10879                           ;	Chosen strategy is simple_byte
 10880  0027C6  518A               	movf	(??_atoi+1)& (0+255),w,b
 10881  0027C8  0A00               	xorlw	0	; case 0
 10882  0027CA  A4D8               	btfss	status,2,c
 10883  0027CC  D023               	goto	l6501
 10884                           
 10885                           ; BSR set to: 0
 10886                           ; Switch size 1, requested type "simple"
 10887                           ; Number of cases is 2, Range of values is 43 to 45
 10888                           ; switch strategies available:
 10889                           ; Name         Instructions Cycles
 10890                           ; simple_byte            7     4 (average)
 10891                           ;	Chosen strategy is simple_byte
 10892  0027CE  5189               	movf	??_atoi& (0+255),w,b
 10893  0027D0  0A2B               	xorlw	43	; case 43
 10894  0027D2  B4D8               	btfsc	status,2,c
 10895  0027D4  D7ED               	goto	l6493
 10896  0027D6  0A06               	xorlw	6	; case 45
 10897  0027D8  B4D8               	btfsc	status,2,c
 10898  0027DA  D7E6               	goto	l6491
 10899  0027DC  D01B               	goto	l6501
 10900  0027DE                     l6497:
 10901                           
 10902                           ; BSR set to: 0
 10903  0027DE  C094  F080         	movff	atoi@n,___wmul@multiplier
 10904  0027E2  C095  F081         	movff	atoi@n+1,___wmul@multiplier+1
 10905  0027E6  0E00               	movlw	0
 10906  0027E8  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10907  0027EA  0E0A               	movlw	10
 10908  0027EC  6F82               	movwf	___wmul@multiplicand& (0+255),b
 10909  0027EE  EC0E  F01D         	call	___wmul	;wreg free
 10910  0027F2  C087  FFF6         	movff	atoi@s,tblptrl
 10911  0027F6  C088  FFF7         	movff	atoi@s+1,tblptrh
 10912  0027FA                     	if	0	;tblptru may be non-zero
 10913  0027FA                     	endif
 10914  0027FA                     	if	0	;tblptru may be non-zero
 10915  0027FA                     	endif
 10916  0027FA  0008               	tblrd		*
 10917  0027FC  50F5               	movf	tablat,w,c
 10918  0027FE  0100               	movlb	0	; () banked
 10919  002800  5F80               	subwf	?___wmul& (0+255),f,b
 10920  002802  0E00               	movlw	0
 10921  002804  5B81               	subwfb	(?___wmul+1)& (0+255),f,b
 10922  002806  0E30               	movlw	48
 10923  002808  2580               	addwf	?___wmul& (0+255),w,b
 10924  00280A  6F94               	movwf	atoi@n& (0+255),b
 10925  00280C  0E00               	movlw	0
 10926  00280E  2181               	addwfc	(?___wmul+1)& (0+255),w,b
 10927  002810  6F95               	movwf	(atoi@n+1)& (0+255),b
 10928  002812  D7CE               	goto	l6493
 10929  002814                     l6501:
 10930                           
 10931                           ; BSR set to: 0
 10932  002814  0ED0               	movlw	208
 10933  002816  6F89               	movwf	??_atoi& (0+255),b
 10934  002818  0EFF               	movlw	255
 10935  00281A  6F8A               	movwf	(??_atoi+1)& (0+255),b
 10936  00281C  C087  FFF6         	movff	atoi@s,tblptrl
 10937  002820  C088  FFF7         	movff	atoi@s+1,tblptrh
 10938  002824                     	if	0	;tblptru may be non-zero
 10939  002824                     	endif
 10940  002824                     	if	0	;tblptru may be non-zero
 10941  002824                     	endif
 10942  002824  0008               	tblrd		*
 10943  002826  50F5               	movf	tablat,w,c
 10944  002828  6F8B               	movwf	(??_atoi+2)& (0+255),b
 10945  00282A  6B8C               	clrf	(??_atoi+3)& (0+255),b
 10946  00282C  5189               	movf	??_atoi& (0+255),w,b
 10947  00282E  278B               	addwf	(??_atoi+2)& (0+255),f,b
 10948  002830  518A               	movf	(??_atoi+1)& (0+255),w,b
 10949  002832  238C               	addwfc	(??_atoi+3)& (0+255),f,b
 10950  002834  518C               	movf	(??_atoi+3)& (0+255),w,b
 10951  002836  E106               	bnz	u7080
 10952  002838  0E0A               	movlw	10
 10953  00283A  5D8B               	subwf	(??_atoi+2)& (0+255),w,b
 10954  00283C  B0D8               	btfsc	status,0,c
 10955  00283E  D002               	goto	u7080
 10956  002840  0E01               	movlw	1
 10957  002842  D001               	goto	u7090
 10958  002844                     u7080:
 10959  002844  0E00               	movlw	0
 10960  002846                     u7090:
 10961  002846  6F91               	movwf	_atoi$1585& (0+255),b
 10962  002848  6B92               	clrf	(_atoi$1585+1)& (0+255),b
 10963                           
 10964                           ; BSR set to: 0
 10965  00284A  5191               	movf	_atoi$1585& (0+255),w,b
 10966  00284C  1192               	iorwf	(_atoi$1585+1)& (0+255),w,b
 10967  00284E  A4D8               	btfss	status,2,c
 10968  002850  D7C6               	goto	l6497
 10969                           
 10970                           ; BSR set to: 0
 10971  002852  518D               	movf	atoi@neg& (0+255),w,b
 10972  002854  118E               	iorwf	(atoi@neg+1)& (0+255),w,b
 10973  002856  A4D8               	btfss	status,2,c
 10974  002858  D00D               	goto	l1392
 10975                           
 10976                           ; BSR set to: 0
 10977  00285A  C094  F089         	movff	atoi@n,??_atoi
 10978  00285E  C095  F08A         	movff	atoi@n+1,??_atoi+1
 10979  002862  1F89               	comf	??_atoi& (0+255),f,b
 10980  002864  1F8A               	comf	(??_atoi+1)& (0+255),f,b
 10981  002866  4B89               	infsnz	??_atoi& (0+255),f,b
 10982  002868  2B8A               	incf	(??_atoi+1)& (0+255),f,b
 10983  00286A  C089  F087         	movff	??_atoi,?_atoi
 10984  00286E  C08A  F088         	movff	??_atoi+1,?_atoi+1
 10985  002872  0012               	return	
 10986  002874                     l1392:
 10987                           
 10988                           ; BSR set to: 0
 10989  002874  C094  F087         	movff	atoi@n,?_atoi
 10990  002878  C095  F088         	movff	atoi@n+1,?_atoi+1
 10991                           
 10992                           ; BSR set to: 0
 10993  00287C  0012               	return		;funcret
 10994  00287E                     __end_of_atoi:
 10995                           	opt callstack 0
 10996                           
 10997 ;; *************** function _isspace *****************
 10998 ;; Defined at:
 10999 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
 11000 ;; Parameters:    Size  Location     Type
 11001 ;;  c               2    0[BANK0 ] int 
 11002 ;; Auto vars:     Size  Location     Type
 11003 ;;		None
 11004 ;; Return value:  Size  Location     Type
 11005 ;;                  2    0[BANK0 ] int 
 11006 ;; Registers used:
 11007 ;;		wreg, status,2, status,0
 11008 ;; Tracked objects:
 11009 ;;		On entry : 0/0
 11010 ;;		On exit  : 0/0
 11011 ;;		Unchanged: 0/0
 11012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11013 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11014 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11015 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11016 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11017 ;;Total ram usage:        7 bytes
 11018 ;; Hardware stack levels used:    1
 11019 ;; Hardware stack levels required when called:    3
 11020 ;; This function calls:
 11021 ;;		Nothing
 11022 ;; This function is called by:
 11023 ;;		_atoi
 11024 ;; This function uses a non-reentrant model
 11025 ;;
 11026                           
 11027                           	psect	text39
 11028  003756                     __ptext39:
 11029                           	opt callstack 0
 11030  003756                     _isspace:
 11031                           	opt callstack 22
 11032                           
 11033                           ; BSR set to: 0
 11034                           ;incstack = 0
 11035  003756  0E01               	movlw	1
 11036  003758  0100               	movlb	0	; () banked
 11037  00375A  6F86               	movwf	_isspace$1610& (0+255),b
 11038                           
 11039                           ; BSR set to: 0
 11040  00375C  0E20               	movlw	32
 11041  00375E  1980               	xorwf	isspace@c& (0+255),w,b
 11042  003760  1181               	iorwf	(isspace@c+1)& (0+255),w,b
 11043  003762  B4D8               	btfsc	status,2,c
 11044  003764  D014               	goto	l6341
 11045                           
 11046                           ; BSR set to: 0
 11047  003766  0EF7               	movlw	247
 11048  003768  6F82               	movwf	??_isspace& (0+255),b
 11049  00376A  0EFF               	movlw	255
 11050  00376C  6F83               	movwf	(??_isspace+1)& (0+255),b
 11051  00376E  C080  F084         	movff	isspace@c,??_isspace+2
 11052  003772  C081  F085         	movff	isspace@c+1,??_isspace+3
 11053  003776  5182               	movf	??_isspace& (0+255),w,b
 11054  003778  2784               	addwf	(??_isspace+2)& (0+255),f,b
 11055  00377A  5183               	movf	(??_isspace+1)& (0+255),w,b
 11056  00377C  2385               	addwfc	(??_isspace+3)& (0+255),f,b
 11057  00377E  5185               	movf	(??_isspace+3)& (0+255),w,b
 11058  003780  E104               	bnz	u6720
 11059  003782  0E05               	movlw	5
 11060  003784  5D84               	subwf	(??_isspace+2)& (0+255),w,b
 11061  003786  A0D8               	btfss	status,0,c
 11062  003788  D002               	goto	l6341
 11063  00378A                     u6720:
 11064                           
 11065                           ; BSR set to: 0
 11066  00378A  0E00               	movlw	0
 11067  00378C  6F86               	movwf	_isspace$1610& (0+255),b
 11068  00378E                     l6341:
 11069                           
 11070                           ; BSR set to: 0
 11071  00378E  C086  F080         	movff	_isspace$1610,?_isspace
 11072  003792  6B81               	clrf	(?_isspace+1)& (0+255),b
 11073                           
 11074                           ; BSR set to: 0
 11075  003794  0012               	return		;funcret
 11076  003796                     __end_of_isspace:
 11077                           	opt callstack 0
 11078                           
 11079 ;; *************** function _isdigit *****************
 11080 ;; Defined at:
 11081 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
 11082 ;; Parameters:    Size  Location     Type
 11083 ;;  c               2    0[BANK0 ] int 
 11084 ;; Auto vars:     Size  Location     Type
 11085 ;;		None
 11086 ;; Return value:  Size  Location     Type
 11087 ;;                  2    0[BANK0 ] int 
 11088 ;; Registers used:
 11089 ;;		wreg, status,2, status,0
 11090 ;; Tracked objects:
 11091 ;;		On entry : 0/0
 11092 ;;		On exit  : 0/0
 11093 ;;		Unchanged: 0/0
 11094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11095 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11097 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11098 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11099 ;;Total ram usage:        6 bytes
 11100 ;; Hardware stack levels used:    1
 11101 ;; Hardware stack levels required when called:    3
 11102 ;; This function calls:
 11103 ;;		Nothing
 11104 ;; This function is called by:
 11105 ;;		_vfpfcnvrt
 11106 ;;		_atoi
 11107 ;; This function uses a non-reentrant model
 11108 ;;
 11109                           
 11110                           	psect	text40
 11111  003910                     __ptext40:
 11112                           	opt callstack 0
 11113  003910                     _isdigit:
 11114                           	opt callstack 23
 11115                           
 11116                           ; BSR set to: 0
 11117                           ;incstack = 0
 11118  003910  0ED0               	movlw	208
 11119  003912  0100               	movlb	0	; () banked
 11120  003914  6F82               	movwf	??_isdigit& (0+255),b
 11121  003916  0EFF               	movlw	255
 11122  003918  6F83               	movwf	(??_isdigit+1)& (0+255),b
 11123  00391A  C080  F084         	movff	isdigit@c,??_isdigit+2
 11124  00391E  C081  F085         	movff	isdigit@c+1,??_isdigit+3
 11125  003922  5182               	movf	??_isdigit& (0+255),w,b
 11126  003924  2784               	addwf	(??_isdigit+2)& (0+255),f,b
 11127  003926  5183               	movf	(??_isdigit+1)& (0+255),w,b
 11128  003928  2385               	addwfc	(??_isdigit+3)& (0+255),f,b
 11129  00392A  5185               	movf	(??_isdigit+3)& (0+255),w,b
 11130  00392C  E106               	bnz	u6560
 11131  00392E  0E0A               	movlw	10
 11132  003930  5D84               	subwf	(??_isdigit+2)& (0+255),w,b
 11133  003932  B0D8               	btfsc	status,0,c
 11134  003934  D002               	goto	u6560
 11135  003936  0E01               	movlw	1
 11136  003938  D001               	goto	u6570
 11137  00393A                     u6560:
 11138  00393A  0E00               	movlw	0
 11139  00393C                     u6570:
 11140  00393C  6F80               	movwf	?_isdigit& (0+255),b
 11141  00393E  6B81               	clrf	(?_isdigit+1)& (0+255),b
 11142                           
 11143                           ; BSR set to: 0
 11144  003940  0012               	return		;funcret
 11145  003942                     __end_of_isdigit:
 11146                           	opt callstack 0
 11147                           
 11148 ;; *************** function ___wmul *****************
 11149 ;; Defined at:
 11150 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 11151 ;; Parameters:    Size  Location     Type
 11152 ;;  multiplier      2    0[BANK0 ] unsigned int 
 11153 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 11154 ;; Auto vars:     Size  Location     Type
 11155 ;;  product         2    4[BANK0 ] unsigned int 
 11156 ;; Return value:  Size  Location     Type
 11157 ;;                  2    0[BANK0 ] unsigned int 
 11158 ;; Registers used:
 11159 ;;		wreg, status,2, status,0, prodl, prodh
 11160 ;; Tracked objects:
 11161 ;;		On entry : 0/0
 11162 ;;		On exit  : 0/0
 11163 ;;		Unchanged: 0/0
 11164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11165 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11166 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11168 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11169 ;;Total ram usage:        6 bytes
 11170 ;; Hardware stack levels used:    1
 11171 ;; Hardware stack levels required when called:    3
 11172 ;; This function calls:
 11173 ;;		Nothing
 11174 ;; This function is called by:
 11175 ;;		_main
 11176 ;;		_atoi
 11177 ;; This function uses a non-reentrant model
 11178 ;;
 11179                           
 11180                           	psect	text41
 11181  003A1C                     __ptext41:
 11182                           	opt callstack 0
 11183  003A1C                     ___wmul:
 11184                           	opt callstack 22
 11185                           
 11186                           ; BSR set to: 0
 11187                           ;incstack = 0
 11188  003A1C  0100               	movlb	0	; () banked
 11189  003A1E  5180               	movf	___wmul@multiplier& (0+255),w,b
 11190  003A20  0382               	mulwf	___wmul@multiplicand& (0+255),b
 11191  003A22  CFF3 F084          	movff	prodl,___wmul@product
 11192  003A26  CFF4 F085          	movff	prodh,___wmul@product+1
 11193  003A2A  5180               	movf	___wmul@multiplier& (0+255),w,b
 11194  003A2C  0383               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 11195  003A2E  50F3               	movf	prodl,w,c
 11196  003A30  2785               	addwf	(___wmul@product+1)& (0+255),f,b
 11197  003A32  5181               	movf	(___wmul@multiplier+1)& (0+255),w,b
 11198  003A34  0382               	mulwf	___wmul@multiplicand& (0+255),b
 11199  003A36  50F3               	movf	prodl,w,c
 11200  003A38  2785               	addwf	(___wmul@product+1)& (0+255),f,b
 11201                           
 11202                           ; BSR set to: 0
 11203  003A3A  C084  F080         	movff	___wmul@product,?___wmul
 11204  003A3E  C085  F081         	movff	___wmul@product+1,?___wmul+1
 11205                           
 11206                           ; BSR set to: 0
 11207  003A42  0012               	return		;funcret
 11208  003A44                     __end_of___wmul:
 11209                           	opt callstack 0
 11210                           
 11211 ;; *************** function _initLCD *****************
 11212 ;; Defined at:
 11213 ;;		line 69 in file "lcd.c"
 11214 ;; Parameters:    Size  Location     Type
 11215 ;;		None
 11216 ;; Auto vars:     Size  Location     Type
 11217 ;;		None
 11218 ;; Return value:  Size  Location     Type
 11219 ;;                  1    wreg      void 
 11220 ;; Registers used:
 11221 ;;		wreg, status,2, status,0, cstack
 11222 ;; Tracked objects:
 11223 ;;		On entry : 0/0
 11224 ;;		On exit  : 0/0
 11225 ;;		Unchanged: 0/0
 11226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11229 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11230 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11231 ;;Total ram usage:        1 bytes
 11232 ;; Hardware stack levels used:    1
 11233 ;; Hardware stack levels required when called:    7
 11234 ;; This function calls:
 11235 ;;		_lcdInst
 11236 ;;		_send_byte
 11237 ;;		_send_nibble
 11238 ;; This function is called by:
 11239 ;;		_actuators_main
 11240 ;;		_UI_main
 11241 ;;		_main
 11242 ;; This function uses a non-reentrant model
 11243 ;;
 11244                           
 11245                           	psect	text42
 11246  0033C0                     __ptext42:
 11247                           	opt callstack 0
 11248  0033C0                     _initLCD:
 11249                           	opt callstack 23
 11250                           
 11251                           ;lcd.c: 70:     _delay((unsigned long)((15)*(10000000/4000.0)));
 11252                           
 11253                           ; BSR set to: 0
 11254                           ;incstack = 0
 11255  0033C0  0E31               	movlw	49
 11256  0033C2  0100               	movlb	0	; () banked
 11257  0033C4  6F84               	movwf	??_initLCD& (0+255),b
 11258  0033C6  0EB2               	movlw	178
 11259  0033C8                     u9417:
 11260  0033C8  2EE8               	decfsz	wreg,f,c
 11261  0033CA  D7FE               	bra	u9417
 11262  0033CC  2F84               	decfsz	??_initLCD& (0+255),f,b
 11263  0033CE  D7FC               	bra	u9417
 11264  0033D0  F000               	nop	
 11265                           
 11266                           ;lcd.c: 72:     LATDbits.LATD2 = 0;
 11267  0033D2  948C               	bcf	3980,2,c	;volatile
 11268                           
 11269                           ;lcd.c: 74:     send_nibble(0b0011);
 11270  0033D4  0E03               	movlw	3
 11271  0033D6  EC48  F01D         	call	_send_nibble
 11272                           
 11273                           ;lcd.c: 75:     _delay((unsigned long)((5)*(10000000/4000.0)));
 11274  0033DA  0E11               	movlw	17
 11275  0033DC  0100               	movlb	0	; () banked
 11276  0033DE  6F84               	movwf	??_initLCD& (0+255),b
 11277  0033E0  0E3A               	movlw	58
 11278  0033E2                     u9427:
 11279  0033E2  2EE8               	decfsz	wreg,f,c
 11280  0033E4  D7FE               	bra	u9427
 11281  0033E6  2F84               	decfsz	??_initLCD& (0+255),f,b
 11282  0033E8  D7FC               	bra	u9427
 11283  0033EA  F000               	nop	
 11284                           
 11285                           ;lcd.c: 76:     send_nibble(0b0011);
 11286  0033EC  0E03               	movlw	3
 11287  0033EE  EC48  F01D         	call	_send_nibble
 11288                           
 11289                           ;lcd.c: 77:     _delay((unsigned long)((150)*(10000000/4000000.0)));
 11290  0033F2  0E7D               	movlw	125
 11291  0033F4                     u9437:
 11292  0033F4  2EE8               	decfsz	wreg,f,c
 11293  0033F6  D7FE               	bra	u9437
 11294                           
 11295                           ;lcd.c: 78:     send_byte(0b00110010);
 11296  0033F8  0E32               	movlw	50
 11297  0033FA  EC55  F01D         	call	_send_byte
 11298                           
 11299                           ;lcd.c: 80:     send_byte(0b00101000);
 11300  0033FE  0E28               	movlw	40
 11301  003400  EC55  F01D         	call	_send_byte
 11302                           
 11303                           ;lcd.c: 81:     send_byte(0b00001000);
 11304  003404  0E08               	movlw	8
 11305  003406  EC55  F01D         	call	_send_byte
 11306                           
 11307                           ;lcd.c: 82:     send_byte(0b00000001);
 11308  00340A  0E01               	movlw	1
 11309  00340C  EC55  F01D         	call	_send_byte
 11310                           
 11311                           ;lcd.c: 83:     _delay((unsigned long)((5)*(10000000/4000.0)));
 11312  003410  0E11               	movlw	17
 11313  003412  0100               	movlb	0	; () banked
 11314  003414  6F84               	movwf	??_initLCD& (0+255),b
 11315  003416  0E3A               	movlw	58
 11316  003418                     u9447:
 11317  003418  2EE8               	decfsz	wreg,f,c
 11318  00341A  D7FE               	bra	u9447
 11319  00341C  2F84               	decfsz	??_initLCD& (0+255),f,b
 11320  00341E  D7FC               	bra	u9447
 11321  003420  F000               	nop	
 11322                           
 11323                           ;lcd.c: 84:     send_byte(0b00000110);
 11324  003422  0E06               	movlw	6
 11325  003424  EC55  F01D         	call	_send_byte
 11326                           
 11327                           ;lcd.c: 87:     { lcdInst( (unsigned char)(8 | (1 << 2) | (1 << 1) | 1) );};
 11328  003428  0E0F               	movlw	15
 11329  00342A  EC73  F01D         	call	_lcdInst
 11330  00342E  0012               	return		;funcret
 11331  003430                     __end_of_initLCD:
 11332                           	opt callstack 0
 11333                           
 11334 ;; *************** function _lcdInst *****************
 11335 ;; Defined at:
 11336 ;;		line 64 in file "lcd.c"
 11337 ;; Parameters:    Size  Location     Type
 11338 ;;  data            1    wreg     unsigned char 
 11339 ;; Auto vars:     Size  Location     Type
 11340 ;;  data            1    3[BANK0 ] unsigned char 
 11341 ;; Return value:  Size  Location     Type
 11342 ;;                  1    wreg      void 
 11343 ;; Registers used:
 11344 ;;		wreg, status,2, status,0, cstack
 11345 ;; Tracked objects:
 11346 ;;		On entry : 0/0
 11347 ;;		On exit  : 0/0
 11348 ;;		Unchanged: 0/0
 11349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11351 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11353 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11354 ;;Total ram usage:        1 bytes
 11355 ;; Hardware stack levels used:    1
 11356 ;; Hardware stack levels required when called:    6
 11357 ;; This function calls:
 11358 ;;		_send_byte
 11359 ;; This function is called by:
 11360 ;;		_actuators_main
 11361 ;;		_stepper2
 11362 ;;		_stepper2_back
 11363 ;;		_initLCD
 11364 ;;		_print_echo
 11365 ;;		_ultrasonic_main
 11366 ;;		_number_deploy
 11367 ;;		_UI_main
 11368 ;;		_main
 11369 ;;		_lcd_shift_cursor
 11370 ;;		_lcd_shift_display
 11371 ;; This function uses a non-reentrant model
 11372 ;;
 11373                           
 11374                           	psect	text43
 11375  003AE6                     __ptext43:
 11376                           	opt callstack 0
 11377  003AE6                     _lcdInst:
 11378                           	opt callstack 22
 11379                           
 11380                           ;incstack = 0
 11381                           ;lcdInst@data stored from wreg
 11382  003AE6  0100               	movlb	0	; () banked
 11383  003AE8  6F83               	movwf	lcdInst@data& (0+255),b
 11384                           
 11385                           ;lcd.c: 65:     LATDbits.LATD2 = 0;
 11386  003AEA  948C               	bcf	3980,2,c	;volatile
 11387                           
 11388                           ;lcd.c: 66:     send_byte(data);
 11389  003AEC  0100               	movlb	0	; () banked
 11390  003AEE  5183               	movf	lcdInst@data& (0+255),w,b
 11391  003AF0  EC55  F01D         	call	_send_byte
 11392  003AF4  0012               	return		;funcret
 11393  003AF6                     __end_of_lcdInst:
 11394                           	opt callstack 0
 11395                           
 11396 ;; *************** function _send_byte *****************
 11397 ;; Defined at:
 11398 ;;		line 55 in file "lcd.c"
 11399 ;; Parameters:    Size  Location     Type
 11400 ;;  data            1    wreg     unsigned char 
 11401 ;; Auto vars:     Size  Location     Type
 11402 ;;  data            1    2[BANK0 ] unsigned char 
 11403 ;; Return value:  Size  Location     Type
 11404 ;;                  1    wreg      void 
 11405 ;; Registers used:
 11406 ;;		wreg, status,2, status,0, cstack
 11407 ;; Tracked objects:
 11408 ;;		On entry : 0/0
 11409 ;;		On exit  : 0/0
 11410 ;;		Unchanged: 0/0
 11411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11413 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11415 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11416 ;;Total ram usage:        1 bytes
 11417 ;; Hardware stack levels used:    1
 11418 ;; Hardware stack levels required when called:    5
 11419 ;; This function calls:
 11420 ;;		_send_nibble
 11421 ;; This function is called by:
 11422 ;;		_lcdInst
 11423 ;;		_initLCD
 11424 ;;		_putch
 11425 ;; This function uses a non-reentrant model
 11426 ;;
 11427                           
 11428                           	psect	text44
 11429  003AAA                     __ptext44:
 11430                           	opt callstack 0
 11431  003AAA                     _send_byte:
 11432                           	opt callstack 16
 11433                           
 11434                           ;incstack = 0
 11435                           ;send_byte@data stored from wreg
 11436  003AAA  0100               	movlb	0	; () banked
 11437  003AAC  6F82               	movwf	send_byte@data& (0+255),b
 11438                           
 11439                           ;lcd.c: 57:     send_nibble(data >> 4);
 11440  003AAE  0100               	movlb	0	; () banked
 11441  003AB0  3982               	swapf	send_byte@data& (0+255),w,b
 11442  003AB2  0B0F               	andlw	15
 11443  003AB4  EC48  F01D         	call	_send_nibble
 11444                           
 11445                           ;lcd.c: 60:     send_nibble(data);
 11446  003AB8  0100               	movlb	0	; () banked
 11447  003ABA  5182               	movf	send_byte@data& (0+255),w,b
 11448  003ABC  EC48  F01D         	call	_send_nibble
 11449  003AC0  0012               	return		;funcret
 11450  003AC2                     __end_of_send_byte:
 11451                           	opt callstack 0
 11452                           
 11453 ;; *************** function _send_nibble *****************
 11454 ;; Defined at:
 11455 ;;		line 44 in file "lcd.c"
 11456 ;; Parameters:    Size  Location     Type
 11457 ;;  data            1    wreg     unsigned char 
 11458 ;; Auto vars:     Size  Location     Type
 11459 ;;  data            1    1[BANK0 ] unsigned char 
 11460 ;; Return value:  Size  Location     Type
 11461 ;;                  1    wreg      void 
 11462 ;; Registers used:
 11463 ;;		wreg, status,2, status,0, cstack
 11464 ;; Tracked objects:
 11465 ;;		On entry : 0/0
 11466 ;;		On exit  : 0/0
 11467 ;;		Unchanged: 0/0
 11468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11470 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11472 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11473 ;;Total ram usage:        1 bytes
 11474 ;; Hardware stack levels used:    1
 11475 ;; Hardware stack levels required when called:    4
 11476 ;; This function calls:
 11477 ;;		_pulse_e
 11478 ;; This function is called by:
 11479 ;;		_send_byte
 11480 ;;		_initLCD
 11481 ;; This function uses a non-reentrant model
 11482 ;;
 11483                           
 11484                           	psect	text45
 11485  003A90                     __ptext45:
 11486                           	opt callstack 0
 11487  003A90                     _send_nibble:
 11488                           	opt callstack 16
 11489                           
 11490                           ;incstack = 0
 11491                           ;send_nibble@data stored from wreg
 11492  003A90  0100               	movlb	0	; () banked
 11493  003A92  6F81               	movwf	send_nibble@data& (0+255),b
 11494                           
 11495                           ;lcd.c: 46:     LATD = (unsigned char)(LATD & 0x0F);
 11496  003A94  508C               	movf	3980,w,c	;volatile
 11497  003A96  0B0F               	andlw	15
 11498  003A98  6E8C               	movwf	3980,c	;volatile
 11499                           
 11500                           ;lcd.c: 47:     LATD = (unsigned char)((data << 4) | LATD);
 11501  003A9A  0100               	movlb	0	; () banked
 11502  003A9C  3981               	swapf	send_nibble@data& (0+255),w,b
 11503  003A9E  0BF0               	andlw	240
 11504  003AA0  108C               	iorwf	3980,w,c	;volatile
 11505  003AA2  6E8C               	movwf	3980,c	;volatile
 11506                           
 11507                           ; BSR set to: 0
 11508                           ;lcd.c: 48:     pulse_e();
 11509  003AA4  ECB8  F01C         	call	_pulse_e	;wreg free
 11510  003AA8  0012               	return		;funcret
 11511  003AAA                     __end_of_send_nibble:
 11512                           	opt callstack 0
 11513                           
 11514 ;; *************** function _pulse_e *****************
 11515 ;; Defined at:
 11516 ;;		line 28 in file "lcd.c"
 11517 ;; Parameters:    Size  Location     Type
 11518 ;;		None
 11519 ;; Auto vars:     Size  Location     Type
 11520 ;;  interruptSta    1    0[BANK0 ] unsigned char 
 11521 ;; Return value:  Size  Location     Type
 11522 ;;                  1    wreg      void 
 11523 ;; Registers used:
 11524 ;;		wreg
 11525 ;; Tracked objects:
 11526 ;;		On entry : 0/0
 11527 ;;		On exit  : 0/0
 11528 ;;		Unchanged: 0/0
 11529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11531 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11533 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11534 ;;Total ram usage:        1 bytes
 11535 ;; Hardware stack levels used:    1
 11536 ;; Hardware stack levels required when called:    3
 11537 ;; This function calls:
 11538 ;;		Nothing
 11539 ;; This function is called by:
 11540 ;;		_send_nibble
 11541 ;; This function uses a non-reentrant model
 11542 ;;
 11543                           
 11544                           	psect	text46
 11545  003970                     __ptext46:
 11546                           	opt callstack 0
 11547  003970                     _pulse_e:
 11548                           	opt callstack 16
 11549                           
 11550                           ;lcd.c: 29:     unsigned char interruptState = INTCONbits.GIE;
 11551                           
 11552                           ;incstack = 0
 11553  003970  0E00               	movlw	0
 11554  003972  BEF2               	btfsc	4082,7,c	;volatile
 11555  003974  0E01               	movlw	1
 11556  003976  0100               	movlb	0	; () banked
 11557  003978  6F80               	movwf	pulse_e@interruptState& (0+255),b
 11558                           
 11559                           ; BSR set to: 0
 11560                           ;lcd.c: 30:     (INTCONbits.GIE = 0);
 11561  00397A  9EF2               	bcf	4082,7,c	;volatile
 11562                           
 11563                           ; BSR set to: 0
 11564                           ;lcd.c: 31:     LATDbits.LATD3 = 1;
 11565  00397C  868C               	bsf	3980,3,c	;volatile
 11566                           
 11567                           ;lcd.c: 34:     _delay((unsigned long)((25)*(10000000/4000000.0)));
 11568  00397E  0E14               	movlw	20
 11569  003980                     u9457:
 11570  003980  2EE8               	decfsz	wreg,f,c
 11571  003982  D7FE               	bra	u9457
 11572  003984  D000               	nop2	
 11573                           
 11574                           ;lcd.c: 35:     LATDbits.LATD3 = 0;
 11575  003986  968C               	bcf	3980,3,c	;volatile
 11576                           
 11577                           ;lcd.c: 36:     _delay((unsigned long)((100)*(10000000/4000000.0)));
 11578  003988  0E53               	movlw	83
 11579  00398A                     u9467:
 11580  00398A  2EE8               	decfsz	wreg,f,c
 11581  00398C  D7FE               	bra	u9467
 11582  00398E  F000               	nop	
 11583                           
 11584                           ;lcd.c: 37:     INTCONbits.GIE = interruptState;
 11585  003990  0100               	movlb	0	; () banked
 11586  003992  B180               	btfsc	pulse_e@interruptState& (0+255),0,b
 11587  003994  D002               	bra	u6355
 11588  003996  9EF2               	bcf	4082,7,c	;volatile
 11589  003998  D001               	bra	u6356
 11590  00399A                     u6355:
 11591  00399A  8EF2               	bsf	4082,7,c	;volatile
 11592  00399C                     u6356:
 11593  00399C  0012               	return		;funcret
 11594  00399E                     __end_of_pulse_e:
 11595                           	opt callstack 0
 11596                           
 11597 ;; *************** function ___llmod *****************
 11598 ;; Defined at:
 11599 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\llmod.c"
 11600 ;; Parameters:    Size  Location     Type
 11601 ;;  dividend        4    0[BANK0 ] unsigned long 
 11602 ;;  divisor         4    4[BANK0 ] unsigned long 
 11603 ;; Auto vars:     Size  Location     Type
 11604 ;;  counter         1    8[BANK0 ] unsigned char 
 11605 ;; Return value:  Size  Location     Type
 11606 ;;                  4    0[BANK0 ] unsigned long 
 11607 ;; Registers used:
 11608 ;;		wreg, status,2, status,0
 11609 ;; Tracked objects:
 11610 ;;		On entry : 0/0
 11611 ;;		On exit  : 0/0
 11612 ;;		Unchanged: 0/0
 11613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11614 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11615 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11617 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11618 ;;Total ram usage:        9 bytes
 11619 ;; Hardware stack levels used:    1
 11620 ;; Hardware stack levels required when called:    3
 11621 ;; This function calls:
 11622 ;;		Nothing
 11623 ;; This function is called by:
 11624 ;;		_UI_main
 11625 ;; This function uses a non-reentrant model
 11626 ;;
 11627                           
 11628                           	psect	text47
 11629  00349E                     __ptext47:
 11630                           	opt callstack 0
 11631  00349E                     ___llmod:
 11632                           	opt callstack 26
 11633                           
 11634                           ;incstack = 0
 11635  00349E  0100               	movlb	0	; () banked
 11636  0034A0  5184               	movf	___llmod@divisor& (0+255),w,b
 11637  0034A2  1185               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 11638  0034A4  1186               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 11639  0034A6  1187               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 11640  0034A8  B4D8               	btfsc	status,2,c
 11641  0034AA  D024               	goto	l1106
 11642                           
 11643                           ; BSR set to: 0
 11644  0034AC  0E01               	movlw	1
 11645  0034AE  6F88               	movwf	___llmod@counter& (0+255),b
 11646  0034B0  D006               	goto	l7295
 11647  0034B2                     l7293:
 11648                           
 11649                           ; BSR set to: 0
 11650  0034B2  90D8               	bcf	status,0,c
 11651  0034B4  3784               	rlcf	___llmod@divisor& (0+255),f,b
 11652  0034B6  3785               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 11653  0034B8  3786               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 11654  0034BA  3787               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 11655  0034BC  2B88               	incf	___llmod@counter& (0+255),f,b
 11656  0034BE                     l7295:
 11657                           
 11658                           ; BSR set to: 0
 11659  0034BE  AF87               	btfss	(___llmod@divisor+3)& (0+255),7,b
 11660  0034C0  D7F8               	goto	l7293
 11661  0034C2                     u7970:
 11662                           
 11663                           ; BSR set to: 0
 11664  0034C2  5184               	movf	___llmod@divisor& (0+255),w,b
 11665  0034C4  5D80               	subwf	___llmod@dividend& (0+255),w,b
 11666  0034C6  5185               	movf	(___llmod@divisor+1)& (0+255),w,b
 11667  0034C8  5981               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 11668  0034CA  5186               	movf	(___llmod@divisor+2)& (0+255),w,b
 11669  0034CC  5982               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 11670  0034CE  5187               	movf	(___llmod@divisor+3)& (0+255),w,b
 11671  0034D0  5983               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 11672  0034D2  A0D8               	btfss	status,0,c
 11673  0034D4  D008               	goto	l7301
 11674                           
 11675                           ; BSR set to: 0
 11676  0034D6  5184               	movf	___llmod@divisor& (0+255),w,b
 11677  0034D8  5F80               	subwf	___llmod@dividend& (0+255),f,b
 11678  0034DA  5185               	movf	(___llmod@divisor+1)& (0+255),w,b
 11679  0034DC  5B81               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 11680  0034DE  5186               	movf	(___llmod@divisor+2)& (0+255),w,b
 11681  0034E0  5B82               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 11682  0034E2  5187               	movf	(___llmod@divisor+3)& (0+255),w,b
 11683  0034E4  5B83               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 11684  0034E6                     l7301:
 11685                           
 11686                           ; BSR set to: 0
 11687  0034E6  90D8               	bcf	status,0,c
 11688  0034E8  3387               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 11689  0034EA  3386               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 11690  0034EC  3385               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 11691  0034EE  3384               	rrcf	___llmod@divisor& (0+255),f,b
 11692                           
 11693                           ; BSR set to: 0
 11694  0034F0  2F88               	decfsz	___llmod@counter& (0+255),f,b
 11695  0034F2  D7E7               	goto	u7970
 11696  0034F4                     l1106:
 11697                           
 11698                           ; BSR set to: 0
 11699  0034F4  C080  F080         	movff	___llmod@dividend,?___llmod
 11700  0034F8  C081  F081         	movff	___llmod@dividend+1,?___llmod+1
 11701  0034FC  C082  F082         	movff	___llmod@dividend+2,?___llmod+2
 11702  003500  C083  F083         	movff	___llmod@dividend+3,?___llmod+3
 11703                           
 11704                           ; BSR set to: 0
 11705  003504  0012               	return		;funcret
 11706  003506                     __end_of___llmod:
 11707                           	opt callstack 0
 11708                           
 11709 ;; *************** function _I2C_Master_Write *****************
 11710 ;; Defined at:
 11711 ;;		line 70 in file "I2C.c"
 11712 ;; Parameters:    Size  Location     Type
 11713 ;;  byteToWrite     2    1[BANK0 ] unsigned int 
 11714 ;; Auto vars:     Size  Location     Type
 11715 ;;		None
 11716 ;; Return value:  Size  Location     Type
 11717 ;;                  1    wreg      void 
 11718 ;; Registers used:
 11719 ;;		wreg, status,2, status,0, cstack
 11720 ;; Tracked objects:
 11721 ;;		On entry : 0/0
 11722 ;;		On exit  : 0/0
 11723 ;;		Unchanged: 0/0
 11724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11725 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11728 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11729 ;;Total ram usage:        2 bytes
 11730 ;; Hardware stack levels used:    1
 11731 ;; Hardware stack levels required when called:    4
 11732 ;; This function calls:
 11733 ;;		_I2C_Master_Wait
 11734 ;; This function is called by:
 11735 ;;		_ultrasonic_main
 11736 ;;		_UI_main
 11737 ;;		_brake
 11738 ;;		_start
 11739 ;;		_backwards
 11740 ;; This function uses a non-reentrant model
 11741 ;;
 11742                           
 11743                           	psect	text48
 11744  003AF6                     __ptext48:
 11745                           	opt callstack 0
 11746  003AF6                     _I2C_Master_Write:
 11747                           	opt callstack 23
 11748                           
 11749                           ;I2C.c: 71:     I2C_Master_Wait();
 11750                           
 11751                           ; BSR set to: 0
 11752                           ;incstack = 0
 11753  003AF6  EC61  F01D         	call	_I2C_Master_Wait	;wreg free
 11754                           
 11755                           ;I2C.c: 74:     SSPBUF = byteToWrite;
 11756  003AFA  C081  FFC9         	movff	I2C_Master_Write@byteToWrite,4041	;volatile
 11757  003AFE  0012               	return		;funcret
 11758  003B00                     __end_of_I2C_Master_Write:
 11759                           	opt callstack 0
 11760                           
 11761 ;; *************** function _I2C_Master_Stop *****************
 11762 ;; Defined at:
 11763 ;;		line 65 in file "I2C.c"
 11764 ;; Parameters:    Size  Location     Type
 11765 ;;		None
 11766 ;; Auto vars:     Size  Location     Type
 11767 ;;		None
 11768 ;; Return value:  Size  Location     Type
 11769 ;;                  1    wreg      void 
 11770 ;; Registers used:
 11771 ;;		wreg, status,2, status,0, cstack
 11772 ;; Tracked objects:
 11773 ;;		On entry : 0/0
 11774 ;;		On exit  : 0/0
 11775 ;;		Unchanged: 0/0
 11776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11781 ;;Total ram usage:        0 bytes
 11782 ;; Hardware stack levels used:    1
 11783 ;; Hardware stack levels required when called:    4
 11784 ;; This function calls:
 11785 ;;		_I2C_Master_Wait
 11786 ;; This function is called by:
 11787 ;;		_ultrasonic_main
 11788 ;;		_UI_main
 11789 ;;		_brake
 11790 ;;		_start
 11791 ;;		_backwards
 11792 ;; This function uses a non-reentrant model
 11793 ;;
 11794                           
 11795                           	psect	text49
 11796  003B00                     __ptext49:
 11797                           	opt callstack 0
 11798  003B00                     _I2C_Master_Stop:
 11799                           	opt callstack 23
 11800                           
 11801                           ;I2C.c: 66:     I2C_Master_Wait();
 11802                           
 11803                           ;incstack = 0
 11804  003B00  EC61  F01D         	call	_I2C_Master_Wait	;wreg free
 11805                           
 11806                           ;I2C.c: 67:     SSPCON2bits.PEN = 1;
 11807  003B04  84C5               	bsf	4037,2,c	;volatile
 11808  003B06  0012               	return		;funcret
 11809  003B08                     __end_of_I2C_Master_Stop:
 11810                           	opt callstack 0
 11811                           
 11812 ;; *************** function _I2C_Master_Start *****************
 11813 ;; Defined at:
 11814 ;;		line 55 in file "I2C.c"
 11815 ;; Parameters:    Size  Location     Type
 11816 ;;		None
 11817 ;; Auto vars:     Size  Location     Type
 11818 ;;		None
 11819 ;; Return value:  Size  Location     Type
 11820 ;;                  1    wreg      void 
 11821 ;; Registers used:
 11822 ;;		wreg, status,2, status,0, cstack
 11823 ;; Tracked objects:
 11824 ;;		On entry : 0/0
 11825 ;;		On exit  : 0/0
 11826 ;;		Unchanged: 0/0
 11827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11832 ;;Total ram usage:        0 bytes
 11833 ;; Hardware stack levels used:    1
 11834 ;; Hardware stack levels required when called:    4
 11835 ;; This function calls:
 11836 ;;		_I2C_Master_Wait
 11837 ;; This function is called by:
 11838 ;;		_ultrasonic_main
 11839 ;;		_UI_main
 11840 ;;		_brake
 11841 ;;		_start
 11842 ;;		_backwards
 11843 ;; This function uses a non-reentrant model
 11844 ;;
 11845                           
 11846                           	psect	text50
 11847  003B08                     __ptext50:
 11848                           	opt callstack 0
 11849  003B08                     _I2C_Master_Start:
 11850                           	opt callstack 23
 11851                           
 11852                           ;I2C.c: 56:     I2C_Master_Wait();
 11853                           
 11854                           ;incstack = 0
 11855  003B08  EC61  F01D         	call	_I2C_Master_Wait	;wreg free
 11856                           
 11857                           ;I2C.c: 57:     SSPCON2bits.SEN = 1;
 11858  003B0C  80C5               	bsf	4037,0,c	;volatile
 11859  003B0E  0012               	return		;funcret
 11860  003B10                     __end_of_I2C_Master_Start:
 11861                           	opt callstack 0
 11862                           
 11863 ;; *************** function _I2C_Master_Read *****************
 11864 ;; Defined at:
 11865 ;;		line 77 in file "I2C.c"
 11866 ;; Parameters:    Size  Location     Type
 11867 ;;  ackBit          1    wreg     unsigned char 
 11868 ;; Auto vars:     Size  Location     Type
 11869 ;;  ackBit          1    1[BANK0 ] unsigned char 
 11870 ;;  receivedByte    1    2[BANK0 ] unsigned char 
 11871 ;; Return value:  Size  Location     Type
 11872 ;;                  1    wreg      unsigned char 
 11873 ;; Registers used:
 11874 ;;		wreg, status,2, status,0, cstack
 11875 ;; Tracked objects:
 11876 ;;		On entry : 0/0
 11877 ;;		On exit  : 0/0
 11878 ;;		Unchanged: 0/0
 11879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11881 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11883 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11884 ;;Total ram usage:        2 bytes
 11885 ;; Hardware stack levels used:    1
 11886 ;; Hardware stack levels required when called:    4
 11887 ;; This function calls:
 11888 ;;		_I2C_Master_Wait
 11889 ;; This function is called by:
 11890 ;;		_ultrasonic_main
 11891 ;;		_UI_main
 11892 ;; This function uses a non-reentrant model
 11893 ;;
 11894                           
 11895                           	psect	text51
 11896  0039CA                     __ptext51:
 11897                           	opt callstack 0
 11898  0039CA                     _I2C_Master_Read:
 11899                           	opt callstack 25
 11900                           
 11901                           ;incstack = 0
 11902                           ;I2C_Master_Read@ackBit stored from wreg
 11903  0039CA  0100               	movlb	0	; () banked
 11904  0039CC  6F81               	movwf	I2C_Master_Read@ackBit& (0+255),b
 11905                           
 11906                           ;I2C.c: 78:     I2C_Master_Wait();
 11907  0039CE  EC61  F01D         	call	_I2C_Master_Wait	;wreg free
 11908                           
 11909                           ;I2C.c: 79:     SSPCON2bits.RCEN = 1;
 11910  0039D2  86C5               	bsf	4037,3,c	;volatile
 11911                           
 11912                           ;I2C.c: 81:     I2C_Master_Wait();
 11913  0039D4  EC61  F01D         	call	_I2C_Master_Wait	;wreg free
 11914                           
 11915                           ;I2C.c: 84:     unsigned char receivedByte = SSPBUF;
 11916  0039D8  CFC9 F082          	movff	4041,I2C_Master_Read@receivedByte	;volatile
 11917                           
 11918                           ;I2C.c: 86:     I2C_Master_Wait();
 11919  0039DC  EC61  F01D         	call	_I2C_Master_Wait	;wreg free
 11920                           
 11921                           ;I2C.c: 87:     SSPCON2bits.ACKDT = ackBit;
 11922  0039E0  0100               	movlb	0	; () banked
 11923  0039E2  B181               	btfsc	I2C_Master_Read@ackBit& (0+255),0,b
 11924  0039E4  D002               	bra	u7435
 11925  0039E6  9AC5               	bcf	4037,5,c	;volatile
 11926  0039E8  D001               	bra	u7436
 11927  0039EA                     u7435:
 11928  0039EA  8AC5               	bsf	4037,5,c	;volatile
 11929  0039EC                     u7436:
 11930                           
 11931                           ;I2C.c: 88:     SSPCON2bits.ACKEN = 1;
 11932  0039EC  88C5               	bsf	4037,4,c	;volatile
 11933                           
 11934                           ;I2C.c: 90:     return receivedByte;
 11935  0039EE  0100               	movlb	0	; () banked
 11936  0039F0  5182               	movf	I2C_Master_Read@receivedByte& (0+255),w,b
 11937                           
 11938                           ; BSR set to: 0
 11939  0039F2  0012               	return		;funcret
 11940  0039F4                     __end_of_I2C_Master_Read:
 11941                           	opt callstack 0
 11942                           
 11943 ;; *************** function _I2C_Master_Wait *****************
 11944 ;; Defined at:
 11945 ;;		line 21 in file "I2C.c"
 11946 ;; Parameters:    Size  Location     Type
 11947 ;;		None
 11948 ;; Auto vars:     Size  Location     Type
 11949 ;;		None
 11950 ;; Return value:  Size  Location     Type
 11951 ;;                  1    wreg      void 
 11952 ;; Registers used:
 11953 ;;		wreg, status,2, status,0
 11954 ;; Tracked objects:
 11955 ;;		On entry : 0/0
 11956 ;;		On exit  : 0/0
 11957 ;;		Unchanged: 0/0
 11958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11961 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11962 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11963 ;;Total ram usage:        1 bytes
 11964 ;; Hardware stack levels used:    1
 11965 ;; Hardware stack levels required when called:    3
 11966 ;; This function calls:
 11967 ;;		Nothing
 11968 ;; This function is called by:
 11969 ;;		_I2C_Master_Start
 11970 ;;		_I2C_Master_Stop
 11971 ;;		_I2C_Master_Write
 11972 ;;		_I2C_Master_Read
 11973 ;;		_I2C_Master_RepeatedStart
 11974 ;; This function uses a non-reentrant model
 11975 ;;
 11976                           
 11977                           	psect	text52
 11978  003AC2                     __ptext52:
 11979                           	opt callstack 0
 11980  003AC2                     _I2C_Master_Wait:
 11981                           	opt callstack 23
 11982                           
 11983                           ;I2C.c: 26:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F)){
 11984                           
 11985                           ;I2C.c: 28:     }
 11986                           
 11987                           ; BSR set to: 0
 11988                           ;incstack = 0
 11989  003AC2  B4C7               	btfsc	4039,2,c	;volatile
 11990  003AC4  D7FE               	goto	_I2C_Master_Wait
 11991  003AC6  CFC5 F080          	movff	4037,??_I2C_Master_Wait	;volatile
 11992  003ACA  0E1F               	movlw	31
 11993  003ACC  0100               	movlb	0	; () banked
 11994  003ACE  1780               	andwf	??_I2C_Master_Wait& (0+255),f,b
 11995  003AD0  B4D8               	btfsc	status,2,c
 11996  003AD2  0012               	return	
 11997  003AD4  D7F6               	goto	_I2C_Master_Wait
 11998  003AD6                     __end_of_I2C_Master_Wait:
 11999                           	opt callstack 0
 12000                           
 12001 ;; *************** function _I2C_Master_Init *****************
 12002 ;; Defined at:
 12003 ;;		line 32 in file "I2C.c"
 12004 ;; Parameters:    Size  Location     Type
 12005 ;;  clockFreq       4   13[BANK0 ] const unsigned long 
 12006 ;; Auto vars:     Size  Location     Type
 12007 ;;		None
 12008 ;; Return value:  Size  Location     Type
 12009 ;;                  1    wreg      void 
 12010 ;; Registers used:
 12011 ;;		wreg, status,2, status,0, cstack
 12012 ;; Tracked objects:
 12013 ;;		On entry : 0/0
 12014 ;;		On exit  : 0/0
 12015 ;;		Unchanged: 0/0
 12016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12017 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12019 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12020 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12021 ;;Total ram usage:        8 bytes
 12022 ;; Hardware stack levels used:    1
 12023 ;; Hardware stack levels required when called:    4
 12024 ;; This function calls:
 12025 ;;		___lldiv
 12026 ;; This function is called by:
 12027 ;;		_UI_main
 12028 ;;		_start
 12029 ;; This function uses a non-reentrant model
 12030 ;;
 12031                           
 12032                           	psect	text53
 12033  003506                     __ptext53:
 12034                           	opt callstack 0
 12035  003506                     _I2C_Master_Init:
 12036                           	opt callstack 25
 12037                           
 12038                           ;I2C.c: 34:     SSPCON1bits.SSPEN = 0;
 12039                           
 12040                           ; BSR set to: 0
 12041                           ;incstack = 0
 12042  003506  9AC6               	bcf	4038,5,c	;volatile
 12043                           
 12044                           ;I2C.c: 37:     TRISCbits.TRISC3 = 1;
 12045  003508  8694               	bsf	3988,3,c	;volatile
 12046                           
 12047                           ;I2C.c: 38:     TRISCbits.TRISC4 = 1;
 12048  00350A  8894               	bsf	3988,4,c	;volatile
 12049                           
 12050                           ;I2C.c: 43:     SSPADD = (10000000 / (4 * clockFreq)) - 1;
 12051  00350C  0E80               	movlw	128
 12052  00350E  0100               	movlb	0	; () banked
 12053  003510  6F80               	movwf	___lldiv@dividend& (0+255),b
 12054  003512  0E96               	movlw	150
 12055  003514  6F81               	movwf	(___lldiv@dividend+1)& (0+255),b
 12056  003516  0E98               	movlw	152
 12057  003518  6F82               	movwf	(___lldiv@dividend+2)& (0+255),b
 12058  00351A  0E00               	movlw	0
 12059  00351C  6F83               	movwf	(___lldiv@dividend+3)& (0+255),b
 12060  00351E  C08D  F091         	movff	I2C_Master_Init@clockFreq,??_I2C_Master_Init
 12061  003522  C08E  F092         	movff	I2C_Master_Init@clockFreq+1,??_I2C_Master_Init+1
 12062  003526  C08F  F093         	movff	I2C_Master_Init@clockFreq+2,??_I2C_Master_Init+2
 12063  00352A  C090  F094         	movff	I2C_Master_Init@clockFreq+3,??_I2C_Master_Init+3
 12064  00352E  0E02               	movlw	2
 12065  003530                     u7425:
 12066  003530  90D8               	bcf	status,0,c
 12067  003532  3791               	rlcf	??_I2C_Master_Init& (0+255),f,b
 12068  003534  3792               	rlcf	(??_I2C_Master_Init+1)& (0+255),f,b
 12069  003536  3793               	rlcf	(??_I2C_Master_Init+2)& (0+255),f,b
 12070  003538  3794               	rlcf	(??_I2C_Master_Init+3)& (0+255),f,b
 12071  00353A  2EE8               	decfsz	wreg,f,c
 12072  00353C  D7F9               	goto	u7425
 12073  00353E  C091  F084         	movff	??_I2C_Master_Init,___lldiv@divisor
 12074  003542  C092  F085         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
 12075  003546  C093  F086         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
 12076  00354A  C094  F087         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
 12077  00354E  EC5C  F019         	call	___lldiv	;wreg free
 12078  003552  0100               	movlb	0	; () banked
 12079  003554  0580               	decf	?___lldiv& (0+255),w,b
 12080  003556  6EC8               	movwf	4040,c	;volatile
 12081                           
 12082                           ; BSR set to: 0
 12083                           ;I2C.c: 46:     SSPSTAT = 0b10000000;
 12084  003558  0E80               	movlw	128
 12085  00355A  6EC7               	movwf	4039,c	;volatile
 12086                           
 12087                           ; BSR set to: 0
 12088                           ;I2C.c: 49:     SSPCON1 = 0b00101000;
 12089  00355C  0E28               	movlw	40
 12090  00355E  6EC6               	movwf	4038,c	;volatile
 12091                           
 12092                           ; BSR set to: 0
 12093                           ;I2C.c: 52:     SSPCON2 = 0b00000000;
 12094  003560  0E00               	movlw	0
 12095  003562  6EC5               	movwf	4037,c	;volatile
 12096                           
 12097                           ; BSR set to: 0
 12098  003564  0012               	return		;funcret
 12099  003566                     __end_of_I2C_Master_Init:
 12100                           	opt callstack 0
 12101                           
 12102 ;; *************** function ___lldiv *****************
 12103 ;; Defined at:
 12104 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__lldiv.c"
 12105 ;; Parameters:    Size  Location     Type
 12106 ;;  dividend        4    0[BANK0 ] unsigned long 
 12107 ;;  divisor         4    4[BANK0 ] unsigned long 
 12108 ;; Auto vars:     Size  Location     Type
 12109 ;;  quotient        4    8[BANK0 ] unsigned long 
 12110 ;;  counter         1   12[BANK0 ] unsigned char 
 12111 ;; Return value:  Size  Location     Type
 12112 ;;                  4    0[BANK0 ] unsigned long 
 12113 ;; Registers used:
 12114 ;;		wreg, status,2, status,0
 12115 ;; Tracked objects:
 12116 ;;		On entry : 0/0
 12117 ;;		On exit  : 0/0
 12118 ;;		Unchanged: 0/0
 12119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12120 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12121 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12123 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12124 ;;Total ram usage:       13 bytes
 12125 ;; Hardware stack levels used:    1
 12126 ;; Hardware stack levels required when called:    3
 12127 ;; This function calls:
 12128 ;;		Nothing
 12129 ;; This function is called by:
 12130 ;;		_I2C_Master_Init
 12131 ;; This function uses a non-reentrant model
 12132 ;;
 12133                           
 12134                           	psect	text54
 12135  0032B8                     __ptext54:
 12136                           	opt callstack 0
 12137  0032B8                     ___lldiv:
 12138                           	opt callstack 25
 12139                           
 12140                           ; BSR set to: 0
 12141                           ;incstack = 0
 12142  0032B8  0E00               	movlw	0
 12143  0032BA  0100               	movlb	0	; () banked
 12144  0032BC  6F88               	movwf	___lldiv@quotient& (0+255),b
 12145  0032BE  0E00               	movlw	0
 12146  0032C0  6F89               	movwf	(___lldiv@quotient+1)& (0+255),b
 12147  0032C2  0E00               	movlw	0
 12148  0032C4  6F8A               	movwf	(___lldiv@quotient+2)& (0+255),b
 12149  0032C6  0E00               	movlw	0
 12150  0032C8  6F8B               	movwf	(___lldiv@quotient+3)& (0+255),b
 12151                           
 12152                           ; BSR set to: 0
 12153  0032CA  5184               	movf	___lldiv@divisor& (0+255),w,b
 12154  0032CC  1185               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 12155  0032CE  1186               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 12156  0032D0  1187               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 12157  0032D2  B4D8               	btfsc	status,2,c
 12158  0032D4  D02A               	goto	l713
 12159                           
 12160                           ; BSR set to: 0
 12161  0032D6  0E01               	movlw	1
 12162  0032D8  6F8C               	movwf	___lldiv@counter& (0+255),b
 12163  0032DA  D006               	goto	l6911
 12164  0032DC                     l6909:
 12165                           
 12166                           ; BSR set to: 0
 12167  0032DC  90D8               	bcf	status,0,c
 12168  0032DE  3784               	rlcf	___lldiv@divisor& (0+255),f,b
 12169  0032E0  3785               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 12170  0032E2  3786               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 12171  0032E4  3787               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 12172  0032E6  2B8C               	incf	___lldiv@counter& (0+255),f,b
 12173  0032E8                     l6911:
 12174                           
 12175                           ; BSR set to: 0
 12176  0032E8  AF87               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 12177  0032EA  D7F8               	goto	l6909
 12178  0032EC                     u7400:
 12179                           
 12180                           ; BSR set to: 0
 12181  0032EC  90D8               	bcf	status,0,c
 12182  0032EE  3788               	rlcf	___lldiv@quotient& (0+255),f,b
 12183  0032F0  3789               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 12184  0032F2  378A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 12185  0032F4  378B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 12186                           
 12187                           ; BSR set to: 0
 12188  0032F6  5184               	movf	___lldiv@divisor& (0+255),w,b
 12189  0032F8  5D80               	subwf	___lldiv@dividend& (0+255),w,b
 12190  0032FA  5185               	movf	(___lldiv@divisor+1)& (0+255),w,b
 12191  0032FC  5981               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 12192  0032FE  5186               	movf	(___lldiv@divisor+2)& (0+255),w,b
 12193  003300  5982               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 12194  003302  5187               	movf	(___lldiv@divisor+3)& (0+255),w,b
 12195  003304  5983               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 12196  003306  A0D8               	btfss	status,0,c
 12197  003308  D009               	goto	l6921
 12198                           
 12199                           ; BSR set to: 0
 12200  00330A  5184               	movf	___lldiv@divisor& (0+255),w,b
 12201  00330C  5F80               	subwf	___lldiv@dividend& (0+255),f,b
 12202  00330E  5185               	movf	(___lldiv@divisor+1)& (0+255),w,b
 12203  003310  5B81               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 12204  003312  5186               	movf	(___lldiv@divisor+2)& (0+255),w,b
 12205  003314  5B82               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 12206  003316  5187               	movf	(___lldiv@divisor+3)& (0+255),w,b
 12207  003318  5B83               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 12208                           
 12209                           ; BSR set to: 0
 12210  00331A  8188               	bsf	___lldiv@quotient& (0+255),0,b
 12211  00331C                     l6921:
 12212                           
 12213                           ; BSR set to: 0
 12214  00331C  90D8               	bcf	status,0,c
 12215  00331E  3387               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 12216  003320  3386               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 12217  003322  3385               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 12218  003324  3384               	rrcf	___lldiv@divisor& (0+255),f,b
 12219                           
 12220                           ; BSR set to: 0
 12221  003326  2F8C               	decfsz	___lldiv@counter& (0+255),f,b
 12222  003328  D7E1               	goto	u7400
 12223  00332A                     l713:
 12224                           
 12225                           ; BSR set to: 0
 12226  00332A  C088  F080         	movff	___lldiv@quotient,?___lldiv
 12227  00332E  C089  F081         	movff	___lldiv@quotient+1,?___lldiv+1
 12228  003332  C08A  F082         	movff	___lldiv@quotient+2,?___lldiv+2
 12229  003336  C08B  F083         	movff	___lldiv@quotient+3,?___lldiv+3
 12230                           
 12231                           ; BSR set to: 0
 12232  00333A  0012               	return		;funcret
 12233  00333C                     __end_of___lldiv:
 12234                           	opt callstack 0
 12235                           
 12236 ;; *************** function _ISR *****************
 12237 ;; Defined at:
 12238 ;;		line 71 in file "main.c"
 12239 ;; Parameters:    Size  Location     Type
 12240 ;;		None
 12241 ;; Auto vars:     Size  Location     Type
 12242 ;;		None
 12243 ;; Return value:  Size  Location     Type
 12244 ;;                  1    wreg      void 
 12245 ;; Registers used:
 12246 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12247 ;; Tracked objects:
 12248 ;;		On entry : 0/0
 12249 ;;		On exit  : 0/0
 12250 ;;		Unchanged: 0/0
 12251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12254 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12255 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12256 ;;Total ram usage:        2 bytes
 12257 ;; Hardware stack levels used:    1
 12258 ;; Hardware stack levels required when called:    2
 12259 ;; This function calls:
 12260 ;;		_echo
 12261 ;; This function is called by:
 12262 ;;		Interrupt level 2
 12263 ;; This function uses a non-reentrant model
 12264 ;;
 12265                           
 12266                           	psect	intcode
 12267  000008                     __pintcode:
 12268                           	opt callstack 0
 12269  000008                     _ISR:
 12270                           	opt callstack 14
 12271                           
 12272                           ; BSR set to: 0
 12273                           ;incstack = 0
 12274  000008  826E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 12275  00000A  EDCB  F01B         	call	int_func,f	;refresh shadow registers
 12276                           
 12277                           	psect	intcode_body
 12278  003796                     __pintcode_body:
 12279                           	opt callstack 14
 12280  003796                     int_func:
 12281                           	opt callstack 14
 12282  003796  0006               	pop		; remove dummy address from shadow register refresh
 12283  003798  CFD9 F036          	movff	fsr2l,??_ISR
 12284  00379C  CFDA F037          	movff	fsr2h,??_ISR+1
 12285                           
 12286                           ;main.c: 72:  if(RBIF == 1){
 12287  0037A0  A0F2               	btfss	4082,0,c	;volatile
 12288  0037A2  D012               	goto	i2l367
 12289                           
 12290                           ;main.c: 73:         if (sens){
 12291  0037A4  5058               	movf	_sens,w,c	;volatile
 12292  0037A6  1059               	iorwf	_sens+1,w,c	;volatile
 12293  0037A8  B4D8               	btfsc	status,2,c
 12294  0037AA  D005               	goto	i2l5915
 12295                           
 12296                           ;main.c: 74:             RBIE = 0;
 12297  0037AC  96F2               	bcf	4082,3,c	;volatile
 12298                           
 12299                           ;main.c: 75:             echo();
 12300  0037AE  EC13  F004         	call	_echo	;wreg free
 12301                           
 12302                           ;main.c: 76:             RBIF = 0;
 12303  0037B2  90F2               	bcf	4082,0,c	;volatile
 12304                           
 12305                           ;main.c: 77:             RBIE = 1;
 12306  0037B4  86F2               	bsf	4082,3,c	;volatile
 12307  0037B6                     i2l5915:
 12308                           
 12309                           ;main.c: 79:         if (~sens){
 12310  0037B6  2858               	incf	_sens,w,c	;volatile
 12311  0037B8  E103               	bnz	i2u620_40
 12312  0037BA  2859               	incf	_sens+1,w,c	;volatile
 12313  0037BC  B4D8               	btfsc	status,2,c
 12314  0037BE  D004               	goto	i2l367
 12315  0037C0                     i2u620_40:
 12316                           
 12317                           ;main.c: 80:             key_was_pressed = 1;
 12318  0037C0  0E01               	movlw	1
 12319  0037C2  0101               	movlb	1	; () banked
 12320  0037C4  6F68               	movwf	_key_was_pressed& (0+255),b	;volatile
 12321                           
 12322                           ; BSR set to: 1
 12323                           ;main.c: 81:             INT1IF = 0;
 12324  0037C6  90F0               	bcf	4080,0,c	;volatile
 12325  0037C8                     i2l367:
 12326  0037C8  C037  FFDA         	movff	??_ISR+1,fsr2h
 12327  0037CC  C036  FFD9         	movff	??_ISR,fsr2l
 12328  0037D0  926E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 12329  0037D2  0011               	retfie		f
 12330  0037D4                     __end_of_ISR:
 12331                           	opt callstack 0
 12332                           
 12333 ;; *************** function _echo *****************
 12334 ;; Defined at:
 12335 ;;		line 99 in file "main.c"
 12336 ;; Parameters:    Size  Location     Type
 12337 ;;		None
 12338 ;; Auto vars:     Size  Location     Type
 12339 ;;		None
 12340 ;; Return value:  Size  Location     Type
 12341 ;;                  1    wreg      void 
 12342 ;; Registers used:
 12343 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12344 ;; Tracked objects:
 12345 ;;		On entry : 0/0
 12346 ;;		On exit  : 0/0
 12347 ;;		Unchanged: 0/0
 12348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12351 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12352 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12353 ;;Total ram usage:        4 bytes
 12354 ;; Hardware stack levels used:    1
 12355 ;; Hardware stack levels required when called:    1
 12356 ;; This function calls:
 12357 ;;		___fldiv
 12358 ;;		___fltol
 12359 ;;		___xxtofl
 12360 ;;		i2___awdiv
 12361 ;; This function is called by:
 12362 ;;		_ISR
 12363 ;; This function uses a non-reentrant model
 12364 ;;
 12365                           
 12366                           	psect	text56
 12367  000826                     __ptext56:
 12368                           	opt callstack 0
 12369  000826                     _echo:
 12370                           	opt callstack 14
 12371                           
 12372                           ;main.c: 100:     if (b==1){
 12373                           
 12374                           ;incstack = 0
 12375  000826  045A               	decf	_b,w,c
 12376  000828  105B               	iorwf	_b+1,w,c
 12377  00082A  A4D8               	btfss	status,2,c
 12378  00082C  D0A2               	goto	i2l5373
 12379                           
 12380                           ;main.c: 101:         if (RB7 == 1){
 12381  00082E  BE81               	btfsc	3969,7,c	;volatile
 12382                           
 12383                           ;main.c: 102:             TMR1ON = 1;
 12384  000830  80CD               	bsf	4045,0,c	;volatile
 12385                           
 12386                           ;main.c: 104:         if (RB7 == 0){
 12387                           
 12388                           ;main.c: 103:         }
 12389  000832  BE81               	btfsc	3969,7,c	;volatile
 12390  000834  D037               	goto	i2l5349
 12391                           
 12392                           ;main.c: 105:             TMR1ON = 0;
 12393  000836  90CD               	bcf	4045,0,c	;volatile
 12394                           
 12395                           ;main.c: 106:             a[0] = (TMR1L | (TMR1H<<8))/58.82;
 12396  000838  0EAE               	movlw	174
 12397  00083A  6E13               	movwf	___fldiv@a,c
 12398  00083C  0E47               	movlw	71
 12399  00083E  6E14               	movwf	___fldiv@a+1,c
 12400  000840  0E6B               	movlw	107
 12401  000842  6E15               	movwf	___fldiv@a+2,c
 12402  000844  0E42               	movlw	66
 12403  000846  6E16               	movwf	___fldiv@a+3,c
 12404  000848  50CF               	movf	4047,w,c	;volatile
 12405  00084A  6E33               	movwf	(??_echo+1)& (0+255),c
 12406  00084C  6A32               	clrf	??_echo& (0+255),c
 12407  00084E  50CE               	movf	4046,w,c	;volatile
 12408  000850  6E34               	movwf	(??_echo+2)& (0+255),c
 12409  000852  6A35               	clrf	(??_echo+3)& (0+255),c
 12410  000854  5032               	movf	??_echo,w,c
 12411  000856  1234               	iorwf	??_echo+2,f,c
 12412  000858  5033               	movf	??_echo+1,w,c
 12413  00085A  1235               	iorwf	??_echo+3,f,c
 12414  00085C  C034  F001         	movff	??_echo+2,___xxtofl@val
 12415  000860  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 12416  000864  0E00               	movlw	0
 12417  000866  BE02               	btfsc	___xxtofl@val+1,7,c
 12418  000868  0EFF               	movlw	-1
 12419  00086A  6E03               	movwf	___xxtofl@val+2,c
 12420  00086C  6E04               	movwf	___xxtofl@val+3,c
 12421  00086E  0E01               	movlw	1
 12422  000870  EC3F  F014         	call	___xxtofl
 12423  000874  C001  F00F         	movff	?___xxtofl,___fldiv@b
 12424  000878  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 12425  00087C  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 12426  000880  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 12427  000884  EC73  F00C         	call	___fldiv	;wreg free
 12428  000888  C00F  F028         	movff	?___fldiv,___fltol@f1
 12429  00088C  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 12430  000890  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 12431  000894  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 12432  000898  EC94  F017         	call	___fltol	;wreg free
 12433  00089C  C028  F061         	movff	?___fltol,_a
 12434  0008A0  C029  F062         	movff	?___fltol+1,_a+1
 12435  0008A4                     i2l5349:
 12436                           
 12437                           ;main.c: 110:         if (a[0]>=2 && a[0]<=200){
 12438  0008A4  BE62               	btfsc	_a+1,7,c
 12439  0008A6  D065               	goto	i2l5373
 12440  0008A8  5062               	movf	_a+1,w,c
 12441  0008AA  E104               	bnz	i2u533_40
 12442  0008AC  0E02               	movlw	2
 12443  0008AE  5C61               	subwf	_a,w,c
 12444  0008B0  A0D8               	btfss	status,0,c
 12445  0008B2  D05F               	goto	i2l5373
 12446  0008B4                     i2u533_40:
 12447  0008B4  BE62               	btfsc	_a+1,7,c
 12448  0008B6  D006               	goto	i2u534_40
 12449  0008B8  5062               	movf	_a+1,w,c
 12450  0008BA  E15B               	bnz	i2l5373
 12451  0008BC  0EC9               	movlw	201
 12452  0008BE  5C61               	subwf	_a,w,c
 12453  0008C0  B0D8               	btfsc	status,0,c
 12454  0008C2  D057               	goto	i2l5373
 12455  0008C4                     i2u534_40:
 12456                           
 12457                           ;main.c: 111:             if ((~sumf[0])&&(dist_final[0][0]!=0)&&(dist_final[0][1]!=0)&&
      +                          (dist_final[0][2]!=0)){
 12458  0008C4  0440               	decf	_sumf,w,c
 12459  0008C6  B4D8               	btfsc	status,2,c
 12460  0008C8  D01B               	goto	i2l5365
 12461  0008CA  0101               	movlb	1	; () banked
 12462  0008CC  5169               	movf	_dist_final& (0+255),w,b
 12463  0008CE  116A               	iorwf	(_dist_final+1)& (0+255),w,b
 12464  0008D0  B4D8               	btfsc	status,2,c
 12465  0008D2  D016               	goto	i2l5365
 12466                           
 12467                           ; BSR set to: 1
 12468  0008D4  516B               	movf	(_dist_final+2)& (0+255),w,b
 12469  0008D6  116C               	iorwf	(_dist_final+3)& (0+255),w,b
 12470  0008D8  B4D8               	btfsc	status,2,c
 12471  0008DA  D012               	goto	i2l5365
 12472                           
 12473                           ; BSR set to: 1
 12474  0008DC  516D               	movf	(_dist_final+4)& (0+255),w,b
 12475  0008DE  116E               	iorwf	(_dist_final+5)& (0+255),w,b
 12476  0008E0  B4D8               	btfsc	status,2,c
 12477  0008E2  D00E               	goto	i2l5365
 12478                           
 12479                           ; BSR set to: 1
 12480                           ;main.c: 112:                 sum[0] = (dist_final[0][0]+dist_final[0][1]+dist_final[0][
      +                          2]);
 12481  0008E4  516D               	movf	(_dist_final+4)& (0+255),w,b
 12482  0008E6  256B               	addwf	(_dist_final+2)& (0+255),w,b
 12483  0008E8  6E32               	movwf	??_echo& (0+255),c
 12484  0008EA  516E               	movf	(_dist_final+5)& (0+255),w,b
 12485  0008EC  216C               	addwfc	(_dist_final+3)& (0+255),w,b
 12486  0008EE  6E33               	movwf	(??_echo+1)& (0+255),c
 12487  0008F0  5169               	movf	_dist_final& (0+255),w,b
 12488  0008F2  2432               	addwf	??_echo,w,c
 12489  0008F4  6E38               	movwf	_sum,c
 12490  0008F6  516A               	movf	(_dist_final+1)& (0+255),w,b
 12491  0008F8  2033               	addwfc	??_echo+1,w,c
 12492  0008FA  6E39               	movwf	_sum+1,c
 12493                           
 12494                           ; BSR set to: 1
 12495                           ;main.c: 113:                 sumf[0] = 1;
 12496  0008FC  0E01               	movlw	1
 12497  0008FE  6E40               	movwf	_sumf,c
 12498  000900                     i2l5365:
 12499                           
 12500                           ;main.c: 115:             if (sumf[0]){
 12501  000900  5040               	movf	_sumf,w,c
 12502  000902  B4D8               	btfsc	status,2,c
 12503  000904  D029               	goto	i2l5371
 12504                           
 12505                           ;main.c: 116:                 sum[0] = sum[0] - dist_final[0][meas] + a[0];
 12506  000906  90D8               	bcf	status,0,c
 12507  000908  3450               	rlcf	_meas,w,c	;volatile
 12508  00090A  6ED9               	movwf	fsr2l,c
 12509  00090C  3451               	rlcf	_meas+1,w,c	;volatile
 12510  00090E  6EDA               	movwf	fsr2h,c
 12511  000910  0E69               	movlw	low _dist_final
 12512  000912  26D9               	addwf	fsr2l,f,c
 12513  000914  0E01               	movlw	high _dist_final
 12514  000916  22DA               	addwfc	fsr2h,f,c
 12515  000918  CFDE F032          	movff	postinc2,??_echo
 12516  00091C  CFDD F033          	movff	postdec2,??_echo+1
 12517  000920  C038  F034         	movff	_sum,??_echo+2
 12518  000924  C039  F035         	movff	_sum+1,??_echo+3
 12519  000928  5032               	movf	??_echo,w,c
 12520  00092A  5E34               	subwf	??_echo+2,f,c
 12521  00092C  5033               	movf	??_echo+1,w,c
 12522  00092E  5A35               	subwfb	??_echo+3,f,c
 12523  000930  5061               	movf	_a,w,c
 12524  000932  2434               	addwf	??_echo+2,w,c
 12525  000934  6E38               	movwf	_sum,c
 12526  000936  5062               	movf	_a+1,w,c
 12527  000938  2035               	addwfc	??_echo+3,w,c
 12528  00093A  6E39               	movwf	_sum+1,c
 12529                           
 12530                           ;main.c: 117:                 dist_final[0][5] = (sum[0]/5);
 12531  00093C  C038  F001         	movff	_sum,i2___awdiv@dividend
 12532  000940  C039  F002         	movff	_sum+1,i2___awdiv@dividend+1
 12533  000944  0E00               	movlw	0
 12534  000946  6E04               	movwf	i2___awdiv@divisor+1,c
 12535  000948  0E05               	movlw	5
 12536  00094A  6E03               	movwf	i2___awdiv@divisor,c
 12537  00094C  EC9E  F019         	call	i2___awdiv	;wreg free
 12538  000950  C001  F173         	movff	?i2___awdiv,_dist_final+10
 12539  000954  C002  F174         	movff	?i2___awdiv+1,_dist_final+11
 12540  000958                     i2l5371:
 12541                           
 12542                           ;main.c: 119:             dist_final[0][meas] = a[0];
 12543  000958  90D8               	bcf	status,0,c
 12544  00095A  3450               	rlcf	_meas,w,c	;volatile
 12545  00095C  6ED9               	movwf	fsr2l,c
 12546  00095E  3451               	rlcf	_meas+1,w,c	;volatile
 12547  000960  6EDA               	movwf	fsr2h,c
 12548  000962  0E69               	movlw	low _dist_final
 12549  000964  26D9               	addwf	fsr2l,f,c
 12550  000966  0E01               	movlw	high _dist_final
 12551  000968  22DA               	addwfc	fsr2h,f,c
 12552  00096A  C061  FFDE         	movff	_a,postinc2
 12553  00096E  C062  FFDD         	movff	_a+1,postdec2
 12554  000972                     i2l5373:
 12555                           
 12556                           ;main.c: 122:     if (b==2){
 12557  000972  0E02               	movlw	2
 12558  000974  185A               	xorwf	_b,w,c
 12559  000976  105B               	iorwf	_b+1,w,c
 12560  000978  A4D8               	btfss	status,2,c
 12561  00097A  D0A4               	goto	i2l5407
 12562                           
 12563                           ;main.c: 123:         if (RB6 == 1){
 12564  00097C  BC81               	btfsc	3969,6,c	;volatile
 12565                           
 12566                           ;main.c: 124:             TMR1ON = 1;
 12567  00097E  80CD               	bsf	4045,0,c	;volatile
 12568                           
 12569                           ;main.c: 126:         if (RB6 == 0){
 12570                           
 12571                           ;main.c: 125:         }
 12572  000980  BC81               	btfsc	3969,6,c	;volatile
 12573  000982  D037               	goto	i2l5383
 12574                           
 12575                           ;main.c: 127:             TMR1ON = 0;
 12576  000984  90CD               	bcf	4045,0,c	;volatile
 12577                           
 12578                           ;main.c: 128:             a[1] = (TMR1L | (TMR1H<<8))/58.82;
 12579  000986  0EAE               	movlw	174
 12580  000988  6E13               	movwf	___fldiv@a,c
 12581  00098A  0E47               	movlw	71
 12582  00098C  6E14               	movwf	___fldiv@a+1,c
 12583  00098E  0E6B               	movlw	107
 12584  000990  6E15               	movwf	___fldiv@a+2,c
 12585  000992  0E42               	movlw	66
 12586  000994  6E16               	movwf	___fldiv@a+3,c
 12587  000996  50CF               	movf	4047,w,c	;volatile
 12588  000998  6E33               	movwf	(??_echo+1)& (0+255),c
 12589  00099A  6A32               	clrf	??_echo& (0+255),c
 12590  00099C  50CE               	movf	4046,w,c	;volatile
 12591  00099E  6E34               	movwf	(??_echo+2)& (0+255),c
 12592  0009A0  6A35               	clrf	(??_echo+3)& (0+255),c
 12593  0009A2  5032               	movf	??_echo,w,c
 12594  0009A4  1234               	iorwf	??_echo+2,f,c
 12595  0009A6  5033               	movf	??_echo+1,w,c
 12596  0009A8  1235               	iorwf	??_echo+3,f,c
 12597  0009AA  C034  F001         	movff	??_echo+2,___xxtofl@val
 12598  0009AE  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 12599  0009B2  0E00               	movlw	0
 12600  0009B4  BE02               	btfsc	___xxtofl@val+1,7,c
 12601  0009B6  0EFF               	movlw	-1
 12602  0009B8  6E03               	movwf	___xxtofl@val+2,c
 12603  0009BA  6E04               	movwf	___xxtofl@val+3,c
 12604  0009BC  0E01               	movlw	1
 12605  0009BE  EC3F  F014         	call	___xxtofl
 12606  0009C2  C001  F00F         	movff	?___xxtofl,___fldiv@b
 12607  0009C6  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 12608  0009CA  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 12609  0009CE  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 12610  0009D2  EC73  F00C         	call	___fldiv	;wreg free
 12611  0009D6  C00F  F028         	movff	?___fldiv,___fltol@f1
 12612  0009DA  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 12613  0009DE  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 12614  0009E2  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 12615  0009E6  EC94  F017         	call	___fltol	;wreg free
 12616  0009EA  C028  F063         	movff	?___fltol,_a+2
 12617  0009EE  C029  F064         	movff	?___fltol+1,_a+3
 12618  0009F2                     i2l5383:
 12619                           
 12620                           ;main.c: 131:                 if (a[1]>=2 && a[1]<=200){
 12621  0009F2  BE64               	btfsc	_a+3,7,c
 12622  0009F4  D067               	goto	i2l5407
 12623  0009F6  5064               	movf	_a+3,w,c
 12624  0009F8  E104               	bnz	i2u543_40
 12625  0009FA  0E02               	movlw	2
 12626  0009FC  5C63               	subwf	_a+2,w,c
 12627  0009FE  A0D8               	btfss	status,0,c
 12628  000A00  D061               	goto	i2l5407
 12629  000A02                     i2u543_40:
 12630  000A02  BE64               	btfsc	_a+3,7,c
 12631  000A04  D006               	goto	i2u544_40
 12632  000A06  5064               	movf	_a+3,w,c
 12633  000A08  E15D               	bnz	i2l5407
 12634  000A0A  0EC9               	movlw	201
 12635  000A0C  5C63               	subwf	_a+2,w,c
 12636  000A0E  B0D8               	btfsc	status,0,c
 12637  000A10  D059               	goto	i2l5407
 12638  000A12                     i2u544_40:
 12639                           
 12640                           ;main.c: 133:                 if ((~sumf[1])&&(dist_final[1][0]!=0)&&(dist_final[1][1]!=
      +                          0)&&(dist_final[1][2]!=0)){
 12641  000A12  0441               	decf	_sumf+1,w,c
 12642  000A14  B4D8               	btfsc	status,2,c
 12643  000A16  D01B               	goto	i2l5399
 12644  000A18  0101               	movlb	1	; () banked
 12645  000A1A  5175               	movf	(_dist_final+12)& (0+255),w,b
 12646  000A1C  1176               	iorwf	(_dist_final+13)& (0+255),w,b
 12647  000A1E  B4D8               	btfsc	status,2,c
 12648  000A20  D016               	goto	i2l5399
 12649                           
 12650                           ; BSR set to: 1
 12651  000A22  5177               	movf	(_dist_final+14)& (0+255),w,b
 12652  000A24  1178               	iorwf	(_dist_final+15)& (0+255),w,b
 12653  000A26  B4D8               	btfsc	status,2,c
 12654  000A28  D012               	goto	i2l5399
 12655                           
 12656                           ; BSR set to: 1
 12657  000A2A  5179               	movf	(_dist_final+16)& (0+255),w,b
 12658  000A2C  117A               	iorwf	(_dist_final+17)& (0+255),w,b
 12659  000A2E  B4D8               	btfsc	status,2,c
 12660  000A30  D00E               	goto	i2l5399
 12661                           
 12662                           ; BSR set to: 1
 12663                           ;main.c: 134:             sum[1] = (dist_final[1][0]+dist_final[1][1]+dist_final[1][2]);
 12664  000A32  5177               	movf	(_dist_final+14)& (0+255),w,b
 12665  000A34  2575               	addwf	(_dist_final+12)& (0+255),w,b
 12666  000A36  6E32               	movwf	??_echo& (0+255),c
 12667  000A38  5178               	movf	(_dist_final+15)& (0+255),w,b
 12668  000A3A  2176               	addwfc	(_dist_final+13)& (0+255),w,b
 12669  000A3C  6E33               	movwf	(??_echo+1)& (0+255),c
 12670  000A3E  5179               	movf	(_dist_final+16)& (0+255),w,b
 12671  000A40  2432               	addwf	??_echo,w,c
 12672  000A42  6E3A               	movwf	_sum+2,c
 12673  000A44  517A               	movf	(_dist_final+17)& (0+255),w,b
 12674  000A46  2033               	addwfc	??_echo+1,w,c
 12675  000A48  6E3B               	movwf	_sum+3,c
 12676                           
 12677                           ; BSR set to: 1
 12678                           ;main.c: 135:             sumf[1] = 1;
 12679  000A4A  0E01               	movlw	1
 12680  000A4C  6E41               	movwf	_sumf+1,c
 12681  000A4E                     i2l5399:
 12682                           
 12683                           ;main.c: 137:         if (sumf[1]){
 12684  000A4E  5041               	movf	_sumf+1,w,c
 12685  000A50  B4D8               	btfsc	status,2,c
 12686  000A52  D02B               	goto	i2l5405
 12687                           
 12688                           ;main.c: 138:             sum[1] = sum[1] - dist_final[1][meas] + a[1];
 12689  000A54  90D8               	bcf	status,0,c
 12690  000A56  3450               	rlcf	_meas,w,c	;volatile
 12691  000A58  6ED9               	movwf	fsr2l,c
 12692  000A5A  3451               	rlcf	_meas+1,w,c	;volatile
 12693  000A5C  6EDA               	movwf	fsr2h,c
 12694  000A5E  0E75               	movlw	low (_dist_final+12)
 12695  000A60  26D9               	addwf	fsr2l,f,c
 12696  000A62  0E01               	movlw	high (_dist_final+12)
 12697  000A64  22DA               	addwfc	fsr2h,f,c
 12698  000A66  CFDE F032          	movff	postinc2,??_echo
 12699  000A6A  CFDD F033          	movff	postdec2,??_echo+1
 12700  000A6E  EE20  F03A         	lfsr	2,_sum+2
 12701  000A72  CFDE F034          	movff	postinc2,??_echo+2
 12702  000A76  CFDD F035          	movff	postdec2,??_echo+3
 12703  000A7A  5032               	movf	??_echo,w,c
 12704  000A7C  5E34               	subwf	??_echo+2,f,c
 12705  000A7E  5033               	movf	??_echo+1,w,c
 12706  000A80  5A35               	subwfb	??_echo+3,f,c
 12707  000A82  5063               	movf	_a+2,w,c
 12708  000A84  2434               	addwf	??_echo+2,w,c
 12709  000A86  6E3A               	movwf	_sum+2,c
 12710  000A88  5064               	movf	_a+3,w,c
 12711  000A8A  2035               	addwfc	??_echo+3,w,c
 12712  000A8C  6E3B               	movwf	_sum+3,c
 12713                           
 12714                           ;main.c: 139:             dist_final[1][5] = (sum[1]/5);
 12715  000A8E  C03A  F001         	movff	_sum+2,i2___awdiv@dividend
 12716  000A92  C03B  F002         	movff	_sum+3,i2___awdiv@dividend+1
 12717  000A96  0E00               	movlw	0
 12718  000A98  6E04               	movwf	i2___awdiv@divisor+1,c
 12719  000A9A  0E05               	movlw	5
 12720  000A9C  6E03               	movwf	i2___awdiv@divisor,c
 12721  000A9E  EC9E  F019         	call	i2___awdiv	;wreg free
 12722  000AA2  C001  F17F         	movff	?i2___awdiv,_dist_final+22
 12723  000AA6  C002  F180         	movff	?i2___awdiv+1,_dist_final+23
 12724  000AAA                     i2l5405:
 12725                           
 12726                           ;main.c: 141:         dist_final[1][meas] = a[1];
 12727  000AAA  90D8               	bcf	status,0,c
 12728  000AAC  3450               	rlcf	_meas,w,c	;volatile
 12729  000AAE  6ED9               	movwf	fsr2l,c
 12730  000AB0  3451               	rlcf	_meas+1,w,c	;volatile
 12731  000AB2  6EDA               	movwf	fsr2h,c
 12732  000AB4  0E75               	movlw	low (_dist_final+12)
 12733  000AB6  26D9               	addwf	fsr2l,f,c
 12734  000AB8  0E01               	movlw	high (_dist_final+12)
 12735  000ABA  22DA               	addwfc	fsr2h,f,c
 12736  000ABC  C063  FFDE         	movff	_a+2,postinc2
 12737  000AC0  C064  FFDD         	movff	_a+3,postdec2
 12738  000AC4                     i2l5407:
 12739                           
 12740                           ;main.c: 144:     if (b==3){
 12741  000AC4  0E03               	movlw	3
 12742  000AC6  185A               	xorwf	_b,w,c
 12743  000AC8  105B               	iorwf	_b+1,w,c
 12744  000ACA  A4D8               	btfss	status,2,c
 12745  000ACC  D0A4               	goto	i2l5441
 12746                           
 12747                           ;main.c: 145:         if (RB5 == 1){
 12748  000ACE  BA81               	btfsc	3969,5,c	;volatile
 12749                           
 12750                           ;main.c: 146:             TMR1ON = 1;
 12751  000AD0  80CD               	bsf	4045,0,c	;volatile
 12752                           
 12753                           ;main.c: 148:         if (RB5 == 0){
 12754                           
 12755                           ;main.c: 147:         }
 12756  000AD2  BA81               	btfsc	3969,5,c	;volatile
 12757  000AD4  D037               	goto	i2l5417
 12758                           
 12759                           ;main.c: 149:             TMR1ON = 0;
 12760  000AD6  90CD               	bcf	4045,0,c	;volatile
 12761                           
 12762                           ;main.c: 150:             a[2] = (TMR1L | (TMR1H<<8))/58.82;
 12763  000AD8  0EAE               	movlw	174
 12764  000ADA  6E13               	movwf	___fldiv@a,c
 12765  000ADC  0E47               	movlw	71
 12766  000ADE  6E14               	movwf	___fldiv@a+1,c
 12767  000AE0  0E6B               	movlw	107
 12768  000AE2  6E15               	movwf	___fldiv@a+2,c
 12769  000AE4  0E42               	movlw	66
 12770  000AE6  6E16               	movwf	___fldiv@a+3,c
 12771  000AE8  50CF               	movf	4047,w,c	;volatile
 12772  000AEA  6E33               	movwf	(??_echo+1)& (0+255),c
 12773  000AEC  6A32               	clrf	??_echo& (0+255),c
 12774  000AEE  50CE               	movf	4046,w,c	;volatile
 12775  000AF0  6E34               	movwf	(??_echo+2)& (0+255),c
 12776  000AF2  6A35               	clrf	(??_echo+3)& (0+255),c
 12777  000AF4  5032               	movf	??_echo,w,c
 12778  000AF6  1234               	iorwf	??_echo+2,f,c
 12779  000AF8  5033               	movf	??_echo+1,w,c
 12780  000AFA  1235               	iorwf	??_echo+3,f,c
 12781  000AFC  C034  F001         	movff	??_echo+2,___xxtofl@val
 12782  000B00  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 12783  000B04  0E00               	movlw	0
 12784  000B06  BE02               	btfsc	___xxtofl@val+1,7,c
 12785  000B08  0EFF               	movlw	-1
 12786  000B0A  6E03               	movwf	___xxtofl@val+2,c
 12787  000B0C  6E04               	movwf	___xxtofl@val+3,c
 12788  000B0E  0E01               	movlw	1
 12789  000B10  EC3F  F014         	call	___xxtofl
 12790  000B14  C001  F00F         	movff	?___xxtofl,___fldiv@b
 12791  000B18  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 12792  000B1C  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 12793  000B20  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 12794  000B24  EC73  F00C         	call	___fldiv	;wreg free
 12795  000B28  C00F  F028         	movff	?___fldiv,___fltol@f1
 12796  000B2C  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 12797  000B30  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 12798  000B34  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 12799  000B38  EC94  F017         	call	___fltol	;wreg free
 12800  000B3C  C028  F065         	movff	?___fltol,_a+4
 12801  000B40  C029  F066         	movff	?___fltol+1,_a+5
 12802  000B44                     i2l5417:
 12803                           
 12804                           ;main.c: 153:                 if (a[2]>=2 && a[2]<=200){
 12805  000B44  BE66               	btfsc	_a+5,7,c
 12806  000B46  D067               	goto	i2l5441
 12807  000B48  5066               	movf	_a+5,w,c
 12808  000B4A  E104               	bnz	i2u553_40
 12809  000B4C  0E02               	movlw	2
 12810  000B4E  5C65               	subwf	_a+4,w,c
 12811  000B50  A0D8               	btfss	status,0,c
 12812  000B52  D061               	goto	i2l5441
 12813  000B54                     i2u553_40:
 12814  000B54  BE66               	btfsc	_a+5,7,c
 12815  000B56  D006               	goto	i2u554_40
 12816  000B58  5066               	movf	_a+5,w,c
 12817  000B5A  E15D               	bnz	i2l5441
 12818  000B5C  0EC9               	movlw	201
 12819  000B5E  5C65               	subwf	_a+4,w,c
 12820  000B60  B0D8               	btfsc	status,0,c
 12821  000B62  D059               	goto	i2l5441
 12822  000B64                     i2u554_40:
 12823                           
 12824                           ;main.c: 155:                 if ((~sumf[2])&&(dist_final[2][0]!=0)&&(dist_final[2][1]!=
      +                          0)&&(dist_final[2][2]!=0)){
 12825  000B64  0442               	decf	_sumf+2,w,c
 12826  000B66  B4D8               	btfsc	status,2,c
 12827  000B68  D01B               	goto	i2l5433
 12828  000B6A  0101               	movlb	1	; () banked
 12829  000B6C  5181               	movf	(_dist_final+24)& (0+255),w,b
 12830  000B6E  1182               	iorwf	(_dist_final+25)& (0+255),w,b
 12831  000B70  B4D8               	btfsc	status,2,c
 12832  000B72  D016               	goto	i2l5433
 12833                           
 12834                           ; BSR set to: 1
 12835  000B74  5183               	movf	(_dist_final+26)& (0+255),w,b
 12836  000B76  1184               	iorwf	(_dist_final+27)& (0+255),w,b
 12837  000B78  B4D8               	btfsc	status,2,c
 12838  000B7A  D012               	goto	i2l5433
 12839                           
 12840                           ; BSR set to: 1
 12841  000B7C  5185               	movf	(_dist_final+28)& (0+255),w,b
 12842  000B7E  1186               	iorwf	(_dist_final+29)& (0+255),w,b
 12843  000B80  B4D8               	btfsc	status,2,c
 12844  000B82  D00E               	goto	i2l5433
 12845                           
 12846                           ; BSR set to: 1
 12847                           ;main.c: 156:             sum[2] = (dist_final[2][0]+dist_final[2][1]+dist_final[2][2]);
 12848  000B84  5183               	movf	(_dist_final+26)& (0+255),w,b
 12849  000B86  2581               	addwf	(_dist_final+24)& (0+255),w,b
 12850  000B88  6E32               	movwf	??_echo& (0+255),c
 12851  000B8A  5184               	movf	(_dist_final+27)& (0+255),w,b
 12852  000B8C  2182               	addwfc	(_dist_final+25)& (0+255),w,b
 12853  000B8E  6E33               	movwf	(??_echo+1)& (0+255),c
 12854  000B90  5185               	movf	(_dist_final+28)& (0+255),w,b
 12855  000B92  2432               	addwf	??_echo,w,c
 12856  000B94  6E3C               	movwf	_sum+4,c
 12857  000B96  5186               	movf	(_dist_final+29)& (0+255),w,b
 12858  000B98  2033               	addwfc	??_echo+1,w,c
 12859  000B9A  6E3D               	movwf	_sum+5,c
 12860                           
 12861                           ; BSR set to: 1
 12862                           ;main.c: 157:             sumf[2] = 1;
 12863  000B9C  0E01               	movlw	1
 12864  000B9E  6E42               	movwf	_sumf+2,c
 12865  000BA0                     i2l5433:
 12866                           
 12867                           ;main.c: 159:         if (sumf[2]){
 12868  000BA0  5042               	movf	_sumf+2,w,c
 12869  000BA2  B4D8               	btfsc	status,2,c
 12870  000BA4  D02B               	goto	i2l5439
 12871                           
 12872                           ;main.c: 160:             sum[2] = sum[2] - dist_final[2][meas] + a[2];
 12873  000BA6  90D8               	bcf	status,0,c
 12874  000BA8  3450               	rlcf	_meas,w,c	;volatile
 12875  000BAA  6ED9               	movwf	fsr2l,c
 12876  000BAC  3451               	rlcf	_meas+1,w,c	;volatile
 12877  000BAE  6EDA               	movwf	fsr2h,c
 12878  000BB0  0E81               	movlw	low (_dist_final+24)
 12879  000BB2  26D9               	addwf	fsr2l,f,c
 12880  000BB4  0E01               	movlw	high (_dist_final+24)
 12881  000BB6  22DA               	addwfc	fsr2h,f,c
 12882  000BB8  CFDE F032          	movff	postinc2,??_echo
 12883  000BBC  CFDD F033          	movff	postdec2,??_echo+1
 12884  000BC0  EE20  F03C         	lfsr	2,_sum+4
 12885  000BC4  CFDE F034          	movff	postinc2,??_echo+2
 12886  000BC8  CFDD F035          	movff	postdec2,??_echo+3
 12887  000BCC  5032               	movf	??_echo,w,c
 12888  000BCE  5E34               	subwf	??_echo+2,f,c
 12889  000BD0  5033               	movf	??_echo+1,w,c
 12890  000BD2  5A35               	subwfb	??_echo+3,f,c
 12891  000BD4  5065               	movf	_a+4,w,c
 12892  000BD6  2434               	addwf	??_echo+2,w,c
 12893  000BD8  6E3C               	movwf	_sum+4,c
 12894  000BDA  5066               	movf	_a+5,w,c
 12895  000BDC  2035               	addwfc	??_echo+3,w,c
 12896  000BDE  6E3D               	movwf	_sum+5,c
 12897                           
 12898                           ;main.c: 161:             dist_final[2][5] = (sum[2]/5);
 12899  000BE0  C03C  F001         	movff	_sum+4,i2___awdiv@dividend
 12900  000BE4  C03D  F002         	movff	_sum+5,i2___awdiv@dividend+1
 12901  000BE8  0E00               	movlw	0
 12902  000BEA  6E04               	movwf	i2___awdiv@divisor+1,c
 12903  000BEC  0E05               	movlw	5
 12904  000BEE  6E03               	movwf	i2___awdiv@divisor,c
 12905  000BF0  EC9E  F019         	call	i2___awdiv	;wreg free
 12906  000BF4  C001  F18B         	movff	?i2___awdiv,_dist_final+34
 12907  000BF8  C002  F18C         	movff	?i2___awdiv+1,_dist_final+35
 12908  000BFC                     i2l5439:
 12909                           
 12910                           ;main.c: 163:         dist_final[2][meas] = a[2];
 12911  000BFC  90D8               	bcf	status,0,c
 12912  000BFE  3450               	rlcf	_meas,w,c	;volatile
 12913  000C00  6ED9               	movwf	fsr2l,c
 12914  000C02  3451               	rlcf	_meas+1,w,c	;volatile
 12915  000C04  6EDA               	movwf	fsr2h,c
 12916  000C06  0E81               	movlw	low (_dist_final+24)
 12917  000C08  26D9               	addwf	fsr2l,f,c
 12918  000C0A  0E01               	movlw	high (_dist_final+24)
 12919  000C0C  22DA               	addwfc	fsr2h,f,c
 12920  000C0E  C065  FFDE         	movff	_a+4,postinc2
 12921  000C12  C066  FFDD         	movff	_a+5,postdec2
 12922  000C16                     i2l5441:
 12923                           
 12924                           ;main.c: 166:     if (b==4){
 12925  000C16  0E04               	movlw	4
 12926  000C18  185A               	xorwf	_b,w,c
 12927  000C1A  105B               	iorwf	_b+1,w,c
 12928  000C1C  A4D8               	btfss	status,2,c
 12929  000C1E  0012               	return	
 12930                           
 12931                           ;main.c: 167:         if (RB4 == 1){
 12932  000C20  B881               	btfsc	3969,4,c	;volatile
 12933                           
 12934                           ;main.c: 168:             TMR1ON = 1;
 12935  000C22  80CD               	bsf	4045,0,c	;volatile
 12936                           
 12937                           ;main.c: 170:         if (RB4 == 0){
 12938                           
 12939                           ;main.c: 169:         }
 12940  000C24  B881               	btfsc	3969,4,c	;volatile
 12941  000C26  D037               	goto	i2l5451
 12942                           
 12943                           ;main.c: 171:             TMR1ON = 0;
 12944  000C28  90CD               	bcf	4045,0,c	;volatile
 12945                           
 12946                           ;main.c: 172:             a[3] = (TMR1L | (TMR1H<<8))/58.82;
 12947  000C2A  0EAE               	movlw	174
 12948  000C2C  6E13               	movwf	___fldiv@a,c
 12949  000C2E  0E47               	movlw	71
 12950  000C30  6E14               	movwf	___fldiv@a+1,c
 12951  000C32  0E6B               	movlw	107
 12952  000C34  6E15               	movwf	___fldiv@a+2,c
 12953  000C36  0E42               	movlw	66
 12954  000C38  6E16               	movwf	___fldiv@a+3,c
 12955  000C3A  50CF               	movf	4047,w,c	;volatile
 12956  000C3C  6E33               	movwf	(??_echo+1)& (0+255),c
 12957  000C3E  6A32               	clrf	??_echo& (0+255),c
 12958  000C40  50CE               	movf	4046,w,c	;volatile
 12959  000C42  6E34               	movwf	(??_echo+2)& (0+255),c
 12960  000C44  6A35               	clrf	(??_echo+3)& (0+255),c
 12961  000C46  5032               	movf	??_echo,w,c
 12962  000C48  1234               	iorwf	??_echo+2,f,c
 12963  000C4A  5033               	movf	??_echo+1,w,c
 12964  000C4C  1235               	iorwf	??_echo+3,f,c
 12965  000C4E  C034  F001         	movff	??_echo+2,___xxtofl@val
 12966  000C52  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 12967  000C56  0E00               	movlw	0
 12968  000C58  BE02               	btfsc	___xxtofl@val+1,7,c
 12969  000C5A  0EFF               	movlw	-1
 12970  000C5C  6E03               	movwf	___xxtofl@val+2,c
 12971  000C5E  6E04               	movwf	___xxtofl@val+3,c
 12972  000C60  0E01               	movlw	1
 12973  000C62  EC3F  F014         	call	___xxtofl
 12974  000C66  C001  F00F         	movff	?___xxtofl,___fldiv@b
 12975  000C6A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 12976  000C6E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 12977  000C72  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 12978  000C76  EC73  F00C         	call	___fldiv	;wreg free
 12979  000C7A  C00F  F028         	movff	?___fldiv,___fltol@f1
 12980  000C7E  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 12981  000C82  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 12982  000C86  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 12983  000C8A  EC94  F017         	call	___fltol	;wreg free
 12984  000C8E  C028  F067         	movff	?___fltol,_a+6
 12985  000C92  C029  F068         	movff	?___fltol+1,_a+7
 12986  000C96                     i2l5451:
 12987                           
 12988                           ;main.c: 175:                 if (a[3]>=2 && a[3]<=200){
 12989  000C96  BE68               	btfsc	_a+7,7,c
 12990  000C98  0012               	return	
 12991  000C9A  5068               	movf	_a+7,w,c
 12992  000C9C  E104               	bnz	i2u563_40
 12993  000C9E  0E02               	movlw	2
 12994  000CA0  5C67               	subwf	_a+6,w,c
 12995  000CA2  A0D8               	btfss	status,0,c
 12996  000CA4  0012               	return	
 12997  000CA6                     i2u563_40:
 12998  000CA6  BE68               	btfsc	_a+7,7,c
 12999  000CA8  D006               	goto	i2u564_40
 13000  000CAA  5068               	movf	_a+7,w,c
 13001  000CAC  E15D               	bnz	i2l394
 13002  000CAE  0EC9               	movlw	201
 13003  000CB0  5C67               	subwf	_a+6,w,c
 13004  000CB2  B0D8               	btfsc	status,0,c
 13005  000CB4  0012               	return	
 13006  000CB6                     i2u564_40:
 13007                           
 13008                           ;main.c: 177:                 if ((~sumf[3])&&(dist_final[3][0]!=0)&&(dist_final[3][1]!=
      +                          0)&&(dist_final[3][2]!=0)){
 13009  000CB6  0443               	decf	_sumf+3,w,c
 13010  000CB8  B4D8               	btfsc	status,2,c
 13011  000CBA  D01B               	goto	i2l5467
 13012  000CBC  0101               	movlb	1	; () banked
 13013  000CBE  518D               	movf	(_dist_final+36)& (0+255),w,b
 13014  000CC0  118E               	iorwf	(_dist_final+37)& (0+255),w,b
 13015  000CC2  B4D8               	btfsc	status,2,c
 13016  000CC4  D016               	goto	i2l5467
 13017                           
 13018                           ; BSR set to: 1
 13019  000CC6  518F               	movf	(_dist_final+38)& (0+255),w,b
 13020  000CC8  1190               	iorwf	(_dist_final+39)& (0+255),w,b
 13021  000CCA  B4D8               	btfsc	status,2,c
 13022  000CCC  D012               	goto	i2l5467
 13023                           
 13024                           ; BSR set to: 1
 13025  000CCE  5191               	movf	(_dist_final+40)& (0+255),w,b
 13026  000CD0  1192               	iorwf	(_dist_final+41)& (0+255),w,b
 13027  000CD2  B4D8               	btfsc	status,2,c
 13028  000CD4  D00E               	goto	i2l5467
 13029                           
 13030                           ; BSR set to: 1
 13031                           ;main.c: 178:             sum[3] = (dist_final[3][0]+dist_final[3][1]+dist_final[3][2]);
 13032  000CD6  518F               	movf	(_dist_final+38)& (0+255),w,b
 13033  000CD8  258D               	addwf	(_dist_final+36)& (0+255),w,b
 13034  000CDA  6E32               	movwf	??_echo& (0+255),c
 13035  000CDC  5190               	movf	(_dist_final+39)& (0+255),w,b
 13036  000CDE  218E               	addwfc	(_dist_final+37)& (0+255),w,b
 13037  000CE0  6E33               	movwf	(??_echo+1)& (0+255),c
 13038  000CE2  5191               	movf	(_dist_final+40)& (0+255),w,b
 13039  000CE4  2432               	addwf	??_echo,w,c
 13040  000CE6  6E3E               	movwf	_sum+6,c
 13041  000CE8  5192               	movf	(_dist_final+41)& (0+255),w,b
 13042  000CEA  2033               	addwfc	??_echo+1,w,c
 13043  000CEC  6E3F               	movwf	_sum+7,c
 13044                           
 13045                           ; BSR set to: 1
 13046                           ;main.c: 179:             sumf[3] = 1;
 13047  000CEE  0E01               	movlw	1
 13048  000CF0  6E43               	movwf	_sumf+3,c
 13049  000CF2                     i2l5467:
 13050                           
 13051                           ;main.c: 181:         if (sumf[3]){
 13052  000CF2  5043               	movf	_sumf+3,w,c
 13053  000CF4  B4D8               	btfsc	status,2,c
 13054  000CF6  D02B               	goto	i2l5473
 13055                           
 13056                           ;main.c: 182:             sum[3] = sum[3] - dist_final[3][meas] + a[3];
 13057  000CF8  90D8               	bcf	status,0,c
 13058  000CFA  3450               	rlcf	_meas,w,c	;volatile
 13059  000CFC  6ED9               	movwf	fsr2l,c
 13060  000CFE  3451               	rlcf	_meas+1,w,c	;volatile
 13061  000D00  6EDA               	movwf	fsr2h,c
 13062  000D02  0E8D               	movlw	low (_dist_final+36)
 13063  000D04  26D9               	addwf	fsr2l,f,c
 13064  000D06  0E01               	movlw	high (_dist_final+36)
 13065  000D08  22DA               	addwfc	fsr2h,f,c
 13066  000D0A  CFDE F032          	movff	postinc2,??_echo
 13067  000D0E  CFDD F033          	movff	postdec2,??_echo+1
 13068  000D12  EE20  F03E         	lfsr	2,_sum+6
 13069  000D16  CFDE F034          	movff	postinc2,??_echo+2
 13070  000D1A  CFDD F035          	movff	postdec2,??_echo+3
 13071  000D1E  5032               	movf	??_echo,w,c
 13072  000D20  5E34               	subwf	??_echo+2,f,c
 13073  000D22  5033               	movf	??_echo+1,w,c
 13074  000D24  5A35               	subwfb	??_echo+3,f,c
 13075  000D26  5067               	movf	_a+6,w,c
 13076  000D28  2434               	addwf	??_echo+2,w,c
 13077  000D2A  6E3E               	movwf	_sum+6,c
 13078  000D2C  5068               	movf	_a+7,w,c
 13079  000D2E  2035               	addwfc	??_echo+3,w,c
 13080  000D30  6E3F               	movwf	_sum+7,c
 13081                           
 13082                           ;main.c: 183:             dist_final[3][5] = (sum[3]/5);
 13083  000D32  C03E  F001         	movff	_sum+6,i2___awdiv@dividend
 13084  000D36  C03F  F002         	movff	_sum+7,i2___awdiv@dividend+1
 13085  000D3A  0E00               	movlw	0
 13086  000D3C  6E04               	movwf	i2___awdiv@divisor+1,c
 13087  000D3E  0E05               	movlw	5
 13088  000D40  6E03               	movwf	i2___awdiv@divisor,c
 13089  000D42  EC9E  F019         	call	i2___awdiv	;wreg free
 13090  000D46  C001  F197         	movff	?i2___awdiv,_dist_final+46
 13091  000D4A  C002  F198         	movff	?i2___awdiv+1,_dist_final+47
 13092  000D4E                     i2l5473:
 13093                           
 13094                           ;main.c: 185:         dist_final[3][meas] = a[3];
 13095  000D4E  90D8               	bcf	status,0,c
 13096  000D50  3450               	rlcf	_meas,w,c	;volatile
 13097  000D52  6ED9               	movwf	fsr2l,c
 13098  000D54  3451               	rlcf	_meas+1,w,c	;volatile
 13099  000D56  6EDA               	movwf	fsr2h,c
 13100  000D58  0E8D               	movlw	low (_dist_final+36)
 13101  000D5A  26D9               	addwf	fsr2l,f,c
 13102  000D5C  0E01               	movlw	high (_dist_final+36)
 13103  000D5E  22DA               	addwfc	fsr2h,f,c
 13104  000D60  C067  FFDE         	movff	_a+6,postinc2
 13105  000D64  C068  FFDD         	movff	_a+7,postdec2
 13106  000D68                     i2l394:
 13107  000D68  0012               	return		;funcret
 13108  000D6A                     __end_of_echo:
 13109                           	opt callstack 0
 13110                           
 13111 ;; *************** function i2___awdiv *****************
 13112 ;; Defined at:
 13113 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
 13114 ;; Parameters:    Size  Location     Type
 13115 ;;  dividend        2    0[COMRAM] int 
 13116 ;;  divisor         2    2[COMRAM] int 
 13117 ;; Auto vars:     Size  Location     Type
 13118 ;;  __awdiv         2    6[COMRAM] int 
 13119 ;;  __awdiv         1    5[COMRAM] unsigned char 
 13120 ;;  __awdiv         1    4[COMRAM] unsigned char 
 13121 ;; Return value:  Size  Location     Type
 13122 ;;                  2    0[COMRAM] int 
 13123 ;; Registers used:
 13124 ;;		wreg, status,2, status,0
 13125 ;; Tracked objects:
 13126 ;;		On entry : 0/0
 13127 ;;		On exit  : 0/0
 13128 ;;		Unchanged: 0/0
 13129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13130 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13131 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13133 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13134 ;;Total ram usage:        8 bytes
 13135 ;; Hardware stack levels used:    1
 13136 ;; This function calls:
 13137 ;;		Nothing
 13138 ;; This function is called by:
 13139 ;;		_echo
 13140 ;; This function uses a non-reentrant model
 13141 ;;
 13142                           
 13143                           	psect	text57
 13144  00333C                     __ptext57:
 13145                           	opt callstack 0
 13146  00333C                     i2___awdiv:
 13147                           	opt callstack 14
 13148                           
 13149                           ;incstack = 0
 13150  00333C  0E00               	movlw	0
 13151  00333E  6E06               	movwf	i2___awdiv@sign,c
 13152  003340  AE04               	btfss	i2___awdiv@divisor+1,7,c
 13153  003342  D006               	goto	i2l5209
 13154  003344  6C03               	negf	i2___awdiv@divisor,c
 13155  003346  1E04               	comf	i2___awdiv@divisor+1,f,c
 13156  003348  B0D8               	btfsc	status,0,c
 13157  00334A  2A04               	incf	i2___awdiv@divisor+1,f,c
 13158  00334C  0E01               	movlw	1
 13159  00334E  6E06               	movwf	i2___awdiv@sign,c
 13160  003350                     i2l5209:
 13161  003350  AE02               	btfss	i2___awdiv@dividend+1,7,c
 13162  003352  D006               	goto	i2l5215
 13163  003354  6C01               	negf	i2___awdiv@dividend,c
 13164  003356  1E02               	comf	i2___awdiv@dividend+1,f,c
 13165  003358  B0D8               	btfsc	status,0,c
 13166  00335A  2A02               	incf	i2___awdiv@dividend+1,f,c
 13167  00335C  0E01               	movlw	1
 13168  00335E  1A06               	xorwf	i2___awdiv@sign,f,c
 13169  003360                     i2l5215:
 13170  003360  0E00               	movlw	0
 13171  003362  6E08               	movwf	i2___awdiv@quotient+1,c
 13172  003364  0E00               	movlw	0
 13173  003366  6E07               	movwf	i2___awdiv@quotient,c
 13174  003368  5003               	movf	i2___awdiv@divisor,w,c
 13175  00336A  1004               	iorwf	i2___awdiv@divisor+1,w,c
 13176  00336C  B4D8               	btfsc	status,2,c
 13177  00336E  D01C               	goto	i2l5237
 13178  003370  0E01               	movlw	1
 13179  003372  6E05               	movwf	i2___awdiv@counter,c
 13180  003374  D004               	goto	i2l5223
 13181  003376                     i2l5221:
 13182  003376  90D8               	bcf	status,0,c
 13183  003378  3603               	rlcf	i2___awdiv@divisor,f,c
 13184  00337A  3604               	rlcf	i2___awdiv@divisor+1,f,c
 13185  00337C  2A05               	incf	i2___awdiv@counter,f,c
 13186  00337E                     i2l5223:
 13187  00337E  AE04               	btfss	i2___awdiv@divisor+1,7,c
 13188  003380  D7FA               	goto	i2l5221
 13189  003382                     i2u525_40:
 13190  003382  90D8               	bcf	status,0,c
 13191  003384  3607               	rlcf	i2___awdiv@quotient,f,c
 13192  003386  3608               	rlcf	i2___awdiv@quotient+1,f,c
 13193  003388  5003               	movf	i2___awdiv@divisor,w,c
 13194  00338A  5C01               	subwf	i2___awdiv@dividend,w,c
 13195  00338C  5004               	movf	i2___awdiv@divisor+1,w,c
 13196  00338E  5802               	subwfb	i2___awdiv@dividend+1,w,c
 13197  003390  A0D8               	btfss	status,0,c
 13198  003392  D005               	goto	i2l5233
 13199  003394  5003               	movf	i2___awdiv@divisor,w,c
 13200  003396  5E01               	subwf	i2___awdiv@dividend,f,c
 13201  003398  5004               	movf	i2___awdiv@divisor+1,w,c
 13202  00339A  5A02               	subwfb	i2___awdiv@dividend+1,f,c
 13203  00339C  8007               	bsf	i2___awdiv@quotient,0,c
 13204  00339E                     i2l5233:
 13205  00339E  90D8               	bcf	status,0,c
 13206  0033A0  3204               	rrcf	i2___awdiv@divisor+1,f,c
 13207  0033A2  3203               	rrcf	i2___awdiv@divisor,f,c
 13208  0033A4  2E05               	decfsz	i2___awdiv@counter,f,c
 13209  0033A6  D7ED               	goto	i2u525_40
 13210  0033A8                     i2l5237:
 13211  0033A8  5006               	movf	i2___awdiv@sign,w,c
 13212  0033AA  B4D8               	btfsc	status,2,c
 13213  0033AC  D004               	goto	i2l5241
 13214  0033AE  6C07               	negf	i2___awdiv@quotient,c
 13215  0033B0  1E08               	comf	i2___awdiv@quotient+1,f,c
 13216  0033B2  B0D8               	btfsc	status,0,c
 13217  0033B4  2A08               	incf	i2___awdiv@quotient+1,f,c
 13218  0033B6                     i2l5241:
 13219  0033B6  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
 13220  0033BA  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 13221  0033BE  0012               	return		;funcret
 13222  0033C0                     __end_ofi2___awdiv:
 13223                           	opt callstack 0
 13224                           
 13225 ;; *************** function ___xxtofl *****************
 13226 ;; Defined at:
 13227 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 13228 ;; Parameters:    Size  Location     Type
 13229 ;;  sign            1    wreg     unsigned char 
 13230 ;;  val             4    0[COMRAM] long 
 13231 ;; Auto vars:     Size  Location     Type
 13232 ;;  sign            1    8[COMRAM] unsigned char 
 13233 ;;  arg             4   10[COMRAM] unsigned long 
 13234 ;;  exp             1    9[COMRAM] unsigned char 
 13235 ;; Return value:  Size  Location     Type
 13236 ;;                  4    0[COMRAM] unsigned char 
 13237 ;; Registers used:
 13238 ;;		wreg, status,2, status,0
 13239 ;; Tracked objects:
 13240 ;;		On entry : 0/0
 13241 ;;		On exit  : 0/0
 13242 ;;		Unchanged: 0/0
 13243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13244 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13245 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13246 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13247 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13248 ;;Total ram usage:       14 bytes
 13249 ;; Hardware stack levels used:    1
 13250 ;; This function calls:
 13251 ;;		Nothing
 13252 ;; This function is called by:
 13253 ;;		_echo
 13254 ;; This function uses a non-reentrant model
 13255 ;;
 13256                           
 13257                           	psect	text58
 13258  00287E                     __ptext58:
 13259                           	opt callstack 0
 13260  00287E                     ___xxtofl:
 13261                           	opt callstack 14
 13262                           
 13263                           ;incstack = 0
 13264                           ;___xxtofl@sign stored from wreg
 13265  00287E  6E09               	movwf	___xxtofl@sign,c
 13266  002880  5009               	movf	___xxtofl@sign,w,c
 13267  002882  A4D8               	btfss	status,2,c
 13268  002884  AE04               	btfss	___xxtofl@val+3,7,c
 13269  002886  D01A               	goto	i2l1341
 13270  002888  C001  F005         	movff	___xxtofl@val,??___xxtofl
 13271  00288C  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 13272  002890  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 13273  002894  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 13274  002898  1E05               	comf	??___xxtofl,f,c
 13275  00289A  1E06               	comf	??___xxtofl+1,f,c
 13276  00289C  1E07               	comf	??___xxtofl+2,f,c
 13277  00289E  1E08               	comf	??___xxtofl+3,f,c
 13278  0028A0  2A05               	incf	??___xxtofl,f,c
 13279  0028A2  0E00               	movlw	0
 13280  0028A4  2206               	addwfc	??___xxtofl+1,f,c
 13281  0028A6  2207               	addwfc	??___xxtofl+2,f,c
 13282  0028A8  2208               	addwfc	??___xxtofl+3,f,c
 13283  0028AA  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 13284  0028AE  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 13285  0028B2  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 13286  0028B6  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 13287  0028BA  D008               	goto	i2l5161
 13288  0028BC                     i2l1341:
 13289  0028BC  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 13290  0028C0  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 13291  0028C4  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 13292  0028C8  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 13293  0028CC                     i2l5161:
 13294  0028CC  5001               	movf	___xxtofl@val,w,c
 13295  0028CE  1002               	iorwf	___xxtofl@val+1,w,c
 13296  0028D0  1003               	iorwf	___xxtofl@val+2,w,c
 13297  0028D2  1004               	iorwf	___xxtofl@val+3,w,c
 13298  0028D4  A4D8               	btfss	status,2,c
 13299  0028D6  D009               	goto	i2l5167
 13300  0028D8  0E00               	movlw	0
 13301  0028DA  6E01               	movwf	?___xxtofl,c
 13302  0028DC  0E00               	movlw	0
 13303  0028DE  6E02               	movwf	?___xxtofl+1,c
 13304  0028E0  0E00               	movlw	0
 13305  0028E2  6E03               	movwf	?___xxtofl+2,c
 13306  0028E4  0E00               	movlw	0
 13307  0028E6  6E04               	movwf	?___xxtofl+3,c
 13308  0028E8  0012               	return	
 13309  0028EA                     i2l5167:
 13310  0028EA  0E96               	movlw	150
 13311  0028EC  6E0A               	movwf	___xxtofl@exp,c
 13312  0028EE  D006               	goto	i2l5171
 13313  0028F0                     i2l5169:
 13314  0028F0  2A0A               	incf	___xxtofl@exp,f,c
 13315  0028F2  90D8               	bcf	status,0,c
 13316  0028F4  320E               	rrcf	___xxtofl@arg+3,f,c
 13317  0028F6  320D               	rrcf	___xxtofl@arg+2,f,c
 13318  0028F8  320C               	rrcf	___xxtofl@arg+1,f,c
 13319  0028FA  320B               	rrcf	___xxtofl@arg,f,c
 13320  0028FC                     i2l5171:
 13321  0028FC  0E00               	movlw	0
 13322  0028FE  140B               	andwf	___xxtofl@arg,w,c
 13323  002900  6E05               	movwf	??___xxtofl& (0+255),c
 13324  002902  0E00               	movlw	0
 13325  002904  140C               	andwf	___xxtofl@arg+1,w,c
 13326  002906  6E06               	movwf	(??___xxtofl+1)& (0+255),c
 13327  002908  0E00               	movlw	0
 13328  00290A  140D               	andwf	___xxtofl@arg+2,w,c
 13329  00290C  6E07               	movwf	(??___xxtofl+2)& (0+255),c
 13330  00290E  0EFE               	movlw	254
 13331  002910  140E               	andwf	___xxtofl@arg+3,w,c
 13332  002912  6E08               	movwf	(??___xxtofl+3)& (0+255),c
 13333  002914  5005               	movf	??___xxtofl,w,c
 13334  002916  1006               	iorwf	??___xxtofl+1,w,c
 13335  002918  1007               	iorwf	??___xxtofl+2,w,c
 13336  00291A  1008               	iorwf	??___xxtofl+3,w,c
 13337  00291C  B4D8               	btfsc	status,2,c
 13338  00291E  D00D               	goto	i2l1348
 13339  002920  D7E7               	goto	i2l5169
 13340  002922                     i2l5173:
 13341  002922  2A0A               	incf	___xxtofl@exp,f,c
 13342  002924  0E01               	movlw	1
 13343  002926  260B               	addwf	___xxtofl@arg,f,c
 13344  002928  0E00               	movlw	0
 13345  00292A  220C               	addwfc	___xxtofl@arg+1,f,c
 13346  00292C  220D               	addwfc	___xxtofl@arg+2,f,c
 13347  00292E  220E               	addwfc	___xxtofl@arg+3,f,c
 13348  002930  90D8               	bcf	status,0,c
 13349  002932  320E               	rrcf	___xxtofl@arg+3,f,c
 13350  002934  320D               	rrcf	___xxtofl@arg+2,f,c
 13351  002936  320C               	rrcf	___xxtofl@arg+1,f,c
 13352  002938  320B               	rrcf	___xxtofl@arg,f,c
 13353  00293A                     i2l1348:
 13354  00293A  0E00               	movlw	0
 13355  00293C  140B               	andwf	___xxtofl@arg,w,c
 13356  00293E  6E05               	movwf	??___xxtofl& (0+255),c
 13357  002940  0E00               	movlw	0
 13358  002942  140C               	andwf	___xxtofl@arg+1,w,c
 13359  002944  6E06               	movwf	(??___xxtofl+1)& (0+255),c
 13360  002946  0E00               	movlw	0
 13361  002948  140D               	andwf	___xxtofl@arg+2,w,c
 13362  00294A  6E07               	movwf	(??___xxtofl+2)& (0+255),c
 13363  00294C  0EFF               	movlw	255
 13364  00294E  140E               	andwf	___xxtofl@arg+3,w,c
 13365  002950  6E08               	movwf	(??___xxtofl+3)& (0+255),c
 13366  002952  5005               	movf	??___xxtofl,w,c
 13367  002954  1006               	iorwf	??___xxtofl+1,w,c
 13368  002956  1007               	iorwf	??___xxtofl+2,w,c
 13369  002958  1008               	iorwf	??___xxtofl+3,w,c
 13370  00295A  B4D8               	btfsc	status,2,c
 13371  00295C  D007               	goto	i2l5181
 13372  00295E  D7E1               	goto	i2l5173
 13373  002960                     i2l5179:
 13374  002960  060A               	decf	___xxtofl@exp,f,c
 13375  002962  90D8               	bcf	status,0,c
 13376  002964  360B               	rlcf	___xxtofl@arg,f,c
 13377  002966  360C               	rlcf	___xxtofl@arg+1,f,c
 13378  002968  360D               	rlcf	___xxtofl@arg+2,f,c
 13379  00296A  360E               	rlcf	___xxtofl@arg+3,f,c
 13380  00296C                     i2l5181:
 13381  00296C  BE0D               	btfsc	___xxtofl@arg+2,7,c
 13382  00296E  D003               	goto	i2u518_40
 13383  002970  0E02               	movlw	2
 13384  002972  600A               	cpfslt	___xxtofl@exp,c
 13385  002974  D7F5               	goto	i2l5179
 13386  002976                     i2u518_40:
 13387  002976  A00A               	btfss	___xxtofl@exp,0,c
 13388  002978  9E0D               	bcf	___xxtofl@arg+2,7,c
 13389  00297A  90D8               	bcf	status,0,c
 13390  00297C  320A               	rrcf	___xxtofl@exp,f,c
 13391  00297E  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 13392  002982  6A06               	clrf	(??___xxtofl+1)& (0+255),c
 13393  002984  6A07               	clrf	(??___xxtofl+2)& (0+255),c
 13394  002986  6A08               	clrf	(??___xxtofl+3)& (0+255),c
 13395  002988  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 13396  00298C  6A07               	clrf	??___xxtofl+2,c
 13397  00298E  6A06               	clrf	??___xxtofl+1,c
 13398  002990  6A05               	clrf	??___xxtofl,c
 13399  002992  5005               	movf	??___xxtofl,w,c
 13400  002994  120B               	iorwf	___xxtofl@arg,f,c
 13401  002996  5006               	movf	??___xxtofl+1,w,c
 13402  002998  120C               	iorwf	___xxtofl@arg+1,f,c
 13403  00299A  5007               	movf	??___xxtofl+2,w,c
 13404  00299C  120D               	iorwf	___xxtofl@arg+2,f,c
 13405  00299E  5008               	movf	??___xxtofl+3,w,c
 13406  0029A0  120E               	iorwf	___xxtofl@arg+3,f,c
 13407  0029A2  5009               	movf	___xxtofl@sign,w,c
 13408  0029A4  A4D8               	btfss	status,2,c
 13409  0029A6  AE04               	btfss	___xxtofl@val+3,7,c
 13410  0029A8  D001               	goto	i2l5197
 13411  0029AA  8E0E               	bsf	___xxtofl@arg+3,7,c
 13412  0029AC                     i2l5197:
 13413  0029AC  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 13414  0029B0  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 13415  0029B4  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 13416  0029B8  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 13417  0029BC  0012               	return		;funcret
 13418  0029BE                     __end_of___xxtofl:
 13419                           	opt callstack 0
 13420                           
 13421 ;; *************** function ___fltol *****************
 13422 ;; Defined at:
 13423 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 13424 ;; Parameters:    Size  Location     Type
 13425 ;;  f1              4   39[COMRAM] unsigned char 
 13426 ;; Auto vars:     Size  Location     Type
 13427 ;;  exp1            1   48[COMRAM] unsigned char 
 13428 ;;  sign1           1   47[COMRAM] unsigned char 
 13429 ;; Return value:  Size  Location     Type
 13430 ;;                  4   39[COMRAM] long 
 13431 ;; Registers used:
 13432 ;;		wreg, status,2, status,0
 13433 ;; Tracked objects:
 13434 ;;		On entry : 0/0
 13435 ;;		On exit  : 0/0
 13436 ;;		Unchanged: 0/0
 13437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13438 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13439 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13440 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13441 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13442 ;;Total ram usage:       10 bytes
 13443 ;; Hardware stack levels used:    1
 13444 ;; This function calls:
 13445 ;;		Nothing
 13446 ;; This function is called by:
 13447 ;;		_echo
 13448 ;; This function uses a non-reentrant model
 13449 ;;
 13450                           
 13451                           	psect	text59
 13452  002F28                     __ptext59:
 13453                           	opt callstack 0
 13454  002F28                     ___fltol:
 13455                           	opt callstack 14
 13456                           
 13457                           ;incstack = 0
 13458  002F28  342A               	rlcf	___fltol@f1+2,w,c
 13459  002F2A  342B               	rlcf	___fltol@f1+3,w,c
 13460  002F2C  6E31               	movwf	___fltol@exp1,c
 13461  002F2E  5031               	movf	___fltol@exp1,w,c
 13462  002F30  A4D8               	btfss	status,2,c
 13463  002F32  D009               	goto	i2l5101
 13464  002F34                     i2u502_40:
 13465  002F34  0E00               	movlw	0
 13466  002F36  6E28               	movwf	?___fltol,c
 13467  002F38  0E00               	movlw	0
 13468  002F3A  6E29               	movwf	?___fltol+1,c
 13469  002F3C  0E00               	movlw	0
 13470  002F3E  6E2A               	movwf	?___fltol+2,c
 13471  002F40  0E00               	movlw	0
 13472  002F42  6E2B               	movwf	?___fltol+3,c
 13473  002F44  0012               	return	
 13474  002F46                     i2l5101:
 13475  002F46  C028  F02C         	movff	___fltol@f1,??___fltol
 13476  002F4A  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
 13477  002F4E  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
 13478  002F52  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
 13479  002F56  0E20               	movlw	32
 13480  002F58  D005               	goto	i2u503_40
 13481  002F5A                     i2u503_45:
 13482  002F5A  90D8               	bcf	status,0,c
 13483  002F5C  322F               	rrcf	??___fltol+3,f,c
 13484  002F5E  322E               	rrcf	??___fltol+2,f,c
 13485  002F60  322D               	rrcf	??___fltol+1,f,c
 13486  002F62  322C               	rrcf	??___fltol,f,c
 13487  002F64                     i2u503_40:
 13488  002F64  2EE8               	decfsz	wreg,f,c
 13489  002F66  D7F9               	goto	i2u503_45
 13490  002F68  502C               	movf	??___fltol,w,c
 13491  002F6A  6E30               	movwf	___fltol@sign1,c
 13492  002F6C  8E2A               	bsf	___fltol@f1+2,7,c
 13493  002F6E  0EFF               	movlw	255
 13494  002F70  1628               	andwf	___fltol@f1,f,c
 13495  002F72  0EFF               	movlw	255
 13496  002F74  1629               	andwf	___fltol@f1+1,f,c
 13497  002F76  0EFF               	movlw	255
 13498  002F78  162A               	andwf	___fltol@f1+2,f,c
 13499  002F7A  0E00               	movlw	0
 13500  002F7C  162B               	andwf	___fltol@f1+3,f,c
 13501  002F7E  0E96               	movlw	150
 13502  002F80  5E31               	subwf	___fltol@exp1,f,c
 13503  002F82  AE31               	btfss	___fltol@exp1,7,c
 13504  002F84  D00D               	goto	i2l5121
 13505  002F86  5031               	movf	___fltol@exp1,w,c
 13506  002F88  0A80               	xorlw	128
 13507  002F8A  0F97               	addlw	151
 13508  002F8C  A0D8               	btfss	status,0,c
 13509  002F8E  D7D2               	goto	i2u502_40
 13510  002F90                     i2l5117:
 13511  002F90  90D8               	bcf	status,0,c
 13512  002F92  322B               	rrcf	___fltol@f1+3,f,c
 13513  002F94  322A               	rrcf	___fltol@f1+2,f,c
 13514  002F96  3229               	rrcf	___fltol@f1+1,f,c
 13515  002F98  3228               	rrcf	___fltol@f1,f,c
 13516  002F9A  3E31               	incfsz	___fltol@exp1,f,c
 13517  002F9C  D7F9               	goto	i2l5117
 13518  002F9E  D00D               	goto	i2u507_40
 13519  002FA0                     i2l5121:
 13520  002FA0  0E1F               	movlw	31
 13521  002FA2  6431               	cpfsgt	___fltol@exp1,c
 13522  002FA4  D007               	goto	i2l5129
 13523  002FA6  D7C6               	goto	i2u502_40
 13524  002FA8                     i2l5127:
 13525  002FA8  90D8               	bcf	status,0,c
 13526  002FAA  3628               	rlcf	___fltol@f1,f,c
 13527  002FAC  3629               	rlcf	___fltol@f1+1,f,c
 13528  002FAE  362A               	rlcf	___fltol@f1+2,f,c
 13529  002FB0  362B               	rlcf	___fltol@f1+3,f,c
 13530  002FB2  0631               	decf	___fltol@exp1,f,c
 13531  002FB4                     i2l5129:
 13532  002FB4  5031               	movf	___fltol@exp1,w,c
 13533  002FB6  A4D8               	btfss	status,2,c
 13534  002FB8  D7F7               	goto	i2l5127
 13535  002FBA                     i2u507_40:
 13536  002FBA  5030               	movf	___fltol@sign1,w,c
 13537  002FBC  B4D8               	btfsc	status,2,c
 13538  002FBE  D008               	goto	i2l5135
 13539  002FC0  1E2B               	comf	___fltol@f1+3,f,c
 13540  002FC2  1E2A               	comf	___fltol@f1+2,f,c
 13541  002FC4  1E29               	comf	___fltol@f1+1,f,c
 13542  002FC6  6C28               	negf	___fltol@f1,c
 13543  002FC8  0E00               	movlw	0
 13544  002FCA  2229               	addwfc	___fltol@f1+1,f,c
 13545  002FCC  222A               	addwfc	___fltol@f1+2,f,c
 13546  002FCE  222B               	addwfc	___fltol@f1+3,f,c
 13547  002FD0                     i2l5135:
 13548  002FD0  C028  F028         	movff	___fltol@f1,?___fltol
 13549  002FD4  C029  F029         	movff	___fltol@f1+1,?___fltol+1
 13550  002FD8  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
 13551  002FDC  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
 13552  002FE0  0012               	return		;funcret
 13553  002FE2                     __end_of___fltol:
 13554                           	opt callstack 0
 13555                           
 13556 ;; *************** function ___fldiv *****************
 13557 ;; Defined at:
 13558 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 13559 ;; Parameters:    Size  Location     Type
 13560 ;;  b               4   14[COMRAM] long 
 13561 ;;  a               4   18[COMRAM] long 
 13562 ;; Auto vars:     Size  Location     Type
 13563 ;;  grs             4   33[COMRAM] unsigned long 
 13564 ;;  rem             4   26[COMRAM] unsigned long 
 13565 ;;  new_exp         2   31[COMRAM] short 
 13566 ;;  aexp            1   38[COMRAM] unsigned char 
 13567 ;;  bexp            1   37[COMRAM] unsigned char 
 13568 ;;  sign            1   30[COMRAM] unsigned char 
 13569 ;; Return value:  Size  Location     Type
 13570 ;;                  4   14[COMRAM] unsigned char 
 13571 ;; Registers used:
 13572 ;;		wreg, status,2, status,0
 13573 ;; Tracked objects:
 13574 ;;		On entry : 0/0
 13575 ;;		On exit  : 0/0
 13576 ;;		Unchanged: 0/0
 13577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13578 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13579 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13580 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13581 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13582 ;;Total ram usage:       25 bytes
 13583 ;; Hardware stack levels used:    1
 13584 ;; This function calls:
 13585 ;;		Nothing
 13586 ;; This function is called by:
 13587 ;;		_echo
 13588 ;; This function uses a non-reentrant model
 13589 ;;
 13590                           
 13591                           	psect	text60
 13592  0018E6                     __ptext60:
 13593                           	opt callstack 0
 13594  0018E6                     ___fldiv:
 13595                           	opt callstack 14
 13596                           
 13597                           ;incstack = 0
 13598  0018E6  5012               	movf	___fldiv@b+3,w,c
 13599  0018E8  0B80               	andlw	128
 13600  0018EA  6E1F               	movwf	___fldiv@sign,c
 13601  0018EC  5012               	movf	___fldiv@b+3,w,c
 13602  0018EE  2412               	addwf	___fldiv@b+3,w,c
 13603  0018F0  6E26               	movwf	___fldiv@bexp,c
 13604  0018F2  BE11               	btfsc	___fldiv@b+2,7,c
 13605  0018F4  8026               	bsf	___fldiv@bexp,0,c
 13606  0018F6  5026               	movf	___fldiv@bexp,w,c
 13607  0018F8  B4D8               	btfsc	status,2,c
 13608  0018FA  D00D               	goto	i2l4929
 13609  0018FC  2826               	incf	___fldiv@bexp,w,c
 13610  0018FE  A4D8               	btfss	status,2,c
 13611  001900  D008               	goto	i2l4925
 13612  001902  0E00               	movlw	0
 13613  001904  6E0F               	movwf	___fldiv@b,c
 13614  001906  0E00               	movlw	0
 13615  001908  6E10               	movwf	___fldiv@b+1,c
 13616  00190A  0E00               	movlw	0
 13617  00190C  6E11               	movwf	___fldiv@b+2,c
 13618  00190E  0E00               	movlw	0
 13619  001910  6E12               	movwf	___fldiv@b+3,c
 13620  001912                     i2l4925:
 13621  001912  8E11               	bsf	___fldiv@b+2,7,c
 13622  001914  D006               	goto	L8
 13623  001916                     i2l4929:
 13624  001916  0E00               	movlw	0
 13625  001918  6E0F               	movwf	___fldiv@b,c
 13626  00191A  0E00               	movlw	0
 13627  00191C  6E10               	movwf	___fldiv@b+1,c
 13628  00191E  0E00               	movlw	0
 13629  001920  6E11               	movwf	___fldiv@b+2,c
 13630  001922                     L8:
 13631  001922  0E00               	movlw	0
 13632  001924  6E12               	movwf	___fldiv@b+3,c
 13633  001926  5016               	movf	___fldiv@a+3,w,c
 13634  001928  0B80               	andlw	128
 13635  00192A  1A1F               	xorwf	___fldiv@sign,f,c
 13636  00192C  5016               	movf	___fldiv@a+3,w,c
 13637  00192E  2416               	addwf	___fldiv@a+3,w,c
 13638  001930  6E27               	movwf	___fldiv@aexp,c
 13639  001932  BE15               	btfsc	___fldiv@a+2,7,c
 13640  001934  8027               	bsf	___fldiv@aexp,0,c
 13641  001936  5027               	movf	___fldiv@aexp,w,c
 13642  001938  B4D8               	btfsc	status,2,c
 13643  00193A  D00D               	goto	i2l4949
 13644  00193C  2827               	incf	___fldiv@aexp,w,c
 13645  00193E  A4D8               	btfss	status,2,c
 13646  001940  D008               	goto	i2l4945
 13647  001942  0E00               	movlw	0
 13648  001944  6E13               	movwf	___fldiv@a,c
 13649  001946  0E00               	movlw	0
 13650  001948  6E14               	movwf	___fldiv@a+1,c
 13651  00194A  0E00               	movlw	0
 13652  00194C  6E15               	movwf	___fldiv@a+2,c
 13653  00194E  0E00               	movlw	0
 13654  001950  6E16               	movwf	___fldiv@a+3,c
 13655  001952                     i2l4945:
 13656  001952  8E15               	bsf	___fldiv@a+2,7,c
 13657  001954  D006               	goto	L9
 13658  001956                     i2l4949:
 13659  001956  0E00               	movlw	0
 13660  001958  6E13               	movwf	___fldiv@a,c
 13661  00195A  0E00               	movlw	0
 13662  00195C  6E14               	movwf	___fldiv@a+1,c
 13663  00195E  0E00               	movlw	0
 13664  001960  6E15               	movwf	___fldiv@a+2,c
 13665  001962                     L9:
 13666  001962  0E00               	movlw	0
 13667  001964  6E16               	movwf	___fldiv@a+3,c
 13668  001966  5013               	movf	___fldiv@a,w,c
 13669  001968  1014               	iorwf	___fldiv@a+1,w,c
 13670  00196A  1015               	iorwf	___fldiv@a+2,w,c
 13671  00196C  1016               	iorwf	___fldiv@a+3,w,c
 13672  00196E  A4D8               	btfss	status,2,c
 13673  001970  D017               	goto	i2l4963
 13674  001972  0E00               	movlw	0
 13675  001974  6E0F               	movwf	___fldiv@b,c
 13676  001976  0E00               	movlw	0
 13677  001978  6E10               	movwf	___fldiv@b+1,c
 13678  00197A  0E00               	movlw	0
 13679  00197C  6E11               	movwf	___fldiv@b+2,c
 13680  00197E  0E00               	movlw	0
 13681  001980  6E12               	movwf	___fldiv@b+3,c
 13682  001982  0E80               	movlw	128
 13683  001984  1211               	iorwf	___fldiv@b+2,f,c
 13684  001986  0E7F               	movlw	127
 13685  001988  1212               	iorwf	___fldiv@b+3,f,c
 13686  00198A                     i2l4957:
 13687  00198A  501F               	movf	___fldiv@sign,w,c
 13688  00198C  1212               	iorwf	___fldiv@b+3,f,c
 13689  00198E  C00F  F00F         	movff	___fldiv@b,?___fldiv
 13690  001992  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
 13691  001996  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
 13692  00199A  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
 13693  00199E  0012               	return	
 13694  0019A0                     i2l4963:
 13695  0019A0  5026               	movf	___fldiv@bexp,w,c
 13696  0019A2  A4D8               	btfss	status,2,c
 13697  0019A4  D009               	goto	i2l4971
 13698  0019A6  0E00               	movlw	0
 13699  0019A8  6E0F               	movwf	?___fldiv,c
 13700  0019AA  0E00               	movlw	0
 13701  0019AC  6E10               	movwf	?___fldiv+1,c
 13702  0019AE  0E00               	movlw	0
 13703  0019B0  6E11               	movwf	?___fldiv+2,c
 13704  0019B2  0E00               	movlw	0
 13705  0019B4  6E12               	movwf	?___fldiv+3,c
 13706  0019B6  0012               	return	
 13707  0019B8                     i2l4971:
 13708  0019B8  5027               	movf	___fldiv@aexp,w,c
 13709  0019BA  C026  F017         	movff	___fldiv@bexp,??___fldiv
 13710  0019BE  6A18               	clrf	(??___fldiv+1)& (0+255),c
 13711  0019C0  5E17               	subwf	??___fldiv,f,c
 13712  0019C2  0E00               	movlw	0
 13713  0019C4  5A18               	subwfb	??___fldiv+1,f,c
 13714  0019C6  0E7F               	movlw	127
 13715  0019C8  2417               	addwf	??___fldiv,w,c
 13716  0019CA  6E20               	movwf	___fldiv@new_exp,c
 13717  0019CC  0E00               	movlw	0
 13718  0019CE  2018               	addwfc	??___fldiv+1,w,c
 13719  0019D0  6E21               	movwf	___fldiv@new_exp+1,c
 13720  0019D2  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
 13721  0019D6  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
 13722  0019DA  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
 13723  0019DE  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
 13724  0019E2  0E00               	movlw	0
 13725  0019E4  6E0F               	movwf	___fldiv@b,c
 13726  0019E6  0E00               	movlw	0
 13727  0019E8  6E10               	movwf	___fldiv@b+1,c
 13728  0019EA  0E00               	movlw	0
 13729  0019EC  6E11               	movwf	___fldiv@b+2,c
 13730  0019EE  0E00               	movlw	0
 13731  0019F0  6E12               	movwf	___fldiv@b+3,c
 13732  0019F2  0E00               	movlw	0
 13733  0019F4  6E22               	movwf	___fldiv@grs,c
 13734  0019F6  0E00               	movlw	0
 13735  0019F8  6E23               	movwf	___fldiv@grs+1,c
 13736  0019FA  0E00               	movlw	0
 13737  0019FC  6E24               	movwf	___fldiv@grs+2,c
 13738  0019FE  0E00               	movlw	0
 13739  001A00  6E25               	movwf	___fldiv@grs+3,c
 13740  001A02  0E00               	movlw	0
 13741  001A04  6E27               	movwf	___fldiv@aexp,c
 13742  001A06  D028               	goto	i2l1270
 13743  001A08                     i2l4981:
 13744  001A08  5027               	movf	___fldiv@aexp,w,c
 13745  001A0A  B4D8               	btfsc	status,2,c
 13746  001A0C  D011               	goto	i2l4989
 13747  001A0E  90D8               	bcf	status,0,c
 13748  001A10  361B               	rlcf	___fldiv@rem,f,c
 13749  001A12  361C               	rlcf	___fldiv@rem+1,f,c
 13750  001A14  361D               	rlcf	___fldiv@rem+2,f,c
 13751  001A16  361E               	rlcf	___fldiv@rem+3,f,c
 13752  001A18  90D8               	bcf	status,0,c
 13753  001A1A  360F               	rlcf	___fldiv@b,f,c
 13754  001A1C  3610               	rlcf	___fldiv@b+1,f,c
 13755  001A1E  3611               	rlcf	___fldiv@b+2,f,c
 13756  001A20  3612               	rlcf	___fldiv@b+3,f,c
 13757  001A22  BE25               	btfsc	___fldiv@grs+3,7,c
 13758  001A24  800F               	bsf	___fldiv@b,0,c
 13759  001A26  90D8               	bcf	status,0,c
 13760  001A28  3622               	rlcf	___fldiv@grs,f,c
 13761  001A2A  3623               	rlcf	___fldiv@grs+1,f,c
 13762  001A2C  3624               	rlcf	___fldiv@grs+2,f,c
 13763  001A2E  3625               	rlcf	___fldiv@grs+3,f,c
 13764  001A30                     i2l4989:
 13765  001A30  5013               	movf	___fldiv@a,w,c
 13766  001A32  5C1B               	subwf	___fldiv@rem,w,c
 13767  001A34  5014               	movf	___fldiv@a+1,w,c
 13768  001A36  581C               	subwfb	___fldiv@rem+1,w,c
 13769  001A38  5015               	movf	___fldiv@a+2,w,c
 13770  001A3A  581D               	subwfb	___fldiv@rem+2,w,c
 13771  001A3C  5016               	movf	___fldiv@a+3,w,c
 13772  001A3E  581E               	subwfb	___fldiv@rem+3,w,c
 13773  001A40  A0D8               	btfss	status,0,c
 13774  001A42  D009               	goto	i2l4995
 13775  001A44  8C25               	bsf	___fldiv@grs+3,6,c
 13776  001A46  5013               	movf	___fldiv@a,w,c
 13777  001A48  5E1B               	subwf	___fldiv@rem,f,c
 13778  001A4A  5014               	movf	___fldiv@a+1,w,c
 13779  001A4C  5A1C               	subwfb	___fldiv@rem+1,f,c
 13780  001A4E  5015               	movf	___fldiv@a+2,w,c
 13781  001A50  5A1D               	subwfb	___fldiv@rem+2,f,c
 13782  001A52  5016               	movf	___fldiv@a+3,w,c
 13783  001A54  5A1E               	subwfb	___fldiv@rem+3,f,c
 13784  001A56                     i2l4995:
 13785  001A56  2A27               	incf	___fldiv@aexp,f,c
 13786  001A58                     i2l1270:
 13787  001A58  0E19               	movlw	25
 13788  001A5A  6427               	cpfsgt	___fldiv@aexp,c
 13789  001A5C  D7D5               	goto	i2l4981
 13790  001A5E  501B               	movf	___fldiv@rem,w,c
 13791  001A60  101C               	iorwf	___fldiv@rem+1,w,c
 13792  001A62  101D               	iorwf	___fldiv@rem+2,w,c
 13793  001A64  101E               	iorwf	___fldiv@rem+3,w,c
 13794  001A66  B4D8               	btfsc	status,2,c
 13795  001A68  D011               	goto	i2l5007
 13796  001A6A  8022               	bsf	___fldiv@grs,0,c
 13797  001A6C  D00F               	goto	i2l5007
 13798  001A6E                     i2l5001:
 13799  001A6E  90D8               	bcf	status,0,c
 13800  001A70  360F               	rlcf	___fldiv@b,f,c
 13801  001A72  3610               	rlcf	___fldiv@b+1,f,c
 13802  001A74  3611               	rlcf	___fldiv@b+2,f,c
 13803  001A76  3612               	rlcf	___fldiv@b+3,f,c
 13804  001A78  BE25               	btfsc	___fldiv@grs+3,7,c
 13805  001A7A  800F               	bsf	___fldiv@b,0,c
 13806  001A7C  90D8               	bcf	status,0,c
 13807  001A7E  3622               	rlcf	___fldiv@grs,f,c
 13808  001A80  3623               	rlcf	___fldiv@grs+1,f,c
 13809  001A82  3624               	rlcf	___fldiv@grs+2,f,c
 13810  001A84  3625               	rlcf	___fldiv@grs+3,f,c
 13811  001A86  0620               	decf	___fldiv@new_exp,f,c
 13812  001A88  A0D8               	btfss	status,0,c
 13813  001A8A  0621               	decf	___fldiv@new_exp+1,f,c
 13814  001A8C                     i2l5007:
 13815  001A8C  AE11               	btfss	___fldiv@b+2,7,c
 13816  001A8E  D7EF               	goto	i2l5001
 13817  001A90  0E00               	movlw	0
 13818  001A92  6E27               	movwf	___fldiv@aexp,c
 13819  001A94  AE25               	btfss	___fldiv@grs+3,7,c
 13820  001A96  D017               	goto	i2l1281
 13821  001A98  0EFF               	movlw	255
 13822  001A9A  1422               	andwf	___fldiv@grs,w,c
 13823  001A9C  6E17               	movwf	??___fldiv& (0+255),c
 13824  001A9E  0EFF               	movlw	255
 13825  001AA0  1423               	andwf	___fldiv@grs+1,w,c
 13826  001AA2  6E18               	movwf	(??___fldiv+1)& (0+255),c
 13827  001AA4  0EFF               	movlw	255
 13828  001AA6  1424               	andwf	___fldiv@grs+2,w,c
 13829  001AA8  6E19               	movwf	(??___fldiv+2)& (0+255),c
 13830  001AAA  0E7F               	movlw	127
 13831  001AAC  1425               	andwf	___fldiv@grs+3,w,c
 13832  001AAE  6E1A               	movwf	(??___fldiv+3)& (0+255),c
 13833  001AB0  5017               	movf	??___fldiv,w,c
 13834  001AB2  1018               	iorwf	??___fldiv+1,w,c
 13835  001AB4  1019               	iorwf	??___fldiv+2,w,c
 13836  001AB6  101A               	iorwf	??___fldiv+3,w,c
 13837  001AB8  B4D8               	btfsc	status,2,c
 13838  001ABA  D003               	goto	i2l1282
 13839  001ABC                     i2u489_40:
 13840  001ABC  0E01               	movlw	1
 13841  001ABE  6E27               	movwf	___fldiv@aexp,c
 13842  001AC0  D002               	goto	i2l1281
 13843  001AC2                     i2l1282:
 13844  001AC2  B00F               	btfsc	___fldiv@b,0,c
 13845  001AC4  D7FB               	goto	i2u489_40
 13846  001AC6                     i2l1281:
 13847  001AC6  5027               	movf	___fldiv@aexp,w,c
 13848  001AC8  B4D8               	btfsc	status,2,c
 13849  001ACA  D01F               	goto	i2l5027
 13850  001ACC  0E01               	movlw	1
 13851  001ACE  260F               	addwf	___fldiv@b,f,c
 13852  001AD0  0E00               	movlw	0
 13853  001AD2  2210               	addwfc	___fldiv@b+1,f,c
 13854  001AD4  2211               	addwfc	___fldiv@b+2,f,c
 13855  001AD6  2212               	addwfc	___fldiv@b+3,f,c
 13856  001AD8  A012               	btfss	___fldiv@b+3,0,c
 13857  001ADA  D017               	goto	i2l5027
 13858  001ADC  C00F  F017         	movff	___fldiv@b,??___fldiv
 13859  001AE0  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
 13860  001AE4  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
 13861  001AE8  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
 13862  001AEC  341A               	rlcf	??___fldiv+3,w,c
 13863  001AEE  321A               	rrcf	??___fldiv+3,f,c
 13864  001AF0  3219               	rrcf	??___fldiv+2,f,c
 13865  001AF2  3218               	rrcf	??___fldiv+1,f,c
 13866  001AF4  3217               	rrcf	??___fldiv,f,c
 13867  001AF6  C017  F00F         	movff	??___fldiv,___fldiv@b
 13868  001AFA  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
 13869  001AFE  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
 13870  001B02  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
 13871  001B06  4A20               	infsnz	___fldiv@new_exp,f,c
 13872  001B08  2A21               	incf	___fldiv@new_exp+1,f,c
 13873  001B0A                     i2l5027:
 13874  001B0A  BE21               	btfsc	___fldiv@new_exp+1,7,c
 13875  001B0C  D010               	goto	i2l5031
 13876  001B0E  5021               	movf	___fldiv@new_exp+1,w,c
 13877  001B10  E103               	bnz	i2u493_40
 13878  001B12  2820               	incf	___fldiv@new_exp,w,c
 13879  001B14  A0D8               	btfss	status,0,c
 13880  001B16  D00B               	goto	i2l5031
 13881  001B18                     i2u493_40:
 13882  001B18  0E00               	movlw	0
 13883  001B1A  6E21               	movwf	___fldiv@new_exp+1,c
 13884  001B1C  6820               	setf	___fldiv@new_exp,c
 13885  001B1E  0E00               	movlw	0
 13886  001B20  6E0F               	movwf	___fldiv@b,c
 13887  001B22  0E00               	movlw	0
 13888  001B24  6E10               	movwf	___fldiv@b+1,c
 13889  001B26  0E00               	movlw	0
 13890  001B28  6E11               	movwf	___fldiv@b+2,c
 13891  001B2A  0E00               	movlw	0
 13892  001B2C  6E12               	movwf	___fldiv@b+3,c
 13893  001B2E                     i2l5031:
 13894  001B2E  BE21               	btfsc	___fldiv@new_exp+1,7,c
 13895  001B30  D005               	goto	i2u494_40
 13896  001B32  5021               	movf	___fldiv@new_exp+1,w,c
 13897  001B34  E111               	bnz	i2l5035
 13898  001B36  0420               	decf	___fldiv@new_exp,w,c
 13899  001B38  B0D8               	btfsc	status,0,c
 13900  001B3A  D00E               	goto	i2l5035
 13901  001B3C                     i2u494_40:
 13902  001B3C  0E00               	movlw	0
 13903  001B3E  6E21               	movwf	___fldiv@new_exp+1,c
 13904  001B40  0E00               	movlw	0
 13905  001B42  6E20               	movwf	___fldiv@new_exp,c
 13906  001B44  0E00               	movlw	0
 13907  001B46  6E0F               	movwf	___fldiv@b,c
 13908  001B48  0E00               	movlw	0
 13909  001B4A  6E10               	movwf	___fldiv@b+1,c
 13910  001B4C  0E00               	movlw	0
 13911  001B4E  6E11               	movwf	___fldiv@b+2,c
 13912  001B50  0E00               	movlw	0
 13913  001B52  6E12               	movwf	___fldiv@b+3,c
 13914  001B54  0E00               	movlw	0
 13915  001B56  6E1F               	movwf	___fldiv@sign,c
 13916  001B58                     i2l5035:
 13917  001B58  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
 13918  001B5C  A026               	btfss	___fldiv@bexp,0,c
 13919  001B5E  D002               	goto	i2l5041
 13920  001B60  8E11               	bsf	___fldiv@b+2,7,c
 13921  001B62  D001               	goto	i2l5043
 13922  001B64                     i2l5041:
 13923  001B64  9E11               	bcf	___fldiv@b+2,7,c
 13924  001B66                     i2l5043:
 13925  001B66  90D8               	bcf	status,0,c
 13926  001B68  3026               	rrcf	___fldiv@bexp,w,c
 13927  001B6A  6E12               	movwf	___fldiv@b+3,c
 13928  001B6C  D70E               	goto	i2l4957
 13929  001B6E                     __end_of___fldiv:
 13930                           	opt callstack 0
 13931                           
 13932                           	psect	rparam
 13933  0000                     
 13934                           	psect	temp
 13935  00006E                     btemp:
 13936                           	opt callstack 0
 13937  00006E                     	ds	1
 13938  0000                     int$flags	set	btemp
 13939  0000                     wtemp8	set	btemp+1
 13940  0000                     ttemp5	set	btemp+1
 13941  0000                     ttemp6	set	btemp+4
 13942  0000                     ttemp7	set	btemp+8
 13943                           tosu	equ	0xFFF
 13944                           tosh	equ	0xFFE
 13945                           tosl	equ	0xFFD
 13946                           stkptr	equ	0xFFC
 13947                           pclatu	equ	0xFFB
 13948                           pclath	equ	0xFFA
 13949                           pcl	equ	0xFF9
 13950                           tblptru	equ	0xFF8
 13951                           tblptrh	equ	0xFF7
 13952                           tblptrl	equ	0xFF6
 13953                           tablat	equ	0xFF5
 13954                           prodh	equ	0xFF4
 13955                           prodl	equ	0xFF3
 13956                           indf0	equ	0xFEF
 13957                           postinc0	equ	0xFEE
 13958                           postdec0	equ	0xFED
 13959                           preinc0	equ	0xFEC
 13960                           plusw0	equ	0xFEB
 13961                           fsr0h	equ	0xFEA
 13962                           fsr0l	equ	0xFE9
 13963                           wreg	equ	0xFE8
 13964                           indf1	equ	0xFE7
 13965                           postinc1	equ	0xFE6
 13966                           postdec1	equ	0xFE5
 13967                           preinc1	equ	0xFE4
 13968                           plusw1	equ	0xFE3
 13969                           fsr1h	equ	0xFE2
 13970                           fsr1l	equ	0xFE1
 13971                           bsr	equ	0xFE0
 13972                           indf2	equ	0xFDF
 13973                           postinc2	equ	0xFDE
 13974                           postdec2	equ	0xFDD
 13975                           preinc2	equ	0xFDC
 13976                           plusw2	equ	0xFDB
 13977                           fsr2h	equ	0xFDA
 13978                           fsr2l	equ	0xFD9
 13979                           status	equ	0xFD8


Data Sizes:
    Strings     525
    Constant    23
    Data        5
    BSS         238
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     55     109
    BANK0           128    127     128
    BANK1           256     92     153
    BANK2           256    106     233
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          244      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_58(CODE[10]), STR_57(CODE[11]), STR_56(CODE[11]), STR_55(CODE[12]), 
		 -> STR_54(CODE[12]), STR_53(CODE[10]), STR_52(CODE[13]), STR_51(CODE[8]), 
		 -> STR_50(CODE[17]), STR_49(CODE[15]), STR_48(CODE[15]), STR_47(CODE[12]), 
		 -> STR_46(CODE[17]), STR_45(CODE[12]), STR_44(CODE[15]), STR_43(CODE[18]), 
		 -> STR_42(CODE[17]), STR_41(CODE[12]), STR_40(CODE[15]), STR_39(CODE[18]), 
		 -> STR_38(CODE[17]), STR_37(CODE[14]), STR_36(CODE[14]), STR_35(CODE[17]), 
		 -> STR_34(CODE[3]), STR_33(CODE[9]), STR_32(CODE[16]), STR_31(CODE[3]), 
		 -> STR_30(CODE[9]), STR_29(CODE[17]), STR_28(CODE[15]), STR_27(CODE[15]), 
		 -> STR_26(CODE[12]), STR_25(CODE[10]), STR_24(CODE[15]), STR_23(CODE[12]), 
		 -> STR_22(CODE[10]), STR_21(CODE[16]), STR_20(CODE[12]), STR_19(CODE[3]), 
		 -> STR_18(CODE[11]), STR_17(CODE[10]), STR_16(CODE[17]), STR_15(CODE[10]), 
		 -> STR_14(CODE[16]), STR_13(CODE[10]), STR_12(CODE[16]), STR_11(CODE[10]), 
		 -> STR_10(CODE[17]), STR_9(CODE[5]), STR_8(CODE[10]), STR_7(CODE[14]), 
		 -> STR_6(CODE[6]), STR_5(CODE[10]), STR_4(CODE[10]), STR_3(CODE[11]), 
		 -> STR_2(CODE[13]), STR_1(CODE[10]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1623_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_58(CODE[10]), STR_57(CODE[11]), STR_56(CODE[11]), STR_55(CODE[12]), 
		 -> STR_54(CODE[12]), STR_53(CODE[10]), STR_52(CODE[13]), STR_51(CODE[8]), 
		 -> STR_50(CODE[17]), STR_49(CODE[15]), STR_48(CODE[15]), STR_47(CODE[12]), 
		 -> STR_46(CODE[17]), STR_45(CODE[12]), STR_44(CODE[15]), STR_43(CODE[18]), 
		 -> STR_42(CODE[17]), STR_41(CODE[12]), STR_40(CODE[15]), STR_39(CODE[18]), 
		 -> STR_38(CODE[17]), STR_37(CODE[14]), STR_36(CODE[14]), STR_35(CODE[17]), 
		 -> STR_34(CODE[3]), STR_33(CODE[9]), STR_32(CODE[16]), STR_31(CODE[3]), 
		 -> STR_30(CODE[9]), STR_29(CODE[17]), STR_28(CODE[15]), STR_27(CODE[15]), 
		 -> STR_26(CODE[12]), STR_25(CODE[10]), STR_24(CODE[15]), STR_23(CODE[12]), 
		 -> STR_22(CODE[10]), STR_21(CODE[16]), STR_20(CODE[12]), STR_19(CODE[3]), 
		 -> STR_18(CODE[11]), STR_17(CODE[10]), STR_16(CODE[17]), STR_15(CODE[10]), 
		 -> STR_14(CODE[16]), STR_13(CODE[10]), STR_12(CODE[16]), STR_11(CODE[10]), 
		 -> STR_10(CODE[17]), STR_9(CODE[5]), STR_8(CODE[10]), STR_7(CODE[14]), 
		 -> STR_6(CODE[6]), STR_5(CODE[10]), STR_4(CODE[10]), STR_3(CODE[11]), 
		 -> STR_2(CODE[13]), STR_1(CODE[10]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_58(CODE[10]), STR_57(CODE[11]), STR_56(CODE[11]), STR_55(CODE[12]), 
		 -> STR_54(CODE[12]), STR_53(CODE[10]), STR_52(CODE[13]), STR_51(CODE[8]), 
		 -> STR_50(CODE[17]), STR_49(CODE[15]), STR_48(CODE[15]), STR_47(CODE[12]), 
		 -> STR_46(CODE[17]), STR_45(CODE[12]), STR_44(CODE[15]), STR_43(CODE[18]), 
		 -> STR_42(CODE[17]), STR_41(CODE[12]), STR_40(CODE[15]), STR_39(CODE[18]), 
		 -> STR_38(CODE[17]), STR_37(CODE[14]), STR_36(CODE[14]), STR_35(CODE[17]), 
		 -> STR_34(CODE[3]), STR_33(CODE[9]), STR_32(CODE[16]), STR_31(CODE[3]), 
		 -> STR_30(CODE[9]), STR_29(CODE[17]), STR_28(CODE[15]), STR_27(CODE[15]), 
		 -> STR_26(CODE[12]), STR_25(CODE[10]), STR_24(CODE[15]), STR_23(CODE[12]), 
		 -> STR_22(CODE[10]), STR_21(CODE[16]), STR_20(CODE[12]), STR_19(CODE[3]), 
		 -> STR_18(CODE[11]), STR_17(CODE[10]), STR_16(CODE[17]), STR_15(CODE[10]), 
		 -> STR_14(CODE[16]), STR_13(CODE[10]), STR_12(CODE[16]), STR_11(CODE[10]), 
		 -> STR_10(CODE[17]), STR_9(CODE[5]), STR_8(CODE[10]), STR_7(CODE[14]), 
		 -> STR_6(CODE[6]), STR_5(CODE[10]), STR_4(CODE[10]), STR_3(CODE[11]), 
		 -> STR_2(CODE[13]), STR_1(CODE[10]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_58(CODE[10]), STR_57(CODE[11]), STR_56(CODE[11]), STR_55(CODE[12]), 
		 -> STR_54(CODE[12]), STR_53(CODE[10]), STR_52(CODE[13]), STR_51(CODE[8]), 
		 -> STR_50(CODE[17]), STR_49(CODE[15]), STR_48(CODE[15]), STR_47(CODE[12]), 
		 -> STR_46(CODE[17]), STR_45(CODE[12]), STR_44(CODE[15]), STR_43(CODE[18]), 
		 -> STR_42(CODE[17]), STR_41(CODE[12]), STR_40(CODE[15]), STR_39(CODE[18]), 
		 -> STR_38(CODE[17]), STR_37(CODE[14]), STR_36(CODE[14]), STR_35(CODE[17]), 
		 -> STR_34(CODE[3]), STR_33(CODE[9]), STR_32(CODE[16]), STR_31(CODE[3]), 
		 -> STR_30(CODE[9]), STR_29(CODE[17]), STR_28(CODE[15]), STR_27(CODE[15]), 
		 -> STR_26(CODE[12]), STR_25(CODE[10]), STR_24(CODE[15]), STR_23(CODE[12]), 
		 -> STR_22(CODE[10]), STR_21(CODE[16]), STR_20(CODE[12]), STR_19(CODE[3]), 
		 -> STR_18(CODE[11]), STR_17(CODE[10]), STR_16(CODE[17]), STR_15(CODE[10]), 
		 -> STR_14(CODE[16]), STR_13(CODE[10]), STR_12(CODE[16]), STR_11(CODE[10]), 
		 -> STR_10(CODE[17]), STR_9(CODE[5]), STR_8(CODE[10]), STR_7(CODE[14]), 
		 -> STR_6(CODE[6]), STR_5(CODE[10]), STR_4(CODE[10]), STR_3(CODE[11]), 
		 -> STR_2(CODE[13]), STR_1(CODE[10]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    min@array	PTR int  size(2) Largest target is 8
		 -> a(COMRAM[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_echo
    _echo->___fltol
    ___fltol->___fldiv
    ___fldiv->___xxtofl

Critical Paths under _main in BANK0

    _main->_number_deploy
    _ultrasonic_main->_print_echo
    _brake->_I2C_Master_Write
    _print_echo->_printf
    _start->_I2C_Master_Init
    _number_deploy->_printf
    _backwards->_I2C_Master_Write
    _actuators_main->_stepper
    _actuators_main->_stepper2
    _actuators_main->_stepper2_back
    _stepper2_back->_full_drive
    _stepper2->_full_drive
    _stepper->_full_drive
    _full_drive->_printf
    _servo->_servoRotate0
    _servo->_servoRotate180
    _UI_main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_send_byte
    _abs->___aomod
    _atoi->_isspace
    _initLCD->_lcdInst
    _lcdInst->_send_byte
    _send_byte->_send_nibble
    _send_nibble->_pulse_e
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_UI_main
    _actuators_main->_stepper2

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               108   108      0  270994
                                             90 BANK1      2     2      0
                                              0 BANK2    106   106      0
                            _UI_main
                             ___wmul
                     _actuators_main
                          _backwards
                              _brake
                            _initLCD
                            _lcdInst
                      _number_deploy
                             _printf
                              _start
                    _ultrasonic_main
 ---------------------------------------------------------------------------------
 (1) _ultrasonic_main                                     14    12      2   49573
                                            122 BANK0      4     2      2
                                              0 BANK1     10    10      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                                _abs
                            _lcdInst
                                _min
                         _print_echo
                             _printf
                        _sense_tires
                               _trig
 ---------------------------------------------------------------------------------
 (2) _trig                                                 2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _sense_tires                                          2     0      2    1412
                                              3 BANK0      2     0      2
                              _brake
 ---------------------------------------------------------------------------------
 (3) _brake                                                0     0      0    1291
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _print_echo                                           1     1      0   22783
                                            121 BANK0      1     1      0
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _min                                                 11     7      4     722
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 (1) _start                                                0     0      0    2013
                    _I2C_Master_Init
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _number_deploy                                       12     8      4   24734
                                            121 BANK0      6     2      4
                                              0 BANK1      6     6      0
                            ___awdiv
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1245
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _backwards                                            0     0      0    1291
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _actuators_main                                       8     4      4  140604
                                             12 BANK1      8     4      4
                            _initLCD
                            _lcdInst
                             _printf
                              _servo
                            _stepper
                           _stepper2
                      _stepper2_back
                        _system_init
 ---------------------------------------------------------------------------------
 (2) _system_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _stepper2_back                                        8     6      2   46394
                                            125 BANK0      2     0      2
                                              0 BANK1      6     6      0
                         _full_drive
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _stepper2                                            14    12      2   46679
                                            125 BANK0      2     0      2
                                              0 BANK1     12    12      0
                         _full_drive
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _stepper                                              8     6      2   23679
                                            125 BANK0      2     0      2
                                              0 BANK1      6     6      0
                         _full_drive
 ---------------------------------------------------------------------------------
 (3) _full_drive                                           4     2      2   23354
                                            121 BANK0      4     2      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _servo                                                2     2      0     136
                                              3 BANK0      2     2      0
                       _servoRotate0
                     _servoRotate180
 ---------------------------------------------------------------------------------
 (3) _servoRotate180                                       3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _servoRotate0                                         3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _UI_main                                             94    90      4   26490
                                            121 BANK0      4     0      4
                                              0 BANK1     90    90      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___llmod
                            _initLCD
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              12     4      8   22625
                                            109 BANK0     12     4      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   17312
                                            101 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6   16767
                                             70 BANK0     31    25      6
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    5847
                                             31 BANK0     39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     512
                                              6 BANK0      8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     191
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     191
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     191
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6173
                                             31 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3817
                                             20 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1602
                                             13 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1102
                                              4 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0     158
                                              3 BANK0      1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     273
                                             18 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              0 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1895
                                              7 BANK0     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     281
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     792
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     350
                                              4 BANK0      1     1      0
                            _lcdInst
                          _send_byte
                        _send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcdInst                                              1     1      0     158
                                              3 BANK0      1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (10) _send_byte                                           1     1      0     127
                                              2 BANK0      1     1      0
                        _send_nibble
 ---------------------------------------------------------------------------------
 (11) _send_nibble                                         1     1      0      65
                                              1 BANK0      1     1      0
                            _pulse_e
 ---------------------------------------------------------------------------------
 (12) _pulse_e                                             1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     412
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Write                                     2     0      2    1291
                                              1 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      2     2      0      65
                                              1 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Wait                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     722
                                             13 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     421
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _ISR                                                 2     2      0    3522
                                             53 COMRAM     2     2      0
                               _echo
 ---------------------------------------------------------------------------------
 (16) _echo                                                4     4      0    3522
                                             49 COMRAM     4     4      0
                            ___fldiv
                            ___fltol
                           ___xxtofl
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (17) i2___awdiv                                           8     4      4     508
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (17) ___xxtofl                                           14    10      4     626
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (17) ___fltol                                            10     6      4     533
                                             39 COMRAM    10     6      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (17) ___fldiv                                            25    17      8    1855
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UI_main
     _I2C_Master_Init
       ___lldiv
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     ___llmod
     _initLCD
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _send_byte
         _send_nibble
           _pulse_e
       _send_nibble
         _pulse_e
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
   ___wmul
   _actuators_main
     _initLCD
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _send_byte
         _send_nibble
           _pulse_e
       _send_nibble
         _pulse_e
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
     _servo
       _servoRotate0
       _servoRotate180
     _stepper
       _full_drive
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _toupper
                   _islower
     _stepper2
       _full_drive
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _toupper
                   _islower
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _toupper
                 _islower
     _stepper2_back
       _full_drive
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _toupper
                   _islower
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _toupper
                 _islower
     _system_init
   _backwards
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _brake
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _initLCD
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _send_byte
       _send_nibble
         _pulse_e
     _send_nibble
       _pulse_e
   _lcdInst
     _send_byte
       _send_nibble
         _pulse_e
   _number_deploy
     ___awdiv
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _fputc
           _putch
             _send_byte
               _send_nibble
                 _pulse_e
         _isdigit
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
           _toupper
             _islower
   _start
     _I2C_Master_Init
       ___lldiv
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _ultrasonic_main
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _abs
       ___aomod (ARG)
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _min
     _print_echo
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _toupper
                 _islower
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
     _sense_tires
       _brake
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _trig

 _ISR (ROOT)
   _echo
     ___fldiv
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     i2___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EF3      0       0      38        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100     6A      E9      10       91.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100     5C      99       8       59.8%
BITBANK14           F4      0       0      33        0.0%
BANK14              F4      0       0      34        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     7F      80       5      100.0%
BIGRAM_1            80      0       0      37        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     37      6D       1       86.5%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     26F       6        0.0%
DATA                 0      0     26F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Apr 06 15:13:14 2019

                  ___fldiv@aexp 0027                    ___fldiv@bexp 0026                               _a 0061  
                             _b 005A                               _i 015E                    ___fldiv@sign 001F  
                   __CFG_CPD$ON 000000                    ___awdiv@sign 0085             ___wmul@multiplicand 0082  
                   __CFG_BORV$3 000000                 ??_number_deploy 00FD               stepper2@direction 010B  
                 servoRotate0@i 0081                    __CFG_CP0$OFF 000000                    __CFG_CP1$OFF 000000  
                  __CFG_CP2$OFF 000000                    __CFG_CP3$OFF 000000                     __CFG_OSC$HS 000000  
           __end_of_system_init 38AC                             l112 36C4                             l117 35C6  
               _ultrasonic_main 2212                             l621 1DDC                             l464 31A8  
                           l713 332A                             l619 1DD4                             l494 0290  
                           l583 30B2                             l594 1BE2                             l596 1BEA  
                           _GIE 007F97                    __CFG_CPB$OFF 000000                             _RB2 007C0A  
                           _RC1 007C11                             _RB3 007C0B                             _RC2 007C12  
                           _RB4 007C0C                             _RD0 007C18                             _RB5 007C0D  
                           _RD1 007C19                             _RB6 007C0E                             _RB7 007C0F  
                           _ISR 0008          __size_of_stepper2_back 00A0                             _abs 3846  
                           _cnt 0166                             _pad 3082                             _min 2C1A  
                           _sum 0038                  stepper2_back@i 0104                             wreg 000FE8  
                  __CFG_LVP$OFF 000000                            ?_ISR 0001                    ___fltol@exp1 0031  
                  __CFG_WDT$OFF 000000                            l1106 34F4                            ?_abs 0092  
                          l1361 3870                            l1392 2874                            l1459 374C  
                          l7001 3204                            l6211 30AA                            l6221 3102  
                          l6213 30BC                            l7021 2E62                            ?_pad 0094  
                          l6207 309A                            l7103 2D78                            l6321 2BBC  
                          l6313 2B60                            l6305 2B22                            l6217 30D6  
                          l7041 2EF6                            l7017 2E4A                            l7113 2DAC  
                          l6315 2B74                            l6403 1D8C                            l7027 2E9A  
                          l7123 2DE0                            l7301 34E6                            l6341 378E  
                          l6501 2814                            l6261 261E                            l6325 2BD2  
                          l6309 2B46                            l7037 2EDE                            l7221 2D0C  
                          l7205 2C50                            l7133 2E14                            l6183 37F8  
                          l6351 1BC6                            l6431 1E46                            l6423 1E24  
                          l7207 2C5A                            l7151 2486                            l6273 266C  
                          l6329 2BF8                            l6169 344A                            l6417 1DF2  
                          l7065 303C                            l7145 2458                            l6275 2680  
                          l6267 2646                            l6179 37E0                            l6187 394C  
                          l6603 155C                            l7219 2D08                            l7091 2D3E  
                          ?_min 0080                            l6293 2718                            l6285 26DC  
                          l6189 3952                            l6365 1C04                            l6445 1ED4  
                          l6453 1F4C                            l6541 1270                            l6533 1268  
                          l6525 1252                            l6613 1580                            l7253 3248  
                          l7501 20D2                            l7413 224C                            l6607 1568  
                          l6527 1254                            l6551 12C0                            l7319 2A18  
                          l7503 20DC                            l7191 25BA                            l7183 2576  
                          l7175 2542                            l7167 24FE                            l7159 24CA  
                          l7407 223A                            l6289 26F2                            l6369 1C14  
                          l6545 1274                            l6537 126C                            l6529 1264  
                          l7265 326E                            l7281 32A0                            l6491 27A8  
                          l6475 274E                            l6379 1D0E                            l6563 132C  
                          l7603 015E                            l6803 17B8                            l7267 3276  
                          l7259 3258                            l7515 2128                            l7435 22DA  
                          l7293 34B2                            l6493 27B0                            l6485 2798  
                          l6477 2752                            l6469 1FC2                            l6565 134A  
                          l6549 127E                            l6637 3624                            l6709 162E  
                          l6725 169A                            l7285 32AE                            l7277 3296  
                          l7461 23AA                            l7437 22F8                            l7445 232A  
                          l6911 32E8                            l7295 34BE                            l6495 27B6  
                          l6399 1D74                            l6583 1452                            l6567 1358  
                          l6639 364C                            l7631 01EA                            l7535 21FE  
                          l7447 2332                            l6921 331C                            l6497 27DE  
                          l7395 2AEA                            l7491 2088                            l7483 2042  
                          l7459 23A4                            l6909 32DC                            l6597 1520  
                          l7653 0270                            l7741 06A6                            l7573 00BC  
                          l6845 1850                            l6765 172E                            l7477 2008  
                          l7901 0F1E                            l7719 051A                            l7663 02B0  
                          l7487 2074                            l7745 06CC                            l7913 0F7A  
                          l7921 0FB2                            l6883 18D0                            l7907 0F3C  
                          l7773 0780                            l7909 0F56                            l7791 0816  
                          l7695 0378                            l7679 0310                            l7951 10DC  
                          l7943 1090                            l7919 0F98                            l7855 0DF6  
                          l7769 0778                            l7849 0DCC                            l7779 079A  
                          l6987 31C8                            l7963 116E                            l7789 0808  
                          l7869 0E46                            l7885 0EB2                            STR_1 FD11  
                          STR_2 FC4C                            STR_3 FCB6                            STR_4 FD11  
                          STR_5 FD07                            STR_6 FD24                            STR_7 FC31  
                          STR_8 FD11                            STR_9 FD2A                            _LATA 000F89  
                          _LATB 000F8A                            _LATC 000F8B                            _LATD 000F8C  
                          _LATE 000F8D                            u7010 1F80                            u7011 1F7E  
                          u7020 1F8E                            u7030 1F92                            _RBIE 007F93  
                          _RBIF 007F90                            u7210 13D4                            u7060 2794  
                          u6500 390A                            u6420 38D6                            u8020 22D0  
                          u6510 383E                            u6430 38D8                            u7230 1486  
                          u8110 2098                            u8030 232A                            u7400 32EC  
                          u7080 2844                            u6440 3856                            u6520 3840  
                          u8200 21F4                            u8120 20A8                            u6601 264C  
                          u7090 2846                            u6370 3442                            u6530 3734  
                          u7170 1392                            u8210 2210                            u8130 20B8  
                          u6355 399A                            u6356 399C                            u6620 2684  
                          u6540 3736                            u7180 1394                            u8140 20C8  
                          u8060 23B0                            u6390 348A                            u7190 13A0  
                          u8310 0200                            u9007 1642                            u6560 393A  
                          u6720 378A                            u6800 1D1E                            u8400 039A  
                          u7280 3708                            u7520 3064                            u8160 20F4  
                          u8080 2038                            u7600 243A                            u7425 3530  
                          u8401 0398                            u9017 1656                            u6570 393C  
                          u6730 1B98                            u6490 3908                            u7290 3610  
                          u7450 31EE                            u8170 2104                            u8090 206A  
                          u7610 2468                            u7530 2D3C                            u7435 39EA  
                          u9107 1746                            u9027 166A                            u7436 39EC  
                          u6820 1D40                            u6740 1B9A                            u8180 2114  
                          u7700 2562                            u7620 2478                            u8500 0DB6  
                          u6821 1D3E                            u9117 1760                            u9037 167E  
                          u6830 1D4E                            u6910 1E42                            u7470 322A  
                          u8190 2124                            u7710 2586                            u7630 2496  
                          u8510 0DDE                            u9207 1868                            u9127 177A  
                          u9047 1692                            u8511 0DDC                            u6680 2B78  
                          u6840 1D52                            u6920 1E78                            u8360 02AC  
                          u7800 2CEE                            u7720 2596                            u7640 24A6  
                          u8600 0FB2                            u9217 1880                            u9137 1794  
                          u9057 16BC                            u8521 0DF4                            u6770 1BD8  
                          u6930 1E7A                            u8450 081C                            u7730 25CA  
                          u7650 24DA                            u8610 1140                            u9307 36DC  
                          u9227 1898                            u9147 17AE                            u9067 16D6  
                          u6860 1D5E                            u7740 25DA                            u7660 24EA  
                          u7820 3130                            u7580 2E2A                            u8620 1154  
                          u9317 36EA                            u9237 18B0                            u9157 17E8  
                          u9077 16F0                            u6790 1BFE                            u6950 1EB2  
                          u8390 038A                            u7750 2C40                            u7670 250E  
                          u7590 242A                            u7830 3140                            u9407 070E  
                          u9327 007A                            u9247 18C8                            u9167 1800  
                          u9087 170A                            u6960 1EB4                            u7680 251E  
                          u7840 3150                            u8560 0EF6                            u9417 33C8  
                          u9337 011E                            u9257 39B6                            u9177 1818  
                          u9097 1724                            u6890 1DC8                            u7930 327A  
                          u7690 2552                            u7850 3160                            u8570 0F06  
                          u9427 33E2                            u9347 0192                            u9267 35CC  
                          u9187 1830                            u8707 11A4                            u6980 1F28  
                          u7860 3170                            u8580 0F56                            u9437 33F4  
                          u9357 0228                            u9277 35DE                            u9197 1848  
                          u8717 11D8                            u8637 0E04                            u6990 1F5E  
                          u7790 2CC8                            u7870 3180                            u8590 0F68  
                          u9447 3418                            u9367 02C8                            u9287 35F2  
                          u8807 2D88                            u8727 11FC                            u8647 0E2E  
                          u8495 0DAA                            u7880 3190                            u9457 3980  
                          u6985 1F16                            u9377 0328                            u9297 36D0  
                          u8817 2D9E                            u8737 2284                            u8657 0E58  
                          u8497 0DAC                            u7970 34C2                            u7890 31A0  
                          u9467 398A                            u9387 03B4                            u8907 2A0A  
                          u8827 2DBC                            u8747 22B0                            u8667 0E8A  
                          u9397 0540                            u8917 2A6C                            u8837 2DD2  
                          u8757 2376                            u8677 1048                            u8927 2A96  
                          u8847 2DF0                            u8767 23BE                            u8687 1160  
                          u8937 2FFE                            u8857 2E06                            u8777 23EA  
                          u8697 1180                            u8947 2EAE                            u8867 2410  
                          u8787 2D54                            u8957 15D6                            u8877 21A0  
                          u8797 2D6A                            u8967 15EA                            u8887 21D4  
                          u8977 15FE                            u8897 29DE                            u8987 1612  
                          u8997 1626                            _Pole 0200              main@poles_detected 02E3  
                   main@t_count 02DB                            abs@a 0092                            _data 005E  
                          _echo 0826                            _dbuf 025F                            _disp 0160  
                          _atoi 273A                            _main 0D6A                            _dtoa 1B6E  
                          _meas 0050                            _keys FB0B                            _send 006D  
                          _tick 0056                            _prec 004C                            _sens 0058  
                          _temp 00FF                            _time 0258                            _nout 0048  
                          pad@i 009B                            pad@p 0098                            fsr1h 000FE2  
                          fsr2h 000FDA                            indf2 000FDF                            fsr1l 000FE1  
                          pad@w 009D                            fsr2l 000FD9                            _trig 2D2A  
                          _sumf 0040                            btemp 006E                            min@i 0089  
                          _xtoa 1DB6                            prodh 000FF4                            prodl 000FF3  
                          start 000E         __size_of_actuators_main 0136                   __CFG_IESO$OFF 000000  
               ___fldiv@new_exp 0020                 __end_of_UI_main 0826                 servoRotate180@i 0081  
                 __CFG_MCLRE$ON 000000                    ___param_bank 000000                           ??_ISR 0036  
                         ??_abs 0094                           ??_pad 009A                           ??_min 0084  
         actuators_main@act_cnt 0112           I2C_Master_Read@ackBit 0081                ?_I2C_Master_Init 008D  
              ?_I2C_Master_Read 0001                ?_I2C_Master_Wait 0001                ?_I2C_Master_Stop 0001  
                         ?_echo 0001                   ___fltol@sign1 0030                 __end_of___aodiv 273A  
                         ?_atoi 0087                           ?_main 0001                           ?_dtoa 009F  
               __end_of___aomod 2C1A                 __end_of___fldiv 1B6E                 __end_of___awdiv 32B8  
                         STR_10 FB56                           STR_11 FCC1                           STR_20 FC65  
                         STR_12 FBAA                           STR_13 FCCB                           STR_21 FB9A  
                         STR_30 FD1B                           STR_22 FCFD                           STR_14 FBBA  
                         STR_31 FC20                           STR_15 FCD5                           STR_23 FC89  
                         STR_32 FB79                           STR_40 FBD9                           STR_24 FBCA  
                         STR_16 FB67                           STR_33 FD1B                           STR_25 FCFD  
                         STR_17 FCDF                           STR_41 FC7D                           STR_50 FB34  
                         STR_42 FB89                           STR_34 FC20                           STR_26 FC89  
                         STR_18 FCA0                           STR_27 FBCA                           STR_19 FC20  
                         STR_43 FB22                           STR_51 FC44                           STR_35 FB78  
                         STR_44 FBD9                           STR_52 FC3F                           STR_36 FC23  
                         STR_28 FBE8                           STR_45 FC7D                           STR_53 FCF3  
                         STR_37 FC15                           STR_29 FB34                           STR_54 FC65  
                         STR_38 FB89                           STR_46 FB45                           STR_55 FC71  
                         STR_47 FC59                           STR_39 FB22                           STR_56 FC95  
                         STR_48 FBF7                           STR_57 FCAB                           STR_49 FC06  
                         STR_58 FCE9                 __end_of___fltol 2FE2                           ?_trig 0001  
               __end_of___lldiv 333C                 ___awdiv@divisor 0082                           ?_xtoa 009F  
                         _T1CON 000FCD                 __end_of___llmod 3506                           i2l367 37C8  
                         i2l394 0D68                 ___awdiv@counter 0084                    vfpfcnvrt@fmt 00C8  
                  vfpfcnvrt@llu 00D8                           _TMR1H 000FCF                           _TMR1L 000FCE  
                         _PORTB 000F81                           _TRISA 000F92                           _TRISB 000F93  
                         _TRISC 000F94                           _TRISD 000F95                           _TRISE 000F96  
                 __CFG_PWRT$OFF 000000                   __CFG_WRT0$OFF 000000                   __CFG_WRT1$OFF 000000  
                 __CFG_WRT2$OFF 000000                   __CFG_WRT3$OFF 000000                 __end_of_lcdInst 3AF6  
                __CFG_EBTR0$OFF 000000                  __CFG_FCMEN$OFF 000000                  __CFG_EBTR1$OFF 000000  
                __CFG_EBTR2$OFF 000000                  __CFG_EBTR3$OFF 000000                   __CFG_WRTB$OFF 000000  
                 __CFG_WRTC$OFF 000000                   __CFG_WRTD$OFF 000000                 __end_of_initLCD 3430  
                __CFG_EBTRB$OFF 000000                           _brake 3A44                           _flags 004E  
                         _dists 0069                           _fputc 3430                 __end_of_isalpha 3846  
                         _fputs 37D4                 __end_of_isdigit 3942                           _servo 399E  
                         atoi@n 0094                           pad@fp 0094                           atoi@s 0087  
                         _width 004A                           _state 0162                           _putch 3AD6  
                         _start 3668                           main@i 02D5                           main@k 02DD  
                         dtoa@d 00A1                           dtoa@i 00C1                           dtoa@n 00B9  
                         dtoa@p 00B3                           dtoa@s 00B7                           dtoa@w 00B5  
               __end_of_islower 38DE                 __end_of_isspace 3796                 __end_of_isupper 3910  
                         tablat 000FF5                 send_nibble@data 0081                           plusw2 000FDB  
               __end_of_pulse_e 399E                           ttemp5 006F                           ttemp6 0072  
                         ttemp7 0076                           status 000FD8     I2C_Master_Read@receivedByte 0082  
               __end_of_stepper 3232                           wtemp8 006F                           xtoa@c 00C4  
                         xtoa@d 00A1                           xtoa@i 00C2                           xtoa@n 00BA  
                         xtoa@p 00B6                           xtoa@w 00B8                           xtoa@x 00A9  
                 _stepper2_back 2FE2                 __end_of_toupper 3756                ??_servoRotate180 0080  
            __size_ofi2___awdiv 0084                  __CFG_PBADEN$ON 000000                    _toupper$1675 008C  
               __initialization 3566                    __end_of_echo 0D6A                     _system_init 387A  
                  __end_of_atoi 287E                    __end_of_main 120C                    __end_of_dtoa 1DB6  
                  __end_of_keys FB1C         __end_of_ultrasonic_main 2402                    __end_of_trig 2E2C  
                  __end_of_xtoa 1FEC                          ??_echo 0032                          ??_atoi 0089  
                        ??_main 015A                          ??_dtoa 00A9                          ??_trig 0080  
                        ??_xtoa 00AA                   __activetblptr 000002            number_deploy@t_count 0104  
             ?_I2C_Master_Start 0001               ?_I2C_Master_Write 0081            number_deploy@tires_t 0100  
            ??_I2C_Master_Start 0081                          ?_brake 0001                          _ADCON1 000FC1  
            ??_I2C_Master_Write 0083                    ?_send_nibble 0001                          ?_fputc 0084  
              ___llmod@dividend 0080                          ?_fputs 008D                ___awdiv@dividend 0080  
                        ?_servo 0001                          ?_putch 0001                          ?_start 0001  
                        _INT1IE 007F83                          _INT1IF 007F80              stepper2@steps2_adj 00FD  
                        i2l1341 28BC                          i2l1270 1A58                          i2l1281 1AC6  
                        i2l1282 1AC2                          i2l1348 293A                          i2l5001 1A6E  
                        i2l5101 2F46                          i2l5031 1B2E                          i2l5007 1A8C  
                        i2l5041 1B64                          i2l5121 2FA0                          i2l5043 1B66  
                        i2l5035 1B58                          i2l5027 1B0A                          i2l5117 2F90  
                        i2l5221 3376                          i2l5135 2FD0                          i2l5127 2FA8  
                        i2l5223 337E                          i2l5215 3360                          i2l5129 2FB4  
                        i2l5161 28CC                          i2l5241 33B6                          i2l5233 339E  
                        i2l5209 3350                          i2l5171 28FC                          i2l5181 296C  
                        i2l5173 2922                          i2l5237 33A8                          i2l5405 0AAA  
                        i2l5167 28EA                          i2l5407 0AC4                          i2l5169 28F0  
                        i2l5433 0BA0                          i2l5417 0B44                          i2l5441 0C16  
                        i2l5179 2960                          i2l5451 0C96                          i2l5371 0958  
                        i2l5197 29AC                          i2l5365 0900                          i2l5349 08A4  
                        i2l5373 0972                          i2l5439 0BFC                          i2l5383 09F2  
                        i2l5473 0D4E                          i2l5467 0CF2                          i2l4925 1912  
                        i2l5399 0A4E                          i2l4945 1952                          i2l4929 1916  
                        i2l4971 19B8                          i2l4963 19A0                          i2l5915 37B6  
                        i2l4981 1A08                          i2l4957 198A                          i2l4949 1956  
                        i2l4995 1A56                          i2l4989 1A30                       ??_UI_main 0100  
                 vfpfcnvrt@done 00E1                          _TMR1ON 007E68                  ?_stepper2_back 00FD  
                        _SSPADD 000FC8                          _SSPBUF 000FC9                __end_of___xxtofl 29BE  
   number_deploy@poles_detected 00FB                  __CFG_XINST$OFF 000000                    vfprintf@cfmt 00EB  
                     ??___aodiv 0090                       ??___aomod 0090                          ___wmul 3A1C  
                     ??___fldiv 0017                       ??___awdiv 0084                       ??___fltol 002C  
                     ??___lldiv 0088                    ?_sense_tires 0083                       ??___llmod 0088  
                        clear_0 358C                          clear_1 3598                          clear_2 35A8  
              ___awdiv@quotient 0086                       ??_lcdInst 0083                          _printf 39F4  
                        pad@buf 0096                          dtoa@fp 009F                          _strlen 3942  
                i2___awdiv@sign 0006                       ??_initLCD 0084                          fputc@c 0084  
                        fputs@c 0091                          fputs@i 0092                    __pdataCOMRAM 0069  
                        fputs@s 008D                       ??_isalpha 0082                       ??_isdigit 0082  
             __end_ofi2___awdiv 33C0                       ??_islower 0082                    __mediumconst FB0A  
                     ??_isspace 0082                          tblptrh 000FF7                       ??_isupper 0082  
                        tblptrl 000FF6                          tblptru 000FF8                __end_of_vfprintf 3668  
                     ??_pulse_e 0080                __end_of_stepper2 2F28  ultrasonic_main@min_us_dist_917 0108  
                     ??_stepper 00FF                          xtoa@fp 009F                       ??_toupper 0088  
                  ___xxtofl@arg 000B           pulse_e@interruptState 0080                    ___xxtofl@exp 000A  
                  ___xxtofl@val 0001                      __accesstop 0080         __end_of__initialization 35AE  
                _actuators_main 29BE                   ___rparam_used 000001                      ___fltol@f1 0028  
                  stepper@i_376 0104              __size_of_backwards 0026             full_drive@direction 00FC  
                __pcstackCOMRAM 0001                    stepper@stack 00FD                ?_ultrasonic_main 00FA  
                 __end_of_brake 3A6A                   __end_of_fputc 349E                   __end_of_fputs 3810  
                 __end_of_servo 39CA                   __end_of_putch 3AE6                   __end_of_start 36BA  
               _key_was_pressed 0168           number_deploy@avg_dist 00F9                         ??_brake 0083  
                       ??_fputc 0088                         ??_fputs 0091                         ??_servo 0083  
                       ??_putch 0083                         ??_start 0095                 ??_stepper2_back 0100  
                    __pbssBANK0 00FF                      __pbssBANK1 015C                      __pbssBANK2 0200  
        __end_of_actuators_main 2AF4                         ?___wmul 0080              __size_of_send_byte 0018  
                       ?_printf 00ED          stepper2_back@direction 0101                         ?_strlen 0080  
         __end_of_number_deploy 2212                       ?___xxtofl 0001               __end_of_backwards 3A90  
            __size_of_vfpfcnvrt 03AA                      _dist_final 0169                         _SSPCON1 000FC6  
                       _SSPCON2 000FC5                         _SSPSTAT 000FC7                         _UI_main 0012  
          __size_of_send_nibble 001A                 ?_actuators_main 010C                         __Hparam 0000  
                       __Lparam 0000                    ?_system_init 0001                         ___aodiv 25F0  
                       ___aomod 2AF4                         ___fldiv 18E6                         ___awdiv 3232  
                       ___fltol 2F28                         ___lldiv 32B8                 __size_of___wmul 0028  
                       ___llmod 349E                       ?_vfprintf 00E5                       ?_stepper2 00FD  
               __CFG_STVREN$OFF 000000                         __pcinit 3566                      _full_drive 15B6  
                       __ramtop 1000            __size_of_sense_tires 008C                         _lcdInst 3AE6  
                       __ptext0 0D6A                         __ptext1 2212                         __ptext2 2D2A  
                       __ptext3 311E                         __ptext4 3A44                         __ptext5 2402  
                       __ptext6 2C1A                         __ptext7 3668                         __ptext8 1FEC  
                       __ptext9 3232                 __size_of_printf 0028                 __size_of_strlen 002E  
                       _initLCD 33C0                    __size_of_ISR 37CC                         _counter 0060  
                  __size_of_abs 0034                    __size_of_pad 009C                         _isalpha 3810  
                  __size_of_min 0110                         _isdigit 3910                      ??___xxtofl 0005  
                       _islower 38AC                         _isspace 3756                         _isupper 38DE  
      __size_of_I2C_Master_Init 0060        __size_of_I2C_Master_Read 002A        __size_of_I2C_Master_Wait 0014  
      __size_of_I2C_Master_Stop 0008                 _prev_dist_final 0250                         _pressed 015C  
                       atoi@neg 008D                         _pulse_e 3970                         _stepper 31AA  
                __pintcode_body 3796                         _toupper 370A            end_of_initialization 35AE  
                       min@size 0082           __end_of_LCD_SIZE_HORZ FB21               __end_of_send_byte 3AC2  
         __end_of_LCD_SIZE_VERT FB20                         fputc@fp 0086                   __Lmediumconst FB0A  
                       int_func 3796                         fputs@fp 008F       __size_of_I2C_Master_Start 0008  
     __size_of_I2C_Master_Write 000A                 ___lldiv@divisor 0084                 ___lldiv@counter 008C  
             __end_of_vfpfcnvrt 15B6                   ?_servoRotate0 0001                  main@steps2_adj 02D3  
                       postdec1 000FE5                         postdec2 000FDD                         postinc0 000FEE  
                       postinc1 000FE6                         postinc2 000FDE                      ??_vfprintf 00EB  
                    ??_stepper2 0100                         strlen@a 0082                         strlen@s 0080  
                     _PORTAbits 000F80                      _print_echo 2402                   stepper2@i_384 0107  
                 ___xxtofl@sign 0009                       _TRISAbits 000F92                       _TRISBbits 000F93  
                     _TRISCbits 000F94                     ___fldiv@grs 0022                     ___fldiv@rem 001B  
                    main@i_1026 02E1                      main@i_1018 02D7                       i2___awdiv 333C  
   ultrasonic_main@step2_offset 0104                   send_byte@data 0082              i2___awdiv@dividend 0001  
         UI_main@poles_detected 00FB                  ??_servoRotate0 0080     number_deploy@tires_detected 0102  
                   vfpfcnvrt@ap 00CA                     vfpfcnvrt@fp 00C6                     vfpfcnvrt@ll 00D0  
                __end_of___wmul 3A44                     ?_full_drive 00F9         __size_of_servoRotate180 0056  
                 __pidataCOMRAM 3B10                  __end_of_printf 3A1C                  __end_of_strlen 3970  
           start_initialization 3566                      min@minimum 0087              i2___awdiv@quotient 0007  
                   __end_of_ISR 37D4                     __end_of_abs 387A                     __end_of_pad 311E  
                   __end_of_min 2D2A           stepper2@count_stepper 0109                      ?i2___awdiv 0001  
             ??_I2C_Master_Init 0091               ??_I2C_Master_Read 0081               ??_I2C_Master_Wait 0080  
             ??_I2C_Master_Stop 0081               main@prev_avg_dist 02E5                  _poles_detected 0052  
               ___llmod@divisor 0084                 ___llmod@counter 0088                    UI_main@t_dep 00F9  
                   vfprintf@fmt 00E7                        ??___wmul 0084        I2C_Master_Init@clockFreq 008D  
              __CFG_LPT1OSC$OFF 000000            __size_of_system_init 0032                        ??_printf 00F5  
                      ??_strlen 0082                     ?_print_echo 0001                       ___fldiv@a 0013  
                     ___fldiv@b 000F        __size_of_ultrasonic_main 01F0                     __pbssCOMRAM 0038  
                 __pcstackBANK0 0080                   __pcstackBANK1 0100                   __pcstackBANK2 027F  
              ___aodiv@dividend 0080                ??_actuators_main 0110               __size_of___xxtofl 0140  
                     _backwards 3A6A                        ?_UI_main 00F9           __end_of_stepper2_back 3082  
           __size_of_full_drive 0330                       _atoi$1583 008F                       _atoi$1584 0093  
                     _atoi$1585 0091                _I2C_Master_Start 3B08                _I2C_Master_Write 3AF6  
                     _dtoa$1099 00B1               __CFG_CCP2MX$PORTC 000000                       __pintcode 0008  
                 __pmediumconst FB0A                        ?___aodiv 0080                        ?___aomod 0080  
                      ?___fldiv 000F                        ?___awdiv 0080                ___aodiv@quotient 0092  
                      ?___fltol 0028                        ?___lldiv 0080                        ?___llmod 0080  
                      ?_lcdInst 0001               __size_of_vfprintf 0056               __size_of_stepper2 00FC  
          full_drive@stepper_no 00F9                        ?_initLCD 0001                        ?_isalpha 0080  
                      ?_isdigit 0080                        ?_islower 0080                        ?_isspace 0080  
                      ?_isupper 0080            __end_of_servoRotate0 370A                   ??_send_nibble 0081  
                      ?_pulse_e 0001                  __size_of_brake 0026                     ??i2___awdiv 0005  
                      ?_stepper 00FD                  __size_of_fputc 006E                  __size_of_fputs 003C  
                      ?_toupper 0086                  __size_of_servo 002C                      ?_backwards 0001  
                __size_of_putch 0010                  __size_of_start 0052                  ___wmul@product 0084  
                      _LATAbits 000F89                        _LATBbits 000F8A                        _LATCbits 000F8B  
                      _LATDbits 000F8C                        _LATEbits 000F8D                        UI_main@i 0159  
              main@pole_cl_dist 02D1                       _send_byte 3AAA             __size_of_print_echo 01EE  
        __size_of_number_deploy 0226                  _LCD_LINE1_ADDR FB1E                  _LCD_LINE2_ADDR FB21  
                _LCD_LINE3_ADDR FB1D                  _LCD_LINE4_ADDR FB1C                        i2u502_40 2F34  
                      i2u503_40 2F64                        i2u503_45 2F5A                        i2u507_40 2FBA  
                      i2u620_40 37C0                        i2u525_40 3382                        i2u533_40 08B4  
                      i2u518_40 2976                        i2u534_40 08C4                        i2u543_40 0A02  
                      i2u544_40 0A12                        i2u553_40 0B54                        i2u554_40 0B64  
                      i2u563_40 0CA6                        i2u564_40 0CB6                        i2u493_40 1B18  
                      i2u494_40 1B3C                        i2u489_40 1ABC                __CFG_WDTPS$32768 000000  
    stepper2_back@count_stepper 0102                   ??_sense_tires 0085                  _servoRotate180 35BC  
                     _vfpfcnvrt 120C                       _xtoa$1110 00B2                       _xtoa$1111 00B4  
             ___wmul@multiplier 0080                       main@t_dep 02DF               i2___awdiv@divisor 0003  
                     main@stack 02D9               i2___awdiv@counter 0005                    _isspace$1610 0086  
                    vfpfcnvrt@c 00E0             actuators_main@stack 010C                       copy_data0 357A  
             ??_ultrasonic_main 00FC                 UI_main@keypress 0154          __end_of_LCD_LINE1_ADDR FB1F  
              __size_of_UI_main 0814          __end_of_LCD_LINE2_ADDR FB22          __end_of_LCD_LINE3_ADDR FB1E  
        __end_of_LCD_LINE4_ADDR FB1D             __end_of_send_nibble 3AAA                      ?_send_byte 0001  
                   UI_main@Pole 0104                        __Hrparam 0000                     UI_main@tick 0155  
                    vfprintf@ap 00E9                        __Lrparam 0000                      vfprintf@fp 00E5  
            __CFG_BOREN$SBORDIS 000000          __end_of_servoRotate180 3612                __size_of___aodiv 014A  
              __size_of___aomod 0126                __size_of___fldiv 0288                __size_of___awdiv 0086  
              __size_of___fltol 00BA                __size_of___lldiv 0084                __size_of___llmod 0068  
                  ??_full_drive 00FB                      ?_vfpfcnvrt 00C6                 ___aodiv@divisor 0088  
               ___aodiv@counter 0090                __size_of_lcdInst 0010             __end_of_sense_tires 31AA  
      actuators_main@steps2_adj 010E                   _number_deploy 1FEC                 _I2C_Master_Init 3506  
               _I2C_Master_Read 39CA                __size_of_initLCD 0070                        ___xxtofl 287E  
               _I2C_Master_Wait 3AC2                 _I2C_Master_Stop 3B00                __size_of_isalpha 0036  
              __size_of_isdigit 0032                __size_of_islower 0032                __size_of_isspace 0040  
                      __ptext10 3A6A                        __ptext11 29BE                        __ptext20 0012  
                      __ptext12 387A                        __ptext21 39F4                        __ptext13 2FE2  
                      __ptext30 3082                        __ptext22 3612                        __ptext14 2E2C  
                      __ptext31 3942                        __ptext23 120C                        __ptext15 31AA  
                      __ptext40 3910                        __ptext32 37D4                        __ptext24 1DB6  
                      __ptext16 15B6                        __ptext41 3A1C                        __ptext33 3430  
                      __ptext25 370A                        __ptext17 399E                        __ptext50 3B08  
                      __ptext42 33C0                        __ptext34 3AD6                        __ptext26 38AC  
                      __ptext18 35BC                        __ptext51 39CA                        __ptext43 3AE6  
                      __ptext35 3846                        __ptext27 38DE                        __ptext19 36BA  
                      __ptext60 18E6                        __ptext52 3AC2                        __ptext44 3AAA  
                      __ptext36 2AF4                        __ptext28 3810                        __ptext53 3506  
                      __ptext45 3A90                        __ptext37 25F0                        __ptext29 1B6E  
                      __ptext54 32B8                        __ptext46 3970                        __ptext38 273A  
                      __ptext47 349E                        __ptext39 3756                        __ptext56 0826  
                      __ptext48 3AF6                        __ptext57 333C                        __ptext49 3B00  
                      __ptext58 287E                        __ptext59 2F28                __size_of_isupper 0032  
                      _avg_dist 0044                __size_of_pulse_e 002E                     ??_backwards 0083  
              __size_of_stepper 0088                __size_of_toupper 004C                   __size_of_echo 0544  
                 __size_of_atoi 0144                   __size_of_main 04A2                   __size_of_dtoa 0248  
       stepper2_back@steps2_adj 00FD                   __size_of_trig 0102                   __size_of_xtoa 0236  
            __end_of_full_drive 18E6                        _keypress 005F                        _temp_int 0164  
               ?_servoRotate180 0001                        int$flags 006E                        _vfprintf 3612  
                      main@Pole 027F                        _stepper2 2E2C                       printf@fmt 00ED  
   I2C_Master_Write@byteToWrite 0081                ___aomod@dividend 0080           __size_of_servoRotate0 0050  
                      min@array 0080                    ??_print_echo 00F9                  ?_number_deploy 00F9  
                     putch@data 0083                  _vfpfcnvrt$1125 00E3        __end_of_I2C_Master_Start 3B10  
      __end_of_I2C_Master_Write 3B00                      _INTCONbits 000FF2           ultrasonic_main@sensed 0102  
                      isalpha@c 0080                        isdigit@c 0080                       stepper2@i 0105  
                   _send_nibble 3A90                        intlevel2 0000                   _LCD_SIZE_HORZ FB20  
                      islower@c 0080                   _LCD_SIZE_VERT FB1F                        isspace@c 0080  
              ___lldiv@dividend 0080                     ??_send_byte 0082                        isupper@c 0080  
                _tires_deployed 0054              __end_of_print_echo 25F0                   ??_system_init 0080  
                  _servoRotate0 36BA                        printf@ap 00F7                     _sense_tires 311E  
       __end_of_I2C_Master_Init 3566                 ___aomod@divisor 0088         __end_of_I2C_Master_Read 39F4  
       __end_of_I2C_Master_Wait 3AD6         __end_of_I2C_Master_Stop 3B08                     ??_vfpfcnvrt 00CC  
                   lcdInst@data 0083                 ___aomod@counter 0090                        stepper@i 0102  
     ultrasonic_main@steps2_adj 0106               sense_tires@sensed 0083                ___lldiv@quotient 0088  
                      toupper@c 0086                     _SSPCON1bits 000FC6                     _SSPCON2bits 000FC5  
                   _timer_count 005C                    ___aodiv@sign 0091                    ___aomod@sign 0091  
          stepper@count_stepper 0100  
