

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Mar 23 21:38:47 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,inline
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,inline
    41                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    48                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    49  0000                     
    50                           ; Version 2.05
    51                           ; Generated 20/12/2018 GMT
    52                           ; 
    53                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC18F4620 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     
    85                           	psect	idataBANK0
    86  002320                     __pidataBANK0:
    87                           	opt callstack 0
    88                           
    89                           ;initializer for setup@F2786
    90  002320  0000               	dw	0
    91  002322  FFFF               	dw	65535
    92                           
    93                           	psect	smallconst
    94  001000                     __psmallconst:
    95                           	opt callstack 0
    96  001000  00                 	db	0
    97  001001                     _keys:
    98                           	opt callstack 0
    99  001001  31                 	db	49
   100  001002  32                 	db	50
   101  001003  33                 	db	51
   102  001004  41                 	db	65
   103  001005  34                 	db	52
   104  001006  35                 	db	53
   105  001007  36                 	db	54
   106  001008  42                 	db	66
   107  001009  37                 	db	55
   108  00100A  38                 	db	56
   109  00100B  39                 	db	57
   110  00100C  43                 	db	67
   111  00100D  2A                 	db	42
   112  00100E  30                 	db	48
   113  00100F  23                 	db	35
   114  001010  44                 	db	68
   115  001011  00                 	db	0
   116  001012                     __end_of_keys:
   117                           	opt callstack 0
   118  001012  50                 	db	80
   119  001013                     __end_of_LCD_LINE4_ADDR:
   120                           	opt callstack 0
   121  001013  10                 	db	16
   122  001014                     __end_of_LCD_LINE3_ADDR:
   123                           	opt callstack 0
   124  001014  40                 	db	64
   125  001015                     __end_of_LCD_LINE2_ADDR:
   126                           	opt callstack 0
   127  001015                     _LCD_LINE1_ADDR:
   128                           	opt callstack 0
   129  001015  00                 	db	0
   130  001016                     __end_of_LCD_LINE1_ADDR:
   131                           	opt callstack 0
   132  001016                     _LCD_SIZE_VERT:
   133                           	opt callstack 0
   134  001016  04                 	db	4
   135  001017                     __end_of_LCD_SIZE_VERT:
   136                           	opt callstack 0
   137  001017                     _LCD_SIZE_HORZ:
   138                           	opt callstack 0
   139  001017  10                 	db	16
   140  001018                     __end_of_LCD_SIZE_HORZ:
   141                           	opt callstack 0
   142  0000                     _T1CON	set	4045
   143  0000                     _TMR1H	set	4047
   144  0000                     _TMR1L	set	4046
   145  0000                     _ADCON1	set	4033
   146  0000                     _TRISD	set	3989
   147  0000                     _TRISB	set	3987
   148  0000                     _LATB	set	3978
   149  0000                     _LATD	set	3980
   150  0000                     _LATDbits	set	3980
   151  0000                     _INTCONbits	set	4082
   152  0000                     _SSPBUF	set	4041
   153  0000                     _SSPCON2bits	set	4037
   154  0000                     _SSPCON1	set	4038
   155  0000                     _SSPADD	set	4040
   156  0000                     _TRISCbits	set	3988
   157  0000                     _SSPCON1bits	set	4038
   158  0000                     _SSPCON2	set	4037
   159  0000                     _SSPSTAT	set	4039
   160  0000                     _RB2	set	31754
   161  0000                     _RB3	set	31755
   162  0000                     _RD0	set	31768
   163  0000                     _RD1	set	31769
   164  0000                     _GIE	set	32663
   165  0000                     _RB4	set	31756
   166  0000                     _RB5	set	31757
   167  0000                     _RB6	set	31758
   168  0000                     _TMR1ON	set	32360
   169  0000                     _RB7	set	31759
   170  0000                     _RBIE	set	32659
   171  0000                     _RBIF	set	32656
   172  001018  44                 	db	68	;'D'
   173  001019  69                 	db	105	;'i'
   174  00101A  73                 	db	115	;'s'
   175  00101B  74                 	db	116	;'t'
   176  00101C  61                 	db	97	;'a'
   177  00101D  6E                 	db	110	;'n'
   178  00101E  63                 	db	99	;'c'
   179  00101F  65                 	db	101	;'e'
   180  001020  20                 	db	32
   181  001021  31                 	db	49	;'1'
   182  001022  20                 	db	32
   183  001023  3D                 	db	61	;'='
   184  001024  20                 	db	32
   185  001025  25                 	db	37
   186  001026  64                 	db	100	;'d'
   187  001027  00                 	db	0
   188  001028  44                 	db	68	;'D'
   189  001029  69                 	db	105	;'i'
   190  00102A  73                 	db	115	;'s'
   191  00102B  74                 	db	116	;'t'
   192  00102C  61                 	db	97	;'a'
   193  00102D  6E                 	db	110	;'n'
   194  00102E  63                 	db	99	;'c'
   195  00102F  65                 	db	101	;'e'
   196  001030  20                 	db	32
   197  001031  32                 	db	50	;'2'
   198  001032  20                 	db	32
   199  001033  3D                 	db	61	;'='
   200  001034  20                 	db	32
   201  001035  25                 	db	37
   202  001036  64                 	db	100	;'d'
   203  001037  00                 	db	0
   204  001038  44                 	db	68	;'D'
   205  001039  69                 	db	105	;'i'
   206  00103A  73                 	db	115	;'s'
   207  00103B  74                 	db	116	;'t'
   208  00103C  61                 	db	97	;'a'
   209  00103D  6E                 	db	110	;'n'
   210  00103E  63                 	db	99	;'c'
   211  00103F  65                 	db	101	;'e'
   212  001040  20                 	db	32
   213  001041  31                 	db	49	;'1'
   214  001042  20                 	db	32
   215  001043  3D                 	db	61	;'='
   216  001044  20                 	db	32
   217  001045  58                 	db	88	;'X'
   218  001046  00                 	db	0
   219  001047  44                 	db	68	;'D'
   220  001048  69                 	db	105	;'i'
   221  001049  73                 	db	115	;'s'
   222  00104A  74                 	db	116	;'t'
   223  00104B  61                 	db	97	;'a'
   224  00104C  6E                 	db	110	;'n'
   225  00104D  63                 	db	99	;'c'
   226  00104E  65                 	db	101	;'e'
   227  00104F  20                 	db	32
   228  001050  32                 	db	50	;'2'
   229  001051  20                 	db	32
   230  001052  3D                 	db	61	;'='
   231  001053  20                 	db	32
   232  001054  58                 	db	88	;'X'
   233  001055  00                 	db	0
   234  001056  44                 	db	68	;'D'
   235  001057  69                 	db	105	;'i'
   236  001058  73                 	db	115	;'s'
   237  001059  74                 	db	116	;'t'
   238  00105A  61                 	db	97	;'a'
   239  00105B  6E                 	db	110	;'n'
   240  00105C  63                 	db	99	;'c'
   241  00105D  65                 	db	101	;'e'
   242  00105E  20                 	db	32
   243  00105F  33                 	db	51	;'3'
   244  001060  20                 	db	32
   245  001061  3D                 	db	61	;'='
   246  001062  20                 	db	32
   247  001063  58                 	db	88	;'X'
   248  001064  00                 	db	0
   249  001065  44                 	db	68	;'D'
   250  001066  69                 	db	105	;'i'
   251  001067  73                 	db	115	;'s'
   252  001068  74                 	db	116	;'t'
   253  001069  61                 	db	97	;'a'
   254  00106A  6E                 	db	110	;'n'
   255  00106B  63                 	db	99	;'c'
   256  00106C  65                 	db	101	;'e'
   257  00106D  20                 	db	32
   258  00106E  34                 	db	52	;'4'
   259  00106F  20                 	db	32
   260  001070  3D                 	db	61	;'='
   261  001071  20                 	db	32
   262  001072  58                 	db	88	;'X'
   263  001073  00                 	db	0
   264  001074  44                 	db	68	;'D'
   265  001075  69                 	db	105	;'i'
   266  001076  73                 	db	115	;'s'
   267  001077  74                 	db	116	;'t'
   268  001078  61                 	db	97	;'a'
   269  001079  6E                 	db	110	;'n'
   270  00107A  63                 	db	99	;'c'
   271  00107B  65                 	db	101	;'e'
   272  00107C  20                 	db	32
   273  00107D  33                 	db	51	;'3'
   274  00107E  3D                 	db	61	;'='
   275  00107F  20                 	db	32
   276  001080  25                 	db	37
   277  001081  64                 	db	100	;'d'
   278  001082  00                 	db	0
   279  001083  44                 	db	68	;'D'
   280  001084  69                 	db	105	;'i'
   281  001085  73                 	db	115	;'s'
   282  001086  74                 	db	116	;'t'
   283  001087  61                 	db	97	;'a'
   284  001088  6E                 	db	110	;'n'
   285  001089  63                 	db	99	;'c'
   286  00108A  65                 	db	101	;'e'
   287  00108B  20                 	db	32
   288  00108C  34                 	db	52	;'4'
   289  00108D  3D                 	db	61	;'='
   290  00108E  20                 	db	32
   291  00108F  25                 	db	37
   292  001090  64                 	db	100	;'d'
   293  001091  00                 	db	0
   294  001092                     STR_1:
   295  001092  6C                 	db	108	;'l'
   296  001093  6F                 	db	111	;'o'
   297  001094  6C                 	db	108	;'l'
   298  001095  00                 	db	0
   299  001096                     STR_2:
   300  001096  66                 	db	102	;'f'
   301  001097  6B                 	db	107	;'k'
   302  001098  00                 	db	0
   303                           
   304                           ; #config settings
   305  001099  00                 	db	0	; dummy byte at the end
   306  0000                     
   307                           	psect	cinit
   308  00213A                     __pcinit:
   309                           	opt callstack 0
   310  00213A                     start_initialization:
   311                           	opt callstack 0
   312  00213A                     __initialization:
   313                           	opt callstack 0
   314                           
   315                           ; Initialize objects allocated to BANK0 (4 bytes)
   316                           ; load TBLPTR registers with __pidataBANK0
   317  00213A  0E20               	movlw	low __pidataBANK0
   318  00213C  6EF6               	movwf	tblptrl,c
   319  00213E  0E23               	movlw	high __pidataBANK0
   320  002140  6EF7               	movwf	tblptrh,c
   321  002142  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   322  002144  6EF8               	movwf	tblptru,c
   323  002146  EE00  F0FB         	lfsr	0,__pdataBANK0
   324  00214A  EE10 F004          	lfsr	1,4
   325  00214E                     copy_data0:
   326  00214E  0009               	tblrd		*+
   327  002150  CFF5 FFEE          	movff	tablat,postinc0
   328  002154  50E5               	movf	postdec1,w,c
   329  002156  50E1               	movf	fsr1l,w,c
   330  002158  E1FA               	bnz	copy_data0
   331                           
   332                           ; Clear objects allocated to BANK0 (40 bytes)
   333  00215A  EE00  F0D3         	lfsr	0,__pbssBANK0
   334  00215E  0E28               	movlw	40
   335  002160                     clear_0:
   336  002160  6AEE               	clrf	postinc0,c
   337  002162  06E8               	decf	wreg,f,c
   338  002164  E1FD               	bnz	clear_0
   339                           
   340                           ; Clear objects allocated to COMRAM (16 bytes)
   341  002166  EE00  F03A         	lfsr	0,__pbssCOMRAM
   342  00216A  0E10               	movlw	16
   343  00216C                     clear_1:
   344  00216C  6AEE               	clrf	postinc0,c
   345  00216E  06E8               	decf	wreg,f,c
   346  002170  E1FD               	bnz	clear_1
   347  002172                     end_of_initialization:
   348                           	opt callstack 0
   349  002172                     __end_of__initialization:
   350                           	opt callstack 0
   351  002172  904A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   352  002174  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   353  002176  0E00               	movlw	low (__Lsmallconst shr (0+16))
   354  002178  6EF8               	movwf	tblptru,c
   355  00217A  0E10               	movlw	high __Lsmallconst
   356  00217C  6EF7               	movwf	tblptrh,c
   357  00217E  0100               	movlb	0
   358  002180  EF56  F00E         	goto	_main	;jump to C main() function
   359                           
   360                           	psect	bssCOMRAM
   361  00003A                     __pbssCOMRAM:
   362                           	opt callstack 0
   363  00003A                     _a:
   364                           	opt callstack 0
   365  00003A                     	ds	8
   366  000042                     _dist_final:
   367                           	opt callstack 0
   368  000042                     	ds	6
   369  000048                     _b:
   370                           	opt callstack 0
   371  000048                     	ds	2
   372                           
   373                           	psect	bssBANK0
   374  0000D3                     __pbssBANK0:
   375                           	opt callstack 0
   376  0000D3                     _nout:
   377                           	opt callstack 0
   378  0000D3                     	ds	2
   379  0000D5                     _width:
   380                           	opt callstack 0
   381  0000D5                     	ds	2
   382  0000D7                     _prec:
   383                           	opt callstack 0
   384  0000D7                     	ds	2
   385  0000D9                     _flags:
   386                           	opt callstack 0
   387  0000D9                     	ds	2
   388  0000DB                     _dbuf:
   389                           	opt callstack 0
   390  0000DB                     	ds	32
   391                           
   392                           	psect	dataBANK0
   393  0000FB                     __pdataBANK0:
   394                           	opt callstack 0
   395  0000FB                     setup@F2786:
   396                           	opt callstack 0
   397  0000FB                     	ds	4
   398                           
   399                           	psect	cstackBANK1
   400  000100                     __pcstackBANK1:
   401                           	opt callstack 0
   402  000100                     ?_vfprintf:
   403                           	opt callstack 0
   404  000100                     vfprintf@fp:
   405                           	opt callstack 0
   406                           
   407                           ; 2 bytes @ 0x0
   408  000100                     	ds	2
   409  000102                     vfprintf@fmt:
   410                           	opt callstack 0
   411                           
   412                           ; 2 bytes @ 0x2
   413  000102                     	ds	2
   414  000104                     vfprintf@ap:
   415                           	opt callstack 0
   416                           
   417                           ; 2 bytes @ 0x4
   418  000104                     	ds	2
   419  000106                     ?_printf:
   420                           	opt callstack 0
   421  000106                     printf@fmt:
   422                           	opt callstack 0
   423                           
   424                           ; 2 bytes @ 0x6
   425  000106                     	ds	6
   426  00010C                     printf@ap:
   427                           	opt callstack 0
   428                           
   429                           ; 2 bytes @ 0xC
   430  00010C                     	ds	2
   431                           
   432                           	psect	cstackBANK0
   433  000080                     __pcstackBANK0:
   434                           	opt callstack 0
   435  000080                     ??_initLCD:
   436  000080                     ?___lldiv:
   437                           	opt callstack 0
   438  000080                     ?___aodiv:
   439                           	opt callstack 0
   440  000080                     ?___aomod:
   441                           	opt callstack 0
   442  000080                     fputc@c:
   443                           	opt callstack 0
   444  000080                     ___lldiv@dividend:
   445                           	opt callstack 0
   446  000080                     ___aodiv@dividend:
   447                           	opt callstack 0
   448  000080                     ___aomod@dividend:
   449                           	opt callstack 0
   450                           
   451                           ; 8 bytes @ 0x0
   452  000080                     	ds	2
   453  000082                     fputc@fp:
   454                           	opt callstack 0
   455                           
   456                           ; 2 bytes @ 0x2
   457  000082                     	ds	2
   458  000084                     ??_fputc:
   459  000084                     ___lldiv@divisor:
   460                           	opt callstack 0
   461                           
   462                           ; 4 bytes @ 0x4
   463  000084                     	ds	4
   464  000088                     ___lldiv@quotient:
   465                           	opt callstack 0
   466  000088                     ___aodiv@divisor:
   467                           	opt callstack 0
   468  000088                     ___aomod@divisor:
   469                           	opt callstack 0
   470                           
   471                           ; 8 bytes @ 0x8
   472  000088                     	ds	1
   473  000089                     fputs@s:
   474                           	opt callstack 0
   475                           
   476                           ; 2 bytes @ 0x9
   477  000089                     	ds	2
   478  00008B                     fputs@fp:
   479                           	opt callstack 0
   480                           
   481                           ; 2 bytes @ 0xB
   482  00008B                     	ds	1
   483  00008C                     ___lldiv@counter:
   484                           	opt callstack 0
   485                           
   486                           ; 1 bytes @ 0xC
   487  00008C                     	ds	1
   488  00008D                     ??_I2C_Master_Init:
   489  00008D                     fputs@c:
   490                           	opt callstack 0
   491                           
   492                           ; 1 bytes @ 0xD
   493  00008D                     	ds	1
   494  00008E                     fputs@i:
   495                           	opt callstack 0
   496                           
   497                           ; 2 bytes @ 0xE
   498  00008E                     	ds	2
   499  000090                     ??_abs:
   500  000090                     ?_pad:
   501                           	opt callstack 0
   502  000090                     ___aodiv@counter:
   503                           	opt callstack 0
   504  000090                     pad@fp:
   505                           	opt callstack 0
   506                           
   507                           ; 2 bytes @ 0x10
   508  000090                     	ds	1
   509  000091                     ___aodiv@sign:
   510                           	opt callstack 0
   511  000091                     setup@dists:
   512                           	opt callstack 0
   513                           
   514                           ; 4 bytes @ 0x11
   515  000091                     	ds	1
   516  000092                     pad@buf:
   517                           	opt callstack 0
   518  000092                     ___aodiv@quotient:
   519                           	opt callstack 0
   520                           
   521                           ; 8 bytes @ 0x12
   522  000092                     	ds	2
   523  000094                     pad@p:
   524                           	opt callstack 0
   525                           
   526                           ; 2 bytes @ 0x14
   527  000094                     	ds	2
   528  000096                     ??_pad:
   529                           
   530                           ; 1 bytes @ 0x16
   531  000096                     	ds	1
   532  000097                     pad@i:
   533                           	opt callstack 0
   534                           
   535                           ; 2 bytes @ 0x17
   536  000097                     	ds	2
   537  000099                     pad@w:
   538                           	opt callstack 0
   539                           
   540                           ; 2 bytes @ 0x19
   541  000099                     	ds	2
   542  00009B                     ?_dtoa:
   543                           	opt callstack 0
   544  00009B                     dtoa@fp:
   545                           	opt callstack 0
   546                           
   547                           ; 2 bytes @ 0x1B
   548  00009B                     	ds	2
   549  00009D                     dtoa@d:
   550                           	opt callstack 0
   551                           
   552                           ; 8 bytes @ 0x1D
   553  00009D                     	ds	8
   554  0000A5                     ??_dtoa:
   555                           
   556                           ; 1 bytes @ 0x25
   557  0000A5                     	ds	8
   558  0000AD                     _dtoa$428:
   559                           	opt callstack 0
   560                           
   561                           ; 2 bytes @ 0x2D
   562  0000AD                     	ds	2
   563  0000AF                     dtoa@p:
   564                           	opt callstack 0
   565                           
   566                           ; 2 bytes @ 0x2F
   567  0000AF                     	ds	2
   568  0000B1                     dtoa@w:
   569                           	opt callstack 0
   570                           
   571                           ; 2 bytes @ 0x31
   572  0000B1                     	ds	2
   573  0000B3                     dtoa@s:
   574                           	opt callstack 0
   575                           
   576                           ; 2 bytes @ 0x33
   577  0000B3                     	ds	2
   578  0000B5                     dtoa@n:
   579                           	opt callstack 0
   580                           
   581                           ; 8 bytes @ 0x35
   582  0000B5                     	ds	8
   583  0000BD                     dtoa@i:
   584                           	opt callstack 0
   585                           
   586                           ; 2 bytes @ 0x3D
   587  0000BD                     	ds	2
   588  0000BF                     ?_vfpfcnvrt:
   589                           	opt callstack 0
   590  0000BF                     vfpfcnvrt@fp:
   591                           	opt callstack 0
   592                           
   593                           ; 2 bytes @ 0x3F
   594  0000BF                     	ds	2
   595  0000C1                     vfpfcnvrt@fmt:
   596                           	opt callstack 0
   597                           
   598                           ; 2 bytes @ 0x41
   599  0000C1                     	ds	2
   600  0000C3                     vfpfcnvrt@ap:
   601                           	opt callstack 0
   602                           
   603                           ; 2 bytes @ 0x43
   604  0000C3                     	ds	2
   605  0000C5                     ??_vfpfcnvrt:
   606                           
   607                           ; 1 bytes @ 0x45
   608  0000C5                     	ds	2
   609  0000C7                     vfpfcnvrt@ll:
   610                           	opt callstack 0
   611                           
   612                           ; 8 bytes @ 0x47
   613  0000C7                     	ds	8
   614  0000CF                     vfprintf@cfmt:
   615                           	opt callstack 0
   616                           
   617                           ; 2 bytes @ 0x4F
   618  0000CF                     	ds	2
   619  0000D1                     ??_main:
   620                           
   621                           ; 1 bytes @ 0x51
   622  0000D1                     	ds	2
   623                           
   624                           	psect	cstackCOMRAM
   625  000001                     __pcstackCOMRAM:
   626                           	opt callstack 0
   627  000001                     ?___xxtofl:
   628                           	opt callstack 0
   629  000001                     ___xxtofl@val:
   630                           	opt callstack 0
   631                           
   632                           ; 4 bytes @ 0x0
   633  000001                     	ds	4
   634  000005                     ??___xxtofl:
   635                           
   636                           ; 1 bytes @ 0x4
   637  000005                     	ds	4
   638  000009                     ___xxtofl@sign:
   639                           	opt callstack 0
   640                           
   641                           ; 1 bytes @ 0x8
   642  000009                     	ds	1
   643  00000A                     ___xxtofl@exp:
   644                           	opt callstack 0
   645                           
   646                           ; 1 bytes @ 0x9
   647  00000A                     	ds	1
   648  00000B                     ___xxtofl@arg:
   649                           	opt callstack 0
   650                           
   651                           ; 4 bytes @ 0xA
   652  00000B                     	ds	4
   653  00000F                     ?___fldiv:
   654                           	opt callstack 0
   655  00000F                     ___fldiv@b:
   656                           	opt callstack 0
   657                           
   658                           ; 4 bytes @ 0xE
   659  00000F                     	ds	4
   660  000013                     ___fldiv@a:
   661                           	opt callstack 0
   662                           
   663                           ; 4 bytes @ 0x12
   664  000013                     	ds	4
   665  000017                     ??___fldiv:
   666                           
   667                           ; 1 bytes @ 0x16
   668  000017                     	ds	4
   669  00001B                     ___fldiv@rem:
   670                           	opt callstack 0
   671                           
   672                           ; 4 bytes @ 0x1A
   673  00001B                     	ds	4
   674  00001F                     ___fldiv@sign:
   675                           	opt callstack 0
   676                           
   677                           ; 1 bytes @ 0x1E
   678  00001F                     	ds	1
   679  000020                     ___fldiv@new_exp:
   680                           	opt callstack 0
   681                           
   682                           ; 2 bytes @ 0x1F
   683  000020                     	ds	2
   684  000022                     ___fldiv@grs:
   685                           	opt callstack 0
   686                           
   687                           ; 4 bytes @ 0x21
   688  000022                     	ds	4
   689  000026                     ___fldiv@bexp:
   690                           	opt callstack 0
   691                           
   692                           ; 1 bytes @ 0x25
   693  000026                     	ds	1
   694  000027                     ___fldiv@aexp:
   695                           	opt callstack 0
   696                           
   697                           ; 1 bytes @ 0x26
   698  000027                     	ds	1
   699  000028                     ?___fltol:
   700                           	opt callstack 0
   701  000028                     ___fltol@f1:
   702                           	opt callstack 0
   703                           
   704                           ; 4 bytes @ 0x27
   705  000028                     	ds	4
   706  00002C                     ??___fltol:
   707                           
   708                           ; 1 bytes @ 0x2B
   709  00002C                     	ds	4
   710  000030                     ___fltol@sign1:
   711                           	opt callstack 0
   712                           
   713                           ; 1 bytes @ 0x2F
   714  000030                     	ds	1
   715  000031                     ___fltol@exp1:
   716                           	opt callstack 0
   717                           
   718                           ; 1 bytes @ 0x30
   719  000031                     	ds	1
   720  000032                     ??_echo:
   721                           
   722                           ; 1 bytes @ 0x31
   723  000032                     	ds	4
   724  000036                     ??_I2C_Master_Wait:
   725  000036                     ?_strlen:
   726                           	opt callstack 0
   727  000036                     pulse_e@interruptState:
   728                           	opt callstack 0
   729  000036                     ___aomod@counter:
   730                           	opt callstack 0
   731  000036                     strlen@s:
   732                           	opt callstack 0
   733  000036                     I2C_Master_Init@clockFreq:
   734                           	opt callstack 0
   735                           
   736                           ; 4 bytes @ 0x35
   737  000036                     	ds	1
   738  000037                     send_nibble@data:
   739                           	opt callstack 0
   740  000037                     ___aomod@sign:
   741                           	opt callstack 0
   742  000037                     I2C_Master_Write@byteToWrite:
   743                           	opt callstack 0
   744                           
   745                           ; 2 bytes @ 0x36
   746  000037                     	ds	1
   747  000038                     ?_abs:
   748                           	opt callstack 0
   749  000038                     send_byte@data:
   750                           	opt callstack 0
   751  000038                     abs@a:
   752                           	opt callstack 0
   753  000038                     strlen@a:
   754                           	opt callstack 0
   755                           
   756                           ; 2 bytes @ 0x37
   757  000038                     	ds	1
   758  000039                     lcdInst@data:
   759                           	opt callstack 0
   760  000039                     putch@data:
   761                           	opt callstack 0
   762                           
   763                           ; 1 bytes @ 0x38
   764  000039                     	ds	1
   765  00003A                     
   766                           ; 1 bytes @ 0x39
   767 ;;
   768 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   769 ;;
   770 ;; *************** function _main *****************
   771 ;; Defined at:
   772 ;;		line 58 in file "main.c"
   773 ;; Parameters:    Size  Location     Type
   774 ;;		None
   775 ;; Auto vars:     Size  Location     Type
   776 ;;		None
   777 ;; Return value:  Size  Location     Type
   778 ;;                  1    wreg      void 
   779 ;; Registers used:
   780 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   781 ;; Tracked objects:
   782 ;;		On entry : 0/0
   783 ;;		On exit  : 0/0
   784 ;;		Unchanged: 0/0
   785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   788 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   789 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   790 ;;Total ram usage:        2 bytes
   791 ;; Hardware stack levels required when called:   13
   792 ;; This function calls:
   793 ;;		_brake
   794 ;;		_lcdInst
   795 ;;		_printf
   796 ;;		_setup
   797 ;;		_start
   798 ;; This function is called by:
   799 ;;		Startup code after reset
   800 ;; This function uses a non-reentrant model
   801 ;;
   802                           
   803                           	psect	text0
   804  001CAC                     __ptext0:
   805                           	opt callstack 0
   806  001CAC                     _main:
   807                           	opt callstack 18
   808                           
   809                           ;main.c: 59:         setup();
   810                           
   811                           ;incstack = 0
   812  001CAC  EC74  F010         	call	_setup	;wreg free
   813                           
   814                           ;main.c: 60:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
   815  001CB0  0E01               	movlw	1
   816  001CB2  EC77  F011         	call	_lcdInst
   817  001CB6  0E11               	movlw	17
   818  001CB8  0100               	movlb	0	; () banked
   819  001CBA  6FD1               	movwf	??_main& (0+255),b
   820  001CBC  0E3A               	movlw	58
   821  001CBE                     u3297:
   822  001CBE  2EE8               	decfsz	wreg,f,c
   823  001CC0  D7FE               	bra	u3297
   824  001CC2  2FD1               	decfsz	??_main& (0+255),f,b
   825  001CC4  D7FC               	bra	u3297
   826  001CC6  F000               	nop	
   827                           
   828                           ;main.c: 61:         printf("lol");
   829  001CC8  0E92               	movlw	low STR_1
   830  001CCA  0101               	movlb	1	; () banked
   831  001CCC  6F06               	movwf	printf@fmt& (0+255),b
   832  001CCE  0E10               	movlw	high STR_1
   833  001CD0  6F07               	movwf	(printf@fmt+1)& (0+255),b
   834  001CD2  EC24  F011         	call	_printf	;wreg free
   835                           
   836                           ;main.c: 63:         start();
   837  001CD6  EC38  F011         	call	_start	;wreg free
   838                           
   839                           ;main.c: 64:         _delay((unsigned long)((1000)*(10000000/4000.0)));
   840  001CDA  0E0D               	movlw	13
   841  001CDC  0100               	movlb	0	; () banked
   842  001CDE  6FD2               	movwf	(??_main+1)& (0+255),b
   843  001CE0  0EAF               	movlw	175
   844  001CE2  6FD1               	movwf	??_main& (0+255),b
   845  001CE4  0EB6               	movlw	182
   846  001CE6                     u3307:
   847  001CE6  2EE8               	decfsz	wreg,f,c
   848  001CE8  D7FE               	bra	u3307
   849  001CEA  2FD1               	decfsz	??_main& (0+255),f,b
   850  001CEC  D7FC               	bra	u3307
   851  001CEE  2FD2               	decfsz	(??_main+1)& (0+255),f,b
   852  001CF0  D7FA               	bra	u3307
   853  001CF2  F000               	nop	
   854                           
   855                           ;main.c: 65:         brake();
   856  001CF4  EC49  F011         	call	_brake	;wreg free
   857                           
   858                           ;main.c: 66:         _delay((unsigned long)((1000)*(10000000/4000.0)));
   859  001CF8  0E0D               	movlw	13
   860  001CFA  0100               	movlb	0	; () banked
   861  001CFC  6FD2               	movwf	(??_main+1)& (0+255),b
   862  001CFE  0EAF               	movlw	175
   863  001D00  6FD1               	movwf	??_main& (0+255),b
   864  001D02  0EB6               	movlw	182
   865  001D04                     u3317:
   866  001D04  2EE8               	decfsz	wreg,f,c
   867  001D06  D7FE               	bra	u3317
   868  001D08  2FD1               	decfsz	??_main& (0+255),f,b
   869  001D0A  D7FC               	bra	u3317
   870  001D0C  2FD2               	decfsz	(??_main+1)& (0+255),f,b
   871  001D0E  D7FA               	bra	u3317
   872  001D10  F000               	nop	
   873                           
   874                           ;main.c: 67:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
   875  001D12  0E01               	movlw	1
   876  001D14  EC77  F011         	call	_lcdInst
   877  001D18  0E11               	movlw	17
   878  001D1A  0100               	movlb	0	; () banked
   879  001D1C  6FD1               	movwf	??_main& (0+255),b
   880  001D1E  0E3A               	movlw	58
   881  001D20                     u3327:
   882  001D20  2EE8               	decfsz	wreg,f,c
   883  001D22  D7FE               	bra	u3327
   884  001D24  2FD1               	decfsz	??_main& (0+255),f,b
   885  001D26  D7FC               	bra	u3327
   886  001D28  F000               	nop	
   887                           
   888                           ;main.c: 68:         printf("fk");
   889  001D2A  0E96               	movlw	low STR_2
   890  001D2C  0101               	movlb	1	; () banked
   891  001D2E  6F06               	movwf	printf@fmt& (0+255),b
   892  001D30  0E10               	movlw	high STR_2
   893  001D32  6F07               	movwf	(printf@fmt+1)& (0+255),b
   894  001D34  EC24  F011         	call	_printf	;wreg free
   895                           
   896                           ;main.c: 70:         start();
   897  001D38  EC38  F011         	call	_start	;wreg free
   898                           
   899                           ;main.c: 71:         _delay((unsigned long)((1000)*(10000000/4000.0)));
   900  001D3C  0E0D               	movlw	13
   901  001D3E  0100               	movlb	0	; () banked
   902  001D40  6FD2               	movwf	(??_main+1)& (0+255),b
   903  001D42  0EAF               	movlw	175
   904  001D44  6FD1               	movwf	??_main& (0+255),b
   905  001D46  0EB6               	movlw	182
   906  001D48                     u3337:
   907  001D48  2EE8               	decfsz	wreg,f,c
   908  001D4A  D7FE               	bra	u3337
   909  001D4C  2FD1               	decfsz	??_main& (0+255),f,b
   910  001D4E  D7FC               	bra	u3337
   911  001D50  2FD2               	decfsz	(??_main+1)& (0+255),f,b
   912  001D52  D7FA               	bra	u3337
   913  001D54  F000               	nop	
   914                           
   915                           ;main.c: 72:                 brake();
   916  001D56  EC49  F011         	call	_brake	;wreg free
   917                           
   918                           ;main.c: 73:         _delay((unsigned long)((1000)*(10000000/4000.0)));
   919  001D5A  0E0D               	movlw	13
   920  001D5C  0100               	movlb	0	; () banked
   921  001D5E  6FD2               	movwf	(??_main+1)& (0+255),b
   922  001D60  0EAF               	movlw	175
   923  001D62  6FD1               	movwf	??_main& (0+255),b
   924  001D64  0EB6               	movlw	182
   925  001D66                     u3347:
   926  001D66  2EE8               	decfsz	wreg,f,c
   927  001D68  D7FE               	bra	u3347
   928  001D6A  2FD1               	decfsz	??_main& (0+255),f,b
   929  001D6C  D7FC               	bra	u3347
   930  001D6E  2FD2               	decfsz	(??_main+1)& (0+255),f,b
   931  001D70  D7FA               	bra	u3347
   932  001D72  F000               	nop	
   933  001D74  EF07  F000         	goto	start
   934  001D78                     __end_of_main:
   935                           	opt callstack 0
   936                           
   937 ;; *************** function _start *****************
   938 ;; Defined at:
   939 ;;		line 50 in file "main.c"
   940 ;; Parameters:    Size  Location     Type
   941 ;;		None
   942 ;; Auto vars:     Size  Location     Type
   943 ;;		None
   944 ;; Return value:  Size  Location     Type
   945 ;;                  1    wreg      void 
   946 ;; Registers used:
   947 ;;		wreg, status,2, status,0, cstack
   948 ;; Tracked objects:
   949 ;;		On entry : 0/0
   950 ;;		On exit  : 0/0
   951 ;;		Unchanged: 0/0
   952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   957 ;;Total ram usage:        0 bytes
   958 ;; Hardware stack levels used:    1
   959 ;; Hardware stack levels required when called:    4
   960 ;; This function calls:
   961 ;;		_I2C_Master_Start
   962 ;;		_I2C_Master_Stop
   963 ;;		_I2C_Master_Write
   964 ;; This function is called by:
   965 ;;		_main
   966 ;; This function uses a non-reentrant model
   967 ;;
   968                           
   969                           	psect	text1
   970  002270                     __ptext1:
   971                           	opt callstack 0
   972  002270                     _start:
   973                           	opt callstack 26
   974                           
   975                           ;main.c: 52:     I2C_Master_Start();
   976                           
   977                           ;incstack = 0
   978  002270  EC8C  F011         	call	_I2C_Master_Start	;wreg free
   979                           
   980                           ;main.c: 53:     I2C_Master_Write(0b00010000);
   981  002274  0E00               	movlw	0
   982  002276  6E38               	movwf	I2C_Master_Write@byteToWrite+1,c
   983  002278  0E10               	movlw	16
   984  00227A  6E37               	movwf	I2C_Master_Write@byteToWrite,c
   985  00227C  EC83  F011         	call	_I2C_Master_Write	;wreg free
   986                           
   987                           ;main.c: 54:     I2C_Master_Write('1');
   988  002280  0E00               	movlw	0
   989  002282  6E38               	movwf	I2C_Master_Write@byteToWrite+1,c
   990  002284  0E31               	movlw	49
   991  002286  6E37               	movwf	I2C_Master_Write@byteToWrite,c
   992  002288  EC83  F011         	call	_I2C_Master_Write	;wreg free
   993                           
   994                           ;main.c: 55:     I2C_Master_Stop();
   995  00228C  EC88  F011         	call	_I2C_Master_Stop	;wreg free
   996  002290  0012               	return		;funcret
   997  002292                     __end_of_start:
   998                           	opt callstack 0
   999                           
  1000 ;; *************** function _setup *****************
  1001 ;; Defined at:
  1002 ;;		line 9 in file "main.c"
  1003 ;; Parameters:    Size  Location     Type
  1004 ;;		None
  1005 ;; Auto vars:     Size  Location     Type
  1006 ;;  dists           4   17[BANK0 ] int [2]
  1007 ;;  mem             3    0        unsigned char [3]
  1008 ;;  send            1    0        _Bool 
  1009 ;;  counter         1    0        unsigned char 
  1010 ;;  data            1    0        unsigned char 
  1011 ;;  keypress        1    0        unsigned char 
  1012 ;; Return value:  Size  Location     Type
  1013 ;;                  1    wreg      void 
  1014 ;; Registers used:
  1015 ;;		wreg, status,2, status,0, cstack
  1016 ;; Tracked objects:
  1017 ;;		On entry : 0/0
  1018 ;;		On exit  : 0/0
  1019 ;;		Unchanged: 0/0
  1020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1022 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1024 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1025 ;;Total ram usage:        6 bytes
  1026 ;; Hardware stack levels used:    1
  1027 ;; Hardware stack levels required when called:    7
  1028 ;; This function calls:
  1029 ;;		_I2C_Master_Init
  1030 ;;		_I2C_Master_Start
  1031 ;;		_I2C_Master_Stop
  1032 ;;		_I2C_Master_Write
  1033 ;;		_initLCD
  1034 ;; This function is called by:
  1035 ;;		_main
  1036 ;; This function uses a non-reentrant model
  1037 ;;
  1038                           
  1039                           	psect	text2
  1040  0020E8                     __ptext2:
  1041                           	opt callstack 0
  1042  0020E8                     _setup:
  1043                           	opt callstack 23
  1044                           
  1045                           ;main.c: 11:     LATB = 0x00;
  1046                           
  1047                           ;incstack = 0
  1048  0020E8  0E00               	movlw	0
  1049  0020EA  6E8A               	movwf	3978,c	;volatile
  1050                           
  1051                           ;main.c: 12:     TRISB = 0b11110010;
  1052  0020EC  0EF2               	movlw	242
  1053  0020EE  6E93               	movwf	3987,c	;volatile
  1054                           
  1055                           ;main.c: 17:     LATD = 0x00;
  1056  0020F0  0E00               	movlw	0
  1057  0020F2  6E8C               	movwf	3980,c	;volatile
  1058                           
  1059                           ;main.c: 18:     TRISD = 0x00;
  1060  0020F4  0E00               	movlw	0
  1061  0020F6  6E95               	movwf	3989,c	;volatile
  1062                           
  1063                           ;main.c: 21:     ADCON1 = 0b00001111;
  1064  0020F8  0E0F               	movlw	15
  1065  0020FA  6EC1               	movwf	4033,c	;volatile
  1066                           
  1067                           ;main.c: 23:     initLCD();
  1068  0020FC  ECAA  F00F         	call	_initLCD	;wreg free
  1069                           
  1070                           ;main.c: 30:     I2C_Master_Init(100000);
  1071  002100  0EA0               	movlw	160
  1072  002102  6E36               	movwf	I2C_Master_Init@clockFreq,c
  1073  002104  0E86               	movlw	134
  1074  002106  6E37               	movwf	I2C_Master_Init@clockFreq+1,c
  1075  002108  0E01               	movlw	1
  1076  00210A  6E38               	movwf	I2C_Master_Init@clockFreq+2,c
  1077  00210C  0E00               	movlw	0
  1078  00210E  6E39               	movwf	I2C_Master_Init@clockFreq+3,c
  1079  002110  EC19  F010         	call	_I2C_Master_Init	;wreg free
  1080                           
  1081                           ;main.c: 31:     I2C_Master_Start();
  1082  002114  EC8C  F011         	call	_I2C_Master_Start	;wreg free
  1083                           
  1084                           ;main.c: 32:     I2C_Master_Write(0b00010000);
  1085  002118  0E00               	movlw	0
  1086  00211A  6E38               	movwf	I2C_Master_Write@byteToWrite+1,c
  1087  00211C  0E10               	movlw	16
  1088  00211E  6E37               	movwf	I2C_Master_Write@byteToWrite,c
  1089  002120  EC83  F011         	call	_I2C_Master_Write	;wreg free
  1090                           
  1091                           ;main.c: 33:     I2C_Master_Stop();
  1092  002124  EC88  F011         	call	_I2C_Master_Stop	;wreg free
  1093                           
  1094                           ;main.c: 38:     unsigned char keypress;;main.c: 39:     unsigned char data;;main.c: 40:
      +                               int dists[2] = {0,-1};
  1095  002128  C0FB  F091         	movff	setup@F2786,setup@dists
  1096  00212C  C0FC  F092         	movff	setup@F2786+1,setup@dists+1
  1097  002130  C0FD  F093         	movff	setup@F2786+2,setup@dists+2
  1098  002134  C0FE  F094         	movff	setup@F2786+3,setup@dists+3
  1099  002138  0012               	return		;funcret
  1100  00213A                     __end_of_setup:
  1101                           	opt callstack 0
  1102                           
  1103 ;; *************** function _initLCD *****************
  1104 ;; Defined at:
  1105 ;;		line 69 in file "lcd.c"
  1106 ;; Parameters:    Size  Location     Type
  1107 ;;		None
  1108 ;; Auto vars:     Size  Location     Type
  1109 ;;		None
  1110 ;; Return value:  Size  Location     Type
  1111 ;;                  1    wreg      void 
  1112 ;; Registers used:
  1113 ;;		wreg, status,2, status,0, cstack
  1114 ;; Tracked objects:
  1115 ;;		On entry : 0/0
  1116 ;;		On exit  : 0/0
  1117 ;;		Unchanged: 0/0
  1118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1121 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1122 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1123 ;;Total ram usage:        1 bytes
  1124 ;; Hardware stack levels used:    1
  1125 ;; Hardware stack levels required when called:    6
  1126 ;; This function calls:
  1127 ;;		_lcdInst
  1128 ;;		_send_byte
  1129 ;;		_send_nibble
  1130 ;; This function is called by:
  1131 ;;		_setup
  1132 ;;		_us_main
  1133 ;; This function uses a non-reentrant model
  1134 ;;
  1135                           
  1136                           	psect	text3
  1137  001F54                     __ptext3:
  1138                           	opt callstack 0
  1139  001F54                     _initLCD:
  1140                           	opt callstack 23
  1141                           
  1142                           ;lcd.c: 70:     _delay((unsigned long)((15)*(10000000/4000.0)));
  1143                           
  1144                           ;incstack = 0
  1145  001F54  0E31               	movlw	49
  1146  001F56  0100               	movlb	0	; () banked
  1147  001F58  6F80               	movwf	??_initLCD& (0+255),b
  1148  001F5A  0EB2               	movlw	178
  1149  001F5C                     u3357:
  1150  001F5C  2EE8               	decfsz	wreg,f,c
  1151  001F5E  D7FE               	bra	u3357
  1152  001F60  2F80               	decfsz	??_initLCD& (0+255),f,b
  1153  001F62  D7FC               	bra	u3357
  1154  001F64  F000               	nop	
  1155                           
  1156                           ;lcd.c: 72:     LATDbits.LATD2 = 0;
  1157  001F66  948C               	bcf	3980,2,c	;volatile
  1158                           
  1159                           ;lcd.c: 74:     send_nibble(0b0011);
  1160  001F68  0E03               	movlw	3
  1161  001F6A  EC5A  F011         	call	_send_nibble
  1162                           
  1163                           ;lcd.c: 75:     _delay((unsigned long)((5)*(10000000/4000.0)));
  1164  001F6E  0E11               	movlw	17
  1165  001F70  0100               	movlb	0	; () banked
  1166  001F72  6F80               	movwf	??_initLCD& (0+255),b
  1167  001F74  0E3A               	movlw	58
  1168  001F76                     u3367:
  1169  001F76  2EE8               	decfsz	wreg,f,c
  1170  001F78  D7FE               	bra	u3367
  1171  001F7A  2F80               	decfsz	??_initLCD& (0+255),f,b
  1172  001F7C  D7FC               	bra	u3367
  1173  001F7E  F000               	nop	
  1174                           
  1175                           ;lcd.c: 76:     send_nibble(0b0011);
  1176  001F80  0E03               	movlw	3
  1177  001F82  EC5A  F011         	call	_send_nibble
  1178                           
  1179                           ;lcd.c: 77:     _delay((unsigned long)((150)*(10000000/4000000.0)));
  1180  001F86  0E7D               	movlw	125
  1181  001F88                     u3377:
  1182  001F88  2EE8               	decfsz	wreg,f,c
  1183  001F8A  D7FE               	bra	u3377
  1184                           
  1185                           ;lcd.c: 78:     send_byte(0b00110010);
  1186  001F8C  0E32               	movlw	50
  1187  001F8E  EC65  F011         	call	_send_byte
  1188                           
  1189                           ;lcd.c: 80:     send_byte(0b00101000);
  1190  001F92  0E28               	movlw	40
  1191  001F94  EC65  F011         	call	_send_byte
  1192                           
  1193                           ;lcd.c: 81:     send_byte(0b00001000);
  1194  001F98  0E08               	movlw	8
  1195  001F9A  EC65  F011         	call	_send_byte
  1196                           
  1197                           ;lcd.c: 82:     send_byte(0b00000001);
  1198  001F9E  0E01               	movlw	1
  1199  001FA0  EC65  F011         	call	_send_byte
  1200                           
  1201                           ;lcd.c: 83:     _delay((unsigned long)((5)*(10000000/4000.0)));
  1202  001FA4  0E11               	movlw	17
  1203  001FA6  0100               	movlb	0	; () banked
  1204  001FA8  6F80               	movwf	??_initLCD& (0+255),b
  1205  001FAA  0E3A               	movlw	58
  1206  001FAC                     u3387:
  1207  001FAC  2EE8               	decfsz	wreg,f,c
  1208  001FAE  D7FE               	bra	u3387
  1209  001FB0  2F80               	decfsz	??_initLCD& (0+255),f,b
  1210  001FB2  D7FC               	bra	u3387
  1211  001FB4  F000               	nop	
  1212                           
  1213                           ;lcd.c: 84:     send_byte(0b00000110);
  1214  001FB6  0E06               	movlw	6
  1215  001FB8  EC65  F011         	call	_send_byte
  1216                           
  1217                           ;lcd.c: 87:     { lcdInst( (unsigned char)(8 | (1 << 2) | (1 << 1) | 1) );};
  1218  001FBC  0E0F               	movlw	15
  1219  001FBE  EC77  F011         	call	_lcdInst
  1220  001FC2  0012               	return		;funcret
  1221  001FC4                     __end_of_initLCD:
  1222                           	opt callstack 0
  1223                           
  1224 ;; *************** function _lcdInst *****************
  1225 ;; Defined at:
  1226 ;;		line 64 in file "lcd.c"
  1227 ;; Parameters:    Size  Location     Type
  1228 ;;  data            1    wreg     unsigned char 
  1229 ;; Auto vars:     Size  Location     Type
  1230 ;;  data            1   56[COMRAM] unsigned char 
  1231 ;; Return value:  Size  Location     Type
  1232 ;;                  1    wreg      void 
  1233 ;; Registers used:
  1234 ;;		wreg, status,2, status,0, cstack
  1235 ;; Tracked objects:
  1236 ;;		On entry : 0/0
  1237 ;;		On exit  : 0/0
  1238 ;;		Unchanged: 0/0
  1239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1241 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1243 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1244 ;;Total ram usage:        1 bytes
  1245 ;; Hardware stack levels used:    1
  1246 ;; Hardware stack levels required when called:    5
  1247 ;; This function calls:
  1248 ;;		_send_byte
  1249 ;; This function is called by:
  1250 ;;		_initLCD
  1251 ;;		_main
  1252 ;;		_lcd_shift_cursor
  1253 ;;		_lcd_shift_display
  1254 ;;		_us_main
  1255 ;; This function uses a non-reentrant model
  1256 ;;
  1257                           
  1258                           	psect	text4
  1259  0022EE                     __ptext4:
  1260                           	opt callstack 0
  1261  0022EE                     _lcdInst:
  1262                           	opt callstack 23
  1263                           
  1264                           ;incstack = 0
  1265                           ;lcdInst@data stored from wreg
  1266  0022EE  6E39               	movwf	lcdInst@data,c
  1267                           
  1268                           ;lcd.c: 65:     LATDbits.LATD2 = 0;
  1269  0022F0  948C               	bcf	3980,2,c	;volatile
  1270                           
  1271                           ;lcd.c: 66:     send_byte(data);
  1272  0022F2  5039               	movf	lcdInst@data,w,c
  1273  0022F4  EC65  F011         	call	_send_byte
  1274  0022F8  0012               	return		;funcret
  1275  0022FA                     __end_of_lcdInst:
  1276                           	opt callstack 0
  1277                           
  1278 ;; *************** function _I2C_Master_Init *****************
  1279 ;; Defined at:
  1280 ;;		line 32 in file "I2C.c"
  1281 ;; Parameters:    Size  Location     Type
  1282 ;;  clockFreq       4   53[COMRAM] const unsigned long 
  1283 ;; Auto vars:     Size  Location     Type
  1284 ;;		None
  1285 ;; Return value:  Size  Location     Type
  1286 ;;                  1    wreg      void 
  1287 ;; Registers used:
  1288 ;;		wreg, status,2, status,0, cstack
  1289 ;; Tracked objects:
  1290 ;;		On entry : 0/0
  1291 ;;		On exit  : 0/0
  1292 ;;		Unchanged: 0/0
  1293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1294 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1296 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1297 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1298 ;;Total ram usage:        8 bytes
  1299 ;; Hardware stack levels used:    1
  1300 ;; Hardware stack levels required when called:    3
  1301 ;; This function calls:
  1302 ;;		___lldiv
  1303 ;; This function is called by:
  1304 ;;		_setup
  1305 ;; This function uses a non-reentrant model
  1306 ;;
  1307                           
  1308                           	psect	text5
  1309  002032                     __ptext5:
  1310                           	opt callstack 0
  1311  002032                     _I2C_Master_Init:
  1312                           	opt callstack 26
  1313                           
  1314                           ;I2C.c: 34:     SSPCON1bits.SSPEN = 0;
  1315                           
  1316                           ;incstack = 0
  1317  002032  9AC6               	bcf	4038,5,c	;volatile
  1318                           
  1319                           ;I2C.c: 37:     TRISCbits.TRISC3 = 1;
  1320  002034  8694               	bsf	3988,3,c	;volatile
  1321                           
  1322                           ;I2C.c: 38:     TRISCbits.TRISC4 = 1;
  1323  002036  8894               	bsf	3988,4,c	;volatile
  1324                           
  1325                           ;I2C.c: 43:     SSPADD = (10000000 / (4 * clockFreq)) - 1;
  1326  002038  0E80               	movlw	128
  1327  00203A  0100               	movlb	0	; () banked
  1328  00203C  6F80               	movwf	___lldiv@dividend& (0+255),b
  1329  00203E  0E96               	movlw	150
  1330  002040  6F81               	movwf	(___lldiv@dividend+1)& (0+255),b
  1331  002042  0E98               	movlw	152
  1332  002044  6F82               	movwf	(___lldiv@dividend+2)& (0+255),b
  1333  002046  0E00               	movlw	0
  1334  002048  6F83               	movwf	(___lldiv@dividend+3)& (0+255),b
  1335  00204A  C036  F08D         	movff	I2C_Master_Init@clockFreq,??_I2C_Master_Init
  1336  00204E  C037  F08E         	movff	I2C_Master_Init@clockFreq+1,??_I2C_Master_Init+1
  1337  002052  C038  F08F         	movff	I2C_Master_Init@clockFreq+2,??_I2C_Master_Init+2
  1338  002056  C039  F090         	movff	I2C_Master_Init@clockFreq+3,??_I2C_Master_Init+3
  1339  00205A  0E02               	movlw	2
  1340  00205C                     u3045:
  1341  00205C  90D8               	bcf	status,0,c
  1342  00205E  378D               	rlcf	??_I2C_Master_Init& (0+255),f,b
  1343  002060  378E               	rlcf	(??_I2C_Master_Init+1)& (0+255),f,b
  1344  002062  378F               	rlcf	(??_I2C_Master_Init+2)& (0+255),f,b
  1345  002064  3790               	rlcf	(??_I2C_Master_Init+3)& (0+255),f,b
  1346  002066  2EE8               	decfsz	wreg,f,c
  1347  002068  D7F9               	goto	u3045
  1348  00206A  C08D  F084         	movff	??_I2C_Master_Init,___lldiv@divisor
  1349  00206E  C08E  F085         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
  1350  002072  C08F  F086         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
  1351  002076  C090  F087         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
  1352  00207A  EC68  F00F         	call	___lldiv	;wreg free
  1353  00207E  0100               	movlb	0	; () banked
  1354  002080  0580               	decf	?___lldiv& (0+255),w,b
  1355  002082  6EC8               	movwf	4040,c	;volatile
  1356                           
  1357                           ; BSR set to: 0
  1358                           ;I2C.c: 46:     SSPSTAT = 0b10000000;
  1359  002084  0E80               	movlw	128
  1360  002086  6EC7               	movwf	4039,c	;volatile
  1361                           
  1362                           ; BSR set to: 0
  1363                           ;I2C.c: 49:     SSPCON1 = 0b00101000;
  1364  002088  0E28               	movlw	40
  1365  00208A  6EC6               	movwf	4038,c	;volatile
  1366                           
  1367                           ; BSR set to: 0
  1368                           ;I2C.c: 52:     SSPCON2 = 0b00000000;
  1369  00208C  0E00               	movlw	0
  1370  00208E  6EC5               	movwf	4037,c	;volatile
  1371                           
  1372                           ; BSR set to: 0
  1373  002090  0012               	return		;funcret
  1374  002092                     __end_of_I2C_Master_Init:
  1375                           	opt callstack 0
  1376                           
  1377 ;; *************** function ___lldiv *****************
  1378 ;; Defined at:
  1379 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__lldiv.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;  dividend        4    0[BANK0 ] unsigned long 
  1382 ;;  divisor         4    4[BANK0 ] unsigned long 
  1383 ;; Auto vars:     Size  Location     Type
  1384 ;;  quotient        4    8[BANK0 ] unsigned long 
  1385 ;;  counter         1   12[BANK0 ] unsigned char 
  1386 ;; Return value:  Size  Location     Type
  1387 ;;                  4    0[BANK0 ] unsigned long 
  1388 ;; Registers used:
  1389 ;;		wreg, status,2, status,0
  1390 ;; Tracked objects:
  1391 ;;		On entry : 0/0
  1392 ;;		On exit  : 0/0
  1393 ;;		Unchanged: 0/0
  1394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1395 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1396 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1398 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1399 ;;Total ram usage:       13 bytes
  1400 ;; Hardware stack levels used:    1
  1401 ;; Hardware stack levels required when called:    2
  1402 ;; This function calls:
  1403 ;;		Nothing
  1404 ;; This function is called by:
  1405 ;;		_I2C_Master_Init
  1406 ;; This function uses a non-reentrant model
  1407 ;;
  1408                           
  1409                           	psect	text6
  1410  001ED0                     __ptext6:
  1411                           	opt callstack 0
  1412  001ED0                     ___lldiv:
  1413                           	opt callstack 26
  1414                           
  1415                           ; BSR set to: 0
  1416                           ;incstack = 0
  1417  001ED0  0E00               	movlw	0
  1418  001ED2  0100               	movlb	0	; () banked
  1419  001ED4  6F88               	movwf	___lldiv@quotient& (0+255),b
  1420  001ED6  0E00               	movlw	0
  1421  001ED8  6F89               	movwf	(___lldiv@quotient+1)& (0+255),b
  1422  001EDA  0E00               	movlw	0
  1423  001EDC  6F8A               	movwf	(___lldiv@quotient+2)& (0+255),b
  1424  001EDE  0E00               	movlw	0
  1425  001EE0  6F8B               	movwf	(___lldiv@quotient+3)& (0+255),b
  1426                           
  1427                           ; BSR set to: 0
  1428  001EE2  5184               	movf	___lldiv@divisor& (0+255),w,b
  1429  001EE4  1185               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  1430  001EE6  1186               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  1431  001EE8  1187               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  1432  001EEA  B4D8               	btfsc	status,2,c
  1433  001EEC  D02A               	goto	l334
  1434                           
  1435                           ; BSR set to: 0
  1436  001EEE  0E01               	movlw	1
  1437  001EF0  6F8C               	movwf	___lldiv@counter& (0+255),b
  1438  001EF2  D006               	goto	l2966
  1439  001EF4                     l2964:
  1440                           
  1441                           ; BSR set to: 0
  1442  001EF4  90D8               	bcf	status,0,c
  1443  001EF6  3784               	rlcf	___lldiv@divisor& (0+255),f,b
  1444  001EF8  3785               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  1445  001EFA  3786               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  1446  001EFC  3787               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  1447  001EFE  2B8C               	incf	___lldiv@counter& (0+255),f,b
  1448  001F00                     l2966:
  1449                           
  1450                           ; BSR set to: 0
  1451  001F00  AF87               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  1452  001F02  D7F8               	goto	l2964
  1453  001F04                     u3020:
  1454                           
  1455                           ; BSR set to: 0
  1456  001F04  90D8               	bcf	status,0,c
  1457  001F06  3788               	rlcf	___lldiv@quotient& (0+255),f,b
  1458  001F08  3789               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  1459  001F0A  378A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  1460  001F0C  378B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  1461                           
  1462                           ; BSR set to: 0
  1463  001F0E  5184               	movf	___lldiv@divisor& (0+255),w,b
  1464  001F10  5D80               	subwf	___lldiv@dividend& (0+255),w,b
  1465  001F12  5185               	movf	(___lldiv@divisor+1)& (0+255),w,b
  1466  001F14  5981               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  1467  001F16  5186               	movf	(___lldiv@divisor+2)& (0+255),w,b
  1468  001F18  5982               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  1469  001F1A  5187               	movf	(___lldiv@divisor+3)& (0+255),w,b
  1470  001F1C  5983               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  1471  001F1E  A0D8               	btfss	status,0,c
  1472  001F20  D009               	goto	l2976
  1473                           
  1474                           ; BSR set to: 0
  1475  001F22  5184               	movf	___lldiv@divisor& (0+255),w,b
  1476  001F24  5F80               	subwf	___lldiv@dividend& (0+255),f,b
  1477  001F26  5185               	movf	(___lldiv@divisor+1)& (0+255),w,b
  1478  001F28  5B81               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  1479  001F2A  5186               	movf	(___lldiv@divisor+2)& (0+255),w,b
  1480  001F2C  5B82               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  1481  001F2E  5187               	movf	(___lldiv@divisor+3)& (0+255),w,b
  1482  001F30  5B83               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  1483                           
  1484                           ; BSR set to: 0
  1485  001F32  8188               	bsf	___lldiv@quotient& (0+255),0,b
  1486  001F34                     l2976:
  1487                           
  1488                           ; BSR set to: 0
  1489  001F34  90D8               	bcf	status,0,c
  1490  001F36  3387               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  1491  001F38  3386               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  1492  001F3A  3385               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  1493  001F3C  3384               	rrcf	___lldiv@divisor& (0+255),f,b
  1494                           
  1495                           ; BSR set to: 0
  1496  001F3E  2F8C               	decfsz	___lldiv@counter& (0+255),f,b
  1497  001F40  D7E1               	goto	u3020
  1498  001F42                     l334:
  1499                           
  1500                           ; BSR set to: 0
  1501  001F42  C088  F080         	movff	___lldiv@quotient,?___lldiv
  1502  001F46  C089  F081         	movff	___lldiv@quotient+1,?___lldiv+1
  1503  001F4A  C08A  F082         	movff	___lldiv@quotient+2,?___lldiv+2
  1504  001F4E  C08B  F083         	movff	___lldiv@quotient+3,?___lldiv+3
  1505                           
  1506                           ; BSR set to: 0
  1507  001F52  0012               	return		;funcret
  1508  001F54                     __end_of___lldiv:
  1509                           	opt callstack 0
  1510                           
  1511 ;; *************** function _printf *****************
  1512 ;; Defined at:
  1513 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  1514 ;; Parameters:    Size  Location     Type
  1515 ;;  fmt             2    6[BANK1 ] PTR const unsigned char 
  1516 ;;		 -> STR_10(15), STR_9(15), STR_8(15), STR_7(15), 
  1517 ;;		 -> STR_6(15), STR_5(16), STR_4(15), STR_3(16), 
  1518 ;;		 -> STR_2(3), STR_1(4), 
  1519 ;; Auto vars:     Size  Location     Type
  1520 ;;  ap              2   12[BANK1 ] PTR void [1]
  1521 ;;		 -> ?_printf(2), 
  1522 ;;  ret             2    0        int 
  1523 ;; Return value:  Size  Location     Type
  1524 ;;                  2    6[BANK1 ] int 
  1525 ;; Registers used:
  1526 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1527 ;; Tracked objects:
  1528 ;;		On entry : 0/0
  1529 ;;		On exit  : 0/0
  1530 ;;		Unchanged: 0/0
  1531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1532 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1533 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1535 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1536 ;;Total ram usage:        8 bytes
  1537 ;; Hardware stack levels used:    1
  1538 ;; Hardware stack levels required when called:   12
  1539 ;; This function calls:
  1540 ;;		_vfprintf
  1541 ;; This function is called by:
  1542 ;;		_main
  1543 ;;		_us_main
  1544 ;; This function uses a non-reentrant model
  1545 ;;
  1546                           
  1547                           	psect	text7
  1548  002248                     __ptext7:
  1549                           	opt callstack 0
  1550  002248                     _printf:
  1551                           	opt callstack 18
  1552                           
  1553                           ; BSR set to: 0
  1554                           ;incstack = 0
  1555  002248  0E08               	movlw	low (?_printf+2)
  1556  00224A  0101               	movlb	1	; () banked
  1557  00224C  6F0C               	movwf	printf@ap& (0+255),b
  1558  00224E  0E01               	movlw	high (?_printf+2)
  1559  002250  6F0D               	movwf	(printf@ap+1)& (0+255),b
  1560                           
  1561                           ; BSR set to: 1
  1562  002252  0E00               	movlw	0
  1563  002254  6F00               	movwf	vfprintf@fp& (0+255),b
  1564  002256  0E00               	movlw	0
  1565  002258  6F01               	movwf	(vfprintf@fp+1)& (0+255),b
  1566  00225A  C106  F102         	movff	printf@fmt,vfprintf@fmt
  1567  00225E  C107  F103         	movff	printf@fmt+1,vfprintf@fmt+1
  1568  002262  0E0C               	movlw	low printf@ap
  1569  002264  6F04               	movwf	vfprintf@ap& (0+255),b
  1570  002266  0E01               	movlw	high printf@ap
  1571  002268  6F05               	movwf	(vfprintf@ap+1)& (0+255),b
  1572  00226A  EC49  F010         	call	_vfprintf	;wreg free
  1573  00226E  0012               	return		;funcret
  1574  002270                     __end_of_printf:
  1575                           	opt callstack 0
  1576                           
  1577 ;; *************** function _vfprintf *****************
  1578 ;; Defined at:
  1579 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1580 ;; Parameters:    Size  Location     Type
  1581 ;;  fp              2    0[BANK1 ] PTR struct _IO_FILE
  1582 ;;		 -> NULL(0), 
  1583 ;;  fmt             2    2[BANK1 ] PTR const unsigned char 
  1584 ;;		 -> STR_10(15), STR_9(15), STR_8(15), STR_7(15), 
  1585 ;;		 -> STR_6(15), STR_5(16), STR_4(15), STR_3(16), 
  1586 ;;		 -> STR_2(3), STR_1(4), 
  1587 ;;  ap              2    4[BANK1 ] PTR PTR void 
  1588 ;;		 -> printf@ap(2), 
  1589 ;; Auto vars:     Size  Location     Type
  1590 ;;  cfmt            2   79[BANK0 ] PTR unsigned char 
  1591 ;;		 -> STR_10(15), STR_9(15), STR_8(15), STR_7(15), 
  1592 ;;		 -> STR_6(15), STR_5(16), STR_4(15), STR_3(16), 
  1593 ;;		 -> STR_2(3), STR_1(4), 
  1594 ;; Return value:  Size  Location     Type
  1595 ;;                  2    0[BANK1 ] int 
  1596 ;; Registers used:
  1597 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1598 ;; Tracked objects:
  1599 ;;		On entry : 0/0
  1600 ;;		On exit  : 0/0
  1601 ;;		Unchanged: 0/0
  1602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1603 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1604 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1606 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1607 ;;Total ram usage:        8 bytes
  1608 ;; Hardware stack levels used:    1
  1609 ;; Hardware stack levels required when called:   11
  1610 ;; This function calls:
  1611 ;;		_vfpfcnvrt
  1612 ;; This function is called by:
  1613 ;;		_printf
  1614 ;; This function uses a non-reentrant model
  1615 ;;
  1616                           
  1617                           	psect	text8
  1618  002092                     __ptext8:
  1619                           	opt callstack 0
  1620  002092                     _vfprintf:
  1621                           	opt callstack 18
  1622                           
  1623                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1624                           
  1625                           ;incstack = 0
  1626  002092  C102  F0CF         	movff	vfprintf@fmt,vfprintf@cfmt
  1627  002096  C103  F0D0         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1628                           
  1629                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1630  00209A  0E00               	movlw	0
  1631  00209C  0100               	movlb	0	; () banked
  1632  00209E  6FD4               	movwf	(_nout+1)& (0+255),b
  1633  0020A0  0E00               	movlw	0
  1634  0020A2  6FD3               	movwf	_nout& (0+255),b
  1635                           
  1636                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1637  0020A4  D013               	goto	l3016
  1638  0020A6                     l3014:
  1639                           
  1640                           ; BSR set to: 0
  1641                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1642  0020A6  C100  F0BF         	movff	vfprintf@fp,vfpfcnvrt@fp
  1643  0020AA  C101  F0C0         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1644  0020AE  0ECF               	movlw	low vfprintf@cfmt
  1645  0020B0  6FC1               	movwf	vfpfcnvrt@fmt& (0+255),b
  1646  0020B2  0E00               	movlw	high vfprintf@cfmt
  1647  0020B4  6FC2               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1648  0020B6  C104  F0C3         	movff	vfprintf@ap,vfpfcnvrt@ap
  1649  0020BA  C105  F0C4         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1650  0020BE  ECBB  F00B         	call	_vfpfcnvrt	;wreg free
  1651  0020C2  0100               	movlb	0	; () banked
  1652  0020C4  51BF               	movf	?_vfpfcnvrt& (0+255),w,b
  1653  0020C6  27D3               	addwf	_nout& (0+255),f,b
  1654  0020C8  51C0               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1655  0020CA  23D4               	addwfc	(_nout+1)& (0+255),f,b
  1656  0020CC                     l3016:
  1657                           
  1658                           ; BSR set to: 0
  1659                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1660  0020CC  C0CF  FFF6         	movff	vfprintf@cfmt,tblptrl
  1661  0020D0  C0D0  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1662  0020D4                     	if	0	;tblptru may be non-zero
  1663  0020D4                     	endif
  1664  0020D4                     	if	0	;tblptru may be non-zero
  1665  0020D4                     	endif
  1666  0020D4  0008               	tblrd		*
  1667  0020D6  50F5               	movf	tablat,w,c
  1668  0020D8  0900               	iorlw	0
  1669  0020DA  A4D8               	btfss	status,2,c
  1670  0020DC  D7E4               	goto	l3014
  1671                           
  1672                           ; BSR set to: 0
  1673                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1674  0020DE  C0D3  F100         	movff	_nout,?_vfprintf
  1675  0020E2  C0D4  F101         	movff	_nout+1,?_vfprintf+1
  1676                           
  1677                           ; BSR set to: 0
  1678  0020E6  0012               	return		;funcret
  1679  0020E8                     __end_of_vfprintf:
  1680                           	opt callstack 0
  1681                           
  1682 ;; *************** function _vfpfcnvrt *****************
  1683 ;; Defined at:
  1684 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1685 ;; Parameters:    Size  Location     Type
  1686 ;;  fp              2   63[BANK0 ] PTR struct _IO_FILE
  1687 ;;		 -> NULL(0), 
  1688 ;;  fmt             2   65[BANK0 ] PTR PTR unsigned char 
  1689 ;;		 -> vfprintf@cfmt(2), 
  1690 ;;  ap              2   67[BANK0 ] PTR PTR void 
  1691 ;;		 -> printf@ap(2), 
  1692 ;; Auto vars:     Size  Location     Type
  1693 ;;  ll              8   71[BANK0 ] long long 
  1694 ;;  llu             8    0        unsigned long long 
  1695 ;;  f               4    0        unsigned long long 
  1696 ;;  vp              3    0        PTR void 
  1697 ;;  ct              3    0        unsigned char [3]
  1698 ;;  cp              3    0        PTR unsigned char 
  1699 ;;  i               2    0        int 
  1700 ;;  done            2    0        int 
  1701 ;;  c               1    0        unsigned char 
  1702 ;; Return value:  Size  Location     Type
  1703 ;;                  2   63[BANK0 ] int 
  1704 ;; Registers used:
  1705 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1706 ;; Tracked objects:
  1707 ;;		On entry : 0/0
  1708 ;;		On exit  : 0/0
  1709 ;;		Unchanged: 0/0
  1710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1711 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1712 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1713 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1714 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1715 ;;Total ram usage:       16 bytes
  1716 ;; Hardware stack levels used:    1
  1717 ;; Hardware stack levels required when called:   10
  1718 ;; This function calls:
  1719 ;;		_dtoa
  1720 ;;		_fputc
  1721 ;; This function is called by:
  1722 ;;		_vfprintf
  1723 ;; This function uses a non-reentrant model
  1724 ;;
  1725                           
  1726                           	psect	text9
  1727  001776                     __ptext9:
  1728                           	opt callstack 0
  1729  001776                     _vfpfcnvrt:
  1730                           	opt callstack 18
  1731                           
  1732                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1733                           
  1734                           ; BSR set to: 0
  1735                           ;incstack = 0
  1736  001776  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1737  00177A  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1738  00177E  CFDE FFF6          	movff	postinc2,tblptrl
  1739  001782  CFDD FFF7          	movff	postdec2,tblptrh
  1740  001786                     	if	0	;tblptru may be non-zero
  1741  001786                     	endif
  1742  001786                     	if	0	;tblptru may be non-zero
  1743  001786                     	endif
  1744  001786  0008               	tblrd		*
  1745  001788  50F5               	movf	tablat,w,c
  1746  00178A  0A25               	xorlw	37
  1747  00178C  A4D8               	btfss	status,2,c
  1748  00178E  D09B               	goto	l2950
  1749                           
  1750                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1751  001790  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1752  001794  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1753  001798  2ADE               	incf	postinc2,f,c
  1754  00179A  0E00               	movlw	0
  1755  00179C  22DD               	addwfc	postdec2,f,c
  1756                           
  1757                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1758  00179E  0E00               	movlw	0
  1759  0017A0  0100               	movlb	0	; () banked
  1760  0017A2  6FD6               	movwf	(_width+1)& (0+255),b
  1761  0017A4  0E00               	movlw	0
  1762  0017A6  6FD5               	movwf	_width& (0+255),b
  1763  0017A8  C0D5  F0D9         	movff	_width,_flags
  1764  0017AC  C0D6  F0DA         	movff	_width+1,_flags+1
  1765                           
  1766                           ; BSR set to: 0
  1767                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1768  0017B0  69D7               	setf	_prec& (0+255),b
  1769  0017B2  69D8               	setf	(_prec+1)& (0+255),b
  1770                           
  1771                           ; BSR set to: 0
  1772                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1773  0017B4  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1774  0017B8  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1775  0017BC  CFDE FFF6          	movff	postinc2,tblptrl
  1776  0017C0  CFDD FFF7          	movff	postdec2,tblptrh
  1777  0017C4                     	if	0	;tblptru may be non-zero
  1778  0017C4                     	endif
  1779  0017C4                     	if	0	;tblptru may be non-zero
  1780  0017C4                     	endif
  1781  0017C4  0008               	tblrd		*
  1782  0017C6  50F5               	movf	tablat,w,c
  1783  0017C8  0A64               	xorlw	100
  1784  0017CA  B4D8               	btfsc	status,2,c
  1785  0017CC  D00D               	goto	u2990
  1786                           
  1787                           ; BSR set to: 0
  1788  0017CE  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1789  0017D2  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1790  0017D6  CFDE FFF6          	movff	postinc2,tblptrl
  1791  0017DA  CFDD FFF7          	movff	postdec2,tblptrh
  1792  0017DE                     	if	0	;tblptru may be non-zero
  1793  0017DE                     	endif
  1794  0017DE                     	if	0	;tblptru may be non-zero
  1795  0017DE                     	endif
  1796  0017DE  0008               	tblrd		*
  1797  0017E0  50F5               	movf	tablat,w,c
  1798  0017E2  0A69               	xorlw	105
  1799  0017E4  A4D8               	btfss	status,2,c
  1800  0017E6  D03F               	goto	l2934
  1801  0017E8                     u2990:
  1802                           
  1803                           ; BSR set to: 0
  1804                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  1805  0017E8  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1806  0017EC  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1807  0017F0  2ADE               	incf	postinc2,f,c
  1808  0017F2  0E00               	movlw	0
  1809  0017F4  22DD               	addwfc	postdec2,f,c
  1810                           
  1811                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1812  0017F6  C0C3  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1813  0017FA  C0C4  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1814  0017FE  CFDF F0C5          	movff	indf2,??_vfpfcnvrt
  1815  001802  0E02               	movlw	2
  1816  001804  26DE               	addwf	postinc2,f,c
  1817  001806  CFDF F0C6          	movff	indf2,??_vfpfcnvrt+1
  1818  00180A  0E00               	movlw	0
  1819  00180C  22DD               	addwfc	postdec2,f,c
  1820  00180E  C0C5  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1821  001812  C0C6  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1822  001816  CFDE F0C7          	movff	postinc2,vfpfcnvrt@ll
  1823  00181A  CFDD F0C8          	movff	postdec2,vfpfcnvrt@ll+1
  1824  00181E  0E00               	movlw	0
  1825  001820  BFC8               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  1826  001822  0EFF               	movlw	-1
  1827  001824  6FC9               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  1828  001826  6FCA               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  1829  001828  6FCB               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  1830  00182A  6FCC               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  1831  00182C  6FCD               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  1832  00182E  6FCE               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  1833                           
  1834                           ; BSR set to: 0
  1835                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  1836  001830  C0BF  F09B         	movff	vfpfcnvrt@fp,dtoa@fp
  1837  001834  C0C0  F09C         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1838  001838  C0C7  F09D         	movff	vfpfcnvrt@ll,dtoa@d
  1839  00183C  C0C8  F09E         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1840  001840  C0C9  F09F         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1841  001844  C0CA  F0A0         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1842  001848  C0CB  F0A1         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1843  00184C  C0CC  F0A2         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1844  001850  C0CD  F0A3         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1845  001854  C0CE  F0A4         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1846  001858  EC91  F009         	call	_dtoa	;wreg free
  1847  00185C  C09B  F0BF         	movff	?_dtoa,?_vfpfcnvrt
  1848  001860  C09C  F0C0         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1849  001864  0012               	return	
  1850  001866                     l2934:
  1851                           
  1852                           ; BSR set to: 0
  1853                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1854  001866  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1855  00186A  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1856  00186E  CFDE FFF6          	movff	postinc2,tblptrl
  1857  001872  CFDD FFF7          	movff	postdec2,tblptrh
  1858  001876                     	if	0	;tblptru may be non-zero
  1859  001876                     	endif
  1860  001876                     	if	0	;tblptru may be non-zero
  1861  001876                     	endif
  1862  001876  0008               	tblrd		*
  1863  001878  50F5               	movf	tablat,w,c
  1864  00187A  0A25               	xorlw	37
  1865  00187C  A4D8               	btfss	status,2,c
  1866  00187E  D017               	goto	l2944
  1867                           
  1868                           ; BSR set to: 0
  1869                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1870  001880  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1871  001884  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1872  001888  2ADE               	incf	postinc2,f,c
  1873  00188A  0E00               	movlw	0
  1874  00188C  22DD               	addwfc	postdec2,f,c
  1875                           
  1876                           ; BSR set to: 0
  1877                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1878  00188E  0E00               	movlw	0
  1879  001890  6F81               	movwf	(fputc@c+1)& (0+255),b
  1880  001892  0E25               	movlw	37
  1881  001894  6F80               	movwf	fputc@c& (0+255),b
  1882  001896  C0BF  F082         	movff	vfpfcnvrt@fp,fputc@fp
  1883  00189A  C0C0  F083         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1884  00189E  ECE2  F00F         	call	_fputc	;wreg free
  1885  0018A2                     l2940:
  1886                           
  1887                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1888  0018A2  0E00               	movlw	0
  1889  0018A4  0100               	movlb	0	; () banked
  1890  0018A6  6FC0               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1891  0018A8  0E01               	movlw	1
  1892  0018AA  6FBF               	movwf	?_vfpfcnvrt& (0+255),b
  1893  0018AC  0012               	return	
  1894  0018AE                     l2944:
  1895                           
  1896                           ; BSR set to: 0
  1897                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1898  0018AE  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1899  0018B2  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1900  0018B6  2ADE               	incf	postinc2,f,c
  1901  0018B8  0E00               	movlw	0
  1902  0018BA  22DD               	addwfc	postdec2,f,c
  1903                           
  1904                           ; BSR set to: 0
  1905                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  1906  0018BC  0E00               	movlw	0
  1907  0018BE  6FC0               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1908  0018C0  0E00               	movlw	0
  1909  0018C2  6FBF               	movwf	?_vfpfcnvrt& (0+255),b
  1910  0018C4  0012               	return	
  1911  0018C6                     l2950:
  1912                           
  1913                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  1914  0018C6  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1915  0018CA  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1916  0018CE  CFDE FFF6          	movff	postinc2,tblptrl
  1917  0018D2  CFDD FFF7          	movff	postdec2,tblptrh
  1918  0018D6                     	if	0	;tblptru may be non-zero
  1919  0018D6                     	endif
  1920  0018D6                     	if	0	;tblptru may be non-zero
  1921  0018D6                     	endif
  1922  0018D6  0008               	tblrd		*
  1923  0018D8  50F5               	movf	tablat,w,c
  1924  0018DA  0100               	movlb	0	; () banked
  1925  0018DC  6F80               	movwf	fputc@c& (0+255),b
  1926  0018DE  6B81               	clrf	(fputc@c+1)& (0+255),b
  1927  0018E0  C0BF  F082         	movff	vfpfcnvrt@fp,fputc@fp
  1928  0018E4  C0C0  F083         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1929  0018E8  ECE2  F00F         	call	_fputc	;wreg free
  1930                           
  1931                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  1932  0018EC  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1933  0018F0  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1934  0018F4  2ADE               	incf	postinc2,f,c
  1935  0018F6  0E00               	movlw	0
  1936  0018F8  22DD               	addwfc	postdec2,f,c
  1937  0018FA  D7D3               	goto	l2940
  1938  0018FC                     __end_of_vfpfcnvrt:
  1939                           	opt callstack 0
  1940                           
  1941 ;; *************** function _dtoa *****************
  1942 ;; Defined at:
  1943 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1944 ;; Parameters:    Size  Location     Type
  1945 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  1946 ;;		 -> NULL(0), 
  1947 ;;  d               8   29[BANK0 ] long long 
  1948 ;; Auto vars:     Size  Location     Type
  1949 ;;  n               8   53[BANK0 ] long long 
  1950 ;;  i               2   61[BANK0 ] int 
  1951 ;;  s               2   51[BANK0 ] int 
  1952 ;;  w               2   49[BANK0 ] int 
  1953 ;;  p               2   47[BANK0 ] int 
  1954 ;; Return value:  Size  Location     Type
  1955 ;;                  2   27[BANK0 ] int 
  1956 ;; Registers used:
  1957 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1958 ;; Tracked objects:
  1959 ;;		On entry : 0/0
  1960 ;;		On exit  : 0/0
  1961 ;;		Unchanged: 0/0
  1962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1963 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1964 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1965 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1966 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1967 ;;Total ram usage:       36 bytes
  1968 ;; Hardware stack levels used:    1
  1969 ;; Hardware stack levels required when called:    9
  1970 ;; This function calls:
  1971 ;;		___aodiv
  1972 ;;		___aomod
  1973 ;;		_abs
  1974 ;;		_pad
  1975 ;; This function is called by:
  1976 ;;		_vfpfcnvrt
  1977 ;; This function uses a non-reentrant model
  1978 ;;
  1979                           
  1980                           	psect	text10
  1981  001322                     __ptext10:
  1982                           	opt callstack 0
  1983  001322                     _dtoa:
  1984                           	opt callstack 18
  1985                           
  1986                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  1987                           
  1988                           ;incstack = 0
  1989  001322  C09D  F0B5         	movff	dtoa@d,dtoa@n
  1990  001326  C09E  F0B6         	movff	dtoa@d+1,dtoa@n+1
  1991  00132A  C09F  F0B7         	movff	dtoa@d+2,dtoa@n+2
  1992  00132E  C0A0  F0B8         	movff	dtoa@d+3,dtoa@n+3
  1993  001332  C0A1  F0B9         	movff	dtoa@d+4,dtoa@n+4
  1994  001336  C0A2  F0BA         	movff	dtoa@d+5,dtoa@n+5
  1995  00133A  C0A3  F0BB         	movff	dtoa@d+6,dtoa@n+6
  1996  00133E  C0A4  F0BC         	movff	dtoa@d+7,dtoa@n+7
  1997                           
  1998                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  1999  001342  0100               	movlb	0	; () banked
  2000  001344  AFBC               	btfss	(dtoa@n+7)& (0+255),7,b
  2001  001346  D002               	goto	u2820
  2002  001348  0E01               	movlw	1
  2003  00134A  D001               	goto	u2830
  2004  00134C                     u2820:
  2005  00134C  0E00               	movlw	0
  2006  00134E                     u2830:
  2007  00134E  6FB3               	movwf	dtoa@s& (0+255),b
  2008  001350  6BB4               	clrf	(dtoa@s+1)& (0+255),b
  2009                           
  2010                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  2011  001352  51B3               	movf	dtoa@s& (0+255),w,b
  2012  001354  11B4               	iorwf	(dtoa@s+1)& (0+255),w,b
  2013  001356  B4D8               	btfsc	status,2,c
  2014  001358  D010               	goto	l2856
  2015                           
  2016                           ; BSR set to: 0
  2017                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  2018  00135A  1FBC               	comf	(dtoa@n+7)& (0+255),f,b
  2019  00135C  1FBB               	comf	(dtoa@n+6)& (0+255),f,b
  2020  00135E  1FBA               	comf	(dtoa@n+5)& (0+255),f,b
  2021  001360  1FB9               	comf	(dtoa@n+4)& (0+255),f,b
  2022  001362  1FB8               	comf	(dtoa@n+3)& (0+255),f,b
  2023  001364  1FB7               	comf	(dtoa@n+2)& (0+255),f,b
  2024  001366  1FB6               	comf	(dtoa@n+1)& (0+255),f,b
  2025  001368  6DB5               	negf	dtoa@n& (0+255),b
  2026  00136A  0E00               	movlw	0
  2027  00136C  23B6               	addwfc	(dtoa@n+1)& (0+255),f,b
  2028  00136E  23B7               	addwfc	(dtoa@n+2)& (0+255),f,b
  2029  001370  23B8               	addwfc	(dtoa@n+3)& (0+255),f,b
  2030  001372  23B9               	addwfc	(dtoa@n+4)& (0+255),f,b
  2031  001374  23BA               	addwfc	(dtoa@n+5)& (0+255),f,b
  2032  001376  23BB               	addwfc	(dtoa@n+6)& (0+255),f,b
  2033  001378  23BC               	addwfc	(dtoa@n+7)& (0+255),f,b
  2034  00137A                     l2856:
  2035                           
  2036                           ; BSR set to: 0
  2037                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  2038  00137A  AFD8               	btfss	(_prec+1)& (0+255),7,b
  2039                           
  2040                           ; BSR set to: 0
  2041                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  2042  00137C  93D9               	bcf	_flags& (0+255),1,b
  2043                           
  2044                           ; BSR set to: 0
  2045                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  2046  00137E  BFD8               	btfsc	(_prec+1)& (0+255),7,b
  2047  001380  D005               	goto	u2860
  2048  001382  51D8               	movf	(_prec+1)& (0+255),w,b
  2049  001384  E108               	bnz	l270
  2050  001386  05D7               	decf	_prec& (0+255),w,b
  2051  001388  B0D8               	btfsc	status,0,c
  2052  00138A  D005               	goto	l270
  2053  00138C                     u2860:
  2054                           
  2055                           ; BSR set to: 0
  2056  00138C  0E00               	movlw	0
  2057  00138E  6FB0               	movwf	(dtoa@p+1)& (0+255),b
  2058  001390  0E01               	movlw	1
  2059  001392  6FAF               	movwf	dtoa@p& (0+255),b
  2060  001394  D004               	goto	l272
  2061  001396                     l270:
  2062                           
  2063                           ; BSR set to: 0
  2064  001396  C0D7  F0AF         	movff	_prec,dtoa@p
  2065  00139A  C0D8  F0B0         	movff	_prec+1,dtoa@p+1
  2066  00139E                     l272:
  2067                           
  2068                           ; BSR set to: 0
  2069                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  2070  00139E  C0D5  F0B1         	movff	_width,dtoa@w
  2071  0013A2  C0D6  F0B2         	movff	_width+1,dtoa@w+1
  2072                           
  2073                           ; BSR set to: 0
  2074                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  2075  0013A6  51B3               	movf	dtoa@s& (0+255),w,b
  2076  0013A8  11B4               	iorwf	(dtoa@s+1)& (0+255),w,b
  2077  0013AA  A4D8               	btfss	status,2,c
  2078  0013AC  D002               	goto	u2880
  2079                           
  2080                           ; BSR set to: 0
  2081  0013AE  A5D9               	btfss	_flags& (0+255),2,b
  2082  0013B0  D003               	goto	l2870
  2083  0013B2                     u2880:
  2084                           
  2085                           ; BSR set to: 0
  2086                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  2087  0013B2  07B1               	decf	dtoa@w& (0+255),f,b
  2088  0013B4  A0D8               	btfss	status,0,c
  2089  0013B6  07B2               	decf	(dtoa@w+1)& (0+255),f,b
  2090  0013B8                     l2870:
  2091                           
  2092                           ; BSR set to: 0
  2093                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  2094  0013B8  0E00               	movlw	0
  2095  0013BA  6FBE               	movwf	(dtoa@i+1)& (0+255),b
  2096  0013BC  0E1F               	movlw	31
  2097  0013BE  6FBD               	movwf	dtoa@i& (0+255),b
  2098                           
  2099                           ; BSR set to: 0
  2100                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  2101  0013C0  0E00               	movlw	0
  2102  0013C2  6FFA               	movwf	(_dbuf+31)& (0+255),b
  2103                           
  2104                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2105  0013C4  D07D               	goto	l2884
  2106  0013C6                     l2874:
  2107                           
  2108                           ; BSR set to: 0
  2109                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  2110  0013C6  07BD               	decf	dtoa@i& (0+255),f,b
  2111  0013C8  A0D8               	btfss	status,0,c
  2112  0013CA  07BE               	decf	(dtoa@i+1)& (0+255),f,b
  2113                           
  2114                           ; BSR set to: 0
  2115                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  2116  0013CC  0EDB               	movlw	low _dbuf
  2117  0013CE  25BD               	addwf	dtoa@i& (0+255),w,b
  2118  0013D0  6ED9               	movwf	fsr2l,c
  2119  0013D2  0E00               	movlw	high _dbuf
  2120  0013D4  21BE               	addwfc	(dtoa@i+1)& (0+255),w,b
  2121  0013D6  6EDA               	movwf	fsr2h,c
  2122  0013D8  C0B5  F080         	movff	dtoa@n,___aomod@dividend
  2123  0013DC  C0B6  F081         	movff	dtoa@n+1,___aomod@dividend+1
  2124  0013E0  C0B7  F082         	movff	dtoa@n+2,___aomod@dividend+2
  2125  0013E4  C0B8  F083         	movff	dtoa@n+3,___aomod@dividend+3
  2126  0013E8  C0B9  F084         	movff	dtoa@n+4,___aomod@dividend+4
  2127  0013EC  C0BA  F085         	movff	dtoa@n+5,___aomod@dividend+5
  2128  0013F0  C0BB  F086         	movff	dtoa@n+6,___aomod@dividend+6
  2129  0013F4  C0BC  F087         	movff	dtoa@n+7,___aomod@dividend+7
  2130  0013F8  0E0A               	movlw	10
  2131  0013FA  6F88               	movwf	___aomod@divisor& (0+255),b
  2132  0013FC  0E00               	movlw	0
  2133  0013FE  6F89               	movwf	(___aomod@divisor+1)& (0+255),b
  2134  001400  0E00               	movlw	0
  2135  001402  6F8A               	movwf	(___aomod@divisor+2)& (0+255),b
  2136  001404  0E00               	movlw	0
  2137  001406  6F8B               	movwf	(___aomod@divisor+3)& (0+255),b
  2138  001408  0E00               	movlw	0
  2139  00140A  6F8C               	movwf	(___aomod@divisor+4)& (0+255),b
  2140  00140C  0E00               	movlw	0
  2141  00140E  6F8D               	movwf	(___aomod@divisor+5)& (0+255),b
  2142  001410  0E00               	movlw	0
  2143  001412  6F8E               	movwf	(___aomod@divisor+6)& (0+255),b
  2144  001414  0E00               	movlw	0
  2145  001416  6F8F               	movwf	(___aomod@divisor+7)& (0+255),b
  2146  001418  ECC3  F00D         	call	___aomod	;wreg free
  2147  00141C  C080  F0A5         	movff	?___aomod,??_dtoa
  2148  001420  C081  F0A6         	movff	?___aomod+1,??_dtoa+1
  2149  001424  C082  F0A7         	movff	?___aomod+2,??_dtoa+2
  2150  001428  C083  F0A8         	movff	?___aomod+3,??_dtoa+3
  2151  00142C  C084  F0A9         	movff	?___aomod+4,??_dtoa+4
  2152  001430  C085  F0AA         	movff	?___aomod+5,??_dtoa+5
  2153  001434  C086  F0AB         	movff	?___aomod+6,??_dtoa+6
  2154  001438  C087  F0AC         	movff	?___aomod+7,??_dtoa+7
  2155  00143C  C0A5  F038         	movff	??_dtoa,abs@a
  2156  001440  C0A7  F039         	movff	??_dtoa+2,abs@a+1
  2157  001444  ECE0  F010         	call	_abs	;wreg free
  2158  001448  5038               	movf	?_abs,w,c
  2159  00144A  0F30               	addlw	48
  2160  00144C  6EDF               	movwf	indf2,c
  2161                           
  2162                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  2163  00144E  0100               	movlb	0	; () banked
  2164  001450  07AF               	decf	dtoa@p& (0+255),f,b
  2165  001452  A0D8               	btfss	status,0,c
  2166  001454  07B0               	decf	(dtoa@p+1)& (0+255),f,b
  2167                           
  2168                           ; BSR set to: 0
  2169                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  2170  001456  07B1               	decf	dtoa@w& (0+255),f,b
  2171  001458  A0D8               	btfss	status,0,c
  2172  00145A  07B2               	decf	(dtoa@w+1)& (0+255),f,b
  2173                           
  2174                           ; BSR set to: 0
  2175                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  2176  00145C  C0B5  F080         	movff	dtoa@n,___aodiv@dividend
  2177  001460  C0B6  F081         	movff	dtoa@n+1,___aodiv@dividend+1
  2178  001464  C0B7  F082         	movff	dtoa@n+2,___aodiv@dividend+2
  2179  001468  C0B8  F083         	movff	dtoa@n+3,___aodiv@dividend+3
  2180  00146C  C0B9  F084         	movff	dtoa@n+4,___aodiv@dividend+4
  2181  001470  C0BA  F085         	movff	dtoa@n+5,___aodiv@dividend+5
  2182  001474  C0BB  F086         	movff	dtoa@n+6,___aodiv@dividend+6
  2183  001478  C0BC  F087         	movff	dtoa@n+7,___aodiv@dividend+7
  2184  00147C  0E0A               	movlw	10
  2185  00147E  6F88               	movwf	___aodiv@divisor& (0+255),b
  2186  001480  0E00               	movlw	0
  2187  001482  6F89               	movwf	(___aodiv@divisor+1)& (0+255),b
  2188  001484  0E00               	movlw	0
  2189  001486  6F8A               	movwf	(___aodiv@divisor+2)& (0+255),b
  2190  001488  0E00               	movlw	0
  2191  00148A  6F8B               	movwf	(___aodiv@divisor+3)& (0+255),b
  2192  00148C  0E00               	movlw	0
  2193  00148E  6F8C               	movwf	(___aodiv@divisor+4)& (0+255),b
  2194  001490  0E00               	movlw	0
  2195  001492  6F8D               	movwf	(___aodiv@divisor+5)& (0+255),b
  2196  001494  0E00               	movlw	0
  2197  001496  6F8E               	movwf	(___aodiv@divisor+6)& (0+255),b
  2198  001498  0E00               	movlw	0
  2199  00149A  6F8F               	movwf	(___aodiv@divisor+7)& (0+255),b
  2200  00149C  EC7E  F00C         	call	___aodiv	;wreg free
  2201  0014A0  C080  F0B5         	movff	?___aodiv,dtoa@n
  2202  0014A4  C081  F0B6         	movff	?___aodiv+1,dtoa@n+1
  2203  0014A8  C082  F0B7         	movff	?___aodiv+2,dtoa@n+2
  2204  0014AC  C083  F0B8         	movff	?___aodiv+3,dtoa@n+3
  2205  0014B0  C084  F0B9         	movff	?___aodiv+4,dtoa@n+4
  2206  0014B4  C085  F0BA         	movff	?___aodiv+5,dtoa@n+5
  2207  0014B8  C086  F0BB         	movff	?___aodiv+6,dtoa@n+6
  2208  0014BC  C087  F0BC         	movff	?___aodiv+7,dtoa@n+7
  2209  0014C0                     l2884:
  2210                           
  2211                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2212  0014C0  0100               	movlb	0	; () banked
  2213  0014C2  BFBE               	btfsc	(dtoa@i+1)& (0+255),7,b
  2214  0014C4  D01F               	goto	u2930
  2215  0014C6  51BE               	movf	(dtoa@i+1)& (0+255),w,b
  2216  0014C8  E103               	bnz	u2890
  2217  0014CA  05BD               	decf	dtoa@i& (0+255),w,b
  2218  0014CC  A0D8               	btfss	status,0,c
  2219  0014CE  D01A               	goto	u2930
  2220  0014D0                     u2890:
  2221                           
  2222                           ; BSR set to: 0
  2223  0014D0  51B5               	movf	dtoa@n& (0+255),w,b
  2224  0014D2  11B6               	iorwf	(dtoa@n+1)& (0+255),w,b
  2225  0014D4  11B7               	iorwf	(dtoa@n+2)& (0+255),w,b
  2226  0014D6  11B8               	iorwf	(dtoa@n+3)& (0+255),w,b
  2227  0014D8  11B9               	iorwf	(dtoa@n+4)& (0+255),w,b
  2228  0014DA  11BA               	iorwf	(dtoa@n+5)& (0+255),w,b
  2229  0014DC  11BB               	iorwf	(dtoa@n+6)& (0+255),w,b
  2230  0014DE  11BC               	iorwf	(dtoa@n+7)& (0+255),w,b
  2231  0014E0  A4D8               	btfss	status,2,c
  2232  0014E2  D771               	goto	l2874
  2233                           
  2234                           ; BSR set to: 0
  2235  0014E4  BFB0               	btfsc	(dtoa@p+1)& (0+255),7,b
  2236  0014E6  D005               	goto	u2910
  2237  0014E8  51B0               	movf	(dtoa@p+1)& (0+255),w,b
  2238  0014EA  E102               	bnz	u2911
  2239  0014EC  05AF               	decf	dtoa@p& (0+255),w,b
  2240  0014EE  B0D8               	btfsc	status,0,c
  2241  0014F0                     u2911:
  2242  0014F0  D76A               	goto	l2874
  2243  0014F2                     u2910:
  2244                           
  2245                           ; BSR set to: 0
  2246  0014F2  BFB2               	btfsc	(dtoa@w+1)& (0+255),7,b
  2247  0014F4  D007               	goto	u2930
  2248  0014F6  51B2               	movf	(dtoa@w+1)& (0+255),w,b
  2249  0014F8  E103               	bnz	u2920
  2250  0014FA  05B1               	decf	dtoa@w& (0+255),w,b
  2251  0014FC  A0D8               	btfss	status,0,c
  2252  0014FE  D002               	goto	u2930
  2253  001500                     u2920:
  2254                           
  2255                           ; BSR set to: 0
  2256  001500  B3D9               	btfsc	_flags& (0+255),1,b
  2257  001502  D761               	goto	l2874
  2258  001504                     u2930:
  2259                           
  2260                           ; BSR set to: 0
  2261                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  2262  001504  51B3               	movf	dtoa@s& (0+255),w,b
  2263  001506  11B4               	iorwf	(dtoa@s+1)& (0+255),w,b
  2264  001508  A4D8               	btfss	status,2,c
  2265  00150A  D002               	goto	u2950
  2266                           
  2267                           ; BSR set to: 0
  2268  00150C  A5D9               	btfss	_flags& (0+255),2,b
  2269  00150E  D017               	goto	l2908
  2270  001510                     u2950:
  2271                           
  2272                           ; BSR set to: 0
  2273                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  2274  001510  07BD               	decf	dtoa@i& (0+255),f,b
  2275  001512  A0D8               	btfss	status,0,c
  2276  001514  07BE               	decf	(dtoa@i+1)& (0+255),f,b
  2277                           
  2278                           ; BSR set to: 0
  2279                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  2280  001516  51B3               	movf	dtoa@s& (0+255),w,b
  2281  001518  11B4               	iorwf	(dtoa@s+1)& (0+255),w,b
  2282  00151A  A4D8               	btfss	status,2,c
  2283  00151C  D004               	goto	l2904
  2284                           
  2285                           ; BSR set to: 0
  2286  00151E  0E00               	movlw	0
  2287  001520  6FAE               	movwf	(_dtoa$428+1)& (0+255),b
  2288  001522  0E2B               	movlw	43
  2289  001524  D003               	goto	L1
  2290  001526                     l2904:
  2291                           
  2292                           ; BSR set to: 0
  2293  001526  0E00               	movlw	0
  2294  001528  6FAE               	movwf	(_dtoa$428+1)& (0+255),b
  2295  00152A  0E2D               	movlw	45
  2296  00152C                     L1:
  2297  00152C  6FAD               	movwf	_dtoa$428& (0+255),b
  2298                           
  2299                           ; BSR set to: 0
  2300  00152E  0EDB               	movlw	low _dbuf
  2301  001530  25BD               	addwf	dtoa@i& (0+255),w,b
  2302  001532  6ED9               	movwf	fsr2l,c
  2303  001534  0E00               	movlw	high _dbuf
  2304  001536  21BE               	addwfc	(dtoa@i+1)& (0+255),w,b
  2305  001538  6EDA               	movwf	fsr2h,c
  2306  00153A  C0AD  FFDF         	movff	_dtoa$428,indf2
  2307  00153E                     l2908:
  2308                           
  2309                           ; BSR set to: 0
  2310                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  2311  00153E  C09B  F090         	movff	dtoa@fp,pad@fp
  2312  001542  C09C  F091         	movff	dtoa@fp+1,pad@fp+1
  2313  001546  0EDB               	movlw	low _dbuf
  2314  001548  25BD               	addwf	dtoa@i& (0+255),w,b
  2315  00154A  6F92               	movwf	pad@buf& (0+255),b
  2316  00154C  0E00               	movlw	high _dbuf
  2317  00154E  21BE               	addwfc	(dtoa@i+1)& (0+255),w,b
  2318  001550  6F93               	movwf	(pad@buf+1)& (0+255),b
  2319  001552  C0B1  F094         	movff	dtoa@w,pad@p
  2320  001556  C0B2  F095         	movff	dtoa@w+1,pad@p+1
  2321  00155A  EC19  F00F         	call	_pad	;wreg free
  2322  00155E  C090  F09B         	movff	?_pad,?_dtoa
  2323  001562  C091  F09C         	movff	?_pad+1,?_dtoa+1
  2324  001566  0012               	return		;funcret
  2325  001568                     __end_of_dtoa:
  2326                           	opt callstack 0
  2327                           
  2328 ;; *************** function _pad *****************
  2329 ;; Defined at:
  2330 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2331 ;; Parameters:    Size  Location     Type
  2332 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  2333 ;;		 -> NULL(0), 
  2334 ;;  buf             2   18[BANK0 ] PTR unsigned char 
  2335 ;;		 -> dbuf(32), 
  2336 ;;  p               2   20[BANK0 ] int 
  2337 ;; Auto vars:     Size  Location     Type
  2338 ;;  w               2   25[BANK0 ] int 
  2339 ;;  i               2   23[BANK0 ] int 
  2340 ;; Return value:  Size  Location     Type
  2341 ;;                  2   16[BANK0 ] int 
  2342 ;; Registers used:
  2343 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2344 ;; Tracked objects:
  2345 ;;		On entry : 0/0
  2346 ;;		On exit  : 0/0
  2347 ;;		Unchanged: 0/0
  2348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2349 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2350 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2351 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2352 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2353 ;;Total ram usage:       11 bytes
  2354 ;; Hardware stack levels used:    1
  2355 ;; Hardware stack levels required when called:    8
  2356 ;; This function calls:
  2357 ;;		_fputc
  2358 ;;		_fputs
  2359 ;;		_strlen
  2360 ;; This function is called by:
  2361 ;;		_dtoa
  2362 ;; This function uses a non-reentrant model
  2363 ;;
  2364                           
  2365                           	psect	text11
  2366  001E32                     __ptext11:
  2367                           	opt callstack 0
  2368  001E32                     _pad:
  2369                           	opt callstack 18
  2370                           
  2371                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  2372                           
  2373                           ;incstack = 0
  2374  001E32  0100               	movlb	0	; () banked
  2375  001E34  A1D9               	btfss	_flags& (0+255),0,b
  2376  001E36  D00A               	goto	l2748
  2377                           
  2378                           ; BSR set to: 0
  2379                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  2380  001E38  C092  F089         	movff	pad@buf,fputs@s
  2381  001E3C  C093  F08A         	movff	pad@buf+1,fputs@s+1
  2382  001E40  C090  F08B         	movff	pad@fp,fputs@fp
  2383  001E44  C091  F08C         	movff	pad@fp+1,fputs@fp+1
  2384  001E48  ECC2  F010         	call	_fputs	;wreg free
  2385  001E4C                     l2748:
  2386                           
  2387                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  2388  001E4C  0100               	movlb	0	; () banked
  2389  001E4E  BF95               	btfsc	(pad@p+1)& (0+255),7,b
  2390  001E50  D005               	goto	l2752
  2391                           
  2392                           ; BSR set to: 0
  2393  001E52  C094  F099         	movff	pad@p,pad@w
  2394  001E56  C095  F09A         	movff	pad@p+1,pad@w+1
  2395  001E5A  D004               	goto	l259
  2396  001E5C                     l2752:
  2397                           
  2398                           ; BSR set to: 0
  2399  001E5C  0E00               	movlw	0
  2400  001E5E  6F9A               	movwf	(pad@w+1)& (0+255),b
  2401  001E60  0E00               	movlw	0
  2402  001E62  6F99               	movwf	pad@w& (0+255),b
  2403  001E64                     l259:
  2404                           
  2405                           ; BSR set to: 0
  2406                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  2407  001E64  0E00               	movlw	0
  2408  001E66  6F98               	movwf	(pad@i+1)& (0+255),b
  2409  001E68  0E00               	movlw	0
  2410  001E6A  6F97               	movwf	pad@i& (0+255),b
  2411                           
  2412                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2413  001E6C  D00D               	goto	l2758
  2414  001E6E                     l2754:
  2415                           
  2416                           ; BSR set to: 0
  2417                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  2418  001E6E  0E00               	movlw	0
  2419  001E70  6F81               	movwf	(fputc@c+1)& (0+255),b
  2420  001E72  0E20               	movlw	32
  2421  001E74  6F80               	movwf	fputc@c& (0+255),b
  2422  001E76  C090  F082         	movff	pad@fp,fputc@fp
  2423  001E7A  C091  F083         	movff	pad@fp+1,fputc@fp+1
  2424  001E7E  ECE2  F00F         	call	_fputc	;wreg free
  2425                           
  2426                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  2427  001E82  0100               	movlb	0	; () banked
  2428  001E84  4B97               	infsnz	pad@i& (0+255),f,b
  2429  001E86  2B98               	incf	(pad@i+1)& (0+255),f,b
  2430  001E88                     l2758:
  2431                           
  2432                           ; BSR set to: 0
  2433                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2434  001E88  5199               	movf	pad@w& (0+255),w,b
  2435  001E8A  5D97               	subwf	pad@i& (0+255),w,b
  2436  001E8C  5198               	movf	(pad@i+1)& (0+255),w,b
  2437  001E8E  0A80               	xorlw	128
  2438  001E90  6F96               	movwf	??_pad& (0+255),b
  2439  001E92  519A               	movf	(pad@w+1)& (0+255),w,b
  2440  001E94  0A80               	xorlw	128
  2441  001E96  5996               	subwfb	??_pad& (0+255),w,b
  2442  001E98  A0D8               	btfss	status,0,c
  2443  001E9A  D7E9               	goto	l2754
  2444                           
  2445                           ; BSR set to: 0
  2446                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  2447  001E9C  B1D9               	btfsc	_flags& (0+255),0,b
  2448  001E9E  D00A               	goto	l2762
  2449                           
  2450                           ; BSR set to: 0
  2451                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  2452  001EA0  C092  F089         	movff	pad@buf,fputs@s
  2453  001EA4  C093  F08A         	movff	pad@buf+1,fputs@s+1
  2454  001EA8  C090  F08B         	movff	pad@fp,fputs@fp
  2455  001EAC  C091  F08C         	movff	pad@fp+1,fputs@fp+1
  2456  001EB0  ECC2  F010         	call	_fputs	;wreg free
  2457  001EB4                     l2762:
  2458                           
  2459                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  2460  001EB4  C092  F036         	movff	pad@buf,strlen@s
  2461  001EB8  C093  F037         	movff	pad@buf+1,strlen@s+1
  2462  001EBC  ECFA  F010         	call	_strlen	;wreg free
  2463  001EC0  0100               	movlb	0	; () banked
  2464  001EC2  5199               	movf	pad@w& (0+255),w,b
  2465  001EC4  2436               	addwf	?_strlen,w,c
  2466  001EC6  6F90               	movwf	?_pad& (0+255),b
  2467  001EC8  519A               	movf	(pad@w+1)& (0+255),w,b
  2468  001ECA  2037               	addwfc	?_strlen+1,w,c
  2469  001ECC  6F91               	movwf	(?_pad+1)& (0+255),b
  2470                           
  2471                           ; BSR set to: 0
  2472  001ECE  0012               	return		;funcret
  2473  001ED0                     __end_of_pad:
  2474                           	opt callstack 0
  2475                           
  2476 ;; *************** function _strlen *****************
  2477 ;; Defined at:
  2478 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  2479 ;; Parameters:    Size  Location     Type
  2480 ;;  s               2   53[COMRAM] PTR const unsigned char 
  2481 ;;		 -> dbuf(32), 
  2482 ;; Auto vars:     Size  Location     Type
  2483 ;;  a               2   55[COMRAM] PTR const unsigned char 
  2484 ;;		 -> dbuf(32), 
  2485 ;; Return value:  Size  Location     Type
  2486 ;;                  2   53[COMRAM] unsigned int 
  2487 ;; Registers used:
  2488 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2489 ;; Tracked objects:
  2490 ;;		On entry : 0/0
  2491 ;;		On exit  : 0/0
  2492 ;;		Unchanged: 0/0
  2493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2494 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2495 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2497 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2498 ;;Total ram usage:        4 bytes
  2499 ;; Hardware stack levels used:    1
  2500 ;; Hardware stack levels required when called:    2
  2501 ;; This function calls:
  2502 ;;		Nothing
  2503 ;; This function is called by:
  2504 ;;		_pad
  2505 ;; This function uses a non-reentrant model
  2506 ;;
  2507                           
  2508                           	psect	text12
  2509  0021F4                     __ptext12:
  2510                           	opt callstack 0
  2511  0021F4                     _strlen:
  2512                           	opt callstack 23
  2513                           
  2514                           ; BSR set to: 0
  2515                           ;incstack = 0
  2516  0021F4  C036  F038         	movff	strlen@s,strlen@a
  2517  0021F8  C037  F039         	movff	strlen@s+1,strlen@a+1
  2518  0021FC  D002               	goto	l2738
  2519  0021FE                     l2736:
  2520  0021FE  4A36               	infsnz	strlen@s,f,c
  2521  002200  2A37               	incf	strlen@s+1,f,c
  2522  002202                     l2738:
  2523  002202  C036  FFD9         	movff	strlen@s,fsr2l
  2524  002206  C037  FFDA         	movff	strlen@s+1,fsr2h
  2525  00220A  50DF               	movf	indf2,w,c
  2526  00220C  A4D8               	btfss	status,2,c
  2527  00220E  D7F7               	goto	l2736
  2528  002210  5038               	movf	strlen@a,w,c
  2529  002212  5C36               	subwf	strlen@s,w,c
  2530  002214  6E36               	movwf	?_strlen,c
  2531  002216  5039               	movf	strlen@a+1,w,c
  2532  002218  5837               	subwfb	strlen@s+1,w,c
  2533  00221A  6E37               	movwf	?_strlen+1,c
  2534  00221C  0012               	return		;funcret
  2535  00221E                     __end_of_strlen:
  2536                           	opt callstack 0
  2537                           
  2538 ;; *************** function _fputs *****************
  2539 ;; Defined at:
  2540 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  2541 ;; Parameters:    Size  Location     Type
  2542 ;;  s               2    9[BANK0 ] PTR const unsigned char 
  2543 ;;		 -> dbuf(32), 
  2544 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
  2545 ;;		 -> NULL(0), 
  2546 ;; Auto vars:     Size  Location     Type
  2547 ;;  i               2   14[BANK0 ] int 
  2548 ;;  c               1   13[BANK0 ] unsigned char 
  2549 ;; Return value:  Size  Location     Type
  2550 ;;                  2    9[BANK0 ] int 
  2551 ;; Registers used:
  2552 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2553 ;; Tracked objects:
  2554 ;;		On entry : 0/0
  2555 ;;		On exit  : 0/0
  2556 ;;		Unchanged: 0/0
  2557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2558 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2559 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2561 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2562 ;;Total ram usage:        7 bytes
  2563 ;; Hardware stack levels used:    1
  2564 ;; Hardware stack levels required when called:    7
  2565 ;; This function calls:
  2566 ;;		_fputc
  2567 ;; This function is called by:
  2568 ;;		_pad
  2569 ;; This function uses a non-reentrant model
  2570 ;;
  2571                           
  2572                           	psect	text13
  2573  002184                     __ptext13:
  2574                           	opt callstack 0
  2575  002184                     _fputs:
  2576                           	opt callstack 18
  2577                           
  2578                           ;incstack = 0
  2579  002184  0E00               	movlw	0
  2580  002186  0100               	movlb	0	; () banked
  2581  002188  6F8F               	movwf	(fputs@i+1)& (0+255),b
  2582  00218A  0E00               	movlw	0
  2583  00218C  6F8E               	movwf	fputs@i& (0+255),b
  2584  00218E  D00C               	goto	l2732
  2585  002190                     l2728:
  2586                           
  2587                           ; BSR set to: 0
  2588  002190  C08D  F080         	movff	fputs@c,fputc@c
  2589  002194  6B81               	clrf	(fputc@c+1)& (0+255),b
  2590  002196  C08B  F082         	movff	fputs@fp,fputc@fp
  2591  00219A  C08C  F083         	movff	fputs@fp+1,fputc@fp+1
  2592  00219E  ECE2  F00F         	call	_fputc	;wreg free
  2593  0021A2  0100               	movlb	0	; () banked
  2594  0021A4  4B8E               	infsnz	fputs@i& (0+255),f,b
  2595  0021A6  2B8F               	incf	(fputs@i+1)& (0+255),f,b
  2596  0021A8                     l2732:
  2597                           
  2598                           ; BSR set to: 0
  2599  0021A8  518E               	movf	fputs@i& (0+255),w,b
  2600  0021AA  2589               	addwf	fputs@s& (0+255),w,b
  2601  0021AC  6ED9               	movwf	fsr2l,c
  2602  0021AE  518F               	movf	(fputs@i+1)& (0+255),w,b
  2603  0021B0  218A               	addwfc	(fputs@s+1)& (0+255),w,b
  2604  0021B2  6EDA               	movwf	fsr2h,c
  2605  0021B4  50DF               	movf	indf2,w,c
  2606  0021B6  6F8D               	movwf	fputs@c& (0+255),b
  2607  0021B8  518D               	movf	fputs@c& (0+255),w,b
  2608  0021BA  B4D8               	btfsc	status,2,c
  2609  0021BC  0012               	return	
  2610  0021BE  D7E8               	goto	l2728
  2611  0021C0                     __end_of_fputs:
  2612                           	opt callstack 0
  2613                           
  2614 ;; *************** function _fputc *****************
  2615 ;; Defined at:
  2616 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  2617 ;; Parameters:    Size  Location     Type
  2618 ;;  c               2    0[BANK0 ] int 
  2619 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  2620 ;;		 -> NULL(0), 
  2621 ;; Auto vars:     Size  Location     Type
  2622 ;;		None
  2623 ;; Return value:  Size  Location     Type
  2624 ;;                  2    0[BANK0 ] int 
  2625 ;; Registers used:
  2626 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2627 ;; Tracked objects:
  2628 ;;		On entry : 0/0
  2629 ;;		On exit  : 0/0
  2630 ;;		Unchanged: 0/0
  2631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2632 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2634 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2635 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2636 ;;Total ram usage:        9 bytes
  2637 ;; Hardware stack levels used:    1
  2638 ;; Hardware stack levels required when called:    6
  2639 ;; This function calls:
  2640 ;;		_putch
  2641 ;; This function is called by:
  2642 ;;		_pad
  2643 ;;		_vfpfcnvrt
  2644 ;;		_fputs
  2645 ;; This function uses a non-reentrant model
  2646 ;;
  2647                           
  2648                           	psect	text14
  2649  001FC4                     __ptext14:
  2650                           	opt callstack 0
  2651  001FC4                     _fputc:
  2652                           	opt callstack 21
  2653                           
  2654                           ; BSR set to: 0
  2655                           ;incstack = 0
  2656  001FC4  0100               	movlb	0	; () banked
  2657  001FC6  5182               	movf	fputc@fp& (0+255),w,b
  2658  001FC8  1183               	iorwf	(fputc@fp+1)& (0+255),w,b
  2659  001FCA  B4D8               	btfsc	status,2,c
  2660  001FCC  D004               	goto	u2590
  2661                           
  2662                           ; BSR set to: 0
  2663  001FCE  5182               	movf	fputc@fp& (0+255),w,b
  2664  001FD0  1183               	iorwf	(fputc@fp+1)& (0+255),w,b
  2665  001FD2  A4D8               	btfss	status,2,c
  2666  001FD4  D004               	goto	l2718
  2667  001FD6                     u2590:
  2668                           
  2669                           ; BSR set to: 0
  2670  001FD6  5180               	movf	fputc@c& (0+255),w,b
  2671  001FD8  EC7D  F011         	call	_putch
  2672  001FDC  0012               	return	
  2673  001FDE                     l2718:
  2674                           
  2675                           ; BSR set to: 0
  2676  001FDE  EE20 F004          	lfsr	2,4
  2677  001FE2  5182               	movf	fputc@fp& (0+255),w,b
  2678  001FE4  26D9               	addwf	fsr2l,f,c
  2679  001FE6  5183               	movf	(fputc@fp+1)& (0+255),w,b
  2680  001FE8  22DA               	addwfc	fsr2h,f,c
  2681  001FEA  50DE               	movf	postinc2,w,c
  2682  001FEC  10DE               	iorwf	postinc2,w,c
  2683  001FEE  B4D8               	btfsc	status,2,c
  2684  001FF0  D016               	goto	u2610
  2685                           
  2686                           ; BSR set to: 0
  2687  001FF2  EE20 F004          	lfsr	2,4
  2688  001FF6  5182               	movf	fputc@fp& (0+255),w,b
  2689  001FF8  26D9               	addwf	fsr2l,f,c
  2690  001FFA  5183               	movf	(fputc@fp+1)& (0+255),w,b
  2691  001FFC  22DA               	addwfc	fsr2h,f,c
  2692  001FFE  EE10 F002          	lfsr	1,2
  2693  002002  5182               	movf	fputc@fp& (0+255),w,b
  2694  002004  26E1               	addwf	fsr1l,f,c
  2695  002006  5183               	movf	(fputc@fp+1)& (0+255),w,b
  2696  002008  22E2               	addwfc	fsr1h,f,c
  2697  00200A  50DE               	movf	postinc2,w,c
  2698  00200C  5CE6               	subwf	postinc1,w,c
  2699  00200E  50E6               	movf	postinc1,w,c
  2700  002010  0A80               	xorlw	128
  2701  002012  6F88               	movwf	(??_fputc+4)& (0+255),b
  2702  002014  50DE               	movf	postinc2,w,c
  2703  002016  0A80               	xorlw	128
  2704  002018  5988               	subwfb	(??_fputc+4)& (0+255),w,b
  2705  00201A  B0D8               	btfsc	status,0,c
  2706  00201C  0012               	return	
  2707  00201E                     u2610:
  2708                           
  2709                           ; BSR set to: 0
  2710  00201E  EE20 F002          	lfsr	2,2
  2711  002022  5182               	movf	fputc@fp& (0+255),w,b
  2712  002024  26D9               	addwf	fsr2l,f,c
  2713  002026  5183               	movf	(fputc@fp+1)& (0+255),w,b
  2714  002028  22DA               	addwfc	fsr2h,f,c
  2715  00202A  2ADE               	incf	postinc2,f,c
  2716  00202C  0E00               	movlw	0
  2717  00202E  22DD               	addwfc	postdec2,f,c
  2718  002030  0012               	return		;funcret
  2719  002032                     __end_of_fputc:
  2720                           	opt callstack 0
  2721                           
  2722 ;; *************** function _putch *****************
  2723 ;; Defined at:
  2724 ;;		line 102 in file "lcd.c"
  2725 ;; Parameters:    Size  Location     Type
  2726 ;;  data            1    wreg     unsigned char 
  2727 ;; Auto vars:     Size  Location     Type
  2728 ;;  data            1   56[COMRAM] unsigned char 
  2729 ;; Return value:  Size  Location     Type
  2730 ;;                  1    wreg      void 
  2731 ;; Registers used:
  2732 ;;		wreg, status,2, status,0, cstack
  2733 ;; Tracked objects:
  2734 ;;		On entry : 0/0
  2735 ;;		On exit  : 0/0
  2736 ;;		Unchanged: 0/0
  2737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2739 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2741 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2742 ;;Total ram usage:        1 bytes
  2743 ;; Hardware stack levels used:    1
  2744 ;; Hardware stack levels required when called:    5
  2745 ;; This function calls:
  2746 ;;		_send_byte
  2747 ;; This function is called by:
  2748 ;;		_fputc
  2749 ;; This function uses a non-reentrant model
  2750 ;;
  2751                           
  2752                           	psect	text15
  2753  0022FA                     __ptext15:
  2754                           	opt callstack 0
  2755  0022FA                     _putch:
  2756                           	opt callstack 21
  2757                           
  2758                           ;incstack = 0
  2759                           ;putch@data stored from wreg
  2760  0022FA  6E39               	movwf	putch@data,c
  2761                           
  2762                           ;lcd.c: 103:     LATDbits.LATD2 = 1;
  2763  0022FC  848C               	bsf	3980,2,c	;volatile
  2764                           
  2765                           ;lcd.c: 104:     send_byte((unsigned char)data);
  2766  0022FE  5039               	movf	putch@data,w,c
  2767  002300  EC65  F011         	call	_send_byte
  2768  002304  0012               	return		;funcret
  2769  002306                     __end_of_putch:
  2770                           	opt callstack 0
  2771                           
  2772 ;; *************** function _send_byte *****************
  2773 ;; Defined at:
  2774 ;;		line 55 in file "lcd.c"
  2775 ;; Parameters:    Size  Location     Type
  2776 ;;  data            1    wreg     unsigned char 
  2777 ;; Auto vars:     Size  Location     Type
  2778 ;;  data            1   55[COMRAM] unsigned char 
  2779 ;; Return value:  Size  Location     Type
  2780 ;;                  1    wreg      void 
  2781 ;; Registers used:
  2782 ;;		wreg, status,2, status,0, cstack
  2783 ;; Tracked objects:
  2784 ;;		On entry : 0/0
  2785 ;;		On exit  : 0/0
  2786 ;;		Unchanged: 0/0
  2787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2789 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2791 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2792 ;;Total ram usage:        1 bytes
  2793 ;; Hardware stack levels used:    1
  2794 ;; Hardware stack levels required when called:    4
  2795 ;; This function calls:
  2796 ;;		_send_nibble
  2797 ;; This function is called by:
  2798 ;;		_lcdInst
  2799 ;;		_initLCD
  2800 ;;		_putch
  2801 ;; This function uses a non-reentrant model
  2802 ;;
  2803                           
  2804                           	psect	text16
  2805  0022CA                     __ptext16:
  2806                           	opt callstack 0
  2807  0022CA                     _send_byte:
  2808                           	opt callstack 24
  2809                           
  2810                           ;incstack = 0
  2811                           ;send_byte@data stored from wreg
  2812  0022CA  6E38               	movwf	send_byte@data,c
  2813                           
  2814                           ;lcd.c: 57:     send_nibble(data >> 4);
  2815  0022CC  3838               	swapf	send_byte@data,w,c
  2816  0022CE  0B0F               	andlw	15
  2817  0022D0  EC5A  F011         	call	_send_nibble
  2818                           
  2819                           ;lcd.c: 60:     send_nibble(data);
  2820  0022D4  5038               	movf	send_byte@data,w,c
  2821  0022D6  EC5A  F011         	call	_send_nibble
  2822  0022DA  0012               	return		;funcret
  2823  0022DC                     __end_of_send_byte:
  2824                           	opt callstack 0
  2825                           
  2826 ;; *************** function _send_nibble *****************
  2827 ;; Defined at:
  2828 ;;		line 44 in file "lcd.c"
  2829 ;; Parameters:    Size  Location     Type
  2830 ;;  data            1    wreg     unsigned char 
  2831 ;; Auto vars:     Size  Location     Type
  2832 ;;  data            1   54[COMRAM] unsigned char 
  2833 ;; Return value:  Size  Location     Type
  2834 ;;                  1    wreg      void 
  2835 ;; Registers used:
  2836 ;;		wreg, status,2, status,0, cstack
  2837 ;; Tracked objects:
  2838 ;;		On entry : 0/0
  2839 ;;		On exit  : 0/0
  2840 ;;		Unchanged: 0/0
  2841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2843 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2845 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2846 ;;Total ram usage:        1 bytes
  2847 ;; Hardware stack levels used:    1
  2848 ;; Hardware stack levels required when called:    3
  2849 ;; This function calls:
  2850 ;;		_pulse_e
  2851 ;; This function is called by:
  2852 ;;		_send_byte
  2853 ;;		_initLCD
  2854 ;; This function uses a non-reentrant model
  2855 ;;
  2856                           
  2857                           	psect	text17
  2858  0022B4                     __ptext17:
  2859                           	opt callstack 0
  2860  0022B4                     _send_nibble:
  2861                           	opt callstack 25
  2862                           
  2863                           ;incstack = 0
  2864                           ;send_nibble@data stored from wreg
  2865  0022B4  6E37               	movwf	send_nibble@data,c
  2866                           
  2867                           ;lcd.c: 46:     LATD = (unsigned char)(LATD & 0x0F);
  2868  0022B6  508C               	movf	3980,w,c	;volatile
  2869  0022B8  0B0F               	andlw	15
  2870  0022BA  6E8C               	movwf	3980,c	;volatile
  2871                           
  2872                           ;lcd.c: 47:     LATD = (unsigned char)((data << 4) | LATD);
  2873  0022BC  3837               	swapf	send_nibble@data,w,c
  2874  0022BE  0BF0               	andlw	240
  2875  0022C0  108C               	iorwf	3980,w,c	;volatile
  2876  0022C2  6E8C               	movwf	3980,c	;volatile
  2877                           
  2878                           ;lcd.c: 48:     pulse_e();
  2879  0022C4  EC0F  F011         	call	_pulse_e	;wreg free
  2880  0022C8  0012               	return		;funcret
  2881  0022CA                     __end_of_send_nibble:
  2882                           	opt callstack 0
  2883                           
  2884 ;; *************** function _pulse_e *****************
  2885 ;; Defined at:
  2886 ;;		line 28 in file "lcd.c"
  2887 ;; Parameters:    Size  Location     Type
  2888 ;;		None
  2889 ;; Auto vars:     Size  Location     Type
  2890 ;;  interruptSta    1   53[COMRAM] unsigned char 
  2891 ;; Return value:  Size  Location     Type
  2892 ;;                  1    wreg      void 
  2893 ;; Registers used:
  2894 ;;		wreg
  2895 ;; Tracked objects:
  2896 ;;		On entry : 0/0
  2897 ;;		On exit  : 0/0
  2898 ;;		Unchanged: 0/0
  2899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2901 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2903 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2904 ;;Total ram usage:        1 bytes
  2905 ;; Hardware stack levels used:    1
  2906 ;; Hardware stack levels required when called:    2
  2907 ;; This function calls:
  2908 ;;		Nothing
  2909 ;; This function is called by:
  2910 ;;		_send_nibble
  2911 ;; This function uses a non-reentrant model
  2912 ;;
  2913                           
  2914                           	psect	text18
  2915  00221E                     __ptext18:
  2916                           	opt callstack 0
  2917  00221E                     _pulse_e:
  2918                           	opt callstack 25
  2919                           
  2920                           ;lcd.c: 29:     unsigned char interruptState = INTCONbits.GIE;
  2921                           
  2922                           ;incstack = 0
  2923  00221E  0E00               	movlw	0
  2924  002220  BEF2               	btfsc	4082,7,c	;volatile
  2925  002222  0E01               	movlw	1
  2926  002224  6E36               	movwf	pulse_e@interruptState,c
  2927                           
  2928                           ;lcd.c: 30:     (INTCONbits.GIE = 0);
  2929  002226  9EF2               	bcf	4082,7,c	;volatile
  2930                           
  2931                           ;lcd.c: 31:     LATDbits.LATD3 = 1;
  2932  002228  868C               	bsf	3980,3,c	;volatile
  2933                           
  2934                           ;lcd.c: 34:     _delay((unsigned long)((25)*(10000000/4000000.0)));
  2935  00222A  0E14               	movlw	20
  2936  00222C                     u3397:
  2937  00222C  2EE8               	decfsz	wreg,f,c
  2938  00222E  D7FE               	bra	u3397
  2939  002230  D000               	nop2	
  2940                           
  2941                           ;lcd.c: 35:     LATDbits.LATD3 = 0;
  2942  002232  968C               	bcf	3980,3,c	;volatile
  2943                           
  2944                           ;lcd.c: 36:     _delay((unsigned long)((100)*(10000000/4000000.0)));
  2945  002234  0E53               	movlw	83
  2946  002236                     u3407:
  2947  002236  2EE8               	decfsz	wreg,f,c
  2948  002238  D7FE               	bra	u3407
  2949  00223A  F000               	nop	
  2950                           
  2951                           ;lcd.c: 37:     INTCONbits.GIE = interruptState;
  2952  00223C  B036               	btfsc	pulse_e@interruptState,0,c
  2953  00223E  D002               	bra	u2575
  2954  002240  9EF2               	bcf	4082,7,c	;volatile
  2955  002242  D001               	bra	u2576
  2956  002244                     u2575:
  2957  002244  8EF2               	bsf	4082,7,c	;volatile
  2958  002246                     u2576:
  2959  002246  0012               	return		;funcret
  2960  002248                     __end_of_pulse_e:
  2961                           	opt callstack 0
  2962                           
  2963 ;; *************** function _abs *****************
  2964 ;; Defined at:
  2965 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  2966 ;; Parameters:    Size  Location     Type
  2967 ;;  a               2   55[COMRAM] int 
  2968 ;; Auto vars:     Size  Location     Type
  2969 ;;		None
  2970 ;; Return value:  Size  Location     Type
  2971 ;;                  2   55[COMRAM] int 
  2972 ;; Registers used:
  2973 ;;		wreg, status,2, status,0
  2974 ;; Tracked objects:
  2975 ;;		On entry : 0/0
  2976 ;;		On exit  : 0/0
  2977 ;;		Unchanged: 0/0
  2978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2979 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2981 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2982 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2983 ;;Total ram usage:        4 bytes
  2984 ;; Hardware stack levels used:    1
  2985 ;; Hardware stack levels required when called:    2
  2986 ;; This function calls:
  2987 ;;		Nothing
  2988 ;; This function is called by:
  2989 ;;		_dtoa
  2990 ;; This function uses a non-reentrant model
  2991 ;;
  2992                           
  2993                           	psect	text19
  2994  0021C0                     __ptext19:
  2995                           	opt callstack 0
  2996  0021C0                     _abs:
  2997                           	opt callstack 24
  2998                           
  2999                           ;incstack = 0
  3000  0021C0  BE39               	btfsc	abs@a+1,7,c
  3001  0021C2  D005               	goto	u2680
  3002  0021C4  5039               	movf	abs@a+1,w,c
  3003  0021C6  E111               	bnz	l982
  3004  0021C8  0438               	decf	abs@a,w,c
  3005  0021CA  B0D8               	btfsc	status,0,c
  3006  0021CC  D00E               	goto	l982
  3007  0021CE                     u2680:
  3008  0021CE  C038  F090         	movff	abs@a,??_abs
  3009  0021D2  C039  F091         	movff	abs@a+1,??_abs+1
  3010  0021D6  0100               	movlb	0	; () banked
  3011  0021D8  1F90               	comf	??_abs& (0+255),f,b
  3012  0021DA  1F91               	comf	(??_abs+1)& (0+255),f,b
  3013  0021DC  4B90               	infsnz	??_abs& (0+255),f,b
  3014  0021DE  2B91               	incf	(??_abs+1)& (0+255),f,b
  3015  0021E0  C090  F038         	movff	??_abs,?_abs
  3016  0021E4  C091  F039         	movff	??_abs+1,?_abs+1
  3017  0021E8  0012               	return	
  3018  0021EA                     l982:
  3019  0021EA  C038  F038         	movff	abs@a,?_abs
  3020  0021EE  C039  F039         	movff	abs@a+1,?_abs+1
  3021  0021F2  0012               	return		;funcret
  3022  0021F4                     __end_of_abs:
  3023                           	opt callstack 0
  3024                           
  3025 ;; *************** function ___aomod *****************
  3026 ;; Defined at:
  3027 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  3028 ;; Parameters:    Size  Location     Type
  3029 ;;  dividend        8    0[BANK0 ] long long 
  3030 ;;  divisor         8    8[BANK0 ] long long 
  3031 ;; Auto vars:     Size  Location     Type
  3032 ;;  sign            1   54[COMRAM] unsigned char 
  3033 ;;  counter         1   53[COMRAM] unsigned char 
  3034 ;; Return value:  Size  Location     Type
  3035 ;;                  8    0[BANK0 ] long long 
  3036 ;; Registers used:
  3037 ;;		wreg, status,2, status,0
  3038 ;; Tracked objects:
  3039 ;;		On entry : 0/0
  3040 ;;		On exit  : 0/0
  3041 ;;		Unchanged: 0/0
  3042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3043 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3044 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3046 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3047 ;;Total ram usage:       18 bytes
  3048 ;; Hardware stack levels used:    1
  3049 ;; Hardware stack levels required when called:    2
  3050 ;; This function calls:
  3051 ;;		Nothing
  3052 ;; This function is called by:
  3053 ;;		_dtoa
  3054 ;; This function uses a non-reentrant model
  3055 ;;
  3056                           
  3057                           	psect	text20
  3058  001B86                     __ptext20:
  3059                           	opt callstack 0
  3060  001B86                     ___aomod:
  3061                           	opt callstack 24
  3062                           
  3063                           ;incstack = 0
  3064  001B86  0E00               	movlw	0
  3065  001B88  6E37               	movwf	___aomod@sign,c
  3066  001B8A  0100               	movlb	0	; () banked
  3067  001B8C  AF87               	btfss	(___aomod@dividend+7)& (0+255),7,b
  3068  001B8E  D012               	goto	l2822
  3069                           
  3070                           ; BSR set to: 0
  3071  001B90  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
  3072  001B92  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
  3073  001B94  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
  3074  001B96  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
  3075  001B98  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
  3076  001B9A  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
  3077  001B9C  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
  3078  001B9E  6D80               	negf	___aomod@dividend& (0+255),b
  3079  001BA0  0E00               	movlw	0
  3080  001BA2  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  3081  001BA4  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  3082  001BA6  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  3083  001BA8  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  3084  001BAA  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  3085  001BAC  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  3086  001BAE  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  3087                           
  3088                           ; BSR set to: 0
  3089  001BB0  0E01               	movlw	1
  3090  001BB2  6E37               	movwf	___aomod@sign,c
  3091  001BB4                     l2822:
  3092                           
  3093                           ; BSR set to: 0
  3094  001BB4  AF8F               	btfss	(___aomod@divisor+7)& (0+255),7,b
  3095  001BB6  D010               	goto	l2826
  3096                           
  3097                           ; BSR set to: 0
  3098  001BB8  1F8F               	comf	(___aomod@divisor+7)& (0+255),f,b
  3099  001BBA  1F8E               	comf	(___aomod@divisor+6)& (0+255),f,b
  3100  001BBC  1F8D               	comf	(___aomod@divisor+5)& (0+255),f,b
  3101  001BBE  1F8C               	comf	(___aomod@divisor+4)& (0+255),f,b
  3102  001BC0  1F8B               	comf	(___aomod@divisor+3)& (0+255),f,b
  3103  001BC2  1F8A               	comf	(___aomod@divisor+2)& (0+255),f,b
  3104  001BC4  1F89               	comf	(___aomod@divisor+1)& (0+255),f,b
  3105  001BC6  6D88               	negf	___aomod@divisor& (0+255),b
  3106  001BC8  0E00               	movlw	0
  3107  001BCA  2389               	addwfc	(___aomod@divisor+1)& (0+255),f,b
  3108  001BCC  238A               	addwfc	(___aomod@divisor+2)& (0+255),f,b
  3109  001BCE  238B               	addwfc	(___aomod@divisor+3)& (0+255),f,b
  3110  001BD0  238C               	addwfc	(___aomod@divisor+4)& (0+255),f,b
  3111  001BD2  238D               	addwfc	(___aomod@divisor+5)& (0+255),f,b
  3112  001BD4  238E               	addwfc	(___aomod@divisor+6)& (0+255),f,b
  3113  001BD6  238F               	addwfc	(___aomod@divisor+7)& (0+255),f,b
  3114  001BD8                     l2826:
  3115                           
  3116                           ; BSR set to: 0
  3117  001BD8  5188               	movf	___aomod@divisor& (0+255),w,b
  3118  001BDA  1189               	iorwf	(___aomod@divisor+1)& (0+255),w,b
  3119  001BDC  118A               	iorwf	(___aomod@divisor+2)& (0+255),w,b
  3120  001BDE  118B               	iorwf	(___aomod@divisor+3)& (0+255),w,b
  3121  001BE0  118C               	iorwf	(___aomod@divisor+4)& (0+255),w,b
  3122  001BE2  118D               	iorwf	(___aomod@divisor+5)& (0+255),w,b
  3123  001BE4  118E               	iorwf	(___aomod@divisor+6)& (0+255),w,b
  3124  001BE6  118F               	iorwf	(___aomod@divisor+7)& (0+255),w,b
  3125  001BE8  B4D8               	btfsc	status,2,c
  3126  001BEA  D03C               	goto	l2842
  3127                           
  3128                           ; BSR set to: 0
  3129  001BEC  0E01               	movlw	1
  3130  001BEE  6E36               	movwf	___aomod@counter,c
  3131  001BF0  D00A               	goto	l2832
  3132  001BF2                     l2830:
  3133                           
  3134                           ; BSR set to: 0
  3135  001BF2  90D8               	bcf	status,0,c
  3136  001BF4  3788               	rlcf	___aomod@divisor& (0+255),f,b
  3137  001BF6  3789               	rlcf	(___aomod@divisor+1)& (0+255),f,b
  3138  001BF8  378A               	rlcf	(___aomod@divisor+2)& (0+255),f,b
  3139  001BFA  378B               	rlcf	(___aomod@divisor+3)& (0+255),f,b
  3140  001BFC  378C               	rlcf	(___aomod@divisor+4)& (0+255),f,b
  3141  001BFE  378D               	rlcf	(___aomod@divisor+5)& (0+255),f,b
  3142  001C00  378E               	rlcf	(___aomod@divisor+6)& (0+255),f,b
  3143  001C02  378F               	rlcf	(___aomod@divisor+7)& (0+255),f,b
  3144  001C04  2A36               	incf	___aomod@counter,f,c
  3145  001C06                     l2832:
  3146                           
  3147                           ; BSR set to: 0
  3148  001C06  AF8F               	btfss	(___aomod@divisor+7)& (0+255),7,b
  3149  001C08  D7F4               	goto	l2830
  3150  001C0A                     u2790:
  3151                           
  3152                           ; BSR set to: 0
  3153  001C0A  5188               	movf	___aomod@divisor& (0+255),w,b
  3154  001C0C  5D80               	subwf	___aomod@dividend& (0+255),w,b
  3155  001C0E  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
  3156  001C10  5981               	subwfb	(___aomod@dividend+1)& (0+255),w,b
  3157  001C12  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
  3158  001C14  5982               	subwfb	(___aomod@dividend+2)& (0+255),w,b
  3159  001C16  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
  3160  001C18  5983               	subwfb	(___aomod@dividend+3)& (0+255),w,b
  3161  001C1A  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
  3162  001C1C  5984               	subwfb	(___aomod@dividend+4)& (0+255),w,b
  3163  001C1E  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
  3164  001C20  5985               	subwfb	(___aomod@dividend+5)& (0+255),w,b
  3165  001C22  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
  3166  001C24  5986               	subwfb	(___aomod@dividend+6)& (0+255),w,b
  3167  001C26  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
  3168  001C28  5987               	subwfb	(___aomod@dividend+7)& (0+255),w,b
  3169  001C2A  A0D8               	btfss	status,0,c
  3170  001C2C  D010               	goto	l2838
  3171                           
  3172                           ; BSR set to: 0
  3173  001C2E  5188               	movf	___aomod@divisor& (0+255),w,b
  3174  001C30  5F80               	subwf	___aomod@dividend& (0+255),f,b
  3175  001C32  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
  3176  001C34  5B81               	subwfb	(___aomod@dividend+1)& (0+255),f,b
  3177  001C36  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
  3178  001C38  5B82               	subwfb	(___aomod@dividend+2)& (0+255),f,b
  3179  001C3A  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
  3180  001C3C  5B83               	subwfb	(___aomod@dividend+3)& (0+255),f,b
  3181  001C3E  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
  3182  001C40  5B84               	subwfb	(___aomod@dividend+4)& (0+255),f,b
  3183  001C42  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
  3184  001C44  5B85               	subwfb	(___aomod@dividend+5)& (0+255),f,b
  3185  001C46  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
  3186  001C48  5B86               	subwfb	(___aomod@dividend+6)& (0+255),f,b
  3187  001C4A  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
  3188  001C4C  5B87               	subwfb	(___aomod@dividend+7)& (0+255),f,b
  3189  001C4E                     l2838:
  3190                           
  3191                           ; BSR set to: 0
  3192  001C4E  90D8               	bcf	status,0,c
  3193  001C50  338F               	rrcf	(___aomod@divisor+7)& (0+255),f,b
  3194  001C52  338E               	rrcf	(___aomod@divisor+6)& (0+255),f,b
  3195  001C54  338D               	rrcf	(___aomod@divisor+5)& (0+255),f,b
  3196  001C56  338C               	rrcf	(___aomod@divisor+4)& (0+255),f,b
  3197  001C58  338B               	rrcf	(___aomod@divisor+3)& (0+255),f,b
  3198  001C5A  338A               	rrcf	(___aomod@divisor+2)& (0+255),f,b
  3199  001C5C  3389               	rrcf	(___aomod@divisor+1)& (0+255),f,b
  3200  001C5E  3388               	rrcf	___aomod@divisor& (0+255),f,b
  3201                           
  3202                           ; BSR set to: 0
  3203  001C60  2E36               	decfsz	___aomod@counter,f,c
  3204  001C62  D7D3               	goto	u2790
  3205  001C64                     l2842:
  3206                           
  3207                           ; BSR set to: 0
  3208  001C64  5037               	movf	___aomod@sign,w,c
  3209  001C66  B4D8               	btfsc	status,2,c
  3210  001C68  D010               	goto	l2846
  3211                           
  3212                           ; BSR set to: 0
  3213  001C6A  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
  3214  001C6C  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
  3215  001C6E  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
  3216  001C70  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
  3217  001C72  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
  3218  001C74  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
  3219  001C76  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
  3220  001C78  6D80               	negf	___aomod@dividend& (0+255),b
  3221  001C7A  0E00               	movlw	0
  3222  001C7C  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  3223  001C7E  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  3224  001C80  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  3225  001C82  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  3226  001C84  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  3227  001C86  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  3228  001C88  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  3229  001C8A                     l2846:
  3230                           
  3231                           ; BSR set to: 0
  3232  001C8A  C080  F080         	movff	___aomod@dividend,?___aomod
  3233  001C8E  C081  F081         	movff	___aomod@dividend+1,?___aomod+1
  3234  001C92  C082  F082         	movff	___aomod@dividend+2,?___aomod+2
  3235  001C96  C083  F083         	movff	___aomod@dividend+3,?___aomod+3
  3236  001C9A  C084  F084         	movff	___aomod@dividend+4,?___aomod+4
  3237  001C9E  C085  F085         	movff	___aomod@dividend+5,?___aomod+5
  3238  001CA2  C086  F086         	movff	___aomod@dividend+6,?___aomod+6
  3239  001CA6  C087  F087         	movff	___aomod@dividend+7,?___aomod+7
  3240                           
  3241                           ; BSR set to: 0
  3242  001CAA  0012               	return		;funcret
  3243  001CAC                     __end_of___aomod:
  3244                           	opt callstack 0
  3245                           
  3246 ;; *************** function ___aodiv *****************
  3247 ;; Defined at:
  3248 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  3249 ;; Parameters:    Size  Location     Type
  3250 ;;  dividend        8    0[BANK0 ] long long 
  3251 ;;  divisor         8    8[BANK0 ] long long 
  3252 ;; Auto vars:     Size  Location     Type
  3253 ;;  quotient        8   18[BANK0 ] long long 
  3254 ;;  sign            1   17[BANK0 ] unsigned char 
  3255 ;;  counter         1   16[BANK0 ] unsigned char 
  3256 ;; Return value:  Size  Location     Type
  3257 ;;                  8    0[BANK0 ] long long 
  3258 ;; Registers used:
  3259 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3260 ;; Tracked objects:
  3261 ;;		On entry : 0/0
  3262 ;;		On exit  : 0/0
  3263 ;;		Unchanged: 0/0
  3264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3265 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3266 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3268 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3269 ;;Total ram usage:       26 bytes
  3270 ;; Hardware stack levels used:    1
  3271 ;; Hardware stack levels required when called:    2
  3272 ;; This function calls:
  3273 ;;		Nothing
  3274 ;; This function is called by:
  3275 ;;		_dtoa
  3276 ;; This function uses a non-reentrant model
  3277 ;;
  3278                           
  3279                           	psect	text21
  3280  0018FC                     __ptext21:
  3281                           	opt callstack 0
  3282  0018FC                     ___aodiv:
  3283                           	opt callstack 24
  3284                           
  3285                           ; BSR set to: 0
  3286                           ;incstack = 0
  3287  0018FC  0E00               	movlw	0
  3288  0018FE  0100               	movlb	0	; () banked
  3289  001900  6F91               	movwf	___aodiv@sign& (0+255),b
  3290                           
  3291                           ; BSR set to: 0
  3292  001902  AF8F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  3293  001904  D012               	goto	l2778
  3294                           
  3295                           ; BSR set to: 0
  3296  001906  1F8F               	comf	(___aodiv@divisor+7)& (0+255),f,b
  3297  001908  1F8E               	comf	(___aodiv@divisor+6)& (0+255),f,b
  3298  00190A  1F8D               	comf	(___aodiv@divisor+5)& (0+255),f,b
  3299  00190C  1F8C               	comf	(___aodiv@divisor+4)& (0+255),f,b
  3300  00190E  1F8B               	comf	(___aodiv@divisor+3)& (0+255),f,b
  3301  001910  1F8A               	comf	(___aodiv@divisor+2)& (0+255),f,b
  3302  001912  1F89               	comf	(___aodiv@divisor+1)& (0+255),f,b
  3303  001914  6D88               	negf	___aodiv@divisor& (0+255),b
  3304  001916  0E00               	movlw	0
  3305  001918  2389               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
  3306  00191A  238A               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
  3307  00191C  238B               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
  3308  00191E  238C               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
  3309  001920  238D               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
  3310  001922  238E               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
  3311  001924  238F               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
  3312                           
  3313                           ; BSR set to: 0
  3314  001926  0E01               	movlw	1
  3315  001928  6F91               	movwf	___aodiv@sign& (0+255),b
  3316  00192A                     l2778:
  3317                           
  3318                           ; BSR set to: 0
  3319  00192A  AF87               	btfss	(___aodiv@dividend+7)& (0+255),7,b
  3320  00192C  D012               	goto	l2784
  3321                           
  3322                           ; BSR set to: 0
  3323  00192E  1F87               	comf	(___aodiv@dividend+7)& (0+255),f,b
  3324  001930  1F86               	comf	(___aodiv@dividend+6)& (0+255),f,b
  3325  001932  1F85               	comf	(___aodiv@dividend+5)& (0+255),f,b
  3326  001934  1F84               	comf	(___aodiv@dividend+4)& (0+255),f,b
  3327  001936  1F83               	comf	(___aodiv@dividend+3)& (0+255),f,b
  3328  001938  1F82               	comf	(___aodiv@dividend+2)& (0+255),f,b
  3329  00193A  1F81               	comf	(___aodiv@dividend+1)& (0+255),f,b
  3330  00193C  6D80               	negf	___aodiv@dividend& (0+255),b
  3331  00193E  0E00               	movlw	0
  3332  001940  2381               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
  3333  001942  2382               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
  3334  001944  2383               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
  3335  001946  2384               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
  3336  001948  2385               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
  3337  00194A  2386               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
  3338  00194C  2387               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
  3339                           
  3340                           ; BSR set to: 0
  3341  00194E  0E01               	movlw	1
  3342  001950  1B91               	xorwf	___aodiv@sign& (0+255),f,b
  3343  001952                     l2784:
  3344                           
  3345                           ; BSR set to: 0
  3346  001952  EE20  F092         	lfsr	2,___aodiv@quotient
  3347  001956  0E07               	movlw	7
  3348  001958                     u2711:
  3349  001958  6ADE               	clrf	postinc2,c
  3350  00195A  06E8               	decf	wreg,f,c
  3351  00195C  E2FD               	bc	u2711
  3352                           
  3353                           ; BSR set to: 0
  3354  00195E  5188               	movf	___aodiv@divisor& (0+255),w,b
  3355  001960  1189               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
  3356  001962  118A               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
  3357  001964  118B               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
  3358  001966  118C               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
  3359  001968  118D               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
  3360  00196A  118E               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
  3361  00196C  118F               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
  3362  00196E  B4D8               	btfsc	status,2,c
  3363  001970  D046               	goto	l2806
  3364                           
  3365                           ; BSR set to: 0
  3366  001972  0E01               	movlw	1
  3367  001974  6F90               	movwf	___aodiv@counter& (0+255),b
  3368  001976  D00A               	goto	l2792
  3369  001978                     l2790:
  3370                           
  3371                           ; BSR set to: 0
  3372  001978  90D8               	bcf	status,0,c
  3373  00197A  3788               	rlcf	___aodiv@divisor& (0+255),f,b
  3374  00197C  3789               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
  3375  00197E  378A               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
  3376  001980  378B               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
  3377  001982  378C               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
  3378  001984  378D               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
  3379  001986  378E               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
  3380  001988  378F               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
  3381  00198A  2B90               	incf	___aodiv@counter& (0+255),f,b
  3382  00198C                     l2792:
  3383                           
  3384                           ; BSR set to: 0
  3385  00198C  AF8F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  3386  00198E  D7F4               	goto	l2790
  3387  001990                     u2730:
  3388                           
  3389                           ; BSR set to: 0
  3390  001990  90D8               	bcf	status,0,c
  3391  001992  3792               	rlcf	___aodiv@quotient& (0+255),f,b
  3392  001994  3793               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
  3393  001996  3794               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
  3394  001998  3795               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
  3395  00199A  3796               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
  3396  00199C  3797               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
  3397  00199E  3798               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
  3398  0019A0  3799               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
  3399                           
  3400                           ; BSR set to: 0
  3401  0019A2  5188               	movf	___aodiv@divisor& (0+255),w,b
  3402  0019A4  5D80               	subwf	___aodiv@dividend& (0+255),w,b
  3403  0019A6  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
  3404  0019A8  5981               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
  3405  0019AA  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  3406  0019AC  5982               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
  3407  0019AE  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  3408  0019B0  5983               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
  3409  0019B2  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  3410  0019B4  5984               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
  3411  0019B6  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  3412  0019B8  5985               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
  3413  0019BA  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  3414  0019BC  5986               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
  3415  0019BE  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  3416  0019C0  5987               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
  3417  0019C2  A0D8               	btfss	status,0,c
  3418  0019C4  D011               	goto	l2802
  3419                           
  3420                           ; BSR set to: 0
  3421  0019C6  5188               	movf	___aodiv@divisor& (0+255),w,b
  3422  0019C8  5F80               	subwf	___aodiv@dividend& (0+255),f,b
  3423  0019CA  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
  3424  0019CC  5B81               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
  3425  0019CE  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  3426  0019D0  5B82               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
  3427  0019D2  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  3428  0019D4  5B83               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
  3429  0019D6  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  3430  0019D8  5B84               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
  3431  0019DA  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  3432  0019DC  5B85               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
  3433  0019DE  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  3434  0019E0  5B86               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
  3435  0019E2  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  3436  0019E4  5B87               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
  3437                           
  3438                           ; BSR set to: 0
  3439  0019E6  8192               	bsf	___aodiv@quotient& (0+255),0,b
  3440  0019E8                     l2802:
  3441                           
  3442                           ; BSR set to: 0
  3443  0019E8  90D8               	bcf	status,0,c
  3444  0019EA  338F               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
  3445  0019EC  338E               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
  3446  0019EE  338D               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
  3447  0019F0  338C               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
  3448  0019F2  338B               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
  3449  0019F4  338A               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
  3450  0019F6  3389               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
  3451  0019F8  3388               	rrcf	___aodiv@divisor& (0+255),f,b
  3452                           
  3453                           ; BSR set to: 0
  3454  0019FA  2F90               	decfsz	___aodiv@counter& (0+255),f,b
  3455  0019FC  D7C9               	goto	u2730
  3456  0019FE                     l2806:
  3457                           
  3458                           ; BSR set to: 0
  3459  0019FE  5191               	movf	___aodiv@sign& (0+255),w,b
  3460  001A00  B4D8               	btfsc	status,2,c
  3461  001A02  D010               	goto	l2810
  3462                           
  3463                           ; BSR set to: 0
  3464  001A04  1F99               	comf	(___aodiv@quotient+7)& (0+255),f,b
  3465  001A06  1F98               	comf	(___aodiv@quotient+6)& (0+255),f,b
  3466  001A08  1F97               	comf	(___aodiv@quotient+5)& (0+255),f,b
  3467  001A0A  1F96               	comf	(___aodiv@quotient+4)& (0+255),f,b
  3468  001A0C  1F95               	comf	(___aodiv@quotient+3)& (0+255),f,b
  3469  001A0E  1F94               	comf	(___aodiv@quotient+2)& (0+255),f,b
  3470  001A10  1F93               	comf	(___aodiv@quotient+1)& (0+255),f,b
  3471  001A12  6D92               	negf	___aodiv@quotient& (0+255),b
  3472  001A14  0E00               	movlw	0
  3473  001A16  2393               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
  3474  001A18  2394               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
  3475  001A1A  2395               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
  3476  001A1C  2396               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
  3477  001A1E  2397               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
  3478  001A20  2398               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
  3479  001A22  2399               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
  3480  001A24                     l2810:
  3481                           
  3482                           ; BSR set to: 0
  3483  001A24  C092  F080         	movff	___aodiv@quotient,?___aodiv
  3484  001A28  C093  F081         	movff	___aodiv@quotient+1,?___aodiv+1
  3485  001A2C  C094  F082         	movff	___aodiv@quotient+2,?___aodiv+2
  3486  001A30  C095  F083         	movff	___aodiv@quotient+3,?___aodiv+3
  3487  001A34  C096  F084         	movff	___aodiv@quotient+4,?___aodiv+4
  3488  001A38  C097  F085         	movff	___aodiv@quotient+5,?___aodiv+5
  3489  001A3C  C098  F086         	movff	___aodiv@quotient+6,?___aodiv+6
  3490  001A40  C099  F087         	movff	___aodiv@quotient+7,?___aodiv+7
  3491                           
  3492                           ; BSR set to: 0
  3493  001A44  0012               	return		;funcret
  3494  001A46                     __end_of___aodiv:
  3495                           	opt callstack 0
  3496                           
  3497 ;; *************** function _brake *****************
  3498 ;; Defined at:
  3499 ;;		line 43 in file "main.c"
  3500 ;; Parameters:    Size  Location     Type
  3501 ;;		None
  3502 ;; Auto vars:     Size  Location     Type
  3503 ;;		None
  3504 ;; Return value:  Size  Location     Type
  3505 ;;                  1    wreg      void 
  3506 ;; Registers used:
  3507 ;;		wreg, status,2, status,0, cstack
  3508 ;; Tracked objects:
  3509 ;;		On entry : 0/0
  3510 ;;		On exit  : 0/0
  3511 ;;		Unchanged: 0/0
  3512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3517 ;;Total ram usage:        0 bytes
  3518 ;; Hardware stack levels used:    1
  3519 ;; Hardware stack levels required when called:    4
  3520 ;; This function calls:
  3521 ;;		_I2C_Master_Start
  3522 ;;		_I2C_Master_Stop
  3523 ;;		_I2C_Master_Write
  3524 ;; This function is called by:
  3525 ;;		_main
  3526 ;; This function uses a non-reentrant model
  3527 ;;
  3528                           
  3529                           	psect	text22
  3530  002292                     __ptext22:
  3531                           	opt callstack 0
  3532  002292                     _brake:
  3533                           	opt callstack 26
  3534                           
  3535                           ;main.c: 44:                         I2C_Master_Start();
  3536                           
  3537                           ; BSR set to: 0
  3538                           ;incstack = 0
  3539  002292  EC8C  F011         	call	_I2C_Master_Start	;wreg free
  3540                           
  3541                           ;main.c: 45:                 I2C_Master_Write(0b00010000);
  3542  002296  0E00               	movlw	0
  3543  002298  6E38               	movwf	I2C_Master_Write@byteToWrite+1,c
  3544  00229A  0E10               	movlw	16
  3545  00229C  6E37               	movwf	I2C_Master_Write@byteToWrite,c
  3546  00229E  EC83  F011         	call	_I2C_Master_Write	;wreg free
  3547                           
  3548                           ;main.c: 46:                 I2C_Master_Write('9');
  3549  0022A2  0E00               	movlw	0
  3550  0022A4  6E38               	movwf	I2C_Master_Write@byteToWrite+1,c
  3551  0022A6  0E39               	movlw	57
  3552  0022A8  6E37               	movwf	I2C_Master_Write@byteToWrite,c
  3553  0022AA  EC83  F011         	call	_I2C_Master_Write	;wreg free
  3554                           
  3555                           ;main.c: 47:                 I2C_Master_Stop();
  3556  0022AE  EC88  F011         	call	_I2C_Master_Stop	;wreg free
  3557  0022B2  0012               	return		;funcret
  3558  0022B4                     __end_of_brake:
  3559                           	opt callstack 0
  3560                           
  3561 ;; *************** function _I2C_Master_Write *****************
  3562 ;; Defined at:
  3563 ;;		line 70 in file "I2C.c"
  3564 ;; Parameters:    Size  Location     Type
  3565 ;;  byteToWrite     2   54[COMRAM] unsigned int 
  3566 ;; Auto vars:     Size  Location     Type
  3567 ;;		None
  3568 ;; Return value:  Size  Location     Type
  3569 ;;                  1    wreg      void 
  3570 ;; Registers used:
  3571 ;;		wreg, status,2, status,0, cstack
  3572 ;; Tracked objects:
  3573 ;;		On entry : 0/0
  3574 ;;		On exit  : 0/0
  3575 ;;		Unchanged: 0/0
  3576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3577 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3580 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3581 ;;Total ram usage:        2 bytes
  3582 ;; Hardware stack levels used:    1
  3583 ;; Hardware stack levels required when called:    3
  3584 ;; This function calls:
  3585 ;;		_I2C_Master_Wait
  3586 ;; This function is called by:
  3587 ;;		_setup
  3588 ;;		_brake
  3589 ;;		_start
  3590 ;; This function uses a non-reentrant model
  3591 ;;
  3592                           
  3593                           	psect	text23
  3594  002306                     __ptext23:
  3595                           	opt callstack 0
  3596  002306                     _I2C_Master_Write:
  3597                           	opt callstack 26
  3598                           
  3599                           ;I2C.c: 71:     I2C_Master_Wait();
  3600                           
  3601                           ;incstack = 0
  3602  002306  EC6E  F011         	call	_I2C_Master_Wait	;wreg free
  3603                           
  3604                           ;I2C.c: 74:     SSPBUF = byteToWrite;
  3605  00230A  C037  FFC9         	movff	I2C_Master_Write@byteToWrite,4041	;volatile
  3606  00230E  0012               	return		;funcret
  3607  002310                     __end_of_I2C_Master_Write:
  3608                           	opt callstack 0
  3609                           
  3610 ;; *************** function _I2C_Master_Stop *****************
  3611 ;; Defined at:
  3612 ;;		line 65 in file "I2C.c"
  3613 ;; Parameters:    Size  Location     Type
  3614 ;;		None
  3615 ;; Auto vars:     Size  Location     Type
  3616 ;;		None
  3617 ;; Return value:  Size  Location     Type
  3618 ;;                  1    wreg      void 
  3619 ;; Registers used:
  3620 ;;		wreg, status,2, status,0, cstack
  3621 ;; Tracked objects:
  3622 ;;		On entry : 0/0
  3623 ;;		On exit  : 0/0
  3624 ;;		Unchanged: 0/0
  3625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3630 ;;Total ram usage:        0 bytes
  3631 ;; Hardware stack levels used:    1
  3632 ;; Hardware stack levels required when called:    3
  3633 ;; This function calls:
  3634 ;;		_I2C_Master_Wait
  3635 ;; This function is called by:
  3636 ;;		_setup
  3637 ;;		_brake
  3638 ;;		_start
  3639 ;; This function uses a non-reentrant model
  3640 ;;
  3641                           
  3642                           	psect	text24
  3643  002310                     __ptext24:
  3644                           	opt callstack 0
  3645  002310                     _I2C_Master_Stop:
  3646                           	opt callstack 26
  3647                           
  3648                           ;I2C.c: 66:     I2C_Master_Wait();
  3649                           
  3650                           ;incstack = 0
  3651  002310  EC6E  F011         	call	_I2C_Master_Wait	;wreg free
  3652                           
  3653                           ;I2C.c: 67:     SSPCON2bits.PEN = 1;
  3654  002314  84C5               	bsf	4037,2,c	;volatile
  3655  002316  0012               	return		;funcret
  3656  002318                     __end_of_I2C_Master_Stop:
  3657                           	opt callstack 0
  3658                           
  3659 ;; *************** function _I2C_Master_Start *****************
  3660 ;; Defined at:
  3661 ;;		line 55 in file "I2C.c"
  3662 ;; Parameters:    Size  Location     Type
  3663 ;;		None
  3664 ;; Auto vars:     Size  Location     Type
  3665 ;;		None
  3666 ;; Return value:  Size  Location     Type
  3667 ;;                  1    wreg      void 
  3668 ;; Registers used:
  3669 ;;		wreg, status,2, status,0, cstack
  3670 ;; Tracked objects:
  3671 ;;		On entry : 0/0
  3672 ;;		On exit  : 0/0
  3673 ;;		Unchanged: 0/0
  3674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3679 ;;Total ram usage:        0 bytes
  3680 ;; Hardware stack levels used:    1
  3681 ;; Hardware stack levels required when called:    3
  3682 ;; This function calls:
  3683 ;;		_I2C_Master_Wait
  3684 ;; This function is called by:
  3685 ;;		_setup
  3686 ;;		_brake
  3687 ;;		_start
  3688 ;; This function uses a non-reentrant model
  3689 ;;
  3690                           
  3691                           	psect	text25
  3692  002318                     __ptext25:
  3693                           	opt callstack 0
  3694  002318                     _I2C_Master_Start:
  3695                           	opt callstack 26
  3696                           
  3697                           ;I2C.c: 56:     I2C_Master_Wait();
  3698                           
  3699                           ;incstack = 0
  3700  002318  EC6E  F011         	call	_I2C_Master_Wait	;wreg free
  3701                           
  3702                           ;I2C.c: 57:     SSPCON2bits.SEN = 1;
  3703  00231C  80C5               	bsf	4037,0,c	;volatile
  3704  00231E  0012               	return		;funcret
  3705  002320                     __end_of_I2C_Master_Start:
  3706                           	opt callstack 0
  3707                           
  3708 ;; *************** function _I2C_Master_Wait *****************
  3709 ;; Defined at:
  3710 ;;		line 21 in file "I2C.c"
  3711 ;; Parameters:    Size  Location     Type
  3712 ;;		None
  3713 ;; Auto vars:     Size  Location     Type
  3714 ;;		None
  3715 ;; Return value:  Size  Location     Type
  3716 ;;                  1    wreg      void 
  3717 ;; Registers used:
  3718 ;;		wreg, status,2, status,0
  3719 ;; Tracked objects:
  3720 ;;		On entry : 0/0
  3721 ;;		On exit  : 0/0
  3722 ;;		Unchanged: 0/0
  3723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3726 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3727 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3728 ;;Total ram usage:        1 bytes
  3729 ;; Hardware stack levels used:    1
  3730 ;; Hardware stack levels required when called:    2
  3731 ;; This function calls:
  3732 ;;		Nothing
  3733 ;; This function is called by:
  3734 ;;		_I2C_Master_Start
  3735 ;;		_I2C_Master_Stop
  3736 ;;		_I2C_Master_Write
  3737 ;;		_I2C_Master_RepeatedStart
  3738 ;;		_I2C_Master_Read
  3739 ;; This function uses a non-reentrant model
  3740 ;;
  3741                           
  3742                           	psect	text26
  3743  0022DC                     __ptext26:
  3744                           	opt callstack 0
  3745  0022DC                     _I2C_Master_Wait:
  3746                           	opt callstack 26
  3747                           
  3748                           ;I2C.c: 26:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F)){
  3749                           
  3750                           ;I2C.c: 28:     }
  3751                           
  3752                           ;incstack = 0
  3753  0022DC  B4C7               	btfsc	4039,2,c	;volatile
  3754  0022DE  D7FE               	goto	_I2C_Master_Wait
  3755  0022E0  CFC5 F036          	movff	4037,??_I2C_Master_Wait	;volatile
  3756  0022E4  0E1F               	movlw	31
  3757  0022E6  1636               	andwf	??_I2C_Master_Wait,f,c
  3758  0022E8  B4D8               	btfsc	status,2,c
  3759  0022EA  0012               	return	
  3760  0022EC  D7F7               	goto	_I2C_Master_Wait
  3761  0022EE                     __end_of_I2C_Master_Wait:
  3762                           	opt callstack 0
  3763                           
  3764 ;; *************** function _echo *****************
  3765 ;; Defined at:
  3766 ;;		line 20 in file "us_main.c"
  3767 ;; Parameters:    Size  Location     Type
  3768 ;;		None
  3769 ;; Auto vars:     Size  Location     Type
  3770 ;;		None
  3771 ;; Return value:  Size  Location     Type
  3772 ;;                  1    wreg      void 
  3773 ;; Registers used:
  3774 ;;		wreg, status,2, status,0, cstack
  3775 ;; Tracked objects:
  3776 ;;		On entry : 0/0
  3777 ;;		On exit  : 0/0
  3778 ;;		Unchanged: 0/0
  3779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3782 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3783 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3784 ;;Total ram usage:        4 bytes
  3785 ;; Hardware stack levels used:    1
  3786 ;; Hardware stack levels required when called:    1
  3787 ;; This function calls:
  3788 ;;		___fldiv
  3789 ;;		___fltol
  3790 ;;		___xxtofl
  3791 ;; This function is called by:
  3792 ;;		Interrupt level 2
  3793 ;; This function uses a non-reentrant model
  3794 ;;
  3795                           
  3796                           	psect	intcode
  3797  000008                     __pintcode:
  3798                           	opt callstack 0
  3799  000008                     _echo:
  3800                           	opt callstack 18
  3801                           
  3802                           ;incstack = 0
  3803  000008  824A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3804  00000A  EDB4  F00A         	call	int_func,f	;refresh shadow registers
  3805                           
  3806                           	psect	intcode_body
  3807  001568                     __pintcode_body:
  3808                           	opt callstack 18
  3809  001568                     int_func:
  3810                           	opt callstack 18
  3811  001568  0006               	pop		; remove dummy address from shadow register refresh
  3812                           
  3813                           ;us_main.c: 21:  if(RBIF == 1){
  3814  00156A  A0F2               	btfss	4082,0,c	;volatile
  3815  00156C  D100               	goto	i2l2564
  3816                           
  3817                           ;us_main.c: 22:   RBIE = 0;
  3818  00156E  96F2               	bcf	4082,3,c	;volatile
  3819                           
  3820                           ;us_main.c: 23:   if (b==1){
  3821  001570  0448               	decf	_b,w,c
  3822  001572  1049               	iorwf	_b+1,w,c
  3823  001574  A4D8               	btfss	status,2,c
  3824  001576  D03B               	goto	i2l2534
  3825                           
  3826                           ;us_main.c: 24:    if (RB7 == 1){
  3827  001578  BE81               	btfsc	3969,7,c	;volatile
  3828                           
  3829                           ;us_main.c: 25:     TMR1ON = 1;
  3830  00157A  80CD               	bsf	4045,0,c	;volatile
  3831                           
  3832                           ;us_main.c: 27:    if (RB7 == 0){
  3833                           
  3834                           ;us_main.c: 26:    }
  3835  00157C  BE81               	btfsc	3969,7,c	;volatile
  3836  00157E  D037               	goto	i2l2534
  3837                           
  3838                           ;us_main.c: 28:     TMR1ON = 0;
  3839  001580  90CD               	bcf	4045,0,c	;volatile
  3840                           
  3841                           ;us_main.c: 29:     a[0] = (TMR1L | (TMR1H<<8))/58.82;
  3842  001582  0EAE               	movlw	174
  3843  001584  6E13               	movwf	___fldiv@a,c
  3844  001586  0E47               	movlw	71
  3845  001588  6E14               	movwf	___fldiv@a+1,c
  3846  00158A  0E6B               	movlw	107
  3847  00158C  6E15               	movwf	___fldiv@a+2,c
  3848  00158E  0E42               	movlw	66
  3849  001590  6E16               	movwf	___fldiv@a+3,c
  3850  001592  50CF               	movf	4047,w,c	;volatile
  3851  001594  6E33               	movwf	(??_echo+1)& (0+255),c
  3852  001596  6A32               	clrf	??_echo& (0+255),c
  3853  001598  50CE               	movf	4046,w,c	;volatile
  3854  00159A  6E34               	movwf	(??_echo+2)& (0+255),c
  3855  00159C  6A35               	clrf	(??_echo+3)& (0+255),c
  3856  00159E  5032               	movf	??_echo,w,c
  3857  0015A0  1234               	iorwf	??_echo+2,f,c
  3858  0015A2  5033               	movf	??_echo+1,w,c
  3859  0015A4  1235               	iorwf	??_echo+3,f,c
  3860  0015A6  C034  F001         	movff	??_echo+2,___xxtofl@val
  3861  0015AA  C035  F002         	movff	??_echo+3,___xxtofl@val+1
  3862  0015AE  0E00               	movlw	0
  3863  0015B0  BE02               	btfsc	___xxtofl@val+1,7,c
  3864  0015B2  0EFF               	movlw	-1
  3865  0015B4  6E03               	movwf	___xxtofl@val+2,c
  3866  0015B6  6E04               	movwf	___xxtofl@val+3,c
  3867  0015B8  0E01               	movlw	1
  3868  0015BA  EC23  F00D         	call	___xxtofl
  3869  0015BE  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3870  0015C2  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3871  0015C6  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3872  0015CA  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3873  0015CE  EC4D  F008         	call	___fldiv	;wreg free
  3874  0015D2  C00F  F028         	movff	?___fldiv,___fltol@f1
  3875  0015D6  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
  3876  0015DA  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
  3877  0015DE  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
  3878  0015E2  ECBC  F00E         	call	___fltol	;wreg free
  3879  0015E6  C028  F03A         	movff	?___fltol,_a
  3880  0015EA  C029  F03B         	movff	?___fltol+1,_a+1
  3881  0015EE                     i2l2534:
  3882                           
  3883                           ;us_main.c: 33:   if (b==2){
  3884  0015EE  0E02               	movlw	2
  3885  0015F0  1848               	xorwf	_b,w,c
  3886  0015F2  1049               	iorwf	_b+1,w,c
  3887  0015F4  A4D8               	btfss	status,2,c
  3888  0015F6  D03B               	goto	i2l2544
  3889                           
  3890                           ;us_main.c: 34:    if (RB6 == 1){
  3891  0015F8  BC81               	btfsc	3969,6,c	;volatile
  3892                           
  3893                           ;us_main.c: 35:     TMR1ON = 1;
  3894  0015FA  80CD               	bsf	4045,0,c	;volatile
  3895                           
  3896                           ;us_main.c: 37:    if (RB6 == 0){
  3897                           
  3898                           ;us_main.c: 36:    }
  3899  0015FC  BC81               	btfsc	3969,6,c	;volatile
  3900  0015FE  D037               	goto	i2l2544
  3901                           
  3902                           ;us_main.c: 38:     TMR1ON = 0;
  3903  001600  90CD               	bcf	4045,0,c	;volatile
  3904                           
  3905                           ;us_main.c: 39:     a[1] = (TMR1L | (TMR1H<<8))/58.82;
  3906  001602  0EAE               	movlw	174
  3907  001604  6E13               	movwf	___fldiv@a,c
  3908  001606  0E47               	movlw	71
  3909  001608  6E14               	movwf	___fldiv@a+1,c
  3910  00160A  0E6B               	movlw	107
  3911  00160C  6E15               	movwf	___fldiv@a+2,c
  3912  00160E  0E42               	movlw	66
  3913  001610  6E16               	movwf	___fldiv@a+3,c
  3914  001612  50CF               	movf	4047,w,c	;volatile
  3915  001614  6E33               	movwf	(??_echo+1)& (0+255),c
  3916  001616  6A32               	clrf	??_echo& (0+255),c
  3917  001618  50CE               	movf	4046,w,c	;volatile
  3918  00161A  6E34               	movwf	(??_echo+2)& (0+255),c
  3919  00161C  6A35               	clrf	(??_echo+3)& (0+255),c
  3920  00161E  5032               	movf	??_echo,w,c
  3921  001620  1234               	iorwf	??_echo+2,f,c
  3922  001622  5033               	movf	??_echo+1,w,c
  3923  001624  1235               	iorwf	??_echo+3,f,c
  3924  001626  C034  F001         	movff	??_echo+2,___xxtofl@val
  3925  00162A  C035  F002         	movff	??_echo+3,___xxtofl@val+1
  3926  00162E  0E00               	movlw	0
  3927  001630  BE02               	btfsc	___xxtofl@val+1,7,c
  3928  001632  0EFF               	movlw	-1
  3929  001634  6E03               	movwf	___xxtofl@val+2,c
  3930  001636  6E04               	movwf	___xxtofl@val+3,c
  3931  001638  0E01               	movlw	1
  3932  00163A  EC23  F00D         	call	___xxtofl
  3933  00163E  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3934  001642  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3935  001646  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3936  00164A  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3937  00164E  EC4D  F008         	call	___fldiv	;wreg free
  3938  001652  C00F  F028         	movff	?___fldiv,___fltol@f1
  3939  001656  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
  3940  00165A  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
  3941  00165E  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
  3942  001662  ECBC  F00E         	call	___fltol	;wreg free
  3943  001666  C028  F03C         	movff	?___fltol,_a+2
  3944  00166A  C029  F03D         	movff	?___fltol+1,_a+3
  3945  00166E                     i2l2544:
  3946                           
  3947                           ;us_main.c: 43:   if (b==3){
  3948  00166E  0E03               	movlw	3
  3949  001670  1848               	xorwf	_b,w,c
  3950  001672  1049               	iorwf	_b+1,w,c
  3951  001674  A4D8               	btfss	status,2,c
  3952  001676  D03B               	goto	i2l2554
  3953                           
  3954                           ;us_main.c: 44:    if (RB5 == 1){
  3955  001678  BA81               	btfsc	3969,5,c	;volatile
  3956                           
  3957                           ;us_main.c: 45:     TMR1ON = 1;
  3958  00167A  80CD               	bsf	4045,0,c	;volatile
  3959                           
  3960                           ;us_main.c: 47:    if (RB5 == 0){
  3961                           
  3962                           ;us_main.c: 46:    }
  3963  00167C  BA81               	btfsc	3969,5,c	;volatile
  3964  00167E  D037               	goto	i2l2554
  3965                           
  3966                           ;us_main.c: 48:     TMR1ON = 0;
  3967  001680  90CD               	bcf	4045,0,c	;volatile
  3968                           
  3969                           ;us_main.c: 49:     a[2] = (TMR1L | (TMR1H<<8))/58.82;
  3970  001682  0EAE               	movlw	174
  3971  001684  6E13               	movwf	___fldiv@a,c
  3972  001686  0E47               	movlw	71
  3973  001688  6E14               	movwf	___fldiv@a+1,c
  3974  00168A  0E6B               	movlw	107
  3975  00168C  6E15               	movwf	___fldiv@a+2,c
  3976  00168E  0E42               	movlw	66
  3977  001690  6E16               	movwf	___fldiv@a+3,c
  3978  001692  50CF               	movf	4047,w,c	;volatile
  3979  001694  6E33               	movwf	(??_echo+1)& (0+255),c
  3980  001696  6A32               	clrf	??_echo& (0+255),c
  3981  001698  50CE               	movf	4046,w,c	;volatile
  3982  00169A  6E34               	movwf	(??_echo+2)& (0+255),c
  3983  00169C  6A35               	clrf	(??_echo+3)& (0+255),c
  3984  00169E  5032               	movf	??_echo,w,c
  3985  0016A0  1234               	iorwf	??_echo+2,f,c
  3986  0016A2  5033               	movf	??_echo+1,w,c
  3987  0016A4  1235               	iorwf	??_echo+3,f,c
  3988  0016A6  C034  F001         	movff	??_echo+2,___xxtofl@val
  3989  0016AA  C035  F002         	movff	??_echo+3,___xxtofl@val+1
  3990  0016AE  0E00               	movlw	0
  3991  0016B0  BE02               	btfsc	___xxtofl@val+1,7,c
  3992  0016B2  0EFF               	movlw	-1
  3993  0016B4  6E03               	movwf	___xxtofl@val+2,c
  3994  0016B6  6E04               	movwf	___xxtofl@val+3,c
  3995  0016B8  0E01               	movlw	1
  3996  0016BA  EC23  F00D         	call	___xxtofl
  3997  0016BE  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3998  0016C2  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3999  0016C6  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4000  0016CA  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4001  0016CE  EC4D  F008         	call	___fldiv	;wreg free
  4002  0016D2  C00F  F028         	movff	?___fldiv,___fltol@f1
  4003  0016D6  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
  4004  0016DA  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
  4005  0016DE  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
  4006  0016E2  ECBC  F00E         	call	___fltol	;wreg free
  4007  0016E6  C028  F03E         	movff	?___fltol,_a+4
  4008  0016EA  C029  F03F         	movff	?___fltol+1,_a+5
  4009  0016EE                     i2l2554:
  4010                           
  4011                           ;us_main.c: 53:         if (b==4){
  4012  0016EE  0E04               	movlw	4
  4013  0016F0  1848               	xorwf	_b,w,c
  4014  0016F2  1049               	iorwf	_b+1,w,c
  4015  0016F4  A4D8               	btfss	status,2,c
  4016  0016F6  D03B               	goto	i2l2564
  4017                           
  4018                           ;us_main.c: 54:    if (RB4 == 1){
  4019  0016F8  B881               	btfsc	3969,4,c	;volatile
  4020                           
  4021                           ;us_main.c: 55:     TMR1ON = 1;
  4022  0016FA  80CD               	bsf	4045,0,c	;volatile
  4023                           
  4024                           ;us_main.c: 57:    if (RB4 == 0){
  4025                           
  4026                           ;us_main.c: 56:    }
  4027  0016FC  B881               	btfsc	3969,4,c	;volatile
  4028  0016FE  D037               	goto	i2l2564
  4029                           
  4030                           ;us_main.c: 58:     TMR1ON = 0;
  4031  001700  90CD               	bcf	4045,0,c	;volatile
  4032                           
  4033                           ;us_main.c: 59:     a[3] = (TMR1L | (TMR1H<<8))/58.82;
  4034  001702  0EAE               	movlw	174
  4035  001704  6E13               	movwf	___fldiv@a,c
  4036  001706  0E47               	movlw	71
  4037  001708  6E14               	movwf	___fldiv@a+1,c
  4038  00170A  0E6B               	movlw	107
  4039  00170C  6E15               	movwf	___fldiv@a+2,c
  4040  00170E  0E42               	movlw	66
  4041  001710  6E16               	movwf	___fldiv@a+3,c
  4042  001712  50CF               	movf	4047,w,c	;volatile
  4043  001714  6E33               	movwf	(??_echo+1)& (0+255),c
  4044  001716  6A32               	clrf	??_echo& (0+255),c
  4045  001718  50CE               	movf	4046,w,c	;volatile
  4046  00171A  6E34               	movwf	(??_echo+2)& (0+255),c
  4047  00171C  6A35               	clrf	(??_echo+3)& (0+255),c
  4048  00171E  5032               	movf	??_echo,w,c
  4049  001720  1234               	iorwf	??_echo+2,f,c
  4050  001722  5033               	movf	??_echo+1,w,c
  4051  001724  1235               	iorwf	??_echo+3,f,c
  4052  001726  C034  F001         	movff	??_echo+2,___xxtofl@val
  4053  00172A  C035  F002         	movff	??_echo+3,___xxtofl@val+1
  4054  00172E  0E00               	movlw	0
  4055  001730  BE02               	btfsc	___xxtofl@val+1,7,c
  4056  001732  0EFF               	movlw	-1
  4057  001734  6E03               	movwf	___xxtofl@val+2,c
  4058  001736  6E04               	movwf	___xxtofl@val+3,c
  4059  001738  0E01               	movlw	1
  4060  00173A  EC23  F00D         	call	___xxtofl
  4061  00173E  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4062  001742  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4063  001746  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4064  00174A  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4065  00174E  EC4D  F008         	call	___fldiv	;wreg free
  4066  001752  C00F  F028         	movff	?___fldiv,___fltol@f1
  4067  001756  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
  4068  00175A  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
  4069  00175E  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
  4070  001762  ECBC  F00E         	call	___fltol	;wreg free
  4071  001766  C028  F040         	movff	?___fltol,_a+6
  4072  00176A  C029  F041         	movff	?___fltol+1,_a+7
  4073  00176E                     i2l2564:
  4074                           
  4075                           ;us_main.c: 64:  RBIF = 0;
  4076  00176E  90F2               	bcf	4082,0,c	;volatile
  4077                           
  4078                           ;us_main.c: 65:  RBIE = 1;
  4079  001770  86F2               	bsf	4082,3,c	;volatile
  4080  001772  924A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4081  001774  0011               	retfie		f
  4082  001776                     __end_of_echo:
  4083                           	opt callstack 0
  4084                           
  4085 ;; *************** function ___xxtofl *****************
  4086 ;; Defined at:
  4087 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  4088 ;; Parameters:    Size  Location     Type
  4089 ;;  sign            1    wreg     unsigned char 
  4090 ;;  val             4    0[COMRAM] long 
  4091 ;; Auto vars:     Size  Location     Type
  4092 ;;  sign            1    8[COMRAM] unsigned char 
  4093 ;;  arg             4   10[COMRAM] unsigned long 
  4094 ;;  exp             1    9[COMRAM] unsigned char 
  4095 ;; Return value:  Size  Location     Type
  4096 ;;                  4    0[COMRAM] unsigned char 
  4097 ;; Registers used:
  4098 ;;		wreg, status,2, status,0
  4099 ;; Tracked objects:
  4100 ;;		On entry : 0/0
  4101 ;;		On exit  : 0/0
  4102 ;;		Unchanged: 0/0
  4103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4104 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4105 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4106 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4107 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4108 ;;Total ram usage:       14 bytes
  4109 ;; Hardware stack levels used:    1
  4110 ;; This function calls:
  4111 ;;		Nothing
  4112 ;; This function is called by:
  4113 ;;		_echo
  4114 ;; This function uses a non-reentrant model
  4115 ;;
  4116                           
  4117                           	psect	text28
  4118  001A46                     __ptext28:
  4119                           	opt callstack 0
  4120  001A46                     ___xxtofl:
  4121                           	opt callstack 18
  4122                           
  4123                           ;incstack = 0
  4124                           ;___xxtofl@sign stored from wreg
  4125  001A46  6E09               	movwf	___xxtofl@sign,c
  4126  001A48  5009               	movf	___xxtofl@sign,w,c
  4127  001A4A  A4D8               	btfss	status,2,c
  4128  001A4C  AE04               	btfss	___xxtofl@val+3,7,c
  4129  001A4E  D01A               	goto	i2l962
  4130  001A50  C001  F005         	movff	___xxtofl@val,??___xxtofl
  4131  001A54  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  4132  001A58  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  4133  001A5C  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  4134  001A60  1E05               	comf	??___xxtofl,f,c
  4135  001A62  1E06               	comf	??___xxtofl+1,f,c
  4136  001A64  1E07               	comf	??___xxtofl+2,f,c
  4137  001A66  1E08               	comf	??___xxtofl+3,f,c
  4138  001A68  2A05               	incf	??___xxtofl,f,c
  4139  001A6A  0E00               	movlw	0
  4140  001A6C  2206               	addwfc	??___xxtofl+1,f,c
  4141  001A6E  2207               	addwfc	??___xxtofl+2,f,c
  4142  001A70  2208               	addwfc	??___xxtofl+3,f,c
  4143  001A72  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  4144  001A76  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  4145  001A7A  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  4146  001A7E  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  4147  001A82  D008               	goto	i2l2414
  4148  001A84                     i2l962:
  4149  001A84  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  4150  001A88  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4151  001A8C  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4152  001A90  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4153  001A94                     i2l2414:
  4154  001A94  5001               	movf	___xxtofl@val,w,c
  4155  001A96  1002               	iorwf	___xxtofl@val+1,w,c
  4156  001A98  1003               	iorwf	___xxtofl@val+2,w,c
  4157  001A9A  1004               	iorwf	___xxtofl@val+3,w,c
  4158  001A9C  A4D8               	btfss	status,2,c
  4159  001A9E  D009               	goto	i2l2420
  4160  001AA0  0E00               	movlw	0
  4161  001AA2  6E01               	movwf	?___xxtofl,c
  4162  001AA4  0E00               	movlw	0
  4163  001AA6  6E02               	movwf	?___xxtofl+1,c
  4164  001AA8  0E00               	movlw	0
  4165  001AAA  6E03               	movwf	?___xxtofl+2,c
  4166  001AAC  0E00               	movlw	0
  4167  001AAE  6E04               	movwf	?___xxtofl+3,c
  4168  001AB0  0012               	return	
  4169  001AB2                     i2l2420:
  4170  001AB2  0E96               	movlw	150
  4171  001AB4  6E0A               	movwf	___xxtofl@exp,c
  4172  001AB6  D006               	goto	i2l2424
  4173  001AB8                     i2l2422:
  4174  001AB8  2A0A               	incf	___xxtofl@exp,f,c
  4175  001ABA  90D8               	bcf	status,0,c
  4176  001ABC  320E               	rrcf	___xxtofl@arg+3,f,c
  4177  001ABE  320D               	rrcf	___xxtofl@arg+2,f,c
  4178  001AC0  320C               	rrcf	___xxtofl@arg+1,f,c
  4179  001AC2  320B               	rrcf	___xxtofl@arg,f,c
  4180  001AC4                     i2l2424:
  4181  001AC4  0E00               	movlw	0
  4182  001AC6  140B               	andwf	___xxtofl@arg,w,c
  4183  001AC8  6E05               	movwf	??___xxtofl& (0+255),c
  4184  001ACA  0E00               	movlw	0
  4185  001ACC  140C               	andwf	___xxtofl@arg+1,w,c
  4186  001ACE  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  4187  001AD0  0E00               	movlw	0
  4188  001AD2  140D               	andwf	___xxtofl@arg+2,w,c
  4189  001AD4  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  4190  001AD6  0EFE               	movlw	254
  4191  001AD8  140E               	andwf	___xxtofl@arg+3,w,c
  4192  001ADA  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  4193  001ADC  5005               	movf	??___xxtofl,w,c
  4194  001ADE  1006               	iorwf	??___xxtofl+1,w,c
  4195  001AE0  1007               	iorwf	??___xxtofl+2,w,c
  4196  001AE2  1008               	iorwf	??___xxtofl+3,w,c
  4197  001AE4  B4D8               	btfsc	status,2,c
  4198  001AE6  D00D               	goto	i2l969
  4199  001AE8  D7E7               	goto	i2l2422
  4200  001AEA                     i2l2426:
  4201  001AEA  2A0A               	incf	___xxtofl@exp,f,c
  4202  001AEC  0E01               	movlw	1
  4203  001AEE  260B               	addwf	___xxtofl@arg,f,c
  4204  001AF0  0E00               	movlw	0
  4205  001AF2  220C               	addwfc	___xxtofl@arg+1,f,c
  4206  001AF4  220D               	addwfc	___xxtofl@arg+2,f,c
  4207  001AF6  220E               	addwfc	___xxtofl@arg+3,f,c
  4208  001AF8  90D8               	bcf	status,0,c
  4209  001AFA  320E               	rrcf	___xxtofl@arg+3,f,c
  4210  001AFC  320D               	rrcf	___xxtofl@arg+2,f,c
  4211  001AFE  320C               	rrcf	___xxtofl@arg+1,f,c
  4212  001B00  320B               	rrcf	___xxtofl@arg,f,c
  4213  001B02                     i2l969:
  4214  001B02  0E00               	movlw	0
  4215  001B04  140B               	andwf	___xxtofl@arg,w,c
  4216  001B06  6E05               	movwf	??___xxtofl& (0+255),c
  4217  001B08  0E00               	movlw	0
  4218  001B0A  140C               	andwf	___xxtofl@arg+1,w,c
  4219  001B0C  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  4220  001B0E  0E00               	movlw	0
  4221  001B10  140D               	andwf	___xxtofl@arg+2,w,c
  4222  001B12  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  4223  001B14  0EFF               	movlw	255
  4224  001B16  140E               	andwf	___xxtofl@arg+3,w,c
  4225  001B18  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  4226  001B1A  5005               	movf	??___xxtofl,w,c
  4227  001B1C  1006               	iorwf	??___xxtofl+1,w,c
  4228  001B1E  1007               	iorwf	??___xxtofl+2,w,c
  4229  001B20  1008               	iorwf	??___xxtofl+3,w,c
  4230  001B22  B4D8               	btfsc	status,2,c
  4231  001B24  D007               	goto	i2l2434
  4232  001B26  D7E1               	goto	i2l2426
  4233  001B28                     i2l2432:
  4234  001B28  060A               	decf	___xxtofl@exp,f,c
  4235  001B2A  90D8               	bcf	status,0,c
  4236  001B2C  360B               	rlcf	___xxtofl@arg,f,c
  4237  001B2E  360C               	rlcf	___xxtofl@arg+1,f,c
  4238  001B30  360D               	rlcf	___xxtofl@arg+2,f,c
  4239  001B32  360E               	rlcf	___xxtofl@arg+3,f,c
  4240  001B34                     i2l2434:
  4241  001B34  BE0D               	btfsc	___xxtofl@arg+2,7,c
  4242  001B36  D003               	goto	i2u216_40
  4243  001B38  0E02               	movlw	2
  4244  001B3A  600A               	cpfslt	___xxtofl@exp,c
  4245  001B3C  D7F5               	goto	i2l2432
  4246  001B3E                     i2u216_40:
  4247  001B3E  A00A               	btfss	___xxtofl@exp,0,c
  4248  001B40  9E0D               	bcf	___xxtofl@arg+2,7,c
  4249  001B42  90D8               	bcf	status,0,c
  4250  001B44  320A               	rrcf	___xxtofl@exp,f,c
  4251  001B46  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  4252  001B4A  6A06               	clrf	(??___xxtofl+1)& (0+255),c
  4253  001B4C  6A07               	clrf	(??___xxtofl+2)& (0+255),c
  4254  001B4E  6A08               	clrf	(??___xxtofl+3)& (0+255),c
  4255  001B50  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  4256  001B54  6A07               	clrf	??___xxtofl+2,c
  4257  001B56  6A06               	clrf	??___xxtofl+1,c
  4258  001B58  6A05               	clrf	??___xxtofl,c
  4259  001B5A  5005               	movf	??___xxtofl,w,c
  4260  001B5C  120B               	iorwf	___xxtofl@arg,f,c
  4261  001B5E  5006               	movf	??___xxtofl+1,w,c
  4262  001B60  120C               	iorwf	___xxtofl@arg+1,f,c
  4263  001B62  5007               	movf	??___xxtofl+2,w,c
  4264  001B64  120D               	iorwf	___xxtofl@arg+2,f,c
  4265  001B66  5008               	movf	??___xxtofl+3,w,c
  4266  001B68  120E               	iorwf	___xxtofl@arg+3,f,c
  4267  001B6A  5009               	movf	___xxtofl@sign,w,c
  4268  001B6C  A4D8               	btfss	status,2,c
  4269  001B6E  AE04               	btfss	___xxtofl@val+3,7,c
  4270  001B70  D001               	goto	i2l2450
  4271  001B72  8E0E               	bsf	___xxtofl@arg+3,7,c
  4272  001B74                     i2l2450:
  4273  001B74  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  4274  001B78  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  4275  001B7C  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  4276  001B80  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  4277  001B84  0012               	return		;funcret
  4278  001B86                     __end_of___xxtofl:
  4279                           	opt callstack 0
  4280                           
  4281 ;; *************** function ___fltol *****************
  4282 ;; Defined at:
  4283 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  4284 ;; Parameters:    Size  Location     Type
  4285 ;;  f1              4   39[COMRAM] unsigned char 
  4286 ;; Auto vars:     Size  Location     Type
  4287 ;;  exp1            1   48[COMRAM] unsigned char 
  4288 ;;  sign1           1   47[COMRAM] unsigned char 
  4289 ;; Return value:  Size  Location     Type
  4290 ;;                  4   39[COMRAM] long 
  4291 ;; Registers used:
  4292 ;;		wreg, status,2, status,0
  4293 ;; Tracked objects:
  4294 ;;		On entry : 0/0
  4295 ;;		On exit  : 0/0
  4296 ;;		Unchanged: 0/0
  4297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4298 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4299 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4300 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4301 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4302 ;;Total ram usage:       10 bytes
  4303 ;; Hardware stack levels used:    1
  4304 ;; This function calls:
  4305 ;;		Nothing
  4306 ;; This function is called by:
  4307 ;;		_echo
  4308 ;; This function uses a non-reentrant model
  4309 ;;
  4310                           
  4311                           	psect	text29
  4312  001D78                     __ptext29:
  4313                           	opt callstack 0
  4314  001D78                     ___fltol:
  4315                           	opt callstack 18
  4316                           
  4317                           ;incstack = 0
  4318  001D78  342A               	rlcf	___fltol@f1+2,w,c
  4319  001D7A  342B               	rlcf	___fltol@f1+3,w,c
  4320  001D7C  6E31               	movwf	___fltol@exp1,c
  4321  001D7E  5031               	movf	___fltol@exp1,w,c
  4322  001D80  A4D8               	btfss	status,2,c
  4323  001D82  D009               	goto	i2l2370
  4324  001D84                     i2u203_40:
  4325  001D84  0E00               	movlw	0
  4326  001D86  6E28               	movwf	?___fltol,c
  4327  001D88  0E00               	movlw	0
  4328  001D8A  6E29               	movwf	?___fltol+1,c
  4329  001D8C  0E00               	movlw	0
  4330  001D8E  6E2A               	movwf	?___fltol+2,c
  4331  001D90  0E00               	movlw	0
  4332  001D92  6E2B               	movwf	?___fltol+3,c
  4333  001D94  0012               	return	
  4334  001D96                     i2l2370:
  4335  001D96  C028  F02C         	movff	___fltol@f1,??___fltol
  4336  001D9A  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
  4337  001D9E  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
  4338  001DA2  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
  4339  001DA6  0E20               	movlw	32
  4340  001DA8  D005               	goto	i2u204_40
  4341  001DAA                     i2u204_45:
  4342  001DAA  90D8               	bcf	status,0,c
  4343  001DAC  322F               	rrcf	??___fltol+3,f,c
  4344  001DAE  322E               	rrcf	??___fltol+2,f,c
  4345  001DB0  322D               	rrcf	??___fltol+1,f,c
  4346  001DB2  322C               	rrcf	??___fltol,f,c
  4347  001DB4                     i2u204_40:
  4348  001DB4  2EE8               	decfsz	wreg,f,c
  4349  001DB6  D7F9               	goto	i2u204_45
  4350  001DB8  502C               	movf	??___fltol,w,c
  4351  001DBA  6E30               	movwf	___fltol@sign1,c
  4352  001DBC  8E2A               	bsf	___fltol@f1+2,7,c
  4353  001DBE  0EFF               	movlw	255
  4354  001DC0  1628               	andwf	___fltol@f1,f,c
  4355  001DC2  0EFF               	movlw	255
  4356  001DC4  1629               	andwf	___fltol@f1+1,f,c
  4357  001DC6  0EFF               	movlw	255
  4358  001DC8  162A               	andwf	___fltol@f1+2,f,c
  4359  001DCA  0E00               	movlw	0
  4360  001DCC  162B               	andwf	___fltol@f1+3,f,c
  4361  001DCE  0E96               	movlw	150
  4362  001DD0  5E31               	subwf	___fltol@exp1,f,c
  4363  001DD2  AE31               	btfss	___fltol@exp1,7,c
  4364  001DD4  D00D               	goto	i2l2390
  4365  001DD6  5031               	movf	___fltol@exp1,w,c
  4366  001DD8  0A80               	xorlw	128
  4367  001DDA  0F97               	addlw	151
  4368  001DDC  A0D8               	btfss	status,0,c
  4369  001DDE  D7D2               	goto	i2u203_40
  4370  001DE0                     i2l2386:
  4371  001DE0  90D8               	bcf	status,0,c
  4372  001DE2  322B               	rrcf	___fltol@f1+3,f,c
  4373  001DE4  322A               	rrcf	___fltol@f1+2,f,c
  4374  001DE6  3229               	rrcf	___fltol@f1+1,f,c
  4375  001DE8  3228               	rrcf	___fltol@f1,f,c
  4376  001DEA  3E31               	incfsz	___fltol@exp1,f,c
  4377  001DEC  D7F9               	goto	i2l2386
  4378  001DEE  D00D               	goto	i2u208_40
  4379  001DF0                     i2l2390:
  4380  001DF0  0E1F               	movlw	31
  4381  001DF2  6431               	cpfsgt	___fltol@exp1,c
  4382  001DF4  D007               	goto	i2l2398
  4383  001DF6  D7C6               	goto	i2u203_40
  4384  001DF8                     i2l2396:
  4385  001DF8  90D8               	bcf	status,0,c
  4386  001DFA  3628               	rlcf	___fltol@f1,f,c
  4387  001DFC  3629               	rlcf	___fltol@f1+1,f,c
  4388  001DFE  362A               	rlcf	___fltol@f1+2,f,c
  4389  001E00  362B               	rlcf	___fltol@f1+3,f,c
  4390  001E02  0631               	decf	___fltol@exp1,f,c
  4391  001E04                     i2l2398:
  4392  001E04  5031               	movf	___fltol@exp1,w,c
  4393  001E06  A4D8               	btfss	status,2,c
  4394  001E08  D7F7               	goto	i2l2396
  4395  001E0A                     i2u208_40:
  4396  001E0A  5030               	movf	___fltol@sign1,w,c
  4397  001E0C  B4D8               	btfsc	status,2,c
  4398  001E0E  D008               	goto	i2l2404
  4399  001E10  1E2B               	comf	___fltol@f1+3,f,c
  4400  001E12  1E2A               	comf	___fltol@f1+2,f,c
  4401  001E14  1E29               	comf	___fltol@f1+1,f,c
  4402  001E16  6C28               	negf	___fltol@f1,c
  4403  001E18  0E00               	movlw	0
  4404  001E1A  2229               	addwfc	___fltol@f1+1,f,c
  4405  001E1C  222A               	addwfc	___fltol@f1+2,f,c
  4406  001E1E  222B               	addwfc	___fltol@f1+3,f,c
  4407  001E20                     i2l2404:
  4408  001E20  C028  F028         	movff	___fltol@f1,?___fltol
  4409  001E24  C029  F029         	movff	___fltol@f1+1,?___fltol+1
  4410  001E28  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
  4411  001E2C  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
  4412  001E30  0012               	return		;funcret
  4413  001E32                     __end_of___fltol:
  4414                           	opt callstack 0
  4415                           
  4416 ;; *************** function ___fldiv *****************
  4417 ;; Defined at:
  4418 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
  4419 ;; Parameters:    Size  Location     Type
  4420 ;;  b               4   14[COMRAM] long 
  4421 ;;  a               4   18[COMRAM] long 
  4422 ;; Auto vars:     Size  Location     Type
  4423 ;;  grs             4   33[COMRAM] unsigned long 
  4424 ;;  rem             4   26[COMRAM] unsigned long 
  4425 ;;  new_exp         2   31[COMRAM] short 
  4426 ;;  aexp            1   38[COMRAM] unsigned char 
  4427 ;;  bexp            1   37[COMRAM] unsigned char 
  4428 ;;  sign            1   30[COMRAM] unsigned char 
  4429 ;; Return value:  Size  Location     Type
  4430 ;;                  4   14[COMRAM] unsigned char 
  4431 ;; Registers used:
  4432 ;;		wreg, status,2, status,0
  4433 ;; Tracked objects:
  4434 ;;		On entry : 0/0
  4435 ;;		On exit  : 0/0
  4436 ;;		Unchanged: 0/0
  4437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4438 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4439 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4440 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4441 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4442 ;;Total ram usage:       25 bytes
  4443 ;; Hardware stack levels used:    1
  4444 ;; This function calls:
  4445 ;;		Nothing
  4446 ;; This function is called by:
  4447 ;;		_echo
  4448 ;; This function uses a non-reentrant model
  4449 ;;
  4450                           
  4451                           	psect	text30
  4452  00109A                     __ptext30:
  4453                           	opt callstack 0
  4454  00109A                     ___fldiv:
  4455                           	opt callstack 18
  4456                           
  4457                           ;incstack = 0
  4458  00109A  5012               	movf	___fldiv@b+3,w,c
  4459  00109C  0B80               	andlw	128
  4460  00109E  6E1F               	movwf	___fldiv@sign,c
  4461  0010A0  5012               	movf	___fldiv@b+3,w,c
  4462  0010A2  2412               	addwf	___fldiv@b+3,w,c
  4463  0010A4  6E26               	movwf	___fldiv@bexp,c
  4464  0010A6  BE11               	btfsc	___fldiv@b+2,7,c
  4465  0010A8  8026               	bsf	___fldiv@bexp,0,c
  4466  0010AA  5026               	movf	___fldiv@bexp,w,c
  4467  0010AC  B4D8               	btfsc	status,2,c
  4468  0010AE  D00D               	goto	i2l2242
  4469  0010B0  2826               	incf	___fldiv@bexp,w,c
  4470  0010B2  A4D8               	btfss	status,2,c
  4471  0010B4  D008               	goto	i2l2238
  4472  0010B6  0E00               	movlw	0
  4473  0010B8  6E0F               	movwf	___fldiv@b,c
  4474  0010BA  0E00               	movlw	0
  4475  0010BC  6E10               	movwf	___fldiv@b+1,c
  4476  0010BE  0E00               	movlw	0
  4477  0010C0  6E11               	movwf	___fldiv@b+2,c
  4478  0010C2  0E00               	movlw	0
  4479  0010C4  6E12               	movwf	___fldiv@b+3,c
  4480  0010C6                     i2l2238:
  4481  0010C6  8E11               	bsf	___fldiv@b+2,7,c
  4482  0010C8  D006               	goto	L2
  4483  0010CA                     i2l2242:
  4484  0010CA  0E00               	movlw	0
  4485  0010CC  6E0F               	movwf	___fldiv@b,c
  4486  0010CE  0E00               	movlw	0
  4487  0010D0  6E10               	movwf	___fldiv@b+1,c
  4488  0010D2  0E00               	movlw	0
  4489  0010D4  6E11               	movwf	___fldiv@b+2,c
  4490  0010D6                     L2:
  4491  0010D6  0E00               	movlw	0
  4492  0010D8  6E12               	movwf	___fldiv@b+3,c
  4493  0010DA  5016               	movf	___fldiv@a+3,w,c
  4494  0010DC  0B80               	andlw	128
  4495  0010DE  1A1F               	xorwf	___fldiv@sign,f,c
  4496  0010E0  5016               	movf	___fldiv@a+3,w,c
  4497  0010E2  2416               	addwf	___fldiv@a+3,w,c
  4498  0010E4  6E27               	movwf	___fldiv@aexp,c
  4499  0010E6  BE15               	btfsc	___fldiv@a+2,7,c
  4500  0010E8  8027               	bsf	___fldiv@aexp,0,c
  4501  0010EA  5027               	movf	___fldiv@aexp,w,c
  4502  0010EC  B4D8               	btfsc	status,2,c
  4503  0010EE  D00D               	goto	i2l2262
  4504  0010F0  2827               	incf	___fldiv@aexp,w,c
  4505  0010F2  A4D8               	btfss	status,2,c
  4506  0010F4  D008               	goto	i2l2258
  4507  0010F6  0E00               	movlw	0
  4508  0010F8  6E13               	movwf	___fldiv@a,c
  4509  0010FA  0E00               	movlw	0
  4510  0010FC  6E14               	movwf	___fldiv@a+1,c
  4511  0010FE  0E00               	movlw	0
  4512  001100  6E15               	movwf	___fldiv@a+2,c
  4513  001102  0E00               	movlw	0
  4514  001104  6E16               	movwf	___fldiv@a+3,c
  4515  001106                     i2l2258:
  4516  001106  8E15               	bsf	___fldiv@a+2,7,c
  4517  001108  D006               	goto	L3
  4518  00110A                     i2l2262:
  4519  00110A  0E00               	movlw	0
  4520  00110C  6E13               	movwf	___fldiv@a,c
  4521  00110E  0E00               	movlw	0
  4522  001110  6E14               	movwf	___fldiv@a+1,c
  4523  001112  0E00               	movlw	0
  4524  001114  6E15               	movwf	___fldiv@a+2,c
  4525  001116                     L3:
  4526  001116  0E00               	movlw	0
  4527  001118  6E16               	movwf	___fldiv@a+3,c
  4528  00111A  5013               	movf	___fldiv@a,w,c
  4529  00111C  1014               	iorwf	___fldiv@a+1,w,c
  4530  00111E  1015               	iorwf	___fldiv@a+2,w,c
  4531  001120  1016               	iorwf	___fldiv@a+3,w,c
  4532  001122  A4D8               	btfss	status,2,c
  4533  001124  D017               	goto	i2l2276
  4534  001126  0E00               	movlw	0
  4535  001128  6E0F               	movwf	___fldiv@b,c
  4536  00112A  0E00               	movlw	0
  4537  00112C  6E10               	movwf	___fldiv@b+1,c
  4538  00112E  0E00               	movlw	0
  4539  001130  6E11               	movwf	___fldiv@b+2,c
  4540  001132  0E00               	movlw	0
  4541  001134  6E12               	movwf	___fldiv@b+3,c
  4542  001136  0E80               	movlw	128
  4543  001138  1211               	iorwf	___fldiv@b+2,f,c
  4544  00113A  0E7F               	movlw	127
  4545  00113C  1212               	iorwf	___fldiv@b+3,f,c
  4546  00113E                     i2l2270:
  4547  00113E  501F               	movf	___fldiv@sign,w,c
  4548  001140  1212               	iorwf	___fldiv@b+3,f,c
  4549  001142  C00F  F00F         	movff	___fldiv@b,?___fldiv
  4550  001146  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  4551  00114A  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  4552  00114E  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  4553  001152  0012               	return	
  4554  001154                     i2l2276:
  4555  001154  5026               	movf	___fldiv@bexp,w,c
  4556  001156  A4D8               	btfss	status,2,c
  4557  001158  D009               	goto	i2l2284
  4558  00115A  0E00               	movlw	0
  4559  00115C  6E0F               	movwf	?___fldiv,c
  4560  00115E  0E00               	movlw	0
  4561  001160  6E10               	movwf	?___fldiv+1,c
  4562  001162  0E00               	movlw	0
  4563  001164  6E11               	movwf	?___fldiv+2,c
  4564  001166  0E00               	movlw	0
  4565  001168  6E12               	movwf	?___fldiv+3,c
  4566  00116A  0012               	return	
  4567  00116C                     i2l2284:
  4568  00116C  5027               	movf	___fldiv@aexp,w,c
  4569  00116E  C026  F017         	movff	___fldiv@bexp,??___fldiv
  4570  001172  6A18               	clrf	(??___fldiv+1)& (0+255),c
  4571  001174  5E17               	subwf	??___fldiv,f,c
  4572  001176  0E00               	movlw	0
  4573  001178  5A18               	subwfb	??___fldiv+1,f,c
  4574  00117A  0E7F               	movlw	127
  4575  00117C  2417               	addwf	??___fldiv,w,c
  4576  00117E  6E20               	movwf	___fldiv@new_exp,c
  4577  001180  0E00               	movlw	0
  4578  001182  2018               	addwfc	??___fldiv+1,w,c
  4579  001184  6E21               	movwf	___fldiv@new_exp+1,c
  4580  001186  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  4581  00118A  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  4582  00118E  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  4583  001192  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  4584  001196  0E00               	movlw	0
  4585  001198  6E0F               	movwf	___fldiv@b,c
  4586  00119A  0E00               	movlw	0
  4587  00119C  6E10               	movwf	___fldiv@b+1,c
  4588  00119E  0E00               	movlw	0
  4589  0011A0  6E11               	movwf	___fldiv@b+2,c
  4590  0011A2  0E00               	movlw	0
  4591  0011A4  6E12               	movwf	___fldiv@b+3,c
  4592  0011A6  0E00               	movlw	0
  4593  0011A8  6E22               	movwf	___fldiv@grs,c
  4594  0011AA  0E00               	movlw	0
  4595  0011AC  6E23               	movwf	___fldiv@grs+1,c
  4596  0011AE  0E00               	movlw	0
  4597  0011B0  6E24               	movwf	___fldiv@grs+2,c
  4598  0011B2  0E00               	movlw	0
  4599  0011B4  6E25               	movwf	___fldiv@grs+3,c
  4600  0011B6  0E00               	movlw	0
  4601  0011B8  6E27               	movwf	___fldiv@aexp,c
  4602  0011BA  D028               	goto	i2l891
  4603  0011BC                     i2l2294:
  4604  0011BC  5027               	movf	___fldiv@aexp,w,c
  4605  0011BE  B4D8               	btfsc	status,2,c
  4606  0011C0  D011               	goto	i2l2302
  4607  0011C2  90D8               	bcf	status,0,c
  4608  0011C4  361B               	rlcf	___fldiv@rem,f,c
  4609  0011C6  361C               	rlcf	___fldiv@rem+1,f,c
  4610  0011C8  361D               	rlcf	___fldiv@rem+2,f,c
  4611  0011CA  361E               	rlcf	___fldiv@rem+3,f,c
  4612  0011CC  90D8               	bcf	status,0,c
  4613  0011CE  360F               	rlcf	___fldiv@b,f,c
  4614  0011D0  3610               	rlcf	___fldiv@b+1,f,c
  4615  0011D2  3611               	rlcf	___fldiv@b+2,f,c
  4616  0011D4  3612               	rlcf	___fldiv@b+3,f,c
  4617  0011D6  BE25               	btfsc	___fldiv@grs+3,7,c
  4618  0011D8  800F               	bsf	___fldiv@b,0,c
  4619  0011DA  90D8               	bcf	status,0,c
  4620  0011DC  3622               	rlcf	___fldiv@grs,f,c
  4621  0011DE  3623               	rlcf	___fldiv@grs+1,f,c
  4622  0011E0  3624               	rlcf	___fldiv@grs+2,f,c
  4623  0011E2  3625               	rlcf	___fldiv@grs+3,f,c
  4624  0011E4                     i2l2302:
  4625  0011E4  5013               	movf	___fldiv@a,w,c
  4626  0011E6  5C1B               	subwf	___fldiv@rem,w,c
  4627  0011E8  5014               	movf	___fldiv@a+1,w,c
  4628  0011EA  581C               	subwfb	___fldiv@rem+1,w,c
  4629  0011EC  5015               	movf	___fldiv@a+2,w,c
  4630  0011EE  581D               	subwfb	___fldiv@rem+2,w,c
  4631  0011F0  5016               	movf	___fldiv@a+3,w,c
  4632  0011F2  581E               	subwfb	___fldiv@rem+3,w,c
  4633  0011F4  A0D8               	btfss	status,0,c
  4634  0011F6  D009               	goto	i2l2308
  4635  0011F8  8C25               	bsf	___fldiv@grs+3,6,c
  4636  0011FA  5013               	movf	___fldiv@a,w,c
  4637  0011FC  5E1B               	subwf	___fldiv@rem,f,c
  4638  0011FE  5014               	movf	___fldiv@a+1,w,c
  4639  001200  5A1C               	subwfb	___fldiv@rem+1,f,c
  4640  001202  5015               	movf	___fldiv@a+2,w,c
  4641  001204  5A1D               	subwfb	___fldiv@rem+2,f,c
  4642  001206  5016               	movf	___fldiv@a+3,w,c
  4643  001208  5A1E               	subwfb	___fldiv@rem+3,f,c
  4644  00120A                     i2l2308:
  4645  00120A  2A27               	incf	___fldiv@aexp,f,c
  4646  00120C                     i2l891:
  4647  00120C  0E19               	movlw	25
  4648  00120E  6427               	cpfsgt	___fldiv@aexp,c
  4649  001210  D7D5               	goto	i2l2294
  4650  001212  501B               	movf	___fldiv@rem,w,c
  4651  001214  101C               	iorwf	___fldiv@rem+1,w,c
  4652  001216  101D               	iorwf	___fldiv@rem+2,w,c
  4653  001218  101E               	iorwf	___fldiv@rem+3,w,c
  4654  00121A  B4D8               	btfsc	status,2,c
  4655  00121C  D011               	goto	i2l2320
  4656  00121E  8022               	bsf	___fldiv@grs,0,c
  4657  001220  D00F               	goto	i2l2320
  4658  001222                     i2l2314:
  4659  001222  90D8               	bcf	status,0,c
  4660  001224  360F               	rlcf	___fldiv@b,f,c
  4661  001226  3610               	rlcf	___fldiv@b+1,f,c
  4662  001228  3611               	rlcf	___fldiv@b+2,f,c
  4663  00122A  3612               	rlcf	___fldiv@b+3,f,c
  4664  00122C  BE25               	btfsc	___fldiv@grs+3,7,c
  4665  00122E  800F               	bsf	___fldiv@b,0,c
  4666  001230  90D8               	bcf	status,0,c
  4667  001232  3622               	rlcf	___fldiv@grs,f,c
  4668  001234  3623               	rlcf	___fldiv@grs+1,f,c
  4669  001236  3624               	rlcf	___fldiv@grs+2,f,c
  4670  001238  3625               	rlcf	___fldiv@grs+3,f,c
  4671  00123A  0620               	decf	___fldiv@new_exp,f,c
  4672  00123C  A0D8               	btfss	status,0,c
  4673  00123E  0621               	decf	___fldiv@new_exp+1,f,c
  4674  001240                     i2l2320:
  4675  001240  AE11               	btfss	___fldiv@b+2,7,c
  4676  001242  D7EF               	goto	i2l2314
  4677  001244  0E00               	movlw	0
  4678  001246  6E27               	movwf	___fldiv@aexp,c
  4679  001248  AE25               	btfss	___fldiv@grs+3,7,c
  4680  00124A  D017               	goto	i2l902
  4681  00124C  0EFF               	movlw	255
  4682  00124E  1422               	andwf	___fldiv@grs,w,c
  4683  001250  6E17               	movwf	??___fldiv& (0+255),c
  4684  001252  0EFF               	movlw	255
  4685  001254  1423               	andwf	___fldiv@grs+1,w,c
  4686  001256  6E18               	movwf	(??___fldiv+1)& (0+255),c
  4687  001258  0EFF               	movlw	255
  4688  00125A  1424               	andwf	___fldiv@grs+2,w,c
  4689  00125C  6E19               	movwf	(??___fldiv+2)& (0+255),c
  4690  00125E  0E7F               	movlw	127
  4691  001260  1425               	andwf	___fldiv@grs+3,w,c
  4692  001262  6E1A               	movwf	(??___fldiv+3)& (0+255),c
  4693  001264  5017               	movf	??___fldiv,w,c
  4694  001266  1018               	iorwf	??___fldiv+1,w,c
  4695  001268  1019               	iorwf	??___fldiv+2,w,c
  4696  00126A  101A               	iorwf	??___fldiv+3,w,c
  4697  00126C  B4D8               	btfsc	status,2,c
  4698  00126E  D003               	goto	i2l903
  4699  001270                     i2u196_40:
  4700  001270  0E01               	movlw	1
  4701  001272  6E27               	movwf	___fldiv@aexp,c
  4702  001274  D002               	goto	i2l902
  4703  001276                     i2l903:
  4704  001276  B00F               	btfsc	___fldiv@b,0,c
  4705  001278  D7FB               	goto	i2u196_40
  4706  00127A                     i2l902:
  4707  00127A  5027               	movf	___fldiv@aexp,w,c
  4708  00127C  B4D8               	btfsc	status,2,c
  4709  00127E  D01F               	goto	i2l2340
  4710  001280  0E01               	movlw	1
  4711  001282  260F               	addwf	___fldiv@b,f,c
  4712  001284  0E00               	movlw	0
  4713  001286  2210               	addwfc	___fldiv@b+1,f,c
  4714  001288  2211               	addwfc	___fldiv@b+2,f,c
  4715  00128A  2212               	addwfc	___fldiv@b+3,f,c
  4716  00128C  A012               	btfss	___fldiv@b+3,0,c
  4717  00128E  D017               	goto	i2l2340
  4718  001290  C00F  F017         	movff	___fldiv@b,??___fldiv
  4719  001294  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  4720  001298  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  4721  00129C  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  4722  0012A0  341A               	rlcf	??___fldiv+3,w,c
  4723  0012A2  321A               	rrcf	??___fldiv+3,f,c
  4724  0012A4  3219               	rrcf	??___fldiv+2,f,c
  4725  0012A6  3218               	rrcf	??___fldiv+1,f,c
  4726  0012A8  3217               	rrcf	??___fldiv,f,c
  4727  0012AA  C017  F00F         	movff	??___fldiv,___fldiv@b
  4728  0012AE  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  4729  0012B2  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  4730  0012B6  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  4731  0012BA  4A20               	infsnz	___fldiv@new_exp,f,c
  4732  0012BC  2A21               	incf	___fldiv@new_exp+1,f,c
  4733  0012BE                     i2l2340:
  4734  0012BE  BE21               	btfsc	___fldiv@new_exp+1,7,c
  4735  0012C0  D010               	goto	i2l2344
  4736  0012C2  5021               	movf	___fldiv@new_exp+1,w,c
  4737  0012C4  E103               	bnz	i2u200_40
  4738  0012C6  2820               	incf	___fldiv@new_exp,w,c
  4739  0012C8  A0D8               	btfss	status,0,c
  4740  0012CA  D00B               	goto	i2l2344
  4741  0012CC                     i2u200_40:
  4742  0012CC  0E00               	movlw	0
  4743  0012CE  6E21               	movwf	___fldiv@new_exp+1,c
  4744  0012D0  6820               	setf	___fldiv@new_exp,c
  4745  0012D2  0E00               	movlw	0
  4746  0012D4  6E0F               	movwf	___fldiv@b,c
  4747  0012D6  0E00               	movlw	0
  4748  0012D8  6E10               	movwf	___fldiv@b+1,c
  4749  0012DA  0E00               	movlw	0
  4750  0012DC  6E11               	movwf	___fldiv@b+2,c
  4751  0012DE  0E00               	movlw	0
  4752  0012E0  6E12               	movwf	___fldiv@b+3,c
  4753  0012E2                     i2l2344:
  4754  0012E2  BE21               	btfsc	___fldiv@new_exp+1,7,c
  4755  0012E4  D005               	goto	i2u201_40
  4756  0012E6  5021               	movf	___fldiv@new_exp+1,w,c
  4757  0012E8  E111               	bnz	i2l2348
  4758  0012EA  0420               	decf	___fldiv@new_exp,w,c
  4759  0012EC  B0D8               	btfsc	status,0,c
  4760  0012EE  D00E               	goto	i2l2348
  4761  0012F0                     i2u201_40:
  4762  0012F0  0E00               	movlw	0
  4763  0012F2  6E21               	movwf	___fldiv@new_exp+1,c
  4764  0012F4  0E00               	movlw	0
  4765  0012F6  6E20               	movwf	___fldiv@new_exp,c
  4766  0012F8  0E00               	movlw	0
  4767  0012FA  6E0F               	movwf	___fldiv@b,c
  4768  0012FC  0E00               	movlw	0
  4769  0012FE  6E10               	movwf	___fldiv@b+1,c
  4770  001300  0E00               	movlw	0
  4771  001302  6E11               	movwf	___fldiv@b+2,c
  4772  001304  0E00               	movlw	0
  4773  001306  6E12               	movwf	___fldiv@b+3,c
  4774  001308  0E00               	movlw	0
  4775  00130A  6E1F               	movwf	___fldiv@sign,c
  4776  00130C                     i2l2348:
  4777  00130C  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  4778  001310  A026               	btfss	___fldiv@bexp,0,c
  4779  001312  D002               	goto	i2l2354
  4780  001314  8E11               	bsf	___fldiv@b+2,7,c
  4781  001316  D001               	goto	i2l2356
  4782  001318                     i2l2354:
  4783  001318  9E11               	bcf	___fldiv@b+2,7,c
  4784  00131A                     i2l2356:
  4785  00131A  90D8               	bcf	status,0,c
  4786  00131C  3026               	rrcf	___fldiv@bexp,w,c
  4787  00131E  6E12               	movwf	___fldiv@b+3,c
  4788  001320  D70E               	goto	i2l2270
  4789  001322                     __end_of___fldiv:
  4790                           	opt callstack 0
  4791                           
  4792                           	psect	rparam
  4793  0000                     
  4794                           	psect	temp
  4795  00004A                     btemp:
  4796                           	opt callstack 0
  4797  00004A                     	ds	1
  4798  0000                     int$flags	set	btemp
  4799  0000                     wtemp8	set	btemp+1
  4800  0000                     ttemp5	set	btemp+1
  4801  0000                     ttemp6	set	btemp+4
  4802  0000                     ttemp7	set	btemp+8
  4803                           tosu	equ	0xFFF
  4804                           tosh	equ	0xFFE
  4805                           tosl	equ	0xFFD
  4806                           stkptr	equ	0xFFC
  4807                           pclatu	equ	0xFFB
  4808                           pclath	equ	0xFFA
  4809                           pcl	equ	0xFF9
  4810                           tblptru	equ	0xFF8
  4811                           tblptrh	equ	0xFF7
  4812                           tblptrl	equ	0xFF6
  4813                           tablat	equ	0xFF5
  4814                           prodh	equ	0xFF4
  4815                           prodl	equ	0xFF3
  4816                           indf0	equ	0xFEF
  4817                           postinc0	equ	0xFEE
  4818                           postdec0	equ	0xFED
  4819                           preinc0	equ	0xFEC
  4820                           plusw0	equ	0xFEB
  4821                           fsr0h	equ	0xFEA
  4822                           fsr0l	equ	0xFE9
  4823                           wreg	equ	0xFE8
  4824                           indf1	equ	0xFE7
  4825                           postinc1	equ	0xFE6
  4826                           postdec1	equ	0xFE5
  4827                           preinc1	equ	0xFE4
  4828                           plusw1	equ	0xFE3
  4829                           fsr1h	equ	0xFE2
  4830                           fsr1l	equ	0xFE1
  4831                           bsr	equ	0xFE0
  4832                           indf2	equ	0xFDF
  4833                           postinc2	equ	0xFDE
  4834                           postdec2	equ	0xFDD
  4835                           preinc2	equ	0xFDC
  4836                           plusw2	equ	0xFDB
  4837                           fsr2h	equ	0xFDA
  4838                           fsr2l	equ	0xFD9
  4839                           status	equ	0xFD8


Data Sizes:
    Strings     129
    Constant    23
    Data        4
    BSS         56
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     57      73
    BANK0           128     83     127
    BANK1           256     14      14
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_10(CODE[15]), STR_9(CODE[15]), STR_8(CODE[15]), STR_7(CODE[15]), 
		 -> STR_6(CODE[15]), STR_5(CODE[16]), STR_4(CODE[15]), STR_3(CODE[16]), 
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S889_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_10(CODE[15]), STR_9(CODE[15]), STR_8(CODE[15]), STR_7(CODE[15]), 
		 -> STR_6(CODE[15]), STR_5(CODE[16]), STR_4(CODE[15]), STR_3(CODE[16]), 
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_10(CODE[15]), STR_9(CODE[15]), STR_8(CODE[15]), STR_7(CODE[15]), 
		 -> STR_6(CODE[15]), STR_5(CODE[16]), STR_4(CODE[15]), STR_3(CODE[16]), 
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 


Critical Paths under _main in COMRAM

    _main->_lcdInst
    _start->_I2C_Master_Write
    _setup->_I2C_Master_Init
    _initLCD->_lcdInst
    _lcdInst->_send_byte
    _dtoa->_abs
    _pad->_strlen
    _fputc->_putch
    _putch->_send_byte
    _send_byte->_send_nibble
    _send_nibble->_pulse_e
    _abs->___aomod
    _brake->_I2C_Master_Write
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait

Critical Paths under _echo in COMRAM

    _echo->___fltol
    ___fltol->___fldiv
    ___fldiv->___xxtofl

Critical Paths under _main in BANK0

    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod

Critical Paths under _echo in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_printf
    _printf->_vfprintf

Critical Paths under _echo in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _echo in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _echo in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _echo in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _echo in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _echo in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _echo in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _echo in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _echo in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _echo in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _echo in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _echo in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _echo in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _echo in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _echo in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   11372
                                             81 BANK0      2     2      0
                              _brake
                            _lcdInst
                             _printf
                              _setup
                              _start
 ---------------------------------------------------------------------------------
 (1) _start                                                0     0      0     402
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _setup                                               11    11      0    1303
                                             17 BANK0      6     6      0
                    _I2C_Master_Init
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _initLCD
 ---------------------------------------------------------------------------------
 (2) _initLCD                                              1     1      0     350
                                              0 BANK0      1     1      0
                            _lcdInst
                          _send_byte
                        _send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcdInst                                              1     1      0     158
                                             56 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                             53 COMRAM     4     0      4
                                             13 BANK0      4     4      0
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     421
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    9107
                                              6 BANK1      8     4      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    8126
                                             79 BANK0      2     2      0
                                              0 BANK1      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    7653
                                             63 BANK0     16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    5813
                                             27 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3547
                                             16 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                             53 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1602
                                              9 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1102
                                              0 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0     158
                                             56 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (3) _send_byte                                            1     1      0     127
                                             55 COMRAM     1     1      0
                        _send_nibble
 ---------------------------------------------------------------------------------
 (3) _send_nibble                                          1     1      0      65
                                             54 COMRAM     1     1      0
                            _pulse_e
 ---------------------------------------------------------------------------------
 (4) _pulse_e                                              1     1      0      34
                                             53 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             55 COMRAM     2     0      2
                                             16 BANK0      2     2      0
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                             53 COMRAM     2     2      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (1) _brake                                                0     0      0     402
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     402
                                             54 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      1     1      0       0
                                             53 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _echo                                                4     4      0    3014
                                             49 COMRAM     4     4      0
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (13) ___xxtofl                                           14    10      4     626
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (13) ___fltol                                            10     6      4     533
                                             39 COMRAM    10     6      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (13) ___fldiv                                            25    17      8    1855
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _brake
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _lcdInst
     _send_byte
       _send_nibble
         _pulse_e
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _fputc
           _putch
             _send_byte
               _send_nibble
                 _pulse_e
   _setup
     _I2C_Master_Init
       ___lldiv
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _initLCD
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _send_byte
         _send_nibble
           _pulse_e
       _send_nibble
         _pulse_e
   _start
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait

 _echo (ROOT)
   ___fldiv
     ___xxtofl (ARG)
   ___fltol
     ___fldiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___xxtofl

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      E       E       7        5.5%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     53      7F       5       99.2%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     39      49       1       57.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D6      34        0.0%
DATA                 0      0      D6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Mar 23 21:38:47 2019

               ___fldiv@aexp 0027                 ___fldiv@bexp 0026                            _a 003A  
                          _b 0048                 ___fldiv@sign 001F                  __CFG_CPD$ON 000000  
                __CFG_BORV$3 000000                 __CFG_CP0$OFF 000000                 __CFG_CP1$OFF 000000  
               __CFG_CP2$OFF 000000                 __CFG_CP3$OFF 000000                  __CFG_OSC$HS 000000  
                        l270 1396                          l334 1F42                          l272 139E  
                        l259 1E64                          l982 21EA                          _GIE 007F97  
               __CFG_CPB$OFF 000000                          _RB2 007C0A                          _RB3 007C0B  
                        _RB4 007C0C                          _RD0 007C18                          _RB5 007C0D  
                        _RD1 007C19                          _RB6 007C0E                          _RB7 007C0F  
                        _abs 21C0                          _pad 1E32                          wreg 000FE8  
               __CFG_LVP$OFF 000000                 ___fltol@exp1 0031                 __CFG_WDT$OFF 000000  
                       ?_abs 0038                         l3014 20A6                         l3016 20CC  
                       l2810 1A24                         l2802 19E8                         l2732 21A8  
                       l2806 19FE                         l2830 1BF2                         l2822 1BB4  
                       l2718 1FDE                         l2832 1C06                         l2728 2190  
                       l2736 21FE                         l2752 1E5C                         l2904 1526  
                       l2842 1C64                         l2826 1BD8                         l2738 2202  
                       l2762 1EB4                         l2754 1E6E                         l2748 1E4C  
                       l2908 153E                         l2940 18A2                         l2790 1978  
                       l2846 1C8A                         l2838 1C4E                         l2758 1E88  
                       l2870 13B8                         l2934 1866                         l2950 18C6  
                       ?_pad 0090                         l2792 198C                         l2784 1952  
                       l2856 137A                         l2944 18AE                         l2778 192A  
                       l2874 13C6                         l2884 14C0                         l2964 1EF4  
                       l2966 1F00                         l2976 1F34                         STR_1 1092  
                       STR_2 1096                         STR_3 1018                         STR_4 1038  
                       STR_5 1028                         STR_6 1047                         STR_7 1074  
                       STR_8 1056                         STR_9 1083                         u3020 1F04  
                       _LATB 000F8A                         _LATD 000F8C                         u3045 205C  
                       u2610 201E                         u3307 1CE6                         u3317 1D04  
                       u2711 1958                         u3407 2236                         u3327 1D20  
                       u3337 1D48                         u2730 1990                         u3347 1D66  
                       u2820 134C                         u3357 1F5C                         u2590 1FD6  
                       u2910 14F2                         u2830 134E                         u2575 2244  
                       u2911 14F0                         u3367 1F76                         u2680 21CE  
                       u2576 2246                         u2920 1500                         u3377 1F88  
                       u3297 1CBE                         u2930 1504                         u3387 1FAC  
                       u2860 138C                         u3397 222C                         u2790 1C0A  
                       u2950 1510                         _RBIE 007F93                         u2880 13B2  
                       _RBIF 007F90                         u2890 14D0                         u2990 17E8  
                       abs@a 0038                         _echo 0008                         _dbuf 00DB  
                       _main 1CAC                         _dtoa 1322                         _keys 1001  
                       _prec 00D7                         _nout 00D3                         pad@i 0097  
                       pad@p 0094                         fsr1h 000FE2                         fsr2h 000FDA  
                       indf2 000FDF                         fsr1l 000FE1                         pad@w 0099  
                       fsr2l 000FD9                         btemp 004A                         start 000E  
              __CFG_IESO$OFF 000000              ___fldiv@new_exp 0020                __CFG_MCLRE$ON 000000  
               ___param_bank 000000                        ??_abs 0090                        ??_pad 0096  
           ?_I2C_Master_Init 0036             ?_I2C_Master_Wait 0001             ?_I2C_Master_Stop 0001  
                      ?_echo 0001                ___fltol@sign1 0030              __end_of___aodiv 1A46  
                      ?_main 0001                        ?_dtoa 009B              __end_of___aomod 1CAC  
            __end_of___fldiv 1322                        STR_10 1065              __end_of___fltol 1E32  
            __end_of___lldiv 1F54                        _T1CON 000FCD                        i2l902 127A  
                      i2l903 1276                        i2l962 1A84                        i2l891 120C  
                      i2l969 1B02                 vfpfcnvrt@fmt 00C1                        _TMR1H 000FCF  
                      _TMR1L 000FCE                        _TRISB 000F93                        _TRISD 000F95  
              __CFG_PWRT$OFF 000000                __CFG_WRT0$OFF 000000                __CFG_WRT1$OFF 000000  
              __CFG_WRT2$OFF 000000                __CFG_WRT3$OFF 000000              __end_of_lcdInst 22FA  
             __CFG_EBTR0$OFF 000000               __CFG_FCMEN$OFF 000000               __CFG_EBTR1$OFF 000000  
             __CFG_EBTR2$OFF 000000               __CFG_EBTR3$OFF 000000                __CFG_WRTB$OFF 000000  
              __CFG_WRTC$OFF 000000                __CFG_WRTD$OFF 000000              __end_of_initLCD 1FC4  
             __CFG_EBTRB$OFF 000000                        _brake 2292                        _flags 00D9  
                      _fputc 1FC4                        _fputs 2184                        _setup 20E8  
                      pad@fp 0090                        _width 00D5                        _putch 22FA  
                      _start 2270                        dtoa@d 009D                        dtoa@i 00BD  
                      dtoa@n 00B5                        dtoa@p 00AF                        dtoa@s 00B3  
                      dtoa@w 00B1                        tablat 000FF5              send_nibble@data 0037  
            __end_of_pulse_e 2248                        ttemp5 004B                        ttemp6 004E  
                      ttemp7 0052                        status 000FD8                        wtemp8 004B  
             __CFG_PBADEN$ON 000000              __initialization 213A                 __end_of_echo 1776  
               __end_of_main 1D78                 __end_of_dtoa 1568                 __end_of_keys 1012  
                     ??_echo 0032                       ??_main 00D1                       ??_dtoa 00A5  
              __activetblptr 000001            ?_I2C_Master_Start 0001            ?_I2C_Master_Write 0037  
         ??_I2C_Master_Start 0037                       ?_brake 0001                       _ADCON1 000FC1  
         ??_I2C_Master_Write 0039                 ?_send_nibble 0001                       ?_fputc 0080  
                     ?_fputs 0089                       ?_setup 0001                       ?_putch 0001  
                     ?_start 0001                       i2l2302 11E4                       i2l2320 1240  
                     i2l2314 1222                       i2l2242 10CA                       i2l2340 12BE  
                     i2l2308 120A                       i2l2404 1E20                       i2l2420 1AB2  
                     i2l2270 113E                       i2l2262 110A                       i2l2238 10C6  
                     i2l2422 1AB8                       i2l2414 1A94                       i2l2344 12E2  
                     i2l2432 1B28                       i2l2424 1AC4                       i2l2354 1318  
                     i2l2258 1106                       i2l2370 1D96                       i2l2450 1B74  
                     i2l2434 1B34                       i2l2426 1AEA                       i2l2356 131A  
                     i2l2348 130C                       i2l2284 116C                       i2l2276 1154  
                     i2l2294 11BC                       i2l2390 1DF0                       i2l2534 15EE  
                     i2l2544 166E                       i2l2386 1DE0                       i2l2554 16EE  
                     i2l2396 1DF8                       i2l2564 176E                       i2l2398 1E04  
                     _TMR1ON 007E68                       _SSPADD 000FC8                       _SSPBUF 000FC9  
           __end_of___xxtofl 1B86               __CFG_XINST$OFF 000000                 vfprintf@cfmt 00CF  
                  ??___aodiv 0036                    ??___aomod 0036                    ??___fldiv 0017  
             __CFG_STVREN$ON 000000                    ??___fltol 002C                    ??___lldiv 0036  
                     clear_0 2160                       clear_1 216C                    ??_lcdInst 0039  
                     _printf 2248                       pad@buf 0092                       dtoa@fp 009B  
                     _strlen 21F4                    ??_initLCD 0080                       fputc@c 0080  
                     fputs@c 008D                       fputs@i 008E                       fputs@s 0089  
               __mediumconst 0000                       tblptrh 000FF7                       tblptrl 000FF6  
                     tblptru 000FF8             __end_of_vfprintf 20E8                    ??_pulse_e 0036  
               ___xxtofl@arg 000B        pulse_e@interruptState 0036                 ___xxtofl@exp 000A  
               ___xxtofl@val 0001                   __accesstop 0080      __end_of__initialization 2172  
              ___rparam_used 000001                   ___fltol@f1 0028               __pcstackCOMRAM 0001  
               __pidataBANK0 2320                __end_of_brake 22B4                __end_of_fputc 2032  
              __end_of_fputs 21C0                __end_of_setup 213A                __end_of_putch 2306  
              __end_of_start 2292                      ??_brake 0039                      ??_fputc 0084  
                    ??_fputs 003A                      ??_setup 003A                      ??_putch 0039  
                    ??_start 0039                   __pbssBANK0 00D3           __size_of_send_byte 0012  
                    ?_printf 0106                      ?_strlen 0036                    ?___xxtofl 0001  
         __size_of_vfpfcnvrt 0186                   _dist_final 0042                      _SSPCON1 000FC6  
                    _SSPCON2 000FC5                      _SSPSTAT 000FC7         __size_of_send_nibble 0016  
                    __Hparam 0000                      __Lparam 0000                      ___aodiv 18FC  
                    ___aomod 1B86                      ___fldiv 109A                      ___fltol 1D78  
                    ___lldiv 1ED0                    ?_vfprintf 0100                 __psmallconst 1000  
                    __pcinit 213A                      __ramtop 1000                      _lcdInst 22EE  
                    __ptext0 1CAC                      __ptext1 2270                      __ptext2 20E8  
                    __ptext3 1F54                      __ptext4 22EE                      __ptext5 2032  
                    __ptext6 1ED0                      __ptext7 2248                      __ptext8 2092  
                    __ptext9 1776              __size_of_printf 0028              __size_of_strlen 002A  
                    _initLCD 1F54                 __size_of_abs 0034                 __size_of_pad 009E  
                 ??___xxtofl 0005     __size_of_I2C_Master_Init 0060     __size_of_I2C_Master_Wait 0012  
   __size_of_I2C_Master_Stop 0008                      _pulse_e 221E               __pintcode_body 1568  
       end_of_initialization 2172        __end_of_LCD_SIZE_HORZ 1018            __end_of_send_byte 22DC  
      __end_of_LCD_SIZE_VERT 1017                      fputc@fp 0082                      int_func 1568  
                    fputs@fp 008B    __size_of_I2C_Master_Start 0008    __size_of_I2C_Master_Write 000A  
            ___lldiv@divisor 0084              ___lldiv@counter 008C            __end_of_vfpfcnvrt 18FC  
                    postdec1 000FE5                      postdec2 000FDD                      postinc0 000FEE  
                    postinc1 000FE6                      postinc2 000FDE                   ??_vfprintf 003A  
                    strlen@a 0038                      strlen@s 0036                ___xxtofl@sign 0009  
                  _TRISCbits 000F94                  ___fldiv@grs 0022                  ___fldiv@rem 001B  
              send_byte@data 0038                  vfpfcnvrt@ap 00C3                  vfpfcnvrt@fp 00BF  
                vfpfcnvrt@ll 00C7               __end_of_printf 2270               __end_of_strlen 221E  
        start_initialization 213A                  __end_of_abs 21F4                  __end_of_pad 1ED0  
          ??_I2C_Master_Init 008D            ??_I2C_Master_Wait 0036            ??_I2C_Master_Stop 0037  
                vfprintf@fmt 0102     I2C_Master_Init@clockFreq 0036                  __pdataBANK0 00FB  
           __CFG_LPT1OSC$OFF 000000                     ??_printf 003A                     ??_strlen 0038  
                  ___fldiv@a 0013                    ___fldiv@b 000F                  __pbssCOMRAM 003A  
              __pcstackBANK0 0080                __pcstackBANK1 0100             ___aodiv@dividend 0080  
          __size_of___xxtofl 0140             _I2C_Master_Start 2318             _I2C_Master_Write 2306  
          __CFG_CCP2MX$PORTC 000000                    __pintcode 0008                     ?___aodiv 0080  
                   ?___aomod 0080                     ?___fldiv 000F             ___aodiv@quotient 0092  
                   ?___fltol 0028                     ?___lldiv 0080                     ?_lcdInst 0001  
          __size_of_vfprintf 0056                     ?_initLCD 0001                  __smallconst 1000  
              ??_send_nibble 0037                     ?_pulse_e 0001               __size_of_brake 0022  
             __size_of_fputc 006E               __size_of_fputs 003C               __size_of_setup 0052  
             __size_of_putch 000C               __size_of_start 0022                     _LATDbits 000F8C  
                 setup@F2786 00FB                    _send_byte 22CA               _LCD_LINE1_ADDR 1015  
             _LCD_LINE2_ADDR 1014               _LCD_LINE3_ADDR 1013                     i2u200_40 12CC  
             _LCD_LINE4_ADDR 1012                     i2u201_40 12F0                     i2u203_40 1D84  
                   i2u204_40 1DB4                     i2u204_45 1DAA                     i2u208_40 1E0A  
                   i2u216_40 1B3E                     i2u196_40 1270             __CFG_WDTPS$32768 000000  
                  _vfpfcnvrt 1776                   setup@dists 0091                    copy_data0 214E  
     __end_of_LCD_LINE1_ADDR 1016       __end_of_LCD_LINE2_ADDR 1015       __end_of_LCD_LINE3_ADDR 1014  
     __end_of_LCD_LINE4_ADDR 1013          __end_of_send_nibble 22CA                   ?_send_byte 0001  
                   __Hrparam 0000                   vfprintf@ap 0104                     __Lrparam 0000  
                 vfprintf@fp 0100                 __Lsmallconst 1000           __CFG_BOREN$SBORDIS 000000  
           __size_of___aodiv 014A             __size_of___aomod 0126             __size_of___fldiv 0288  
           __size_of___fltol 00BA             __size_of___lldiv 0084                   ?_vfpfcnvrt 00BF  
            ___aodiv@divisor 0088              ___aodiv@counter 0090             __size_of_lcdInst 000C  
            _I2C_Master_Init 2032             __size_of_initLCD 0070                     ___xxtofl 1A46  
            _I2C_Master_Wait 22DC              _I2C_Master_Stop 2310                     _dtoa$428 00AD  
                   __ptext10 1322                     __ptext11 1E32                     __ptext20 1B86  
                   __ptext12 21F4                     __ptext21 18FC                     __ptext13 2184  
                   __ptext30 109A                     __ptext22 2292                     __ptext14 1FC4  
                   __ptext23 2306                     __ptext15 22FA                     __ptext24 2310  
                   __ptext16 22CA                     __ptext25 2318                     __ptext17 22B4  
                   __ptext26 22DC                     __ptext18 221E                     __ptext19 21C0  
                   __ptext28 1A46                     __ptext29 1D78             __size_of_pulse_e 002A  
              __size_of_echo 176E                __size_of_main 00CC                __size_of_dtoa 0246  
                   int$flags 004A                     _vfprintf 2092                    printf@fmt 0106  
I2C_Master_Write@byteToWrite 0037             ___aomod@dividend 0080                    putch@data 0039  
   __end_of_I2C_Master_Start 2320     __end_of_I2C_Master_Write 2310                   _INTCONbits 000FF2  
                _send_nibble 22B4                     intlevel2 0000                _LCD_SIZE_HORZ 1017  
              _LCD_SIZE_VERT 1016             ___lldiv@dividend 0080                  ??_send_byte 0038  
                   printf@ap 010C      __end_of_I2C_Master_Init 2092              ___aomod@divisor 0088  
    __end_of_I2C_Master_Wait 22EE      __end_of_I2C_Master_Stop 2318                  ??_vfpfcnvrt 00C5  
                lcdInst@data 0039              ___aomod@counter 0036             ___lldiv@quotient 0088  
                _SSPCON1bits 000FC6                  _SSPCON2bits 000FC5                 ___aodiv@sign 0091  
               ___aomod@sign 0037  
