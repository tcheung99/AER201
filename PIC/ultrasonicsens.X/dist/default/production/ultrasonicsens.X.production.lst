

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Apr 03 23:57:01 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,inline
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    42                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    43  0000                     
    44                           ; Version 2.05
    45                           ; Generated 20/12/2018 GMT
    46                           ; 
    47                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC18F4620 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     
    79                           	psect	smallconst
    80  001000                     __psmallconst:
    81                           	opt callstack 0
    82  001000  00                 	db	0
    83  001001  50                 	db	80
    84  001002                     __end_of_LCD_LINE4_ADDR:
    85                           	opt callstack 0
    86  001002  10                 	db	16
    87  001003                     __end_of_LCD_LINE3_ADDR:
    88                           	opt callstack 0
    89  001003  40                 	db	64
    90  001004                     __end_of_LCD_LINE2_ADDR:
    91                           	opt callstack 0
    92  001004                     _LCD_LINE1_ADDR:
    93                           	opt callstack 0
    94  001004  00                 	db	0
    95  001005                     __end_of_LCD_LINE1_ADDR:
    96                           	opt callstack 0
    97  001005                     _LCD_SIZE_VERT:
    98                           	opt callstack 0
    99  001005  04                 	db	4
   100  001006                     __end_of_LCD_SIZE_VERT:
   101                           	opt callstack 0
   102  001006                     _LCD_SIZE_HORZ:
   103                           	opt callstack 0
   104  001006  10                 	db	16
   105  001007                     __end_of_LCD_SIZE_HORZ:
   106                           	opt callstack 0
   107  0000                     _T1CON	set	4045
   108  0000                     _LATBbits	set	3978
   109  0000                     _TRISBbits	set	3987
   110  0000                     _ADCON1	set	4033
   111  0000                     _TRISD	set	3989
   112  0000                     _TRISB	set	3987
   113  0000                     _TMR1H	set	4047
   114  0000                     _TMR1L	set	4046
   115  0000                     _LATD	set	3980
   116  0000                     _LATDbits	set	3980
   117  0000                     _INTCONbits	set	4082
   118  0000                     _SSPBUF	set	4041
   119  0000                     _SSPCON2bits	set	4037
   120  0000                     _SSPCON1	set	4038
   121  0000                     _SSPADD	set	4040
   122  0000                     _TRISCbits	set	3988
   123  0000                     _SSPCON1bits	set	4038
   124  0000                     _SSPCON2	set	4037
   125  0000                     _SSPSTAT	set	4039
   126  0000                     _GIE	set	32663
   127  0000                     _RB2	set	31754
   128  0000                     _RB3	set	31755
   129  0000                     _RD0	set	31768
   130  0000                     _RD1	set	31769
   131  0000                     _RB4	set	31756
   132  0000                     _RB5	set	31757
   133  0000                     _RB6	set	31758
   134  0000                     _TMR1ON	set	32360
   135  0000                     _RB7	set	31759
   136  0000                     _RBIE	set	32659
   137  0000                     _RBIF	set	32656
   138  001007                     STR_1:
   139  001007  44                 	db	68	;'D'
   140  001008  69                 	db	105	;'i'
   141  001009  73                 	db	115	;'s'
   142  00100A  74                 	db	116	;'t'
   143  00100B  31                 	db	49	;'1'
   144  00100C  3D                 	db	61	;'='
   145  00100D  25                 	db	37
   146  00100E  64                 	db	100	;'d'
   147  00100F  2C                 	db	44
   148  001010  41                 	db	65	;'A'
   149  001011  76                 	db	118	;'v'
   150  001012  67                 	db	103	;'g'
   151  001013  3D                 	db	61	;'='
   152  001014  25                 	db	37
   153  001015  64                 	db	100	;'d'
   154  001016  20                 	db	32
   155  001017  00                 	db	0
   156  001018                     STR_7:
   157  001018  44                 	db	68	;'D'
   158  001019  69                 	db	105	;'i'
   159  00101A  73                 	db	115	;'s'
   160  00101B  74                 	db	116	;'t'
   161  00101C  34                 	db	52	;'4'
   162  00101D  3D                 	db	61	;'='
   163  00101E  25                 	db	37
   164  00101F  64                 	db	100	;'d'
   165  001020  2C                 	db	44
   166  001021  41                 	db	65	;'A'
   167  001022  76                 	db	118	;'v'
   168  001023  67                 	db	103	;'g'
   169  001024  3D                 	db	61	;'='
   170  001025  25                 	db	37
   171  001026  64                 	db	100	;'d'
   172  001027  20                 	db	32
   173  001028  00                 	db	0
   174  001029  64                 	db	100	;'d'
   175  00102A  65                 	db	101	;'e'
   176  00102B  74                 	db	116	;'t'
   177  00102C  2C                 	db	44
   178  00102D  25                 	db	37
   179  00102E  64                 	db	100	;'d'
   180  00102F  2C                 	db	44
   181  001030  20                 	db	32
   182  001031  74                 	db	116	;'t'
   183  001032  63                 	db	99	;'c'
   184  001033  6E                 	db	110	;'n'
   185  001034  74                 	db	116	;'t'
   186  001035  20                 	db	32
   187  001036  25                 	db	37
   188  001037  64                 	db	100	;'d'
   189  001038  00                 	db	0
   190  001039                     STR_3:
   191  001039  44                 	db	68	;'D'
   192  00103A  69                 	db	105	;'i'
   193  00103B  73                 	db	115	;'s'
   194  00103C  74                 	db	116	;'t'
   195  00103D  32                 	db	50	;'2'
   196  00103E  3D                 	db	61	;'='
   197  00103F  25                 	db	37
   198  001040  64                 	db	100	;'d'
   199  001041  2C                 	db	44
   200  001042  41                 	db	65	;'A'
   201  001043  76                 	db	118	;'v'
   202  001044  67                 	db	103	;'g'
   203  001045  3D                 	db	61	;'='
   204  001046  25                 	db	37
   205  001047  64                 	db	100	;'d'
   206  001048  00                 	db	0
   207  001049                     STR_5:
   208  001049  44                 	db	68	;'D'
   209  00104A  69                 	db	105	;'i'
   210  00104B  73                 	db	115	;'s'
   211  00104C  74                 	db	116	;'t'
   212  00104D  33                 	db	51	;'3'
   213  00104E  3D                 	db	61	;'='
   214  00104F  25                 	db	37
   215  001050  64                 	db	100	;'d'
   216  001051  2C                 	db	44
   217  001052  41                 	db	65	;'A'
   218  001053  76                 	db	118	;'v'
   219  001054  67                 	db	103	;'g'
   220  001055  3D                 	db	61	;'='
   221  001056  25                 	db	37
   222  001057  64                 	db	100	;'d'
   223  001058  00                 	db	0
   224  001059                     STR_2:
   225  001059  44                 	db	68	;'D'
   226  00105A  69                 	db	105	;'i'
   227  00105B  73                 	db	115	;'s'
   228  00105C  74                 	db	116	;'t'
   229  00105D  31                 	db	49	;'1'
   230  00105E  20                 	db	32
   231  00105F  3D                 	db	61	;'='
   232  001060  20                 	db	32
   233  001061  58                 	db	88	;'X'
   234  001062  00                 	db	0
   235  001063                     STR_4:
   236  001063  44                 	db	68	;'D'
   237  001064  69                 	db	105	;'i'
   238  001065  73                 	db	115	;'s'
   239  001066  74                 	db	116	;'t'
   240  001067  32                 	db	50	;'2'
   241  001068  20                 	db	32
   242  001069  3D                 	db	61	;'='
   243  00106A  20                 	db	32
   244  00106B  58                 	db	88	;'X'
   245  00106C  00                 	db	0
   246  00106D                     STR_6:
   247  00106D  44                 	db	68	;'D'
   248  00106E  69                 	db	105	;'i'
   249  00106F  73                 	db	115	;'s'
   250  001070  74                 	db	116	;'t'
   251  001071  33                 	db	51	;'3'
   252  001072  20                 	db	32
   253  001073  3D                 	db	61	;'='
   254  001074  20                 	db	32
   255  001075  58                 	db	88	;'X'
   256  001076  00                 	db	0
   257  001077                     STR_8:
   258  001077  44                 	db	68	;'D'
   259  001078  69                 	db	105	;'i'
   260  001079  73                 	db	115	;'s'
   261  00107A  74                 	db	116	;'t'
   262  00107B  34                 	db	52	;'4'
   263  00107C  20                 	db	32
   264  00107D  3D                 	db	61	;'='
   265  00107E  20                 	db	32
   266  00107F  58                 	db	88	;'X'
   267  001080  00                 	db	0
   268  001081  64                 	db	100	;'d'
   269  001082  66                 	db	102	;'f'
   270  001083  61                 	db	97	;'a'
   271  001084  64                 	db	100	;'d'
   272  001085  73                 	db	115	;'s'
   273  001086  00                 	db	0
   274                           
   275                           ; #config settings
   276  001087  00                 	db	0	; dummy byte at the end
   277  0000                     
   278                           	psect	cinit
   279  00274C                     __pcinit:
   280                           	opt callstack 0
   281  00274C                     start_initialization:
   282                           	opt callstack 0
   283  00274C                     __initialization:
   284                           	opt callstack 0
   285                           
   286                           ; Clear objects allocated to BANK1 (80 bytes)
   287  00274C  EE01  F000         	lfsr	0,__pbssBANK1
   288  002750  0E50               	movlw	80
   289  002752                     clear_0:
   290  002752  6AEE               	clrf	postinc0,c
   291  002754  06E8               	decf	wreg,f,c
   292  002756  E1FD               	bnz	clear_0
   293                           
   294                           ; Clear objects allocated to BANK0 (8 bytes)
   295  002758  EE00  F0F0         	lfsr	0,__pbssBANK0
   296  00275C  0E08               	movlw	8
   297  00275E                     clear_1:
   298  00275E  6AEE               	clrf	postinc0,c
   299  002760  06E8               	decf	wreg,f,c
   300  002762  E1FD               	bnz	clear_1
   301                           
   302                           ; Clear objects allocated to COMRAM (25 bytes)
   303  002764  EE00  F038         	lfsr	0,__pbssCOMRAM
   304  002768  0E19               	movlw	25
   305  00276A                     clear_2:
   306  00276A  6AEE               	clrf	postinc0,c
   307  00276C  06E8               	decf	wreg,f,c
   308  00276E  E1FD               	bnz	clear_2
   309  002770                     end_of_initialization:
   310                           	opt callstack 0
   311  002770                     __end_of__initialization:
   312                           	opt callstack 0
   313  002770  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   314  002772  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   315  002774  0E00               	movlw	low (__Lsmallconst shr (0+16))
   316  002776  6EF8               	movwf	tblptru,c
   317  002778  0E10               	movlw	high __Lsmallconst
   318  00277A  6EF7               	movwf	tblptrh,c
   319  00277C  0100               	movlb	0
   320  00277E  EF4D  F010         	goto	_main	;jump to C main() function
   321                           
   322                           	psect	bssCOMRAM
   323  000038                     __pbssCOMRAM:
   324                           	opt callstack 0
   325  000038                     _sum:
   326                           	opt callstack 0
   327  000038                     	ds	8
   328  000040                     _a:
   329                           	opt callstack 0
   330  000040                     	ds	8
   331  000048                     _sumf:
   332                           	opt callstack 0
   333  000048                     	ds	4
   334  00004C                     _meas:
   335                           	opt callstack 0
   336  00004C                     	ds	2
   337  00004E                     _b:
   338                           	opt callstack 0
   339  00004E                     	ds	2
   340  000050                     _echoo:
   341                           	opt callstack 0
   342  000050                     	ds	1
   343                           
   344                           	psect	bssBANK0
   345  0000F0                     __pbssBANK0:
   346                           	opt callstack 0
   347  0000F0                     _nout:
   348                           	opt callstack 0
   349  0000F0                     	ds	2
   350  0000F2                     _width:
   351                           	opt callstack 0
   352  0000F2                     	ds	2
   353  0000F4                     _prec:
   354                           	opt callstack 0
   355  0000F4                     	ds	2
   356  0000F6                     _flags:
   357                           	opt callstack 0
   358  0000F6                     	ds	2
   359                           
   360                           	psect	bssBANK1
   361  000100                     __pbssBANK1:
   362                           	opt callstack 0
   363  000100                     _dist_final:
   364                           	opt callstack 0
   365  000100                     	ds	48
   366  000130                     _dbuf:
   367                           	opt callstack 0
   368  000130                     	ds	32
   369                           
   370                           	psect	cstackBANK0
   371  000080                     __pcstackBANK0:
   372                           	opt callstack 0
   373  000080                     ??_trig:
   374  000080                     ?_strlen:
   375                           	opt callstack 0
   376  000080                     ?___wmul:
   377                           	opt callstack 0
   378  000080                     ?___aodiv:
   379                           	opt callstack 0
   380  000080                     ?___aomod:
   381                           	opt callstack 0
   382  000080                     pulse_e@interruptState:
   383                           	opt callstack 0
   384  000080                     ___wmul@multiplier:
   385                           	opt callstack 0
   386  000080                     strlen@s:
   387                           	opt callstack 0
   388  000080                     ___aodiv@dividend:
   389                           	opt callstack 0
   390  000080                     ___aomod@dividend:
   391                           	opt callstack 0
   392                           
   393                           ; 8 bytes @ 0x0
   394  000080                     	ds	1
   395  000081                     send_nibble@data:
   396                           	opt callstack 0
   397                           
   398                           ; 1 bytes @ 0x1
   399  000081                     	ds	1
   400  000082                     send_byte@data:
   401                           	opt callstack 0
   402  000082                     ___wmul@multiplicand:
   403                           	opt callstack 0
   404  000082                     strlen@a:
   405                           	opt callstack 0
   406                           
   407                           ; 2 bytes @ 0x2
   408  000082                     	ds	1
   409  000083                     lcdInst@data:
   410                           	opt callstack 0
   411  000083                     putch@data:
   412                           	opt callstack 0
   413                           
   414                           ; 1 bytes @ 0x3
   415  000083                     	ds	1
   416  000084                     ??_initLCD:
   417  000084                     ___wmul@product:
   418                           	opt callstack 0
   419  000084                     fputc@c:
   420                           	opt callstack 0
   421                           
   422                           ; 2 bytes @ 0x4
   423  000084                     	ds	2
   424  000086                     fputc@fp:
   425                           	opt callstack 0
   426                           
   427                           ; 2 bytes @ 0x6
   428  000086                     	ds	2
   429  000088                     ??_fputc:
   430  000088                     ___aodiv@divisor:
   431                           	opt callstack 0
   432  000088                     ___aomod@divisor:
   433                           	opt callstack 0
   434                           
   435                           ; 8 bytes @ 0x8
   436  000088                     	ds	5
   437  00008D                     fputs@s:
   438                           	opt callstack 0
   439                           
   440                           ; 2 bytes @ 0xD
   441  00008D                     	ds	2
   442  00008F                     fputs@fp:
   443                           	opt callstack 0
   444                           
   445                           ; 2 bytes @ 0xF
   446  00008F                     	ds	1
   447  000090                     ___aodiv@counter:
   448                           	opt callstack 0
   449  000090                     ___aomod@counter:
   450                           	opt callstack 0
   451                           
   452                           ; 1 bytes @ 0x10
   453  000090                     	ds	1
   454  000091                     ___aodiv@sign:
   455                           	opt callstack 0
   456  000091                     ___aomod@sign:
   457                           	opt callstack 0
   458  000091                     fputs@c:
   459                           	opt callstack 0
   460                           
   461                           ; 1 bytes @ 0x11
   462  000091                     	ds	1
   463  000092                     ?_abs:
   464                           	opt callstack 0
   465  000092                     abs@a:
   466                           	opt callstack 0
   467  000092                     fputs@i:
   468                           	opt callstack 0
   469  000092                     ___aodiv@quotient:
   470                           	opt callstack 0
   471                           
   472                           ; 8 bytes @ 0x12
   473  000092                     	ds	2
   474  000094                     ??_abs:
   475  000094                     ?_pad:
   476                           	opt callstack 0
   477  000094                     pad@fp:
   478                           	opt callstack 0
   479                           
   480                           ; 2 bytes @ 0x14
   481  000094                     	ds	2
   482  000096                     pad@buf:
   483                           	opt callstack 0
   484                           
   485                           ; 2 bytes @ 0x16
   486  000096                     	ds	2
   487  000098                     pad@p:
   488                           	opt callstack 0
   489                           
   490                           ; 2 bytes @ 0x18
   491  000098                     	ds	2
   492  00009A                     ??_pad:
   493                           
   494                           ; 1 bytes @ 0x1A
   495  00009A                     	ds	1
   496  00009B                     pad@i:
   497                           	opt callstack 0
   498                           
   499                           ; 2 bytes @ 0x1B
   500  00009B                     	ds	2
   501  00009D                     pad@w:
   502                           	opt callstack 0
   503                           
   504                           ; 2 bytes @ 0x1D
   505  00009D                     	ds	2
   506  00009F                     ?_dtoa:
   507                           	opt callstack 0
   508  00009F                     dtoa@fp:
   509                           	opt callstack 0
   510                           
   511                           ; 2 bytes @ 0x1F
   512  00009F                     	ds	2
   513  0000A1                     dtoa@d:
   514                           	opt callstack 0
   515                           
   516                           ; 8 bytes @ 0x21
   517  0000A1                     	ds	8
   518  0000A9                     ??_dtoa:
   519                           
   520                           ; 1 bytes @ 0x29
   521  0000A9                     	ds	8
   522  0000B1                     _dtoa$516:
   523                           	opt callstack 0
   524                           
   525                           ; 2 bytes @ 0x31
   526  0000B1                     	ds	2
   527  0000B3                     dtoa@p:
   528                           	opt callstack 0
   529                           
   530                           ; 2 bytes @ 0x33
   531  0000B3                     	ds	2
   532  0000B5                     dtoa@w:
   533                           	opt callstack 0
   534                           
   535                           ; 2 bytes @ 0x35
   536  0000B5                     	ds	2
   537  0000B7                     dtoa@s:
   538                           	opt callstack 0
   539                           
   540                           ; 2 bytes @ 0x37
   541  0000B7                     	ds	2
   542  0000B9                     dtoa@n:
   543                           	opt callstack 0
   544                           
   545                           ; 8 bytes @ 0x39
   546  0000B9                     	ds	8
   547  0000C1                     dtoa@i:
   548                           	opt callstack 0
   549                           
   550                           ; 2 bytes @ 0x41
   551  0000C1                     	ds	2
   552  0000C3                     ?_vfpfcnvrt:
   553                           	opt callstack 0
   554  0000C3                     vfpfcnvrt@fp:
   555                           	opt callstack 0
   556                           
   557                           ; 2 bytes @ 0x43
   558  0000C3                     	ds	2
   559  0000C5                     vfpfcnvrt@fmt:
   560                           	opt callstack 0
   561                           
   562                           ; 2 bytes @ 0x45
   563  0000C5                     	ds	2
   564  0000C7                     vfpfcnvrt@ap:
   565                           	opt callstack 0
   566                           
   567                           ; 2 bytes @ 0x47
   568  0000C7                     	ds	2
   569  0000C9                     ??_vfpfcnvrt:
   570                           
   571                           ; 1 bytes @ 0x49
   572  0000C9                     	ds	2
   573  0000CB                     vfpfcnvrt@ll:
   574                           	opt callstack 0
   575                           
   576                           ; 8 bytes @ 0x4B
   577  0000CB                     	ds	8
   578  0000D3                     ?_vfprintf:
   579                           	opt callstack 0
   580  0000D3                     vfprintf@fp:
   581                           	opt callstack 0
   582                           
   583                           ; 2 bytes @ 0x53
   584  0000D3                     	ds	2
   585  0000D5                     vfprintf@fmt:
   586                           	opt callstack 0
   587                           
   588                           ; 2 bytes @ 0x55
   589  0000D5                     	ds	2
   590  0000D7                     vfprintf@ap:
   591                           	opt callstack 0
   592                           
   593                           ; 2 bytes @ 0x57
   594  0000D7                     	ds	2
   595  0000D9                     vfprintf@cfmt:
   596                           	opt callstack 0
   597                           
   598                           ; 2 bytes @ 0x59
   599  0000D9                     	ds	2
   600  0000DB                     ?_printf:
   601                           	opt callstack 0
   602  0000DB                     printf@fmt:
   603                           	opt callstack 0
   604                           
   605                           ; 2 bytes @ 0x5B
   606  0000DB                     	ds	6
   607  0000E1                     
   608                           ; 1 bytes @ 0x61
   609  0000E1                     	ds	2
   610  0000E3                     printf@ap:
   611                           	opt callstack 0
   612                           
   613                           ; 2 bytes @ 0x63
   614  0000E3                     	ds	2
   615  0000E5                     ??_print_echo:
   616                           
   617                           ; 1 bytes @ 0x65
   618  0000E5                     	ds	1
   619  0000E6                     ??_main:
   620                           
   621                           ; 1 bytes @ 0x66
   622  0000E6                     	ds	4
   623  0000EA                     main@i:
   624                           	opt callstack 0
   625                           
   626                           ; 2 bytes @ 0x6A
   627  0000EA                     	ds	2
   628  0000EC                     main@k:
   629                           	opt callstack 0
   630                           
   631                           ; 2 bytes @ 0x6C
   632  0000EC                     	ds	2
   633  0000EE                     main@m:
   634                           	opt callstack 0
   635                           
   636                           ; 2 bytes @ 0x6E
   637  0000EE                     	ds	2
   638                           
   639                           	psect	cstackCOMRAM
   640  000001                     __pcstackCOMRAM:
   641                           	opt callstack 0
   642  000001                     ?___awdiv:
   643                           	opt callstack 0
   644  000001                     ?___xxtofl:
   645                           	opt callstack 0
   646  000001                     ___awdiv@dividend:
   647                           	opt callstack 0
   648  000001                     ___xxtofl@val:
   649                           	opt callstack 0
   650                           
   651                           ; 4 bytes @ 0x0
   652  000001                     	ds	2
   653  000003                     ___awdiv@divisor:
   654                           	opt callstack 0
   655                           
   656                           ; 2 bytes @ 0x2
   657  000003                     	ds	2
   658  000005                     ??___xxtofl:
   659  000005                     ___awdiv@counter:
   660                           	opt callstack 0
   661                           
   662                           ; 1 bytes @ 0x4
   663  000005                     	ds	1
   664  000006                     ___awdiv@sign:
   665                           	opt callstack 0
   666                           
   667                           ; 1 bytes @ 0x5
   668  000006                     	ds	1
   669  000007                     ___awdiv@quotient:
   670                           	opt callstack 0
   671                           
   672                           ; 2 bytes @ 0x6
   673  000007                     	ds	2
   674  000009                     ___xxtofl@sign:
   675                           	opt callstack 0
   676                           
   677                           ; 1 bytes @ 0x8
   678  000009                     	ds	1
   679  00000A                     ___xxtofl@exp:
   680                           	opt callstack 0
   681                           
   682                           ; 1 bytes @ 0x9
   683  00000A                     	ds	1
   684  00000B                     ___xxtofl@arg:
   685                           	opt callstack 0
   686                           
   687                           ; 4 bytes @ 0xA
   688  00000B                     	ds	4
   689  00000F                     ?___fldiv:
   690                           	opt callstack 0
   691  00000F                     ___fldiv@b:
   692                           	opt callstack 0
   693                           
   694                           ; 4 bytes @ 0xE
   695  00000F                     	ds	4
   696  000013                     ___fldiv@a:
   697                           	opt callstack 0
   698                           
   699                           ; 4 bytes @ 0x12
   700  000013                     	ds	4
   701  000017                     ??___fldiv:
   702                           
   703                           ; 1 bytes @ 0x16
   704  000017                     	ds	4
   705  00001B                     ___fldiv@rem:
   706                           	opt callstack 0
   707                           
   708                           ; 4 bytes @ 0x1A
   709  00001B                     	ds	4
   710  00001F                     ___fldiv@sign:
   711                           	opt callstack 0
   712                           
   713                           ; 1 bytes @ 0x1E
   714  00001F                     	ds	1
   715  000020                     ___fldiv@new_exp:
   716                           	opt callstack 0
   717                           
   718                           ; 2 bytes @ 0x1F
   719  000020                     	ds	2
   720  000022                     ___fldiv@grs:
   721                           	opt callstack 0
   722                           
   723                           ; 4 bytes @ 0x21
   724  000022                     	ds	4
   725  000026                     ___fldiv@bexp:
   726                           	opt callstack 0
   727                           
   728                           ; 1 bytes @ 0x25
   729  000026                     	ds	1
   730  000027                     ___fldiv@aexp:
   731                           	opt callstack 0
   732                           
   733                           ; 1 bytes @ 0x26
   734  000027                     	ds	1
   735  000028                     ?___fltol:
   736                           	opt callstack 0
   737  000028                     ___fltol@f1:
   738                           	opt callstack 0
   739                           
   740                           ; 4 bytes @ 0x27
   741  000028                     	ds	4
   742  00002C                     ??___fltol:
   743                           
   744                           ; 1 bytes @ 0x2B
   745  00002C                     	ds	4
   746  000030                     ___fltol@sign1:
   747                           	opt callstack 0
   748                           
   749                           ; 1 bytes @ 0x2F
   750  000030                     	ds	1
   751  000031                     ___fltol@exp1:
   752                           	opt callstack 0
   753                           
   754                           ; 1 bytes @ 0x30
   755  000031                     	ds	1
   756  000032                     ??_echo:
   757                           
   758                           ; 1 bytes @ 0x31
   759  000032                     	ds	4
   760  000036                     ??_ISR:
   761                           
   762                           ; 1 bytes @ 0x35
   763  000036                     	ds	2
   764                           
   765 ;;
   766 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   767 ;;
   768 ;; *************** function _main *****************
   769 ;; Defined at:
   770 ;;		line 427 in file "main.c"
   771 ;; Parameters:    Size  Location     Type
   772 ;;		None
   773 ;; Auto vars:     Size  Location     Type
   774 ;;  k               2  108[BANK0 ] int 
   775 ;;  m               2  110[BANK0 ] int 
   776 ;;  i               2  106[BANK0 ] int 
   777 ;;  poles_detect    2    0        int 
   778 ;; Return value:  Size  Location     Type
   779 ;;                  1    wreg      void 
   780 ;; Registers used:
   781 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   782 ;; Tracked objects:
   783 ;;		On entry : 0/0
   784 ;;		On exit  : 0/0
   785 ;;		Unchanged: 0/0
   786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   788 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   789 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   790 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   791 ;;Total ram usage:       10 bytes
   792 ;; Hardware stack levels required when called:   15
   793 ;; This function calls:
   794 ;;		___wmul
   795 ;;		_initLCD
   796 ;;		_lcdInst
   797 ;;		_print_echo
   798 ;;		_trig
   799 ;; This function is called by:
   800 ;;		Startup code after reset
   801 ;; This function uses a non-reentrant model
   802 ;;
   803                           
   804                           	psect	text0
   805  00209A                     __ptext0:
   806                           	opt callstack 0
   807  00209A                     _main:
   808                           	opt callstack 16
   809                           
   810                           ;main.c: 428:  TRISB = 0b11110000;
   811                           
   812                           ;incstack = 0
   813  00209A  0EF0               	movlw	240
   814  00209C  6E93               	movwf	3987,c	;volatile
   815                           
   816                           ;main.c: 429:  TRISD = 0x00;
   817  00209E  0E00               	movlw	0
   818  0020A0  6E95               	movwf	3989,c	;volatile
   819                           
   820                           ;main.c: 430:  GIE = 1;
   821  0020A2  8EF2               	bsf	4082,7,c	;volatile
   822                           
   823                           ;main.c: 431:  RBIF = 0;
   824  0020A4  90F2               	bcf	4082,0,c	;volatile
   825                           
   826                           ;main.c: 432:  RBIE = 1;
   827  0020A6  86F2               	bsf	4082,3,c	;volatile
   828                           
   829                           ;main.c: 433:     ADCON1=0x0F;
   830  0020A8  0E0F               	movlw	15
   831  0020AA  6EC1               	movwf	4033,c	;volatile
   832                           
   833                           ;main.c: 435:     TRISBbits.RB0 = 0;
   834  0020AC  9093               	bcf	3987,0,c	;volatile
   835                           
   836                           ;main.c: 436:     LATBbits.LATB0 = 1;
   837  0020AE  808A               	bsf	3978,0,c	;volatile
   838                           
   839                           ;main.c: 438:  initLCD();
   840  0020B0  ECEE  F012         	call	_initLCD	;wreg free
   841                           
   842                           ;main.c: 439:  { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
   843  0020B4  0E01               	movlw	1
   844  0020B6  EC64  F014         	call	_lcdInst
   845  0020BA  0E11               	movlw	17
   846  0020BC  0100               	movlb	0	; () banked
   847  0020BE  6FE6               	movwf	??_main& (0+255),b
   848  0020C0  0E3A               	movlw	58
   849  0020C2                     u4427:
   850  0020C2  2EE8               	decfsz	wreg,f,c
   851  0020C4  D7FE               	bra	u4427
   852  0020C6  2FE6               	decfsz	??_main& (0+255),f,b
   853  0020C8  D7FC               	bra	u4427
   854  0020CA  F000               	nop	
   855                           
   856                           ;main.c: 443:  T1CON = 0x10;
   857  0020CC  0E10               	movlw	16
   858  0020CE  6ECD               	movwf	4045,c	;volatile
   859  0020D0                     l3613:
   860                           
   861                           ;main.c: 446:                 for (int i=0; i<2;i++){
   862  0020D0  0E00               	movlw	0
   863  0020D2  0100               	movlb	0	; () banked
   864  0020D4  6FEB               	movwf	(main@i+1)& (0+255),b
   865  0020D6  0E00               	movlw	0
   866  0020D8  6FEA               	movwf	main@i& (0+255),b
   867  0020DA                     l3619:
   868                           
   869                           ; BSR set to: 0
   870                           ;main.c: 448:         for (meas=0; meas<5;meas++){
   871  0020DA  0E00               	movlw	0
   872  0020DC  6E4D               	movwf	_meas+1,c	;volatile
   873  0020DE  0E00               	movlw	0
   874  0020E0  6E4C               	movwf	_meas,c	;volatile
   875  0020E2                     l3621:
   876  0020E2  BE4D               	btfsc	_meas+1,7,c	;volatile
   877  0020E4  D006               	goto	l3625
   878  0020E6  504D               	movf	_meas+1,w,c	;volatile
   879  0020E8  E10D               	bnz	l3637
   880  0020EA  0E05               	movlw	5
   881  0020EC  5C4C               	subwf	_meas,w,c	;volatile
   882  0020EE  B0D8               	btfsc	status,0,c
   883  0020F0  D009               	goto	l3637
   884  0020F2                     l3625:
   885                           
   886                           ;main.c: 450:         trig();
   887  0020F2  EC7F  F011         	call	_trig	;wreg free
   888                           
   889                           ;main.c: 452:         RBIE = 0;
   890  0020F6  96F2               	bcf	4082,3,c	;volatile
   891                           
   892                           ;main.c: 454:         print_echo();
   893  0020F8  EC4E  F00D         	call	_print_echo	;wreg free
   894                           
   895                           ;main.c: 456:         RBIE = 1;
   896  0020FC  86F2               	bsf	4082,3,c	;volatile
   897                           
   898                           ;main.c: 459:         }
   899  0020FE  4A4C               	infsnz	_meas,f,c	;volatile
   900  002100  2A4D               	incf	_meas+1,f,c	;volatile
   901  002102  D7EF               	goto	l3621
   902  002104                     l3637:
   903                           
   904                           ;main.c: 461:         }
   905  002104  0100               	movlb	0	; () banked
   906  002106  4BEA               	infsnz	main@i& (0+255),f,b
   907  002108  2BEB               	incf	(main@i+1)& (0+255),f,b
   908                           
   909                           ; BSR set to: 0
   910  00210A  BFEB               	btfsc	(main@i+1)& (0+255),7,b
   911  00210C  D7E6               	goto	l3619
   912  00210E  51EB               	movf	(main@i+1)& (0+255),w,b
   913  002110  E104               	bnz	u4390
   914  002112  0E02               	movlw	2
   915  002114  5DEA               	subwf	main@i& (0+255),w,b
   916  002116  A0D8               	btfss	status,0,c
   917  002118  D7E0               	goto	l3619
   918  00211A                     u4390:
   919                           
   920                           ; BSR set to: 0
   921                           ;main.c: 465:             for (int m=0;m<4;m++){
   922  00211A  0E00               	movlw	0
   923  00211C  6FEF               	movwf	(main@m+1)& (0+255),b
   924  00211E  0E00               	movlw	0
   925  002120  6FEE               	movwf	main@m& (0+255),b
   926  002122                     l3647:
   927                           
   928                           ; BSR set to: 0
   929                           ;main.c: 466:                 sum[m] = 0 ;
   930  002122  90D8               	bcf	status,0,c
   931  002124  35EE               	rlcf	main@m& (0+255),w,b
   932  002126  6ED9               	movwf	fsr2l,c
   933  002128  35EF               	rlcf	(main@m+1)& (0+255),w,b
   934  00212A  6EDA               	movwf	fsr2h,c
   935  00212C  0E38               	movlw	low _sum
   936  00212E  26D9               	addwf	fsr2l,f,c
   937  002130  0E00               	movlw	high _sum
   938  002132  22DA               	addwfc	fsr2h,f,c
   939  002134  0E00               	movlw	0
   940  002136  6EDE               	movwf	postinc2,c
   941  002138  0E00               	movlw	0
   942  00213A  6EDD               	movwf	postdec2,c
   943                           
   944                           ;main.c: 467:                 a[m] = 0 ;
   945  00213C  90D8               	bcf	status,0,c
   946  00213E  35EE               	rlcf	main@m& (0+255),w,b
   947  002140  6ED9               	movwf	fsr2l,c
   948  002142  35EF               	rlcf	(main@m+1)& (0+255),w,b
   949  002144  6EDA               	movwf	fsr2h,c
   950  002146  0E40               	movlw	low _a
   951  002148  26D9               	addwf	fsr2l,f,c
   952  00214A  0E00               	movlw	high _a
   953  00214C  22DA               	addwfc	fsr2h,f,c
   954  00214E  0E00               	movlw	0
   955  002150  6EDE               	movwf	postinc2,c
   956  002152  0E00               	movlw	0
   957  002154  6EDD               	movwf	postdec2,c
   958                           
   959                           ;main.c: 468:                 sumf[m] = 0 ;
   960  002156  0E48               	movlw	low _sumf
   961  002158  25EE               	addwf	main@m& (0+255),w,b
   962  00215A  6ED9               	movwf	fsr2l,c
   963  00215C  0E00               	movlw	high _sumf
   964  00215E  21EF               	addwfc	(main@m+1)& (0+255),w,b
   965  002160  6EDA               	movwf	fsr2h,c
   966  002162  0E00               	movlw	0
   967  002164  6EDF               	movwf	indf2,c
   968                           
   969                           ; BSR set to: 0
   970                           ;main.c: 470:                 for (int k=0;k<6;k++){
   971  002166  0E00               	movlw	0
   972  002168  6FED               	movwf	(main@k+1)& (0+255),b
   973  00216A  0E00               	movlw	0
   974  00216C  6FEC               	movwf	main@k& (0+255),b
   975  00216E                     l3655:
   976                           
   977                           ; BSR set to: 0
   978                           ;main.c: 471:                     dist_final[m][k] = 0;
   979  00216E  C0EE  F080         	movff	main@m,___wmul@multiplier
   980  002172  C0EF  F081         	movff	main@m+1,___wmul@multiplier+1
   981  002176  0E00               	movlw	0
   982  002178  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
   983  00217A  0E0C               	movlw	12
   984  00217C  6F82               	movwf	___wmul@multiplicand& (0+255),b
   985  00217E  EC1D  F014         	call	___wmul	;wreg free
   986  002182  0E00               	movlw	low _dist_final
   987  002184  0100               	movlb	0	; () banked
   988  002186  6FE6               	movwf	??_main& (0+255),b
   989  002188  0E01               	movlw	high _dist_final
   990  00218A  6FE7               	movwf	(??_main+1)& (0+255),b
   991  00218C  5180               	movf	?___wmul& (0+255),w,b
   992  00218E  27E6               	addwf	??_main& (0+255),f,b
   993  002190  5181               	movf	(?___wmul+1)& (0+255),w,b
   994  002192  23E7               	addwfc	(??_main+1)& (0+255),f,b
   995  002194  90D8               	bcf	status,0,c
   996  002196  35EC               	rlcf	main@k& (0+255),w,b
   997  002198  6ED9               	movwf	fsr2l,c
   998  00219A  35ED               	rlcf	(main@k+1)& (0+255),w,b
   999  00219C  6EDA               	movwf	fsr2h,c
  1000  00219E  51E6               	movf	??_main& (0+255),w,b
  1001  0021A0  26D9               	addwf	fsr2l,f,c
  1002  0021A2  51E7               	movf	(??_main+1)& (0+255),w,b
  1003  0021A4  22DA               	addwfc	fsr2h,f,c
  1004  0021A6  0E00               	movlw	0
  1005  0021A8  6EDE               	movwf	postinc2,c
  1006  0021AA  0E00               	movlw	0
  1007  0021AC  6EDD               	movwf	postdec2,c
  1008                           
  1009                           ; BSR set to: 0
  1010                           ;main.c: 472:                 }
  1011  0021AE  4BEC               	infsnz	main@k& (0+255),f,b
  1012  0021B0  2BED               	incf	(main@k+1)& (0+255),f,b
  1013                           
  1014                           ; BSR set to: 0
  1015  0021B2  BFED               	btfsc	(main@k+1)& (0+255),7,b
  1016  0021B4  D7DC               	goto	l3655
  1017  0021B6  51ED               	movf	(main@k+1)& (0+255),w,b
  1018  0021B8  E104               	bnz	u4400
  1019  0021BA  0E06               	movlw	6
  1020  0021BC  5DEC               	subwf	main@k& (0+255),w,b
  1021  0021BE  A0D8               	btfss	status,0,c
  1022  0021C0  D7D6               	goto	l3655
  1023  0021C2                     u4400:
  1024                           
  1025                           ; BSR set to: 0
  1026                           ;main.c: 473:             }
  1027  0021C2  4BEE               	infsnz	main@m& (0+255),f,b
  1028  0021C4  2BEF               	incf	(main@m+1)& (0+255),f,b
  1029                           
  1030                           ; BSR set to: 0
  1031  0021C6  BFEF               	btfsc	(main@m+1)& (0+255),7,b
  1032  0021C8  D7AC               	goto	l3647
  1033  0021CA  51EF               	movf	(main@m+1)& (0+255),w,b
  1034  0021CC  E181               	bnz	l3613
  1035  0021CE  0E04               	movlw	4
  1036  0021D0  5DEE               	subwf	main@m& (0+255),w,b
  1037  0021D2  B0D8               	btfsc	status,0,c
  1038  0021D4  D77D               	goto	l3613
  1039  0021D6  D7A5               	goto	l3647
  1040  0021D8                     __end_of_main:
  1041                           	opt callstack 0
  1042                           
  1043 ;; *************** function _trig *****************
  1044 ;; Defined at:
  1045 ;;		line 241 in file "main.c"
  1046 ;; Parameters:    Size  Location     Type
  1047 ;;		None
  1048 ;; Auto vars:     Size  Location     Type
  1049 ;;		None
  1050 ;; Return value:  Size  Location     Type
  1051 ;;                  1    wreg      void 
  1052 ;; Registers used:
  1053 ;;		wreg, status,2, status,0
  1054 ;; Tracked objects:
  1055 ;;		On entry : 0/0
  1056 ;;		On exit  : 0/0
  1057 ;;		Unchanged: 0/0
  1058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1061 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1062 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1063 ;;Total ram usage:        2 bytes
  1064 ;; Hardware stack levels used:    1
  1065 ;; Hardware stack levels required when called:    3
  1066 ;; This function calls:
  1067 ;;		Nothing
  1068 ;; This function is called by:
  1069 ;;		_main
  1070 ;; This function uses a non-reentrant model
  1071 ;;
  1072                           
  1073                           	psect	text1
  1074  0022FE                     __ptext1:
  1075                           	opt callstack 0
  1076  0022FE                     _trig:
  1077                           	opt callstack 27
  1078                           
  1079                           ;main.c: 243:     for(b=1; b<(5); b++){
  1080                           
  1081                           ; BSR set to: 0
  1082                           ;incstack = 0
  1083  0022FE  0E00               	movlw	0
  1084  002300  6E4F               	movwf	_b+1,c
  1085  002302  0E01               	movlw	1
  1086  002304  6E4E               	movwf	_b,c
  1087  002306  BE4F               	btfsc	_b+1,7,c
  1088  002308  D004               	goto	l3387
  1089  00230A  504F               	movf	_b+1,w,c
  1090  00230C  E101               	bnz	u3990
  1091  00230E  D072               	goto	L1
  1092  002310                     u3990:
  1093  002310  0012               	return	
  1094  002312                     l3387:
  1095                           
  1096                           ;main.c: 244:         TMR1H = 0;
  1097  002312  0E00               	movlw	0
  1098  002314  6ECF               	movwf	4047,c	;volatile
  1099                           
  1100                           ;main.c: 245:         TMR1L = 0;
  1101  002316  0E00               	movlw	0
  1102  002318  6ECE               	movwf	4046,c	;volatile
  1103                           
  1104                           ;main.c: 247:         if(b==1){
  1105  00231A  044E               	decf	_b,w,c
  1106  00231C  104F               	iorwf	_b+1,w,c
  1107  00231E  A4D8               	btfss	status,2,c
  1108  002320  D015               	goto	l3399
  1109                           
  1110                           ;main.c: 248:             RBIE = 0;
  1111  002322  96F2               	bcf	4082,3,c	;volatile
  1112                           
  1113                           ;main.c: 249:             RD1 = 1;
  1114  002324  8283               	bsf	3971,1,c	;volatile
  1115                           
  1116                           ;main.c: 250:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  1117  002326  0E08               	movlw	8
  1118  002328                     u4437:
  1119  002328  2EE8               	decfsz	wreg,f,c
  1120  00232A  D7FE               	bra	u4437
  1121  00232C  F000               	nop	
  1122                           
  1123                           ;main.c: 251:             RD1 = 0;
  1124  00232E  9283               	bcf	3971,1,c	;volatile
  1125                           
  1126                           ;main.c: 253:             RBIE = 1;
  1127  002330  86F2               	bsf	4082,3,c	;volatile
  1128                           
  1129                           ;main.c: 254:             _delay((unsigned long)((150)*(10000000/4000.0)));
  1130  002332  0E02               	movlw	2
  1131  002334  0100               	movlb	0	; () banked
  1132  002336  6F81               	movwf	(??_trig+1)& (0+255),b
  1133  002338  0EE7               	movlw	231
  1134  00233A  6F80               	movwf	??_trig& (0+255),b
  1135  00233C  0E00               	movlw	0
  1136  00233E                     u4447:
  1137  00233E  2EE8               	decfsz	wreg,f,c
  1138  002340  D7FE               	bra	u4447
  1139  002342  2F80               	decfsz	??_trig& (0+255),f,b
  1140  002344  D7FC               	bra	u4447
  1141  002346  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  1142  002348  D7FA               	bra	u4447
  1143  00234A  F000               	nop	
  1144  00234C                     l3399:
  1145                           
  1146                           ;main.c: 260:         if(b==2){
  1147  00234C  0E02               	movlw	2
  1148  00234E  184E               	xorwf	_b,w,c
  1149  002350  104F               	iorwf	_b+1,w,c
  1150  002352  A4D8               	btfss	status,2,c
  1151  002354  D015               	goto	l3409
  1152                           
  1153                           ;main.c: 261:             RBIE = 0;
  1154  002356  96F2               	bcf	4082,3,c	;volatile
  1155                           
  1156                           ;main.c: 262:             RD0 = 1;
  1157  002358  8083               	bsf	3971,0,c	;volatile
  1158                           
  1159                           ;main.c: 263:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  1160  00235A  0E08               	movlw	8
  1161  00235C                     u4457:
  1162  00235C  2EE8               	decfsz	wreg,f,c
  1163  00235E  D7FE               	bra	u4457
  1164  002360  F000               	nop	
  1165                           
  1166                           ;main.c: 264:             RD0 = 0;
  1167  002362  9083               	bcf	3971,0,c	;volatile
  1168                           
  1169                           ;main.c: 266:                         RBIE = 1;
  1170  002364  86F2               	bsf	4082,3,c	;volatile
  1171                           
  1172                           ;main.c: 267:             _delay((unsigned long)((150)*(10000000/4000.0)));
  1173  002366  0E02               	movlw	2
  1174  002368  0100               	movlb	0	; () banked
  1175  00236A  6F81               	movwf	(??_trig+1)& (0+255),b
  1176  00236C  0EE7               	movlw	231
  1177  00236E  6F80               	movwf	??_trig& (0+255),b
  1178  002370  0E00               	movlw	0
  1179  002372                     u4467:
  1180  002372  2EE8               	decfsz	wreg,f,c
  1181  002374  D7FE               	bra	u4467
  1182  002376  2F80               	decfsz	??_trig& (0+255),f,b
  1183  002378  D7FC               	bra	u4467
  1184  00237A  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  1185  00237C  D7FA               	bra	u4467
  1186  00237E  F000               	nop	
  1187  002380                     l3409:
  1188                           
  1189                           ;main.c: 272:         if(b==3){
  1190  002380  0E03               	movlw	3
  1191  002382  184E               	xorwf	_b,w,c
  1192  002384  104F               	iorwf	_b+1,w,c
  1193  002386  A4D8               	btfss	status,2,c
  1194  002388  D015               	goto	l3419
  1195                           
  1196                           ;main.c: 273:             RBIE = 0;
  1197  00238A  96F2               	bcf	4082,3,c	;volatile
  1198                           
  1199                           ;main.c: 274:             RB3 = 1;
  1200  00238C  8681               	bsf	3969,3,c	;volatile
  1201                           
  1202                           ;main.c: 275:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  1203  00238E  0E08               	movlw	8
  1204  002390                     u4477:
  1205  002390  2EE8               	decfsz	wreg,f,c
  1206  002392  D7FE               	bra	u4477
  1207  002394  F000               	nop	
  1208                           
  1209                           ;main.c: 276:             RB3 = 0;
  1210  002396  9681               	bcf	3969,3,c	;volatile
  1211                           
  1212                           ;main.c: 278:                         RBIE = 1;
  1213  002398  86F2               	bsf	4082,3,c	;volatile
  1214                           
  1215                           ;main.c: 279:             _delay((unsigned long)((150)*(10000000/4000.0)));
  1216  00239A  0E02               	movlw	2
  1217  00239C  0100               	movlb	0	; () banked
  1218  00239E  6F81               	movwf	(??_trig+1)& (0+255),b
  1219  0023A0  0EE7               	movlw	231
  1220  0023A2  6F80               	movwf	??_trig& (0+255),b
  1221  0023A4  0E00               	movlw	0
  1222  0023A6                     u4487:
  1223  0023A6  2EE8               	decfsz	wreg,f,c
  1224  0023A8  D7FE               	bra	u4487
  1225  0023AA  2F80               	decfsz	??_trig& (0+255),f,b
  1226  0023AC  D7FC               	bra	u4487
  1227  0023AE  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  1228  0023B0  D7FA               	bra	u4487
  1229  0023B2  F000               	nop	
  1230  0023B4                     l3419:
  1231                           
  1232                           ;main.c: 284:         if(b==4){
  1233  0023B4  0E04               	movlw	4
  1234  0023B6  184E               	xorwf	_b,w,c
  1235  0023B8  104F               	iorwf	_b+1,w,c
  1236  0023BA  A4D8               	btfss	status,2,c
  1237  0023BC  D015               	goto	l3429
  1238                           
  1239                           ;main.c: 285:             RBIE = 0;
  1240  0023BE  96F2               	bcf	4082,3,c	;volatile
  1241                           
  1242                           ;main.c: 286:             RB2 = 1;
  1243  0023C0  8481               	bsf	3969,2,c	;volatile
  1244                           
  1245                           ;main.c: 287:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  1246  0023C2  0E08               	movlw	8
  1247  0023C4                     u4497:
  1248  0023C4  2EE8               	decfsz	wreg,f,c
  1249  0023C6  D7FE               	bra	u4497
  1250  0023C8  F000               	nop	
  1251                           
  1252                           ;main.c: 288:             RB2 = 0;
  1253  0023CA  9481               	bcf	3969,2,c	;volatile
  1254                           
  1255                           ;main.c: 290:                         RBIE = 1;
  1256  0023CC  86F2               	bsf	4082,3,c	;volatile
  1257                           
  1258                           ;main.c: 291:             _delay((unsigned long)((150)*(10000000/4000.0)));
  1259  0023CE  0E02               	movlw	2
  1260  0023D0  0100               	movlb	0	; () banked
  1261  0023D2  6F81               	movwf	(??_trig+1)& (0+255),b
  1262  0023D4  0EE7               	movlw	231
  1263  0023D6  6F80               	movwf	??_trig& (0+255),b
  1264  0023D8  0E00               	movlw	0
  1265  0023DA                     u4507:
  1266  0023DA  2EE8               	decfsz	wreg,f,c
  1267  0023DC  D7FE               	bra	u4507
  1268  0023DE  2F80               	decfsz	??_trig& (0+255),f,b
  1269  0023E0  D7FC               	bra	u4507
  1270  0023E2  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  1271  0023E4  D7FA               	bra	u4507
  1272  0023E6  F000               	nop	
  1273  0023E8                     l3429:
  1274                           
  1275                           ;main.c: 299:     }
  1276  0023E8  4A4E               	infsnz	_b,f,c
  1277  0023EA  2A4F               	incf	_b+1,f,c
  1278  0023EC  BE4F               	btfsc	_b+1,7,c
  1279  0023EE  D791               	goto	l3387
  1280  0023F0  504F               	movf	_b+1,w,c
  1281  0023F2  E105               	bnz	u4040
  1282  0023F4                     L1:
  1283  0023F4  0E05               	movlw	5
  1284  0023F6  5C4E               	subwf	_b,w,c
  1285  0023F8  B0D8               	btfsc	status,0,c
  1286  0023FA  0012               	return	
  1287  0023FC  D78A               	goto	l3387
  1288  0023FE                     u4040:
  1289  0023FE  0012               	return		;funcret
  1290  002400                     __end_of_trig:
  1291                           	opt callstack 0
  1292                           
  1293 ;; *************** function _print_echo *****************
  1294 ;; Defined at:
  1295 ;;		line 304 in file "main.c"
  1296 ;; Parameters:    Size  Location     Type
  1297 ;;		None
  1298 ;; Auto vars:     Size  Location     Type
  1299 ;;		None
  1300 ;; Return value:  Size  Location     Type
  1301 ;;                  1    wreg      void 
  1302 ;; Registers used:
  1303 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1304 ;; Tracked objects:
  1305 ;;		On entry : 0/0
  1306 ;;		On exit  : 0/0
  1307 ;;		Unchanged: 0/0
  1308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1311 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1312 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1313 ;;Total ram usage:        1 bytes
  1314 ;; Hardware stack levels used:    1
  1315 ;; Hardware stack levels required when called:   14
  1316 ;; This function calls:
  1317 ;;		_lcdInst
  1318 ;;		_printf
  1319 ;; This function is called by:
  1320 ;;		_main
  1321 ;; This function uses a non-reentrant model
  1322 ;;
  1323                           
  1324                           	psect	text2
  1325  001A9C                     __ptext2:
  1326                           	opt callstack 0
  1327  001A9C                     _print_echo:
  1328                           	opt callstack 16
  1329                           
  1330                           ;main.c: 305:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  1331                           
  1332                           ;incstack = 0
  1333  001A9C  0E01               	movlw	1
  1334  001A9E  EC64  F014         	call	_lcdInst
  1335  001AA2  0E11               	movlw	17
  1336  001AA4  0100               	movlb	0	; () banked
  1337  001AA6  6FE5               	movwf	??_print_echo& (0+255),b
  1338  001AA8  0E3A               	movlw	58
  1339  001AAA                     u4517:
  1340  001AAA  2EE8               	decfsz	wreg,f,c
  1341  001AAC  D7FE               	bra	u4517
  1342  001AAE  2FE5               	decfsz	??_print_echo& (0+255),f,b
  1343  001AB0  D7FC               	bra	u4517
  1344  001AB2  F000               	nop	
  1345                           
  1346                           ;main.c: 306:     if(a[0]>=2 && a[0]<=400){
  1347  001AB4  BE41               	btfsc	_a+1,7,c
  1348  001AB6  D01D               	goto	l3441
  1349  001AB8  5041               	movf	_a+1,w,c
  1350  001ABA  E104               	bnz	u4050
  1351  001ABC  0E02               	movlw	2
  1352  001ABE  5C40               	subwf	_a,w,c
  1353  001AC0  A0D8               	btfss	status,0,c
  1354  001AC2  D017               	goto	l3441
  1355  001AC4                     u4050:
  1356  001AC4  BE41               	btfsc	_a+1,7,c
  1357  001AC6  D006               	goto	u4060
  1358  001AC8  0E91               	movlw	145
  1359  001ACA  5C40               	subwf	_a,w,c
  1360  001ACC  0E01               	movlw	1
  1361  001ACE  5841               	subwfb	_a+1,w,c
  1362  001AD0  B0D8               	btfsc	status,0,c
  1363  001AD2  D00F               	goto	l3441
  1364  001AD4                     u4060:
  1365                           
  1366                           ;main.c: 307:         printf("Dist1=%d,Avg=%d ",a[0],dist_final[0][5]);
  1367  001AD4  0E07               	movlw	low STR_1
  1368  001AD6  0100               	movlb	0	; () banked
  1369  001AD8  6FDB               	movwf	printf@fmt& (0+255),b
  1370  001ADA  0E10               	movlw	high STR_1
  1371  001ADC  6FDC               	movwf	(printf@fmt+1)& (0+255),b
  1372  001ADE  C040  F0DD         	movff	_a,?_printf+2
  1373  001AE2  C041  F0DE         	movff	_a+1,?_printf+3
  1374  001AE6  C10A  F0DF         	movff	_dist_final+10,?_printf+4
  1375  001AEA  C10B  F0E0         	movff	_dist_final+11,?_printf+5
  1376  001AEE  EC09  F014         	call	_printf	;wreg free
  1377  001AF2                     l3441:
  1378                           
  1379                           ;main.c: 309:     if(!(a[0]>=2 && a[0]<=400)){
  1380  001AF2  BE41               	btfsc	_a+1,7,c
  1381  001AF4  D00E               	goto	u4080
  1382  001AF6  5041               	movf	_a+1,w,c
  1383  001AF8  E104               	bnz	u4070
  1384  001AFA  0E02               	movlw	2
  1385  001AFC  5C40               	subwf	_a,w,c
  1386  001AFE  A0D8               	btfss	status,0,c
  1387  001B00  D008               	goto	u4080
  1388  001B02                     u4070:
  1389  001B02  BE41               	btfsc	_a+1,7,c
  1390  001B04  D00D               	goto	l3447
  1391  001B06  0E91               	movlw	145
  1392  001B08  5C40               	subwf	_a,w,c
  1393  001B0A  0E01               	movlw	1
  1394  001B0C  5841               	subwfb	_a+1,w,c
  1395  001B0E  A0D8               	btfss	status,0,c
  1396  001B10  D007               	goto	l3447
  1397  001B12                     u4080:
  1398                           
  1399                           ;main.c: 310:         printf("Dist1 = X");
  1400  001B12  0E59               	movlw	low STR_2
  1401  001B14  0100               	movlb	0	; () banked
  1402  001B16  6FDB               	movwf	printf@fmt& (0+255),b
  1403  001B18  0E10               	movlw	high STR_2
  1404  001B1A  6FDC               	movwf	(printf@fmt+1)& (0+255),b
  1405  001B1C  EC09  F014         	call	_printf	;wreg free
  1406  001B20                     l3447:
  1407                           
  1408                           ;main.c: 312:     if(a[1]>=2 && a[1]<=400){
  1409  001B20  BE43               	btfsc	_a+3,7,c
  1410  001B22  D020               	goto	l3455
  1411  001B24  5043               	movf	_a+3,w,c
  1412  001B26  E104               	bnz	u4090
  1413  001B28  0E02               	movlw	2
  1414  001B2A  5C42               	subwf	_a+2,w,c
  1415  001B2C  A0D8               	btfss	status,0,c
  1416  001B2E  D01A               	goto	l3455
  1417  001B30                     u4090:
  1418  001B30  BE43               	btfsc	_a+3,7,c
  1419  001B32  D006               	goto	u4100
  1420  001B34  0E91               	movlw	145
  1421  001B36  5C42               	subwf	_a+2,w,c
  1422  001B38  0E01               	movlw	1
  1423  001B3A  5843               	subwfb	_a+3,w,c
  1424  001B3C  B0D8               	btfsc	status,0,c
  1425  001B3E  D012               	goto	l3455
  1426  001B40                     u4100:
  1427  001B40  0EC0               	movlw	192
  1428  001B42  EC64  F014         	call	_lcdInst
  1429                           
  1430                           ;main.c: 314:         printf("Dist2=%d,Avg=%d",a[1],dist_final[1][5]);
  1431  001B46  0E39               	movlw	low STR_3
  1432  001B48  0100               	movlb	0	; () banked
  1433  001B4A  6FDB               	movwf	printf@fmt& (0+255),b
  1434  001B4C  0E10               	movlw	high STR_3
  1435  001B4E  6FDC               	movwf	(printf@fmt+1)& (0+255),b
  1436  001B50  C042  F0DD         	movff	_a+2,?_printf+2
  1437  001B54  C043  F0DE         	movff	_a+3,?_printf+3
  1438  001B58  C116  F0DF         	movff	_dist_final+22,?_printf+4
  1439  001B5C  C117  F0E0         	movff	_dist_final+23,?_printf+5
  1440  001B60  EC09  F014         	call	_printf	;wreg free
  1441  001B64                     l3455:
  1442                           
  1443                           ;main.c: 316:     if(!(a[1]>=2 && a[1]<=400)){
  1444  001B64  BE43               	btfsc	_a+3,7,c
  1445  001B66  D00E               	goto	u4120
  1446  001B68  5043               	movf	_a+3,w,c
  1447  001B6A  E104               	bnz	u4110
  1448  001B6C  0E02               	movlw	2
  1449  001B6E  5C42               	subwf	_a+2,w,c
  1450  001B70  A0D8               	btfss	status,0,c
  1451  001B72  D008               	goto	u4120
  1452  001B74                     u4110:
  1453  001B74  BE43               	btfsc	_a+3,7,c
  1454  001B76  D010               	goto	l3463
  1455  001B78  0E91               	movlw	145
  1456  001B7A  5C42               	subwf	_a+2,w,c
  1457  001B7C  0E01               	movlw	1
  1458  001B7E  5843               	subwfb	_a+3,w,c
  1459  001B80  A0D8               	btfss	status,0,c
  1460  001B82  D00A               	goto	l3463
  1461  001B84                     u4120:
  1462  001B84  0EC0               	movlw	192
  1463  001B86  EC64  F014         	call	_lcdInst
  1464                           
  1465                           ;main.c: 318:         printf("Dist2 = X");
  1466  001B8A  0E63               	movlw	low STR_4
  1467  001B8C  0100               	movlb	0	; () banked
  1468  001B8E  6FDB               	movwf	printf@fmt& (0+255),b
  1469  001B90  0E10               	movlw	high STR_4
  1470  001B92  6FDC               	movwf	(printf@fmt+1)& (0+255),b
  1471  001B94  EC09  F014         	call	_printf	;wreg free
  1472  001B98                     l3463:
  1473                           
  1474                           ;main.c: 320:     if(a[2]>=2 && a[2]<=400){
  1475  001B98  BE45               	btfsc	_a+5,7,c
  1476  001B9A  D020               	goto	l3471
  1477  001B9C  5045               	movf	_a+5,w,c
  1478  001B9E  E104               	bnz	u4130
  1479  001BA0  0E02               	movlw	2
  1480  001BA2  5C44               	subwf	_a+4,w,c
  1481  001BA4  A0D8               	btfss	status,0,c
  1482  001BA6  D01A               	goto	l3471
  1483  001BA8                     u4130:
  1484  001BA8  BE45               	btfsc	_a+5,7,c
  1485  001BAA  D006               	goto	u4140
  1486  001BAC  0E91               	movlw	145
  1487  001BAE  5C44               	subwf	_a+4,w,c
  1488  001BB0  0E01               	movlw	1
  1489  001BB2  5845               	subwfb	_a+5,w,c
  1490  001BB4  B0D8               	btfsc	status,0,c
  1491  001BB6  D012               	goto	l3471
  1492  001BB8                     u4140:
  1493  001BB8  0E90               	movlw	144
  1494  001BBA  EC64  F014         	call	_lcdInst
  1495                           
  1496                           ;main.c: 322:         printf("Dist3=%d,Avg=%d",a[2],dist_final[2][5]);
  1497  001BBE  0E49               	movlw	low STR_5
  1498  001BC0  0100               	movlb	0	; () banked
  1499  001BC2  6FDB               	movwf	printf@fmt& (0+255),b
  1500  001BC4  0E10               	movlw	high STR_5
  1501  001BC6  6FDC               	movwf	(printf@fmt+1)& (0+255),b
  1502  001BC8  C044  F0DD         	movff	_a+4,?_printf+2
  1503  001BCC  C045  F0DE         	movff	_a+5,?_printf+3
  1504  001BD0  C122  F0DF         	movff	_dist_final+34,?_printf+4
  1505  001BD4  C123  F0E0         	movff	_dist_final+35,?_printf+5
  1506  001BD8  EC09  F014         	call	_printf	;wreg free
  1507  001BDC                     l3471:
  1508                           
  1509                           ;main.c: 324:     if(!(a[2]>=2 && a[2]<=400)){
  1510  001BDC  BE45               	btfsc	_a+5,7,c
  1511  001BDE  D00E               	goto	u4160
  1512  001BE0  5045               	movf	_a+5,w,c
  1513  001BE2  E104               	bnz	u4150
  1514  001BE4  0E02               	movlw	2
  1515  001BE6  5C44               	subwf	_a+4,w,c
  1516  001BE8  A0D8               	btfss	status,0,c
  1517  001BEA  D008               	goto	u4160
  1518  001BEC                     u4150:
  1519  001BEC  BE45               	btfsc	_a+5,7,c
  1520  001BEE  D010               	goto	l3479
  1521  001BF0  0E91               	movlw	145
  1522  001BF2  5C44               	subwf	_a+4,w,c
  1523  001BF4  0E01               	movlw	1
  1524  001BF6  5845               	subwfb	_a+5,w,c
  1525  001BF8  A0D8               	btfss	status,0,c
  1526  001BFA  D00A               	goto	l3479
  1527  001BFC                     u4160:
  1528  001BFC  0E90               	movlw	144
  1529  001BFE  EC64  F014         	call	_lcdInst
  1530                           
  1531                           ;main.c: 326:         printf("Dist3 = X");
  1532  001C02  0E6D               	movlw	low STR_6
  1533  001C04  0100               	movlb	0	; () banked
  1534  001C06  6FDB               	movwf	printf@fmt& (0+255),b
  1535  001C08  0E10               	movlw	high STR_6
  1536  001C0A  6FDC               	movwf	(printf@fmt+1)& (0+255),b
  1537  001C0C  EC09  F014         	call	_printf	;wreg free
  1538  001C10                     l3479:
  1539                           
  1540                           ;main.c: 328:     if(a[3]>=2 && a[3]<=400){
  1541  001C10  BE47               	btfsc	_a+7,7,c
  1542  001C12  D020               	goto	l3487
  1543  001C14  5047               	movf	_a+7,w,c
  1544  001C16  E104               	bnz	u4170
  1545  001C18  0E02               	movlw	2
  1546  001C1A  5C46               	subwf	_a+6,w,c
  1547  001C1C  A0D8               	btfss	status,0,c
  1548  001C1E  D01A               	goto	l3487
  1549  001C20                     u4170:
  1550  001C20  BE47               	btfsc	_a+7,7,c
  1551  001C22  D006               	goto	u4180
  1552  001C24  0E91               	movlw	145
  1553  001C26  5C46               	subwf	_a+6,w,c
  1554  001C28  0E01               	movlw	1
  1555  001C2A  5847               	subwfb	_a+7,w,c
  1556  001C2C  B0D8               	btfsc	status,0,c
  1557  001C2E  D012               	goto	l3487
  1558  001C30                     u4180:
  1559  001C30  0ED0               	movlw	208
  1560  001C32  EC64  F014         	call	_lcdInst
  1561                           
  1562                           ;main.c: 330:         printf("Dist4=%d,Avg=%d ",a[3],dist_final[3][5]);
  1563  001C36  0E18               	movlw	low STR_7
  1564  001C38  0100               	movlb	0	; () banked
  1565  001C3A  6FDB               	movwf	printf@fmt& (0+255),b
  1566  001C3C  0E10               	movlw	high STR_7
  1567  001C3E  6FDC               	movwf	(printf@fmt+1)& (0+255),b
  1568  001C40  C046  F0DD         	movff	_a+6,?_printf+2
  1569  001C44  C047  F0DE         	movff	_a+7,?_printf+3
  1570  001C48  C12E  F0DF         	movff	_dist_final+46,?_printf+4
  1571  001C4C  C12F  F0E0         	movff	_dist_final+47,?_printf+5
  1572  001C50  EC09  F014         	call	_printf	;wreg free
  1573  001C54                     l3487:
  1574                           
  1575                           ;main.c: 333:     if(!(a[3]>=2 && a[3]<=400)){
  1576  001C54  BE47               	btfsc	_a+7,7,c
  1577  001C56  D00E               	goto	u4200
  1578  001C58  5047               	movf	_a+7,w,c
  1579  001C5A  E104               	bnz	u4190
  1580  001C5C  0E02               	movlw	2
  1581  001C5E  5C46               	subwf	_a+6,w,c
  1582  001C60  A0D8               	btfss	status,0,c
  1583  001C62  D008               	goto	u4200
  1584  001C64                     u4190:
  1585  001C64  BE47               	btfsc	_a+7,7,c
  1586  001C66  0012               	return	
  1587  001C68  0E91               	movlw	145
  1588  001C6A  5C46               	subwf	_a+6,w,c
  1589  001C6C  0E01               	movlw	1
  1590  001C6E  5847               	subwfb	_a+7,w,c
  1591  001C70  A0D8               	btfss	status,0,c
  1592  001C72  0012               	return	
  1593  001C74                     u4200:
  1594  001C74  0ED0               	movlw	208
  1595  001C76  EC64  F014         	call	_lcdInst
  1596                           
  1597                           ;main.c: 335:         printf("Dist4 = X");
  1598  001C7A  0E77               	movlw	low STR_8
  1599  001C7C  0100               	movlb	0	; () banked
  1600  001C7E  6FDB               	movwf	printf@fmt& (0+255),b
  1601  001C80  0E10               	movlw	high STR_8
  1602  001C82  6FDC               	movwf	(printf@fmt+1)& (0+255),b
  1603  001C84  EC09  F014         	call	_printf	;wreg free
  1604  001C88  0012               	return		;funcret
  1605  001C8A                     __end_of_print_echo:
  1606                           	opt callstack 0
  1607                           
  1608 ;; *************** function _printf *****************
  1609 ;; Defined at:
  1610 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  1611 ;; Parameters:    Size  Location     Type
  1612 ;;  fmt             2   91[BANK0 ] PTR const unsigned char 
  1613 ;;		 -> STR_10(6), STR_9(16), STR_8(10), STR_7(17), 
  1614 ;;		 -> STR_6(10), STR_5(16), STR_4(10), STR_3(16), 
  1615 ;;		 -> STR_2(10), STR_1(17), 
  1616 ;; Auto vars:     Size  Location     Type
  1617 ;;  ap              2   99[BANK0 ] PTR void [1]
  1618 ;;		 -> ?_printf(2), 
  1619 ;;  ret             2    0        int 
  1620 ;; Return value:  Size  Location     Type
  1621 ;;                  2   91[BANK0 ] int 
  1622 ;; Registers used:
  1623 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1624 ;; Tracked objects:
  1625 ;;		On entry : 0/0
  1626 ;;		On exit  : 0/0
  1627 ;;		Unchanged: 0/0
  1628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1629 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1630 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1632 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1633 ;;Total ram usage:       10 bytes
  1634 ;; Hardware stack levels used:    1
  1635 ;; Hardware stack levels required when called:   13
  1636 ;; This function calls:
  1637 ;;		_vfprintf
  1638 ;; This function is called by:
  1639 ;;		_print_echo
  1640 ;;		_number_deploy
  1641 ;; This function uses a non-reentrant model
  1642 ;;
  1643                           
  1644                           	psect	text3
  1645  002812                     __ptext3:
  1646                           	opt callstack 0
  1647  002812                     _printf:
  1648                           	opt callstack 16
  1649                           
  1650                           ;incstack = 0
  1651  002812  0EDD               	movlw	low (?_printf+2)
  1652  002814  0100               	movlb	0	; () banked
  1653  002816  6FE3               	movwf	printf@ap& (0+255),b
  1654  002818  0E00               	movlw	high (?_printf+2)
  1655  00281A  6FE4               	movwf	(printf@ap+1)& (0+255),b
  1656                           
  1657                           ; BSR set to: 0
  1658  00281C  0E00               	movlw	0
  1659  00281E  6FD3               	movwf	vfprintf@fp& (0+255),b
  1660  002820  0E00               	movlw	0
  1661  002822  6FD4               	movwf	(vfprintf@fp+1)& (0+255),b
  1662  002824  C0DB  F0D5         	movff	printf@fmt,vfprintf@fmt
  1663  002828  C0DC  F0D6         	movff	printf@fmt+1,vfprintf@fmt+1
  1664  00282C  0EE3               	movlw	low printf@ap
  1665  00282E  6FD7               	movwf	vfprintf@ap& (0+255),b
  1666  002830  0E00               	movlw	high printf@ap
  1667  002832  6FD8               	movwf	(vfprintf@ap+1)& (0+255),b
  1668  002834  EC5D  F013         	call	_vfprintf	;wreg free
  1669  002838  0012               	return		;funcret
  1670  00283A                     __end_of_printf:
  1671                           	opt callstack 0
  1672                           
  1673 ;; *************** function _vfprintf *****************
  1674 ;; Defined at:
  1675 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1676 ;; Parameters:    Size  Location     Type
  1677 ;;  fp              2   83[BANK0 ] PTR struct _IO_FILE
  1678 ;;		 -> NULL(0), 
  1679 ;;  fmt             2   85[BANK0 ] PTR const unsigned char 
  1680 ;;		 -> STR_10(6), STR_9(16), STR_8(10), STR_7(17), 
  1681 ;;		 -> STR_6(10), STR_5(16), STR_4(10), STR_3(16), 
  1682 ;;		 -> STR_2(10), STR_1(17), 
  1683 ;;  ap              2   87[BANK0 ] PTR PTR void 
  1684 ;;		 -> printf@ap(2), 
  1685 ;; Auto vars:     Size  Location     Type
  1686 ;;  cfmt            2   89[BANK0 ] PTR unsigned char 
  1687 ;;		 -> STR_10(6), STR_9(16), STR_8(10), STR_7(17), 
  1688 ;;		 -> STR_6(10), STR_5(16), STR_4(10), STR_3(16), 
  1689 ;;		 -> STR_2(10), STR_1(17), 
  1690 ;; Return value:  Size  Location     Type
  1691 ;;                  2   83[BANK0 ] int 
  1692 ;; Registers used:
  1693 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1694 ;; Tracked objects:
  1695 ;;		On entry : 0/0
  1696 ;;		On exit  : 0/0
  1697 ;;		Unchanged: 0/0
  1698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1699 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1700 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1702 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1703 ;;Total ram usage:        8 bytes
  1704 ;; Hardware stack levels used:    1
  1705 ;; Hardware stack levels required when called:   12
  1706 ;; This function calls:
  1707 ;;		_vfpfcnvrt
  1708 ;; This function is called by:
  1709 ;;		_printf
  1710 ;; This function uses a non-reentrant model
  1711 ;;
  1712                           
  1713                           	psect	text4
  1714  0026BA                     __ptext4:
  1715                           	opt callstack 0
  1716  0026BA                     _vfprintf:
  1717                           	opt callstack 16
  1718                           
  1719                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1720                           
  1721                           ;incstack = 0
  1722  0026BA  C0D5  F0D9         	movff	vfprintf@fmt,vfprintf@cfmt
  1723  0026BE  C0D6  F0DA         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1724                           
  1725                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1726  0026C2  0E00               	movlw	0
  1727  0026C4  0100               	movlb	0	; () banked
  1728  0026C6  6FF1               	movwf	(_nout+1)& (0+255),b
  1729  0026C8  0E00               	movlw	0
  1730  0026CA  6FF0               	movwf	_nout& (0+255),b
  1731                           
  1732                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1733  0026CC  D013               	goto	l3349
  1734  0026CE                     l3347:
  1735                           
  1736                           ; BSR set to: 0
  1737                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1738  0026CE  C0D3  F0C3         	movff	vfprintf@fp,vfpfcnvrt@fp
  1739  0026D2  C0D4  F0C4         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1740  0026D6  0ED9               	movlw	low vfprintf@cfmt
  1741  0026D8  6FC5               	movwf	vfpfcnvrt@fmt& (0+255),b
  1742  0026DA  0E00               	movlw	high vfprintf@cfmt
  1743  0026DC  6FC6               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1744  0026DE  C0D7  F0C7         	movff	vfprintf@ap,vfpfcnvrt@ap
  1745  0026E2  C0D8  F0C8         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1746  0026E6  EC45  F00E         	call	_vfpfcnvrt	;wreg free
  1747  0026EA  0100               	movlb	0	; () banked
  1748  0026EC  51C3               	movf	?_vfpfcnvrt& (0+255),w,b
  1749  0026EE  27F0               	addwf	_nout& (0+255),f,b
  1750  0026F0  51C4               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1751  0026F2  23F1               	addwfc	(_nout+1)& (0+255),f,b
  1752  0026F4                     l3349:
  1753                           
  1754                           ; BSR set to: 0
  1755                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1756  0026F4  C0D9  FFF6         	movff	vfprintf@cfmt,tblptrl
  1757  0026F8  C0DA  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1758  0026FC                     	if	0	;tblptru may be non-zero
  1759  0026FC                     	endif
  1760  0026FC                     	if	0	;tblptru may be non-zero
  1761  0026FC                     	endif
  1762  0026FC  0008               	tblrd		*
  1763  0026FE  50F5               	movf	tablat,w,c
  1764  002700  0900               	iorlw	0
  1765  002702  A4D8               	btfss	status,2,c
  1766  002704  D7E4               	goto	l3347
  1767                           
  1768                           ; BSR set to: 0
  1769                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1770  002706  C0F0  F0D3         	movff	_nout,?_vfprintf
  1771  00270A  C0F1  F0D4         	movff	_nout+1,?_vfprintf+1
  1772                           
  1773                           ; BSR set to: 0
  1774  00270E  0012               	return		;funcret
  1775  002710                     __end_of_vfprintf:
  1776                           	opt callstack 0
  1777                           
  1778 ;; *************** function _vfpfcnvrt *****************
  1779 ;; Defined at:
  1780 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1781 ;; Parameters:    Size  Location     Type
  1782 ;;  fp              2   67[BANK0 ] PTR struct _IO_FILE
  1783 ;;		 -> NULL(0), 
  1784 ;;  fmt             2   69[BANK0 ] PTR PTR unsigned char 
  1785 ;;		 -> vfprintf@cfmt(2), 
  1786 ;;  ap              2   71[BANK0 ] PTR PTR void 
  1787 ;;		 -> printf@ap(2), 
  1788 ;; Auto vars:     Size  Location     Type
  1789 ;;  ll              8   75[BANK0 ] long long 
  1790 ;;  llu             8    0        unsigned long long 
  1791 ;;  f               4    0        unsigned long long 
  1792 ;;  vp              3    0        PTR void 
  1793 ;;  ct              3    0        unsigned char [3]
  1794 ;;  cp              3    0        PTR unsigned char 
  1795 ;;  i               2    0        int 
  1796 ;;  done            2    0        int 
  1797 ;;  c               1    0        unsigned char 
  1798 ;; Return value:  Size  Location     Type
  1799 ;;                  2   67[BANK0 ] int 
  1800 ;; Registers used:
  1801 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1802 ;; Tracked objects:
  1803 ;;		On entry : 0/0
  1804 ;;		On exit  : 0/0
  1805 ;;		Unchanged: 0/0
  1806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1807 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1808 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1809 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1810 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1811 ;;Total ram usage:       16 bytes
  1812 ;; Hardware stack levels used:    1
  1813 ;; Hardware stack levels required when called:   11
  1814 ;; This function calls:
  1815 ;;		_dtoa
  1816 ;;		_fputc
  1817 ;; This function is called by:
  1818 ;;		_vfprintf
  1819 ;; This function uses a non-reentrant model
  1820 ;;
  1821                           
  1822                           	psect	text5
  1823  001C8A                     __ptext5:
  1824                           	opt callstack 0
  1825  001C8A                     _vfpfcnvrt:
  1826                           	opt callstack 16
  1827                           
  1828                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1829                           
  1830                           ; BSR set to: 0
  1831                           ;incstack = 0
  1832  001C8A  C0C5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1833  001C8E  C0C6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1834  001C92  CFDE FFF6          	movff	postinc2,tblptrl
  1835  001C96  CFDD FFF7          	movff	postdec2,tblptrh
  1836  001C9A                     	if	0	;tblptru may be non-zero
  1837  001C9A                     	endif
  1838  001C9A                     	if	0	;tblptru may be non-zero
  1839  001C9A                     	endif
  1840  001C9A  0008               	tblrd		*
  1841  001C9C  50F5               	movf	tablat,w,c
  1842  001C9E  0A25               	xorlw	37
  1843  001CA0  A4D8               	btfss	status,2,c
  1844  001CA2  D09B               	goto	l3335
  1845                           
  1846                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1847  001CA4  C0C5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1848  001CA8  C0C6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1849  001CAC  2ADE               	incf	postinc2,f,c
  1850  001CAE  0E00               	movlw	0
  1851  001CB0  22DD               	addwfc	postdec2,f,c
  1852                           
  1853                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1854  001CB2  0E00               	movlw	0
  1855  001CB4  0100               	movlb	0	; () banked
  1856  001CB6  6FF3               	movwf	(_width+1)& (0+255),b
  1857  001CB8  0E00               	movlw	0
  1858  001CBA  6FF2               	movwf	_width& (0+255),b
  1859  001CBC  C0F2  F0F6         	movff	_width,_flags
  1860  001CC0  C0F3  F0F7         	movff	_width+1,_flags+1
  1861                           
  1862                           ; BSR set to: 0
  1863                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1864  001CC4  69F4               	setf	_prec& (0+255),b
  1865  001CC6  69F5               	setf	(_prec+1)& (0+255),b
  1866                           
  1867                           ; BSR set to: 0
  1868                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1869  001CC8  C0C5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1870  001CCC  C0C6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1871  001CD0  CFDE FFF6          	movff	postinc2,tblptrl
  1872  001CD4  CFDD FFF7          	movff	postdec2,tblptrh
  1873  001CD8                     	if	0	;tblptru may be non-zero
  1874  001CD8                     	endif
  1875  001CD8                     	if	0	;tblptru may be non-zero
  1876  001CD8                     	endif
  1877  001CD8  0008               	tblrd		*
  1878  001CDA  50F5               	movf	tablat,w,c
  1879  001CDC  0A64               	xorlw	100
  1880  001CDE  B4D8               	btfsc	status,2,c
  1881  001CE0  D00D               	goto	u3960
  1882                           
  1883                           ; BSR set to: 0
  1884  001CE2  C0C5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1885  001CE6  C0C6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1886  001CEA  CFDE FFF6          	movff	postinc2,tblptrl
  1887  001CEE  CFDD FFF7          	movff	postdec2,tblptrh
  1888  001CF2                     	if	0	;tblptru may be non-zero
  1889  001CF2                     	endif
  1890  001CF2                     	if	0	;tblptru may be non-zero
  1891  001CF2                     	endif
  1892  001CF2  0008               	tblrd		*
  1893  001CF4  50F5               	movf	tablat,w,c
  1894  001CF6  0A69               	xorlw	105
  1895  001CF8  A4D8               	btfss	status,2,c
  1896  001CFA  D03F               	goto	l3319
  1897  001CFC                     u3960:
  1898                           
  1899                           ; BSR set to: 0
  1900                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  1901  001CFC  C0C5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1902  001D00  C0C6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1903  001D04  2ADE               	incf	postinc2,f,c
  1904  001D06  0E00               	movlw	0
  1905  001D08  22DD               	addwfc	postdec2,f,c
  1906                           
  1907                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1908  001D0A  C0C7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1909  001D0E  C0C8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1910  001D12  CFDF F0C9          	movff	indf2,??_vfpfcnvrt
  1911  001D16  0E02               	movlw	2
  1912  001D18  26DE               	addwf	postinc2,f,c
  1913  001D1A  CFDF F0CA          	movff	indf2,??_vfpfcnvrt+1
  1914  001D1E  0E00               	movlw	0
  1915  001D20  22DD               	addwfc	postdec2,f,c
  1916  001D22  C0C9  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1917  001D26  C0CA  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1918  001D2A  CFDE F0CB          	movff	postinc2,vfpfcnvrt@ll
  1919  001D2E  CFDD F0CC          	movff	postdec2,vfpfcnvrt@ll+1
  1920  001D32  0E00               	movlw	0
  1921  001D34  BFCC               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  1922  001D36  0EFF               	movlw	-1
  1923  001D38  6FCD               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  1924  001D3A  6FCE               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  1925  001D3C  6FCF               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  1926  001D3E  6FD0               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  1927  001D40  6FD1               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  1928  001D42  6FD2               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  1929                           
  1930                           ; BSR set to: 0
  1931                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  1932  001D44  C0C3  F09F         	movff	vfpfcnvrt@fp,dtoa@fp
  1933  001D48  C0C4  F0A0         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1934  001D4C  C0CB  F0A1         	movff	vfpfcnvrt@ll,dtoa@d
  1935  001D50  C0CC  F0A2         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1936  001D54  C0CD  F0A3         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1937  001D58  C0CE  F0A4         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1938  001D5C  C0CF  F0A5         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1939  001D60  C0D0  F0A6         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1940  001D64  C0D1  F0A7         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1941  001D68  C0D2  F0A8         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1942  001D6C  EC2A  F00C         	call	_dtoa	;wreg free
  1943  001D70  C09F  F0C3         	movff	?_dtoa,?_vfpfcnvrt
  1944  001D74  C0A0  F0C4         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1945  001D78  0012               	return	
  1946  001D7A                     l3319:
  1947                           
  1948                           ; BSR set to: 0
  1949                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1950  001D7A  C0C5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1951  001D7E  C0C6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1952  001D82  CFDE FFF6          	movff	postinc2,tblptrl
  1953  001D86  CFDD FFF7          	movff	postdec2,tblptrh
  1954  001D8A                     	if	0	;tblptru may be non-zero
  1955  001D8A                     	endif
  1956  001D8A                     	if	0	;tblptru may be non-zero
  1957  001D8A                     	endif
  1958  001D8A  0008               	tblrd		*
  1959  001D8C  50F5               	movf	tablat,w,c
  1960  001D8E  0A25               	xorlw	37
  1961  001D90  A4D8               	btfss	status,2,c
  1962  001D92  D017               	goto	l3329
  1963                           
  1964                           ; BSR set to: 0
  1965                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1966  001D94  C0C5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1967  001D98  C0C6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1968  001D9C  2ADE               	incf	postinc2,f,c
  1969  001D9E  0E00               	movlw	0
  1970  001DA0  22DD               	addwfc	postdec2,f,c
  1971                           
  1972                           ; BSR set to: 0
  1973                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1974  001DA2  0E00               	movlw	0
  1975  001DA4  6F85               	movwf	(fputc@c+1)& (0+255),b
  1976  001DA6  0E25               	movlw	37
  1977  001DA8  6F84               	movwf	fputc@c& (0+255),b
  1978  001DAA  C0C3  F086         	movff	vfpfcnvrt@fp,fputc@fp
  1979  001DAE  C0C4  F087         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1980  001DB2  EC26  F013         	call	_fputc	;wreg free
  1981  001DB6                     l3325:
  1982                           
  1983                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1984  001DB6  0E00               	movlw	0
  1985  001DB8  0100               	movlb	0	; () banked
  1986  001DBA  6FC4               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1987  001DBC  0E01               	movlw	1
  1988  001DBE  6FC3               	movwf	?_vfpfcnvrt& (0+255),b
  1989  001DC0  0012               	return	
  1990  001DC2                     l3329:
  1991                           
  1992                           ; BSR set to: 0
  1993                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1994  001DC2  C0C5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1995  001DC6  C0C6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1996  001DCA  2ADE               	incf	postinc2,f,c
  1997  001DCC  0E00               	movlw	0
  1998  001DCE  22DD               	addwfc	postdec2,f,c
  1999                           
  2000                           ; BSR set to: 0
  2001                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  2002  001DD0  0E00               	movlw	0
  2003  001DD2  6FC4               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2004  001DD4  0E00               	movlw	0
  2005  001DD6  6FC3               	movwf	?_vfpfcnvrt& (0+255),b
  2006  001DD8  0012               	return	
  2007  001DDA                     l3335:
  2008                           
  2009                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  2010  001DDA  C0C5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2011  001DDE  C0C6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2012  001DE2  CFDE FFF6          	movff	postinc2,tblptrl
  2013  001DE6  CFDD FFF7          	movff	postdec2,tblptrh
  2014  001DEA                     	if	0	;tblptru may be non-zero
  2015  001DEA                     	endif
  2016  001DEA                     	if	0	;tblptru may be non-zero
  2017  001DEA                     	endif
  2018  001DEA  0008               	tblrd		*
  2019  001DEC  50F5               	movf	tablat,w,c
  2020  001DEE  0100               	movlb	0	; () banked
  2021  001DF0  6F84               	movwf	fputc@c& (0+255),b
  2022  001DF2  6B85               	clrf	(fputc@c+1)& (0+255),b
  2023  001DF4  C0C3  F086         	movff	vfpfcnvrt@fp,fputc@fp
  2024  001DF8  C0C4  F087         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2025  001DFC  EC26  F013         	call	_fputc	;wreg free
  2026                           
  2027                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  2028  001E00  C0C5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2029  001E04  C0C6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2030  001E08  2ADE               	incf	postinc2,f,c
  2031  001E0A  0E00               	movlw	0
  2032  001E0C  22DD               	addwfc	postdec2,f,c
  2033  001E0E  D7D3               	goto	l3325
  2034  001E10                     __end_of_vfpfcnvrt:
  2035                           	opt callstack 0
  2036                           
  2037 ;; *************** function _dtoa *****************
  2038 ;; Defined at:
  2039 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2040 ;; Parameters:    Size  Location     Type
  2041 ;;  fp              2   31[BANK0 ] PTR struct _IO_FILE
  2042 ;;		 -> NULL(0), 
  2043 ;;  d               8   33[BANK0 ] long long 
  2044 ;; Auto vars:     Size  Location     Type
  2045 ;;  n               8   57[BANK0 ] long long 
  2046 ;;  i               2   65[BANK0 ] int 
  2047 ;;  s               2   55[BANK0 ] int 
  2048 ;;  w               2   53[BANK0 ] int 
  2049 ;;  p               2   51[BANK0 ] int 
  2050 ;; Return value:  Size  Location     Type
  2051 ;;                  2   31[BANK0 ] int 
  2052 ;; Registers used:
  2053 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2054 ;; Tracked objects:
  2055 ;;		On entry : 0/0
  2056 ;;		On exit  : 0/0
  2057 ;;		Unchanged: 0/0
  2058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2059 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2060 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2061 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2062 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2063 ;;Total ram usage:       36 bytes
  2064 ;; Hardware stack levels used:    1
  2065 ;; Hardware stack levels required when called:   10
  2066 ;; This function calls:
  2067 ;;		___aodiv
  2068 ;;		___aomod
  2069 ;;		_abs
  2070 ;;		_pad
  2071 ;; This function is called by:
  2072 ;;		_vfpfcnvrt
  2073 ;; This function uses a non-reentrant model
  2074 ;;
  2075                           
  2076                           	psect	text6
  2077  001854                     __ptext6:
  2078                           	opt callstack 0
  2079  001854                     _dtoa:
  2080                           	opt callstack 16
  2081                           
  2082                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  2083                           
  2084                           ;incstack = 0
  2085  001854  C0A1  F0B9         	movff	dtoa@d,dtoa@n
  2086  001858  C0A2  F0BA         	movff	dtoa@d+1,dtoa@n+1
  2087  00185C  C0A3  F0BB         	movff	dtoa@d+2,dtoa@n+2
  2088  001860  C0A4  F0BC         	movff	dtoa@d+3,dtoa@n+3
  2089  001864  C0A5  F0BD         	movff	dtoa@d+4,dtoa@n+4
  2090  001868  C0A6  F0BE         	movff	dtoa@d+5,dtoa@n+5
  2091  00186C  C0A7  F0BF         	movff	dtoa@d+6,dtoa@n+6
  2092  001870  C0A8  F0C0         	movff	dtoa@d+7,dtoa@n+7
  2093                           
  2094                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  2095  001874  0100               	movlb	0	; () banked
  2096  001876  AFC0               	btfss	(dtoa@n+7)& (0+255),7,b
  2097  001878  D002               	goto	u3790
  2098  00187A  0E01               	movlw	1
  2099  00187C  D001               	goto	u3800
  2100  00187E                     u3790:
  2101  00187E  0E00               	movlw	0
  2102  001880                     u3800:
  2103  001880  6FB7               	movwf	dtoa@s& (0+255),b
  2104  001882  6BB8               	clrf	(dtoa@s+1)& (0+255),b
  2105                           
  2106                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  2107  001884  51B7               	movf	dtoa@s& (0+255),w,b
  2108  001886  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
  2109  001888  B4D8               	btfsc	status,2,c
  2110  00188A  D010               	goto	l3245
  2111                           
  2112                           ; BSR set to: 0
  2113                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  2114  00188C  1FC0               	comf	(dtoa@n+7)& (0+255),f,b
  2115  00188E  1FBF               	comf	(dtoa@n+6)& (0+255),f,b
  2116  001890  1FBE               	comf	(dtoa@n+5)& (0+255),f,b
  2117  001892  1FBD               	comf	(dtoa@n+4)& (0+255),f,b
  2118  001894  1FBC               	comf	(dtoa@n+3)& (0+255),f,b
  2119  001896  1FBB               	comf	(dtoa@n+2)& (0+255),f,b
  2120  001898  1FBA               	comf	(dtoa@n+1)& (0+255),f,b
  2121  00189A  6DB9               	negf	dtoa@n& (0+255),b
  2122  00189C  0E00               	movlw	0
  2123  00189E  23BA               	addwfc	(dtoa@n+1)& (0+255),f,b
  2124  0018A0  23BB               	addwfc	(dtoa@n+2)& (0+255),f,b
  2125  0018A2  23BC               	addwfc	(dtoa@n+3)& (0+255),f,b
  2126  0018A4  23BD               	addwfc	(dtoa@n+4)& (0+255),f,b
  2127  0018A6  23BE               	addwfc	(dtoa@n+5)& (0+255),f,b
  2128  0018A8  23BF               	addwfc	(dtoa@n+6)& (0+255),f,b
  2129  0018AA  23C0               	addwfc	(dtoa@n+7)& (0+255),f,b
  2130  0018AC                     l3245:
  2131                           
  2132                           ; BSR set to: 0
  2133                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  2134  0018AC  AFF5               	btfss	(_prec+1)& (0+255),7,b
  2135                           
  2136                           ; BSR set to: 0
  2137                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  2138  0018AE  93F6               	bcf	_flags& (0+255),1,b
  2139                           
  2140                           ; BSR set to: 0
  2141                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  2142  0018B0  BFF5               	btfsc	(_prec+1)& (0+255),7,b
  2143  0018B2  D005               	goto	u3830
  2144  0018B4  51F5               	movf	(_prec+1)& (0+255),w,b
  2145  0018B6  E108               	bnz	l289
  2146  0018B8  05F4               	decf	_prec& (0+255),w,b
  2147  0018BA  B0D8               	btfsc	status,0,c
  2148  0018BC  D005               	goto	l289
  2149  0018BE                     u3830:
  2150                           
  2151                           ; BSR set to: 0
  2152  0018BE  0E00               	movlw	0
  2153  0018C0  6FB4               	movwf	(dtoa@p+1)& (0+255),b
  2154  0018C2  0E01               	movlw	1
  2155  0018C4  6FB3               	movwf	dtoa@p& (0+255),b
  2156  0018C6  D004               	goto	l291
  2157  0018C8                     l289:
  2158                           
  2159                           ; BSR set to: 0
  2160  0018C8  C0F4  F0B3         	movff	_prec,dtoa@p
  2161  0018CC  C0F5  F0B4         	movff	_prec+1,dtoa@p+1
  2162  0018D0                     l291:
  2163                           
  2164                           ; BSR set to: 0
  2165                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  2166  0018D0  C0F2  F0B5         	movff	_width,dtoa@w
  2167  0018D4  C0F3  F0B6         	movff	_width+1,dtoa@w+1
  2168                           
  2169                           ; BSR set to: 0
  2170                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  2171  0018D8  51B7               	movf	dtoa@s& (0+255),w,b
  2172  0018DA  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
  2173  0018DC  A4D8               	btfss	status,2,c
  2174  0018DE  D002               	goto	u3850
  2175                           
  2176                           ; BSR set to: 0
  2177  0018E0  A5F6               	btfss	_flags& (0+255),2,b
  2178  0018E2  D003               	goto	l3259
  2179  0018E4                     u3850:
  2180                           
  2181                           ; BSR set to: 0
  2182                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  2183  0018E4  07B5               	decf	dtoa@w& (0+255),f,b
  2184  0018E6  A0D8               	btfss	status,0,c
  2185  0018E8  07B6               	decf	(dtoa@w+1)& (0+255),f,b
  2186  0018EA                     l3259:
  2187                           
  2188                           ; BSR set to: 0
  2189                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  2190  0018EA  0E00               	movlw	0
  2191  0018EC  6FC2               	movwf	(dtoa@i+1)& (0+255),b
  2192  0018EE  0E1F               	movlw	31
  2193  0018F0  6FC1               	movwf	dtoa@i& (0+255),b
  2194                           
  2195                           ; BSR set to: 0
  2196                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  2197  0018F2  0E00               	movlw	0
  2198  0018F4  0101               	movlb	1	; () banked
  2199  0018F6  6F4F               	movwf	(_dbuf+31)& (0+255),b
  2200                           
  2201                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2202  0018F8  D07D               	goto	l3273
  2203  0018FA                     l3263:
  2204                           
  2205                           ; BSR set to: 0
  2206                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  2207  0018FA  07C1               	decf	dtoa@i& (0+255),f,b
  2208  0018FC  A0D8               	btfss	status,0,c
  2209  0018FE  07C2               	decf	(dtoa@i+1)& (0+255),f,b
  2210                           
  2211                           ; BSR set to: 0
  2212                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  2213  001900  0E30               	movlw	low _dbuf
  2214  001902  25C1               	addwf	dtoa@i& (0+255),w,b
  2215  001904  6ED9               	movwf	fsr2l,c
  2216  001906  0E01               	movlw	high _dbuf
  2217  001908  21C2               	addwfc	(dtoa@i+1)& (0+255),w,b
  2218  00190A  6EDA               	movwf	fsr2h,c
  2219  00190C  C0B9  F080         	movff	dtoa@n,___aomod@dividend
  2220  001910  C0BA  F081         	movff	dtoa@n+1,___aomod@dividend+1
  2221  001914  C0BB  F082         	movff	dtoa@n+2,___aomod@dividend+2
  2222  001918  C0BC  F083         	movff	dtoa@n+3,___aomod@dividend+3
  2223  00191C  C0BD  F084         	movff	dtoa@n+4,___aomod@dividend+4
  2224  001920  C0BE  F085         	movff	dtoa@n+5,___aomod@dividend+5
  2225  001924  C0BF  F086         	movff	dtoa@n+6,___aomod@dividend+6
  2226  001928  C0C0  F087         	movff	dtoa@n+7,___aomod@dividend+7
  2227  00192C  0E0A               	movlw	10
  2228  00192E  6F88               	movwf	___aomod@divisor& (0+255),b
  2229  001930  0E00               	movlw	0
  2230  001932  6F89               	movwf	(___aomod@divisor+1)& (0+255),b
  2231  001934  0E00               	movlw	0
  2232  001936  6F8A               	movwf	(___aomod@divisor+2)& (0+255),b
  2233  001938  0E00               	movlw	0
  2234  00193A  6F8B               	movwf	(___aomod@divisor+3)& (0+255),b
  2235  00193C  0E00               	movlw	0
  2236  00193E  6F8C               	movwf	(___aomod@divisor+4)& (0+255),b
  2237  001940  0E00               	movlw	0
  2238  001942  6F8D               	movwf	(___aomod@divisor+5)& (0+255),b
  2239  001944  0E00               	movlw	0
  2240  001946  6F8E               	movwf	(___aomod@divisor+6)& (0+255),b
  2241  001948  0E00               	movlw	0
  2242  00194A  6F8F               	movwf	(___aomod@divisor+7)& (0+255),b
  2243  00194C  ECEC  F010         	call	___aomod	;wreg free
  2244  001950  C080  F0A9         	movff	?___aomod,??_dtoa
  2245  001954  C081  F0AA         	movff	?___aomod+1,??_dtoa+1
  2246  001958  C082  F0AB         	movff	?___aomod+2,??_dtoa+2
  2247  00195C  C083  F0AC         	movff	?___aomod+3,??_dtoa+3
  2248  001960  C084  F0AD         	movff	?___aomod+4,??_dtoa+4
  2249  001964  C085  F0AE         	movff	?___aomod+5,??_dtoa+5
  2250  001968  C086  F0AF         	movff	?___aomod+6,??_dtoa+6
  2251  00196C  C087  F0B0         	movff	?___aomod+7,??_dtoa+7
  2252  001970  C0A9  F092         	movff	??_dtoa,abs@a
  2253  001974  C0AB  F093         	movff	??_dtoa+2,abs@a+1
  2254  001978  ECC1  F013         	call	_abs	;wreg free
  2255  00197C  0100               	movlb	0	; () banked
  2256  00197E  5192               	movf	?_abs& (0+255),w,b
  2257  001980  0F30               	addlw	48
  2258  001982  6EDF               	movwf	indf2,c
  2259                           
  2260                           ; BSR set to: 0
  2261                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  2262  001984  07B3               	decf	dtoa@p& (0+255),f,b
  2263  001986  A0D8               	btfss	status,0,c
  2264  001988  07B4               	decf	(dtoa@p+1)& (0+255),f,b
  2265                           
  2266                           ; BSR set to: 0
  2267                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  2268  00198A  07B5               	decf	dtoa@w& (0+255),f,b
  2269  00198C  A0D8               	btfss	status,0,c
  2270  00198E  07B6               	decf	(dtoa@w+1)& (0+255),f,b
  2271                           
  2272                           ; BSR set to: 0
  2273                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  2274  001990  C0B9  F080         	movff	dtoa@n,___aodiv@dividend
  2275  001994  C0BA  F081         	movff	dtoa@n+1,___aodiv@dividend+1
  2276  001998  C0BB  F082         	movff	dtoa@n+2,___aodiv@dividend+2
  2277  00199C  C0BC  F083         	movff	dtoa@n+3,___aodiv@dividend+3
  2278  0019A0  C0BD  F084         	movff	dtoa@n+4,___aodiv@dividend+4
  2279  0019A4  C0BE  F085         	movff	dtoa@n+5,___aodiv@dividend+5
  2280  0019A8  C0BF  F086         	movff	dtoa@n+6,___aodiv@dividend+6
  2281  0019AC  C0C0  F087         	movff	dtoa@n+7,___aodiv@dividend+7
  2282  0019B0  0E0A               	movlw	10
  2283  0019B2  6F88               	movwf	___aodiv@divisor& (0+255),b
  2284  0019B4  0E00               	movlw	0
  2285  0019B6  6F89               	movwf	(___aodiv@divisor+1)& (0+255),b
  2286  0019B8  0E00               	movlw	0
  2287  0019BA  6F8A               	movwf	(___aodiv@divisor+2)& (0+255),b
  2288  0019BC  0E00               	movlw	0
  2289  0019BE  6F8B               	movwf	(___aodiv@divisor+3)& (0+255),b
  2290  0019C0  0E00               	movlw	0
  2291  0019C2  6F8C               	movwf	(___aodiv@divisor+4)& (0+255),b
  2292  0019C4  0E00               	movlw	0
  2293  0019C6  6F8D               	movwf	(___aodiv@divisor+5)& (0+255),b
  2294  0019C8  0E00               	movlw	0
  2295  0019CA  6F8E               	movwf	(___aodiv@divisor+6)& (0+255),b
  2296  0019CC  0E00               	movlw	0
  2297  0019CE  6F8F               	movwf	(___aodiv@divisor+7)& (0+255),b
  2298  0019D0  EC08  F00F         	call	___aodiv	;wreg free
  2299  0019D4  C080  F0B9         	movff	?___aodiv,dtoa@n
  2300  0019D8  C081  F0BA         	movff	?___aodiv+1,dtoa@n+1
  2301  0019DC  C082  F0BB         	movff	?___aodiv+2,dtoa@n+2
  2302  0019E0  C083  F0BC         	movff	?___aodiv+3,dtoa@n+3
  2303  0019E4  C084  F0BD         	movff	?___aodiv+4,dtoa@n+4
  2304  0019E8  C085  F0BE         	movff	?___aodiv+5,dtoa@n+5
  2305  0019EC  C086  F0BF         	movff	?___aodiv+6,dtoa@n+6
  2306  0019F0  C087  F0C0         	movff	?___aodiv+7,dtoa@n+7
  2307  0019F4                     l3273:
  2308                           
  2309                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2310  0019F4  0100               	movlb	0	; () banked
  2311  0019F6  BFC2               	btfsc	(dtoa@i+1)& (0+255),7,b
  2312  0019F8  D01F               	goto	u3900
  2313  0019FA  51C2               	movf	(dtoa@i+1)& (0+255),w,b
  2314  0019FC  E103               	bnz	u3860
  2315  0019FE  05C1               	decf	dtoa@i& (0+255),w,b
  2316  001A00  A0D8               	btfss	status,0,c
  2317  001A02  D01A               	goto	u3900
  2318  001A04                     u3860:
  2319                           
  2320                           ; BSR set to: 0
  2321  001A04  51B9               	movf	dtoa@n& (0+255),w,b
  2322  001A06  11BA               	iorwf	(dtoa@n+1)& (0+255),w,b
  2323  001A08  11BB               	iorwf	(dtoa@n+2)& (0+255),w,b
  2324  001A0A  11BC               	iorwf	(dtoa@n+3)& (0+255),w,b
  2325  001A0C  11BD               	iorwf	(dtoa@n+4)& (0+255),w,b
  2326  001A0E  11BE               	iorwf	(dtoa@n+5)& (0+255),w,b
  2327  001A10  11BF               	iorwf	(dtoa@n+6)& (0+255),w,b
  2328  001A12  11C0               	iorwf	(dtoa@n+7)& (0+255),w,b
  2329  001A14  A4D8               	btfss	status,2,c
  2330  001A16  D771               	goto	l3263
  2331                           
  2332                           ; BSR set to: 0
  2333  001A18  BFB4               	btfsc	(dtoa@p+1)& (0+255),7,b
  2334  001A1A  D005               	goto	u3880
  2335  001A1C  51B4               	movf	(dtoa@p+1)& (0+255),w,b
  2336  001A1E  E102               	bnz	u3881
  2337  001A20  05B3               	decf	dtoa@p& (0+255),w,b
  2338  001A22  B0D8               	btfsc	status,0,c
  2339  001A24                     u3881:
  2340  001A24  D76A               	goto	l3263
  2341  001A26                     u3880:
  2342                           
  2343                           ; BSR set to: 0
  2344  001A26  BFB6               	btfsc	(dtoa@w+1)& (0+255),7,b
  2345  001A28  D007               	goto	u3900
  2346  001A2A  51B6               	movf	(dtoa@w+1)& (0+255),w,b
  2347  001A2C  E103               	bnz	u3890
  2348  001A2E  05B5               	decf	dtoa@w& (0+255),w,b
  2349  001A30  A0D8               	btfss	status,0,c
  2350  001A32  D002               	goto	u3900
  2351  001A34                     u3890:
  2352                           
  2353                           ; BSR set to: 0
  2354  001A34  B3F6               	btfsc	_flags& (0+255),1,b
  2355  001A36  D761               	goto	l3263
  2356  001A38                     u3900:
  2357                           
  2358                           ; BSR set to: 0
  2359                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  2360  001A38  51B7               	movf	dtoa@s& (0+255),w,b
  2361  001A3A  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
  2362  001A3C  A4D8               	btfss	status,2,c
  2363  001A3E  D002               	goto	u3920
  2364                           
  2365                           ; BSR set to: 0
  2366  001A40  A5F6               	btfss	_flags& (0+255),2,b
  2367  001A42  D017               	goto	l3297
  2368  001A44                     u3920:
  2369                           
  2370                           ; BSR set to: 0
  2371                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  2372  001A44  07C1               	decf	dtoa@i& (0+255),f,b
  2373  001A46  A0D8               	btfss	status,0,c
  2374  001A48  07C2               	decf	(dtoa@i+1)& (0+255),f,b
  2375                           
  2376                           ; BSR set to: 0
  2377                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  2378  001A4A  51B7               	movf	dtoa@s& (0+255),w,b
  2379  001A4C  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
  2380  001A4E  A4D8               	btfss	status,2,c
  2381  001A50  D004               	goto	l3293
  2382                           
  2383                           ; BSR set to: 0
  2384  001A52  0E00               	movlw	0
  2385  001A54  6FB2               	movwf	(_dtoa$516+1)& (0+255),b
  2386  001A56  0E2B               	movlw	43
  2387  001A58  D003               	goto	L2
  2388  001A5A                     l3293:
  2389                           
  2390                           ; BSR set to: 0
  2391  001A5A  0E00               	movlw	0
  2392  001A5C  6FB2               	movwf	(_dtoa$516+1)& (0+255),b
  2393  001A5E  0E2D               	movlw	45
  2394  001A60                     L2:
  2395  001A60  6FB1               	movwf	_dtoa$516& (0+255),b
  2396                           
  2397                           ; BSR set to: 0
  2398  001A62  0E30               	movlw	low _dbuf
  2399  001A64  25C1               	addwf	dtoa@i& (0+255),w,b
  2400  001A66  6ED9               	movwf	fsr2l,c
  2401  001A68  0E01               	movlw	high _dbuf
  2402  001A6A  21C2               	addwfc	(dtoa@i+1)& (0+255),w,b
  2403  001A6C  6EDA               	movwf	fsr2h,c
  2404  001A6E  C0B1  FFDF         	movff	_dtoa$516,indf2
  2405  001A72                     l3297:
  2406                           
  2407                           ; BSR set to: 0
  2408                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  2409  001A72  C09F  F094         	movff	dtoa@fp,pad@fp
  2410  001A76  C0A0  F095         	movff	dtoa@fp+1,pad@fp+1
  2411  001A7A  0E30               	movlw	low _dbuf
  2412  001A7C  25C1               	addwf	dtoa@i& (0+255),w,b
  2413  001A7E  6F96               	movwf	pad@buf& (0+255),b
  2414  001A80  0E01               	movlw	high _dbuf
  2415  001A82  21C2               	addwfc	(dtoa@i+1)& (0+255),w,b
  2416  001A84  6F97               	movwf	(pad@buf+1)& (0+255),b
  2417  001A86  C0B5  F098         	movff	dtoa@w,pad@p
  2418  001A8A  C0B6  F099         	movff	dtoa@w+1,pad@p+1
  2419  001A8E  EC5D  F012         	call	_pad	;wreg free
  2420  001A92  C094  F09F         	movff	?_pad,?_dtoa
  2421  001A96  C095  F0A0         	movff	?_pad+1,?_dtoa+1
  2422  001A9A  0012               	return		;funcret
  2423  001A9C                     __end_of_dtoa:
  2424                           	opt callstack 0
  2425                           
  2426 ;; *************** function _pad *****************
  2427 ;; Defined at:
  2428 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2429 ;; Parameters:    Size  Location     Type
  2430 ;;  fp              2   20[BANK0 ] PTR struct _IO_FILE
  2431 ;;		 -> NULL(0), 
  2432 ;;  buf             2   22[BANK0 ] PTR unsigned char 
  2433 ;;		 -> dbuf(32), 
  2434 ;;  p               2   24[BANK0 ] int 
  2435 ;; Auto vars:     Size  Location     Type
  2436 ;;  w               2   29[BANK0 ] int 
  2437 ;;  i               2   27[BANK0 ] int 
  2438 ;; Return value:  Size  Location     Type
  2439 ;;                  2   20[BANK0 ] int 
  2440 ;; Registers used:
  2441 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2442 ;; Tracked objects:
  2443 ;;		On entry : 0/0
  2444 ;;		On exit  : 0/0
  2445 ;;		Unchanged: 0/0
  2446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2447 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2448 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2449 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2450 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2451 ;;Total ram usage:       11 bytes
  2452 ;; Hardware stack levels used:    1
  2453 ;; Hardware stack levels required when called:    9
  2454 ;; This function calls:
  2455 ;;		_fputc
  2456 ;;		_fputs
  2457 ;;		_strlen
  2458 ;; This function is called by:
  2459 ;;		_dtoa
  2460 ;; This function uses a non-reentrant model
  2461 ;;
  2462                           
  2463                           	psect	text7
  2464  0024BA                     __ptext7:
  2465                           	opt callstack 0
  2466  0024BA                     _pad:
  2467                           	opt callstack 16
  2468                           
  2469                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  2470                           
  2471                           ;incstack = 0
  2472  0024BA  0100               	movlb	0	; () banked
  2473  0024BC  A1F6               	btfss	_flags& (0+255),0,b
  2474  0024BE  D00A               	goto	l3141
  2475                           
  2476                           ; BSR set to: 0
  2477                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  2478  0024C0  C096  F08D         	movff	pad@buf,fputs@s
  2479  0024C4  C097  F08E         	movff	pad@buf+1,fputs@s+1
  2480  0024C8  C094  F08F         	movff	pad@fp,fputs@fp
  2481  0024CC  C095  F090         	movff	pad@fp+1,fputs@fp+1
  2482  0024D0  EC88  F013         	call	_fputs	;wreg free
  2483  0024D4                     l3141:
  2484                           
  2485                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  2486  0024D4  0100               	movlb	0	; () banked
  2487  0024D6  BF99               	btfsc	(pad@p+1)& (0+255),7,b
  2488  0024D8  D005               	goto	l3145
  2489                           
  2490                           ; BSR set to: 0
  2491  0024DA  C098  F09D         	movff	pad@p,pad@w
  2492  0024DE  C099  F09E         	movff	pad@p+1,pad@w+1
  2493  0024E2  D004               	goto	l278
  2494  0024E4                     l3145:
  2495                           
  2496                           ; BSR set to: 0
  2497  0024E4  0E00               	movlw	0
  2498  0024E6  6F9E               	movwf	(pad@w+1)& (0+255),b
  2499  0024E8  0E00               	movlw	0
  2500  0024EA  6F9D               	movwf	pad@w& (0+255),b
  2501  0024EC                     l278:
  2502                           
  2503                           ; BSR set to: 0
  2504                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  2505  0024EC  0E00               	movlw	0
  2506  0024EE  6F9C               	movwf	(pad@i+1)& (0+255),b
  2507  0024F0  0E00               	movlw	0
  2508  0024F2  6F9B               	movwf	pad@i& (0+255),b
  2509                           
  2510                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2511  0024F4  D00D               	goto	l3151
  2512  0024F6                     l3147:
  2513                           
  2514                           ; BSR set to: 0
  2515                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  2516  0024F6  0E00               	movlw	0
  2517  0024F8  6F85               	movwf	(fputc@c+1)& (0+255),b
  2518  0024FA  0E20               	movlw	32
  2519  0024FC  6F84               	movwf	fputc@c& (0+255),b
  2520  0024FE  C094  F086         	movff	pad@fp,fputc@fp
  2521  002502  C095  F087         	movff	pad@fp+1,fputc@fp+1
  2522  002506  EC26  F013         	call	_fputc	;wreg free
  2523                           
  2524                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  2525  00250A  0100               	movlb	0	; () banked
  2526  00250C  4B9B               	infsnz	pad@i& (0+255),f,b
  2527  00250E  2B9C               	incf	(pad@i+1)& (0+255),f,b
  2528  002510                     l3151:
  2529                           
  2530                           ; BSR set to: 0
  2531                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2532  002510  519D               	movf	pad@w& (0+255),w,b
  2533  002512  5D9B               	subwf	pad@i& (0+255),w,b
  2534  002514  519C               	movf	(pad@i+1)& (0+255),w,b
  2535  002516  0A80               	xorlw	128
  2536  002518  6F9A               	movwf	??_pad& (0+255),b
  2537  00251A  519E               	movf	(pad@w+1)& (0+255),w,b
  2538  00251C  0A80               	xorlw	128
  2539  00251E  599A               	subwfb	??_pad& (0+255),w,b
  2540  002520  A0D8               	btfss	status,0,c
  2541  002522  D7E9               	goto	l3147
  2542                           
  2543                           ; BSR set to: 0
  2544                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  2545  002524  B1F6               	btfsc	_flags& (0+255),0,b
  2546  002526  D00A               	goto	l3155
  2547                           
  2548                           ; BSR set to: 0
  2549                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  2550  002528  C096  F08D         	movff	pad@buf,fputs@s
  2551  00252C  C097  F08E         	movff	pad@buf+1,fputs@s+1
  2552  002530  C094  F08F         	movff	pad@fp,fputs@fp
  2553  002534  C095  F090         	movff	pad@fp+1,fputs@fp+1
  2554  002538  EC88  F013         	call	_fputs	;wreg free
  2555  00253C                     l3155:
  2556                           
  2557                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  2558  00253C  C096  F080         	movff	pad@buf,strlen@s
  2559  002540  C097  F081         	movff	pad@buf+1,strlen@s+1
  2560  002544  ECDB  F013         	call	_strlen	;wreg free
  2561  002548  0100               	movlb	0	; () banked
  2562  00254A  519D               	movf	pad@w& (0+255),w,b
  2563  00254C  2580               	addwf	?_strlen& (0+255),w,b
  2564  00254E  6F94               	movwf	?_pad& (0+255),b
  2565  002550  519E               	movf	(pad@w+1)& (0+255),w,b
  2566  002552  2181               	addwfc	(?_strlen+1)& (0+255),w,b
  2567  002554  6F95               	movwf	(?_pad+1)& (0+255),b
  2568                           
  2569                           ; BSR set to: 0
  2570  002556  0012               	return		;funcret
  2571  002558                     __end_of_pad:
  2572                           	opt callstack 0
  2573                           
  2574 ;; *************** function _strlen *****************
  2575 ;; Defined at:
  2576 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  2577 ;; Parameters:    Size  Location     Type
  2578 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  2579 ;;		 -> dbuf(32), 
  2580 ;; Auto vars:     Size  Location     Type
  2581 ;;  a               2    2[BANK0 ] PTR const unsigned char 
  2582 ;;		 -> dbuf(32), 
  2583 ;; Return value:  Size  Location     Type
  2584 ;;                  2    0[BANK0 ] unsigned int 
  2585 ;; Registers used:
  2586 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2587 ;; Tracked objects:
  2588 ;;		On entry : 0/0
  2589 ;;		On exit  : 0/0
  2590 ;;		Unchanged: 0/0
  2591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2592 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2593 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2595 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2596 ;;Total ram usage:        4 bytes
  2597 ;; Hardware stack levels used:    1
  2598 ;; Hardware stack levels required when called:    3
  2599 ;; This function calls:
  2600 ;;		Nothing
  2601 ;; This function is called by:
  2602 ;;		_pad
  2603 ;; This function uses a non-reentrant model
  2604 ;;
  2605                           
  2606                           	psect	text8
  2607  0027B6                     __ptext8:
  2608                           	opt callstack 0
  2609  0027B6                     _strlen:
  2610                           	opt callstack 21
  2611                           
  2612                           ; BSR set to: 0
  2613                           ;incstack = 0
  2614  0027B6  C080  F082         	movff	strlen@s,strlen@a
  2615  0027BA  C081  F083         	movff	strlen@s+1,strlen@a+1
  2616  0027BE  D003               	goto	l3131
  2617  0027C0                     l3129:
  2618  0027C0  0100               	movlb	0	; () banked
  2619  0027C2  4B80               	infsnz	strlen@s& (0+255),f,b
  2620  0027C4  2B81               	incf	(strlen@s+1)& (0+255),f,b
  2621  0027C6                     l3131:
  2622  0027C6  C080  FFD9         	movff	strlen@s,fsr2l
  2623  0027CA  C081  FFDA         	movff	strlen@s+1,fsr2h
  2624  0027CE  50DF               	movf	indf2,w,c
  2625  0027D0  A4D8               	btfss	status,2,c
  2626  0027D2  D7F6               	goto	l3129
  2627  0027D4  0100               	movlb	0	; () banked
  2628  0027D6  5182               	movf	strlen@a& (0+255),w,b
  2629  0027D8  5D80               	subwf	strlen@s& (0+255),w,b
  2630  0027DA  6F80               	movwf	?_strlen& (0+255),b
  2631  0027DC  5183               	movf	(strlen@a+1)& (0+255),w,b
  2632  0027DE  5981               	subwfb	(strlen@s+1)& (0+255),w,b
  2633  0027E0  6F81               	movwf	(?_strlen+1)& (0+255),b
  2634                           
  2635                           ; BSR set to: 0
  2636  0027E2  0012               	return		;funcret
  2637  0027E4                     __end_of_strlen:
  2638                           	opt callstack 0
  2639                           
  2640 ;; *************** function _fputs *****************
  2641 ;; Defined at:
  2642 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  2643 ;; Parameters:    Size  Location     Type
  2644 ;;  s               2   13[BANK0 ] PTR const unsigned char 
  2645 ;;		 -> dbuf(32), 
  2646 ;;  fp              2   15[BANK0 ] PTR struct _IO_FILE
  2647 ;;		 -> NULL(0), 
  2648 ;; Auto vars:     Size  Location     Type
  2649 ;;  i               2   18[BANK0 ] int 
  2650 ;;  c               1   17[BANK0 ] unsigned char 
  2651 ;; Return value:  Size  Location     Type
  2652 ;;                  2   13[BANK0 ] int 
  2653 ;; Registers used:
  2654 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2655 ;; Tracked objects:
  2656 ;;		On entry : 0/0
  2657 ;;		On exit  : 0/0
  2658 ;;		Unchanged: 0/0
  2659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2660 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2661 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2663 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2664 ;;Total ram usage:        7 bytes
  2665 ;; Hardware stack levels used:    1
  2666 ;; Hardware stack levels required when called:    8
  2667 ;; This function calls:
  2668 ;;		_fputc
  2669 ;; This function is called by:
  2670 ;;		_pad
  2671 ;; This function uses a non-reentrant model
  2672 ;;
  2673                           
  2674                           	psect	text9
  2675  002710                     __ptext9:
  2676                           	opt callstack 0
  2677  002710                     _fputs:
  2678                           	opt callstack 16
  2679                           
  2680                           ; BSR set to: 0
  2681                           ;incstack = 0
  2682  002710  0E00               	movlw	0
  2683  002712  0100               	movlb	0	; () banked
  2684  002714  6F93               	movwf	(fputs@i+1)& (0+255),b
  2685  002716  0E00               	movlw	0
  2686  002718  6F92               	movwf	fputs@i& (0+255),b
  2687  00271A  D00C               	goto	l3125
  2688  00271C                     l3121:
  2689                           
  2690                           ; BSR set to: 0
  2691  00271C  C091  F084         	movff	fputs@c,fputc@c
  2692  002720  6B85               	clrf	(fputc@c+1)& (0+255),b
  2693  002722  C08F  F086         	movff	fputs@fp,fputc@fp
  2694  002726  C090  F087         	movff	fputs@fp+1,fputc@fp+1
  2695  00272A  EC26  F013         	call	_fputc	;wreg free
  2696  00272E  0100               	movlb	0	; () banked
  2697  002730  4B92               	infsnz	fputs@i& (0+255),f,b
  2698  002732  2B93               	incf	(fputs@i+1)& (0+255),f,b
  2699  002734                     l3125:
  2700                           
  2701                           ; BSR set to: 0
  2702  002734  5192               	movf	fputs@i& (0+255),w,b
  2703  002736  258D               	addwf	fputs@s& (0+255),w,b
  2704  002738  6ED9               	movwf	fsr2l,c
  2705  00273A  5193               	movf	(fputs@i+1)& (0+255),w,b
  2706  00273C  218E               	addwfc	(fputs@s+1)& (0+255),w,b
  2707  00273E  6EDA               	movwf	fsr2h,c
  2708  002740  50DF               	movf	indf2,w,c
  2709  002742  6F91               	movwf	fputs@c& (0+255),b
  2710  002744  5191               	movf	fputs@c& (0+255),w,b
  2711  002746  B4D8               	btfsc	status,2,c
  2712  002748  0012               	return	
  2713  00274A  D7E8               	goto	l3121
  2714  00274C                     __end_of_fputs:
  2715                           	opt callstack 0
  2716                           
  2717 ;; *************** function _fputc *****************
  2718 ;; Defined at:
  2719 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  2720 ;; Parameters:    Size  Location     Type
  2721 ;;  c               2    4[BANK0 ] int 
  2722 ;;  fp              2    6[BANK0 ] PTR struct _IO_FILE
  2723 ;;		 -> NULL(0), 
  2724 ;; Auto vars:     Size  Location     Type
  2725 ;;		None
  2726 ;; Return value:  Size  Location     Type
  2727 ;;                  2    4[BANK0 ] int 
  2728 ;; Registers used:
  2729 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2730 ;; Tracked objects:
  2731 ;;		On entry : 0/0
  2732 ;;		On exit  : 0/0
  2733 ;;		Unchanged: 0/0
  2734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2735 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2737 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2738 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2739 ;;Total ram usage:        9 bytes
  2740 ;; Hardware stack levels used:    1
  2741 ;; Hardware stack levels required when called:    7
  2742 ;; This function calls:
  2743 ;;		_putch
  2744 ;; This function is called by:
  2745 ;;		_pad
  2746 ;;		_vfpfcnvrt
  2747 ;;		_fputs
  2748 ;; This function uses a non-reentrant model
  2749 ;;
  2750                           
  2751                           	psect	text10
  2752  00264C                     __ptext10:
  2753                           	opt callstack 0
  2754  00264C                     _fputc:
  2755                           	opt callstack 19
  2756                           
  2757                           ; BSR set to: 0
  2758                           ;incstack = 0
  2759  00264C  0100               	movlb	0	; () banked
  2760  00264E  5186               	movf	fputc@fp& (0+255),w,b
  2761  002650  1187               	iorwf	(fputc@fp+1)& (0+255),w,b
  2762  002652  B4D8               	btfsc	status,2,c
  2763  002654  D004               	goto	u3570
  2764                           
  2765                           ; BSR set to: 0
  2766  002656  5186               	movf	fputc@fp& (0+255),w,b
  2767  002658  1187               	iorwf	(fputc@fp+1)& (0+255),w,b
  2768  00265A  A4D8               	btfss	status,2,c
  2769  00265C  D004               	goto	l3111
  2770  00265E                     u3570:
  2771                           
  2772                           ; BSR set to: 0
  2773  00265E  5184               	movf	fputc@c& (0+255),w,b
  2774  002660  EC5C  F014         	call	_putch
  2775  002664  0012               	return	
  2776  002666                     l3111:
  2777                           
  2778                           ; BSR set to: 0
  2779  002666  EE20 F004          	lfsr	2,4
  2780  00266A  5186               	movf	fputc@fp& (0+255),w,b
  2781  00266C  26D9               	addwf	fsr2l,f,c
  2782  00266E  5187               	movf	(fputc@fp+1)& (0+255),w,b
  2783  002670  22DA               	addwfc	fsr2h,f,c
  2784  002672  50DE               	movf	postinc2,w,c
  2785  002674  10DE               	iorwf	postinc2,w,c
  2786  002676  B4D8               	btfsc	status,2,c
  2787  002678  D016               	goto	u3590
  2788                           
  2789                           ; BSR set to: 0
  2790  00267A  EE20 F004          	lfsr	2,4
  2791  00267E  5186               	movf	fputc@fp& (0+255),w,b
  2792  002680  26D9               	addwf	fsr2l,f,c
  2793  002682  5187               	movf	(fputc@fp+1)& (0+255),w,b
  2794  002684  22DA               	addwfc	fsr2h,f,c
  2795  002686  EE10 F002          	lfsr	1,2
  2796  00268A  5186               	movf	fputc@fp& (0+255),w,b
  2797  00268C  26E1               	addwf	fsr1l,f,c
  2798  00268E  5187               	movf	(fputc@fp+1)& (0+255),w,b
  2799  002690  22E2               	addwfc	fsr1h,f,c
  2800  002692  50DE               	movf	postinc2,w,c
  2801  002694  5CE6               	subwf	postinc1,w,c
  2802  002696  50E6               	movf	postinc1,w,c
  2803  002698  0A80               	xorlw	128
  2804  00269A  6F8C               	movwf	(??_fputc+4)& (0+255),b
  2805  00269C  50DE               	movf	postinc2,w,c
  2806  00269E  0A80               	xorlw	128
  2807  0026A0  598C               	subwfb	(??_fputc+4)& (0+255),w,b
  2808  0026A2  B0D8               	btfsc	status,0,c
  2809  0026A4  0012               	return	
  2810  0026A6                     u3590:
  2811                           
  2812                           ; BSR set to: 0
  2813  0026A6  EE20 F002          	lfsr	2,2
  2814  0026AA  5186               	movf	fputc@fp& (0+255),w,b
  2815  0026AC  26D9               	addwf	fsr2l,f,c
  2816  0026AE  5187               	movf	(fputc@fp+1)& (0+255),w,b
  2817  0026B0  22DA               	addwfc	fsr2h,f,c
  2818  0026B2  2ADE               	incf	postinc2,f,c
  2819  0026B4  0E00               	movlw	0
  2820  0026B6  22DD               	addwfc	postdec2,f,c
  2821  0026B8  0012               	return		;funcret
  2822  0026BA                     __end_of_fputc:
  2823                           	opt callstack 0
  2824                           
  2825 ;; *************** function _putch *****************
  2826 ;; Defined at:
  2827 ;;		line 102 in file "lcd.c"
  2828 ;; Parameters:    Size  Location     Type
  2829 ;;  data            1    wreg     unsigned char 
  2830 ;; Auto vars:     Size  Location     Type
  2831 ;;  data            1    3[BANK0 ] unsigned char 
  2832 ;; Return value:  Size  Location     Type
  2833 ;;                  1    wreg      void 
  2834 ;; Registers used:
  2835 ;;		wreg, status,2, status,0, cstack
  2836 ;; Tracked objects:
  2837 ;;		On entry : 0/0
  2838 ;;		On exit  : 0/0
  2839 ;;		Unchanged: 0/0
  2840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2842 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2844 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2845 ;;Total ram usage:        1 bytes
  2846 ;; Hardware stack levels used:    1
  2847 ;; Hardware stack levels required when called:    6
  2848 ;; This function calls:
  2849 ;;		_send_byte
  2850 ;; This function is called by:
  2851 ;;		_fputc
  2852 ;; This function uses a non-reentrant model
  2853 ;;
  2854                           
  2855                           	psect	text11
  2856  0028B8                     __ptext11:
  2857                           	opt callstack 0
  2858  0028B8                     _putch:
  2859                           	opt callstack 19
  2860                           
  2861                           ;incstack = 0
  2862                           ;putch@data stored from wreg
  2863  0028B8  0100               	movlb	0	; () banked
  2864  0028BA  6F83               	movwf	putch@data& (0+255),b
  2865                           
  2866                           ;lcd.c: 103:     LATDbits.LATD2 = 1;
  2867  0028BC  848C               	bsf	3980,2,c	;volatile
  2868                           
  2869                           ;lcd.c: 104:     send_byte((unsigned char)data);
  2870  0028BE  0100               	movlb	0	; () banked
  2871  0028C0  5183               	movf	putch@data& (0+255),w,b
  2872  0028C2  EC50  F014         	call	_send_byte
  2873  0028C6  0012               	return		;funcret
  2874  0028C8                     __end_of_putch:
  2875                           	opt callstack 0
  2876                           
  2877 ;; *************** function _abs *****************
  2878 ;; Defined at:
  2879 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  2880 ;; Parameters:    Size  Location     Type
  2881 ;;  a               2   18[BANK0 ] int 
  2882 ;; Auto vars:     Size  Location     Type
  2883 ;;		None
  2884 ;; Return value:  Size  Location     Type
  2885 ;;                  2   18[BANK0 ] int 
  2886 ;; Registers used:
  2887 ;;		wreg, status,2, status,0
  2888 ;; Tracked objects:
  2889 ;;		On entry : 0/0
  2890 ;;		On exit  : 0/0
  2891 ;;		Unchanged: 0/0
  2892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2893 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2895 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2896 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2897 ;;Total ram usage:        4 bytes
  2898 ;; Hardware stack levels used:    1
  2899 ;; Hardware stack levels required when called:    3
  2900 ;; This function calls:
  2901 ;;		Nothing
  2902 ;; This function is called by:
  2903 ;;		_dtoa
  2904 ;; This function uses a non-reentrant model
  2905 ;;
  2906                           
  2907                           	psect	text12
  2908  002782                     __ptext12:
  2909                           	opt callstack 0
  2910  002782                     _abs:
  2911                           	opt callstack 22
  2912                           
  2913                           ;incstack = 0
  2914  002782  0100               	movlb	0	; () banked
  2915  002784  BF93               	btfsc	(abs@a+1)& (0+255),7,b
  2916  002786  D005               	goto	u1910
  2917  002788  5193               	movf	(abs@a+1)& (0+255),w,b
  2918  00278A  E110               	bnz	l1001
  2919  00278C  0592               	decf	abs@a& (0+255),w,b
  2920  00278E  B0D8               	btfsc	status,0,c
  2921  002790  D00D               	goto	l1001
  2922  002792                     u1910:
  2923                           
  2924                           ; BSR set to: 0
  2925  002792  C092  F094         	movff	abs@a,??_abs
  2926  002796  C093  F095         	movff	abs@a+1,??_abs+1
  2927  00279A  1F94               	comf	??_abs& (0+255),f,b
  2928  00279C  1F95               	comf	(??_abs+1)& (0+255),f,b
  2929  00279E  4B94               	infsnz	??_abs& (0+255),f,b
  2930  0027A0  2B95               	incf	(??_abs+1)& (0+255),f,b
  2931  0027A2  C094  F092         	movff	??_abs,?_abs
  2932  0027A6  C095  F093         	movff	??_abs+1,?_abs+1
  2933  0027AA  0012               	return	
  2934  0027AC                     l1001:
  2935                           
  2936                           ; BSR set to: 0
  2937  0027AC  C092  F092         	movff	abs@a,?_abs
  2938  0027B0  C093  F093         	movff	abs@a+1,?_abs+1
  2939                           
  2940                           ; BSR set to: 0
  2941  0027B4  0012               	return		;funcret
  2942  0027B6                     __end_of_abs:
  2943                           	opt callstack 0
  2944                           
  2945 ;; *************** function ___aomod *****************
  2946 ;; Defined at:
  2947 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  2948 ;; Parameters:    Size  Location     Type
  2949 ;;  dividend        8    0[BANK0 ] long long 
  2950 ;;  divisor         8    8[BANK0 ] long long 
  2951 ;; Auto vars:     Size  Location     Type
  2952 ;;  sign            1   17[BANK0 ] unsigned char 
  2953 ;;  counter         1   16[BANK0 ] unsigned char 
  2954 ;; Return value:  Size  Location     Type
  2955 ;;                  8    0[BANK0 ] long long 
  2956 ;; Registers used:
  2957 ;;		wreg, status,2, status,0
  2958 ;; Tracked objects:
  2959 ;;		On entry : 0/0
  2960 ;;		On exit  : 0/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2963 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2964 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2966 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2967 ;;Total ram usage:       18 bytes
  2968 ;; Hardware stack levels used:    1
  2969 ;; Hardware stack levels required when called:    3
  2970 ;; This function calls:
  2971 ;;		Nothing
  2972 ;; This function is called by:
  2973 ;;		_dtoa
  2974 ;; This function uses a non-reentrant model
  2975 ;;
  2976                           
  2977                           	psect	text13
  2978  0021D8                     __ptext13:
  2979                           	opt callstack 0
  2980  0021D8                     ___aomod:
  2981                           	opt callstack 22
  2982                           
  2983                           ; BSR set to: 0
  2984                           ;incstack = 0
  2985  0021D8  0E00               	movlw	0
  2986  0021DA  0100               	movlb	0	; () banked
  2987  0021DC  6F91               	movwf	___aomod@sign& (0+255),b
  2988                           
  2989                           ; BSR set to: 0
  2990  0021DE  AF87               	btfss	(___aomod@dividend+7)& (0+255),7,b
  2991  0021E0  D012               	goto	l3211
  2992                           
  2993                           ; BSR set to: 0
  2994  0021E2  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
  2995  0021E4  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
  2996  0021E6  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
  2997  0021E8  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
  2998  0021EA  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
  2999  0021EC  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
  3000  0021EE  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
  3001  0021F0  6D80               	negf	___aomod@dividend& (0+255),b
  3002  0021F2  0E00               	movlw	0
  3003  0021F4  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  3004  0021F6  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  3005  0021F8  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  3006  0021FA  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  3007  0021FC  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  3008  0021FE  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  3009  002200  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  3010                           
  3011                           ; BSR set to: 0
  3012  002202  0E01               	movlw	1
  3013  002204  6F91               	movwf	___aomod@sign& (0+255),b
  3014  002206                     l3211:
  3015                           
  3016                           ; BSR set to: 0
  3017  002206  AF8F               	btfss	(___aomod@divisor+7)& (0+255),7,b
  3018  002208  D010               	goto	l3215
  3019                           
  3020                           ; BSR set to: 0
  3021  00220A  1F8F               	comf	(___aomod@divisor+7)& (0+255),f,b
  3022  00220C  1F8E               	comf	(___aomod@divisor+6)& (0+255),f,b
  3023  00220E  1F8D               	comf	(___aomod@divisor+5)& (0+255),f,b
  3024  002210  1F8C               	comf	(___aomod@divisor+4)& (0+255),f,b
  3025  002212  1F8B               	comf	(___aomod@divisor+3)& (0+255),f,b
  3026  002214  1F8A               	comf	(___aomod@divisor+2)& (0+255),f,b
  3027  002216  1F89               	comf	(___aomod@divisor+1)& (0+255),f,b
  3028  002218  6D88               	negf	___aomod@divisor& (0+255),b
  3029  00221A  0E00               	movlw	0
  3030  00221C  2389               	addwfc	(___aomod@divisor+1)& (0+255),f,b
  3031  00221E  238A               	addwfc	(___aomod@divisor+2)& (0+255),f,b
  3032  002220  238B               	addwfc	(___aomod@divisor+3)& (0+255),f,b
  3033  002222  238C               	addwfc	(___aomod@divisor+4)& (0+255),f,b
  3034  002224  238D               	addwfc	(___aomod@divisor+5)& (0+255),f,b
  3035  002226  238E               	addwfc	(___aomod@divisor+6)& (0+255),f,b
  3036  002228  238F               	addwfc	(___aomod@divisor+7)& (0+255),f,b
  3037  00222A                     l3215:
  3038                           
  3039                           ; BSR set to: 0
  3040  00222A  5188               	movf	___aomod@divisor& (0+255),w,b
  3041  00222C  1189               	iorwf	(___aomod@divisor+1)& (0+255),w,b
  3042  00222E  118A               	iorwf	(___aomod@divisor+2)& (0+255),w,b
  3043  002230  118B               	iorwf	(___aomod@divisor+3)& (0+255),w,b
  3044  002232  118C               	iorwf	(___aomod@divisor+4)& (0+255),w,b
  3045  002234  118D               	iorwf	(___aomod@divisor+5)& (0+255),w,b
  3046  002236  118E               	iorwf	(___aomod@divisor+6)& (0+255),w,b
  3047  002238  118F               	iorwf	(___aomod@divisor+7)& (0+255),w,b
  3048  00223A  B4D8               	btfsc	status,2,c
  3049  00223C  D03C               	goto	l3231
  3050                           
  3051                           ; BSR set to: 0
  3052  00223E  0E01               	movlw	1
  3053  002240  6F90               	movwf	___aomod@counter& (0+255),b
  3054  002242  D00A               	goto	l3221
  3055  002244                     l3219:
  3056                           
  3057                           ; BSR set to: 0
  3058  002244  90D8               	bcf	status,0,c
  3059  002246  3788               	rlcf	___aomod@divisor& (0+255),f,b
  3060  002248  3789               	rlcf	(___aomod@divisor+1)& (0+255),f,b
  3061  00224A  378A               	rlcf	(___aomod@divisor+2)& (0+255),f,b
  3062  00224C  378B               	rlcf	(___aomod@divisor+3)& (0+255),f,b
  3063  00224E  378C               	rlcf	(___aomod@divisor+4)& (0+255),f,b
  3064  002250  378D               	rlcf	(___aomod@divisor+5)& (0+255),f,b
  3065  002252  378E               	rlcf	(___aomod@divisor+6)& (0+255),f,b
  3066  002254  378F               	rlcf	(___aomod@divisor+7)& (0+255),f,b
  3067  002256  2B90               	incf	___aomod@counter& (0+255),f,b
  3068  002258                     l3221:
  3069                           
  3070                           ; BSR set to: 0
  3071  002258  AF8F               	btfss	(___aomod@divisor+7)& (0+255),7,b
  3072  00225A  D7F4               	goto	l3219
  3073  00225C                     u3760:
  3074                           
  3075                           ; BSR set to: 0
  3076  00225C  5188               	movf	___aomod@divisor& (0+255),w,b
  3077  00225E  5D80               	subwf	___aomod@dividend& (0+255),w,b
  3078  002260  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
  3079  002262  5981               	subwfb	(___aomod@dividend+1)& (0+255),w,b
  3080  002264  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
  3081  002266  5982               	subwfb	(___aomod@dividend+2)& (0+255),w,b
  3082  002268  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
  3083  00226A  5983               	subwfb	(___aomod@dividend+3)& (0+255),w,b
  3084  00226C  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
  3085  00226E  5984               	subwfb	(___aomod@dividend+4)& (0+255),w,b
  3086  002270  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
  3087  002272  5985               	subwfb	(___aomod@dividend+5)& (0+255),w,b
  3088  002274  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
  3089  002276  5986               	subwfb	(___aomod@dividend+6)& (0+255),w,b
  3090  002278  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
  3091  00227A  5987               	subwfb	(___aomod@dividend+7)& (0+255),w,b
  3092  00227C  A0D8               	btfss	status,0,c
  3093  00227E  D010               	goto	l3227
  3094                           
  3095                           ; BSR set to: 0
  3096  002280  5188               	movf	___aomod@divisor& (0+255),w,b
  3097  002282  5F80               	subwf	___aomod@dividend& (0+255),f,b
  3098  002284  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
  3099  002286  5B81               	subwfb	(___aomod@dividend+1)& (0+255),f,b
  3100  002288  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
  3101  00228A  5B82               	subwfb	(___aomod@dividend+2)& (0+255),f,b
  3102  00228C  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
  3103  00228E  5B83               	subwfb	(___aomod@dividend+3)& (0+255),f,b
  3104  002290  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
  3105  002292  5B84               	subwfb	(___aomod@dividend+4)& (0+255),f,b
  3106  002294  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
  3107  002296  5B85               	subwfb	(___aomod@dividend+5)& (0+255),f,b
  3108  002298  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
  3109  00229A  5B86               	subwfb	(___aomod@dividend+6)& (0+255),f,b
  3110  00229C  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
  3111  00229E  5B87               	subwfb	(___aomod@dividend+7)& (0+255),f,b
  3112  0022A0                     l3227:
  3113                           
  3114                           ; BSR set to: 0
  3115  0022A0  90D8               	bcf	status,0,c
  3116  0022A2  338F               	rrcf	(___aomod@divisor+7)& (0+255),f,b
  3117  0022A4  338E               	rrcf	(___aomod@divisor+6)& (0+255),f,b
  3118  0022A6  338D               	rrcf	(___aomod@divisor+5)& (0+255),f,b
  3119  0022A8  338C               	rrcf	(___aomod@divisor+4)& (0+255),f,b
  3120  0022AA  338B               	rrcf	(___aomod@divisor+3)& (0+255),f,b
  3121  0022AC  338A               	rrcf	(___aomod@divisor+2)& (0+255),f,b
  3122  0022AE  3389               	rrcf	(___aomod@divisor+1)& (0+255),f,b
  3123  0022B0  3388               	rrcf	___aomod@divisor& (0+255),f,b
  3124                           
  3125                           ; BSR set to: 0
  3126  0022B2  2F90               	decfsz	___aomod@counter& (0+255),f,b
  3127  0022B4  D7D3               	goto	u3760
  3128  0022B6                     l3231:
  3129                           
  3130                           ; BSR set to: 0
  3131  0022B6  5191               	movf	___aomod@sign& (0+255),w,b
  3132  0022B8  B4D8               	btfsc	status,2,c
  3133  0022BA  D010               	goto	l3235
  3134                           
  3135                           ; BSR set to: 0
  3136  0022BC  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
  3137  0022BE  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
  3138  0022C0  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
  3139  0022C2  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
  3140  0022C4  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
  3141  0022C6  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
  3142  0022C8  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
  3143  0022CA  6D80               	negf	___aomod@dividend& (0+255),b
  3144  0022CC  0E00               	movlw	0
  3145  0022CE  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  3146  0022D0  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  3147  0022D2  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  3148  0022D4  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  3149  0022D6  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  3150  0022D8  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  3151  0022DA  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  3152  0022DC                     l3235:
  3153                           
  3154                           ; BSR set to: 0
  3155  0022DC  C080  F080         	movff	___aomod@dividend,?___aomod
  3156  0022E0  C081  F081         	movff	___aomod@dividend+1,?___aomod+1
  3157  0022E4  C082  F082         	movff	___aomod@dividend+2,?___aomod+2
  3158  0022E8  C083  F083         	movff	___aomod@dividend+3,?___aomod+3
  3159  0022EC  C084  F084         	movff	___aomod@dividend+4,?___aomod+4
  3160  0022F0  C085  F085         	movff	___aomod@dividend+5,?___aomod+5
  3161  0022F4  C086  F086         	movff	___aomod@dividend+6,?___aomod+6
  3162  0022F8  C087  F087         	movff	___aomod@dividend+7,?___aomod+7
  3163                           
  3164                           ; BSR set to: 0
  3165  0022FC  0012               	return		;funcret
  3166  0022FE                     __end_of___aomod:
  3167                           	opt callstack 0
  3168                           
  3169 ;; *************** function ___aodiv *****************
  3170 ;; Defined at:
  3171 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  3172 ;; Parameters:    Size  Location     Type
  3173 ;;  dividend        8    0[BANK0 ] long long 
  3174 ;;  divisor         8    8[BANK0 ] long long 
  3175 ;; Auto vars:     Size  Location     Type
  3176 ;;  quotient        8   18[BANK0 ] long long 
  3177 ;;  sign            1   17[BANK0 ] unsigned char 
  3178 ;;  counter         1   16[BANK0 ] unsigned char 
  3179 ;; Return value:  Size  Location     Type
  3180 ;;                  8    0[BANK0 ] long long 
  3181 ;; Registers used:
  3182 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3183 ;; Tracked objects:
  3184 ;;		On entry : 0/0
  3185 ;;		On exit  : 0/0
  3186 ;;		Unchanged: 0/0
  3187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3188 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3189 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3191 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3192 ;;Total ram usage:       26 bytes
  3193 ;; Hardware stack levels used:    1
  3194 ;; Hardware stack levels required when called:    3
  3195 ;; This function calls:
  3196 ;;		Nothing
  3197 ;; This function is called by:
  3198 ;;		_dtoa
  3199 ;; This function uses a non-reentrant model
  3200 ;;
  3201                           
  3202                           	psect	text14
  3203  001E10                     __ptext14:
  3204                           	opt callstack 0
  3205  001E10                     ___aodiv:
  3206                           	opt callstack 22
  3207                           
  3208                           ; BSR set to: 0
  3209                           ;incstack = 0
  3210  001E10  0E00               	movlw	0
  3211  001E12  0100               	movlb	0	; () banked
  3212  001E14  6F91               	movwf	___aodiv@sign& (0+255),b
  3213                           
  3214                           ; BSR set to: 0
  3215  001E16  AF8F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  3216  001E18  D012               	goto	l3167
  3217                           
  3218                           ; BSR set to: 0
  3219  001E1A  1F8F               	comf	(___aodiv@divisor+7)& (0+255),f,b
  3220  001E1C  1F8E               	comf	(___aodiv@divisor+6)& (0+255),f,b
  3221  001E1E  1F8D               	comf	(___aodiv@divisor+5)& (0+255),f,b
  3222  001E20  1F8C               	comf	(___aodiv@divisor+4)& (0+255),f,b
  3223  001E22  1F8B               	comf	(___aodiv@divisor+3)& (0+255),f,b
  3224  001E24  1F8A               	comf	(___aodiv@divisor+2)& (0+255),f,b
  3225  001E26  1F89               	comf	(___aodiv@divisor+1)& (0+255),f,b
  3226  001E28  6D88               	negf	___aodiv@divisor& (0+255),b
  3227  001E2A  0E00               	movlw	0
  3228  001E2C  2389               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
  3229  001E2E  238A               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
  3230  001E30  238B               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
  3231  001E32  238C               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
  3232  001E34  238D               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
  3233  001E36  238E               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
  3234  001E38  238F               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
  3235                           
  3236                           ; BSR set to: 0
  3237  001E3A  0E01               	movlw	1
  3238  001E3C  6F91               	movwf	___aodiv@sign& (0+255),b
  3239  001E3E                     l3167:
  3240                           
  3241                           ; BSR set to: 0
  3242  001E3E  AF87               	btfss	(___aodiv@dividend+7)& (0+255),7,b
  3243  001E40  D012               	goto	l3173
  3244                           
  3245                           ; BSR set to: 0
  3246  001E42  1F87               	comf	(___aodiv@dividend+7)& (0+255),f,b
  3247  001E44  1F86               	comf	(___aodiv@dividend+6)& (0+255),f,b
  3248  001E46  1F85               	comf	(___aodiv@dividend+5)& (0+255),f,b
  3249  001E48  1F84               	comf	(___aodiv@dividend+4)& (0+255),f,b
  3250  001E4A  1F83               	comf	(___aodiv@dividend+3)& (0+255),f,b
  3251  001E4C  1F82               	comf	(___aodiv@dividend+2)& (0+255),f,b
  3252  001E4E  1F81               	comf	(___aodiv@dividend+1)& (0+255),f,b
  3253  001E50  6D80               	negf	___aodiv@dividend& (0+255),b
  3254  001E52  0E00               	movlw	0
  3255  001E54  2381               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
  3256  001E56  2382               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
  3257  001E58  2383               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
  3258  001E5A  2384               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
  3259  001E5C  2385               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
  3260  001E5E  2386               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
  3261  001E60  2387               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
  3262                           
  3263                           ; BSR set to: 0
  3264  001E62  0E01               	movlw	1
  3265  001E64  1B91               	xorwf	___aodiv@sign& (0+255),f,b
  3266  001E66                     l3173:
  3267                           
  3268                           ; BSR set to: 0
  3269  001E66  EE20  F092         	lfsr	2,___aodiv@quotient
  3270  001E6A  0E07               	movlw	7
  3271  001E6C                     u3681:
  3272  001E6C  6ADE               	clrf	postinc2,c
  3273  001E6E  06E8               	decf	wreg,f,c
  3274  001E70  E2FD               	bc	u3681
  3275                           
  3276                           ; BSR set to: 0
  3277  001E72  5188               	movf	___aodiv@divisor& (0+255),w,b
  3278  001E74  1189               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
  3279  001E76  118A               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
  3280  001E78  118B               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
  3281  001E7A  118C               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
  3282  001E7C  118D               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
  3283  001E7E  118E               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
  3284  001E80  118F               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
  3285  001E82  B4D8               	btfsc	status,2,c
  3286  001E84  D046               	goto	l3195
  3287                           
  3288                           ; BSR set to: 0
  3289  001E86  0E01               	movlw	1
  3290  001E88  6F90               	movwf	___aodiv@counter& (0+255),b
  3291  001E8A  D00A               	goto	l3181
  3292  001E8C                     l3179:
  3293                           
  3294                           ; BSR set to: 0
  3295  001E8C  90D8               	bcf	status,0,c
  3296  001E8E  3788               	rlcf	___aodiv@divisor& (0+255),f,b
  3297  001E90  3789               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
  3298  001E92  378A               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
  3299  001E94  378B               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
  3300  001E96  378C               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
  3301  001E98  378D               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
  3302  001E9A  378E               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
  3303  001E9C  378F               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
  3304  001E9E  2B90               	incf	___aodiv@counter& (0+255),f,b
  3305  001EA0                     l3181:
  3306                           
  3307                           ; BSR set to: 0
  3308  001EA0  AF8F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  3309  001EA2  D7F4               	goto	l3179
  3310  001EA4                     u3700:
  3311                           
  3312                           ; BSR set to: 0
  3313  001EA4  90D8               	bcf	status,0,c
  3314  001EA6  3792               	rlcf	___aodiv@quotient& (0+255),f,b
  3315  001EA8  3793               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
  3316  001EAA  3794               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
  3317  001EAC  3795               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
  3318  001EAE  3796               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
  3319  001EB0  3797               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
  3320  001EB2  3798               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
  3321  001EB4  3799               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
  3322                           
  3323                           ; BSR set to: 0
  3324  001EB6  5188               	movf	___aodiv@divisor& (0+255),w,b
  3325  001EB8  5D80               	subwf	___aodiv@dividend& (0+255),w,b
  3326  001EBA  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
  3327  001EBC  5981               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
  3328  001EBE  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  3329  001EC0  5982               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
  3330  001EC2  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  3331  001EC4  5983               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
  3332  001EC6  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  3333  001EC8  5984               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
  3334  001ECA  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  3335  001ECC  5985               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
  3336  001ECE  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  3337  001ED0  5986               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
  3338  001ED2  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  3339  001ED4  5987               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
  3340  001ED6  A0D8               	btfss	status,0,c
  3341  001ED8  D011               	goto	l3191
  3342                           
  3343                           ; BSR set to: 0
  3344  001EDA  5188               	movf	___aodiv@divisor& (0+255),w,b
  3345  001EDC  5F80               	subwf	___aodiv@dividend& (0+255),f,b
  3346  001EDE  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
  3347  001EE0  5B81               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
  3348  001EE2  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  3349  001EE4  5B82               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
  3350  001EE6  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  3351  001EE8  5B83               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
  3352  001EEA  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  3353  001EEC  5B84               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
  3354  001EEE  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  3355  001EF0  5B85               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
  3356  001EF2  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  3357  001EF4  5B86               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
  3358  001EF6  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  3359  001EF8  5B87               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
  3360                           
  3361                           ; BSR set to: 0
  3362  001EFA  8192               	bsf	___aodiv@quotient& (0+255),0,b
  3363  001EFC                     l3191:
  3364                           
  3365                           ; BSR set to: 0
  3366  001EFC  90D8               	bcf	status,0,c
  3367  001EFE  338F               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
  3368  001F00  338E               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
  3369  001F02  338D               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
  3370  001F04  338C               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
  3371  001F06  338B               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
  3372  001F08  338A               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
  3373  001F0A  3389               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
  3374  001F0C  3388               	rrcf	___aodiv@divisor& (0+255),f,b
  3375                           
  3376                           ; BSR set to: 0
  3377  001F0E  2F90               	decfsz	___aodiv@counter& (0+255),f,b
  3378  001F10  D7C9               	goto	u3700
  3379  001F12                     l3195:
  3380                           
  3381                           ; BSR set to: 0
  3382  001F12  5191               	movf	___aodiv@sign& (0+255),w,b
  3383  001F14  B4D8               	btfsc	status,2,c
  3384  001F16  D010               	goto	l3199
  3385                           
  3386                           ; BSR set to: 0
  3387  001F18  1F99               	comf	(___aodiv@quotient+7)& (0+255),f,b
  3388  001F1A  1F98               	comf	(___aodiv@quotient+6)& (0+255),f,b
  3389  001F1C  1F97               	comf	(___aodiv@quotient+5)& (0+255),f,b
  3390  001F1E  1F96               	comf	(___aodiv@quotient+4)& (0+255),f,b
  3391  001F20  1F95               	comf	(___aodiv@quotient+3)& (0+255),f,b
  3392  001F22  1F94               	comf	(___aodiv@quotient+2)& (0+255),f,b
  3393  001F24  1F93               	comf	(___aodiv@quotient+1)& (0+255),f,b
  3394  001F26  6D92               	negf	___aodiv@quotient& (0+255),b
  3395  001F28  0E00               	movlw	0
  3396  001F2A  2393               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
  3397  001F2C  2394               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
  3398  001F2E  2395               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
  3399  001F30  2396               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
  3400  001F32  2397               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
  3401  001F34  2398               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
  3402  001F36  2399               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
  3403  001F38                     l3199:
  3404                           
  3405                           ; BSR set to: 0
  3406  001F38  C092  F080         	movff	___aodiv@quotient,?___aodiv
  3407  001F3C  C093  F081         	movff	___aodiv@quotient+1,?___aodiv+1
  3408  001F40  C094  F082         	movff	___aodiv@quotient+2,?___aodiv+2
  3409  001F44  C095  F083         	movff	___aodiv@quotient+3,?___aodiv+3
  3410  001F48  C096  F084         	movff	___aodiv@quotient+4,?___aodiv+4
  3411  001F4C  C097  F085         	movff	___aodiv@quotient+5,?___aodiv+5
  3412  001F50  C098  F086         	movff	___aodiv@quotient+6,?___aodiv+6
  3413  001F54  C099  F087         	movff	___aodiv@quotient+7,?___aodiv+7
  3414                           
  3415                           ; BSR set to: 0
  3416  001F58  0012               	return		;funcret
  3417  001F5A                     __end_of___aodiv:
  3418                           	opt callstack 0
  3419                           
  3420 ;; *************** function _initLCD *****************
  3421 ;; Defined at:
  3422 ;;		line 69 in file "lcd.c"
  3423 ;; Parameters:    Size  Location     Type
  3424 ;;		None
  3425 ;; Auto vars:     Size  Location     Type
  3426 ;;		None
  3427 ;; Return value:  Size  Location     Type
  3428 ;;                  1    wreg      void 
  3429 ;; Registers used:
  3430 ;;		wreg, status,2, status,0, cstack
  3431 ;; Tracked objects:
  3432 ;;		On entry : 0/0
  3433 ;;		On exit  : 0/0
  3434 ;;		Unchanged: 0/0
  3435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3438 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3439 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3440 ;;Total ram usage:        1 bytes
  3441 ;; Hardware stack levels used:    1
  3442 ;; Hardware stack levels required when called:    7
  3443 ;; This function calls:
  3444 ;;		_lcdInst
  3445 ;;		_send_byte
  3446 ;;		_send_nibble
  3447 ;; This function is called by:
  3448 ;;		_main
  3449 ;; This function uses a non-reentrant model
  3450 ;;
  3451                           
  3452                           	psect	text15
  3453  0025DC                     __ptext15:
  3454                           	opt callstack 0
  3455  0025DC                     _initLCD:
  3456                           	opt callstack 23
  3457                           
  3458                           ;lcd.c: 70:     _delay((unsigned long)((15)*(10000000/4000.0)));
  3459                           
  3460                           ; BSR set to: 0
  3461                           ;incstack = 0
  3462  0025DC  0E31               	movlw	49
  3463  0025DE  0100               	movlb	0	; () banked
  3464  0025E0  6F84               	movwf	??_initLCD& (0+255),b
  3465  0025E2  0EB2               	movlw	178
  3466  0025E4                     u4527:
  3467  0025E4  2EE8               	decfsz	wreg,f,c
  3468  0025E6  D7FE               	bra	u4527
  3469  0025E8  2F84               	decfsz	??_initLCD& (0+255),f,b
  3470  0025EA  D7FC               	bra	u4527
  3471  0025EC  F000               	nop	
  3472                           
  3473                           ;lcd.c: 72:     LATDbits.LATD2 = 0;
  3474  0025EE  948C               	bcf	3980,2,c	;volatile
  3475                           
  3476                           ;lcd.c: 74:     send_nibble(0b0011);
  3477  0025F0  0E03               	movlw	3
  3478  0025F2  EC43  F014         	call	_send_nibble
  3479                           
  3480                           ;lcd.c: 75:     _delay((unsigned long)((5)*(10000000/4000.0)));
  3481  0025F6  0E11               	movlw	17
  3482  0025F8  0100               	movlb	0	; () banked
  3483  0025FA  6F84               	movwf	??_initLCD& (0+255),b
  3484  0025FC  0E3A               	movlw	58
  3485  0025FE                     u4537:
  3486  0025FE  2EE8               	decfsz	wreg,f,c
  3487  002600  D7FE               	bra	u4537
  3488  002602  2F84               	decfsz	??_initLCD& (0+255),f,b
  3489  002604  D7FC               	bra	u4537
  3490  002606  F000               	nop	
  3491                           
  3492                           ;lcd.c: 76:     send_nibble(0b0011);
  3493  002608  0E03               	movlw	3
  3494  00260A  EC43  F014         	call	_send_nibble
  3495                           
  3496                           ;lcd.c: 77:     _delay((unsigned long)((150)*(10000000/4000000.0)));
  3497  00260E  0E7D               	movlw	125
  3498  002610                     u4547:
  3499  002610  2EE8               	decfsz	wreg,f,c
  3500  002612  D7FE               	bra	u4547
  3501                           
  3502                           ;lcd.c: 78:     send_byte(0b00110010);
  3503  002614  0E32               	movlw	50
  3504  002616  EC50  F014         	call	_send_byte
  3505                           
  3506                           ;lcd.c: 80:     send_byte(0b00101000);
  3507  00261A  0E28               	movlw	40
  3508  00261C  EC50  F014         	call	_send_byte
  3509                           
  3510                           ;lcd.c: 81:     send_byte(0b00001000);
  3511  002620  0E08               	movlw	8
  3512  002622  EC50  F014         	call	_send_byte
  3513                           
  3514                           ;lcd.c: 82:     send_byte(0b00000001);
  3515  002626  0E01               	movlw	1
  3516  002628  EC50  F014         	call	_send_byte
  3517                           
  3518                           ;lcd.c: 83:     _delay((unsigned long)((5)*(10000000/4000.0)));
  3519  00262C  0E11               	movlw	17
  3520  00262E  0100               	movlb	0	; () banked
  3521  002630  6F84               	movwf	??_initLCD& (0+255),b
  3522  002632  0E3A               	movlw	58
  3523  002634                     u4557:
  3524  002634  2EE8               	decfsz	wreg,f,c
  3525  002636  D7FE               	bra	u4557
  3526  002638  2F84               	decfsz	??_initLCD& (0+255),f,b
  3527  00263A  D7FC               	bra	u4557
  3528  00263C  F000               	nop	
  3529                           
  3530                           ;lcd.c: 84:     send_byte(0b00000110);
  3531  00263E  0E06               	movlw	6
  3532  002640  EC50  F014         	call	_send_byte
  3533                           
  3534                           ;lcd.c: 87:     { lcdInst( (unsigned char)(8 | (1 << 2) | (1 << 1) | 1) );};
  3535  002644  0E0F               	movlw	15
  3536  002646  EC64  F014         	call	_lcdInst
  3537  00264A  0012               	return		;funcret
  3538  00264C                     __end_of_initLCD:
  3539                           	opt callstack 0
  3540                           
  3541 ;; *************** function _lcdInst *****************
  3542 ;; Defined at:
  3543 ;;		line 64 in file "lcd.c"
  3544 ;; Parameters:    Size  Location     Type
  3545 ;;  data            1    wreg     unsigned char 
  3546 ;; Auto vars:     Size  Location     Type
  3547 ;;  data            1    3[BANK0 ] unsigned char 
  3548 ;; Return value:  Size  Location     Type
  3549 ;;                  1    wreg      void 
  3550 ;; Registers used:
  3551 ;;		wreg, status,2, status,0, cstack
  3552 ;; Tracked objects:
  3553 ;;		On entry : 0/0
  3554 ;;		On exit  : 0/0
  3555 ;;		Unchanged: 0/0
  3556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3558 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3560 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3561 ;;Total ram usage:        1 bytes
  3562 ;; Hardware stack levels used:    1
  3563 ;; Hardware stack levels required when called:    6
  3564 ;; This function calls:
  3565 ;;		_send_byte
  3566 ;; This function is called by:
  3567 ;;		_initLCD
  3568 ;;		_print_echo
  3569 ;;		_main
  3570 ;;		_lcd_shift_cursor
  3571 ;;		_lcd_shift_display
  3572 ;;		_number_deploy
  3573 ;; This function uses a non-reentrant model
  3574 ;;
  3575                           
  3576                           	psect	text16
  3577  0028C8                     __ptext16:
  3578                           	opt callstack 0
  3579  0028C8                     _lcdInst:
  3580                           	opt callstack 23
  3581                           
  3582                           ;incstack = 0
  3583                           ;lcdInst@data stored from wreg
  3584  0028C8  0100               	movlb	0	; () banked
  3585  0028CA  6F83               	movwf	lcdInst@data& (0+255),b
  3586                           
  3587                           ;lcd.c: 65:     LATDbits.LATD2 = 0;
  3588  0028CC  948C               	bcf	3980,2,c	;volatile
  3589                           
  3590                           ;lcd.c: 66:     send_byte(data);
  3591  0028CE  0100               	movlb	0	; () banked
  3592  0028D0  5183               	movf	lcdInst@data& (0+255),w,b
  3593  0028D2  EC50  F014         	call	_send_byte
  3594  0028D6  0012               	return		;funcret
  3595  0028D8                     __end_of_lcdInst:
  3596                           	opt callstack 0
  3597                           
  3598 ;; *************** function _send_byte *****************
  3599 ;; Defined at:
  3600 ;;		line 55 in file "lcd.c"
  3601 ;; Parameters:    Size  Location     Type
  3602 ;;  data            1    wreg     unsigned char 
  3603 ;; Auto vars:     Size  Location     Type
  3604 ;;  data            1    2[BANK0 ] unsigned char 
  3605 ;; Return value:  Size  Location     Type
  3606 ;;                  1    wreg      void 
  3607 ;; Registers used:
  3608 ;;		wreg, status,2, status,0, cstack
  3609 ;; Tracked objects:
  3610 ;;		On entry : 0/0
  3611 ;;		On exit  : 0/0
  3612 ;;		Unchanged: 0/0
  3613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3615 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3617 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3618 ;;Total ram usage:        1 bytes
  3619 ;; Hardware stack levels used:    1
  3620 ;; Hardware stack levels required when called:    5
  3621 ;; This function calls:
  3622 ;;		_send_nibble
  3623 ;; This function is called by:
  3624 ;;		_lcdInst
  3625 ;;		_initLCD
  3626 ;;		_putch
  3627 ;; This function uses a non-reentrant model
  3628 ;;
  3629                           
  3630                           	psect	text17
  3631  0028A0                     __ptext17:
  3632                           	opt callstack 0
  3633  0028A0                     _send_byte:
  3634                           	opt callstack 19
  3635                           
  3636                           ;incstack = 0
  3637                           ;send_byte@data stored from wreg
  3638  0028A0  0100               	movlb	0	; () banked
  3639  0028A2  6F82               	movwf	send_byte@data& (0+255),b
  3640                           
  3641                           ;lcd.c: 57:     send_nibble(data >> 4);
  3642  0028A4  0100               	movlb	0	; () banked
  3643  0028A6  3982               	swapf	send_byte@data& (0+255),w,b
  3644  0028A8  0B0F               	andlw	15
  3645  0028AA  EC43  F014         	call	_send_nibble
  3646                           
  3647                           ;lcd.c: 60:     send_nibble(data);
  3648  0028AE  0100               	movlb	0	; () banked
  3649  0028B0  5182               	movf	send_byte@data& (0+255),w,b
  3650  0028B2  EC43  F014         	call	_send_nibble
  3651  0028B6  0012               	return		;funcret
  3652  0028B8                     __end_of_send_byte:
  3653                           	opt callstack 0
  3654                           
  3655 ;; *************** function _send_nibble *****************
  3656 ;; Defined at:
  3657 ;;		line 44 in file "lcd.c"
  3658 ;; Parameters:    Size  Location     Type
  3659 ;;  data            1    wreg     unsigned char 
  3660 ;; Auto vars:     Size  Location     Type
  3661 ;;  data            1    1[BANK0 ] unsigned char 
  3662 ;; Return value:  Size  Location     Type
  3663 ;;                  1    wreg      void 
  3664 ;; Registers used:
  3665 ;;		wreg, status,2, status,0, cstack
  3666 ;; Tracked objects:
  3667 ;;		On entry : 0/0
  3668 ;;		On exit  : 0/0
  3669 ;;		Unchanged: 0/0
  3670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3672 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3674 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3675 ;;Total ram usage:        1 bytes
  3676 ;; Hardware stack levels used:    1
  3677 ;; Hardware stack levels required when called:    4
  3678 ;; This function calls:
  3679 ;;		_pulse_e
  3680 ;; This function is called by:
  3681 ;;		_send_byte
  3682 ;;		_initLCD
  3683 ;; This function uses a non-reentrant model
  3684 ;;
  3685                           
  3686                           	psect	text18
  3687  002886                     __ptext18:
  3688                           	opt callstack 0
  3689  002886                     _send_nibble:
  3690                           	opt callstack 19
  3691                           
  3692                           ;incstack = 0
  3693                           ;send_nibble@data stored from wreg
  3694  002886  0100               	movlb	0	; () banked
  3695  002888  6F81               	movwf	send_nibble@data& (0+255),b
  3696                           
  3697                           ;lcd.c: 46:     LATD = (unsigned char)(LATD & 0x0F);
  3698  00288A  508C               	movf	3980,w,c	;volatile
  3699  00288C  0B0F               	andlw	15
  3700  00288E  6E8C               	movwf	3980,c	;volatile
  3701                           
  3702                           ;lcd.c: 47:     LATD = (unsigned char)((data << 4) | LATD);
  3703  002890  0100               	movlb	0	; () banked
  3704  002892  3981               	swapf	send_nibble@data& (0+255),w,b
  3705  002894  0BF0               	andlw	240
  3706  002896  108C               	iorwf	3980,w,c	;volatile
  3707  002898  6E8C               	movwf	3980,c	;volatile
  3708                           
  3709                           ; BSR set to: 0
  3710                           ;lcd.c: 48:     pulse_e();
  3711  00289A  ECF2  F013         	call	_pulse_e	;wreg free
  3712  00289E  0012               	return		;funcret
  3713  0028A0                     __end_of_send_nibble:
  3714                           	opt callstack 0
  3715                           
  3716 ;; *************** function _pulse_e *****************
  3717 ;; Defined at:
  3718 ;;		line 28 in file "lcd.c"
  3719 ;; Parameters:    Size  Location     Type
  3720 ;;		None
  3721 ;; Auto vars:     Size  Location     Type
  3722 ;;  interruptSta    1    0[BANK0 ] unsigned char 
  3723 ;; Return value:  Size  Location     Type
  3724 ;;                  1    wreg      void 
  3725 ;; Registers used:
  3726 ;;		wreg
  3727 ;; Tracked objects:
  3728 ;;		On entry : 0/0
  3729 ;;		On exit  : 0/0
  3730 ;;		Unchanged: 0/0
  3731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3733 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3735 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3736 ;;Total ram usage:        1 bytes
  3737 ;; Hardware stack levels used:    1
  3738 ;; Hardware stack levels required when called:    3
  3739 ;; This function calls:
  3740 ;;		Nothing
  3741 ;; This function is called by:
  3742 ;;		_send_nibble
  3743 ;; This function uses a non-reentrant model
  3744 ;;
  3745                           
  3746                           	psect	text19
  3747  0027E4                     __ptext19:
  3748                           	opt callstack 0
  3749  0027E4                     _pulse_e:
  3750                           	opt callstack 19
  3751                           
  3752                           ;lcd.c: 29:     unsigned char interruptState = INTCONbits.GIE;
  3753                           
  3754                           ;incstack = 0
  3755  0027E4  0E00               	movlw	0
  3756  0027E6  BEF2               	btfsc	4082,7,c	;volatile
  3757  0027E8  0E01               	movlw	1
  3758  0027EA  0100               	movlb	0	; () banked
  3759  0027EC  6F80               	movwf	pulse_e@interruptState& (0+255),b
  3760                           
  3761                           ; BSR set to: 0
  3762                           ;lcd.c: 30:     (INTCONbits.GIE = 0);
  3763  0027EE  9EF2               	bcf	4082,7,c	;volatile
  3764                           
  3765                           ; BSR set to: 0
  3766                           ;lcd.c: 31:     LATDbits.LATD3 = 1;
  3767  0027F0  868C               	bsf	3980,3,c	;volatile
  3768                           
  3769                           ;lcd.c: 34:     _delay((unsigned long)((25)*(10000000/4000000.0)));
  3770  0027F2  0E14               	movlw	20
  3771  0027F4                     u4567:
  3772  0027F4  2EE8               	decfsz	wreg,f,c
  3773  0027F6  D7FE               	bra	u4567
  3774  0027F8  D000               	nop2	
  3775                           
  3776                           ;lcd.c: 35:     LATDbits.LATD3 = 0;
  3777  0027FA  968C               	bcf	3980,3,c	;volatile
  3778                           
  3779                           ;lcd.c: 36:     _delay((unsigned long)((100)*(10000000/4000000.0)));
  3780  0027FC  0E53               	movlw	83
  3781  0027FE                     u4577:
  3782  0027FE  2EE8               	decfsz	wreg,f,c
  3783  002800  D7FE               	bra	u4577
  3784  002802  F000               	nop	
  3785                           
  3786                           ;lcd.c: 37:     INTCONbits.GIE = interruptState;
  3787  002804  0100               	movlb	0	; () banked
  3788  002806  B180               	btfsc	pulse_e@interruptState& (0+255),0,b
  3789  002808  D002               	bra	u3555
  3790  00280A  9EF2               	bcf	4082,7,c	;volatile
  3791  00280C  D001               	bra	u3556
  3792  00280E                     u3555:
  3793  00280E  8EF2               	bsf	4082,7,c	;volatile
  3794  002810                     u3556:
  3795  002810  0012               	return		;funcret
  3796  002812                     __end_of_pulse_e:
  3797                           	opt callstack 0
  3798                           
  3799 ;; *************** function ___wmul *****************
  3800 ;; Defined at:
  3801 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  3802 ;; Parameters:    Size  Location     Type
  3803 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3804 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3805 ;; Auto vars:     Size  Location     Type
  3806 ;;  product         2    4[BANK0 ] unsigned int 
  3807 ;; Return value:  Size  Location     Type
  3808 ;;                  2    0[BANK0 ] unsigned int 
  3809 ;; Registers used:
  3810 ;;		wreg, status,2, status,0, prodl, prodh
  3811 ;; Tracked objects:
  3812 ;;		On entry : 0/0
  3813 ;;		On exit  : 0/0
  3814 ;;		Unchanged: 0/0
  3815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3816 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3817 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3819 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3820 ;;Total ram usage:        6 bytes
  3821 ;; Hardware stack levels used:    1
  3822 ;; Hardware stack levels required when called:    3
  3823 ;; This function calls:
  3824 ;;		Nothing
  3825 ;; This function is called by:
  3826 ;;		_main
  3827 ;; This function uses a non-reentrant model
  3828 ;;
  3829                           
  3830                           	psect	text20
  3831  00283A                     __ptext20:
  3832                           	opt callstack 0
  3833  00283A                     ___wmul:
  3834                           	opt callstack 27
  3835                           
  3836                           ;incstack = 0
  3837  00283A  0100               	movlb	0	; () banked
  3838  00283C  5180               	movf	___wmul@multiplier& (0+255),w,b
  3839  00283E  0382               	mulwf	___wmul@multiplicand& (0+255),b
  3840  002840  CFF3 F084          	movff	prodl,___wmul@product
  3841  002844  CFF4 F085          	movff	prodh,___wmul@product+1
  3842  002848  5180               	movf	___wmul@multiplier& (0+255),w,b
  3843  00284A  0383               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  3844  00284C  50F3               	movf	prodl,w,c
  3845  00284E  2785               	addwf	(___wmul@product+1)& (0+255),f,b
  3846  002850  5181               	movf	(___wmul@multiplier+1)& (0+255),w,b
  3847  002852  0382               	mulwf	___wmul@multiplicand& (0+255),b
  3848  002854  50F3               	movf	prodl,w,c
  3849  002856  2785               	addwf	(___wmul@product+1)& (0+255),f,b
  3850                           
  3851                           ; BSR set to: 0
  3852  002858  C084  F080         	movff	___wmul@product,?___wmul
  3853  00285C  C085  F081         	movff	___wmul@product+1,?___wmul+1
  3854                           
  3855                           ; BSR set to: 0
  3856  002860  0012               	return		;funcret
  3857  002862                     __end_of___wmul:
  3858                           	opt callstack 0
  3859                           
  3860 ;; *************** function _ISR *****************
  3861 ;; Defined at:
  3862 ;;		line 39 in file "main.c"
  3863 ;; Parameters:    Size  Location     Type
  3864 ;;		None
  3865 ;; Auto vars:     Size  Location     Type
  3866 ;;		None
  3867 ;; Return value:  Size  Location     Type
  3868 ;;                  1    wreg      void 
  3869 ;; Registers used:
  3870 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3871 ;; Tracked objects:
  3872 ;;		On entry : 0/0
  3873 ;;		On exit  : 0/0
  3874 ;;		Unchanged: 0/0
  3875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3878 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3879 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3880 ;;Total ram usage:        2 bytes
  3881 ;; Hardware stack levels used:    1
  3882 ;; Hardware stack levels required when called:    2
  3883 ;; This function calls:
  3884 ;;		_echo
  3885 ;; This function is called by:
  3886 ;;		Interrupt level 2
  3887 ;; This function uses a non-reentrant model
  3888 ;;
  3889                           
  3890                           	psect	intcode
  3891  000008                     __pintcode:
  3892                           	opt callstack 0
  3893  000008                     _ISR:
  3894                           	opt callstack 16
  3895                           
  3896                           ; BSR set to: 0
  3897                           ;incstack = 0
  3898  000008  8251               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3899  00000A  ED31  F014         	call	int_func,f	;refresh shadow registers
  3900                           
  3901                           	psect	intcode_body
  3902  002862                     __pintcode_body:
  3903                           	opt callstack 16
  3904  002862                     int_func:
  3905                           	opt callstack 16
  3906  002862  0006               	pop		; remove dummy address from shadow register refresh
  3907  002864  CFD9 F036          	movff	fsr2l,??_ISR
  3908  002868  CFDA F037          	movff	fsr2h,??_ISR+1
  3909                           
  3910                           ;main.c: 40:  if(RBIF == 1){
  3911  00286C  A0F2               	btfss	4082,0,c	;volatile
  3912  00286E  D005               	goto	i2l164
  3913                           
  3914                           ;main.c: 41:   RBIE = 0;
  3915  002870  96F2               	bcf	4082,3,c	;volatile
  3916                           
  3917                           ;main.c: 44:         echo();
  3918  002872  EC44  F008         	call	_echo	;wreg free
  3919                           
  3920                           ;main.c: 46:         RBIF = 0;
  3921  002876  90F2               	bcf	4082,0,c	;volatile
  3922                           
  3923                           ;main.c: 47:         RBIE = 1;
  3924  002878  86F2               	bsf	4082,3,c	;volatile
  3925  00287A                     i2l164:
  3926  00287A  C037  FFDA         	movff	??_ISR+1,fsr2h
  3927  00287E  C036  FFD9         	movff	??_ISR,fsr2l
  3928  002882  9251               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3929  002884  0011               	retfie		f
  3930  002886                     __end_of_ISR:
  3931                           	opt callstack 0
  3932                           
  3933 ;; *************** function _echo *****************
  3934 ;; Defined at:
  3935 ;;		line 53 in file "main.c"
  3936 ;; Parameters:    Size  Location     Type
  3937 ;;		None
  3938 ;; Auto vars:     Size  Location     Type
  3939 ;;		None
  3940 ;; Return value:  Size  Location     Type
  3941 ;;                  1    wreg      void 
  3942 ;; Registers used:
  3943 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3944 ;; Tracked objects:
  3945 ;;		On entry : 0/0
  3946 ;;		On exit  : 0/0
  3947 ;;		Unchanged: 0/0
  3948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3951 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3952 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3953 ;;Total ram usage:        4 bytes
  3954 ;; Hardware stack levels used:    1
  3955 ;; Hardware stack levels required when called:    1
  3956 ;; This function calls:
  3957 ;;		___awdiv
  3958 ;;		___fldiv
  3959 ;;		___fltol
  3960 ;;		___xxtofl
  3961 ;; This function is called by:
  3962 ;;		_ISR
  3963 ;; This function uses a non-reentrant model
  3964 ;;
  3965                           
  3966                           	psect	text22
  3967  001088                     __ptext22:
  3968                           	opt callstack 0
  3969  001088                     _echo:
  3970                           	opt callstack 16
  3971                           
  3972                           ;main.c: 54:     if (b==1){
  3973                           
  3974                           ;incstack = 0
  3975  001088  044E               	decf	_b,w,c
  3976  00108A  104F               	iorwf	_b+1,w,c
  3977  00108C  A4D8               	btfss	status,2,c
  3978  00108E  D0A2               	goto	i2l2689
  3979                           
  3980                           ;main.c: 55:         if (RB7 == 1){
  3981  001090  BE81               	btfsc	3969,7,c	;volatile
  3982                           
  3983                           ;main.c: 56:             TMR1ON = 1;
  3984  001092  80CD               	bsf	4045,0,c	;volatile
  3985                           
  3986                           ;main.c: 58:         if (RB7 == 0){
  3987                           
  3988                           ;main.c: 57:         }
  3989  001094  BE81               	btfsc	3969,7,c	;volatile
  3990  001096  D037               	goto	i2l2665
  3991                           
  3992                           ;main.c: 59:             TMR1ON = 0;
  3993  001098  90CD               	bcf	4045,0,c	;volatile
  3994                           
  3995                           ;main.c: 60:             a[0] = (TMR1L | (TMR1H<<8))/58.82;
  3996  00109A  0EAE               	movlw	174
  3997  00109C  6E13               	movwf	___fldiv@a,c
  3998  00109E  0E47               	movlw	71
  3999  0010A0  6E14               	movwf	___fldiv@a+1,c
  4000  0010A2  0E6B               	movlw	107
  4001  0010A4  6E15               	movwf	___fldiv@a+2,c
  4002  0010A6  0E42               	movlw	66
  4003  0010A8  6E16               	movwf	___fldiv@a+3,c
  4004  0010AA  50CF               	movf	4047,w,c	;volatile
  4005  0010AC  6E33               	movwf	(??_echo+1)& (0+255),c
  4006  0010AE  6A32               	clrf	??_echo& (0+255),c
  4007  0010B0  50CE               	movf	4046,w,c	;volatile
  4008  0010B2  6E34               	movwf	(??_echo+2)& (0+255),c
  4009  0010B4  6A35               	clrf	(??_echo+3)& (0+255),c
  4010  0010B6  5032               	movf	??_echo,w,c
  4011  0010B8  1234               	iorwf	??_echo+2,f,c
  4012  0010BA  5033               	movf	??_echo+1,w,c
  4013  0010BC  1235               	iorwf	??_echo+3,f,c
  4014  0010BE  C034  F001         	movff	??_echo+2,___xxtofl@val
  4015  0010C2  C035  F002         	movff	??_echo+3,___xxtofl@val+1
  4016  0010C6  0E00               	movlw	0
  4017  0010C8  BE02               	btfsc	___xxtofl@val+1,7,c
  4018  0010CA  0EFF               	movlw	-1
  4019  0010CC  6E03               	movwf	___xxtofl@val+2,c
  4020  0010CE  6E04               	movwf	___xxtofl@val+3,c
  4021  0010D0  0E01               	movlw	1
  4022  0010D2  ECAD  F00F         	call	___xxtofl
  4023  0010D6  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4024  0010DA  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4025  0010DE  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4026  0010E2  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4027  0010E6  ECE6  F00A         	call	___fldiv	;wreg free
  4028  0010EA  C00F  F028         	movff	?___fldiv,___fltol@f1
  4029  0010EE  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
  4030  0010F2  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
  4031  0010F6  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
  4032  0010FA  EC00  F012         	call	___fltol	;wreg free
  4033  0010FE  C028  F040         	movff	?___fltol,_a
  4034  001102  C029  F041         	movff	?___fltol+1,_a+1
  4035  001106                     i2l2665:
  4036                           
  4037                           ;main.c: 64:         if (a[0]>=2 && a[0]<=200){
  4038  001106  BE41               	btfsc	_a+1,7,c
  4039  001108  D065               	goto	i2l2689
  4040  00110A  5041               	movf	_a+1,w,c
  4041  00110C  E104               	bnz	i2u274_40
  4042  00110E  0E02               	movlw	2
  4043  001110  5C40               	subwf	_a,w,c
  4044  001112  A0D8               	btfss	status,0,c
  4045  001114  D05F               	goto	i2l2689
  4046  001116                     i2u274_40:
  4047  001116  BE41               	btfsc	_a+1,7,c
  4048  001118  D006               	goto	i2u275_40
  4049  00111A  5041               	movf	_a+1,w,c
  4050  00111C  E15B               	bnz	i2l2689
  4051  00111E  0EC9               	movlw	201
  4052  001120  5C40               	subwf	_a,w,c
  4053  001122  B0D8               	btfsc	status,0,c
  4054  001124  D057               	goto	i2l2689
  4055  001126                     i2u275_40:
  4056                           
  4057                           ;main.c: 65:             if ((~sumf[0])&&(dist_final[0][0]!=0)&&(dist_final[0][1]!=0)&&(
      +                          dist_final[0][2]!=0)){
  4058  001126  0448               	decf	_sumf,w,c
  4059  001128  B4D8               	btfsc	status,2,c
  4060  00112A  D01B               	goto	i2l2681
  4061  00112C  0101               	movlb	1	; () banked
  4062  00112E  5100               	movf	_dist_final& (0+255),w,b
  4063  001130  1101               	iorwf	(_dist_final+1)& (0+255),w,b
  4064  001132  B4D8               	btfsc	status,2,c
  4065  001134  D016               	goto	i2l2681
  4066                           
  4067                           ; BSR set to: 1
  4068  001136  5102               	movf	(_dist_final+2)& (0+255),w,b
  4069  001138  1103               	iorwf	(_dist_final+3)& (0+255),w,b
  4070  00113A  B4D8               	btfsc	status,2,c
  4071  00113C  D012               	goto	i2l2681
  4072                           
  4073                           ; BSR set to: 1
  4074  00113E  5104               	movf	(_dist_final+4)& (0+255),w,b
  4075  001140  1105               	iorwf	(_dist_final+5)& (0+255),w,b
  4076  001142  B4D8               	btfsc	status,2,c
  4077  001144  D00E               	goto	i2l2681
  4078                           
  4079                           ; BSR set to: 1
  4080                           ;main.c: 66:                 sum[0] = (dist_final[0][0]+dist_final[0][1]+dist_final[0][2
      +                          ]);
  4081  001146  5104               	movf	(_dist_final+4)& (0+255),w,b
  4082  001148  2502               	addwf	(_dist_final+2)& (0+255),w,b
  4083  00114A  6E32               	movwf	??_echo& (0+255),c
  4084  00114C  5105               	movf	(_dist_final+5)& (0+255),w,b
  4085  00114E  2103               	addwfc	(_dist_final+3)& (0+255),w,b
  4086  001150  6E33               	movwf	(??_echo+1)& (0+255),c
  4087  001152  5100               	movf	_dist_final& (0+255),w,b
  4088  001154  2432               	addwf	??_echo,w,c
  4089  001156  6E38               	movwf	_sum,c
  4090  001158  5101               	movf	(_dist_final+1)& (0+255),w,b
  4091  00115A  2033               	addwfc	??_echo+1,w,c
  4092  00115C  6E39               	movwf	_sum+1,c
  4093                           
  4094                           ; BSR set to: 1
  4095                           ;main.c: 67:                 sumf[0] = 1;
  4096  00115E  0E01               	movlw	1
  4097  001160  6E48               	movwf	_sumf,c
  4098  001162                     i2l2681:
  4099                           
  4100                           ;main.c: 69:             if (sumf[0]){
  4101  001162  5048               	movf	_sumf,w,c
  4102  001164  B4D8               	btfsc	status,2,c
  4103  001166  D029               	goto	i2l2687
  4104                           
  4105                           ;main.c: 70:                 sum[0] = sum[0] - dist_final[0][meas] + a[0];
  4106  001168  90D8               	bcf	status,0,c
  4107  00116A  344C               	rlcf	_meas,w,c	;volatile
  4108  00116C  6ED9               	movwf	fsr2l,c
  4109  00116E  344D               	rlcf	_meas+1,w,c	;volatile
  4110  001170  6EDA               	movwf	fsr2h,c
  4111  001172  0E00               	movlw	low _dist_final
  4112  001174  26D9               	addwf	fsr2l,f,c
  4113  001176  0E01               	movlw	high _dist_final
  4114  001178  22DA               	addwfc	fsr2h,f,c
  4115  00117A  CFDE F032          	movff	postinc2,??_echo
  4116  00117E  CFDD F033          	movff	postdec2,??_echo+1
  4117  001182  C038  F034         	movff	_sum,??_echo+2
  4118  001186  C039  F035         	movff	_sum+1,??_echo+3
  4119  00118A  5032               	movf	??_echo,w,c
  4120  00118C  5E34               	subwf	??_echo+2,f,c
  4121  00118E  5033               	movf	??_echo+1,w,c
  4122  001190  5A35               	subwfb	??_echo+3,f,c
  4123  001192  5040               	movf	_a,w,c
  4124  001194  2434               	addwf	??_echo+2,w,c
  4125  001196  6E38               	movwf	_sum,c
  4126  001198  5041               	movf	_a+1,w,c
  4127  00119A  2035               	addwfc	??_echo+3,w,c
  4128  00119C  6E39               	movwf	_sum+1,c
  4129                           
  4130                           ;main.c: 71:                 dist_final[0][5] = (sum[0]/5);
  4131  00119E  C038  F001         	movff	_sum,___awdiv@dividend
  4132  0011A2  C039  F002         	movff	_sum+1,___awdiv@dividend+1
  4133  0011A6  0E00               	movlw	0
  4134  0011A8  6E04               	movwf	___awdiv@divisor+1,c
  4135  0011AA  0E05               	movlw	5
  4136  0011AC  6E03               	movwf	___awdiv@divisor,c
  4137  0011AE  ECAC  F012         	call	___awdiv	;wreg free
  4138  0011B2  C001  F10A         	movff	?___awdiv,_dist_final+10
  4139  0011B6  C002  F10B         	movff	?___awdiv+1,_dist_final+11
  4140  0011BA                     i2l2687:
  4141                           
  4142                           ;main.c: 73:             dist_final[0][meas] = a[0];
  4143  0011BA  90D8               	bcf	status,0,c
  4144  0011BC  344C               	rlcf	_meas,w,c	;volatile
  4145  0011BE  6ED9               	movwf	fsr2l,c
  4146  0011C0  344D               	rlcf	_meas+1,w,c	;volatile
  4147  0011C2  6EDA               	movwf	fsr2h,c
  4148  0011C4  0E00               	movlw	low _dist_final
  4149  0011C6  26D9               	addwf	fsr2l,f,c
  4150  0011C8  0E01               	movlw	high _dist_final
  4151  0011CA  22DA               	addwfc	fsr2h,f,c
  4152  0011CC  C040  FFDE         	movff	_a,postinc2
  4153  0011D0  C041  FFDD         	movff	_a+1,postdec2
  4154  0011D4                     i2l2689:
  4155                           
  4156                           ;main.c: 76:     if (b==2){
  4157  0011D4  0E02               	movlw	2
  4158  0011D6  184E               	xorwf	_b,w,c
  4159  0011D8  104F               	iorwf	_b+1,w,c
  4160  0011DA  A4D8               	btfss	status,2,c
  4161  0011DC  D0A4               	goto	i2l2723
  4162                           
  4163                           ;main.c: 77:         if (RB6 == 1){
  4164  0011DE  BC81               	btfsc	3969,6,c	;volatile
  4165                           
  4166                           ;main.c: 78:             TMR1ON = 1;
  4167  0011E0  80CD               	bsf	4045,0,c	;volatile
  4168                           
  4169                           ;main.c: 80:         if (RB6 == 0){
  4170                           
  4171                           ;main.c: 79:         }
  4172  0011E2  BC81               	btfsc	3969,6,c	;volatile
  4173  0011E4  D037               	goto	i2l2699
  4174                           
  4175                           ;main.c: 81:             TMR1ON = 0;
  4176  0011E6  90CD               	bcf	4045,0,c	;volatile
  4177                           
  4178                           ;main.c: 82:             a[1] = (TMR1L | (TMR1H<<8))/58.82;
  4179  0011E8  0EAE               	movlw	174
  4180  0011EA  6E13               	movwf	___fldiv@a,c
  4181  0011EC  0E47               	movlw	71
  4182  0011EE  6E14               	movwf	___fldiv@a+1,c
  4183  0011F0  0E6B               	movlw	107
  4184  0011F2  6E15               	movwf	___fldiv@a+2,c
  4185  0011F4  0E42               	movlw	66
  4186  0011F6  6E16               	movwf	___fldiv@a+3,c
  4187  0011F8  50CF               	movf	4047,w,c	;volatile
  4188  0011FA  6E33               	movwf	(??_echo+1)& (0+255),c
  4189  0011FC  6A32               	clrf	??_echo& (0+255),c
  4190  0011FE  50CE               	movf	4046,w,c	;volatile
  4191  001200  6E34               	movwf	(??_echo+2)& (0+255),c
  4192  001202  6A35               	clrf	(??_echo+3)& (0+255),c
  4193  001204  5032               	movf	??_echo,w,c
  4194  001206  1234               	iorwf	??_echo+2,f,c
  4195  001208  5033               	movf	??_echo+1,w,c
  4196  00120A  1235               	iorwf	??_echo+3,f,c
  4197  00120C  C034  F001         	movff	??_echo+2,___xxtofl@val
  4198  001210  C035  F002         	movff	??_echo+3,___xxtofl@val+1
  4199  001214  0E00               	movlw	0
  4200  001216  BE02               	btfsc	___xxtofl@val+1,7,c
  4201  001218  0EFF               	movlw	-1
  4202  00121A  6E03               	movwf	___xxtofl@val+2,c
  4203  00121C  6E04               	movwf	___xxtofl@val+3,c
  4204  00121E  0E01               	movlw	1
  4205  001220  ECAD  F00F         	call	___xxtofl
  4206  001224  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4207  001228  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4208  00122C  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4209  001230  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4210  001234  ECE6  F00A         	call	___fldiv	;wreg free
  4211  001238  C00F  F028         	movff	?___fldiv,___fltol@f1
  4212  00123C  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
  4213  001240  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
  4214  001244  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
  4215  001248  EC00  F012         	call	___fltol	;wreg free
  4216  00124C  C028  F042         	movff	?___fltol,_a+2
  4217  001250  C029  F043         	movff	?___fltol+1,_a+3
  4218  001254                     i2l2699:
  4219                           
  4220                           ;main.c: 85:                 if (a[1]>=2 && a[1]<=200){
  4221  001254  BE43               	btfsc	_a+3,7,c
  4222  001256  D067               	goto	i2l2723
  4223  001258  5043               	movf	_a+3,w,c
  4224  00125A  E104               	bnz	i2u284_40
  4225  00125C  0E02               	movlw	2
  4226  00125E  5C42               	subwf	_a+2,w,c
  4227  001260  A0D8               	btfss	status,0,c
  4228  001262  D061               	goto	i2l2723
  4229  001264                     i2u284_40:
  4230  001264  BE43               	btfsc	_a+3,7,c
  4231  001266  D006               	goto	i2u285_40
  4232  001268  5043               	movf	_a+3,w,c
  4233  00126A  E15D               	bnz	i2l2723
  4234  00126C  0EC9               	movlw	201
  4235  00126E  5C42               	subwf	_a+2,w,c
  4236  001270  B0D8               	btfsc	status,0,c
  4237  001272  D059               	goto	i2l2723
  4238  001274                     i2u285_40:
  4239                           
  4240                           ;main.c: 87:                 if ((~sumf[1])&&(dist_final[1][0]!=0)&&(dist_final[1][1]!=0
      +                          )&&(dist_final[1][2]!=0)){
  4241  001274  0449               	decf	_sumf+1,w,c
  4242  001276  B4D8               	btfsc	status,2,c
  4243  001278  D01B               	goto	i2l2715
  4244  00127A  0101               	movlb	1	; () banked
  4245  00127C  510C               	movf	(_dist_final+12)& (0+255),w,b
  4246  00127E  110D               	iorwf	(_dist_final+13)& (0+255),w,b
  4247  001280  B4D8               	btfsc	status,2,c
  4248  001282  D016               	goto	i2l2715
  4249                           
  4250                           ; BSR set to: 1
  4251  001284  510E               	movf	(_dist_final+14)& (0+255),w,b
  4252  001286  110F               	iorwf	(_dist_final+15)& (0+255),w,b
  4253  001288  B4D8               	btfsc	status,2,c
  4254  00128A  D012               	goto	i2l2715
  4255                           
  4256                           ; BSR set to: 1
  4257  00128C  5110               	movf	(_dist_final+16)& (0+255),w,b
  4258  00128E  1111               	iorwf	(_dist_final+17)& (0+255),w,b
  4259  001290  B4D8               	btfsc	status,2,c
  4260  001292  D00E               	goto	i2l2715
  4261                           
  4262                           ; BSR set to: 1
  4263                           ;main.c: 88:             sum[1] = (dist_final[1][0]+dist_final[1][1]+dist_final[1][2]);
  4264  001294  510E               	movf	(_dist_final+14)& (0+255),w,b
  4265  001296  250C               	addwf	(_dist_final+12)& (0+255),w,b
  4266  001298  6E32               	movwf	??_echo& (0+255),c
  4267  00129A  510F               	movf	(_dist_final+15)& (0+255),w,b
  4268  00129C  210D               	addwfc	(_dist_final+13)& (0+255),w,b
  4269  00129E  6E33               	movwf	(??_echo+1)& (0+255),c
  4270  0012A0  5110               	movf	(_dist_final+16)& (0+255),w,b
  4271  0012A2  2432               	addwf	??_echo,w,c
  4272  0012A4  6E3A               	movwf	_sum+2,c
  4273  0012A6  5111               	movf	(_dist_final+17)& (0+255),w,b
  4274  0012A8  2033               	addwfc	??_echo+1,w,c
  4275  0012AA  6E3B               	movwf	_sum+3,c
  4276                           
  4277                           ; BSR set to: 1
  4278                           ;main.c: 89:             sumf[1] = 1;
  4279  0012AC  0E01               	movlw	1
  4280  0012AE  6E49               	movwf	_sumf+1,c
  4281  0012B0                     i2l2715:
  4282                           
  4283                           ;main.c: 91:         if (sumf[1]){
  4284  0012B0  5049               	movf	_sumf+1,w,c
  4285  0012B2  B4D8               	btfsc	status,2,c
  4286  0012B4  D02B               	goto	i2l2721
  4287                           
  4288                           ;main.c: 92:             sum[1] = sum[1] - dist_final[1][meas] + a[1];
  4289  0012B6  90D8               	bcf	status,0,c
  4290  0012B8  344C               	rlcf	_meas,w,c	;volatile
  4291  0012BA  6ED9               	movwf	fsr2l,c
  4292  0012BC  344D               	rlcf	_meas+1,w,c	;volatile
  4293  0012BE  6EDA               	movwf	fsr2h,c
  4294  0012C0  0E0C               	movlw	low (_dist_final+12)
  4295  0012C2  26D9               	addwf	fsr2l,f,c
  4296  0012C4  0E01               	movlw	high (_dist_final+12)
  4297  0012C6  22DA               	addwfc	fsr2h,f,c
  4298  0012C8  CFDE F032          	movff	postinc2,??_echo
  4299  0012CC  CFDD F033          	movff	postdec2,??_echo+1
  4300  0012D0  EE20  F03A         	lfsr	2,_sum+2
  4301  0012D4  CFDE F034          	movff	postinc2,??_echo+2
  4302  0012D8  CFDD F035          	movff	postdec2,??_echo+3
  4303  0012DC  5032               	movf	??_echo,w,c
  4304  0012DE  5E34               	subwf	??_echo+2,f,c
  4305  0012E0  5033               	movf	??_echo+1,w,c
  4306  0012E2  5A35               	subwfb	??_echo+3,f,c
  4307  0012E4  5042               	movf	_a+2,w,c
  4308  0012E6  2434               	addwf	??_echo+2,w,c
  4309  0012E8  6E3A               	movwf	_sum+2,c
  4310  0012EA  5043               	movf	_a+3,w,c
  4311  0012EC  2035               	addwfc	??_echo+3,w,c
  4312  0012EE  6E3B               	movwf	_sum+3,c
  4313                           
  4314                           ;main.c: 93:             dist_final[1][5] = (sum[1]/5);
  4315  0012F0  C03A  F001         	movff	_sum+2,___awdiv@dividend
  4316  0012F4  C03B  F002         	movff	_sum+3,___awdiv@dividend+1
  4317  0012F8  0E00               	movlw	0
  4318  0012FA  6E04               	movwf	___awdiv@divisor+1,c
  4319  0012FC  0E05               	movlw	5
  4320  0012FE  6E03               	movwf	___awdiv@divisor,c
  4321  001300  ECAC  F012         	call	___awdiv	;wreg free
  4322  001304  C001  F116         	movff	?___awdiv,_dist_final+22
  4323  001308  C002  F117         	movff	?___awdiv+1,_dist_final+23
  4324  00130C                     i2l2721:
  4325                           
  4326                           ;main.c: 95:         dist_final[1][meas] = a[1];
  4327  00130C  90D8               	bcf	status,0,c
  4328  00130E  344C               	rlcf	_meas,w,c	;volatile
  4329  001310  6ED9               	movwf	fsr2l,c
  4330  001312  344D               	rlcf	_meas+1,w,c	;volatile
  4331  001314  6EDA               	movwf	fsr2h,c
  4332  001316  0E0C               	movlw	low (_dist_final+12)
  4333  001318  26D9               	addwf	fsr2l,f,c
  4334  00131A  0E01               	movlw	high (_dist_final+12)
  4335  00131C  22DA               	addwfc	fsr2h,f,c
  4336  00131E  C042  FFDE         	movff	_a+2,postinc2
  4337  001322  C043  FFDD         	movff	_a+3,postdec2
  4338  001326                     i2l2723:
  4339                           
  4340                           ;main.c: 98:     if (b==3){
  4341  001326  0E03               	movlw	3
  4342  001328  184E               	xorwf	_b,w,c
  4343  00132A  104F               	iorwf	_b+1,w,c
  4344  00132C  A4D8               	btfss	status,2,c
  4345  00132E  D0A4               	goto	i2l2757
  4346                           
  4347                           ;main.c: 99:         if (RB5 == 1){
  4348  001330  BA81               	btfsc	3969,5,c	;volatile
  4349                           
  4350                           ;main.c: 100:             TMR1ON = 1;
  4351  001332  80CD               	bsf	4045,0,c	;volatile
  4352                           
  4353                           ;main.c: 102:         if (RB5 == 0){
  4354                           
  4355                           ;main.c: 101:         }
  4356  001334  BA81               	btfsc	3969,5,c	;volatile
  4357  001336  D037               	goto	i2l2733
  4358                           
  4359                           ;main.c: 103:             TMR1ON = 0;
  4360  001338  90CD               	bcf	4045,0,c	;volatile
  4361                           
  4362                           ;main.c: 104:             a[2] = (TMR1L | (TMR1H<<8))/58.82;
  4363  00133A  0EAE               	movlw	174
  4364  00133C  6E13               	movwf	___fldiv@a,c
  4365  00133E  0E47               	movlw	71
  4366  001340  6E14               	movwf	___fldiv@a+1,c
  4367  001342  0E6B               	movlw	107
  4368  001344  6E15               	movwf	___fldiv@a+2,c
  4369  001346  0E42               	movlw	66
  4370  001348  6E16               	movwf	___fldiv@a+3,c
  4371  00134A  50CF               	movf	4047,w,c	;volatile
  4372  00134C  6E33               	movwf	(??_echo+1)& (0+255),c
  4373  00134E  6A32               	clrf	??_echo& (0+255),c
  4374  001350  50CE               	movf	4046,w,c	;volatile
  4375  001352  6E34               	movwf	(??_echo+2)& (0+255),c
  4376  001354  6A35               	clrf	(??_echo+3)& (0+255),c
  4377  001356  5032               	movf	??_echo,w,c
  4378  001358  1234               	iorwf	??_echo+2,f,c
  4379  00135A  5033               	movf	??_echo+1,w,c
  4380  00135C  1235               	iorwf	??_echo+3,f,c
  4381  00135E  C034  F001         	movff	??_echo+2,___xxtofl@val
  4382  001362  C035  F002         	movff	??_echo+3,___xxtofl@val+1
  4383  001366  0E00               	movlw	0
  4384  001368  BE02               	btfsc	___xxtofl@val+1,7,c
  4385  00136A  0EFF               	movlw	-1
  4386  00136C  6E03               	movwf	___xxtofl@val+2,c
  4387  00136E  6E04               	movwf	___xxtofl@val+3,c
  4388  001370  0E01               	movlw	1
  4389  001372  ECAD  F00F         	call	___xxtofl
  4390  001376  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4391  00137A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4392  00137E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4393  001382  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4394  001386  ECE6  F00A         	call	___fldiv	;wreg free
  4395  00138A  C00F  F028         	movff	?___fldiv,___fltol@f1
  4396  00138E  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
  4397  001392  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
  4398  001396  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
  4399  00139A  EC00  F012         	call	___fltol	;wreg free
  4400  00139E  C028  F044         	movff	?___fltol,_a+4
  4401  0013A2  C029  F045         	movff	?___fltol+1,_a+5
  4402  0013A6                     i2l2733:
  4403                           
  4404                           ;main.c: 107:                 if (a[2]>=2 && a[2]<=200){
  4405  0013A6  BE45               	btfsc	_a+5,7,c
  4406  0013A8  D067               	goto	i2l2757
  4407  0013AA  5045               	movf	_a+5,w,c
  4408  0013AC  E104               	bnz	i2u294_40
  4409  0013AE  0E02               	movlw	2
  4410  0013B0  5C44               	subwf	_a+4,w,c
  4411  0013B2  A0D8               	btfss	status,0,c
  4412  0013B4  D061               	goto	i2l2757
  4413  0013B6                     i2u294_40:
  4414  0013B6  BE45               	btfsc	_a+5,7,c
  4415  0013B8  D006               	goto	i2u295_40
  4416  0013BA  5045               	movf	_a+5,w,c
  4417  0013BC  E15D               	bnz	i2l2757
  4418  0013BE  0EC9               	movlw	201
  4419  0013C0  5C44               	subwf	_a+4,w,c
  4420  0013C2  B0D8               	btfsc	status,0,c
  4421  0013C4  D059               	goto	i2l2757
  4422  0013C6                     i2u295_40:
  4423                           
  4424                           ;main.c: 109:                 if ((~sumf[2])&&(dist_final[2][0]!=0)&&(dist_final[2][1]!=
      +                          0)&&(dist_final[2][2]!=0)){
  4425  0013C6  044A               	decf	_sumf+2,w,c
  4426  0013C8  B4D8               	btfsc	status,2,c
  4427  0013CA  D01B               	goto	i2l2749
  4428  0013CC  0101               	movlb	1	; () banked
  4429  0013CE  5118               	movf	(_dist_final+24)& (0+255),w,b
  4430  0013D0  1119               	iorwf	(_dist_final+25)& (0+255),w,b
  4431  0013D2  B4D8               	btfsc	status,2,c
  4432  0013D4  D016               	goto	i2l2749
  4433                           
  4434                           ; BSR set to: 1
  4435  0013D6  511A               	movf	(_dist_final+26)& (0+255),w,b
  4436  0013D8  111B               	iorwf	(_dist_final+27)& (0+255),w,b
  4437  0013DA  B4D8               	btfsc	status,2,c
  4438  0013DC  D012               	goto	i2l2749
  4439                           
  4440                           ; BSR set to: 1
  4441  0013DE  511C               	movf	(_dist_final+28)& (0+255),w,b
  4442  0013E0  111D               	iorwf	(_dist_final+29)& (0+255),w,b
  4443  0013E2  B4D8               	btfsc	status,2,c
  4444  0013E4  D00E               	goto	i2l2749
  4445                           
  4446                           ; BSR set to: 1
  4447                           ;main.c: 110:             sum[2] = (dist_final[2][0]+dist_final[2][1]+dist_final[2][2]);
  4448  0013E6  511A               	movf	(_dist_final+26)& (0+255),w,b
  4449  0013E8  2518               	addwf	(_dist_final+24)& (0+255),w,b
  4450  0013EA  6E32               	movwf	??_echo& (0+255),c
  4451  0013EC  511B               	movf	(_dist_final+27)& (0+255),w,b
  4452  0013EE  2119               	addwfc	(_dist_final+25)& (0+255),w,b
  4453  0013F0  6E33               	movwf	(??_echo+1)& (0+255),c
  4454  0013F2  511C               	movf	(_dist_final+28)& (0+255),w,b
  4455  0013F4  2432               	addwf	??_echo,w,c
  4456  0013F6  6E3C               	movwf	_sum+4,c
  4457  0013F8  511D               	movf	(_dist_final+29)& (0+255),w,b
  4458  0013FA  2033               	addwfc	??_echo+1,w,c
  4459  0013FC  6E3D               	movwf	_sum+5,c
  4460                           
  4461                           ; BSR set to: 1
  4462                           ;main.c: 111:             sumf[2] = 1;
  4463  0013FE  0E01               	movlw	1
  4464  001400  6E4A               	movwf	_sumf+2,c
  4465  001402                     i2l2749:
  4466                           
  4467                           ;main.c: 113:         if (sumf[2]){
  4468  001402  504A               	movf	_sumf+2,w,c
  4469  001404  B4D8               	btfsc	status,2,c
  4470  001406  D02B               	goto	i2l2755
  4471                           
  4472                           ;main.c: 114:             sum[2] = sum[2] - dist_final[2][meas] + a[2];
  4473  001408  90D8               	bcf	status,0,c
  4474  00140A  344C               	rlcf	_meas,w,c	;volatile
  4475  00140C  6ED9               	movwf	fsr2l,c
  4476  00140E  344D               	rlcf	_meas+1,w,c	;volatile
  4477  001410  6EDA               	movwf	fsr2h,c
  4478  001412  0E18               	movlw	low (_dist_final+24)
  4479  001414  26D9               	addwf	fsr2l,f,c
  4480  001416  0E01               	movlw	high (_dist_final+24)
  4481  001418  22DA               	addwfc	fsr2h,f,c
  4482  00141A  CFDE F032          	movff	postinc2,??_echo
  4483  00141E  CFDD F033          	movff	postdec2,??_echo+1
  4484  001422  EE20  F03C         	lfsr	2,_sum+4
  4485  001426  CFDE F034          	movff	postinc2,??_echo+2
  4486  00142A  CFDD F035          	movff	postdec2,??_echo+3
  4487  00142E  5032               	movf	??_echo,w,c
  4488  001430  5E34               	subwf	??_echo+2,f,c
  4489  001432  5033               	movf	??_echo+1,w,c
  4490  001434  5A35               	subwfb	??_echo+3,f,c
  4491  001436  5044               	movf	_a+4,w,c
  4492  001438  2434               	addwf	??_echo+2,w,c
  4493  00143A  6E3C               	movwf	_sum+4,c
  4494  00143C  5045               	movf	_a+5,w,c
  4495  00143E  2035               	addwfc	??_echo+3,w,c
  4496  001440  6E3D               	movwf	_sum+5,c
  4497                           
  4498                           ;main.c: 115:             dist_final[2][5] = (sum[2]/5);
  4499  001442  C03C  F001         	movff	_sum+4,___awdiv@dividend
  4500  001446  C03D  F002         	movff	_sum+5,___awdiv@dividend+1
  4501  00144A  0E00               	movlw	0
  4502  00144C  6E04               	movwf	___awdiv@divisor+1,c
  4503  00144E  0E05               	movlw	5
  4504  001450  6E03               	movwf	___awdiv@divisor,c
  4505  001452  ECAC  F012         	call	___awdiv	;wreg free
  4506  001456  C001  F122         	movff	?___awdiv,_dist_final+34
  4507  00145A  C002  F123         	movff	?___awdiv+1,_dist_final+35
  4508  00145E                     i2l2755:
  4509                           
  4510                           ;main.c: 117:         dist_final[2][meas] = a[2];
  4511  00145E  90D8               	bcf	status,0,c
  4512  001460  344C               	rlcf	_meas,w,c	;volatile
  4513  001462  6ED9               	movwf	fsr2l,c
  4514  001464  344D               	rlcf	_meas+1,w,c	;volatile
  4515  001466  6EDA               	movwf	fsr2h,c
  4516  001468  0E18               	movlw	low (_dist_final+24)
  4517  00146A  26D9               	addwf	fsr2l,f,c
  4518  00146C  0E01               	movlw	high (_dist_final+24)
  4519  00146E  22DA               	addwfc	fsr2h,f,c
  4520  001470  C044  FFDE         	movff	_a+4,postinc2
  4521  001474  C045  FFDD         	movff	_a+5,postdec2
  4522  001478                     i2l2757:
  4523                           
  4524                           ;main.c: 120:     if (b==4){
  4525  001478  0E04               	movlw	4
  4526  00147A  184E               	xorwf	_b,w,c
  4527  00147C  104F               	iorwf	_b+1,w,c
  4528  00147E  A4D8               	btfss	status,2,c
  4529  001480  0012               	return	
  4530                           
  4531                           ;main.c: 121:         if (RB4 == 1){
  4532  001482  B881               	btfsc	3969,4,c	;volatile
  4533                           
  4534                           ;main.c: 122:             TMR1ON = 1;
  4535  001484  80CD               	bsf	4045,0,c	;volatile
  4536                           
  4537                           ;main.c: 124:         if (RB4 == 0){
  4538                           
  4539                           ;main.c: 123:         }
  4540  001486  B881               	btfsc	3969,4,c	;volatile
  4541  001488  D037               	goto	i2l2767
  4542                           
  4543                           ;main.c: 125:             TMR1ON = 0;
  4544  00148A  90CD               	bcf	4045,0,c	;volatile
  4545                           
  4546                           ;main.c: 126:             a[3] = (TMR1L | (TMR1H<<8))/58.82;
  4547  00148C  0EAE               	movlw	174
  4548  00148E  6E13               	movwf	___fldiv@a,c
  4549  001490  0E47               	movlw	71
  4550  001492  6E14               	movwf	___fldiv@a+1,c
  4551  001494  0E6B               	movlw	107
  4552  001496  6E15               	movwf	___fldiv@a+2,c
  4553  001498  0E42               	movlw	66
  4554  00149A  6E16               	movwf	___fldiv@a+3,c
  4555  00149C  50CF               	movf	4047,w,c	;volatile
  4556  00149E  6E33               	movwf	(??_echo+1)& (0+255),c
  4557  0014A0  6A32               	clrf	??_echo& (0+255),c
  4558  0014A2  50CE               	movf	4046,w,c	;volatile
  4559  0014A4  6E34               	movwf	(??_echo+2)& (0+255),c
  4560  0014A6  6A35               	clrf	(??_echo+3)& (0+255),c
  4561  0014A8  5032               	movf	??_echo,w,c
  4562  0014AA  1234               	iorwf	??_echo+2,f,c
  4563  0014AC  5033               	movf	??_echo+1,w,c
  4564  0014AE  1235               	iorwf	??_echo+3,f,c
  4565  0014B0  C034  F001         	movff	??_echo+2,___xxtofl@val
  4566  0014B4  C035  F002         	movff	??_echo+3,___xxtofl@val+1
  4567  0014B8  0E00               	movlw	0
  4568  0014BA  BE02               	btfsc	___xxtofl@val+1,7,c
  4569  0014BC  0EFF               	movlw	-1
  4570  0014BE  6E03               	movwf	___xxtofl@val+2,c
  4571  0014C0  6E04               	movwf	___xxtofl@val+3,c
  4572  0014C2  0E01               	movlw	1
  4573  0014C4  ECAD  F00F         	call	___xxtofl
  4574  0014C8  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4575  0014CC  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4576  0014D0  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4577  0014D4  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4578  0014D8  ECE6  F00A         	call	___fldiv	;wreg free
  4579  0014DC  C00F  F028         	movff	?___fldiv,___fltol@f1
  4580  0014E0  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
  4581  0014E4  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
  4582  0014E8  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
  4583  0014EC  EC00  F012         	call	___fltol	;wreg free
  4584  0014F0  C028  F046         	movff	?___fltol,_a+6
  4585  0014F4  C029  F047         	movff	?___fltol+1,_a+7
  4586  0014F8                     i2l2767:
  4587                           
  4588                           ;main.c: 129:                 if (a[3]>=2 && a[3]<=200){
  4589  0014F8  BE47               	btfsc	_a+7,7,c
  4590  0014FA  0012               	return	
  4591  0014FC  5047               	movf	_a+7,w,c
  4592  0014FE  E104               	bnz	i2u304_40
  4593  001500  0E02               	movlw	2
  4594  001502  5C46               	subwf	_a+6,w,c
  4595  001504  A0D8               	btfss	status,0,c
  4596  001506  0012               	return	
  4597  001508                     i2u304_40:
  4598  001508  BE47               	btfsc	_a+7,7,c
  4599  00150A  D006               	goto	i2u305_40
  4600  00150C  5047               	movf	_a+7,w,c
  4601  00150E  E15D               	bnz	i2l191
  4602  001510  0EC9               	movlw	201
  4603  001512  5C46               	subwf	_a+6,w,c
  4604  001514  B0D8               	btfsc	status,0,c
  4605  001516  0012               	return	
  4606  001518                     i2u305_40:
  4607                           
  4608                           ;main.c: 131:                 if ((~sumf[3])&&(dist_final[3][0]!=0)&&(dist_final[3][1]!=
      +                          0)&&(dist_final[3][2]!=0)){
  4609  001518  044B               	decf	_sumf+3,w,c
  4610  00151A  B4D8               	btfsc	status,2,c
  4611  00151C  D01B               	goto	i2l2783
  4612  00151E  0101               	movlb	1	; () banked
  4613  001520  5124               	movf	(_dist_final+36)& (0+255),w,b
  4614  001522  1125               	iorwf	(_dist_final+37)& (0+255),w,b
  4615  001524  B4D8               	btfsc	status,2,c
  4616  001526  D016               	goto	i2l2783
  4617                           
  4618                           ; BSR set to: 1
  4619  001528  5126               	movf	(_dist_final+38)& (0+255),w,b
  4620  00152A  1127               	iorwf	(_dist_final+39)& (0+255),w,b
  4621  00152C  B4D8               	btfsc	status,2,c
  4622  00152E  D012               	goto	i2l2783
  4623                           
  4624                           ; BSR set to: 1
  4625  001530  5128               	movf	(_dist_final+40)& (0+255),w,b
  4626  001532  1129               	iorwf	(_dist_final+41)& (0+255),w,b
  4627  001534  B4D8               	btfsc	status,2,c
  4628  001536  D00E               	goto	i2l2783
  4629                           
  4630                           ; BSR set to: 1
  4631                           ;main.c: 132:             sum[3] = (dist_final[3][0]+dist_final[3][1]+dist_final[3][2]);
  4632  001538  5126               	movf	(_dist_final+38)& (0+255),w,b
  4633  00153A  2524               	addwf	(_dist_final+36)& (0+255),w,b
  4634  00153C  6E32               	movwf	??_echo& (0+255),c
  4635  00153E  5127               	movf	(_dist_final+39)& (0+255),w,b
  4636  001540  2125               	addwfc	(_dist_final+37)& (0+255),w,b
  4637  001542  6E33               	movwf	(??_echo+1)& (0+255),c
  4638  001544  5128               	movf	(_dist_final+40)& (0+255),w,b
  4639  001546  2432               	addwf	??_echo,w,c
  4640  001548  6E3E               	movwf	_sum+6,c
  4641  00154A  5129               	movf	(_dist_final+41)& (0+255),w,b
  4642  00154C  2033               	addwfc	??_echo+1,w,c
  4643  00154E  6E3F               	movwf	_sum+7,c
  4644                           
  4645                           ; BSR set to: 1
  4646                           ;main.c: 133:             sumf[3] = 1;
  4647  001550  0E01               	movlw	1
  4648  001552  6E4B               	movwf	_sumf+3,c
  4649  001554                     i2l2783:
  4650                           
  4651                           ;main.c: 135:         if (sumf[3]){
  4652  001554  504B               	movf	_sumf+3,w,c
  4653  001556  B4D8               	btfsc	status,2,c
  4654  001558  D02B               	goto	i2l2789
  4655                           
  4656                           ;main.c: 136:             sum[3] = sum[3] - dist_final[3][meas] + a[3];
  4657  00155A  90D8               	bcf	status,0,c
  4658  00155C  344C               	rlcf	_meas,w,c	;volatile
  4659  00155E  6ED9               	movwf	fsr2l,c
  4660  001560  344D               	rlcf	_meas+1,w,c	;volatile
  4661  001562  6EDA               	movwf	fsr2h,c
  4662  001564  0E24               	movlw	low (_dist_final+36)
  4663  001566  26D9               	addwf	fsr2l,f,c
  4664  001568  0E01               	movlw	high (_dist_final+36)
  4665  00156A  22DA               	addwfc	fsr2h,f,c
  4666  00156C  CFDE F032          	movff	postinc2,??_echo
  4667  001570  CFDD F033          	movff	postdec2,??_echo+1
  4668  001574  EE20  F03E         	lfsr	2,_sum+6
  4669  001578  CFDE F034          	movff	postinc2,??_echo+2
  4670  00157C  CFDD F035          	movff	postdec2,??_echo+3
  4671  001580  5032               	movf	??_echo,w,c
  4672  001582  5E34               	subwf	??_echo+2,f,c
  4673  001584  5033               	movf	??_echo+1,w,c
  4674  001586  5A35               	subwfb	??_echo+3,f,c
  4675  001588  5046               	movf	_a+6,w,c
  4676  00158A  2434               	addwf	??_echo+2,w,c
  4677  00158C  6E3E               	movwf	_sum+6,c
  4678  00158E  5047               	movf	_a+7,w,c
  4679  001590  2035               	addwfc	??_echo+3,w,c
  4680  001592  6E3F               	movwf	_sum+7,c
  4681                           
  4682                           ;main.c: 137:             dist_final[3][5] = (sum[3]/5);
  4683  001594  C03E  F001         	movff	_sum+6,___awdiv@dividend
  4684  001598  C03F  F002         	movff	_sum+7,___awdiv@dividend+1
  4685  00159C  0E00               	movlw	0
  4686  00159E  6E04               	movwf	___awdiv@divisor+1,c
  4687  0015A0  0E05               	movlw	5
  4688  0015A2  6E03               	movwf	___awdiv@divisor,c
  4689  0015A4  ECAC  F012         	call	___awdiv	;wreg free
  4690  0015A8  C001  F12E         	movff	?___awdiv,_dist_final+46
  4691  0015AC  C002  F12F         	movff	?___awdiv+1,_dist_final+47
  4692  0015B0                     i2l2789:
  4693                           
  4694                           ;main.c: 139:         dist_final[3][meas] = a[3];
  4695  0015B0  90D8               	bcf	status,0,c
  4696  0015B2  344C               	rlcf	_meas,w,c	;volatile
  4697  0015B4  6ED9               	movwf	fsr2l,c
  4698  0015B6  344D               	rlcf	_meas+1,w,c	;volatile
  4699  0015B8  6EDA               	movwf	fsr2h,c
  4700  0015BA  0E24               	movlw	low (_dist_final+36)
  4701  0015BC  26D9               	addwf	fsr2l,f,c
  4702  0015BE  0E01               	movlw	high (_dist_final+36)
  4703  0015C0  22DA               	addwfc	fsr2h,f,c
  4704  0015C2  C046  FFDE         	movff	_a+6,postinc2
  4705  0015C6  C047  FFDD         	movff	_a+7,postdec2
  4706  0015CA                     i2l191:
  4707  0015CA  0012               	return		;funcret
  4708  0015CC                     __end_of_echo:
  4709                           	opt callstack 0
  4710                           
  4711 ;; *************** function ___xxtofl *****************
  4712 ;; Defined at:
  4713 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  4714 ;; Parameters:    Size  Location     Type
  4715 ;;  sign            1    wreg     unsigned char 
  4716 ;;  val             4    0[COMRAM] long 
  4717 ;; Auto vars:     Size  Location     Type
  4718 ;;  sign            1    8[COMRAM] unsigned char 
  4719 ;;  arg             4   10[COMRAM] unsigned long 
  4720 ;;  exp             1    9[COMRAM] unsigned char 
  4721 ;; Return value:  Size  Location     Type
  4722 ;;                  4    0[COMRAM] unsigned char 
  4723 ;; Registers used:
  4724 ;;		wreg, status,2, status,0
  4725 ;; Tracked objects:
  4726 ;;		On entry : 0/0
  4727 ;;		On exit  : 0/0
  4728 ;;		Unchanged: 0/0
  4729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4730 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4731 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4732 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4733 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4734 ;;Total ram usage:       14 bytes
  4735 ;; Hardware stack levels used:    1
  4736 ;; This function calls:
  4737 ;;		Nothing
  4738 ;; This function is called by:
  4739 ;;		_echo
  4740 ;; This function uses a non-reentrant model
  4741 ;;
  4742                           
  4743                           	psect	text23
  4744  001F5A                     __ptext23:
  4745                           	opt callstack 0
  4746  001F5A                     ___xxtofl:
  4747                           	opt callstack 16
  4748                           
  4749                           ;incstack = 0
  4750                           ;___xxtofl@sign stored from wreg
  4751  001F5A  6E09               	movwf	___xxtofl@sign,c
  4752  001F5C  5009               	movf	___xxtofl@sign,w,c
  4753  001F5E  A4D8               	btfss	status,2,c
  4754  001F60  AE04               	btfss	___xxtofl@val+3,7,c
  4755  001F62  D01A               	goto	i2l981
  4756  001F64  C001  F005         	movff	___xxtofl@val,??___xxtofl
  4757  001F68  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  4758  001F6C  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  4759  001F70  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  4760  001F74  1E05               	comf	??___xxtofl,f,c
  4761  001F76  1E06               	comf	??___xxtofl+1,f,c
  4762  001F78  1E07               	comf	??___xxtofl+2,f,c
  4763  001F7A  1E08               	comf	??___xxtofl+3,f,c
  4764  001F7C  2A05               	incf	??___xxtofl,f,c
  4765  001F7E  0E00               	movlw	0
  4766  001F80  2206               	addwfc	??___xxtofl+1,f,c
  4767  001F82  2207               	addwfc	??___xxtofl+2,f,c
  4768  001F84  2208               	addwfc	??___xxtofl+3,f,c
  4769  001F86  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  4770  001F8A  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  4771  001F8E  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  4772  001F92  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  4773  001F96  D008               	goto	i2l2595
  4774  001F98                     i2l981:
  4775  001F98  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  4776  001F9C  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4777  001FA0  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4778  001FA4  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4779  001FA8                     i2l2595:
  4780  001FA8  5001               	movf	___xxtofl@val,w,c
  4781  001FAA  1002               	iorwf	___xxtofl@val+1,w,c
  4782  001FAC  1003               	iorwf	___xxtofl@val+2,w,c
  4783  001FAE  1004               	iorwf	___xxtofl@val+3,w,c
  4784  001FB0  A4D8               	btfss	status,2,c
  4785  001FB2  D009               	goto	i2l2601
  4786  001FB4  0E00               	movlw	0
  4787  001FB6  6E01               	movwf	?___xxtofl,c
  4788  001FB8  0E00               	movlw	0
  4789  001FBA  6E02               	movwf	?___xxtofl+1,c
  4790  001FBC  0E00               	movlw	0
  4791  001FBE  6E03               	movwf	?___xxtofl+2,c
  4792  001FC0  0E00               	movlw	0
  4793  001FC2  6E04               	movwf	?___xxtofl+3,c
  4794  001FC4  0012               	return	
  4795  001FC6                     i2l2601:
  4796  001FC6  0E96               	movlw	150
  4797  001FC8  6E0A               	movwf	___xxtofl@exp,c
  4798  001FCA  D006               	goto	i2l2605
  4799  001FCC                     i2l2603:
  4800  001FCC  2A0A               	incf	___xxtofl@exp,f,c
  4801  001FCE  90D8               	bcf	status,0,c
  4802  001FD0  320E               	rrcf	___xxtofl@arg+3,f,c
  4803  001FD2  320D               	rrcf	___xxtofl@arg+2,f,c
  4804  001FD4  320C               	rrcf	___xxtofl@arg+1,f,c
  4805  001FD6  320B               	rrcf	___xxtofl@arg,f,c
  4806  001FD8                     i2l2605:
  4807  001FD8  0E00               	movlw	0
  4808  001FDA  140B               	andwf	___xxtofl@arg,w,c
  4809  001FDC  6E05               	movwf	??___xxtofl& (0+255),c
  4810  001FDE  0E00               	movlw	0
  4811  001FE0  140C               	andwf	___xxtofl@arg+1,w,c
  4812  001FE2  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  4813  001FE4  0E00               	movlw	0
  4814  001FE6  140D               	andwf	___xxtofl@arg+2,w,c
  4815  001FE8  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  4816  001FEA  0EFE               	movlw	254
  4817  001FEC  140E               	andwf	___xxtofl@arg+3,w,c
  4818  001FEE  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  4819  001FF0  5005               	movf	??___xxtofl,w,c
  4820  001FF2  1006               	iorwf	??___xxtofl+1,w,c
  4821  001FF4  1007               	iorwf	??___xxtofl+2,w,c
  4822  001FF6  1008               	iorwf	??___xxtofl+3,w,c
  4823  001FF8  B4D8               	btfsc	status,2,c
  4824  001FFA  D00D               	goto	i2l988
  4825  001FFC  D7E7               	goto	i2l2603
  4826  001FFE                     i2l2607:
  4827  001FFE  2A0A               	incf	___xxtofl@exp,f,c
  4828  002000  0E01               	movlw	1
  4829  002002  260B               	addwf	___xxtofl@arg,f,c
  4830  002004  0E00               	movlw	0
  4831  002006  220C               	addwfc	___xxtofl@arg+1,f,c
  4832  002008  220D               	addwfc	___xxtofl@arg+2,f,c
  4833  00200A  220E               	addwfc	___xxtofl@arg+3,f,c
  4834  00200C  90D8               	bcf	status,0,c
  4835  00200E  320E               	rrcf	___xxtofl@arg+3,f,c
  4836  002010  320D               	rrcf	___xxtofl@arg+2,f,c
  4837  002012  320C               	rrcf	___xxtofl@arg+1,f,c
  4838  002014  320B               	rrcf	___xxtofl@arg,f,c
  4839  002016                     i2l988:
  4840  002016  0E00               	movlw	0
  4841  002018  140B               	andwf	___xxtofl@arg,w,c
  4842  00201A  6E05               	movwf	??___xxtofl& (0+255),c
  4843  00201C  0E00               	movlw	0
  4844  00201E  140C               	andwf	___xxtofl@arg+1,w,c
  4845  002020  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  4846  002022  0E00               	movlw	0
  4847  002024  140D               	andwf	___xxtofl@arg+2,w,c
  4848  002026  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  4849  002028  0EFF               	movlw	255
  4850  00202A  140E               	andwf	___xxtofl@arg+3,w,c
  4851  00202C  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  4852  00202E  5005               	movf	??___xxtofl,w,c
  4853  002030  1006               	iorwf	??___xxtofl+1,w,c
  4854  002032  1007               	iorwf	??___xxtofl+2,w,c
  4855  002034  1008               	iorwf	??___xxtofl+3,w,c
  4856  002036  B4D8               	btfsc	status,2,c
  4857  002038  D007               	goto	i2l2615
  4858  00203A  D7E1               	goto	i2l2607
  4859  00203C                     i2l2613:
  4860  00203C  060A               	decf	___xxtofl@exp,f,c
  4861  00203E  90D8               	bcf	status,0,c
  4862  002040  360B               	rlcf	___xxtofl@arg,f,c
  4863  002042  360C               	rlcf	___xxtofl@arg+1,f,c
  4864  002044  360D               	rlcf	___xxtofl@arg+2,f,c
  4865  002046  360E               	rlcf	___xxtofl@arg+3,f,c
  4866  002048                     i2l2615:
  4867  002048  BE0D               	btfsc	___xxtofl@arg+2,7,c
  4868  00204A  D003               	goto	i2u267_40
  4869  00204C  0E02               	movlw	2
  4870  00204E  600A               	cpfslt	___xxtofl@exp,c
  4871  002050  D7F5               	goto	i2l2613
  4872  002052                     i2u267_40:
  4873  002052  A00A               	btfss	___xxtofl@exp,0,c
  4874  002054  9E0D               	bcf	___xxtofl@arg+2,7,c
  4875  002056  90D8               	bcf	status,0,c
  4876  002058  320A               	rrcf	___xxtofl@exp,f,c
  4877  00205A  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  4878  00205E  6A06               	clrf	(??___xxtofl+1)& (0+255),c
  4879  002060  6A07               	clrf	(??___xxtofl+2)& (0+255),c
  4880  002062  6A08               	clrf	(??___xxtofl+3)& (0+255),c
  4881  002064  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  4882  002068  6A07               	clrf	??___xxtofl+2,c
  4883  00206A  6A06               	clrf	??___xxtofl+1,c
  4884  00206C  6A05               	clrf	??___xxtofl,c
  4885  00206E  5005               	movf	??___xxtofl,w,c
  4886  002070  120B               	iorwf	___xxtofl@arg,f,c
  4887  002072  5006               	movf	??___xxtofl+1,w,c
  4888  002074  120C               	iorwf	___xxtofl@arg+1,f,c
  4889  002076  5007               	movf	??___xxtofl+2,w,c
  4890  002078  120D               	iorwf	___xxtofl@arg+2,f,c
  4891  00207A  5008               	movf	??___xxtofl+3,w,c
  4892  00207C  120E               	iorwf	___xxtofl@arg+3,f,c
  4893  00207E  5009               	movf	___xxtofl@sign,w,c
  4894  002080  A4D8               	btfss	status,2,c
  4895  002082  AE04               	btfss	___xxtofl@val+3,7,c
  4896  002084  D001               	goto	i2l2631
  4897  002086  8E0E               	bsf	___xxtofl@arg+3,7,c
  4898  002088                     i2l2631:
  4899  002088  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  4900  00208C  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  4901  002090  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  4902  002094  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  4903  002098  0012               	return		;funcret
  4904  00209A                     __end_of___xxtofl:
  4905                           	opt callstack 0
  4906                           
  4907 ;; *************** function ___fltol *****************
  4908 ;; Defined at:
  4909 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  4910 ;; Parameters:    Size  Location     Type
  4911 ;;  f1              4   39[COMRAM] unsigned char 
  4912 ;; Auto vars:     Size  Location     Type
  4913 ;;  exp1            1   48[COMRAM] unsigned char 
  4914 ;;  sign1           1   47[COMRAM] unsigned char 
  4915 ;; Return value:  Size  Location     Type
  4916 ;;                  4   39[COMRAM] long 
  4917 ;; Registers used:
  4918 ;;		wreg, status,2, status,0
  4919 ;; Tracked objects:
  4920 ;;		On entry : 0/0
  4921 ;;		On exit  : 0/0
  4922 ;;		Unchanged: 0/0
  4923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4924 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4925 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4926 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4927 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4928 ;;Total ram usage:       10 bytes
  4929 ;; Hardware stack levels used:    1
  4930 ;; This function calls:
  4931 ;;		Nothing
  4932 ;; This function is called by:
  4933 ;;		_echo
  4934 ;; This function uses a non-reentrant model
  4935 ;;
  4936                           
  4937                           	psect	text24
  4938  002400                     __ptext24:
  4939                           	opt callstack 0
  4940  002400                     ___fltol:
  4941                           	opt callstack 16
  4942                           
  4943                           ;incstack = 0
  4944  002400  342A               	rlcf	___fltol@f1+2,w,c
  4945  002402  342B               	rlcf	___fltol@f1+3,w,c
  4946  002404  6E31               	movwf	___fltol@exp1,c
  4947  002406  5031               	movf	___fltol@exp1,w,c
  4948  002408  A4D8               	btfss	status,2,c
  4949  00240A  D009               	goto	i2l2551
  4950  00240C                     i2u254_40:
  4951  00240C  0E00               	movlw	0
  4952  00240E  6E28               	movwf	?___fltol,c
  4953  002410  0E00               	movlw	0
  4954  002412  6E29               	movwf	?___fltol+1,c
  4955  002414  0E00               	movlw	0
  4956  002416  6E2A               	movwf	?___fltol+2,c
  4957  002418  0E00               	movlw	0
  4958  00241A  6E2B               	movwf	?___fltol+3,c
  4959  00241C  0012               	return	
  4960  00241E                     i2l2551:
  4961  00241E  C028  F02C         	movff	___fltol@f1,??___fltol
  4962  002422  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
  4963  002426  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
  4964  00242A  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
  4965  00242E  0E20               	movlw	32
  4966  002430  D005               	goto	i2u255_40
  4967  002432                     i2u255_45:
  4968  002432  90D8               	bcf	status,0,c
  4969  002434  322F               	rrcf	??___fltol+3,f,c
  4970  002436  322E               	rrcf	??___fltol+2,f,c
  4971  002438  322D               	rrcf	??___fltol+1,f,c
  4972  00243A  322C               	rrcf	??___fltol,f,c
  4973  00243C                     i2u255_40:
  4974  00243C  2EE8               	decfsz	wreg,f,c
  4975  00243E  D7F9               	goto	i2u255_45
  4976  002440  502C               	movf	??___fltol,w,c
  4977  002442  6E30               	movwf	___fltol@sign1,c
  4978  002444  8E2A               	bsf	___fltol@f1+2,7,c
  4979  002446  0EFF               	movlw	255
  4980  002448  1628               	andwf	___fltol@f1,f,c
  4981  00244A  0EFF               	movlw	255
  4982  00244C  1629               	andwf	___fltol@f1+1,f,c
  4983  00244E  0EFF               	movlw	255
  4984  002450  162A               	andwf	___fltol@f1+2,f,c
  4985  002452  0E00               	movlw	0
  4986  002454  162B               	andwf	___fltol@f1+3,f,c
  4987  002456  0E96               	movlw	150
  4988  002458  5E31               	subwf	___fltol@exp1,f,c
  4989  00245A  AE31               	btfss	___fltol@exp1,7,c
  4990  00245C  D00D               	goto	i2l2571
  4991  00245E  5031               	movf	___fltol@exp1,w,c
  4992  002460  0A80               	xorlw	128
  4993  002462  0F97               	addlw	151
  4994  002464  A0D8               	btfss	status,0,c
  4995  002466  D7D2               	goto	i2u254_40
  4996  002468                     i2l2567:
  4997  002468  90D8               	bcf	status,0,c
  4998  00246A  322B               	rrcf	___fltol@f1+3,f,c
  4999  00246C  322A               	rrcf	___fltol@f1+2,f,c
  5000  00246E  3229               	rrcf	___fltol@f1+1,f,c
  5001  002470  3228               	rrcf	___fltol@f1,f,c
  5002  002472  3E31               	incfsz	___fltol@exp1,f,c
  5003  002474  D7F9               	goto	i2l2567
  5004  002476  D00D               	goto	i2u259_40
  5005  002478                     i2l2571:
  5006  002478  0E1F               	movlw	31
  5007  00247A  6431               	cpfsgt	___fltol@exp1,c
  5008  00247C  D007               	goto	i2l2579
  5009  00247E  D7C6               	goto	i2u254_40
  5010  002480                     i2l2577:
  5011  002480  90D8               	bcf	status,0,c
  5012  002482  3628               	rlcf	___fltol@f1,f,c
  5013  002484  3629               	rlcf	___fltol@f1+1,f,c
  5014  002486  362A               	rlcf	___fltol@f1+2,f,c
  5015  002488  362B               	rlcf	___fltol@f1+3,f,c
  5016  00248A  0631               	decf	___fltol@exp1,f,c
  5017  00248C                     i2l2579:
  5018  00248C  5031               	movf	___fltol@exp1,w,c
  5019  00248E  A4D8               	btfss	status,2,c
  5020  002490  D7F7               	goto	i2l2577
  5021  002492                     i2u259_40:
  5022  002492  5030               	movf	___fltol@sign1,w,c
  5023  002494  B4D8               	btfsc	status,2,c
  5024  002496  D008               	goto	i2l2585
  5025  002498  1E2B               	comf	___fltol@f1+3,f,c
  5026  00249A  1E2A               	comf	___fltol@f1+2,f,c
  5027  00249C  1E29               	comf	___fltol@f1+1,f,c
  5028  00249E  6C28               	negf	___fltol@f1,c
  5029  0024A0  0E00               	movlw	0
  5030  0024A2  2229               	addwfc	___fltol@f1+1,f,c
  5031  0024A4  222A               	addwfc	___fltol@f1+2,f,c
  5032  0024A6  222B               	addwfc	___fltol@f1+3,f,c
  5033  0024A8                     i2l2585:
  5034  0024A8  C028  F028         	movff	___fltol@f1,?___fltol
  5035  0024AC  C029  F029         	movff	___fltol@f1+1,?___fltol+1
  5036  0024B0  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
  5037  0024B4  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
  5038  0024B8  0012               	return		;funcret
  5039  0024BA                     __end_of___fltol:
  5040                           	opt callstack 0
  5041                           
  5042 ;; *************** function ___fldiv *****************
  5043 ;; Defined at:
  5044 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
  5045 ;; Parameters:    Size  Location     Type
  5046 ;;  b               4   14[COMRAM] long 
  5047 ;;  a               4   18[COMRAM] long 
  5048 ;; Auto vars:     Size  Location     Type
  5049 ;;  grs             4   33[COMRAM] unsigned long 
  5050 ;;  rem             4   26[COMRAM] unsigned long 
  5051 ;;  new_exp         2   31[COMRAM] short 
  5052 ;;  aexp            1   38[COMRAM] unsigned char 
  5053 ;;  bexp            1   37[COMRAM] unsigned char 
  5054 ;;  sign            1   30[COMRAM] unsigned char 
  5055 ;; Return value:  Size  Location     Type
  5056 ;;                  4   14[COMRAM] unsigned char 
  5057 ;; Registers used:
  5058 ;;		wreg, status,2, status,0
  5059 ;; Tracked objects:
  5060 ;;		On entry : 0/0
  5061 ;;		On exit  : 0/0
  5062 ;;		Unchanged: 0/0
  5063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5064 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5065 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5066 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5067 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5068 ;;Total ram usage:       25 bytes
  5069 ;; Hardware stack levels used:    1
  5070 ;; This function calls:
  5071 ;;		Nothing
  5072 ;; This function is called by:
  5073 ;;		_echo
  5074 ;; This function uses a non-reentrant model
  5075 ;;
  5076                           
  5077                           	psect	text25
  5078  0015CC                     __ptext25:
  5079                           	opt callstack 0
  5080  0015CC                     ___fldiv:
  5081                           	opt callstack 16
  5082                           
  5083                           ;incstack = 0
  5084  0015CC  5012               	movf	___fldiv@b+3,w,c
  5085  0015CE  0B80               	andlw	128
  5086  0015D0  6E1F               	movwf	___fldiv@sign,c
  5087  0015D2  5012               	movf	___fldiv@b+3,w,c
  5088  0015D4  2412               	addwf	___fldiv@b+3,w,c
  5089  0015D6  6E26               	movwf	___fldiv@bexp,c
  5090  0015D8  BE11               	btfsc	___fldiv@b+2,7,c
  5091  0015DA  8026               	bsf	___fldiv@bexp,0,c
  5092  0015DC  5026               	movf	___fldiv@bexp,w,c
  5093  0015DE  B4D8               	btfsc	status,2,c
  5094  0015E0  D00D               	goto	i2l2379
  5095  0015E2  2826               	incf	___fldiv@bexp,w,c
  5096  0015E4  A4D8               	btfss	status,2,c
  5097  0015E6  D008               	goto	i2l2375
  5098  0015E8  0E00               	movlw	0
  5099  0015EA  6E0F               	movwf	___fldiv@b,c
  5100  0015EC  0E00               	movlw	0
  5101  0015EE  6E10               	movwf	___fldiv@b+1,c
  5102  0015F0  0E00               	movlw	0
  5103  0015F2  6E11               	movwf	___fldiv@b+2,c
  5104  0015F4  0E00               	movlw	0
  5105  0015F6  6E12               	movwf	___fldiv@b+3,c
  5106  0015F8                     i2l2375:
  5107  0015F8  8E11               	bsf	___fldiv@b+2,7,c
  5108  0015FA  D006               	goto	L3
  5109  0015FC                     i2l2379:
  5110  0015FC  0E00               	movlw	0
  5111  0015FE  6E0F               	movwf	___fldiv@b,c
  5112  001600  0E00               	movlw	0
  5113  001602  6E10               	movwf	___fldiv@b+1,c
  5114  001604  0E00               	movlw	0
  5115  001606  6E11               	movwf	___fldiv@b+2,c
  5116  001608                     L3:
  5117  001608  0E00               	movlw	0
  5118  00160A  6E12               	movwf	___fldiv@b+3,c
  5119  00160C  5016               	movf	___fldiv@a+3,w,c
  5120  00160E  0B80               	andlw	128
  5121  001610  1A1F               	xorwf	___fldiv@sign,f,c
  5122  001612  5016               	movf	___fldiv@a+3,w,c
  5123  001614  2416               	addwf	___fldiv@a+3,w,c
  5124  001616  6E27               	movwf	___fldiv@aexp,c
  5125  001618  BE15               	btfsc	___fldiv@a+2,7,c
  5126  00161A  8027               	bsf	___fldiv@aexp,0,c
  5127  00161C  5027               	movf	___fldiv@aexp,w,c
  5128  00161E  B4D8               	btfsc	status,2,c
  5129  001620  D00D               	goto	i2l2399
  5130  001622  2827               	incf	___fldiv@aexp,w,c
  5131  001624  A4D8               	btfss	status,2,c
  5132  001626  D008               	goto	i2l2395
  5133  001628  0E00               	movlw	0
  5134  00162A  6E13               	movwf	___fldiv@a,c
  5135  00162C  0E00               	movlw	0
  5136  00162E  6E14               	movwf	___fldiv@a+1,c
  5137  001630  0E00               	movlw	0
  5138  001632  6E15               	movwf	___fldiv@a+2,c
  5139  001634  0E00               	movlw	0
  5140  001636  6E16               	movwf	___fldiv@a+3,c
  5141  001638                     i2l2395:
  5142  001638  8E15               	bsf	___fldiv@a+2,7,c
  5143  00163A  D006               	goto	L4
  5144  00163C                     i2l2399:
  5145  00163C  0E00               	movlw	0
  5146  00163E  6E13               	movwf	___fldiv@a,c
  5147  001640  0E00               	movlw	0
  5148  001642  6E14               	movwf	___fldiv@a+1,c
  5149  001644  0E00               	movlw	0
  5150  001646  6E15               	movwf	___fldiv@a+2,c
  5151  001648                     L4:
  5152  001648  0E00               	movlw	0
  5153  00164A  6E16               	movwf	___fldiv@a+3,c
  5154  00164C  5013               	movf	___fldiv@a,w,c
  5155  00164E  1014               	iorwf	___fldiv@a+1,w,c
  5156  001650  1015               	iorwf	___fldiv@a+2,w,c
  5157  001652  1016               	iorwf	___fldiv@a+3,w,c
  5158  001654  A4D8               	btfss	status,2,c
  5159  001656  D017               	goto	i2l2413
  5160  001658  0E00               	movlw	0
  5161  00165A  6E0F               	movwf	___fldiv@b,c
  5162  00165C  0E00               	movlw	0
  5163  00165E  6E10               	movwf	___fldiv@b+1,c
  5164  001660  0E00               	movlw	0
  5165  001662  6E11               	movwf	___fldiv@b+2,c
  5166  001664  0E00               	movlw	0
  5167  001666  6E12               	movwf	___fldiv@b+3,c
  5168  001668  0E80               	movlw	128
  5169  00166A  1211               	iorwf	___fldiv@b+2,f,c
  5170  00166C  0E7F               	movlw	127
  5171  00166E  1212               	iorwf	___fldiv@b+3,f,c
  5172  001670                     i2l2407:
  5173  001670  501F               	movf	___fldiv@sign,w,c
  5174  001672  1212               	iorwf	___fldiv@b+3,f,c
  5175  001674  C00F  F00F         	movff	___fldiv@b,?___fldiv
  5176  001678  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  5177  00167C  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  5178  001680  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  5179  001684  0012               	return	
  5180  001686                     i2l2413:
  5181  001686  5026               	movf	___fldiv@bexp,w,c
  5182  001688  A4D8               	btfss	status,2,c
  5183  00168A  D009               	goto	i2l2421
  5184  00168C  0E00               	movlw	0
  5185  00168E  6E0F               	movwf	?___fldiv,c
  5186  001690  0E00               	movlw	0
  5187  001692  6E10               	movwf	?___fldiv+1,c
  5188  001694  0E00               	movlw	0
  5189  001696  6E11               	movwf	?___fldiv+2,c
  5190  001698  0E00               	movlw	0
  5191  00169A  6E12               	movwf	?___fldiv+3,c
  5192  00169C  0012               	return	
  5193  00169E                     i2l2421:
  5194  00169E  5027               	movf	___fldiv@aexp,w,c
  5195  0016A0  C026  F017         	movff	___fldiv@bexp,??___fldiv
  5196  0016A4  6A18               	clrf	(??___fldiv+1)& (0+255),c
  5197  0016A6  5E17               	subwf	??___fldiv,f,c
  5198  0016A8  0E00               	movlw	0
  5199  0016AA  5A18               	subwfb	??___fldiv+1,f,c
  5200  0016AC  0E7F               	movlw	127
  5201  0016AE  2417               	addwf	??___fldiv,w,c
  5202  0016B0  6E20               	movwf	___fldiv@new_exp,c
  5203  0016B2  0E00               	movlw	0
  5204  0016B4  2018               	addwfc	??___fldiv+1,w,c
  5205  0016B6  6E21               	movwf	___fldiv@new_exp+1,c
  5206  0016B8  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  5207  0016BC  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  5208  0016C0  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  5209  0016C4  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  5210  0016C8  0E00               	movlw	0
  5211  0016CA  6E0F               	movwf	___fldiv@b,c
  5212  0016CC  0E00               	movlw	0
  5213  0016CE  6E10               	movwf	___fldiv@b+1,c
  5214  0016D0  0E00               	movlw	0
  5215  0016D2  6E11               	movwf	___fldiv@b+2,c
  5216  0016D4  0E00               	movlw	0
  5217  0016D6  6E12               	movwf	___fldiv@b+3,c
  5218  0016D8  0E00               	movlw	0
  5219  0016DA  6E22               	movwf	___fldiv@grs,c
  5220  0016DC  0E00               	movlw	0
  5221  0016DE  6E23               	movwf	___fldiv@grs+1,c
  5222  0016E0  0E00               	movlw	0
  5223  0016E2  6E24               	movwf	___fldiv@grs+2,c
  5224  0016E4  0E00               	movlw	0
  5225  0016E6  6E25               	movwf	___fldiv@grs+3,c
  5226  0016E8  0E00               	movlw	0
  5227  0016EA  6E27               	movwf	___fldiv@aexp,c
  5228  0016EC  D028               	goto	i2l910
  5229  0016EE                     i2l2431:
  5230  0016EE  5027               	movf	___fldiv@aexp,w,c
  5231  0016F0  B4D8               	btfsc	status,2,c
  5232  0016F2  D011               	goto	i2l2439
  5233  0016F4  90D8               	bcf	status,0,c
  5234  0016F6  361B               	rlcf	___fldiv@rem,f,c
  5235  0016F8  361C               	rlcf	___fldiv@rem+1,f,c
  5236  0016FA  361D               	rlcf	___fldiv@rem+2,f,c
  5237  0016FC  361E               	rlcf	___fldiv@rem+3,f,c
  5238  0016FE  90D8               	bcf	status,0,c
  5239  001700  360F               	rlcf	___fldiv@b,f,c
  5240  001702  3610               	rlcf	___fldiv@b+1,f,c
  5241  001704  3611               	rlcf	___fldiv@b+2,f,c
  5242  001706  3612               	rlcf	___fldiv@b+3,f,c
  5243  001708  BE25               	btfsc	___fldiv@grs+3,7,c
  5244  00170A  800F               	bsf	___fldiv@b,0,c
  5245  00170C  90D8               	bcf	status,0,c
  5246  00170E  3622               	rlcf	___fldiv@grs,f,c
  5247  001710  3623               	rlcf	___fldiv@grs+1,f,c
  5248  001712  3624               	rlcf	___fldiv@grs+2,f,c
  5249  001714  3625               	rlcf	___fldiv@grs+3,f,c
  5250  001716                     i2l2439:
  5251  001716  5013               	movf	___fldiv@a,w,c
  5252  001718  5C1B               	subwf	___fldiv@rem,w,c
  5253  00171A  5014               	movf	___fldiv@a+1,w,c
  5254  00171C  581C               	subwfb	___fldiv@rem+1,w,c
  5255  00171E  5015               	movf	___fldiv@a+2,w,c
  5256  001720  581D               	subwfb	___fldiv@rem+2,w,c
  5257  001722  5016               	movf	___fldiv@a+3,w,c
  5258  001724  581E               	subwfb	___fldiv@rem+3,w,c
  5259  001726  A0D8               	btfss	status,0,c
  5260  001728  D009               	goto	i2l2445
  5261  00172A  8C25               	bsf	___fldiv@grs+3,6,c
  5262  00172C  5013               	movf	___fldiv@a,w,c
  5263  00172E  5E1B               	subwf	___fldiv@rem,f,c
  5264  001730  5014               	movf	___fldiv@a+1,w,c
  5265  001732  5A1C               	subwfb	___fldiv@rem+1,f,c
  5266  001734  5015               	movf	___fldiv@a+2,w,c
  5267  001736  5A1D               	subwfb	___fldiv@rem+2,f,c
  5268  001738  5016               	movf	___fldiv@a+3,w,c
  5269  00173A  5A1E               	subwfb	___fldiv@rem+3,f,c
  5270  00173C                     i2l2445:
  5271  00173C  2A27               	incf	___fldiv@aexp,f,c
  5272  00173E                     i2l910:
  5273  00173E  0E19               	movlw	25
  5274  001740  6427               	cpfsgt	___fldiv@aexp,c
  5275  001742  D7D5               	goto	i2l2431
  5276  001744  501B               	movf	___fldiv@rem,w,c
  5277  001746  101C               	iorwf	___fldiv@rem+1,w,c
  5278  001748  101D               	iorwf	___fldiv@rem+2,w,c
  5279  00174A  101E               	iorwf	___fldiv@rem+3,w,c
  5280  00174C  B4D8               	btfsc	status,2,c
  5281  00174E  D011               	goto	i2l2457
  5282  001750  8022               	bsf	___fldiv@grs,0,c
  5283  001752  D00F               	goto	i2l2457
  5284  001754                     i2l2451:
  5285  001754  90D8               	bcf	status,0,c
  5286  001756  360F               	rlcf	___fldiv@b,f,c
  5287  001758  3610               	rlcf	___fldiv@b+1,f,c
  5288  00175A  3611               	rlcf	___fldiv@b+2,f,c
  5289  00175C  3612               	rlcf	___fldiv@b+3,f,c
  5290  00175E  BE25               	btfsc	___fldiv@grs+3,7,c
  5291  001760  800F               	bsf	___fldiv@b,0,c
  5292  001762  90D8               	bcf	status,0,c
  5293  001764  3622               	rlcf	___fldiv@grs,f,c
  5294  001766  3623               	rlcf	___fldiv@grs+1,f,c
  5295  001768  3624               	rlcf	___fldiv@grs+2,f,c
  5296  00176A  3625               	rlcf	___fldiv@grs+3,f,c
  5297  00176C  0620               	decf	___fldiv@new_exp,f,c
  5298  00176E  A0D8               	btfss	status,0,c
  5299  001770  0621               	decf	___fldiv@new_exp+1,f,c
  5300  001772                     i2l2457:
  5301  001772  AE11               	btfss	___fldiv@b+2,7,c
  5302  001774  D7EF               	goto	i2l2451
  5303  001776  0E00               	movlw	0
  5304  001778  6E27               	movwf	___fldiv@aexp,c
  5305  00177A  AE25               	btfss	___fldiv@grs+3,7,c
  5306  00177C  D017               	goto	i2l921
  5307  00177E  0EFF               	movlw	255
  5308  001780  1422               	andwf	___fldiv@grs,w,c
  5309  001782  6E17               	movwf	??___fldiv& (0+255),c
  5310  001784  0EFF               	movlw	255
  5311  001786  1423               	andwf	___fldiv@grs+1,w,c
  5312  001788  6E18               	movwf	(??___fldiv+1)& (0+255),c
  5313  00178A  0EFF               	movlw	255
  5314  00178C  1424               	andwf	___fldiv@grs+2,w,c
  5315  00178E  6E19               	movwf	(??___fldiv+2)& (0+255),c
  5316  001790  0E7F               	movlw	127
  5317  001792  1425               	andwf	___fldiv@grs+3,w,c
  5318  001794  6E1A               	movwf	(??___fldiv+3)& (0+255),c
  5319  001796  5017               	movf	??___fldiv,w,c
  5320  001798  1018               	iorwf	??___fldiv+1,w,c
  5321  00179A  1019               	iorwf	??___fldiv+2,w,c
  5322  00179C  101A               	iorwf	??___fldiv+3,w,c
  5323  00179E  B4D8               	btfsc	status,2,c
  5324  0017A0  D003               	goto	i2l922
  5325  0017A2                     i2u241_40:
  5326  0017A2  0E01               	movlw	1
  5327  0017A4  6E27               	movwf	___fldiv@aexp,c
  5328  0017A6  D002               	goto	i2l921
  5329  0017A8                     i2l922:
  5330  0017A8  B00F               	btfsc	___fldiv@b,0,c
  5331  0017AA  D7FB               	goto	i2u241_40
  5332  0017AC                     i2l921:
  5333  0017AC  5027               	movf	___fldiv@aexp,w,c
  5334  0017AE  B4D8               	btfsc	status,2,c
  5335  0017B0  D01F               	goto	i2l2477
  5336  0017B2  0E01               	movlw	1
  5337  0017B4  260F               	addwf	___fldiv@b,f,c
  5338  0017B6  0E00               	movlw	0
  5339  0017B8  2210               	addwfc	___fldiv@b+1,f,c
  5340  0017BA  2211               	addwfc	___fldiv@b+2,f,c
  5341  0017BC  2212               	addwfc	___fldiv@b+3,f,c
  5342  0017BE  A012               	btfss	___fldiv@b+3,0,c
  5343  0017C0  D017               	goto	i2l2477
  5344  0017C2  C00F  F017         	movff	___fldiv@b,??___fldiv
  5345  0017C6  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  5346  0017CA  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  5347  0017CE  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  5348  0017D2  341A               	rlcf	??___fldiv+3,w,c
  5349  0017D4  321A               	rrcf	??___fldiv+3,f,c
  5350  0017D6  3219               	rrcf	??___fldiv+2,f,c
  5351  0017D8  3218               	rrcf	??___fldiv+1,f,c
  5352  0017DA  3217               	rrcf	??___fldiv,f,c
  5353  0017DC  C017  F00F         	movff	??___fldiv,___fldiv@b
  5354  0017E0  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  5355  0017E4  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  5356  0017E8  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  5357  0017EC  4A20               	infsnz	___fldiv@new_exp,f,c
  5358  0017EE  2A21               	incf	___fldiv@new_exp+1,f,c
  5359  0017F0                     i2l2477:
  5360  0017F0  BE21               	btfsc	___fldiv@new_exp+1,7,c
  5361  0017F2  D010               	goto	i2l2481
  5362  0017F4  5021               	movf	___fldiv@new_exp+1,w,c
  5363  0017F6  E103               	bnz	i2u245_40
  5364  0017F8  2820               	incf	___fldiv@new_exp,w,c
  5365  0017FA  A0D8               	btfss	status,0,c
  5366  0017FC  D00B               	goto	i2l2481
  5367  0017FE                     i2u245_40:
  5368  0017FE  0E00               	movlw	0
  5369  001800  6E21               	movwf	___fldiv@new_exp+1,c
  5370  001802  6820               	setf	___fldiv@new_exp,c
  5371  001804  0E00               	movlw	0
  5372  001806  6E0F               	movwf	___fldiv@b,c
  5373  001808  0E00               	movlw	0
  5374  00180A  6E10               	movwf	___fldiv@b+1,c
  5375  00180C  0E00               	movlw	0
  5376  00180E  6E11               	movwf	___fldiv@b+2,c
  5377  001810  0E00               	movlw	0
  5378  001812  6E12               	movwf	___fldiv@b+3,c
  5379  001814                     i2l2481:
  5380  001814  BE21               	btfsc	___fldiv@new_exp+1,7,c
  5381  001816  D005               	goto	i2u246_40
  5382  001818  5021               	movf	___fldiv@new_exp+1,w,c
  5383  00181A  E111               	bnz	i2l2485
  5384  00181C  0420               	decf	___fldiv@new_exp,w,c
  5385  00181E  B0D8               	btfsc	status,0,c
  5386  001820  D00E               	goto	i2l2485
  5387  001822                     i2u246_40:
  5388  001822  0E00               	movlw	0
  5389  001824  6E21               	movwf	___fldiv@new_exp+1,c
  5390  001826  0E00               	movlw	0
  5391  001828  6E20               	movwf	___fldiv@new_exp,c
  5392  00182A  0E00               	movlw	0
  5393  00182C  6E0F               	movwf	___fldiv@b,c
  5394  00182E  0E00               	movlw	0
  5395  001830  6E10               	movwf	___fldiv@b+1,c
  5396  001832  0E00               	movlw	0
  5397  001834  6E11               	movwf	___fldiv@b+2,c
  5398  001836  0E00               	movlw	0
  5399  001838  6E12               	movwf	___fldiv@b+3,c
  5400  00183A  0E00               	movlw	0
  5401  00183C  6E1F               	movwf	___fldiv@sign,c
  5402  00183E                     i2l2485:
  5403  00183E  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  5404  001842  A026               	btfss	___fldiv@bexp,0,c
  5405  001844  D002               	goto	i2l2491
  5406  001846  8E11               	bsf	___fldiv@b+2,7,c
  5407  001848  D001               	goto	i2l2493
  5408  00184A                     i2l2491:
  5409  00184A  9E11               	bcf	___fldiv@b+2,7,c
  5410  00184C                     i2l2493:
  5411  00184C  90D8               	bcf	status,0,c
  5412  00184E  3026               	rrcf	___fldiv@bexp,w,c
  5413  001850  6E12               	movwf	___fldiv@b+3,c
  5414  001852  D70E               	goto	i2l2407
  5415  001854                     __end_of___fldiv:
  5416                           	opt callstack 0
  5417                           
  5418 ;; *************** function ___awdiv *****************
  5419 ;; Defined at:
  5420 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  5421 ;; Parameters:    Size  Location     Type
  5422 ;;  dividend        2    0[COMRAM] int 
  5423 ;;  divisor         2    2[COMRAM] int 
  5424 ;; Auto vars:     Size  Location     Type
  5425 ;;  quotient        2    6[COMRAM] int 
  5426 ;;  sign            1    5[COMRAM] unsigned char 
  5427 ;;  counter         1    4[COMRAM] unsigned char 
  5428 ;; Return value:  Size  Location     Type
  5429 ;;                  2    0[COMRAM] int 
  5430 ;; Registers used:
  5431 ;;		wreg, status,2, status,0
  5432 ;; Tracked objects:
  5433 ;;		On entry : 0/0
  5434 ;;		On exit  : 0/0
  5435 ;;		Unchanged: 0/0
  5436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5437 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5438 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5440 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5441 ;;Total ram usage:        8 bytes
  5442 ;; Hardware stack levels used:    1
  5443 ;; This function calls:
  5444 ;;		Nothing
  5445 ;; This function is called by:
  5446 ;;		_echo
  5447 ;;		_number_deploy
  5448 ;; This function uses a non-reentrant model
  5449 ;;
  5450                           
  5451                           	psect	text26
  5452  002558                     __ptext26:
  5453                           	opt callstack 0
  5454  002558                     ___awdiv:
  5455                           	opt callstack 16
  5456                           
  5457                           ;incstack = 0
  5458  002558  0E00               	movlw	0
  5459  00255A  6E06               	movwf	___awdiv@sign,c
  5460  00255C  AE04               	btfss	___awdiv@divisor+1,7,c
  5461  00255E  D006               	goto	i2l2509
  5462  002560  6C03               	negf	___awdiv@divisor,c
  5463  002562  1E04               	comf	___awdiv@divisor+1,f,c
  5464  002564  B0D8               	btfsc	status,0,c
  5465  002566  2A04               	incf	___awdiv@divisor+1,f,c
  5466  002568  0E01               	movlw	1
  5467  00256A  6E06               	movwf	___awdiv@sign,c
  5468  00256C                     i2l2509:
  5469  00256C  AE02               	btfss	___awdiv@dividend+1,7,c
  5470  00256E  D006               	goto	i2l2515
  5471  002570  6C01               	negf	___awdiv@dividend,c
  5472  002572  1E02               	comf	___awdiv@dividend+1,f,c
  5473  002574  B0D8               	btfsc	status,0,c
  5474  002576  2A02               	incf	___awdiv@dividend+1,f,c
  5475  002578  0E01               	movlw	1
  5476  00257A  1A06               	xorwf	___awdiv@sign,f,c
  5477  00257C                     i2l2515:
  5478  00257C  0E00               	movlw	0
  5479  00257E  6E08               	movwf	___awdiv@quotient+1,c
  5480  002580  0E00               	movlw	0
  5481  002582  6E07               	movwf	___awdiv@quotient,c
  5482  002584  5003               	movf	___awdiv@divisor,w,c
  5483  002586  1004               	iorwf	___awdiv@divisor+1,w,c
  5484  002588  B4D8               	btfsc	status,2,c
  5485  00258A  D01C               	goto	i2l2537
  5486  00258C  0E01               	movlw	1
  5487  00258E  6E05               	movwf	___awdiv@counter,c
  5488  002590  D004               	goto	i2l2523
  5489  002592                     i2l2521:
  5490  002592  90D8               	bcf	status,0,c
  5491  002594  3603               	rlcf	___awdiv@divisor,f,c
  5492  002596  3604               	rlcf	___awdiv@divisor+1,f,c
  5493  002598  2A05               	incf	___awdiv@counter,f,c
  5494  00259A                     i2l2523:
  5495  00259A  AE04               	btfss	___awdiv@divisor+1,7,c
  5496  00259C  D7FA               	goto	i2l2521
  5497  00259E                     i2u251_40:
  5498  00259E  90D8               	bcf	status,0,c
  5499  0025A0  3607               	rlcf	___awdiv@quotient,f,c
  5500  0025A2  3608               	rlcf	___awdiv@quotient+1,f,c
  5501  0025A4  5003               	movf	___awdiv@divisor,w,c
  5502  0025A6  5C01               	subwf	___awdiv@dividend,w,c
  5503  0025A8  5004               	movf	___awdiv@divisor+1,w,c
  5504  0025AA  5802               	subwfb	___awdiv@dividend+1,w,c
  5505  0025AC  A0D8               	btfss	status,0,c
  5506  0025AE  D005               	goto	i2l2533
  5507  0025B0  5003               	movf	___awdiv@divisor,w,c
  5508  0025B2  5E01               	subwf	___awdiv@dividend,f,c
  5509  0025B4  5004               	movf	___awdiv@divisor+1,w,c
  5510  0025B6  5A02               	subwfb	___awdiv@dividend+1,f,c
  5511  0025B8  8007               	bsf	___awdiv@quotient,0,c
  5512  0025BA                     i2l2533:
  5513  0025BA  90D8               	bcf	status,0,c
  5514  0025BC  3204               	rrcf	___awdiv@divisor+1,f,c
  5515  0025BE  3203               	rrcf	___awdiv@divisor,f,c
  5516  0025C0  2E05               	decfsz	___awdiv@counter,f,c
  5517  0025C2  D7ED               	goto	i2u251_40
  5518  0025C4                     i2l2537:
  5519  0025C4  5006               	movf	___awdiv@sign,w,c
  5520  0025C6  B4D8               	btfsc	status,2,c
  5521  0025C8  D004               	goto	i2l2541
  5522  0025CA  6C07               	negf	___awdiv@quotient,c
  5523  0025CC  1E08               	comf	___awdiv@quotient+1,f,c
  5524  0025CE  B0D8               	btfsc	status,0,c
  5525  0025D0  2A08               	incf	___awdiv@quotient+1,f,c
  5526  0025D2                     i2l2541:
  5527  0025D2  C007  F001         	movff	___awdiv@quotient,?___awdiv
  5528  0025D6  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  5529  0025DA  0012               	return		;funcret
  5530  0025DC                     __end_of___awdiv:
  5531                           	opt callstack 0
  5532                           
  5533                           	psect	rparam
  5534  0000                     
  5535                           	psect	temp
  5536  000051                     btemp:
  5537                           	opt callstack 0
  5538  000051                     	ds	1
  5539  0000                     int$flags	set	btemp
  5540  0000                     wtemp8	set	btemp+1
  5541  0000                     ttemp5	set	btemp+1
  5542  0000                     ttemp6	set	btemp+4
  5543  0000                     ttemp7	set	btemp+8
  5544                           tosu	equ	0xFFF
  5545                           tosh	equ	0xFFE
  5546                           tosl	equ	0xFFD
  5547                           stkptr	equ	0xFFC
  5548                           pclatu	equ	0xFFB
  5549                           pclath	equ	0xFFA
  5550                           pcl	equ	0xFF9
  5551                           tblptru	equ	0xFF8
  5552                           tblptrh	equ	0xFF7
  5553                           tblptrl	equ	0xFF6
  5554                           tablat	equ	0xFF5
  5555                           prodh	equ	0xFF4
  5556                           prodl	equ	0xFF3
  5557                           indf0	equ	0xFEF
  5558                           postinc0	equ	0xFEE
  5559                           postdec0	equ	0xFED
  5560                           preinc0	equ	0xFEC
  5561                           plusw0	equ	0xFEB
  5562                           fsr0h	equ	0xFEA
  5563                           fsr0l	equ	0xFE9
  5564                           wreg	equ	0xFE8
  5565                           indf1	equ	0xFE7
  5566                           postinc1	equ	0xFE6
  5567                           postdec1	equ	0xFE5
  5568                           preinc1	equ	0xFE4
  5569                           plusw1	equ	0xFE3
  5570                           fsr1h	equ	0xFE2
  5571                           fsr1l	equ	0xFE1
  5572                           bsr	equ	0xFE0
  5573                           indf2	equ	0xFDF
  5574                           postinc2	equ	0xFDE
  5575                           postdec2	equ	0xFDD
  5576                           preinc2	equ	0xFDC
  5577                           plusw2	equ	0xFDB
  5578                           fsr2h	equ	0xFDA
  5579                           fsr2l	equ	0xFD9
  5580                           status	equ	0xFD8


Data Sizes:
    Strings     128
    Constant    6
    Data        0
    BSS         113
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     55      80
    BANK0           128    112     120
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_10(CODE[6]), STR_9(CODE[16]), STR_8(CODE[10]), STR_7(CODE[17]), 
		 -> STR_6(CODE[10]), STR_5(CODE[16]), STR_4(CODE[10]), STR_3(CODE[16]), 
		 -> STR_2(CODE[10]), STR_1(CODE[17]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S977_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_10(CODE[6]), STR_9(CODE[16]), STR_8(CODE[10]), STR_7(CODE[17]), 
		 -> STR_6(CODE[10]), STR_5(CODE[16]), STR_4(CODE[10]), STR_3(CODE[16]), 
		 -> STR_2(CODE[10]), STR_1(CODE[17]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 17
		 -> STR_10(CODE[6]), STR_9(CODE[16]), STR_8(CODE[10]), STR_7(CODE[17]), 
		 -> STR_6(CODE[10]), STR_5(CODE[16]), STR_4(CODE[10]), STR_3(CODE[16]), 
		 -> STR_2(CODE[10]), STR_1(CODE[17]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_echo
    _echo->___fltol
    ___fltol->___fldiv
    ___fldiv->___xxtofl

Critical Paths under _main in BANK0

    _main->_print_echo
    _print_echo->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_send_byte
    _abs->___aomod
    _initLCD->_lcdInst
    _lcdInst->_send_byte
    _send_byte->_send_nibble
    _send_nibble->_pulse_e

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0   10606
                                            102 BANK0     10    10      0
                             ___wmul
                            _initLCD
                            _lcdInst
                         _print_echo
                               _trig
 ---------------------------------------------------------------------------------
 (1) _trig                                                 2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _print_echo                                           1     1      0    9224
                                            101 BANK0      1     1      0
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              10     4      6    9066
                                             91 BANK0     10     4      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    8085
                                             83 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           42    36      6    7612
                                             67 BANK0     16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    5772
                                             31 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3547
                                             20 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1602
                                             13 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1102
                                              4 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0     158
                                              3 BANK0      1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              0 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     350
                                              4 BANK0      1     1      0
                            _lcdInst
                          _send_byte
                        _send_nibble
 ---------------------------------------------------------------------------------
 (2) _lcdInst                                              1     1      0     158
                                              3 BANK0      1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (7) _send_byte                                            1     1      0     127
                                              2 BANK0      1     1      0
                        _send_nibble
 ---------------------------------------------------------------------------------
 (8) _send_nibble                                          1     1      0      65
                                              1 BANK0      1     1      0
                            _pulse_e
 ---------------------------------------------------------------------------------
 (9) _pulse_e                                              1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     512
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _ISR                                                 2     2      0    4226
                                             53 COMRAM     2     2      0
                               _echo
 ---------------------------------------------------------------------------------
 (14) _echo                                                4     4      0    4226
                                             49 COMRAM     4     4      0
                            ___awdiv
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (15) ___xxtofl                                           14    10      4     626
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (15) ___fltol                                            10     6      4     533
                                             39 COMRAM    10     6      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) ___fldiv                                            25    17      8    1855
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) ___awdiv                                             8     4      4    1212
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___wmul
   _initLCD
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _send_byte
       _send_nibble
         _pulse_e
     _send_nibble
       _pulse_e
   _lcdInst
     _send_byte
       _send_nibble
         _pulse_e
   _print_echo
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
   _trig

 _ISR (ROOT)
   _echo
     ___awdiv
     ___fldiv
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.3%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     70      78       5       93.8%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     37      50       1       63.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     118      34        0.0%
DATA                 0      0     118       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Apr 03 23:57:01 2019

           ___fldiv@aexp 0027             ___fldiv@bexp 0026                        _a 0040  
                      _b 004E             ___fldiv@sign 001F              __CFG_CPD$ON 000000  
           ___awdiv@sign 0006      ___wmul@multiplicand 0082              __CFG_BORV$3 000000  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000              __CFG_OSC$HS 000000                      l291 18D0  
                    l278 24EC                      l289 18C8                      _GIE 007F97  
           __CFG_CPB$OFF 000000                      _RB2 007C0A                      _RB3 007C0B  
                    _RB4 007C0C                      _RD0 007C18                      _RB5 007C0D  
                    _RD1 007C19                      _RB6 007C0E                      _RB7 007C0F  
                    _ISR 0008                      _abs 2782                      _pad 24BA  
                    _sum 0038                      wreg 000FE8             __CFG_LVP$OFF 000000  
                   ?_ISR 0001             ___fltol@exp1 0031             __CFG_WDT$OFF 000000  
                   l1001 27AC                     ?_abs 0092                     l3111 2666  
                   l3121 271C                     l3211 2206                     l3131 27C6  
                   l3221 2258                     l3125 2734                     l3141 24D4  
                   l3231 22B6                     l3215 222A                     l3151 2510  
                   l3129 27C0                     l3145 24E4                     l3235 22DC  
                   l3227 22A0                     l3219 2244                     l3155 253C  
                   l3147 24F6                     l3181 1EA0                     l3173 1E66  
                   l3245 18AC                     l3325 1DB6                     l3191 1EFC  
                   l3167 1E3E                     l3263 18FA                     l3319 1D7A  
                   l3335 1DDA                     l3273 19F4                     l3329 1DC2  
                   l3441 1AF2                     l3409 2380                     l3179 1E8C  
                   l3195 1F12                     l3259 18EA                     l3347 26CE  
                   l3419 23B4                     l3293 1A5A                     l3349 26F4  
                   l3429 23E8                     l3621 20E2                     l3613 20D0  
                   l3199 1F38                     l3471 1BDC                     l3463 1B98  
                   l3455 1B64                     l3447 1B20                     l3297 1A72  
                   l3625 20F2                     l3387 2312                     l3619 20DA  
                   l3637 2104                     ?_pad 0094                     l3487 1C54  
                   l3479 1C10                     l3399 234C                     l3655 216E  
                   l3647 2122                     STR_1 1007                     STR_2 1059  
                   STR_3 1039                     STR_4 1063                     STR_5 1049  
                   STR_6 106D                     STR_7 1018                     STR_8 1077  
                   STR_9 1029                     _LATD 000F8C                     u4100 1B40  
                   u4110 1B74                     u4200 1C74                     u4120 1B84  
                   u4040 23FE                     u4130 1BA8                     u4050 1AC4  
                   u4140 1BB8                     u4060 1AD4                     u1910 2792  
                   u4150 1BEC                     u4070 1B02                     u4160 1BFC  
                   u4080 1B12                     u4400 21C2                     u4170 1C20  
                   u4090 1B30                     u3700 1EA4                     u4180 1C30  
                   u4190 1C64                     u3800 1880                     u3570 265E  
                   u3555 280E                     u4507 23DA                     u4427 20C2  
                   u3556 2810                     u3900 1A38                     u4517 1AAA  
                   u4437 2328                     u3590 26A6                     u3830 18BE  
                   u4390 211A                     u4527 25E4                     u4447 233E  
                   _RBIE 007F93                     u3760 225C                     u3920 1A44  
                   _RBIF 007F90                     u4537 25FE                     u3681 1E6C  
                   u4457 235C                     u3850 18E4                     u4547 2610  
                   u4467 2372                     u3860 1A04                     u4557 2634  
                   u4477 2390                     u3790 187E                     u4567 27F4  
                   u4487 23A6                     u3880 1A26                     u3960 1CFC  
                   u4577 27FE                     u3881 1A24                     u4497 23C4  
                   u3890 1A34                     u3990 2310                     abs@a 0092  
                   _echo 1088                     _dbuf 0130                     _main 209A  
                   _dtoa 1854                     _meas 004C                     _prec 00F4  
                   _nout 00F0                     pad@i 009B                     pad@p 0098  
                   fsr1h 000FE2                     fsr2h 000FDA                     indf2 000FDF  
                   fsr1l 000FE1                     pad@w 009D                     fsr2l 000FD9  
                   _trig 22FE                     _sumf 0048                     btemp 0051  
                   prodh 000FF4                     prodl 000FF3                     start 000E  
          __CFG_IESO$OFF 000000          ___fldiv@new_exp 0020            __CFG_MCLRE$ON 000000  
           ___param_bank 000000                    ??_ISR 0036                    ??_abs 0094  
                  ??_pad 009A                    ?_echo 0001            ___fltol@sign1 0030  
        __end_of___aodiv 1F5A                    ?_main 0001                    ?_dtoa 009F  
        __end_of___aomod 22FE          __end_of___fldiv 1854          __end_of___awdiv 25DC  
                  STR_10 1081          __end_of___fltol 24BA                    ?_trig 0001  
        ___awdiv@divisor 0003                    _T1CON 000FCD                    i2l164 287A  
                  i2l191 15CA                    i2l910 173E                    i2l921 17AC  
                  i2l922 17A8          ___awdiv@counter 0005                    i2l981 1F98  
                  i2l988 2016             vfpfcnvrt@fmt 00C5                    _TMR1H 000FCF  
                  _TMR1L 000FCE                    _TRISB 000F93                    _TRISD 000F95  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000          __end_of_lcdInst 28D8  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000          __end_of_initLCD 264C  
         __CFG_EBTRB$OFF 000000                    _echoo 0050                    _flags 00F6  
                  _fputc 264C                    _fputs 2710                    pad@fp 0094  
                  _width 00F2                    _putch 28B8                    main@i 00EA  
                  main@k 00EC                    main@m 00EE                    dtoa@d 00A1  
                  dtoa@i 00C1                    dtoa@n 00B9                    dtoa@p 00B3  
                  dtoa@s 00B7                    dtoa@w 00B5                    tablat 000FF5  
        send_nibble@data 0081          __end_of_pulse_e 2812                    ttemp5 0052  
                  ttemp6 0055                    ttemp7 0059                    status 000FD8  
                  wtemp8 0052           __CFG_PBADEN$ON 000000          __initialization 274C  
           __end_of_echo 15CC             __end_of_main 21D8             __end_of_dtoa 1A9C  
           __end_of_trig 2400                   ??_echo 0032                   ??_main 00E6  
                 ??_dtoa 00A9                   ??_trig 0080            __activetblptr 000001  
                 _ADCON1 000FC1             ?_send_nibble 0001                   ?_fputc 0084  
                 ?_fputs 008D         ___awdiv@dividend 0001                   ?_putch 0001  
                 i2l2421 169E                   i2l2413 1686                   i2l2431 16EE  
                 i2l2407 1670                   i2l2521 2592                   i2l2601 1FC6  
                 i2l2523 259A                   i2l2515 257C                   i2l2451 1754  
                 i2l2603 1FCC                   i2l2541 25D2                   i2l2533 25BA  
                 i2l2509 256C                   i2l2445 173C                   i2l2613 203C  
                 i2l2605 1FD8                   i2l2439 1716                   i2l2375 15F8  
                 i2l2551 241E                   i2l2631 2088                   i2l2615 2048  
                 i2l2607 1FFE                   i2l2537 25C4                   i2l2481 1814  
                 i2l2457 1772                   i2l2721 130C                   i2l2491 184A  
                 i2l2395 1638                   i2l2379 15FC                   i2l2571 2478  
                 i2l2715 12B0                   i2l2723 1326                   i2l2493 184C  
                 i2l2485 183E                   i2l2477 17F0                   i2l2733 13A6  
                 i2l2399 163C                   i2l2567 2468                   i2l2585 24A8  
                 i2l2577 2480                   i2l2681 1162                   i2l2665 1106  
                 i2l2579 248C                   i2l2595 1FA8                   i2l2755 145E  
                 i2l2749 1402                   i2l2757 1478                   i2l2783 1554  
                 i2l2767 14F8                   i2l2687 11BA                   i2l2689 11D4  
                 i2l2699 1254                   i2l2789 15B0                   _TMR1ON 007E68  
                 _SSPADD 000FC8                   _SSPBUF 000FC9         __end_of___xxtofl 209A  
         __CFG_XINST$OFF 000000             vfprintf@cfmt 00D9                ??___aodiv 0090  
              ??___aomod 0090                   ___wmul 283A                ??___fldiv 0017  
              ??___awdiv 0005                ??___fltol 002C                   clear_0 2752  
                 clear_1 275E                   clear_2 276A         ___awdiv@quotient 0007  
              ??_lcdInst 0083                   _printf 2812                   pad@buf 0096  
                 dtoa@fp 009F                   _strlen 27B6                ??_initLCD 0084  
                 fputc@c 0084                   fputs@c 0091                   fputs@i 0092  
                 fputs@s 008D             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8         __end_of_vfprintf 2710  
              ??_pulse_e 0080             ___xxtofl@arg 000B    pulse_e@interruptState 0080  
           ___xxtofl@exp 000A             ___xxtofl@val 0001               __accesstop 0080  
__end_of__initialization 2770            ___rparam_used 000001               ___fltol@f1 0028  
         __pcstackCOMRAM 0001            __end_of_fputc 26BA            __end_of_fputs 274C  
          __end_of_putch 28C8                  ??_fputc 0088                  ??_fputs 0091  
                ??_putch 0083               __pbssBANK0 00F0               __pbssBANK1 0100  
                ?___wmul 0080       __size_of_send_byte 0018                  ?_printf 00DB  
                ?_strlen 0080                ?___xxtofl 0001       __size_of_vfpfcnvrt 0186  
             _dist_final 0100                  _SSPCON1 000FC6                  _SSPCON2 000FC5  
                _SSPSTAT 000FC7     __size_of_send_nibble 001A                  __Hparam 0000  
                __Lparam 0000                  ___aodiv 1E10                  ___aomod 21D8  
                ___fldiv 15CC                  ___awdiv 2558                  ___fltol 2400  
        __size_of___wmul 0028                ?_vfprintf 00D3             __psmallconst 1000  
        __CFG_STVREN$OFF 000000                  __pcinit 274C                  __ramtop 1000  
                _lcdInst 28C8                  __ptext0 209A                  __ptext1 22FE  
                __ptext2 1A9C                  __ptext3 2812                  __ptext4 26BA  
                __ptext5 1C8A                  __ptext6 1854                  __ptext7 24BA  
                __ptext8 27B6                  __ptext9 2710          __size_of_printf 0028  
        __size_of_strlen 002E                  _initLCD 25DC             __size_of_ISR 287E  
           __size_of_abs 0034             __size_of_pad 009E               ??___xxtofl 0005  
                _pulse_e 27E4           __pintcode_body 2862     end_of_initialization 2770  
  __end_of_LCD_SIZE_HORZ 1007        __end_of_send_byte 28B8    __end_of_LCD_SIZE_VERT 1006  
                fputc@fp 0086                  int_func 2862                  fputs@fp 008F  
      __end_of_vfpfcnvrt 1E10                  postdec2 000FDD                  postinc0 000FEE  
                postinc1 000FE6                  postinc2 000FDE               ??_vfprintf 00D9  
                strlen@a 0082                  strlen@s 0080               _print_echo 1A9C  
          ___xxtofl@sign 0009                _TRISBbits 000F93                _TRISCbits 000F94  
            ___fldiv@grs 0022              ___fldiv@rem 001B            send_byte@data 0082  
            vfpfcnvrt@ap 00C7              vfpfcnvrt@fp 00C3              vfpfcnvrt@ll 00CB  
         __end_of___wmul 2862           __end_of_printf 283A           __end_of_strlen 27E4  
    start_initialization 274C              __end_of_ISR 2886              __end_of_abs 27B6  
            __end_of_pad 2558              vfprintf@fmt 00D5                 ??___wmul 0084  
       __CFG_LPT1OSC$OFF 000000                 ??_printf 00E1                 ??_strlen 0082  
            ?_print_echo 0001                ___fldiv@a 0013                ___fldiv@b 000F  
            __pbssCOMRAM 0038            __pcstackBANK0 0080         ___aodiv@dividend 0080  
      __size_of___xxtofl 0140        __CFG_CCP2MX$PORTC 000000                __pintcode 0008  
               ?___aodiv 0080                 ?___aomod 0080                 ?___fldiv 000F  
               ?___awdiv 0001         ___aodiv@quotient 0092                 ?___fltol 0028  
               ?_lcdInst 0001        __size_of_vfprintf 0056                 ?_initLCD 0001  
            __smallconst 1000            ??_send_nibble 0081                 ?_pulse_e 0001  
         __size_of_fputc 006E           __size_of_fputs 003C           __size_of_putch 0010  
         ___wmul@product 0084                 _LATBbits 000F8A                 _LATDbits 000F8C  
              _send_byte 28A0      __size_of_print_echo 01EE           _LCD_LINE1_ADDR 1004  
         _LCD_LINE2_ADDR 1003           _LCD_LINE3_ADDR 1002           _LCD_LINE4_ADDR 1001  
               i2u304_40 1508                 i2u241_40 17A2                 i2u305_40 1518  
               i2u251_40 259E                 i2u245_40 17FE                 i2u246_40 1822  
               i2u254_40 240C                 i2u255_40 243C                 i2u255_45 2432  
               i2u274_40 1116                 i2u259_40 2492                 i2u267_40 2052  
               i2u275_40 1126                 i2u284_40 1264                 i2u285_40 1274  
               i2u294_40 13B6                 i2u295_40 13C6         __CFG_WDTPS$32768 000000  
              _vfpfcnvrt 1C8A        ___wmul@multiplier 0080   __end_of_LCD_LINE1_ADDR 1005  
 __end_of_LCD_LINE2_ADDR 1004   __end_of_LCD_LINE3_ADDR 1003   __end_of_LCD_LINE4_ADDR 1002  
    __end_of_send_nibble 28A0               ?_send_byte 0001                 __Hrparam 0000  
             vfprintf@ap 00D7                 __Lrparam 0000               vfprintf@fp 00D3  
           __Lsmallconst 1000       __CFG_BOREN$SBORDIS 000000         __size_of___aodiv 014A  
       __size_of___aomod 0126         __size_of___fldiv 0288         __size_of___awdiv 0084  
       __size_of___fltol 00BA               ?_vfpfcnvrt 00C3          ___aodiv@divisor 0088  
        ___aodiv@counter 0090         __size_of_lcdInst 0010         __size_of_initLCD 0070  
               ___xxtofl 1F5A                 _dtoa$516 00B1                 __ptext10 264C  
               __ptext11 28B8                 __ptext20 283A                 __ptext12 2782  
               __ptext13 21D8                 __ptext22 1088                 __ptext14 1E10  
               __ptext23 1F5A                 __ptext15 25DC                 __ptext24 2400  
               __ptext16 28C8                 __ptext25 15CC                 __ptext17 28A0  
               __ptext26 2558                 __ptext18 2886                 __ptext19 27E4  
       __size_of_pulse_e 002E            __size_of_echo 0544            __size_of_main 013E  
          __size_of_dtoa 0248            __size_of_trig 0102                 int$flags 0051  
               _vfprintf 26BA                printf@fmt 00DB         ___aomod@dividend 0080  
           ??_print_echo 00E5                putch@data 0083               _INTCONbits 000FF2  
            _send_nibble 2886                 intlevel2 0000            _LCD_SIZE_HORZ 1006  
          _LCD_SIZE_VERT 1005              ??_send_byte 0082       __end_of_print_echo 1C8A  
               printf@ap 00E3          ___aomod@divisor 0088              ??_vfpfcnvrt 00C9  
            lcdInst@data 0083          ___aomod@counter 0090              _SSPCON1bits 000FC6  
            _SSPCON2bits 000FC5             ___aodiv@sign 0091             ___aomod@sign 0091  
