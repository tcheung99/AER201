

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Mar 10 09:02:16 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1,inline
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35  0000                     
    36                           ; Version 2.05
    37                           ; Generated 20/12/2018 GMT
    38                           ; 
    39                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F4620 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     
    71                           	psect	smallconst
    72  001000                     __psmallconst:
    73                           	opt callstack 0
    74  001000  00                 	db	0
    75  001001                     _LCD_LINE4_ADDR:
    76                           	opt callstack 0
    77  001001  50                 	db	80
    78  001002                     __end_of_LCD_LINE4_ADDR:
    79                           	opt callstack 0
    80  001002                     _LCD_LINE3_ADDR:
    81                           	opt callstack 0
    82  001002  10                 	db	16
    83  001003                     __end_of_LCD_LINE3_ADDR:
    84                           	opt callstack 0
    85  001003  40                 	db	64
    86  001004                     __end_of_LCD_LINE2_ADDR:
    87                           	opt callstack 0
    88  001004                     _LCD_LINE1_ADDR:
    89                           	opt callstack 0
    90  001004  00                 	db	0
    91  001005                     __end_of_LCD_LINE1_ADDR:
    92                           	opt callstack 0
    93  001005                     _LCD_SIZE_VERT:
    94                           	opt callstack 0
    95  001005  04                 	db	4
    96  001006                     __end_of_LCD_SIZE_VERT:
    97                           	opt callstack 0
    98  001006                     _LCD_SIZE_HORZ:
    99                           	opt callstack 0
   100  001006  10                 	db	16
   101  001007                     __end_of_LCD_SIZE_HORZ:
   102                           	opt callstack 0
   103  0000                     _TMR1L	set	4046
   104  0000                     _TMR1H	set	4047
   105  0000                     _T1CON	set	4045
   106  0000                     _TRISD	set	3989
   107  0000                     _TRISB	set	3987
   108  0000                     _LATD	set	3980
   109  0000                     _LATDbits	set	3980
   110  0000                     _INTCONbits	set	4082
   111  0000                     _SSPBUF	set	4041
   112  0000                     _SSPCON2bits	set	4037
   113  0000                     _SSPCON1	set	4038
   114  0000                     _SSPADD	set	4040
   115  0000                     _TRISCbits	set	3988
   116  0000                     _SSPCON1bits	set	4038
   117  0000                     _SSPCON2	set	4037
   118  0000                     _SSPSTAT	set	4039
   119  0000                     _TMR1ON	set	32360
   120  0000                     _RB5	set	31757
   121  0000                     _RB0	set	31752
   122  001007                     STR_6:
   123  001007  20                 	db	32
   124  001008  6F                 	db	111	;'o'
   125  001009  75                 	db	117	;'u'
   126  00100A  74                 	db	116	;'t'
   127  00100B  20                 	db	32
   128  00100C  6F                 	db	111	;'o'
   129  00100D  66                 	db	102	;'f'
   130  00100E  20                 	db	32
   131  00100F  72                 	db	114	;'r'
   132  001010  61                 	db	97	;'a'
   133  001011  6E                 	db	110	;'n'
   134  001012  67                 	db	103	;'g'
   135  001013  65                 	db	101	;'e'
   136  001014  3A                 	db	58	;':'
   137  001015  20                 	db	32
   138  001016  00                 	db	0
   139  001017                     STR_3:
   140  001017  20                 	db	32
   141  001018  44                 	db	68	;'D'
   142  001019  69                 	db	105	;'i'
   143  00101A  73                 	db	115	;'s'
   144  00101B  74                 	db	116	;'t'
   145  00101C  61                 	db	97	;'a'
   146  00101D  6E                 	db	110	;'n'
   147  00101E  63                 	db	99	;'c'
   148  00101F  65                 	db	101	;'e'
   149  001020  3A                 	db	58	;':'
   150  001021  20                 	db	32
   151  001022  25                 	db	37
   152  001023  64                 	db	100	;'d'
   153  001024  00                 	db	0
   154  001025                     STR_2:
   155  001025  20                 	db	32
   156  001026  66                 	db	102	;'f'
   157  001027  61                 	db	97	;'a'
   158  001028  64                 	db	100	;'d'
   159  001029  73                 	db	115	;'s'
   160  00102A  67                 	db	103	;'g'
   161  00102B  3A                 	db	58	;':'
   162  00102C  20                 	db	32
   163  00102D  25                 	db	37
   164  00102E  64                 	db	100	;'d'
   165  00102F  00                 	db	0
   166  001030                     STR_1:
   167  001030  20                 	db	32
   168  001031  77                 	db	119	;'w'
   169  001032  68                 	db	104	;'h'
   170  001033  61                 	db	97	;'a'
   171  001034  74                 	db	116	;'t'
   172  001035  3B                 	db	59	;';'
   173  001036  65                 	db	101	;'e'
   174  001037  72                 	db	114	;'r'
   175  001038  00                 	db	0
   176  001039                     STR_5:
   177  001039  25                 	db	37
   178  00103A  64                 	db	100	;'d'
   179  00103B  25                 	db	37
   180  00103C  64                 	db	100	;'d'
   181  00103D  25                 	db	37
   182  00103E  64                 	db	100	;'d'
   183  00103F  00                 	db	0
   184  0000                     
   185                           ; #config settings
   186  001040  00                 	db	0	; dummy byte at the end
   187  0000                     
   188                           	psect	cinit
   189  0020B2                     __pcinit:
   190                           	opt callstack 0
   191  0020B2                     start_initialization:
   192                           	opt callstack 0
   193  0020B2                     __initialization:
   194                           	opt callstack 0
   195                           
   196                           ; Clear objects allocated to BANK0 (32 bytes)
   197  0020B2  EE00  F080         	lfsr	0,__pbssBANK0
   198  0020B6  0E20               	movlw	32
   199  0020B8                     clear_0:
   200  0020B8  6AEE               	clrf	postinc0,c
   201  0020BA  06E8               	decf	wreg,f,c
   202  0020BC  E1FD               	bnz	clear_0
   203                           
   204                           ; Clear objects allocated to COMRAM (16 bytes)
   205  0020BE  EE00  F070         	lfsr	0,__pbssCOMRAM
   206  0020C2  0E10               	movlw	16
   207  0020C4                     clear_1:
   208  0020C4  6AEE               	clrf	postinc0,c
   209  0020C6  06E8               	decf	wreg,f,c
   210  0020C8  E1FD               	bnz	clear_1
   211  0020CA                     end_of_initialization:
   212                           	opt callstack 0
   213  0020CA                     __end_of__initialization:
   214                           	opt callstack 0
   215  0020CA  0E00               	movlw	low (__Lsmallconst shr (0+16))
   216  0020CC  6EF8               	movwf	tblptru,c
   217  0020CE  0E10               	movlw	high __Lsmallconst
   218  0020D0  6EF7               	movwf	tblptrh,c
   219  0020D2  0100               	movlb	0
   220  0020D4  EF65  F009         	goto	_main	;jump to C main() function
   221                           
   222                           	psect	bssCOMRAM
   223  000070                     __pbssCOMRAM:
   224                           	opt callstack 0
   225  000070                     _dist_final:
   226                           	opt callstack 0
   227  000070                     	ds	6
   228  000076                     _nout:
   229                           	opt callstack 0
   230  000076                     	ds	2
   231  000078                     _width:
   232                           	opt callstack 0
   233  000078                     	ds	2
   234  00007A                     _prec:
   235                           	opt callstack 0
   236  00007A                     	ds	2
   237  00007C                     _flags:
   238                           	opt callstack 0
   239  00007C                     	ds	2
   240  00007E                     _a:
   241                           	opt callstack 0
   242  00007E                     	ds	2
   243                           
   244                           	psect	bssBANK0
   245  000080                     __pbssBANK0:
   246                           	opt callstack 0
   247  000080                     _dbuf:
   248                           	opt callstack 0
   249  000080                     	ds	32
   250                           
   251                           	psect	cstackCOMRAM
   252  000001                     __pcstackCOMRAM:
   253                           	opt callstack 0
   254  000001                     ?_strlen:
   255                           	opt callstack 0
   256  000001                     ?___awdiv:
   257                           	opt callstack 0
   258  000001                     ?___awmod:
   259                           	opt callstack 0
   260  000001                     ?___xxtofl:
   261                           	opt callstack 0
   262  000001                     ?___aodiv:
   263                           	opt callstack 0
   264  000001                     ?___aomod:
   265                           	opt callstack 0
   266  000001                     pulse_e@interruptState:
   267                           	opt callstack 0
   268  000001                     ___awdiv@dividend:
   269                           	opt callstack 0
   270  000001                     ___awmod@dividend:
   271                           	opt callstack 0
   272  000001                     strlen@s:
   273                           	opt callstack 0
   274  000001                     ___xxtofl@val:
   275                           	opt callstack 0
   276  000001                     ___aodiv@dividend:
   277                           	opt callstack 0
   278  000001                     ___aomod@dividend:
   279                           	opt callstack 0
   280                           
   281                           ; 8 bytes @ 0x0
   282  000001                     	ds	1
   283  000002                     send_nibble@data:
   284                           	opt callstack 0
   285                           
   286                           ; 1 bytes @ 0x1
   287  000002                     	ds	1
   288  000003                     send_byte@data:
   289                           	opt callstack 0
   290  000003                     ___awdiv@divisor:
   291                           	opt callstack 0
   292  000003                     ___awmod@divisor:
   293                           	opt callstack 0
   294  000003                     strlen@a:
   295                           	opt callstack 0
   296                           
   297                           ; 2 bytes @ 0x2
   298  000003                     	ds	1
   299  000004                     lcdInst@data:
   300                           	opt callstack 0
   301  000004                     putch@data:
   302                           	opt callstack 0
   303                           
   304                           ; 1 bytes @ 0x3
   305  000004                     	ds	1
   306  000005                     ??_initLCD:
   307  000005                     ??___xxtofl:
   308  000005                     ___awdiv@counter:
   309                           	opt callstack 0
   310  000005                     ___awmod@counter:
   311                           	opt callstack 0
   312  000005                     fputc@c:
   313                           	opt callstack 0
   314                           
   315                           ; 2 bytes @ 0x4
   316  000005                     	ds	1
   317  000006                     ___awdiv@sign:
   318                           	opt callstack 0
   319  000006                     ___awmod@sign:
   320                           	opt callstack 0
   321                           
   322                           ; 1 bytes @ 0x5
   323  000006                     	ds	1
   324  000007                     ___awdiv@quotient:
   325                           	opt callstack 0
   326  000007                     fputc@fp:
   327                           	opt callstack 0
   328                           
   329                           ; 2 bytes @ 0x6
   330  000007                     	ds	2
   331  000009                     ??_fputc:
   332  000009                     ___xxtofl@sign:
   333                           	opt callstack 0
   334  000009                     ___aodiv@divisor:
   335                           	opt callstack 0
   336  000009                     ___aomod@divisor:
   337                           	opt callstack 0
   338                           
   339                           ; 8 bytes @ 0x8
   340  000009                     	ds	1
   341  00000A                     ___xxtofl@exp:
   342                           	opt callstack 0
   343                           
   344                           ; 1 bytes @ 0x9
   345  00000A                     	ds	1
   346  00000B                     ___xxtofl@arg:
   347                           	opt callstack 0
   348                           
   349                           ; 4 bytes @ 0xA
   350  00000B                     	ds	3
   351  00000E                     fputs@s:
   352                           	opt callstack 0
   353                           
   354                           ; 2 bytes @ 0xD
   355  00000E                     	ds	1
   356  00000F                     ?___fldiv:
   357                           	opt callstack 0
   358  00000F                     ___fldiv@b:
   359                           	opt callstack 0
   360                           
   361                           ; 4 bytes @ 0xE
   362  00000F                     	ds	1
   363  000010                     fputs@fp:
   364                           	opt callstack 0
   365                           
   366                           ; 2 bytes @ 0xF
   367  000010                     	ds	1
   368  000011                     ___aodiv@counter:
   369                           	opt callstack 0
   370  000011                     ___aomod@counter:
   371                           	opt callstack 0
   372                           
   373                           ; 1 bytes @ 0x10
   374  000011                     	ds	1
   375  000012                     ___aodiv@sign:
   376                           	opt callstack 0
   377  000012                     ___aomod@sign:
   378                           	opt callstack 0
   379  000012                     fputs@c:
   380                           	opt callstack 0
   381                           
   382                           ; 1 bytes @ 0x11
   383  000012                     	ds	1
   384  000013                     ?_abs:
   385                           	opt callstack 0
   386  000013                     abs@a:
   387                           	opt callstack 0
   388  000013                     fputs@i:
   389                           	opt callstack 0
   390  000013                     ___fldiv@a:
   391                           	opt callstack 0
   392  000013                     ___aodiv@quotient:
   393                           	opt callstack 0
   394                           
   395                           ; 8 bytes @ 0x12
   396  000013                     	ds	2
   397  000015                     ??_abs:
   398  000015                     ?_pad:
   399                           	opt callstack 0
   400  000015                     pad@fp:
   401                           	opt callstack 0
   402                           
   403                           ; 2 bytes @ 0x14
   404  000015                     	ds	2
   405  000017                     ??___fldiv:
   406  000017                     pad@buf:
   407                           	opt callstack 0
   408                           
   409                           ; 2 bytes @ 0x16
   410  000017                     	ds	2
   411  000019                     pad@p:
   412                           	opt callstack 0
   413                           
   414                           ; 2 bytes @ 0x18
   415  000019                     	ds	2
   416  00001B                     ??_pad:
   417  00001B                     ___fldiv@rem:
   418                           	opt callstack 0
   419                           
   420                           ; 4 bytes @ 0x1A
   421  00001B                     	ds	1
   422  00001C                     pad@i:
   423                           	opt callstack 0
   424                           
   425                           ; 2 bytes @ 0x1B
   426  00001C                     	ds	2
   427  00001E                     pad@w:
   428                           	opt callstack 0
   429                           
   430                           ; 2 bytes @ 0x1D
   431  00001E                     	ds	1
   432  00001F                     ___fldiv@sign:
   433                           	opt callstack 0
   434                           
   435                           ; 1 bytes @ 0x1E
   436  00001F                     	ds	1
   437  000020                     ?_dtoa:
   438                           	opt callstack 0
   439  000020                     dtoa@fp:
   440                           	opt callstack 0
   441  000020                     ___fldiv@new_exp:
   442                           	opt callstack 0
   443                           
   444                           ; 2 bytes @ 0x1F
   445  000020                     	ds	2
   446  000022                     ___fldiv@grs:
   447                           	opt callstack 0
   448  000022                     dtoa@d:
   449                           	opt callstack 0
   450                           
   451                           ; 8 bytes @ 0x21
   452  000022                     	ds	4
   453  000026                     ___fldiv@bexp:
   454                           	opt callstack 0
   455                           
   456                           ; 1 bytes @ 0x25
   457  000026                     	ds	1
   458  000027                     ___fldiv@aexp:
   459                           	opt callstack 0
   460                           
   461                           ; 1 bytes @ 0x26
   462  000027                     	ds	1
   463  000028                     ?___fltol:
   464                           	opt callstack 0
   465  000028                     ___fltol@f1:
   466                           	opt callstack 0
   467                           
   468                           ; 4 bytes @ 0x27
   469  000028                     	ds	2
   470  00002A                     ??_dtoa:
   471                           
   472                           ; 1 bytes @ 0x29
   473  00002A                     	ds	2
   474  00002C                     ??___fltol:
   475                           
   476                           ; 1 bytes @ 0x2B
   477  00002C                     	ds	4
   478  000030                     ___fltol@sign1:
   479                           	opt callstack 0
   480                           
   481                           ; 1 bytes @ 0x2F
   482  000030                     	ds	1
   483  000031                     ___fltol@exp1:
   484                           	opt callstack 0
   485                           
   486                           ; 1 bytes @ 0x30
   487  000031                     	ds	1
   488  000032                     _dtoa$376:
   489                           	opt callstack 0
   490                           
   491                           ; 2 bytes @ 0x31
   492  000032                     	ds	2
   493  000034                     dtoa@p:
   494                           	opt callstack 0
   495                           
   496                           ; 2 bytes @ 0x33
   497  000034                     	ds	2
   498  000036                     dtoa@w:
   499                           	opt callstack 0
   500                           
   501                           ; 2 bytes @ 0x35
   502  000036                     	ds	2
   503  000038                     dtoa@s:
   504                           	opt callstack 0
   505                           
   506                           ; 2 bytes @ 0x37
   507  000038                     	ds	2
   508  00003A                     dtoa@n:
   509                           	opt callstack 0
   510                           
   511                           ; 8 bytes @ 0x39
   512  00003A                     	ds	8
   513  000042                     dtoa@i:
   514                           	opt callstack 0
   515                           
   516                           ; 2 bytes @ 0x41
   517  000042                     	ds	2
   518  000044                     ?_vfpfcnvrt:
   519                           	opt callstack 0
   520  000044                     vfpfcnvrt@fp:
   521                           	opt callstack 0
   522                           
   523                           ; 2 bytes @ 0x43
   524  000044                     	ds	2
   525  000046                     vfpfcnvrt@fmt:
   526                           	opt callstack 0
   527                           
   528                           ; 2 bytes @ 0x45
   529  000046                     	ds	2
   530  000048                     vfpfcnvrt@ap:
   531                           	opt callstack 0
   532                           
   533                           ; 2 bytes @ 0x47
   534  000048                     	ds	2
   535  00004A                     ??_vfpfcnvrt:
   536                           
   537                           ; 1 bytes @ 0x49
   538  00004A                     	ds	2
   539  00004C                     vfpfcnvrt@ll:
   540                           	opt callstack 0
   541                           
   542                           ; 8 bytes @ 0x4B
   543  00004C                     	ds	8
   544  000054                     ?_vfprintf:
   545                           	opt callstack 0
   546  000054                     vfprintf@fp:
   547                           	opt callstack 0
   548                           
   549                           ; 2 bytes @ 0x53
   550  000054                     	ds	2
   551  000056                     vfprintf@fmt:
   552                           	opt callstack 0
   553                           
   554                           ; 2 bytes @ 0x55
   555  000056                     	ds	2
   556  000058                     vfprintf@ap:
   557                           	opt callstack 0
   558                           
   559                           ; 2 bytes @ 0x57
   560  000058                     	ds	2
   561  00005A                     vfprintf@cfmt:
   562                           	opt callstack 0
   563                           
   564                           ; 2 bytes @ 0x59
   565  00005A                     	ds	2
   566  00005C                     ?_printf:
   567                           	opt callstack 0
   568  00005C                     printf@fmt:
   569                           	opt callstack 0
   570                           
   571                           ; 2 bytes @ 0x5B
   572  00005C                     	ds	8
   573  000064                     
   574                           ; 1 bytes @ 0x63
   575  000064                     	ds	2
   576  000066                     printf@ap:
   577                           	opt callstack 0
   578                           
   579                           ; 2 bytes @ 0x65
   580  000066                     	ds	2
   581  000068                     ??_main:
   582                           
   583                           ; 1 bytes @ 0x67
   584  000068                     	ds	4
   585  00006C                     main@i:
   586                           	opt callstack 0
   587                           
   588                           ; 2 bytes @ 0x6B
   589  00006C                     	ds	2
   590  00006E                     main@a:
   591                           	opt callstack 0
   592                           
   593                           ; 2 bytes @ 0x6D
   594  00006E                     	ds	2
   595                           
   596 ;;
   597 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   598 ;;
   599 ;; *************** function _main *****************
   600 ;; Defined at:
   601 ;;		line 145 in file "main.c"
   602 ;; Parameters:    Size  Location     Type
   603 ;;		None
   604 ;; Auto vars:     Size  Location     Type
   605 ;;  i               2  107[COMRAM] int 
   606 ;;  a               2  109[COMRAM] int 
   607 ;; Return value:  Size  Location     Type
   608 ;;                  1    wreg      void 
   609 ;; Registers used:
   610 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   611 ;; Tracked objects:
   612 ;;		On entry : 0/0
   613 ;;		On exit  : 0/0
   614 ;;		Unchanged: 0/0
   615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   617 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   618 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   619 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   620 ;;Total ram usage:        8 bytes
   621 ;; Hardware stack levels required when called:   11
   622 ;; This function calls:
   623 ;;		___awdiv
   624 ;;		___awmod
   625 ;;		___fldiv
   626 ;;		___fltol
   627 ;;		___xxtofl
   628 ;;		_initLCD
   629 ;;		_lcdInst
   630 ;;		_printf
   631 ;; This function is called by:
   632 ;;		Startup code after reset
   633 ;; This function uses a non-reentrant model
   634 ;;
   635                           
   636                           	psect	text0
   637  0012CA                     __ptext0:
   638                           	opt callstack 0
   639  0012CA                     _main:
   640                           	opt callstack 20
   641                           
   642                           ;main.c: 147:   int a;;main.c: 149:   TRISB = 0b00100000;
   643                           
   644                           ;incstack = 0
   645  0012CA  0E20               	movlw	32
   646  0012CC  6E93               	movwf	3987,c	;volatile
   647                           
   648                           ;main.c: 150:   TRISD = 0x00;
   649  0012CE  0E00               	movlw	0
   650  0012D0  6E95               	movwf	3989,c	;volatile
   651                           
   652                           ;main.c: 154:   T1CON = 0x10;
   653  0012D2  0E10               	movlw	16
   654  0012D4  6ECD               	movwf	4045,c	;volatile
   655  0012D6                     l2308:
   656                           
   657                           ;main.c: 158:   {;main.c: 159:     initLCD();
   658  0012D6  EC9C  F00F         	call	_initLCD	;wreg free
   659                           
   660                           ;main.c: 161:     TMR1H = 0;
   661  0012DA  0E00               	movlw	0
   662  0012DC  6ECF               	movwf	4047,c	;volatile
   663                           
   664                           ;main.c: 162:     TMR1L = 0;
   665  0012DE  0E00               	movlw	0
   666  0012E0  6ECE               	movwf	4046,c	;volatile
   667                           
   668                           ;main.c: 164:     RB0 = 1;
   669  0012E2  8081               	bsf	3969,0,c	;volatile
   670                           
   671                           ;main.c: 165:     _delay((unsigned long)((10)*(10000000/4000000.0)));
   672  0012E4  0E08               	movlw	8
   673  0012E6                     u2137:
   674  0012E6  2EE8               	decfsz	wreg,f,c
   675  0012E8  D7FE               	bra	u2137
   676  0012EA  F000               	nop	
   677                           
   678                           ;main.c: 166:     RB0 = 0;
   679  0012EC  9081               	bcf	3969,0,c	;volatile
   680  0012EE                     l124:
   681  0012EE  AA81               	btfss	3969,5,c	;volatile
   682  0012F0  D7FE               	goto	l124
   683                           
   684                           ;main.c: 169:     TMR1ON = 1;
   685  0012F2  80CD               	bsf	4045,0,c	;volatile
   686                           
   687                           ;main.c: 173:     _delay((unsigned long)((1000)*(10000000/4000.0)));
   688  0012F4  0E0D               	movlw	13
   689  0012F6  6E69               	movwf	(??_main+1)& (0+255),c
   690  0012F8  0EAF               	movlw	175
   691  0012FA  6E68               	movwf	??_main& (0+255),c
   692  0012FC  0EB6               	movlw	182
   693  0012FE                     u2147:
   694  0012FE  2EE8               	decfsz	wreg,f,c
   695  001300  D7FE               	bra	u2147
   696  001302  2E68               	decfsz	??_main& (0+255),f,c
   697  001304  D7FC               	bra	u2147
   698  001306  2E69               	decfsz	(??_main+1)& (0+255),f,c
   699  001308  D7FA               	bra	u2147
   700  00130A  D000               	nop2	
   701                           
   702                           ;main.c: 174:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
   703  00130C  0E01               	movlw	1
   704  00130E  EC99  F010         	call	_lcdInst
   705  001312  0E11               	movlw	17
   706  001314  6E68               	movwf	??_main& (0+255),c
   707  001316  0E3A               	movlw	58
   708  001318                     u2157:
   709  001318  2EE8               	decfsz	wreg,f,c
   710  00131A  D7FE               	bra	u2157
   711  00131C  2E68               	decfsz	??_main& (0+255),f,c
   712  00131E  D7FC               	bra	u2157
   713  001320  D000               	nop2	
   714                           
   715                           ;main.c: 175:     printf(" what;er");
   716  001322  0E30               	movlw	low STR_1
   717  001324  6E5C               	movwf	printf@fmt,c
   718  001326  0E10               	movlw	high STR_1
   719  001328  6E5D               	movwf	printf@fmt+1,c
   720  00132A  EC6C  F010         	call	_printf	;wreg free
   721  00132E                     l127:
   722  00132E  BA81               	btfsc	3969,5,c	;volatile
   723  001330  D7FE               	goto	l127
   724                           
   725                           ;main.c: 177:     TMR1ON = 0;
   726  001332  90CD               	bcf	4045,0,c	;volatile
   727                           
   728                           ;main.c: 178:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
   729  001334  0E01               	movlw	1
   730  001336  EC99  F010         	call	_lcdInst
   731  00133A  0E11               	movlw	17
   732  00133C  6E68               	movwf	??_main& (0+255),c
   733  00133E  0E3A               	movlw	58
   734  001340                     u2167:
   735  001340  2EE8               	decfsz	wreg,f,c
   736  001342  D7FE               	bra	u2167
   737  001344  2E68               	decfsz	??_main& (0+255),f,c
   738  001346  D7FC               	bra	u2167
   739  001348  D000               	nop2	
   740                           
   741                           ;main.c: 179:    printf(" fadsg: %d");
   742  00134A  0E25               	movlw	low STR_2
   743  00134C  6E5C               	movwf	printf@fmt,c
   744  00134E  0E10               	movlw	high STR_2
   745  001350  6E5D               	movwf	printf@fmt+1,c
   746  001352  EC6C  F010         	call	_printf	;wreg free
   747                           
   748                           ;main.c: 180:     a = (TMR1L | (TMR1H<<8));
   749  001356  50CF               	movf	4047,w,c	;volatile
   750  001358  6E69               	movwf	(??_main+1)& (0+255),c
   751  00135A  6A68               	clrf	??_main& (0+255),c
   752  00135C  50CE               	movf	4046,w,c	;volatile
   753  00135E  6E6A               	movwf	(??_main+2)& (0+255),c
   754  001360  6A6B               	clrf	(??_main+3)& (0+255),c
   755  001362  5068               	movf	??_main,w,c
   756  001364  106A               	iorwf	??_main+2,w,c
   757  001366  6E6E               	movwf	main@a,c
   758  001368  5069               	movf	??_main+1,w,c
   759  00136A  106B               	iorwf	??_main+3,w,c
   760  00136C  6E6F               	movwf	main@a+1,c
   761                           
   762                           ;main.c: 181:     a = a/58.82;
   763  00136E  0EAE               	movlw	174
   764  001370  6E13               	movwf	___fldiv@a,c
   765  001372  0E47               	movlw	71
   766  001374  6E14               	movwf	___fldiv@a+1,c
   767  001376  0E6B               	movlw	107
   768  001378  6E15               	movwf	___fldiv@a+2,c
   769  00137A  0E42               	movlw	66
   770  00137C  6E16               	movwf	___fldiv@a+3,c
   771  00137E  C06E  F001         	movff	main@a,___xxtofl@val
   772  001382  C06F  F002         	movff	main@a+1,___xxtofl@val+1
   773  001386  0E00               	movlw	0
   774  001388  BE02               	btfsc	___xxtofl@val+1,7,c
   775  00138A  0EFF               	movlw	-1
   776  00138C  6E03               	movwf	___xxtofl@val+2,c
   777  00138E  6E04               	movwf	___xxtofl@val+3,c
   778  001390  0E01               	movlw	1
   779  001392  EC12  F00D         	call	___xxtofl
   780  001396  C001  F00F         	movff	?___xxtofl,___fldiv@b
   781  00139A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
   782  00139E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
   783  0013A2  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
   784  0013A6  EC21  F008         	call	___fldiv	;wreg free
   785  0013AA  C00F  F028         	movff	?___fldiv,___fltol@f1
   786  0013AE  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
   787  0013B2  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
   788  0013B6  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
   789  0013BA  EC44  F00E         	call	___fltol	;wreg free
   790  0013BE  C028  F06E         	movff	?___fltol,main@a
   791  0013C2  C029  F06F         	movff	?___fltol+1,main@a+1
   792                           
   793                           ;main.c: 182:     a = a + 1;
   794  0013C6  0E01               	movlw	1
   795  0013C8  246E               	addwf	main@a,w,c
   796  0013CA  6E6E               	movwf	main@a,c
   797  0013CC  0E00               	movlw	0
   798  0013CE  206F               	addwfc	main@a+1,w,c
   799  0013D0  6E6F               	movwf	main@a+1,c
   800                           
   801                           ;main.c: 183: { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
   802  0013D2  0E01               	movlw	1
   803  0013D4  EC99  F010         	call	_lcdInst
   804  0013D8  0E11               	movlw	17
   805  0013DA  6E68               	movwf	??_main& (0+255),c
   806  0013DC  0E3A               	movlw	58
   807  0013DE                     u2177:
   808  0013DE  2EE8               	decfsz	wreg,f,c
   809  0013E0  D7FE               	bra	u2177
   810  0013E2  2E68               	decfsz	??_main& (0+255),f,c
   811  0013E4  D7FC               	bra	u2177
   812  0013E6  D000               	nop2	
   813                           
   814                           ;main.c: 184:    printf(" Distance: %d", a);
   815  0013E8  0E17               	movlw	low STR_3
   816  0013EA  6E5C               	movwf	printf@fmt,c
   817  0013EC  0E10               	movlw	high STR_3
   818  0013EE  6E5D               	movwf	printf@fmt+1,c
   819  0013F0  C06E  F05E         	movff	main@a,?_printf+2
   820  0013F4  C06F  F05F         	movff	main@a+1,?_printf+3
   821  0013F8  EC6C  F010         	call	_printf	;wreg free
   822                           
   823                           ;main.c: 186:     if(a>=2 && a<=400){
   824  0013FC  BE6F               	btfsc	main@a+1,7,c
   825  0013FE  D070               	goto	l2374
   826  001400  506F               	movf	main@a+1,w,c
   827  001402  E104               	bnz	u2100
   828  001404  0E02               	movlw	2
   829  001406  5C6E               	subwf	main@a,w,c
   830  001408  A0D8               	btfss	status,0,c
   831  00140A  D06A               	goto	l2374
   832  00140C                     u2100:
   833  00140C  BE6F               	btfsc	main@a+1,7,c
   834  00140E  D006               	goto	u2110
   835  001410  0E91               	movlw	145
   836  001412  5C6E               	subwf	main@a,w,c
   837  001414  0E01               	movlw	1
   838  001416  586F               	subwfb	main@a+1,w,c
   839  001418  B0D8               	btfsc	status,0,c
   840  00141A  D062               	goto	l2374
   841  00141C                     u2110:
   842                           
   843                           ;main.c: 187:    { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
   844  00141C  0E01               	movlw	1
   845  00141E  EC99  F010         	call	_lcdInst
   846  001422  0E11               	movlw	17
   847  001424  6E68               	movwf	??_main& (0+255),c
   848  001426  0E3A               	movlw	58
   849  001428                     u2187:
   850  001428  2EE8               	decfsz	wreg,f,c
   851  00142A  D7FE               	bra	u2187
   852  00142C  2E68               	decfsz	??_main& (0+255),f,c
   853  00142E  D7FC               	bra	u2187
   854  001430  D000               	nop2	
   855                           
   856                           ;main.c: 188:    printf(" Distance: %d", a);
   857  001432  0E17               	movlw	low STR_3
   858  001434  6E5C               	movwf	printf@fmt,c
   859  001436  0E10               	movlw	high STR_3
   860  001438  6E5D               	movwf	printf@fmt+1,c
   861  00143A  C06E  F05E         	movff	main@a,?_printf+2
   862  00143E  C06F  F05F         	movff	main@a+1,?_printf+3
   863  001442  EC6C  F010         	call	_printf	;wreg free
   864                           
   865                           ;main.c: 189:    for (int i=0; i<3; i++){
   866  001446  0E00               	movlw	0
   867  001448  6E6D               	movwf	main@i+1,c
   868  00144A  0E00               	movlw	0
   869  00144C  6E6C               	movwf	main@i,c
   870  00144E                     l2362:
   871                           
   872                           ;main.c: 190:     dist_final[i] = a%10 + 48;
   873  00144E  C06E  F001         	movff	main@a,___awmod@dividend
   874  001452  C06F  F002         	movff	main@a+1,___awmod@dividend+1
   875  001456  0E00               	movlw	0
   876  001458  6E04               	movwf	___awmod@divisor+1,c
   877  00145A  0E0A               	movlw	10
   878  00145C  6E03               	movwf	___awmod@divisor,c
   879  00145E  EC2E  F00F         	call	___awmod	;wreg free
   880  001462  0E30               	movlw	48
   881  001464  2601               	addwf	?___awmod,f,c
   882  001466  0E00               	movlw	0
   883  001468  2202               	addwfc	?___awmod+1,f,c
   884  00146A  90D8               	bcf	status,0,c
   885  00146C  346C               	rlcf	main@i,w,c
   886  00146E  6ED9               	movwf	fsr2l,c
   887  001470  346D               	rlcf	main@i+1,w,c
   888  001472  6EDA               	movwf	fsr2h,c
   889  001474  0E70               	movlw	low _dist_final
   890  001476  26D9               	addwf	fsr2l,f,c
   891  001478  0E00               	movlw	high _dist_final
   892  00147A  22DA               	addwfc	fsr2h,f,c
   893  00147C  C001  FFDE         	movff	?___awmod,postinc2
   894  001480  C002  FFDD         	movff	?___awmod+1,postdec2
   895                           
   896                           ;main.c: 191:     a = a/10;
   897  001484  C06E  F001         	movff	main@a,___awdiv@dividend
   898  001488  C06F  F002         	movff	main@a+1,___awdiv@dividend+1
   899  00148C  0E00               	movlw	0
   900  00148E  6E04               	movwf	___awdiv@divisor+1,c
   901  001490  0E0A               	movlw	10
   902  001492  6E03               	movwf	___awdiv@divisor,c
   903  001494  ECEC  F00E         	call	___awdiv	;wreg free
   904  001498  C001  F06E         	movff	?___awdiv,main@a
   905  00149C  C002  F06F         	movff	?___awdiv+1,main@a+1
   906                           
   907                           ;main.c: 192:    }
   908  0014A0  4A6C               	infsnz	main@i,f,c
   909  0014A2  2A6D               	incf	main@i+1,f,c
   910  0014A4  BE6D               	btfsc	main@i+1,7,c
   911  0014A6  D7D3               	goto	l2362
   912  0014A8  506D               	movf	main@i+1,w,c
   913  0014AA  E104               	bnz	u2120
   914  0014AC  0E03               	movlw	3
   915  0014AE  5C6C               	subwf	main@i,w,c
   916  0014B0  A0D8               	btfss	status,0,c
   917  0014B2  D7CD               	goto	l2362
   918  0014B4                     u2120:
   919  0014B4  0EC0               	movlw	192
   920  0014B6  EC99  F010         	call	_lcdInst
   921                           
   922                           ;main.c: 194:    printf("%d%d%d", dist_final[2],dist_final[1],dist_final[0]);
   923  0014BA  0E39               	movlw	low STR_5
   924  0014BC  6E5C               	movwf	printf@fmt,c
   925  0014BE  0E10               	movlw	high STR_5
   926  0014C0  6E5D               	movwf	printf@fmt+1,c
   927  0014C2  C074  F05E         	movff	_dist_final+4,?_printf+2
   928  0014C6  C075  F05F         	movff	_dist_final+5,?_printf+3
   929  0014CA  C072  F060         	movff	_dist_final+2,?_printf+4
   930  0014CE  C073  F061         	movff	_dist_final+3,?_printf+5
   931  0014D2  C070  F062         	movff	_dist_final,?_printf+6
   932  0014D6  C071  F063         	movff	_dist_final+1,?_printf+7
   933  0014DA  EC6C  F010         	call	_printf	;wreg free
   934                           
   935                           ;main.c: 195:   }
   936  0014DE  D011               	goto	l2380
   937  0014E0                     l2374:
   938                           
   939                           ;main.c: 197:    { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
   940  0014E0  0E01               	movlw	1
   941  0014E2  EC99  F010         	call	_lcdInst
   942  0014E6  0E11               	movlw	17
   943  0014E8  6E68               	movwf	??_main& (0+255),c
   944  0014EA  0E3A               	movlw	58
   945  0014EC                     u2197:
   946  0014EC  2EE8               	decfsz	wreg,f,c
   947  0014EE  D7FE               	bra	u2197
   948  0014F0  2E68               	decfsz	??_main& (0+255),f,c
   949  0014F2  D7FC               	bra	u2197
   950  0014F4  D000               	nop2	
   951                           
   952                           ;main.c: 198:    printf(" out of range: ");
   953  0014F6  0E07               	movlw	low STR_6
   954  0014F8  6E5C               	movwf	printf@fmt,c
   955  0014FA  0E10               	movlw	high STR_6
   956  0014FC  6E5D               	movwf	printf@fmt+1,c
   957  0014FE  EC6C  F010         	call	_printf	;wreg free
   958  001502                     l2380:
   959                           
   960                           ;main.c: 200:     _delay((unsigned long)((400)*(10000000/4000.0)));
   961  001502  0E06               	movlw	6
   962  001504  6E69               	movwf	(??_main+1)& (0+255),c
   963  001506  0E13               	movlw	19
   964  001508  6E68               	movwf	??_main& (0+255),c
   965  00150A  0EAE               	movlw	174
   966  00150C                     u2207:
   967  00150C  2EE8               	decfsz	wreg,f,c
   968  00150E  D7FE               	bra	u2207
   969  001510  2E68               	decfsz	??_main& (0+255),f,c
   970  001512  D7FC               	bra	u2207
   971  001514  2E69               	decfsz	(??_main+1)& (0+255),f,c
   972  001516  D7FA               	bra	u2207
   973  001518  D6DE               	goto	l2308
   974  00151A                     __end_of_main:
   975                           	opt callstack 0
   976                           
   977 ;; *************** function _printf *****************
   978 ;; Defined at:
   979 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
   980 ;; Parameters:    Size  Location     Type
   981 ;;  fmt             2   91[COMRAM] PTR const unsigned char 
   982 ;;		 -> STR_6(16), STR_5(7), STR_4(14), STR_3(14), 
   983 ;;		 -> STR_2(11), STR_1(9), 
   984 ;; Auto vars:     Size  Location     Type
   985 ;;  ap              2  101[COMRAM] PTR void [1]
   986 ;;		 -> ?_printf(2), 
   987 ;;  ret             2    0        int 
   988 ;; Return value:  Size  Location     Type
   989 ;;                  2   91[COMRAM] int 
   990 ;; Registers used:
   991 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   992 ;; Tracked objects:
   993 ;;		On entry : 0/0
   994 ;;		On exit  : 0/0
   995 ;;		Unchanged: 0/0
   996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   997 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   998 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1000 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1001 ;;Total ram usage:       12 bytes
  1002 ;; Hardware stack levels used:    1
  1003 ;; Hardware stack levels required when called:   10
  1004 ;; This function calls:
  1005 ;;		_vfprintf
  1006 ;; This function is called by:
  1007 ;;		_main
  1008 ;; This function uses a non-reentrant model
  1009 ;;
  1010                           
  1011                           	psect	text1
  1012  0020D8                     __ptext1:
  1013                           	opt callstack 0
  1014  0020D8                     _printf:
  1015                           	opt callstack 20
  1016                           
  1017                           ;incstack = 0
  1018  0020D8  0E5E               	movlw	low (?_printf+2)
  1019  0020DA  6E66               	movwf	printf@ap,c
  1020  0020DC  0E00               	movlw	high (?_printf+2)
  1021  0020DE  6E67               	movwf	printf@ap+1,c
  1022  0020E0  0E00               	movlw	0
  1023  0020E2  6E54               	movwf	vfprintf@fp,c
  1024  0020E4  0E00               	movlw	0
  1025  0020E6  6E55               	movwf	vfprintf@fp+1,c
  1026  0020E8  C05C  F056         	movff	printf@fmt,vfprintf@fmt
  1027  0020EC  C05D  F057         	movff	printf@fmt+1,vfprintf@fmt+1
  1028  0020F0  0E66               	movlw	low printf@ap
  1029  0020F2  6E58               	movwf	vfprintf@ap,c
  1030  0020F4  0E00               	movlw	high printf@ap
  1031  0020F6  6E59               	movwf	vfprintf@ap+1,c
  1032  0020F8  ECD1  F00F         	call	_vfprintf	;wreg free
  1033  0020FC  0012               	return		;funcret
  1034  0020FE                     __end_of_printf:
  1035                           	opt callstack 0
  1036                           
  1037 ;; *************** function _vfprintf *****************
  1038 ;; Defined at:
  1039 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1040 ;; Parameters:    Size  Location     Type
  1041 ;;  fp              2   83[COMRAM] PTR struct _IO_FILE
  1042 ;;		 -> NULL(0), 
  1043 ;;  fmt             2   85[COMRAM] PTR const unsigned char 
  1044 ;;		 -> STR_6(16), STR_5(7), STR_4(14), STR_3(14), 
  1045 ;;		 -> STR_2(11), STR_1(9), 
  1046 ;;  ap              2   87[COMRAM] PTR PTR void 
  1047 ;;		 -> printf@ap(2), 
  1048 ;; Auto vars:     Size  Location     Type
  1049 ;;  cfmt            2   89[COMRAM] PTR unsigned char 
  1050 ;;		 -> STR_6(16), STR_5(7), STR_4(14), STR_3(14), 
  1051 ;;		 -> STR_2(11), STR_1(9), 
  1052 ;; Return value:  Size  Location     Type
  1053 ;;                  2   83[COMRAM] int 
  1054 ;; Registers used:
  1055 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1056 ;; Tracked objects:
  1057 ;;		On entry : 0/0
  1058 ;;		On exit  : 0/0
  1059 ;;		Unchanged: 0/0
  1060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1061 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1062 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1064 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1065 ;;Total ram usage:        8 bytes
  1066 ;; Hardware stack levels used:    1
  1067 ;; Hardware stack levels required when called:    9
  1068 ;; This function calls:
  1069 ;;		_vfpfcnvrt
  1070 ;; This function is called by:
  1071 ;;		_printf
  1072 ;; This function uses a non-reentrant model
  1073 ;;
  1074                           
  1075                           	psect	text2
  1076  001FA2                     __ptext2:
  1077                           	opt callstack 0
  1078  001FA2                     _vfprintf:
  1079                           	opt callstack 20
  1080                           
  1081                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1082                           
  1083                           ;incstack = 0
  1084  001FA2  C056  F05A         	movff	vfprintf@fmt,vfprintf@cfmt
  1085  001FA6  C057  F05B         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1086                           
  1087                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1088  001FAA  0E00               	movlw	0
  1089  001FAC  6E77               	movwf	_nout+1,c
  1090  001FAE  0E00               	movlw	0
  1091  001FB0  6E76               	movwf	_nout,c
  1092                           
  1093                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1094  001FB2  D012               	goto	l1946
  1095  001FB4                     l1944:
  1096                           
  1097                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1098  001FB4  C054  F044         	movff	vfprintf@fp,vfpfcnvrt@fp
  1099  001FB8  C055  F045         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1100  001FBC  0E5A               	movlw	low vfprintf@cfmt
  1101  001FBE  6E46               	movwf	vfpfcnvrt@fmt,c
  1102  001FC0  0E00               	movlw	high vfprintf@cfmt
  1103  001FC2  6E47               	movwf	vfpfcnvrt@fmt+1,c
  1104  001FC4  C058  F048         	movff	vfprintf@ap,vfpfcnvrt@ap
  1105  001FC8  C059  F049         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1106  001FCC  ECAE  F00B         	call	_vfpfcnvrt	;wreg free
  1107  001FD0  5044               	movf	?_vfpfcnvrt,w,c
  1108  001FD2  2676               	addwf	_nout,f,c
  1109  001FD4  5045               	movf	?_vfpfcnvrt+1,w,c
  1110  001FD6  2277               	addwfc	_nout+1,f,c
  1111  001FD8                     l1946:
  1112                           
  1113                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1114  001FD8  C05A  FFF6         	movff	vfprintf@cfmt,tblptrl
  1115  001FDC  C05B  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1116  001FE0                     	if	0	;tblptru may be non-zero
  1117  001FE0                     	endif
  1118  001FE0                     	if	0	;tblptru may be non-zero
  1119  001FE0                     	endif
  1120  001FE0  0008               	tblrd		*
  1121  001FE2  50F5               	movf	tablat,w,c
  1122  001FE4  0900               	iorlw	0
  1123  001FE6  A4D8               	btfss	status,2,c
  1124  001FE8  D7E5               	goto	l1944
  1125                           
  1126                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1127  001FEA  C076  F054         	movff	_nout,?_vfprintf
  1128  001FEE  C077  F055         	movff	_nout+1,?_vfprintf+1
  1129  001FF2  0012               	return		;funcret
  1130  001FF4                     __end_of_vfprintf:
  1131                           	opt callstack 0
  1132                           
  1133 ;; *************** function _vfpfcnvrt *****************
  1134 ;; Defined at:
  1135 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1136 ;; Parameters:    Size  Location     Type
  1137 ;;  fp              2   67[COMRAM] PTR struct _IO_FILE
  1138 ;;		 -> NULL(0), 
  1139 ;;  fmt             2   69[COMRAM] PTR PTR unsigned char 
  1140 ;;		 -> vfprintf@cfmt(2), 
  1141 ;;  ap              2   71[COMRAM] PTR PTR void 
  1142 ;;		 -> printf@ap(2), 
  1143 ;; Auto vars:     Size  Location     Type
  1144 ;;  ll              8   75[COMRAM] long long 
  1145 ;;  llu             8    0        unsigned long long 
  1146 ;;  f               4    0        unsigned long long 
  1147 ;;  vp              3    0        PTR void 
  1148 ;;  ct              3    0        unsigned char [3]
  1149 ;;  cp              3    0        PTR unsigned char 
  1150 ;;  i               2    0        int 
  1151 ;;  done            2    0        int 
  1152 ;;  c               1    0        unsigned char 
  1153 ;; Return value:  Size  Location     Type
  1154 ;;                  2   67[COMRAM] int 
  1155 ;; Registers used:
  1156 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1157 ;; Tracked objects:
  1158 ;;		On entry : 0/0
  1159 ;;		On exit  : 0/0
  1160 ;;		Unchanged: 0/0
  1161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1162 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1163 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1164 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1165 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1166 ;;Total ram usage:       16 bytes
  1167 ;; Hardware stack levels used:    1
  1168 ;; Hardware stack levels required when called:    8
  1169 ;; This function calls:
  1170 ;;		_dtoa
  1171 ;;		_fputc
  1172 ;; This function is called by:
  1173 ;;		_vfprintf
  1174 ;; This function uses a non-reentrant model
  1175 ;;
  1176                           
  1177                           	psect	text3
  1178  00175C                     __ptext3:
  1179                           	opt callstack 0
  1180  00175C                     _vfpfcnvrt:
  1181                           	opt callstack 20
  1182                           
  1183                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1184                           
  1185                           ;incstack = 0
  1186  00175C  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1187  001760  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1188  001764  CFDE FFF6          	movff	postinc2,tblptrl
  1189  001768  CFDD FFF7          	movff	postdec2,tblptrh
  1190  00176C                     	if	0	;tblptru may be non-zero
  1191  00176C                     	endif
  1192  00176C                     	if	0	;tblptru may be non-zero
  1193  00176C                     	endif
  1194  00176C  0008               	tblrd		*
  1195  00176E  50F5               	movf	tablat,w,c
  1196  001770  0A25               	xorlw	37
  1197  001772  A4D8               	btfss	status,2,c
  1198  001774  D099               	goto	l1928
  1199                           
  1200                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1201  001776  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1202  00177A  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1203  00177E  2ADE               	incf	postinc2,f,c
  1204  001780  0E00               	movlw	0
  1205  001782  22DD               	addwfc	postdec2,f,c
  1206                           
  1207                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1208  001784  0E00               	movlw	0
  1209  001786  6E79               	movwf	_width+1,c
  1210  001788  0E00               	movlw	0
  1211  00178A  6E78               	movwf	_width,c
  1212  00178C  C078  F07C         	movff	_width,_flags
  1213  001790  C079  F07D         	movff	_width+1,_flags+1
  1214                           
  1215                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1216  001794  687A               	setf	_prec,c
  1217  001796  687B               	setf	_prec+1,c
  1218                           
  1219                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1220  001798  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1221  00179C  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1222  0017A0  CFDE FFF6          	movff	postinc2,tblptrl
  1223  0017A4  CFDD FFF7          	movff	postdec2,tblptrh
  1224  0017A8                     	if	0	;tblptru may be non-zero
  1225  0017A8                     	endif
  1226  0017A8                     	if	0	;tblptru may be non-zero
  1227  0017A8                     	endif
  1228  0017A8  0008               	tblrd		*
  1229  0017AA  50F5               	movf	tablat,w,c
  1230  0017AC  0A64               	xorlw	100
  1231  0017AE  B4D8               	btfsc	status,2,c
  1232  0017B0  D00D               	goto	u1510
  1233  0017B2  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1234  0017B6  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1235  0017BA  CFDE FFF6          	movff	postinc2,tblptrl
  1236  0017BE  CFDD FFF7          	movff	postdec2,tblptrh
  1237  0017C2                     	if	0	;tblptru may be non-zero
  1238  0017C2                     	endif
  1239  0017C2                     	if	0	;tblptru may be non-zero
  1240  0017C2                     	endif
  1241  0017C2  0008               	tblrd		*
  1242  0017C4  50F5               	movf	tablat,w,c
  1243  0017C6  0A69               	xorlw	105
  1244  0017C8  A4D8               	btfss	status,2,c
  1245  0017CA  D03F               	goto	l1912
  1246  0017CC                     u1510:
  1247                           
  1248                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  1249  0017CC  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1250  0017D0  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1251  0017D4  2ADE               	incf	postinc2,f,c
  1252  0017D6  0E00               	movlw	0
  1253  0017D8  22DD               	addwfc	postdec2,f,c
  1254                           
  1255                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1256  0017DA  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1257  0017DE  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1258  0017E2  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  1259  0017E6  0E02               	movlw	2
  1260  0017E8  26DE               	addwf	postinc2,f,c
  1261  0017EA  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  1262  0017EE  0E00               	movlw	0
  1263  0017F0  22DD               	addwfc	postdec2,f,c
  1264  0017F2  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1265  0017F6  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1266  0017FA  CFDE F04C          	movff	postinc2,vfpfcnvrt@ll
  1267  0017FE  CFDD F04D          	movff	postdec2,vfpfcnvrt@ll+1
  1268  001802  0E00               	movlw	0
  1269  001804  BE4D               	btfsc	vfpfcnvrt@ll+1,7,c
  1270  001806  0EFF               	movlw	-1
  1271  001808  6E4E               	movwf	vfpfcnvrt@ll+2,c
  1272  00180A  6E4F               	movwf	vfpfcnvrt@ll+3,c
  1273  00180C  6E50               	movwf	vfpfcnvrt@ll+4,c
  1274  00180E  6E51               	movwf	vfpfcnvrt@ll+5,c
  1275  001810  6E52               	movwf	vfpfcnvrt@ll+6,c
  1276  001812  6E53               	movwf	vfpfcnvrt@ll+7,c
  1277                           
  1278                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  1279  001814  C044  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  1280  001818  C045  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1281  00181C  C04C  F022         	movff	vfpfcnvrt@ll,dtoa@d
  1282  001820  C04D  F023         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1283  001824  C04E  F024         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1284  001828  C04F  F025         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1285  00182C  C050  F026         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1286  001830  C051  F027         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1287  001834  C052  F028         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1288  001838  C053  F029         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1289  00183C  EC8D  F00A         	call	_dtoa	;wreg free
  1290  001840  C020  F044         	movff	?_dtoa,?_vfpfcnvrt
  1291  001844  C021  F045         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1292  001848  0012               	return	
  1293  00184A                     l1912:
  1294                           
  1295                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1296  00184A  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1297  00184E  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1298  001852  CFDE FFF6          	movff	postinc2,tblptrl
  1299  001856  CFDD FFF7          	movff	postdec2,tblptrh
  1300  00185A                     	if	0	;tblptru may be non-zero
  1301  00185A                     	endif
  1302  00185A                     	if	0	;tblptru may be non-zero
  1303  00185A                     	endif
  1304  00185A  0008               	tblrd		*
  1305  00185C  50F5               	movf	tablat,w,c
  1306  00185E  0A25               	xorlw	37
  1307  001860  A4D8               	btfss	status,2,c
  1308  001862  D016               	goto	l1922
  1309                           
  1310                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1311  001864  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1312  001868  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1313  00186C  2ADE               	incf	postinc2,f,c
  1314  00186E  0E00               	movlw	0
  1315  001870  22DD               	addwfc	postdec2,f,c
  1316                           
  1317                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1318  001872  0E00               	movlw	0
  1319  001874  6E06               	movwf	fputc@c+1,c
  1320  001876  0E25               	movlw	37
  1321  001878  6E05               	movwf	fputc@c,c
  1322  00187A  C044  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1323  00187E  C045  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1324  001882  EC66  F00F         	call	_fputc	;wreg free
  1325  001886                     l1918:
  1326                           
  1327                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1328  001886  0E00               	movlw	0
  1329  001888  6E45               	movwf	?_vfpfcnvrt+1,c
  1330  00188A  0E01               	movlw	1
  1331  00188C  6E44               	movwf	?_vfpfcnvrt,c
  1332  00188E  0012               	return	
  1333  001890                     l1922:
  1334                           
  1335                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1336  001890  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1337  001894  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1338  001898  2ADE               	incf	postinc2,f,c
  1339  00189A  0E00               	movlw	0
  1340  00189C  22DD               	addwfc	postdec2,f,c
  1341                           
  1342                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  1343  00189E  0E00               	movlw	0
  1344  0018A0  6E45               	movwf	?_vfpfcnvrt+1,c
  1345  0018A2  0E00               	movlw	0
  1346  0018A4  6E44               	movwf	?_vfpfcnvrt,c
  1347  0018A6  0012               	return	
  1348  0018A8                     l1928:
  1349                           
  1350                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  1351  0018A8  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1352  0018AC  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1353  0018B0  CFDE FFF6          	movff	postinc2,tblptrl
  1354  0018B4  CFDD FFF7          	movff	postdec2,tblptrh
  1355  0018B8                     	if	0	;tblptru may be non-zero
  1356  0018B8                     	endif
  1357  0018B8                     	if	0	;tblptru may be non-zero
  1358  0018B8                     	endif
  1359  0018B8  0008               	tblrd		*
  1360  0018BA  50F5               	movf	tablat,w,c
  1361  0018BC  6E05               	movwf	fputc@c,c
  1362  0018BE  6A06               	clrf	fputc@c+1,c
  1363  0018C0  C044  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1364  0018C4  C045  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1365  0018C8  EC66  F00F         	call	_fputc	;wreg free
  1366                           
  1367                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  1368  0018CC  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1369  0018D0  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1370  0018D4  2ADE               	incf	postinc2,f,c
  1371  0018D6  0E00               	movlw	0
  1372  0018D8  22DD               	addwfc	postdec2,f,c
  1373  0018DA  D7D5               	goto	l1918
  1374  0018DC                     __end_of_vfpfcnvrt:
  1375                           	opt callstack 0
  1376                           
  1377 ;; *************** function _dtoa *****************
  1378 ;; Defined at:
  1379 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  1382 ;;		 -> NULL(0), 
  1383 ;;  d               8   33[COMRAM] long long 
  1384 ;; Auto vars:     Size  Location     Type
  1385 ;;  n               8   57[COMRAM] long long 
  1386 ;;  i               2   65[COMRAM] int 
  1387 ;;  s               2   55[COMRAM] int 
  1388 ;;  w               2   53[COMRAM] int 
  1389 ;;  p               2   51[COMRAM] int 
  1390 ;; Return value:  Size  Location     Type
  1391 ;;                  2   31[COMRAM] int 
  1392 ;; Registers used:
  1393 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1394 ;; Tracked objects:
  1395 ;;		On entry : 0/0
  1396 ;;		On exit  : 0/0
  1397 ;;		Unchanged: 0/0
  1398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1399 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1400 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1401 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1402 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1403 ;;Total ram usage:       36 bytes
  1404 ;; Hardware stack levels used:    1
  1405 ;; Hardware stack levels required when called:    7
  1406 ;; This function calls:
  1407 ;;		___aodiv
  1408 ;;		___aomod
  1409 ;;		_abs
  1410 ;;		_pad
  1411 ;; This function is called by:
  1412 ;;		_vfpfcnvrt
  1413 ;; This function uses a non-reentrant model
  1414 ;;
  1415                           
  1416                           	psect	text4
  1417  00151A                     __ptext4:
  1418                           	opt callstack 0
  1419  00151A                     _dtoa:
  1420                           	opt callstack 20
  1421                           
  1422                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  1423                           
  1424                           ;incstack = 0
  1425  00151A  C022  F03A         	movff	dtoa@d,dtoa@n
  1426  00151E  C023  F03B         	movff	dtoa@d+1,dtoa@n+1
  1427  001522  C024  F03C         	movff	dtoa@d+2,dtoa@n+2
  1428  001526  C025  F03D         	movff	dtoa@d+3,dtoa@n+3
  1429  00152A  C026  F03E         	movff	dtoa@d+4,dtoa@n+4
  1430  00152E  C027  F03F         	movff	dtoa@d+5,dtoa@n+5
  1431  001532  C028  F040         	movff	dtoa@d+6,dtoa@n+6
  1432  001536  C029  F041         	movff	dtoa@d+7,dtoa@n+7
  1433                           
  1434                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  1435  00153A  AE41               	btfss	dtoa@n+7,7,c
  1436  00153C  D002               	goto	u1340
  1437  00153E  0E01               	movlw	1
  1438  001540  D001               	goto	u1350
  1439  001542                     u1340:
  1440  001542  0E00               	movlw	0
  1441  001544                     u1350:
  1442  001544  6E38               	movwf	dtoa@s,c
  1443  001546  6A39               	clrf	dtoa@s+1,c
  1444                           
  1445                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  1446  001548  5038               	movf	dtoa@s,w,c
  1447  00154A  1039               	iorwf	dtoa@s+1,w,c
  1448  00154C  B4D8               	btfsc	status,2,c
  1449  00154E  D010               	goto	l1838
  1450                           
  1451                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  1452  001550  1E41               	comf	dtoa@n+7,f,c
  1453  001552  1E40               	comf	dtoa@n+6,f,c
  1454  001554  1E3F               	comf	dtoa@n+5,f,c
  1455  001556  1E3E               	comf	dtoa@n+4,f,c
  1456  001558  1E3D               	comf	dtoa@n+3,f,c
  1457  00155A  1E3C               	comf	dtoa@n+2,f,c
  1458  00155C  1E3B               	comf	dtoa@n+1,f,c
  1459  00155E  6C3A               	negf	dtoa@n,c
  1460  001560  0E00               	movlw	0
  1461  001562  223B               	addwfc	dtoa@n+1,f,c
  1462  001564  223C               	addwfc	dtoa@n+2,f,c
  1463  001566  223D               	addwfc	dtoa@n+3,f,c
  1464  001568  223E               	addwfc	dtoa@n+4,f,c
  1465  00156A  223F               	addwfc	dtoa@n+5,f,c
  1466  00156C  2240               	addwfc	dtoa@n+6,f,c
  1467  00156E  2241               	addwfc	dtoa@n+7,f,c
  1468  001570                     l1838:
  1469                           
  1470                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  1471  001570  AE7B               	btfss	_prec+1,7,c
  1472                           
  1473                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  1474  001572  927C               	bcf	_flags,1,c
  1475                           
  1476                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  1477  001574  BE7B               	btfsc	_prec+1,7,c
  1478  001576  D005               	goto	u1380
  1479  001578  507B               	movf	_prec+1,w,c
  1480  00157A  E108               	bnz	l174
  1481  00157C  047A               	decf	_prec,w,c
  1482  00157E  B0D8               	btfsc	status,0,c
  1483  001580  D005               	goto	l174
  1484  001582                     u1380:
  1485  001582  0E00               	movlw	0
  1486  001584  6E35               	movwf	dtoa@p+1,c
  1487  001586  0E01               	movlw	1
  1488  001588  6E34               	movwf	dtoa@p,c
  1489  00158A  D004               	goto	l176
  1490  00158C                     l174:
  1491  00158C  C07A  F034         	movff	_prec,dtoa@p
  1492  001590  C07B  F035         	movff	_prec+1,dtoa@p+1
  1493  001594                     l176:
  1494                           
  1495                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  1496  001594  C078  F036         	movff	_width,dtoa@w
  1497  001598  C079  F037         	movff	_width+1,dtoa@w+1
  1498                           
  1499                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  1500  00159C  5038               	movf	dtoa@s,w,c
  1501  00159E  1039               	iorwf	dtoa@s+1,w,c
  1502  0015A0  A4D8               	btfss	status,2,c
  1503  0015A2  D002               	goto	u1400
  1504  0015A4  A47C               	btfss	_flags,2,c
  1505  0015A6  D003               	goto	l1852
  1506  0015A8                     u1400:
  1507                           
  1508                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  1509  0015A8  0636               	decf	dtoa@w,f,c
  1510  0015AA  A0D8               	btfss	status,0,c
  1511  0015AC  0637               	decf	dtoa@w+1,f,c
  1512  0015AE                     l1852:
  1513                           
  1514                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  1515  0015AE  0E00               	movlw	0
  1516  0015B0  6E43               	movwf	dtoa@i+1,c
  1517  0015B2  0E1F               	movlw	31
  1518  0015B4  6E42               	movwf	dtoa@i,c
  1519                           
  1520                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  1521  0015B6  0E00               	movlw	0
  1522  0015B8  0100               	movlb	0	; () banked
  1523  0015BA  6F9F               	movwf	(_dbuf+31)& (0+255),b
  1524                           
  1525                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1526  0015BC  D07C               	goto	l1866
  1527  0015BE                     l1856:
  1528                           
  1529                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  1530  0015BE  0642               	decf	dtoa@i,f,c
  1531  0015C0  A0D8               	btfss	status,0,c
  1532  0015C2  0643               	decf	dtoa@i+1,f,c
  1533                           
  1534                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  1535  0015C4  0E80               	movlw	low _dbuf
  1536  0015C6  2442               	addwf	dtoa@i,w,c
  1537  0015C8  6ED9               	movwf	fsr2l,c
  1538  0015CA  0E00               	movlw	high _dbuf
  1539  0015CC  2043               	addwfc	dtoa@i+1,w,c
  1540  0015CE  6EDA               	movwf	fsr2h,c
  1541  0015D0  C03A  F001         	movff	dtoa@n,___aomod@dividend
  1542  0015D4  C03B  F002         	movff	dtoa@n+1,___aomod@dividend+1
  1543  0015D8  C03C  F003         	movff	dtoa@n+2,___aomod@dividend+2
  1544  0015DC  C03D  F004         	movff	dtoa@n+3,___aomod@dividend+3
  1545  0015E0  C03E  F005         	movff	dtoa@n+4,___aomod@dividend+4
  1546  0015E4  C03F  F006         	movff	dtoa@n+5,___aomod@dividend+5
  1547  0015E8  C040  F007         	movff	dtoa@n+6,___aomod@dividend+6
  1548  0015EC  C041  F008         	movff	dtoa@n+7,___aomod@dividend+7
  1549  0015F0  0E0A               	movlw	10
  1550  0015F2  6E09               	movwf	___aomod@divisor,c
  1551  0015F4  0E00               	movlw	0
  1552  0015F6  6E0A               	movwf	___aomod@divisor+1,c
  1553  0015F8  0E00               	movlw	0
  1554  0015FA  6E0B               	movwf	___aomod@divisor+2,c
  1555  0015FC  0E00               	movlw	0
  1556  0015FE  6E0C               	movwf	___aomod@divisor+3,c
  1557  001600  0E00               	movlw	0
  1558  001602  6E0D               	movwf	___aomod@divisor+4,c
  1559  001604  0E00               	movlw	0
  1560  001606  6E0E               	movwf	___aomod@divisor+5,c
  1561  001608  0E00               	movlw	0
  1562  00160A  6E0F               	movwf	___aomod@divisor+6,c
  1563  00160C  0E00               	movlw	0
  1564  00160E  6E10               	movwf	___aomod@divisor+7,c
  1565  001610  ECB2  F00D         	call	___aomod	;wreg free
  1566  001614  C001  F02A         	movff	?___aomod,??_dtoa
  1567  001618  C002  F02B         	movff	?___aomod+1,??_dtoa+1
  1568  00161C  C003  F02C         	movff	?___aomod+2,??_dtoa+2
  1569  001620  C004  F02D         	movff	?___aomod+3,??_dtoa+3
  1570  001624  C005  F02E         	movff	?___aomod+4,??_dtoa+4
  1571  001628  C006  F02F         	movff	?___aomod+5,??_dtoa+5
  1572  00162C  C007  F030         	movff	?___aomod+6,??_dtoa+6
  1573  001630  C008  F031         	movff	?___aomod+7,??_dtoa+7
  1574  001634  C02A  F013         	movff	??_dtoa,abs@a
  1575  001638  C02C  F014         	movff	??_dtoa+2,abs@a+1
  1576  00163C  EC16  F010         	call	_abs	;wreg free
  1577  001640  5013               	movf	?_abs,w,c
  1578  001642  0F30               	addlw	48
  1579  001644  6EDF               	movwf	indf2,c
  1580                           
  1581                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  1582  001646  0634               	decf	dtoa@p,f,c
  1583  001648  A0D8               	btfss	status,0,c
  1584  00164A  0635               	decf	dtoa@p+1,f,c
  1585                           
  1586                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  1587  00164C  0636               	decf	dtoa@w,f,c
  1588  00164E  A0D8               	btfss	status,0,c
  1589  001650  0637               	decf	dtoa@w+1,f,c
  1590                           
  1591                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  1592  001652  C03A  F001         	movff	dtoa@n,___aodiv@dividend
  1593  001656  C03B  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  1594  00165A  C03C  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  1595  00165E  C03D  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  1596  001662  C03E  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  1597  001666  C03F  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  1598  00166A  C040  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  1599  00166E  C041  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  1600  001672  0E0A               	movlw	10
  1601  001674  6E09               	movwf	___aodiv@divisor,c
  1602  001676  0E00               	movlw	0
  1603  001678  6E0A               	movwf	___aodiv@divisor+1,c
  1604  00167A  0E00               	movlw	0
  1605  00167C  6E0B               	movwf	___aodiv@divisor+2,c
  1606  00167E  0E00               	movlw	0
  1607  001680  6E0C               	movwf	___aodiv@divisor+3,c
  1608  001682  0E00               	movlw	0
  1609  001684  6E0D               	movwf	___aodiv@divisor+4,c
  1610  001686  0E00               	movlw	0
  1611  001688  6E0E               	movwf	___aodiv@divisor+5,c
  1612  00168A  0E00               	movlw	0
  1613  00168C  6E0F               	movwf	___aodiv@divisor+6,c
  1614  00168E  0E00               	movlw	0
  1615  001690  6E10               	movwf	___aodiv@divisor+7,c
  1616  001692  EC6E  F00C         	call	___aodiv	;wreg free
  1617  001696  C001  F03A         	movff	?___aodiv,dtoa@n
  1618  00169A  C002  F03B         	movff	?___aodiv+1,dtoa@n+1
  1619  00169E  C003  F03C         	movff	?___aodiv+2,dtoa@n+2
  1620  0016A2  C004  F03D         	movff	?___aodiv+3,dtoa@n+3
  1621  0016A6  C005  F03E         	movff	?___aodiv+4,dtoa@n+4
  1622  0016AA  C006  F03F         	movff	?___aodiv+5,dtoa@n+5
  1623  0016AE  C007  F040         	movff	?___aodiv+6,dtoa@n+6
  1624  0016B2  C008  F041         	movff	?___aodiv+7,dtoa@n+7
  1625  0016B6                     l1866:
  1626                           
  1627                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1628  0016B6  BE43               	btfsc	dtoa@i+1,7,c
  1629  0016B8  D01F               	goto	u1450
  1630  0016BA  5043               	movf	dtoa@i+1,w,c
  1631  0016BC  E103               	bnz	u1410
  1632  0016BE  0442               	decf	dtoa@i,w,c
  1633  0016C0  A0D8               	btfss	status,0,c
  1634  0016C2  D01A               	goto	u1450
  1635  0016C4                     u1410:
  1636  0016C4  503A               	movf	dtoa@n,w,c
  1637  0016C6  103B               	iorwf	dtoa@n+1,w,c
  1638  0016C8  103C               	iorwf	dtoa@n+2,w,c
  1639  0016CA  103D               	iorwf	dtoa@n+3,w,c
  1640  0016CC  103E               	iorwf	dtoa@n+4,w,c
  1641  0016CE  103F               	iorwf	dtoa@n+5,w,c
  1642  0016D0  1040               	iorwf	dtoa@n+6,w,c
  1643  0016D2  1041               	iorwf	dtoa@n+7,w,c
  1644  0016D4  A4D8               	btfss	status,2,c
  1645  0016D6  D773               	goto	l1856
  1646  0016D8  BE35               	btfsc	dtoa@p+1,7,c
  1647  0016DA  D005               	goto	u1430
  1648  0016DC  5035               	movf	dtoa@p+1,w,c
  1649  0016DE  E102               	bnz	u1431
  1650  0016E0  0434               	decf	dtoa@p,w,c
  1651  0016E2  B0D8               	btfsc	status,0,c
  1652  0016E4                     u1431:
  1653  0016E4  D76C               	goto	l1856
  1654  0016E6                     u1430:
  1655  0016E6  BE37               	btfsc	dtoa@w+1,7,c
  1656  0016E8  D007               	goto	u1450
  1657  0016EA  5037               	movf	dtoa@w+1,w,c
  1658  0016EC  E103               	bnz	u1440
  1659  0016EE  0436               	decf	dtoa@w,w,c
  1660  0016F0  A0D8               	btfss	status,0,c
  1661  0016F2  D002               	goto	u1450
  1662  0016F4                     u1440:
  1663  0016F4  B27C               	btfsc	_flags,1,c
  1664  0016F6  D763               	goto	l1856
  1665  0016F8                     u1450:
  1666                           
  1667                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  1668  0016F8  5038               	movf	dtoa@s,w,c
  1669  0016FA  1039               	iorwf	dtoa@s+1,w,c
  1670  0016FC  A4D8               	btfss	status,2,c
  1671  0016FE  D002               	goto	u1470
  1672  001700  A47C               	btfss	_flags,2,c
  1673  001702  D017               	goto	l1890
  1674  001704                     u1470:
  1675                           
  1676                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  1677  001704  0642               	decf	dtoa@i,f,c
  1678  001706  A0D8               	btfss	status,0,c
  1679  001708  0643               	decf	dtoa@i+1,f,c
  1680                           
  1681                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  1682  00170A  5038               	movf	dtoa@s,w,c
  1683  00170C  1039               	iorwf	dtoa@s+1,w,c
  1684  00170E  A4D8               	btfss	status,2,c
  1685  001710  D004               	goto	l1886
  1686  001712  0E00               	movlw	0
  1687  001714  6E33               	movwf	_dtoa$376+1,c
  1688  001716  0E2B               	movlw	43
  1689  001718  D003               	goto	L1
  1690  00171A                     l1886:
  1691  00171A  0E00               	movlw	0
  1692  00171C  6E33               	movwf	_dtoa$376+1,c
  1693  00171E  0E2D               	movlw	45
  1694  001720                     L1:
  1695  001720  6E32               	movwf	_dtoa$376,c
  1696  001722  0E80               	movlw	low _dbuf
  1697  001724  2442               	addwf	dtoa@i,w,c
  1698  001726  6ED9               	movwf	fsr2l,c
  1699  001728  0E00               	movlw	high _dbuf
  1700  00172A  2043               	addwfc	dtoa@i+1,w,c
  1701  00172C  6EDA               	movwf	fsr2h,c
  1702  00172E  C032  FFDF         	movff	_dtoa$376,indf2
  1703  001732                     l1890:
  1704                           
  1705                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  1706  001732  C020  F015         	movff	dtoa@fp,pad@fp
  1707  001736  C021  F016         	movff	dtoa@fp+1,pad@fp+1
  1708  00173A  0E80               	movlw	low _dbuf
  1709  00173C  2442               	addwf	dtoa@i,w,c
  1710  00173E  6E17               	movwf	pad@buf,c
  1711  001740  0E00               	movlw	high _dbuf
  1712  001742  2043               	addwfc	dtoa@i+1,w,c
  1713  001744  6E18               	movwf	pad@buf+1,c
  1714  001746  C036  F019         	movff	dtoa@w,pad@p
  1715  00174A  C037  F01A         	movff	dtoa@w+1,pad@p+1
  1716  00174E  ECA1  F00E         	call	_pad	;wreg free
  1717  001752  C015  F020         	movff	?_pad,?_dtoa
  1718  001756  C016  F021         	movff	?_pad+1,?_dtoa+1
  1719  00175A  0012               	return		;funcret
  1720  00175C                     __end_of_dtoa:
  1721                           	opt callstack 0
  1722                           
  1723 ;; *************** function _pad *****************
  1724 ;; Defined at:
  1725 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1726 ;; Parameters:    Size  Location     Type
  1727 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  1728 ;;		 -> NULL(0), 
  1729 ;;  buf             2   22[COMRAM] PTR unsigned char 
  1730 ;;		 -> dbuf(32), 
  1731 ;;  p               2   24[COMRAM] int 
  1732 ;; Auto vars:     Size  Location     Type
  1733 ;;  w               2   29[COMRAM] int 
  1734 ;;  i               2   27[COMRAM] int 
  1735 ;; Return value:  Size  Location     Type
  1736 ;;                  2   20[COMRAM] int 
  1737 ;; Registers used:
  1738 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1739 ;; Tracked objects:
  1740 ;;		On entry : 0/0
  1741 ;;		On exit  : 0/0
  1742 ;;		Unchanged: 0/0
  1743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1744 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1745 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1746 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1747 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1748 ;;Total ram usage:       11 bytes
  1749 ;; Hardware stack levels used:    1
  1750 ;; Hardware stack levels required when called:    6
  1751 ;; This function calls:
  1752 ;;		_fputc
  1753 ;;		_fputs
  1754 ;;		_strlen
  1755 ;; This function is called by:
  1756 ;;		_dtoa
  1757 ;; This function uses a non-reentrant model
  1758 ;;
  1759                           
  1760                           	psect	text5
  1761  001D42                     __ptext5:
  1762                           	opt callstack 0
  1763  001D42                     _pad:
  1764                           	opt callstack 20
  1765                           
  1766                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  1767                           
  1768                           ;incstack = 0
  1769  001D42  A07C               	btfss	_flags,0,c
  1770  001D44  D00A               	goto	l1730
  1771                           
  1772                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  1773  001D46  C017  F00E         	movff	pad@buf,fputs@s
  1774  001D4A  C018  F00F         	movff	pad@buf+1,fputs@s+1
  1775  001D4E  C015  F010         	movff	pad@fp,fputs@fp
  1776  001D52  C016  F011         	movff	pad@fp+1,fputs@fp+1
  1777  001D56  ECFA  F00F         	call	_fputs	;wreg free
  1778  001D5A                     l1730:
  1779                           
  1780                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  1781  001D5A  BE1A               	btfsc	pad@p+1,7,c
  1782  001D5C  D005               	goto	l1734
  1783  001D5E  C019  F01E         	movff	pad@p,pad@w
  1784  001D62  C01A  F01F         	movff	pad@p+1,pad@w+1
  1785  001D66  D004               	goto	l163
  1786  001D68                     l1734:
  1787  001D68  0E00               	movlw	0
  1788  001D6A  6E1F               	movwf	pad@w+1,c
  1789  001D6C  0E00               	movlw	0
  1790  001D6E  6E1E               	movwf	pad@w,c
  1791  001D70                     l163:
  1792                           
  1793                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  1794  001D70  0E00               	movlw	0
  1795  001D72  6E1D               	movwf	pad@i+1,c
  1796  001D74  0E00               	movlw	0
  1797  001D76  6E1C               	movwf	pad@i,c
  1798                           
  1799                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  1800  001D78  D00C               	goto	l1740
  1801  001D7A                     l1736:
  1802                           
  1803                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  1804  001D7A  0E00               	movlw	0
  1805  001D7C  6E06               	movwf	fputc@c+1,c
  1806  001D7E  0E20               	movlw	32
  1807  001D80  6E05               	movwf	fputc@c,c
  1808  001D82  C015  F007         	movff	pad@fp,fputc@fp
  1809  001D86  C016  F008         	movff	pad@fp+1,fputc@fp+1
  1810  001D8A  EC66  F00F         	call	_fputc	;wreg free
  1811                           
  1812                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  1813  001D8E  4A1C               	infsnz	pad@i,f,c
  1814  001D90  2A1D               	incf	pad@i+1,f,c
  1815  001D92                     l1740:
  1816                           
  1817                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  1818  001D92  501E               	movf	pad@w,w,c
  1819  001D94  5C1C               	subwf	pad@i,w,c
  1820  001D96  501D               	movf	pad@i+1,w,c
  1821  001D98  0A80               	xorlw	128
  1822  001D9A  6E1B               	movwf	??_pad& (0+255),c
  1823  001D9C  501F               	movf	pad@w+1,w,c
  1824  001D9E  0A80               	xorlw	128
  1825  001DA0  581B               	subwfb	??_pad& (0+255),w,c
  1826  001DA2  A0D8               	btfss	status,0,c
  1827  001DA4  D7EA               	goto	l1736
  1828                           
  1829                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  1830  001DA6  B07C               	btfsc	_flags,0,c
  1831  001DA8  D00A               	goto	l1744
  1832                           
  1833                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  1834  001DAA  C017  F00E         	movff	pad@buf,fputs@s
  1835  001DAE  C018  F00F         	movff	pad@buf+1,fputs@s+1
  1836  001DB2  C015  F010         	movff	pad@fp,fputs@fp
  1837  001DB6  C016  F011         	movff	pad@fp+1,fputs@fp+1
  1838  001DBA  ECFA  F00F         	call	_fputs	;wreg free
  1839  001DBE                     l1744:
  1840                           
  1841                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  1842  001DBE  C017  F001         	movff	pad@buf,strlen@s
  1843  001DC2  C018  F002         	movff	pad@buf+1,strlen@s+1
  1844  001DC6  EC2F  F010         	call	_strlen	;wreg free
  1845  001DCA  501E               	movf	pad@w,w,c
  1846  001DCC  2401               	addwf	?_strlen,w,c
  1847  001DCE  6E15               	movwf	?_pad,c
  1848  001DD0  501F               	movf	pad@w+1,w,c
  1849  001DD2  2002               	addwfc	?_strlen+1,w,c
  1850  001DD4  6E16               	movwf	?_pad+1,c
  1851  001DD6  0012               	return		;funcret
  1852  001DD8                     __end_of_pad:
  1853                           	opt callstack 0
  1854                           
  1855 ;; *************** function _strlen *****************
  1856 ;; Defined at:
  1857 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  1858 ;; Parameters:    Size  Location     Type
  1859 ;;  s               2    0[COMRAM] PTR const unsigned char 
  1860 ;;		 -> dbuf(32), 
  1861 ;; Auto vars:     Size  Location     Type
  1862 ;;  a               2    2[COMRAM] PTR const unsigned char 
  1863 ;;		 -> dbuf(32), 
  1864 ;; Return value:  Size  Location     Type
  1865 ;;                  2    0[COMRAM] unsigned int 
  1866 ;; Registers used:
  1867 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1868 ;; Tracked objects:
  1869 ;;		On entry : 0/0
  1870 ;;		On exit  : 0/0
  1871 ;;		Unchanged: 0/0
  1872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1873 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1874 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1876 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1877 ;;Total ram usage:        4 bytes
  1878 ;; Hardware stack levels used:    1
  1879 ;; This function calls:
  1880 ;;		Nothing
  1881 ;; This function is called by:
  1882 ;;		_pad
  1883 ;; This function uses a non-reentrant model
  1884 ;;
  1885                           
  1886                           	psect	text6
  1887  00205E                     __ptext6:
  1888                           	opt callstack 0
  1889  00205E                     _strlen:
  1890                           	opt callstack 25
  1891                           
  1892                           ;incstack = 0
  1893  00205E  C001  F003         	movff	strlen@s,strlen@a
  1894  002062  C002  F004         	movff	strlen@s+1,strlen@a+1
  1895  002066  D002               	goto	l1720
  1896  002068                     l1718:
  1897  002068  4A01               	infsnz	strlen@s,f,c
  1898  00206A  2A02               	incf	strlen@s+1,f,c
  1899  00206C                     l1720:
  1900  00206C  C001  FFD9         	movff	strlen@s,fsr2l
  1901  002070  C002  FFDA         	movff	strlen@s+1,fsr2h
  1902  002074  50DF               	movf	indf2,w,c
  1903  002076  A4D8               	btfss	status,2,c
  1904  002078  D7F7               	goto	l1718
  1905  00207A  5003               	movf	strlen@a,w,c
  1906  00207C  5C01               	subwf	strlen@s,w,c
  1907  00207E  6E01               	movwf	?_strlen,c
  1908  002080  5004               	movf	strlen@a+1,w,c
  1909  002082  5802               	subwfb	strlen@s+1,w,c
  1910  002084  6E02               	movwf	?_strlen+1,c
  1911  002086  0012               	return		;funcret
  1912  002088                     __end_of_strlen:
  1913                           	opt callstack 0
  1914                           
  1915 ;; *************** function _fputs *****************
  1916 ;; Defined at:
  1917 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  1918 ;; Parameters:    Size  Location     Type
  1919 ;;  s               2   13[COMRAM] PTR const unsigned char 
  1920 ;;		 -> dbuf(32), 
  1921 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  1922 ;;		 -> NULL(0), 
  1923 ;; Auto vars:     Size  Location     Type
  1924 ;;  i               2   18[COMRAM] int 
  1925 ;;  c               1   17[COMRAM] unsigned char 
  1926 ;; Return value:  Size  Location     Type
  1927 ;;                  2   13[COMRAM] int 
  1928 ;; Registers used:
  1929 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1930 ;; Tracked objects:
  1931 ;;		On entry : 0/0
  1932 ;;		On exit  : 0/0
  1933 ;;		Unchanged: 0/0
  1934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1935 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1936 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1938 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1939 ;;Total ram usage:        7 bytes
  1940 ;; Hardware stack levels used:    1
  1941 ;; Hardware stack levels required when called:    5
  1942 ;; This function calls:
  1943 ;;		_fputc
  1944 ;; This function is called by:
  1945 ;;		_pad
  1946 ;; This function uses a non-reentrant model
  1947 ;;
  1948                           
  1949                           	psect	text7
  1950  001FF4                     __ptext7:
  1951                           	opt callstack 0
  1952  001FF4                     _fputs:
  1953                           	opt callstack 20
  1954                           
  1955                           ;incstack = 0
  1956  001FF4  0E00               	movlw	0
  1957  001FF6  6E14               	movwf	fputs@i+1,c
  1958  001FF8  0E00               	movlw	0
  1959  001FFA  6E13               	movwf	fputs@i,c
  1960  001FFC  D00B               	goto	l1714
  1961  001FFE                     l1710:
  1962  001FFE  C012  F005         	movff	fputs@c,fputc@c
  1963  002002  6A06               	clrf	fputc@c+1,c
  1964  002004  C010  F007         	movff	fputs@fp,fputc@fp
  1965  002008  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  1966  00200C  EC66  F00F         	call	_fputc	;wreg free
  1967  002010  4A13               	infsnz	fputs@i,f,c
  1968  002012  2A14               	incf	fputs@i+1,f,c
  1969  002014                     l1714:
  1970  002014  5013               	movf	fputs@i,w,c
  1971  002016  240E               	addwf	fputs@s,w,c
  1972  002018  6ED9               	movwf	fsr2l,c
  1973  00201A  5014               	movf	fputs@i+1,w,c
  1974  00201C  200F               	addwfc	fputs@s+1,w,c
  1975  00201E  6EDA               	movwf	fsr2h,c
  1976  002020  50DF               	movf	indf2,w,c
  1977  002022  6E12               	movwf	fputs@c,c
  1978  002024  5012               	movf	fputs@c,w,c
  1979  002026  B4D8               	btfsc	status,2,c
  1980  002028  0012               	return	
  1981  00202A  D7E9               	goto	l1710
  1982  00202C                     __end_of_fputs:
  1983                           	opt callstack 0
  1984                           
  1985 ;; *************** function _fputc *****************
  1986 ;; Defined at:
  1987 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  1988 ;; Parameters:    Size  Location     Type
  1989 ;;  c               2    4[COMRAM] int 
  1990 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  1991 ;;		 -> NULL(0), 
  1992 ;; Auto vars:     Size  Location     Type
  1993 ;;		None
  1994 ;; Return value:  Size  Location     Type
  1995 ;;                  2    4[COMRAM] int 
  1996 ;; Registers used:
  1997 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1998 ;; Tracked objects:
  1999 ;;		On entry : 0/0
  2000 ;;		On exit  : 0/0
  2001 ;;		Unchanged: 0/0
  2002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2003 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2005 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2006 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2007 ;;Total ram usage:        9 bytes
  2008 ;; Hardware stack levels used:    1
  2009 ;; Hardware stack levels required when called:    4
  2010 ;; This function calls:
  2011 ;;		_putch
  2012 ;; This function is called by:
  2013 ;;		_pad
  2014 ;;		_vfpfcnvrt
  2015 ;;		_fputs
  2016 ;; This function uses a non-reentrant model
  2017 ;;
  2018                           
  2019                           	psect	text8
  2020  001ECC                     __ptext8:
  2021                           	opt callstack 0
  2022  001ECC                     _fputc:
  2023                           	opt callstack 23
  2024                           
  2025                           ;incstack = 0
  2026  001ECC  5007               	movf	fputc@fp,w,c
  2027  001ECE  1008               	iorwf	fputc@fp+1,w,c
  2028  001ED0  B4D8               	btfsc	status,2,c
  2029  001ED2  D004               	goto	u1110
  2030  001ED4  5007               	movf	fputc@fp,w,c
  2031  001ED6  1008               	iorwf	fputc@fp+1,w,c
  2032  001ED8  A4D8               	btfss	status,2,c
  2033  001EDA  D004               	goto	l1700
  2034  001EDC                     u1110:
  2035  001EDC  5005               	movf	fputc@c,w,c
  2036  001EDE  EC93  F010         	call	_putch
  2037  001EE2  0012               	return	
  2038  001EE4                     l1700:
  2039  001EE4  EE20 F004          	lfsr	2,4
  2040  001EE8  5007               	movf	fputc@fp,w,c
  2041  001EEA  26D9               	addwf	fsr2l,f,c
  2042  001EEC  5008               	movf	fputc@fp+1,w,c
  2043  001EEE  22DA               	addwfc	fsr2h,f,c
  2044  001EF0  50DE               	movf	postinc2,w,c
  2045  001EF2  10DE               	iorwf	postinc2,w,c
  2046  001EF4  B4D8               	btfsc	status,2,c
  2047  001EF6  D016               	goto	u1130
  2048  001EF8  EE20 F004          	lfsr	2,4
  2049  001EFC  5007               	movf	fputc@fp,w,c
  2050  001EFE  26D9               	addwf	fsr2l,f,c
  2051  001F00  5008               	movf	fputc@fp+1,w,c
  2052  001F02  22DA               	addwfc	fsr2h,f,c
  2053  001F04  EE10 F002          	lfsr	1,2
  2054  001F08  5007               	movf	fputc@fp,w,c
  2055  001F0A  26E1               	addwf	fsr1l,f,c
  2056  001F0C  5008               	movf	fputc@fp+1,w,c
  2057  001F0E  22E2               	addwfc	fsr1h,f,c
  2058  001F10  50DE               	movf	postinc2,w,c
  2059  001F12  5CE6               	subwf	postinc1,w,c
  2060  001F14  50E6               	movf	postinc1,w,c
  2061  001F16  0A80               	xorlw	128
  2062  001F18  6E0D               	movwf	(??_fputc+4)& (0+255),c
  2063  001F1A  50DE               	movf	postinc2,w,c
  2064  001F1C  0A80               	xorlw	128
  2065  001F1E  580D               	subwfb	(??_fputc+4)& (0+255),w,c
  2066  001F20  B0D8               	btfsc	status,0,c
  2067  001F22  0012               	return	
  2068  001F24                     u1130:
  2069  001F24  EE20 F002          	lfsr	2,2
  2070  001F28  5007               	movf	fputc@fp,w,c
  2071  001F2A  26D9               	addwf	fsr2l,f,c
  2072  001F2C  5008               	movf	fputc@fp+1,w,c
  2073  001F2E  22DA               	addwfc	fsr2h,f,c
  2074  001F30  2ADE               	incf	postinc2,f,c
  2075  001F32  0E00               	movlw	0
  2076  001F34  22DD               	addwfc	postdec2,f,c
  2077  001F36  0012               	return		;funcret
  2078  001F38                     __end_of_fputc:
  2079                           	opt callstack 0
  2080                           
  2081 ;; *************** function _putch *****************
  2082 ;; Defined at:
  2083 ;;		line 102 in file "../Usensorr.X/lcd.c"
  2084 ;; Parameters:    Size  Location     Type
  2085 ;;  data            1    wreg     unsigned char 
  2086 ;; Auto vars:     Size  Location     Type
  2087 ;;  data            1    3[COMRAM] unsigned char 
  2088 ;; Return value:  Size  Location     Type
  2089 ;;                  1    wreg      void 
  2090 ;; Registers used:
  2091 ;;		wreg, status,2, status,0, cstack
  2092 ;; Tracked objects:
  2093 ;;		On entry : 0/0
  2094 ;;		On exit  : 0/0
  2095 ;;		Unchanged: 0/0
  2096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2098 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2100 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2101 ;;Total ram usage:        1 bytes
  2102 ;; Hardware stack levels used:    1
  2103 ;; Hardware stack levels required when called:    3
  2104 ;; This function calls:
  2105 ;;		_send_byte
  2106 ;; This function is called by:
  2107 ;;		_fputc
  2108 ;; This function uses a non-reentrant model
  2109 ;;
  2110                           
  2111                           	psect	text9
  2112  002126                     __ptext9:
  2113                           	opt callstack 0
  2114  002126                     _putch:
  2115                           	opt callstack 23
  2116                           
  2117                           ;incstack = 0
  2118                           ;putch@data stored from wreg
  2119  002126  6E04               	movwf	putch@data,c
  2120                           
  2121                           ;../Usensorr.X/lcd.c: 103:     LATDbits.LATD2 = 1;
  2122  002128  848C               	bsf	3980,2,c	;volatile
  2123                           
  2124                           ;../Usensorr.X/lcd.c: 104:     send_byte((unsigned char)data);
  2125  00212A  5004               	movf	putch@data,w,c
  2126  00212C  EC8A  F010         	call	_send_byte
  2127  002130  0012               	return		;funcret
  2128  002132                     __end_of_putch:
  2129                           	opt callstack 0
  2130                           
  2131 ;; *************** function _abs *****************
  2132 ;; Defined at:
  2133 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  2134 ;; Parameters:    Size  Location     Type
  2135 ;;  a               2   18[COMRAM] int 
  2136 ;; Auto vars:     Size  Location     Type
  2137 ;;		None
  2138 ;; Return value:  Size  Location     Type
  2139 ;;                  2   18[COMRAM] int 
  2140 ;; Registers used:
  2141 ;;		wreg, status,2, status,0
  2142 ;; Tracked objects:
  2143 ;;		On entry : 0/0
  2144 ;;		On exit  : 0/0
  2145 ;;		Unchanged: 0/0
  2146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2147 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2149 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2150 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2151 ;;Total ram usage:        4 bytes
  2152 ;; Hardware stack levels used:    1
  2153 ;; This function calls:
  2154 ;;		Nothing
  2155 ;; This function is called by:
  2156 ;;		_dtoa
  2157 ;; This function uses a non-reentrant model
  2158 ;;
  2159                           
  2160                           	psect	text10
  2161  00202C                     __ptext10:
  2162                           	opt callstack 0
  2163  00202C                     _abs:
  2164                           	opt callstack 26
  2165                           
  2166                           ;incstack = 0
  2167  00202C  BE14               	btfsc	abs@a+1,7,c
  2168  00202E  D005               	goto	u1200
  2169  002030  5014               	movf	abs@a+1,w,c
  2170  002032  E110               	bnz	l886
  2171  002034  0413               	decf	abs@a,w,c
  2172  002036  B0D8               	btfsc	status,0,c
  2173  002038  D00D               	goto	l886
  2174  00203A                     u1200:
  2175  00203A  C013  F015         	movff	abs@a,??_abs
  2176  00203E  C014  F016         	movff	abs@a+1,??_abs+1
  2177  002042  1E15               	comf	??_abs,f,c
  2178  002044  1E16               	comf	??_abs+1,f,c
  2179  002046  4A15               	infsnz	??_abs,f,c
  2180  002048  2A16               	incf	??_abs+1,f,c
  2181  00204A  C015  F013         	movff	??_abs,?_abs
  2182  00204E  C016  F014         	movff	??_abs+1,?_abs+1
  2183  002052  0012               	return	
  2184  002054                     l886:
  2185  002054  C013  F013         	movff	abs@a,?_abs
  2186  002058  C014  F014         	movff	abs@a+1,?_abs+1
  2187  00205C  0012               	return		;funcret
  2188  00205E                     __end_of_abs:
  2189                           	opt callstack 0
  2190                           
  2191 ;; *************** function ___aomod *****************
  2192 ;; Defined at:
  2193 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  2194 ;; Parameters:    Size  Location     Type
  2195 ;;  dividend        8    0[COMRAM] long long 
  2196 ;;  divisor         8    8[COMRAM] long long 
  2197 ;; Auto vars:     Size  Location     Type
  2198 ;;  sign            1   17[COMRAM] unsigned char 
  2199 ;;  counter         1   16[COMRAM] unsigned char 
  2200 ;; Return value:  Size  Location     Type
  2201 ;;                  8    0[COMRAM] long long 
  2202 ;; Registers used:
  2203 ;;		wreg, status,2, status,0
  2204 ;; Tracked objects:
  2205 ;;		On entry : 0/0
  2206 ;;		On exit  : 0/0
  2207 ;;		Unchanged: 0/0
  2208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2209 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2210 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2212 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2213 ;;Total ram usage:       18 bytes
  2214 ;; Hardware stack levels used:    1
  2215 ;; This function calls:
  2216 ;;		Nothing
  2217 ;; This function is called by:
  2218 ;;		_dtoa
  2219 ;; This function uses a non-reentrant model
  2220 ;;
  2221                           
  2222                           	psect	text11
  2223  001B64                     __ptext11:
  2224                           	opt callstack 0
  2225  001B64                     ___aomod:
  2226                           	opt callstack 26
  2227                           
  2228                           ;incstack = 0
  2229  001B64  0E00               	movlw	0
  2230  001B66  6E12               	movwf	___aomod@sign,c
  2231  001B68  AE08               	btfss	___aomod@dividend+7,7,c
  2232  001B6A  D012               	goto	l1804
  2233  001B6C  1E08               	comf	___aomod@dividend+7,f,c
  2234  001B6E  1E07               	comf	___aomod@dividend+6,f,c
  2235  001B70  1E06               	comf	___aomod@dividend+5,f,c
  2236  001B72  1E05               	comf	___aomod@dividend+4,f,c
  2237  001B74  1E04               	comf	___aomod@dividend+3,f,c
  2238  001B76  1E03               	comf	___aomod@dividend+2,f,c
  2239  001B78  1E02               	comf	___aomod@dividend+1,f,c
  2240  001B7A  6C01               	negf	___aomod@dividend,c
  2241  001B7C  0E00               	movlw	0
  2242  001B7E  2202               	addwfc	___aomod@dividend+1,f,c
  2243  001B80  2203               	addwfc	___aomod@dividend+2,f,c
  2244  001B82  2204               	addwfc	___aomod@dividend+3,f,c
  2245  001B84  2205               	addwfc	___aomod@dividend+4,f,c
  2246  001B86  2206               	addwfc	___aomod@dividend+5,f,c
  2247  001B88  2207               	addwfc	___aomod@dividend+6,f,c
  2248  001B8A  2208               	addwfc	___aomod@dividend+7,f,c
  2249  001B8C  0E01               	movlw	1
  2250  001B8E  6E12               	movwf	___aomod@sign,c
  2251  001B90                     l1804:
  2252  001B90  AE10               	btfss	___aomod@divisor+7,7,c
  2253  001B92  D010               	goto	l1808
  2254  001B94  1E10               	comf	___aomod@divisor+7,f,c
  2255  001B96  1E0F               	comf	___aomod@divisor+6,f,c
  2256  001B98  1E0E               	comf	___aomod@divisor+5,f,c
  2257  001B9A  1E0D               	comf	___aomod@divisor+4,f,c
  2258  001B9C  1E0C               	comf	___aomod@divisor+3,f,c
  2259  001B9E  1E0B               	comf	___aomod@divisor+2,f,c
  2260  001BA0  1E0A               	comf	___aomod@divisor+1,f,c
  2261  001BA2  6C09               	negf	___aomod@divisor,c
  2262  001BA4  0E00               	movlw	0
  2263  001BA6  220A               	addwfc	___aomod@divisor+1,f,c
  2264  001BA8  220B               	addwfc	___aomod@divisor+2,f,c
  2265  001BAA  220C               	addwfc	___aomod@divisor+3,f,c
  2266  001BAC  220D               	addwfc	___aomod@divisor+4,f,c
  2267  001BAE  220E               	addwfc	___aomod@divisor+5,f,c
  2268  001BB0  220F               	addwfc	___aomod@divisor+6,f,c
  2269  001BB2  2210               	addwfc	___aomod@divisor+7,f,c
  2270  001BB4                     l1808:
  2271  001BB4  5009               	movf	___aomod@divisor,w,c
  2272  001BB6  100A               	iorwf	___aomod@divisor+1,w,c
  2273  001BB8  100B               	iorwf	___aomod@divisor+2,w,c
  2274  001BBA  100C               	iorwf	___aomod@divisor+3,w,c
  2275  001BBC  100D               	iorwf	___aomod@divisor+4,w,c
  2276  001BBE  100E               	iorwf	___aomod@divisor+5,w,c
  2277  001BC0  100F               	iorwf	___aomod@divisor+6,w,c
  2278  001BC2  1010               	iorwf	___aomod@divisor+7,w,c
  2279  001BC4  B4D8               	btfsc	status,2,c
  2280  001BC6  D03C               	goto	l1824
  2281  001BC8  0E01               	movlw	1
  2282  001BCA  6E11               	movwf	___aomod@counter,c
  2283  001BCC  D00A               	goto	l1814
  2284  001BCE                     l1812:
  2285  001BCE  90D8               	bcf	status,0,c
  2286  001BD0  3609               	rlcf	___aomod@divisor,f,c
  2287  001BD2  360A               	rlcf	___aomod@divisor+1,f,c
  2288  001BD4  360B               	rlcf	___aomod@divisor+2,f,c
  2289  001BD6  360C               	rlcf	___aomod@divisor+3,f,c
  2290  001BD8  360D               	rlcf	___aomod@divisor+4,f,c
  2291  001BDA  360E               	rlcf	___aomod@divisor+5,f,c
  2292  001BDC  360F               	rlcf	___aomod@divisor+6,f,c
  2293  001BDE  3610               	rlcf	___aomod@divisor+7,f,c
  2294  001BE0  2A11               	incf	___aomod@counter,f,c
  2295  001BE2                     l1814:
  2296  001BE2  AE10               	btfss	___aomod@divisor+7,7,c
  2297  001BE4  D7F4               	goto	l1812
  2298  001BE6                     u1310:
  2299  001BE6  5009               	movf	___aomod@divisor,w,c
  2300  001BE8  5C01               	subwf	___aomod@dividend,w,c
  2301  001BEA  500A               	movf	___aomod@divisor+1,w,c
  2302  001BEC  5802               	subwfb	___aomod@dividend+1,w,c
  2303  001BEE  500B               	movf	___aomod@divisor+2,w,c
  2304  001BF0  5803               	subwfb	___aomod@dividend+2,w,c
  2305  001BF2  500C               	movf	___aomod@divisor+3,w,c
  2306  001BF4  5804               	subwfb	___aomod@dividend+3,w,c
  2307  001BF6  500D               	movf	___aomod@divisor+4,w,c
  2308  001BF8  5805               	subwfb	___aomod@dividend+4,w,c
  2309  001BFA  500E               	movf	___aomod@divisor+5,w,c
  2310  001BFC  5806               	subwfb	___aomod@dividend+5,w,c
  2311  001BFE  500F               	movf	___aomod@divisor+6,w,c
  2312  001C00  5807               	subwfb	___aomod@dividend+6,w,c
  2313  001C02  5010               	movf	___aomod@divisor+7,w,c
  2314  001C04  5808               	subwfb	___aomod@dividend+7,w,c
  2315  001C06  A0D8               	btfss	status,0,c
  2316  001C08  D010               	goto	l1820
  2317  001C0A  5009               	movf	___aomod@divisor,w,c
  2318  001C0C  5E01               	subwf	___aomod@dividend,f,c
  2319  001C0E  500A               	movf	___aomod@divisor+1,w,c
  2320  001C10  5A02               	subwfb	___aomod@dividend+1,f,c
  2321  001C12  500B               	movf	___aomod@divisor+2,w,c
  2322  001C14  5A03               	subwfb	___aomod@dividend+2,f,c
  2323  001C16  500C               	movf	___aomod@divisor+3,w,c
  2324  001C18  5A04               	subwfb	___aomod@dividend+3,f,c
  2325  001C1A  500D               	movf	___aomod@divisor+4,w,c
  2326  001C1C  5A05               	subwfb	___aomod@dividend+4,f,c
  2327  001C1E  500E               	movf	___aomod@divisor+5,w,c
  2328  001C20  5A06               	subwfb	___aomod@dividend+5,f,c
  2329  001C22  500F               	movf	___aomod@divisor+6,w,c
  2330  001C24  5A07               	subwfb	___aomod@dividend+6,f,c
  2331  001C26  5010               	movf	___aomod@divisor+7,w,c
  2332  001C28  5A08               	subwfb	___aomod@dividend+7,f,c
  2333  001C2A                     l1820:
  2334  001C2A  90D8               	bcf	status,0,c
  2335  001C2C  3210               	rrcf	___aomod@divisor+7,f,c
  2336  001C2E  320F               	rrcf	___aomod@divisor+6,f,c
  2337  001C30  320E               	rrcf	___aomod@divisor+5,f,c
  2338  001C32  320D               	rrcf	___aomod@divisor+4,f,c
  2339  001C34  320C               	rrcf	___aomod@divisor+3,f,c
  2340  001C36  320B               	rrcf	___aomod@divisor+2,f,c
  2341  001C38  320A               	rrcf	___aomod@divisor+1,f,c
  2342  001C3A  3209               	rrcf	___aomod@divisor,f,c
  2343  001C3C  2E11               	decfsz	___aomod@counter,f,c
  2344  001C3E  D7D3               	goto	u1310
  2345  001C40                     l1824:
  2346  001C40  5012               	movf	___aomod@sign,w,c
  2347  001C42  B4D8               	btfsc	status,2,c
  2348  001C44  D010               	goto	l1828
  2349  001C46  1E08               	comf	___aomod@dividend+7,f,c
  2350  001C48  1E07               	comf	___aomod@dividend+6,f,c
  2351  001C4A  1E06               	comf	___aomod@dividend+5,f,c
  2352  001C4C  1E05               	comf	___aomod@dividend+4,f,c
  2353  001C4E  1E04               	comf	___aomod@dividend+3,f,c
  2354  001C50  1E03               	comf	___aomod@dividend+2,f,c
  2355  001C52  1E02               	comf	___aomod@dividend+1,f,c
  2356  001C54  6C01               	negf	___aomod@dividend,c
  2357  001C56  0E00               	movlw	0
  2358  001C58  2202               	addwfc	___aomod@dividend+1,f,c
  2359  001C5A  2203               	addwfc	___aomod@dividend+2,f,c
  2360  001C5C  2204               	addwfc	___aomod@dividend+3,f,c
  2361  001C5E  2205               	addwfc	___aomod@dividend+4,f,c
  2362  001C60  2206               	addwfc	___aomod@dividend+5,f,c
  2363  001C62  2207               	addwfc	___aomod@dividend+6,f,c
  2364  001C64  2208               	addwfc	___aomod@dividend+7,f,c
  2365  001C66                     l1828:
  2366  001C66  C001  F001         	movff	___aomod@dividend,?___aomod
  2367  001C6A  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2368  001C6E  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  2369  001C72  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  2370  001C76  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2371  001C7A  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  2372  001C7E  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  2373  001C82  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  2374  001C86  0012               	return		;funcret
  2375  001C88                     __end_of___aomod:
  2376                           	opt callstack 0
  2377                           
  2378 ;; *************** function ___aodiv *****************
  2379 ;; Defined at:
  2380 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  2381 ;; Parameters:    Size  Location     Type
  2382 ;;  dividend        8    0[COMRAM] long long 
  2383 ;;  divisor         8    8[COMRAM] long long 
  2384 ;; Auto vars:     Size  Location     Type
  2385 ;;  quotient        8   18[COMRAM] long long 
  2386 ;;  sign            1   17[COMRAM] unsigned char 
  2387 ;;  counter         1   16[COMRAM] unsigned char 
  2388 ;; Return value:  Size  Location     Type
  2389 ;;                  8    0[COMRAM] long long 
  2390 ;; Registers used:
  2391 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2392 ;; Tracked objects:
  2393 ;;		On entry : 0/0
  2394 ;;		On exit  : 0/0
  2395 ;;		Unchanged: 0/0
  2396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2397 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2398 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2400 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2401 ;;Total ram usage:       26 bytes
  2402 ;; Hardware stack levels used:    1
  2403 ;; This function calls:
  2404 ;;		Nothing
  2405 ;; This function is called by:
  2406 ;;		_dtoa
  2407 ;; This function uses a non-reentrant model
  2408 ;;
  2409                           
  2410                           	psect	text12
  2411  0018DC                     __ptext12:
  2412                           	opt callstack 0
  2413  0018DC                     ___aodiv:
  2414                           	opt callstack 26
  2415                           
  2416                           ;incstack = 0
  2417  0018DC  0E00               	movlw	0
  2418  0018DE  6E12               	movwf	___aodiv@sign,c
  2419  0018E0  AE10               	btfss	___aodiv@divisor+7,7,c
  2420  0018E2  D012               	goto	l1760
  2421  0018E4  1E10               	comf	___aodiv@divisor+7,f,c
  2422  0018E6  1E0F               	comf	___aodiv@divisor+6,f,c
  2423  0018E8  1E0E               	comf	___aodiv@divisor+5,f,c
  2424  0018EA  1E0D               	comf	___aodiv@divisor+4,f,c
  2425  0018EC  1E0C               	comf	___aodiv@divisor+3,f,c
  2426  0018EE  1E0B               	comf	___aodiv@divisor+2,f,c
  2427  0018F0  1E0A               	comf	___aodiv@divisor+1,f,c
  2428  0018F2  6C09               	negf	___aodiv@divisor,c
  2429  0018F4  0E00               	movlw	0
  2430  0018F6  220A               	addwfc	___aodiv@divisor+1,f,c
  2431  0018F8  220B               	addwfc	___aodiv@divisor+2,f,c
  2432  0018FA  220C               	addwfc	___aodiv@divisor+3,f,c
  2433  0018FC  220D               	addwfc	___aodiv@divisor+4,f,c
  2434  0018FE  220E               	addwfc	___aodiv@divisor+5,f,c
  2435  001900  220F               	addwfc	___aodiv@divisor+6,f,c
  2436  001902  2210               	addwfc	___aodiv@divisor+7,f,c
  2437  001904  0E01               	movlw	1
  2438  001906  6E12               	movwf	___aodiv@sign,c
  2439  001908                     l1760:
  2440  001908  AE08               	btfss	___aodiv@dividend+7,7,c
  2441  00190A  D012               	goto	l1766
  2442  00190C  1E08               	comf	___aodiv@dividend+7,f,c
  2443  00190E  1E07               	comf	___aodiv@dividend+6,f,c
  2444  001910  1E06               	comf	___aodiv@dividend+5,f,c
  2445  001912  1E05               	comf	___aodiv@dividend+4,f,c
  2446  001914  1E04               	comf	___aodiv@dividend+3,f,c
  2447  001916  1E03               	comf	___aodiv@dividend+2,f,c
  2448  001918  1E02               	comf	___aodiv@dividend+1,f,c
  2449  00191A  6C01               	negf	___aodiv@dividend,c
  2450  00191C  0E00               	movlw	0
  2451  00191E  2202               	addwfc	___aodiv@dividend+1,f,c
  2452  001920  2203               	addwfc	___aodiv@dividend+2,f,c
  2453  001922  2204               	addwfc	___aodiv@dividend+3,f,c
  2454  001924  2205               	addwfc	___aodiv@dividend+4,f,c
  2455  001926  2206               	addwfc	___aodiv@dividend+5,f,c
  2456  001928  2207               	addwfc	___aodiv@dividend+6,f,c
  2457  00192A  2208               	addwfc	___aodiv@dividend+7,f,c
  2458  00192C  0E01               	movlw	1
  2459  00192E  1A12               	xorwf	___aodiv@sign,f,c
  2460  001930                     l1766:
  2461  001930  EE20  F013         	lfsr	2,___aodiv@quotient
  2462  001934  0E07               	movlw	7
  2463  001936                     u1231:
  2464  001936  6ADE               	clrf	postinc2,c
  2465  001938  06E8               	decf	wreg,f,c
  2466  00193A  E2FD               	bc	u1231
  2467  00193C  5009               	movf	___aodiv@divisor,w,c
  2468  00193E  100A               	iorwf	___aodiv@divisor+1,w,c
  2469  001940  100B               	iorwf	___aodiv@divisor+2,w,c
  2470  001942  100C               	iorwf	___aodiv@divisor+3,w,c
  2471  001944  100D               	iorwf	___aodiv@divisor+4,w,c
  2472  001946  100E               	iorwf	___aodiv@divisor+5,w,c
  2473  001948  100F               	iorwf	___aodiv@divisor+6,w,c
  2474  00194A  1010               	iorwf	___aodiv@divisor+7,w,c
  2475  00194C  B4D8               	btfsc	status,2,c
  2476  00194E  D046               	goto	l1788
  2477  001950  0E01               	movlw	1
  2478  001952  6E11               	movwf	___aodiv@counter,c
  2479  001954  D00A               	goto	l1774
  2480  001956                     l1772:
  2481  001956  90D8               	bcf	status,0,c
  2482  001958  3609               	rlcf	___aodiv@divisor,f,c
  2483  00195A  360A               	rlcf	___aodiv@divisor+1,f,c
  2484  00195C  360B               	rlcf	___aodiv@divisor+2,f,c
  2485  00195E  360C               	rlcf	___aodiv@divisor+3,f,c
  2486  001960  360D               	rlcf	___aodiv@divisor+4,f,c
  2487  001962  360E               	rlcf	___aodiv@divisor+5,f,c
  2488  001964  360F               	rlcf	___aodiv@divisor+6,f,c
  2489  001966  3610               	rlcf	___aodiv@divisor+7,f,c
  2490  001968  2A11               	incf	___aodiv@counter,f,c
  2491  00196A                     l1774:
  2492  00196A  AE10               	btfss	___aodiv@divisor+7,7,c
  2493  00196C  D7F4               	goto	l1772
  2494  00196E                     u1250:
  2495  00196E  90D8               	bcf	status,0,c
  2496  001970  3613               	rlcf	___aodiv@quotient,f,c
  2497  001972  3614               	rlcf	___aodiv@quotient+1,f,c
  2498  001974  3615               	rlcf	___aodiv@quotient+2,f,c
  2499  001976  3616               	rlcf	___aodiv@quotient+3,f,c
  2500  001978  3617               	rlcf	___aodiv@quotient+4,f,c
  2501  00197A  3618               	rlcf	___aodiv@quotient+5,f,c
  2502  00197C  3619               	rlcf	___aodiv@quotient+6,f,c
  2503  00197E  361A               	rlcf	___aodiv@quotient+7,f,c
  2504  001980  5009               	movf	___aodiv@divisor,w,c
  2505  001982  5C01               	subwf	___aodiv@dividend,w,c
  2506  001984  500A               	movf	___aodiv@divisor+1,w,c
  2507  001986  5802               	subwfb	___aodiv@dividend+1,w,c
  2508  001988  500B               	movf	___aodiv@divisor+2,w,c
  2509  00198A  5803               	subwfb	___aodiv@dividend+2,w,c
  2510  00198C  500C               	movf	___aodiv@divisor+3,w,c
  2511  00198E  5804               	subwfb	___aodiv@dividend+3,w,c
  2512  001990  500D               	movf	___aodiv@divisor+4,w,c
  2513  001992  5805               	subwfb	___aodiv@dividend+4,w,c
  2514  001994  500E               	movf	___aodiv@divisor+5,w,c
  2515  001996  5806               	subwfb	___aodiv@dividend+5,w,c
  2516  001998  500F               	movf	___aodiv@divisor+6,w,c
  2517  00199A  5807               	subwfb	___aodiv@dividend+6,w,c
  2518  00199C  5010               	movf	___aodiv@divisor+7,w,c
  2519  00199E  5808               	subwfb	___aodiv@dividend+7,w,c
  2520  0019A0  A0D8               	btfss	status,0,c
  2521  0019A2  D011               	goto	l1784
  2522  0019A4  5009               	movf	___aodiv@divisor,w,c
  2523  0019A6  5E01               	subwf	___aodiv@dividend,f,c
  2524  0019A8  500A               	movf	___aodiv@divisor+1,w,c
  2525  0019AA  5A02               	subwfb	___aodiv@dividend+1,f,c
  2526  0019AC  500B               	movf	___aodiv@divisor+2,w,c
  2527  0019AE  5A03               	subwfb	___aodiv@dividend+2,f,c
  2528  0019B0  500C               	movf	___aodiv@divisor+3,w,c
  2529  0019B2  5A04               	subwfb	___aodiv@dividend+3,f,c
  2530  0019B4  500D               	movf	___aodiv@divisor+4,w,c
  2531  0019B6  5A05               	subwfb	___aodiv@dividend+4,f,c
  2532  0019B8  500E               	movf	___aodiv@divisor+5,w,c
  2533  0019BA  5A06               	subwfb	___aodiv@dividend+5,f,c
  2534  0019BC  500F               	movf	___aodiv@divisor+6,w,c
  2535  0019BE  5A07               	subwfb	___aodiv@dividend+6,f,c
  2536  0019C0  5010               	movf	___aodiv@divisor+7,w,c
  2537  0019C2  5A08               	subwfb	___aodiv@dividend+7,f,c
  2538  0019C4  8013               	bsf	___aodiv@quotient,0,c
  2539  0019C6                     l1784:
  2540  0019C6  90D8               	bcf	status,0,c
  2541  0019C8  3210               	rrcf	___aodiv@divisor+7,f,c
  2542  0019CA  320F               	rrcf	___aodiv@divisor+6,f,c
  2543  0019CC  320E               	rrcf	___aodiv@divisor+5,f,c
  2544  0019CE  320D               	rrcf	___aodiv@divisor+4,f,c
  2545  0019D0  320C               	rrcf	___aodiv@divisor+3,f,c
  2546  0019D2  320B               	rrcf	___aodiv@divisor+2,f,c
  2547  0019D4  320A               	rrcf	___aodiv@divisor+1,f,c
  2548  0019D6  3209               	rrcf	___aodiv@divisor,f,c
  2549  0019D8  2E11               	decfsz	___aodiv@counter,f,c
  2550  0019DA  D7C9               	goto	u1250
  2551  0019DC                     l1788:
  2552  0019DC  5012               	movf	___aodiv@sign,w,c
  2553  0019DE  B4D8               	btfsc	status,2,c
  2554  0019E0  D010               	goto	l1792
  2555  0019E2  1E1A               	comf	___aodiv@quotient+7,f,c
  2556  0019E4  1E19               	comf	___aodiv@quotient+6,f,c
  2557  0019E6  1E18               	comf	___aodiv@quotient+5,f,c
  2558  0019E8  1E17               	comf	___aodiv@quotient+4,f,c
  2559  0019EA  1E16               	comf	___aodiv@quotient+3,f,c
  2560  0019EC  1E15               	comf	___aodiv@quotient+2,f,c
  2561  0019EE  1E14               	comf	___aodiv@quotient+1,f,c
  2562  0019F0  6C13               	negf	___aodiv@quotient,c
  2563  0019F2  0E00               	movlw	0
  2564  0019F4  2214               	addwfc	___aodiv@quotient+1,f,c
  2565  0019F6  2215               	addwfc	___aodiv@quotient+2,f,c
  2566  0019F8  2216               	addwfc	___aodiv@quotient+3,f,c
  2567  0019FA  2217               	addwfc	___aodiv@quotient+4,f,c
  2568  0019FC  2218               	addwfc	___aodiv@quotient+5,f,c
  2569  0019FE  2219               	addwfc	___aodiv@quotient+6,f,c
  2570  001A00  221A               	addwfc	___aodiv@quotient+7,f,c
  2571  001A02                     l1792:
  2572  001A02  C013  F001         	movff	___aodiv@quotient,?___aodiv
  2573  001A06  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  2574  001A0A  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  2575  001A0E  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  2576  001A12  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  2577  001A16  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  2578  001A1A  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  2579  001A1E  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  2580  001A22  0012               	return		;funcret
  2581  001A24                     __end_of___aodiv:
  2582                           	opt callstack 0
  2583                           
  2584 ;; *************** function _initLCD *****************
  2585 ;; Defined at:
  2586 ;;		line 69 in file "../Usensorr.X/lcd.c"
  2587 ;; Parameters:    Size  Location     Type
  2588 ;;		None
  2589 ;; Auto vars:     Size  Location     Type
  2590 ;;		None
  2591 ;; Return value:  Size  Location     Type
  2592 ;;                  1    wreg      void 
  2593 ;; Registers used:
  2594 ;;		wreg, status,2, status,0, cstack
  2595 ;; Tracked objects:
  2596 ;;		On entry : 0/0
  2597 ;;		On exit  : 0/0
  2598 ;;		Unchanged: 0/0
  2599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2602 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2603 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2604 ;;Total ram usage:        1 bytes
  2605 ;; Hardware stack levels used:    1
  2606 ;; Hardware stack levels required when called:    4
  2607 ;; This function calls:
  2608 ;;		_lcdInst
  2609 ;;		_send_byte
  2610 ;;		_send_nibble
  2611 ;; This function is called by:
  2612 ;;		_main
  2613 ;; This function uses a non-reentrant model
  2614 ;;
  2615                           
  2616                           	psect	text13
  2617  001F38                     __ptext13:
  2618                           	opt callstack 0
  2619  001F38                     _initLCD:
  2620                           	opt callstack 26
  2621                           
  2622                           ;../Usensorr.X/lcd.c: 70:     _delay((unsigned long)((15)*(10000000/4000.0)));
  2623                           
  2624                           ;incstack = 0
  2625  001F38  0E31               	movlw	49
  2626  001F3A  6E05               	movwf	??_initLCD& (0+255),c
  2627  001F3C  0EB2               	movlw	178
  2628  001F3E                     u2217:
  2629  001F3E  2EE8               	decfsz	wreg,f,c
  2630  001F40  D7FE               	bra	u2217
  2631  001F42  2E05               	decfsz	??_initLCD& (0+255),f,c
  2632  001F44  D7FC               	bra	u2217
  2633  001F46  D000               	nop2	
  2634                           
  2635                           ;../Usensorr.X/lcd.c: 72:     LATDbits.LATD2 = 0;
  2636  001F48  948C               	bcf	3980,2,c	;volatile
  2637                           
  2638                           ;../Usensorr.X/lcd.c: 74:     send_nibble(0b0011);
  2639  001F4A  0E03               	movlw	3
  2640  001F4C  EC7F  F010         	call	_send_nibble
  2641                           
  2642                           ;../Usensorr.X/lcd.c: 75:     _delay((unsigned long)((5)*(10000000/4000.0)));
  2643  001F50  0E11               	movlw	17
  2644  001F52  6E05               	movwf	??_initLCD& (0+255),c
  2645  001F54  0E3A               	movlw	58
  2646  001F56                     u2227:
  2647  001F56  2EE8               	decfsz	wreg,f,c
  2648  001F58  D7FE               	bra	u2227
  2649  001F5A  2E05               	decfsz	??_initLCD& (0+255),f,c
  2650  001F5C  D7FC               	bra	u2227
  2651  001F5E  D000               	nop2	
  2652                           
  2653                           ;../Usensorr.X/lcd.c: 76:     send_nibble(0b0011);
  2654  001F60  0E03               	movlw	3
  2655  001F62  EC7F  F010         	call	_send_nibble
  2656                           
  2657                           ;../Usensorr.X/lcd.c: 77:     _delay((unsigned long)((150)*(10000000/4000000.0)));
  2658  001F66  0E7D               	movlw	125
  2659  001F68                     u2237:
  2660  001F68  2EE8               	decfsz	wreg,f,c
  2661  001F6A  D7FE               	bra	u2237
  2662                           
  2663                           ;../Usensorr.X/lcd.c: 78:     send_byte(0b00110010);
  2664  001F6C  0E32               	movlw	50
  2665  001F6E  EC8A  F010         	call	_send_byte
  2666                           
  2667                           ;../Usensorr.X/lcd.c: 80:     send_byte(0b00101000);
  2668  001F72  0E28               	movlw	40
  2669  001F74  EC8A  F010         	call	_send_byte
  2670                           
  2671                           ;../Usensorr.X/lcd.c: 81:     send_byte(0b00001000);
  2672  001F78  0E08               	movlw	8
  2673  001F7A  EC8A  F010         	call	_send_byte
  2674                           
  2675                           ;../Usensorr.X/lcd.c: 82:     send_byte(0b00000001);
  2676  001F7E  0E01               	movlw	1
  2677  001F80  EC8A  F010         	call	_send_byte
  2678                           
  2679                           ;../Usensorr.X/lcd.c: 83:     _delay((unsigned long)((5)*(10000000/4000.0)));
  2680  001F84  0E11               	movlw	17
  2681  001F86  6E05               	movwf	??_initLCD& (0+255),c
  2682  001F88  0E3A               	movlw	58
  2683  001F8A                     u2247:
  2684  001F8A  2EE8               	decfsz	wreg,f,c
  2685  001F8C  D7FE               	bra	u2247
  2686  001F8E  2E05               	decfsz	??_initLCD& (0+255),f,c
  2687  001F90  D7FC               	bra	u2247
  2688  001F92  D000               	nop2	
  2689                           
  2690                           ;../Usensorr.X/lcd.c: 84:     send_byte(0b00000110);
  2691  001F94  0E06               	movlw	6
  2692  001F96  EC8A  F010         	call	_send_byte
  2693                           
  2694                           ;../Usensorr.X/lcd.c: 87:     { lcdInst( (unsigned char)(8 | (1 << 2) | (1 << 1) | 1) );
      +                          };
  2695  001F9A  0E0F               	movlw	15
  2696  001F9C  EC99  F010         	call	_lcdInst
  2697  001FA0  0012               	return		;funcret
  2698  001FA2                     __end_of_initLCD:
  2699                           	opt callstack 0
  2700                           
  2701 ;; *************** function _lcdInst *****************
  2702 ;; Defined at:
  2703 ;;		line 64 in file "../Usensorr.X/lcd.c"
  2704 ;; Parameters:    Size  Location     Type
  2705 ;;  data            1    wreg     unsigned char 
  2706 ;; Auto vars:     Size  Location     Type
  2707 ;;  data            1    3[COMRAM] unsigned char 
  2708 ;; Return value:  Size  Location     Type
  2709 ;;                  1    wreg      void 
  2710 ;; Registers used:
  2711 ;;		wreg, status,2, status,0, cstack
  2712 ;; Tracked objects:
  2713 ;;		On entry : 0/0
  2714 ;;		On exit  : 0/0
  2715 ;;		Unchanged: 0/0
  2716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2718 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2720 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2721 ;;Total ram usage:        1 bytes
  2722 ;; Hardware stack levels used:    1
  2723 ;; Hardware stack levels required when called:    3
  2724 ;; This function calls:
  2725 ;;		_send_byte
  2726 ;; This function is called by:
  2727 ;;		_initLCD
  2728 ;;		_main
  2729 ;;		_lcd_shift_cursor
  2730 ;;		_lcd_shift_display
  2731 ;; This function uses a non-reentrant model
  2732 ;;
  2733                           
  2734                           	psect	text14
  2735  002132                     __ptext14:
  2736                           	opt callstack 0
  2737  002132                     _lcdInst:
  2738                           	opt callstack 27
  2739                           
  2740                           ;incstack = 0
  2741                           ;lcdInst@data stored from wreg
  2742  002132  6E04               	movwf	lcdInst@data,c
  2743                           
  2744                           ;../Usensorr.X/lcd.c: 65:     LATDbits.LATD2 = 0;
  2745  002134  948C               	bcf	3980,2,c	;volatile
  2746                           
  2747                           ;../Usensorr.X/lcd.c: 66:     send_byte(data);
  2748  002136  5004               	movf	lcdInst@data,w,c
  2749  002138  EC8A  F010         	call	_send_byte
  2750  00213C  0012               	return		;funcret
  2751  00213E                     __end_of_lcdInst:
  2752                           	opt callstack 0
  2753                           
  2754 ;; *************** function _send_byte *****************
  2755 ;; Defined at:
  2756 ;;		line 55 in file "../Usensorr.X/lcd.c"
  2757 ;; Parameters:    Size  Location     Type
  2758 ;;  data            1    wreg     unsigned char 
  2759 ;; Auto vars:     Size  Location     Type
  2760 ;;  data            1    2[COMRAM] unsigned char 
  2761 ;; Return value:  Size  Location     Type
  2762 ;;                  1    wreg      void 
  2763 ;; Registers used:
  2764 ;;		wreg, status,2, status,0, cstack
  2765 ;; Tracked objects:
  2766 ;;		On entry : 0/0
  2767 ;;		On exit  : 0/0
  2768 ;;		Unchanged: 0/0
  2769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2771 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2773 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2774 ;;Total ram usage:        1 bytes
  2775 ;; Hardware stack levels used:    1
  2776 ;; Hardware stack levels required when called:    2
  2777 ;; This function calls:
  2778 ;;		_send_nibble
  2779 ;; This function is called by:
  2780 ;;		_lcdInst
  2781 ;;		_initLCD
  2782 ;;		_putch
  2783 ;; This function uses a non-reentrant model
  2784 ;;
  2785                           
  2786                           	psect	text15
  2787  002114                     __ptext15:
  2788                           	opt callstack 0
  2789  002114                     _send_byte:
  2790                           	opt callstack 23
  2791                           
  2792                           ;incstack = 0
  2793                           ;send_byte@data stored from wreg
  2794  002114  6E03               	movwf	send_byte@data,c
  2795                           
  2796                           ;../Usensorr.X/lcd.c: 57:     send_nibble(data >> 4);
  2797  002116  3803               	swapf	send_byte@data,w,c
  2798  002118  0B0F               	andlw	15
  2799  00211A  EC7F  F010         	call	_send_nibble
  2800                           
  2801                           ;../Usensorr.X/lcd.c: 60:     send_nibble(data);
  2802  00211E  5003               	movf	send_byte@data,w,c
  2803  002120  EC7F  F010         	call	_send_nibble
  2804  002124  0012               	return		;funcret
  2805  002126                     __end_of_send_byte:
  2806                           	opt callstack 0
  2807                           
  2808 ;; *************** function _send_nibble *****************
  2809 ;; Defined at:
  2810 ;;		line 44 in file "../Usensorr.X/lcd.c"
  2811 ;; Parameters:    Size  Location     Type
  2812 ;;  data            1    wreg     unsigned char 
  2813 ;; Auto vars:     Size  Location     Type
  2814 ;;  data            1    1[COMRAM] unsigned char 
  2815 ;; Return value:  Size  Location     Type
  2816 ;;                  1    wreg      void 
  2817 ;; Registers used:
  2818 ;;		wreg, status,2, status,0, cstack
  2819 ;; Tracked objects:
  2820 ;;		On entry : 0/0
  2821 ;;		On exit  : 0/0
  2822 ;;		Unchanged: 0/0
  2823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2825 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2827 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2828 ;;Total ram usage:        1 bytes
  2829 ;; Hardware stack levels used:    1
  2830 ;; Hardware stack levels required when called:    1
  2831 ;; This function calls:
  2832 ;;		_pulse_e
  2833 ;; This function is called by:
  2834 ;;		_send_byte
  2835 ;;		_initLCD
  2836 ;; This function uses a non-reentrant model
  2837 ;;
  2838                           
  2839                           	psect	text16
  2840  0020FE                     __ptext16:
  2841                           	opt callstack 0
  2842  0020FE                     _send_nibble:
  2843                           	opt callstack 23
  2844                           
  2845                           ;incstack = 0
  2846                           ;send_nibble@data stored from wreg
  2847  0020FE  6E02               	movwf	send_nibble@data,c
  2848                           
  2849                           ;../Usensorr.X/lcd.c: 46:     LATD = (unsigned char)(LATD & 0x0F);
  2850  002100  508C               	movf	3980,w,c	;volatile
  2851  002102  0B0F               	andlw	15
  2852  002104  6E8C               	movwf	3980,c	;volatile
  2853                           
  2854                           ;../Usensorr.X/lcd.c: 47:     LATD = (unsigned char)((data << 4) | LATD);
  2855  002106  3802               	swapf	send_nibble@data,w,c
  2856  002108  0BF0               	andlw	240
  2857  00210A  108C               	iorwf	3980,w,c	;volatile
  2858  00210C  6E8C               	movwf	3980,c	;volatile
  2859                           
  2860                           ;../Usensorr.X/lcd.c: 48:     pulse_e();
  2861  00210E  EC44  F010         	call	_pulse_e	;wreg free
  2862  002112  0012               	return		;funcret
  2863  002114                     __end_of_send_nibble:
  2864                           	opt callstack 0
  2865                           
  2866 ;; *************** function _pulse_e *****************
  2867 ;; Defined at:
  2868 ;;		line 28 in file "../Usensorr.X/lcd.c"
  2869 ;; Parameters:    Size  Location     Type
  2870 ;;		None
  2871 ;; Auto vars:     Size  Location     Type
  2872 ;;  interruptSta    1    0[COMRAM] unsigned char 
  2873 ;; Return value:  Size  Location     Type
  2874 ;;                  1    wreg      void 
  2875 ;; Registers used:
  2876 ;;		wreg
  2877 ;; Tracked objects:
  2878 ;;		On entry : 0/0
  2879 ;;		On exit  : 0/0
  2880 ;;		Unchanged: 0/0
  2881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2883 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2885 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2886 ;;Total ram usage:        1 bytes
  2887 ;; Hardware stack levels used:    1
  2888 ;; This function calls:
  2889 ;;		Nothing
  2890 ;; This function is called by:
  2891 ;;		_send_nibble
  2892 ;; This function uses a non-reentrant model
  2893 ;;
  2894                           
  2895                           	psect	text17
  2896  002088                     __ptext17:
  2897                           	opt callstack 0
  2898  002088                     _pulse_e:
  2899                           	opt callstack 23
  2900                           
  2901                           ;../Usensorr.X/lcd.c: 29:     unsigned char interruptState = INTCONbits.GIE;
  2902                           
  2903                           ;incstack = 0
  2904  002088  0E00               	movlw	0
  2905  00208A  BEF2               	btfsc	4082,7,c	;volatile
  2906  00208C  0E01               	movlw	1
  2907  00208E  6E01               	movwf	pulse_e@interruptState,c
  2908                           
  2909                           ;../Usensorr.X/lcd.c: 30:     (INTCONbits.GIE = 0);
  2910  002090  9EF2               	bcf	4082,7,c	;volatile
  2911                           
  2912                           ;../Usensorr.X/lcd.c: 31:     LATDbits.LATD3 = 1;
  2913  002092  868C               	bsf	3980,3,c	;volatile
  2914                           
  2915                           ;../Usensorr.X/lcd.c: 34:     _delay((unsigned long)((25)*(10000000/4000000.0)));
  2916  002094  0E14               	movlw	20
  2917  002096                     u2257:
  2918  002096  2EE8               	decfsz	wreg,f,c
  2919  002098  D7FE               	bra	u2257
  2920  00209A  D000               	nop2	
  2921                           
  2922                           ;../Usensorr.X/lcd.c: 35:     LATDbits.LATD3 = 0;
  2923  00209C  968C               	bcf	3980,3,c	;volatile
  2924                           
  2925                           ;../Usensorr.X/lcd.c: 36:     _delay((unsigned long)((100)*(10000000/4000000.0)));
  2926  00209E  0E53               	movlw	83
  2927  0020A0                     u2267:
  2928  0020A0  2EE8               	decfsz	wreg,f,c
  2929  0020A2  D7FE               	bra	u2267
  2930  0020A4  F000               	nop	
  2931                           
  2932                           ;../Usensorr.X/lcd.c: 37:     INTCONbits.GIE = interruptState;
  2933  0020A6  B001               	btfsc	pulse_e@interruptState,0,c
  2934  0020A8  D002               	bra	u1095
  2935  0020AA  9EF2               	bcf	4082,7,c	;volatile
  2936  0020AC  D001               	bra	u1096
  2937  0020AE                     u1095:
  2938  0020AE  8EF2               	bsf	4082,7,c	;volatile
  2939  0020B0                     u1096:
  2940  0020B0  0012               	return		;funcret
  2941  0020B2                     __end_of_pulse_e:
  2942                           	opt callstack 0
  2943                           
  2944 ;; *************** function ___xxtofl *****************
  2945 ;; Defined at:
  2946 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  2947 ;; Parameters:    Size  Location     Type
  2948 ;;  sign            1    wreg     unsigned char 
  2949 ;;  val             4    0[COMRAM] long 
  2950 ;; Auto vars:     Size  Location     Type
  2951 ;;  sign            1    8[COMRAM] unsigned char 
  2952 ;;  arg             4   10[COMRAM] unsigned long 
  2953 ;;  exp             1    9[COMRAM] unsigned char 
  2954 ;; Return value:  Size  Location     Type
  2955 ;;                  4    0[COMRAM] unsigned char 
  2956 ;; Registers used:
  2957 ;;		wreg, status,2, status,0
  2958 ;; Tracked objects:
  2959 ;;		On entry : 0/0
  2960 ;;		On exit  : 0/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2963 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2964 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2965 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2966 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2967 ;;Total ram usage:       14 bytes
  2968 ;; Hardware stack levels used:    1
  2969 ;; This function calls:
  2970 ;;		Nothing
  2971 ;; This function is called by:
  2972 ;;		_main
  2973 ;; This function uses a non-reentrant model
  2974 ;;
  2975                           
  2976                           	psect	text18
  2977  001A24                     __ptext18:
  2978                           	opt callstack 0
  2979  001A24                     ___xxtofl:
  2980                           	opt callstack 30
  2981                           
  2982                           ;incstack = 0
  2983                           ;___xxtofl@sign stored from wreg
  2984  001A24  6E09               	movwf	___xxtofl@sign,c
  2985  001A26  5009               	movf	___xxtofl@sign,w,c
  2986  001A28  A4D8               	btfss	status,2,c
  2987  001A2A  AE04               	btfss	___xxtofl@val+3,7,c
  2988  001A2C  D01A               	goto	l866
  2989  001A2E  C001  F005         	movff	___xxtofl@val,??___xxtofl
  2990  001A32  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  2991  001A36  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  2992  001A3A  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  2993  001A3E  1E05               	comf	??___xxtofl,f,c
  2994  001A40  1E06               	comf	??___xxtofl+1,f,c
  2995  001A42  1E07               	comf	??___xxtofl+2,f,c
  2996  001A44  1E08               	comf	??___xxtofl+3,f,c
  2997  001A46  2A05               	incf	??___xxtofl,f,c
  2998  001A48  0E00               	movlw	0
  2999  001A4A  2206               	addwfc	??___xxtofl+1,f,c
  3000  001A4C  2207               	addwfc	??___xxtofl+2,f,c
  3001  001A4E  2208               	addwfc	??___xxtofl+3,f,c
  3002  001A50  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  3003  001A54  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  3004  001A58  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  3005  001A5C  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  3006  001A60  D008               	goto	l2242
  3007  001A62                     l866:
  3008  001A62  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  3009  001A66  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3010  001A6A  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3011  001A6E  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3012  001A72                     l2242:
  3013  001A72  5001               	movf	___xxtofl@val,w,c
  3014  001A74  1002               	iorwf	___xxtofl@val+1,w,c
  3015  001A76  1003               	iorwf	___xxtofl@val+2,w,c
  3016  001A78  1004               	iorwf	___xxtofl@val+3,w,c
  3017  001A7A  A4D8               	btfss	status,2,c
  3018  001A7C  D009               	goto	l2248
  3019  001A7E  0E00               	movlw	0
  3020  001A80  6E01               	movwf	?___xxtofl,c
  3021  001A82  0E00               	movlw	0
  3022  001A84  6E02               	movwf	?___xxtofl+1,c
  3023  001A86  0E00               	movlw	0
  3024  001A88  6E03               	movwf	?___xxtofl+2,c
  3025  001A8A  0E00               	movlw	0
  3026  001A8C  6E04               	movwf	?___xxtofl+3,c
  3027  001A8E  0012               	return	
  3028  001A90                     l2248:
  3029  001A90  0E96               	movlw	150
  3030  001A92  6E0A               	movwf	___xxtofl@exp,c
  3031  001A94  D006               	goto	l2252
  3032  001A96                     l2250:
  3033  001A96  2A0A               	incf	___xxtofl@exp,f,c
  3034  001A98  90D8               	bcf	status,0,c
  3035  001A9A  320E               	rrcf	___xxtofl@arg+3,f,c
  3036  001A9C  320D               	rrcf	___xxtofl@arg+2,f,c
  3037  001A9E  320C               	rrcf	___xxtofl@arg+1,f,c
  3038  001AA0  320B               	rrcf	___xxtofl@arg,f,c
  3039  001AA2                     l2252:
  3040  001AA2  0E00               	movlw	0
  3041  001AA4  140B               	andwf	___xxtofl@arg,w,c
  3042  001AA6  6E05               	movwf	??___xxtofl& (0+255),c
  3043  001AA8  0E00               	movlw	0
  3044  001AAA  140C               	andwf	___xxtofl@arg+1,w,c
  3045  001AAC  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  3046  001AAE  0E00               	movlw	0
  3047  001AB0  140D               	andwf	___xxtofl@arg+2,w,c
  3048  001AB2  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  3049  001AB4  0EFE               	movlw	254
  3050  001AB6  140E               	andwf	___xxtofl@arg+3,w,c
  3051  001AB8  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  3052  001ABA  5005               	movf	??___xxtofl,w,c
  3053  001ABC  1006               	iorwf	??___xxtofl+1,w,c
  3054  001ABE  1007               	iorwf	??___xxtofl+2,w,c
  3055  001AC0  1008               	iorwf	??___xxtofl+3,w,c
  3056  001AC2  B4D8               	btfsc	status,2,c
  3057  001AC4  D00D               	goto	l873
  3058  001AC6  D7E7               	goto	l2250
  3059  001AC8                     l2254:
  3060  001AC8  2A0A               	incf	___xxtofl@exp,f,c
  3061  001ACA  0E01               	movlw	1
  3062  001ACC  260B               	addwf	___xxtofl@arg,f,c
  3063  001ACE  0E00               	movlw	0
  3064  001AD0  220C               	addwfc	___xxtofl@arg+1,f,c
  3065  001AD2  220D               	addwfc	___xxtofl@arg+2,f,c
  3066  001AD4  220E               	addwfc	___xxtofl@arg+3,f,c
  3067  001AD6  90D8               	bcf	status,0,c
  3068  001AD8  320E               	rrcf	___xxtofl@arg+3,f,c
  3069  001ADA  320D               	rrcf	___xxtofl@arg+2,f,c
  3070  001ADC  320C               	rrcf	___xxtofl@arg+1,f,c
  3071  001ADE  320B               	rrcf	___xxtofl@arg,f,c
  3072  001AE0                     l873:
  3073  001AE0  0E00               	movlw	0
  3074  001AE2  140B               	andwf	___xxtofl@arg,w,c
  3075  001AE4  6E05               	movwf	??___xxtofl& (0+255),c
  3076  001AE6  0E00               	movlw	0
  3077  001AE8  140C               	andwf	___xxtofl@arg+1,w,c
  3078  001AEA  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  3079  001AEC  0E00               	movlw	0
  3080  001AEE  140D               	andwf	___xxtofl@arg+2,w,c
  3081  001AF0  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  3082  001AF2  0EFF               	movlw	255
  3083  001AF4  140E               	andwf	___xxtofl@arg+3,w,c
  3084  001AF6  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  3085  001AF8  5005               	movf	??___xxtofl,w,c
  3086  001AFA  1006               	iorwf	??___xxtofl+1,w,c
  3087  001AFC  1007               	iorwf	??___xxtofl+2,w,c
  3088  001AFE  1008               	iorwf	??___xxtofl+3,w,c
  3089  001B00  B4D8               	btfsc	status,2,c
  3090  001B02  D007               	goto	l2262
  3091  001B04  D7E1               	goto	l2254
  3092  001B06                     l2260:
  3093  001B06  060A               	decf	___xxtofl@exp,f,c
  3094  001B08  90D8               	bcf	status,0,c
  3095  001B0A  360B               	rlcf	___xxtofl@arg,f,c
  3096  001B0C  360C               	rlcf	___xxtofl@arg+1,f,c
  3097  001B0E  360D               	rlcf	___xxtofl@arg+2,f,c
  3098  001B10  360E               	rlcf	___xxtofl@arg+3,f,c
  3099  001B12                     l2262:
  3100  001B12  BE0D               	btfsc	___xxtofl@arg+2,7,c
  3101  001B14  D003               	goto	u2020
  3102  001B16  0E02               	movlw	2
  3103  001B18  600A               	cpfslt	___xxtofl@exp,c
  3104  001B1A  D7F5               	goto	l2260
  3105  001B1C                     u2020:
  3106  001B1C  A00A               	btfss	___xxtofl@exp,0,c
  3107  001B1E  9E0D               	bcf	___xxtofl@arg+2,7,c
  3108  001B20  90D8               	bcf	status,0,c
  3109  001B22  320A               	rrcf	___xxtofl@exp,f,c
  3110  001B24  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  3111  001B28  6A06               	clrf	(??___xxtofl+1)& (0+255),c
  3112  001B2A  6A07               	clrf	(??___xxtofl+2)& (0+255),c
  3113  001B2C  6A08               	clrf	(??___xxtofl+3)& (0+255),c
  3114  001B2E  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  3115  001B32  6A07               	clrf	??___xxtofl+2,c
  3116  001B34  6A06               	clrf	??___xxtofl+1,c
  3117  001B36  6A05               	clrf	??___xxtofl,c
  3118  001B38  5005               	movf	??___xxtofl,w,c
  3119  001B3A  120B               	iorwf	___xxtofl@arg,f,c
  3120  001B3C  5006               	movf	??___xxtofl+1,w,c
  3121  001B3E  120C               	iorwf	___xxtofl@arg+1,f,c
  3122  001B40  5007               	movf	??___xxtofl+2,w,c
  3123  001B42  120D               	iorwf	___xxtofl@arg+2,f,c
  3124  001B44  5008               	movf	??___xxtofl+3,w,c
  3125  001B46  120E               	iorwf	___xxtofl@arg+3,f,c
  3126  001B48  5009               	movf	___xxtofl@sign,w,c
  3127  001B4A  A4D8               	btfss	status,2,c
  3128  001B4C  AE04               	btfss	___xxtofl@val+3,7,c
  3129  001B4E  D001               	goto	l2278
  3130  001B50  8E0E               	bsf	___xxtofl@arg+3,7,c
  3131  001B52                     l2278:
  3132  001B52  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  3133  001B56  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  3134  001B5A  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  3135  001B5E  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  3136  001B62  0012               	return		;funcret
  3137  001B64                     __end_of___xxtofl:
  3138                           	opt callstack 0
  3139                           
  3140 ;; *************** function ___fltol *****************
  3141 ;; Defined at:
  3142 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  3143 ;; Parameters:    Size  Location     Type
  3144 ;;  f1              4   39[COMRAM] unsigned char 
  3145 ;; Auto vars:     Size  Location     Type
  3146 ;;  exp1            1   48[COMRAM] unsigned char 
  3147 ;;  sign1           1   47[COMRAM] unsigned char 
  3148 ;; Return value:  Size  Location     Type
  3149 ;;                  4   39[COMRAM] long 
  3150 ;; Registers used:
  3151 ;;		wreg, status,2, status,0
  3152 ;; Tracked objects:
  3153 ;;		On entry : 0/0
  3154 ;;		On exit  : 0/0
  3155 ;;		Unchanged: 0/0
  3156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3157 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3158 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3159 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3160 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3161 ;;Total ram usage:       10 bytes
  3162 ;; Hardware stack levels used:    1
  3163 ;; This function calls:
  3164 ;;		Nothing
  3165 ;; This function is called by:
  3166 ;;		_main
  3167 ;; This function uses a non-reentrant model
  3168 ;;
  3169                           
  3170                           	psect	text19
  3171  001C88                     __ptext19:
  3172                           	opt callstack 0
  3173  001C88                     ___fltol:
  3174                           	opt callstack 30
  3175                           
  3176                           ;incstack = 0
  3177  001C88  342A               	rlcf	___fltol@f1+2,w,c
  3178  001C8A  342B               	rlcf	___fltol@f1+3,w,c
  3179  001C8C  6E31               	movwf	___fltol@exp1,c
  3180  001C8E  5031               	movf	___fltol@exp1,w,c
  3181  001C90  A4D8               	btfss	status,2,c
  3182  001C92  D009               	goto	l2198
  3183  001C94                     u1890:
  3184  001C94  0E00               	movlw	0
  3185  001C96  6E28               	movwf	?___fltol,c
  3186  001C98  0E00               	movlw	0
  3187  001C9A  6E29               	movwf	?___fltol+1,c
  3188  001C9C  0E00               	movlw	0
  3189  001C9E  6E2A               	movwf	?___fltol+2,c
  3190  001CA0  0E00               	movlw	0
  3191  001CA2  6E2B               	movwf	?___fltol+3,c
  3192  001CA4  0012               	return	
  3193  001CA6                     l2198:
  3194  001CA6  C028  F02C         	movff	___fltol@f1,??___fltol
  3195  001CAA  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
  3196  001CAE  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
  3197  001CB2  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
  3198  001CB6  0E20               	movlw	32
  3199  001CB8  D005               	goto	u1900
  3200  001CBA                     u1905:
  3201  001CBA  90D8               	bcf	status,0,c
  3202  001CBC  322F               	rrcf	??___fltol+3,f,c
  3203  001CBE  322E               	rrcf	??___fltol+2,f,c
  3204  001CC0  322D               	rrcf	??___fltol+1,f,c
  3205  001CC2  322C               	rrcf	??___fltol,f,c
  3206  001CC4                     u1900:
  3207  001CC4  2EE8               	decfsz	wreg,f,c
  3208  001CC6  D7F9               	goto	u1905
  3209  001CC8  502C               	movf	??___fltol,w,c
  3210  001CCA  6E30               	movwf	___fltol@sign1,c
  3211  001CCC  8E2A               	bsf	___fltol@f1+2,7,c
  3212  001CCE  0EFF               	movlw	255
  3213  001CD0  1628               	andwf	___fltol@f1,f,c
  3214  001CD2  0EFF               	movlw	255
  3215  001CD4  1629               	andwf	___fltol@f1+1,f,c
  3216  001CD6  0EFF               	movlw	255
  3217  001CD8  162A               	andwf	___fltol@f1+2,f,c
  3218  001CDA  0E00               	movlw	0
  3219  001CDC  162B               	andwf	___fltol@f1+3,f,c
  3220  001CDE  0E96               	movlw	150
  3221  001CE0  5E31               	subwf	___fltol@exp1,f,c
  3222  001CE2  AE31               	btfss	___fltol@exp1,7,c
  3223  001CE4  D00D               	goto	l2218
  3224  001CE6  5031               	movf	___fltol@exp1,w,c
  3225  001CE8  0A80               	xorlw	128
  3226  001CEA  0F97               	addlw	151
  3227  001CEC  A0D8               	btfss	status,0,c
  3228  001CEE  D7D2               	goto	u1890
  3229  001CF0                     l2214:
  3230  001CF0  90D8               	bcf	status,0,c
  3231  001CF2  322B               	rrcf	___fltol@f1+3,f,c
  3232  001CF4  322A               	rrcf	___fltol@f1+2,f,c
  3233  001CF6  3229               	rrcf	___fltol@f1+1,f,c
  3234  001CF8  3228               	rrcf	___fltol@f1,f,c
  3235  001CFA  3E31               	incfsz	___fltol@exp1,f,c
  3236  001CFC  D7F9               	goto	l2214
  3237  001CFE  D00D               	goto	u1940
  3238  001D00                     l2218:
  3239  001D00  0E1F               	movlw	31
  3240  001D02  6431               	cpfsgt	___fltol@exp1,c
  3241  001D04  D007               	goto	l2226
  3242  001D06  D7C6               	goto	u1890
  3243  001D08                     l2224:
  3244  001D08  90D8               	bcf	status,0,c
  3245  001D0A  3628               	rlcf	___fltol@f1,f,c
  3246  001D0C  3629               	rlcf	___fltol@f1+1,f,c
  3247  001D0E  362A               	rlcf	___fltol@f1+2,f,c
  3248  001D10  362B               	rlcf	___fltol@f1+3,f,c
  3249  001D12  0631               	decf	___fltol@exp1,f,c
  3250  001D14                     l2226:
  3251  001D14  5031               	movf	___fltol@exp1,w,c
  3252  001D16  A4D8               	btfss	status,2,c
  3253  001D18  D7F7               	goto	l2224
  3254  001D1A                     u1940:
  3255  001D1A  5030               	movf	___fltol@sign1,w,c
  3256  001D1C  B4D8               	btfsc	status,2,c
  3257  001D1E  D008               	goto	l2232
  3258  001D20  1E2B               	comf	___fltol@f1+3,f,c
  3259  001D22  1E2A               	comf	___fltol@f1+2,f,c
  3260  001D24  1E29               	comf	___fltol@f1+1,f,c
  3261  001D26  6C28               	negf	___fltol@f1,c
  3262  001D28  0E00               	movlw	0
  3263  001D2A  2229               	addwfc	___fltol@f1+1,f,c
  3264  001D2C  222A               	addwfc	___fltol@f1+2,f,c
  3265  001D2E  222B               	addwfc	___fltol@f1+3,f,c
  3266  001D30                     l2232:
  3267  001D30  C028  F028         	movff	___fltol@f1,?___fltol
  3268  001D34  C029  F029         	movff	___fltol@f1+1,?___fltol+1
  3269  001D38  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
  3270  001D3C  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
  3271  001D40  0012               	return		;funcret
  3272  001D42                     __end_of___fltol:
  3273                           	opt callstack 0
  3274                           
  3275 ;; *************** function ___fldiv *****************
  3276 ;; Defined at:
  3277 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
  3278 ;; Parameters:    Size  Location     Type
  3279 ;;  b               4   14[COMRAM] long 
  3280 ;;  a               4   18[COMRAM] long 
  3281 ;; Auto vars:     Size  Location     Type
  3282 ;;  grs             4   33[COMRAM] unsigned long 
  3283 ;;  rem             4   26[COMRAM] unsigned long 
  3284 ;;  new_exp         2   31[COMRAM] short 
  3285 ;;  aexp            1   38[COMRAM] unsigned char 
  3286 ;;  bexp            1   37[COMRAM] unsigned char 
  3287 ;;  sign            1   30[COMRAM] unsigned char 
  3288 ;; Return value:  Size  Location     Type
  3289 ;;                  4   14[COMRAM] unsigned char 
  3290 ;; Registers used:
  3291 ;;		wreg, status,2, status,0
  3292 ;; Tracked objects:
  3293 ;;		On entry : 0/0
  3294 ;;		On exit  : 0/0
  3295 ;;		Unchanged: 0/0
  3296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3297 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3298 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3299 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3300 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3301 ;;Total ram usage:       25 bytes
  3302 ;; Hardware stack levels used:    1
  3303 ;; This function calls:
  3304 ;;		Nothing
  3305 ;; This function is called by:
  3306 ;;		_main
  3307 ;; This function uses a non-reentrant model
  3308 ;;
  3309                           
  3310                           	psect	text20
  3311  001042                     __ptext20:
  3312                           	opt callstack 0
  3313  001042                     ___fldiv:
  3314                           	opt callstack 30
  3315                           
  3316                           ;incstack = 0
  3317  001042  5012               	movf	___fldiv@b+3,w,c
  3318  001044  0B80               	andlw	128
  3319  001046  6E1F               	movwf	___fldiv@sign,c
  3320  001048  5012               	movf	___fldiv@b+3,w,c
  3321  00104A  2412               	addwf	___fldiv@b+3,w,c
  3322  00104C  6E26               	movwf	___fldiv@bexp,c
  3323  00104E  BE11               	btfsc	___fldiv@b+2,7,c
  3324  001050  8026               	bsf	___fldiv@bexp,0,c
  3325  001052  5026               	movf	___fldiv@bexp,w,c
  3326  001054  B4D8               	btfsc	status,2,c
  3327  001056  D00D               	goto	l1990
  3328  001058  2826               	incf	___fldiv@bexp,w,c
  3329  00105A  A4D8               	btfss	status,2,c
  3330  00105C  D008               	goto	l1986
  3331  00105E  0E00               	movlw	0
  3332  001060  6E0F               	movwf	___fldiv@b,c
  3333  001062  0E00               	movlw	0
  3334  001064  6E10               	movwf	___fldiv@b+1,c
  3335  001066  0E00               	movlw	0
  3336  001068  6E11               	movwf	___fldiv@b+2,c
  3337  00106A  0E00               	movlw	0
  3338  00106C  6E12               	movwf	___fldiv@b+3,c
  3339  00106E                     l1986:
  3340  00106E  8E11               	bsf	___fldiv@b+2,7,c
  3341  001070  D006               	goto	L2
  3342  001072                     l1990:
  3343  001072  0E00               	movlw	0
  3344  001074  6E0F               	movwf	___fldiv@b,c
  3345  001076  0E00               	movlw	0
  3346  001078  6E10               	movwf	___fldiv@b+1,c
  3347  00107A  0E00               	movlw	0
  3348  00107C  6E11               	movwf	___fldiv@b+2,c
  3349  00107E                     L2:
  3350  00107E  0E00               	movlw	0
  3351  001080  6E12               	movwf	___fldiv@b+3,c
  3352  001082  5016               	movf	___fldiv@a+3,w,c
  3353  001084  0B80               	andlw	128
  3354  001086  1A1F               	xorwf	___fldiv@sign,f,c
  3355  001088  5016               	movf	___fldiv@a+3,w,c
  3356  00108A  2416               	addwf	___fldiv@a+3,w,c
  3357  00108C  6E27               	movwf	___fldiv@aexp,c
  3358  00108E  BE15               	btfsc	___fldiv@a+2,7,c
  3359  001090  8027               	bsf	___fldiv@aexp,0,c
  3360  001092  5027               	movf	___fldiv@aexp,w,c
  3361  001094  B4D8               	btfsc	status,2,c
  3362  001096  D00D               	goto	l2010
  3363  001098  2827               	incf	___fldiv@aexp,w,c
  3364  00109A  A4D8               	btfss	status,2,c
  3365  00109C  D008               	goto	l2006
  3366  00109E  0E00               	movlw	0
  3367  0010A0  6E13               	movwf	___fldiv@a,c
  3368  0010A2  0E00               	movlw	0
  3369  0010A4  6E14               	movwf	___fldiv@a+1,c
  3370  0010A6  0E00               	movlw	0
  3371  0010A8  6E15               	movwf	___fldiv@a+2,c
  3372  0010AA  0E00               	movlw	0
  3373  0010AC  6E16               	movwf	___fldiv@a+3,c
  3374  0010AE                     l2006:
  3375  0010AE  8E15               	bsf	___fldiv@a+2,7,c
  3376  0010B0  D006               	goto	L3
  3377  0010B2                     l2010:
  3378  0010B2  0E00               	movlw	0
  3379  0010B4  6E13               	movwf	___fldiv@a,c
  3380  0010B6  0E00               	movlw	0
  3381  0010B8  6E14               	movwf	___fldiv@a+1,c
  3382  0010BA  0E00               	movlw	0
  3383  0010BC  6E15               	movwf	___fldiv@a+2,c
  3384  0010BE                     L3:
  3385  0010BE  0E00               	movlw	0
  3386  0010C0  6E16               	movwf	___fldiv@a+3,c
  3387  0010C2  5013               	movf	___fldiv@a,w,c
  3388  0010C4  1014               	iorwf	___fldiv@a+1,w,c
  3389  0010C6  1015               	iorwf	___fldiv@a+2,w,c
  3390  0010C8  1016               	iorwf	___fldiv@a+3,w,c
  3391  0010CA  A4D8               	btfss	status,2,c
  3392  0010CC  D017               	goto	l2024
  3393  0010CE  0E00               	movlw	0
  3394  0010D0  6E0F               	movwf	___fldiv@b,c
  3395  0010D2  0E00               	movlw	0
  3396  0010D4  6E10               	movwf	___fldiv@b+1,c
  3397  0010D6  0E00               	movlw	0
  3398  0010D8  6E11               	movwf	___fldiv@b+2,c
  3399  0010DA  0E00               	movlw	0
  3400  0010DC  6E12               	movwf	___fldiv@b+3,c
  3401  0010DE  0E80               	movlw	128
  3402  0010E0  1211               	iorwf	___fldiv@b+2,f,c
  3403  0010E2  0E7F               	movlw	127
  3404  0010E4  1212               	iorwf	___fldiv@b+3,f,c
  3405  0010E6                     l2018:
  3406  0010E6  501F               	movf	___fldiv@sign,w,c
  3407  0010E8  1212               	iorwf	___fldiv@b+3,f,c
  3408  0010EA  C00F  F00F         	movff	___fldiv@b,?___fldiv
  3409  0010EE  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  3410  0010F2  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  3411  0010F6  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  3412  0010FA  0012               	return	
  3413  0010FC                     l2024:
  3414  0010FC  5026               	movf	___fldiv@bexp,w,c
  3415  0010FE  A4D8               	btfss	status,2,c
  3416  001100  D009               	goto	l2032
  3417  001102  0E00               	movlw	0
  3418  001104  6E0F               	movwf	?___fldiv,c
  3419  001106  0E00               	movlw	0
  3420  001108  6E10               	movwf	?___fldiv+1,c
  3421  00110A  0E00               	movlw	0
  3422  00110C  6E11               	movwf	?___fldiv+2,c
  3423  00110E  0E00               	movlw	0
  3424  001110  6E12               	movwf	?___fldiv+3,c
  3425  001112  0012               	return	
  3426  001114                     l2032:
  3427  001114  5027               	movf	___fldiv@aexp,w,c
  3428  001116  C026  F017         	movff	___fldiv@bexp,??___fldiv
  3429  00111A  6A18               	clrf	(??___fldiv+1)& (0+255),c
  3430  00111C  5E17               	subwf	??___fldiv,f,c
  3431  00111E  0E00               	movlw	0
  3432  001120  5A18               	subwfb	??___fldiv+1,f,c
  3433  001122  0E7F               	movlw	127
  3434  001124  2417               	addwf	??___fldiv,w,c
  3435  001126  6E20               	movwf	___fldiv@new_exp,c
  3436  001128  0E00               	movlw	0
  3437  00112A  2018               	addwfc	??___fldiv+1,w,c
  3438  00112C  6E21               	movwf	___fldiv@new_exp+1,c
  3439  00112E  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  3440  001132  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  3441  001136  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  3442  00113A  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  3443  00113E  0E00               	movlw	0
  3444  001140  6E0F               	movwf	___fldiv@b,c
  3445  001142  0E00               	movlw	0
  3446  001144  6E10               	movwf	___fldiv@b+1,c
  3447  001146  0E00               	movlw	0
  3448  001148  6E11               	movwf	___fldiv@b+2,c
  3449  00114A  0E00               	movlw	0
  3450  00114C  6E12               	movwf	___fldiv@b+3,c
  3451  00114E  0E00               	movlw	0
  3452  001150  6E22               	movwf	___fldiv@grs,c
  3453  001152  0E00               	movlw	0
  3454  001154  6E23               	movwf	___fldiv@grs+1,c
  3455  001156  0E00               	movlw	0
  3456  001158  6E24               	movwf	___fldiv@grs+2,c
  3457  00115A  0E00               	movlw	0
  3458  00115C  6E25               	movwf	___fldiv@grs+3,c
  3459  00115E  0E00               	movlw	0
  3460  001160  6E27               	movwf	___fldiv@aexp,c
  3461  001162  D028               	goto	l795
  3462  001164                     l2042:
  3463  001164  5027               	movf	___fldiv@aexp,w,c
  3464  001166  B4D8               	btfsc	status,2,c
  3465  001168  D011               	goto	l2050
  3466  00116A  90D8               	bcf	status,0,c
  3467  00116C  361B               	rlcf	___fldiv@rem,f,c
  3468  00116E  361C               	rlcf	___fldiv@rem+1,f,c
  3469  001170  361D               	rlcf	___fldiv@rem+2,f,c
  3470  001172  361E               	rlcf	___fldiv@rem+3,f,c
  3471  001174  90D8               	bcf	status,0,c
  3472  001176  360F               	rlcf	___fldiv@b,f,c
  3473  001178  3610               	rlcf	___fldiv@b+1,f,c
  3474  00117A  3611               	rlcf	___fldiv@b+2,f,c
  3475  00117C  3612               	rlcf	___fldiv@b+3,f,c
  3476  00117E  BE25               	btfsc	___fldiv@grs+3,7,c
  3477  001180  800F               	bsf	___fldiv@b,0,c
  3478  001182  90D8               	bcf	status,0,c
  3479  001184  3622               	rlcf	___fldiv@grs,f,c
  3480  001186  3623               	rlcf	___fldiv@grs+1,f,c
  3481  001188  3624               	rlcf	___fldiv@grs+2,f,c
  3482  00118A  3625               	rlcf	___fldiv@grs+3,f,c
  3483  00118C                     l2050:
  3484  00118C  5013               	movf	___fldiv@a,w,c
  3485  00118E  5C1B               	subwf	___fldiv@rem,w,c
  3486  001190  5014               	movf	___fldiv@a+1,w,c
  3487  001192  581C               	subwfb	___fldiv@rem+1,w,c
  3488  001194  5015               	movf	___fldiv@a+2,w,c
  3489  001196  581D               	subwfb	___fldiv@rem+2,w,c
  3490  001198  5016               	movf	___fldiv@a+3,w,c
  3491  00119A  581E               	subwfb	___fldiv@rem+3,w,c
  3492  00119C  A0D8               	btfss	status,0,c
  3493  00119E  D009               	goto	l2056
  3494  0011A0  8C25               	bsf	___fldiv@grs+3,6,c
  3495  0011A2  5013               	movf	___fldiv@a,w,c
  3496  0011A4  5E1B               	subwf	___fldiv@rem,f,c
  3497  0011A6  5014               	movf	___fldiv@a+1,w,c
  3498  0011A8  5A1C               	subwfb	___fldiv@rem+1,f,c
  3499  0011AA  5015               	movf	___fldiv@a+2,w,c
  3500  0011AC  5A1D               	subwfb	___fldiv@rem+2,f,c
  3501  0011AE  5016               	movf	___fldiv@a+3,w,c
  3502  0011B0  5A1E               	subwfb	___fldiv@rem+3,f,c
  3503  0011B2                     l2056:
  3504  0011B2  2A27               	incf	___fldiv@aexp,f,c
  3505  0011B4                     l795:
  3506  0011B4  0E19               	movlw	25
  3507  0011B6  6427               	cpfsgt	___fldiv@aexp,c
  3508  0011B8  D7D5               	goto	l2042
  3509  0011BA  501B               	movf	___fldiv@rem,w,c
  3510  0011BC  101C               	iorwf	___fldiv@rem+1,w,c
  3511  0011BE  101D               	iorwf	___fldiv@rem+2,w,c
  3512  0011C0  101E               	iorwf	___fldiv@rem+3,w,c
  3513  0011C2  B4D8               	btfsc	status,2,c
  3514  0011C4  D011               	goto	l2068
  3515  0011C6  8022               	bsf	___fldiv@grs,0,c
  3516  0011C8  D00F               	goto	l2068
  3517  0011CA                     l2062:
  3518  0011CA  90D8               	bcf	status,0,c
  3519  0011CC  360F               	rlcf	___fldiv@b,f,c
  3520  0011CE  3610               	rlcf	___fldiv@b+1,f,c
  3521  0011D0  3611               	rlcf	___fldiv@b+2,f,c
  3522  0011D2  3612               	rlcf	___fldiv@b+3,f,c
  3523  0011D4  BE25               	btfsc	___fldiv@grs+3,7,c
  3524  0011D6  800F               	bsf	___fldiv@b,0,c
  3525  0011D8  90D8               	bcf	status,0,c
  3526  0011DA  3622               	rlcf	___fldiv@grs,f,c
  3527  0011DC  3623               	rlcf	___fldiv@grs+1,f,c
  3528  0011DE  3624               	rlcf	___fldiv@grs+2,f,c
  3529  0011E0  3625               	rlcf	___fldiv@grs+3,f,c
  3530  0011E2  0620               	decf	___fldiv@new_exp,f,c
  3531  0011E4  A0D8               	btfss	status,0,c
  3532  0011E6  0621               	decf	___fldiv@new_exp+1,f,c
  3533  0011E8                     l2068:
  3534  0011E8  AE11               	btfss	___fldiv@b+2,7,c
  3535  0011EA  D7EF               	goto	l2062
  3536  0011EC  0E00               	movlw	0
  3537  0011EE  6E27               	movwf	___fldiv@aexp,c
  3538  0011F0  AE25               	btfss	___fldiv@grs+3,7,c
  3539  0011F2  D017               	goto	l806
  3540  0011F4  0EFF               	movlw	255
  3541  0011F6  1422               	andwf	___fldiv@grs,w,c
  3542  0011F8  6E17               	movwf	??___fldiv& (0+255),c
  3543  0011FA  0EFF               	movlw	255
  3544  0011FC  1423               	andwf	___fldiv@grs+1,w,c
  3545  0011FE  6E18               	movwf	(??___fldiv+1)& (0+255),c
  3546  001200  0EFF               	movlw	255
  3547  001202  1424               	andwf	___fldiv@grs+2,w,c
  3548  001204  6E19               	movwf	(??___fldiv+2)& (0+255),c
  3549  001206  0E7F               	movlw	127
  3550  001208  1425               	andwf	___fldiv@grs+3,w,c
  3551  00120A  6E1A               	movwf	(??___fldiv+3)& (0+255),c
  3552  00120C  5017               	movf	??___fldiv,w,c
  3553  00120E  1018               	iorwf	??___fldiv+1,w,c
  3554  001210  1019               	iorwf	??___fldiv+2,w,c
  3555  001212  101A               	iorwf	??___fldiv+3,w,c
  3556  001214  B4D8               	btfsc	status,2,c
  3557  001216  D003               	goto	l807
  3558  001218                     u1700:
  3559  001218  0E01               	movlw	1
  3560  00121A  6E27               	movwf	___fldiv@aexp,c
  3561  00121C  D002               	goto	l806
  3562  00121E                     l807:
  3563  00121E  B00F               	btfsc	___fldiv@b,0,c
  3564  001220  D7FB               	goto	u1700
  3565  001222                     l806:
  3566  001222  5027               	movf	___fldiv@aexp,w,c
  3567  001224  B4D8               	btfsc	status,2,c
  3568  001226  D01F               	goto	l2088
  3569  001228  0E01               	movlw	1
  3570  00122A  260F               	addwf	___fldiv@b,f,c
  3571  00122C  0E00               	movlw	0
  3572  00122E  2210               	addwfc	___fldiv@b+1,f,c
  3573  001230  2211               	addwfc	___fldiv@b+2,f,c
  3574  001232  2212               	addwfc	___fldiv@b+3,f,c
  3575  001234  A012               	btfss	___fldiv@b+3,0,c
  3576  001236  D017               	goto	l2088
  3577  001238  C00F  F017         	movff	___fldiv@b,??___fldiv
  3578  00123C  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  3579  001240  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  3580  001244  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  3581  001248  341A               	rlcf	??___fldiv+3,w,c
  3582  00124A  321A               	rrcf	??___fldiv+3,f,c
  3583  00124C  3219               	rrcf	??___fldiv+2,f,c
  3584  00124E  3218               	rrcf	??___fldiv+1,f,c
  3585  001250  3217               	rrcf	??___fldiv,f,c
  3586  001252  C017  F00F         	movff	??___fldiv,___fldiv@b
  3587  001256  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  3588  00125A  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  3589  00125E  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  3590  001262  4A20               	infsnz	___fldiv@new_exp,f,c
  3591  001264  2A21               	incf	___fldiv@new_exp+1,f,c
  3592  001266                     l2088:
  3593  001266  BE21               	btfsc	___fldiv@new_exp+1,7,c
  3594  001268  D010               	goto	l2092
  3595  00126A  5021               	movf	___fldiv@new_exp+1,w,c
  3596  00126C  E103               	bnz	u1740
  3597  00126E  2820               	incf	___fldiv@new_exp,w,c
  3598  001270  A0D8               	btfss	status,0,c
  3599  001272  D00B               	goto	l2092
  3600  001274                     u1740:
  3601  001274  0E00               	movlw	0
  3602  001276  6E21               	movwf	___fldiv@new_exp+1,c
  3603  001278  6820               	setf	___fldiv@new_exp,c
  3604  00127A  0E00               	movlw	0
  3605  00127C  6E0F               	movwf	___fldiv@b,c
  3606  00127E  0E00               	movlw	0
  3607  001280  6E10               	movwf	___fldiv@b+1,c
  3608  001282  0E00               	movlw	0
  3609  001284  6E11               	movwf	___fldiv@b+2,c
  3610  001286  0E00               	movlw	0
  3611  001288  6E12               	movwf	___fldiv@b+3,c
  3612  00128A                     l2092:
  3613  00128A  BE21               	btfsc	___fldiv@new_exp+1,7,c
  3614  00128C  D005               	goto	u1750
  3615  00128E  5021               	movf	___fldiv@new_exp+1,w,c
  3616  001290  E111               	bnz	l2096
  3617  001292  0420               	decf	___fldiv@new_exp,w,c
  3618  001294  B0D8               	btfsc	status,0,c
  3619  001296  D00E               	goto	l2096
  3620  001298                     u1750:
  3621  001298  0E00               	movlw	0
  3622  00129A  6E21               	movwf	___fldiv@new_exp+1,c
  3623  00129C  0E00               	movlw	0
  3624  00129E  6E20               	movwf	___fldiv@new_exp,c
  3625  0012A0  0E00               	movlw	0
  3626  0012A2  6E0F               	movwf	___fldiv@b,c
  3627  0012A4  0E00               	movlw	0
  3628  0012A6  6E10               	movwf	___fldiv@b+1,c
  3629  0012A8  0E00               	movlw	0
  3630  0012AA  6E11               	movwf	___fldiv@b+2,c
  3631  0012AC  0E00               	movlw	0
  3632  0012AE  6E12               	movwf	___fldiv@b+3,c
  3633  0012B0  0E00               	movlw	0
  3634  0012B2  6E1F               	movwf	___fldiv@sign,c
  3635  0012B4                     l2096:
  3636  0012B4  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  3637  0012B8  A026               	btfss	___fldiv@bexp,0,c
  3638  0012BA  D002               	goto	l2102
  3639  0012BC  8E11               	bsf	___fldiv@b+2,7,c
  3640  0012BE  D001               	goto	l2104
  3641  0012C0                     l2102:
  3642  0012C0  9E11               	bcf	___fldiv@b+2,7,c
  3643  0012C2                     l2104:
  3644  0012C2  90D8               	bcf	status,0,c
  3645  0012C4  3026               	rrcf	___fldiv@bexp,w,c
  3646  0012C6  6E12               	movwf	___fldiv@b+3,c
  3647  0012C8  D70E               	goto	l2018
  3648  0012CA                     __end_of___fldiv:
  3649                           	opt callstack 0
  3650                           
  3651 ;; *************** function ___awmod *****************
  3652 ;; Defined at:
  3653 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
  3654 ;; Parameters:    Size  Location     Type
  3655 ;;  dividend        2    0[COMRAM] int 
  3656 ;;  divisor         2    2[COMRAM] int 
  3657 ;; Auto vars:     Size  Location     Type
  3658 ;;  sign            1    5[COMRAM] unsigned char 
  3659 ;;  counter         1    4[COMRAM] unsigned char 
  3660 ;; Return value:  Size  Location     Type
  3661 ;;                  2    0[COMRAM] int 
  3662 ;; Registers used:
  3663 ;;		wreg, status,2, status,0
  3664 ;; Tracked objects:
  3665 ;;		On entry : 0/0
  3666 ;;		On exit  : 0/0
  3667 ;;		Unchanged: 0/0
  3668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3669 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3670 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3672 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3673 ;;Total ram usage:        6 bytes
  3674 ;; Hardware stack levels used:    1
  3675 ;; This function calls:
  3676 ;;		Nothing
  3677 ;; This function is called by:
  3678 ;;		_main
  3679 ;; This function uses a non-reentrant model
  3680 ;;
  3681                           
  3682                           	psect	text21
  3683  001E5C                     __ptext21:
  3684                           	opt callstack 0
  3685  001E5C                     ___awmod:
  3686                           	opt callstack 30
  3687                           
  3688                           ;incstack = 0
  3689  001E5C  0E00               	movlw	0
  3690  001E5E  6E06               	movwf	___awmod@sign,c
  3691  001E60  AE02               	btfss	___awmod@dividend+1,7,c
  3692  001E62  D006               	goto	l2164
  3693  001E64  6C01               	negf	___awmod@dividend,c
  3694  001E66  1E02               	comf	___awmod@dividend+1,f,c
  3695  001E68  B0D8               	btfsc	status,0,c
  3696  001E6A  2A02               	incf	___awmod@dividend+1,f,c
  3697  001E6C  0E01               	movlw	1
  3698  001E6E  6E06               	movwf	___awmod@sign,c
  3699  001E70                     l2164:
  3700  001E70  AE04               	btfss	___awmod@divisor+1,7,c
  3701  001E72  D004               	goto	l2168
  3702  001E74  6C03               	negf	___awmod@divisor,c
  3703  001E76  1E04               	comf	___awmod@divisor+1,f,c
  3704  001E78  B0D8               	btfsc	status,0,c
  3705  001E7A  2A04               	incf	___awmod@divisor+1,f,c
  3706  001E7C                     l2168:
  3707  001E7C  5003               	movf	___awmod@divisor,w,c
  3708  001E7E  1004               	iorwf	___awmod@divisor+1,w,c
  3709  001E80  B4D8               	btfsc	status,2,c
  3710  001E82  D018               	goto	l2184
  3711  001E84  0E01               	movlw	1
  3712  001E86  6E05               	movwf	___awmod@counter,c
  3713  001E88  D004               	goto	l2174
  3714  001E8A                     l2172:
  3715  001E8A  90D8               	bcf	status,0,c
  3716  001E8C  3603               	rlcf	___awmod@divisor,f,c
  3717  001E8E  3604               	rlcf	___awmod@divisor+1,f,c
  3718  001E90  2A05               	incf	___awmod@counter,f,c
  3719  001E92                     l2174:
  3720  001E92  AE04               	btfss	___awmod@divisor+1,7,c
  3721  001E94  D7FA               	goto	l2172
  3722  001E96                     u1860:
  3723  001E96  5003               	movf	___awmod@divisor,w,c
  3724  001E98  5C01               	subwf	___awmod@dividend,w,c
  3725  001E9A  5004               	movf	___awmod@divisor+1,w,c
  3726  001E9C  5802               	subwfb	___awmod@dividend+1,w,c
  3727  001E9E  A0D8               	btfss	status,0,c
  3728  001EA0  D004               	goto	l2180
  3729  001EA2  5003               	movf	___awmod@divisor,w,c
  3730  001EA4  5E01               	subwf	___awmod@dividend,f,c
  3731  001EA6  5004               	movf	___awmod@divisor+1,w,c
  3732  001EA8  5A02               	subwfb	___awmod@dividend+1,f,c
  3733  001EAA                     l2180:
  3734  001EAA  90D8               	bcf	status,0,c
  3735  001EAC  3204               	rrcf	___awmod@divisor+1,f,c
  3736  001EAE  3203               	rrcf	___awmod@divisor,f,c
  3737  001EB0  2E05               	decfsz	___awmod@counter,f,c
  3738  001EB2  D7F1               	goto	u1860
  3739  001EB4                     l2184:
  3740  001EB4  5006               	movf	___awmod@sign,w,c
  3741  001EB6  B4D8               	btfsc	status,2,c
  3742  001EB8  D004               	goto	l2188
  3743  001EBA  6C01               	negf	___awmod@dividend,c
  3744  001EBC  1E02               	comf	___awmod@dividend+1,f,c
  3745  001EBE  B0D8               	btfsc	status,0,c
  3746  001EC0  2A02               	incf	___awmod@dividend+1,f,c
  3747  001EC2                     l2188:
  3748  001EC2  C001  F001         	movff	___awmod@dividend,?___awmod
  3749  001EC6  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3750  001ECA  0012               	return		;funcret
  3751  001ECC                     __end_of___awmod:
  3752                           	opt callstack 0
  3753                           
  3754 ;; *************** function ___awdiv *****************
  3755 ;; Defined at:
  3756 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  3757 ;; Parameters:    Size  Location     Type
  3758 ;;  dividend        2    0[COMRAM] int 
  3759 ;;  divisor         2    2[COMRAM] int 
  3760 ;; Auto vars:     Size  Location     Type
  3761 ;;  quotient        2    6[COMRAM] int 
  3762 ;;  sign            1    5[COMRAM] unsigned char 
  3763 ;;  counter         1    4[COMRAM] unsigned char 
  3764 ;; Return value:  Size  Location     Type
  3765 ;;                  2    0[COMRAM] int 
  3766 ;; Registers used:
  3767 ;;		wreg, status,2, status,0
  3768 ;; Tracked objects:
  3769 ;;		On entry : 0/0
  3770 ;;		On exit  : 0/0
  3771 ;;		Unchanged: 0/0
  3772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3773 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3774 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3776 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3777 ;;Total ram usage:        8 bytes
  3778 ;; Hardware stack levels used:    1
  3779 ;; This function calls:
  3780 ;;		Nothing
  3781 ;; This function is called by:
  3782 ;;		_main
  3783 ;; This function uses a non-reentrant model
  3784 ;;
  3785                           
  3786                           	psect	text22
  3787  001DD8                     __ptext22:
  3788                           	opt callstack 0
  3789  001DD8                     ___awdiv:
  3790                           	opt callstack 30
  3791                           
  3792                           ;incstack = 0
  3793  001DD8  0E00               	movlw	0
  3794  001DDA  6E06               	movwf	___awdiv@sign,c
  3795  001DDC  AE04               	btfss	___awdiv@divisor+1,7,c
  3796  001DDE  D006               	goto	l2120
  3797  001DE0  6C03               	negf	___awdiv@divisor,c
  3798  001DE2  1E04               	comf	___awdiv@divisor+1,f,c
  3799  001DE4  B0D8               	btfsc	status,0,c
  3800  001DE6  2A04               	incf	___awdiv@divisor+1,f,c
  3801  001DE8  0E01               	movlw	1
  3802  001DEA  6E06               	movwf	___awdiv@sign,c
  3803  001DEC                     l2120:
  3804  001DEC  AE02               	btfss	___awdiv@dividend+1,7,c
  3805  001DEE  D006               	goto	l2126
  3806  001DF0  6C01               	negf	___awdiv@dividend,c
  3807  001DF2  1E02               	comf	___awdiv@dividend+1,f,c
  3808  001DF4  B0D8               	btfsc	status,0,c
  3809  001DF6  2A02               	incf	___awdiv@dividend+1,f,c
  3810  001DF8  0E01               	movlw	1
  3811  001DFA  1A06               	xorwf	___awdiv@sign,f,c
  3812  001DFC                     l2126:
  3813  001DFC  0E00               	movlw	0
  3814  001DFE  6E08               	movwf	___awdiv@quotient+1,c
  3815  001E00  0E00               	movlw	0
  3816  001E02  6E07               	movwf	___awdiv@quotient,c
  3817  001E04  5003               	movf	___awdiv@divisor,w,c
  3818  001E06  1004               	iorwf	___awdiv@divisor+1,w,c
  3819  001E08  B4D8               	btfsc	status,2,c
  3820  001E0A  D01C               	goto	l2148
  3821  001E0C  0E01               	movlw	1
  3822  001E0E  6E05               	movwf	___awdiv@counter,c
  3823  001E10  D004               	goto	l2134
  3824  001E12                     l2132:
  3825  001E12  90D8               	bcf	status,0,c
  3826  001E14  3603               	rlcf	___awdiv@divisor,f,c
  3827  001E16  3604               	rlcf	___awdiv@divisor+1,f,c
  3828  001E18  2A05               	incf	___awdiv@counter,f,c
  3829  001E1A                     l2134:
  3830  001E1A  AE04               	btfss	___awdiv@divisor+1,7,c
  3831  001E1C  D7FA               	goto	l2132
  3832  001E1E                     u1800:
  3833  001E1E  90D8               	bcf	status,0,c
  3834  001E20  3607               	rlcf	___awdiv@quotient,f,c
  3835  001E22  3608               	rlcf	___awdiv@quotient+1,f,c
  3836  001E24  5003               	movf	___awdiv@divisor,w,c
  3837  001E26  5C01               	subwf	___awdiv@dividend,w,c
  3838  001E28  5004               	movf	___awdiv@divisor+1,w,c
  3839  001E2A  5802               	subwfb	___awdiv@dividend+1,w,c
  3840  001E2C  A0D8               	btfss	status,0,c
  3841  001E2E  D005               	goto	l2144
  3842  001E30  5003               	movf	___awdiv@divisor,w,c
  3843  001E32  5E01               	subwf	___awdiv@dividend,f,c
  3844  001E34  5004               	movf	___awdiv@divisor+1,w,c
  3845  001E36  5A02               	subwfb	___awdiv@dividend+1,f,c
  3846  001E38  8007               	bsf	___awdiv@quotient,0,c
  3847  001E3A                     l2144:
  3848  001E3A  90D8               	bcf	status,0,c
  3849  001E3C  3204               	rrcf	___awdiv@divisor+1,f,c
  3850  001E3E  3203               	rrcf	___awdiv@divisor,f,c
  3851  001E40  2E05               	decfsz	___awdiv@counter,f,c
  3852  001E42  D7ED               	goto	u1800
  3853  001E44                     l2148:
  3854  001E44  5006               	movf	___awdiv@sign,w,c
  3855  001E46  B4D8               	btfsc	status,2,c
  3856  001E48  D004               	goto	l2152
  3857  001E4A  6C07               	negf	___awdiv@quotient,c
  3858  001E4C  1E08               	comf	___awdiv@quotient+1,f,c
  3859  001E4E  B0D8               	btfsc	status,0,c
  3860  001E50  2A08               	incf	___awdiv@quotient+1,f,c
  3861  001E52                     l2152:
  3862  001E52  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3863  001E56  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3864  001E5A  0012               	return		;funcret
  3865  001E5C                     __end_of___awdiv:
  3866                           	opt callstack 0
  3867                           
  3868                           	psect	rparam
  3869  0000                     tosu	equ	0xFFF
  3870                           tosh	equ	0xFFE
  3871                           tosl	equ	0xFFD
  3872                           stkptr	equ	0xFFC
  3873                           pclatu	equ	0xFFB
  3874                           pclath	equ	0xFFA
  3875                           pcl	equ	0xFF9
  3876                           tblptru	equ	0xFF8
  3877                           tblptrh	equ	0xFF7
  3878                           tblptrl	equ	0xFF6
  3879                           tablat	equ	0xFF5
  3880                           prodh	equ	0xFF4
  3881                           prodl	equ	0xFF3
  3882                           indf0	equ	0xFEF
  3883                           postinc0	equ	0xFEE
  3884                           postdec0	equ	0xFED
  3885                           preinc0	equ	0xFEC
  3886                           plusw0	equ	0xFEB
  3887                           fsr0h	equ	0xFEA
  3888                           fsr0l	equ	0xFE9
  3889                           wreg	equ	0xFE8
  3890                           indf1	equ	0xFE7
  3891                           postinc1	equ	0xFE6
  3892                           postdec1	equ	0xFE5
  3893                           preinc1	equ	0xFE4
  3894                           plusw1	equ	0xFE3
  3895                           fsr1h	equ	0xFE2
  3896                           fsr1l	equ	0xFE1
  3897                           bsr	equ	0xFE0
  3898                           indf2	equ	0xFDF
  3899                           postinc2	equ	0xFDE
  3900                           postdec2	equ	0xFDD
  3901                           preinc2	equ	0xFDC
  3902                           plusw2	equ	0xFDB
  3903                           fsr2h	equ	0xFDA
  3904                           fsr2l	equ	0xFD9
  3905                           status	equ	0xFD8


Data Sizes:
    Strings     57
    Constant    6
    Data        0
    BSS         48
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    111     127
    BANK0           128      0      32
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_6(CODE[16]), STR_5(CODE[7]), STR_4(CODE[14]), STR_3(CODE[14]), 
		 -> STR_2(CODE[11]), STR_1(CODE[9]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S837_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_6(CODE[16]), STR_5(CODE[7]), STR_4(CODE[14]), STR_3(CODE[14]), 
		 -> STR_2(CODE[11]), STR_1(CODE[9]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_6(CODE[16]), STR_5(CODE[7]), STR_4(CODE[14]), STR_3(CODE[14]), 
		 -> STR_2(CODE[11]), STR_1(CODE[9]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_send_byte
    _abs->___aomod
    _initLCD->_lcdInst
    _lcdInst->_send_byte
    _send_byte->_send_nibble
    _send_nibble->_pulse_e
    ___fltol->___fldiv
    ___fldiv->___xxtofl

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   10356
                                            103 COMRAM     8     8      0
                            ___awdiv
                            ___awmod
                            ___fldiv
                            ___fltol
                           ___xxtofl
                            _initLCD
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              12     4      8    6750
                                             91 COMRAM    12     4      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6240
                                             83 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    5886
                                             67 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4448
                                             31 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2799
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1280
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     879
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0     111
                                              3 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     245
                                              4 COMRAM     1     1      0
                            _lcdInst
                          _send_byte
                        _send_nibble
 ---------------------------------------------------------------------------------
 (1) _lcdInst                                              1     1      0     111
                                              3 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (6) _send_byte                                            1     1      0      89
                                              2 COMRAM     1     1      0
                        _send_nibble
 ---------------------------------------------------------------------------------
 (7) _send_nibble                                          1     1      0      45
                                              1 COMRAM     1     1      0
                            _pulse_e
 ---------------------------------------------------------------------------------
 (8) _pulse_e                                              1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     305
                                             39 COMRAM    10     6      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             25    17      8    1399
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod
   ___fldiv
     ___xxtofl (ARG)
   ___fltol
     ___fldiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _initLCD
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _send_byte
       _send_nibble
         _pulse_e
     _send_nibble
       _pulse_e
   _lcdInst
     _send_byte
       _send_nibble
         _pulse_e
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _fputc
           _putch
             _send_byte
               _send_nibble
                 _pulse_e

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      20       5       25.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     6F      7F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      9F      34        0.0%
DATA                 0      0      9F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Mar 10 09:02:16 2019

           ___fldiv@aexp 0027             ___fldiv@bexp 0026                        _a 007E  
           ___fldiv@sign 001F              __CFG_CPD$ON 000000             ___awdiv@sign 0006  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000              __CFG_OSC$HS 000000  
                    l124 12EE                      l127 132E                      l163 1D70  
                    l174 158C                      l176 1594                      l806 1222  
                    l807 121E                      l873 1AE0                      l866 1A62  
                    l795 11B4                      l886 2054             __CFG_CPB$OFF 000000  
                    _RB0 007C08                      _RB5 007C0D                      _abs 202C  
                    _pad 1D42             ___awmod@sign 0006                      wreg 000FE8  
           __CFG_LVP$OFF 000000             ___fltol@exp1 0031             __CFG_WDT$OFF 000000  
                   l2010 10B2                     ?_abs 0013                     l2102 12C0  
                   l2006 10AE                     l2120 1DEC                     l2104 12C2  
                   l2032 1114                     l2024 10FC                     l2050 118C  
                   l2042 1164                     l2018 10E6                     l2132 1E12  
                   l2134 1E1A                     l2126 1DFC                     l2062 11CA  
                   l2214 1CF0                     l2152 1E52                     l2144 1E3A  
                   l2056 11B2                     l2232 1D30                     l2224 1D08  
                   l2226 1D14                     l2218 1D00                     l2250 1A96  
                   l2242 1A72                     l2148 1E44                     l2180 1EAA  
                   l2172 1E8A                     l2164 1E70                     l2092 128A  
                   l2068 11E8                     l2260 1B06                     l2252 1AA2  
                   l1700 1EE4                     l2308 12D6                     l2174 1E92  
                   l2262 1B12                     l2254 1AC8                     l1710 1FFE  
                   l2184 1EB4                     l2168 1E7C                     l2096 12B4  
                   l2088 1266                     l2248 1A90                     l1720 206C  
                   l1714 2014                     l1730 1D5A                     l2362 144E  
                   l2188 1EC2                     l1820 1C2A                     l1812 1BCE  
                   l1804 1B90                     l1740 1D92                     l2380 1502  
                   l2198 1CA6                     l2278 1B52                     l1814 1BE2  
                   l1718 2068                     l1734 1D68                     l2374 14E0  
                   l1760 1908                     l1824 1C40                     l1808 1BB4  
                   l1744 1DBE                     l1736 1D7A                     l1912 184A  
                   l1922 1890                     l1772 1956                     l1828 1C66  
                   l1852 15AE                     l1774 196A                     l1766 1930  
                   l1838 1570                     l1918 1886                     l1792 1A02  
                   l1784 19C6                     l1856 15BE                     l1928 18A8  
                   l1944 1FB4                     l1890 1732                     l1866 16B6  
                   l1946 1FD8                     l1788 19DC                     l1990 1072  
                   l1886 171A                     ?_pad 0015                     l1986 106E  
                   STR_1 1030                     STR_2 1025                     STR_3 1017  
                   STR_4 1017                     STR_5 1039                     STR_6 1007  
                   u1110 1EDC                     u1200 203A                     u1130 1F24  
                   u2020 1B1C                     u2100 140C                     u1310 1BE6  
                   u2110 141C                     u1231 1936                     u1400 15A8  
                   u2120 14B4                     u1250 196E                     u1410 16C4  
                   u1340 1542                     u1430 16E6                     u1350 1544  
                   u1510 17CC                     u1095 20AE                     u1431 16E4  
                   u2207 150C                     u1096 20B0                     u1440 16F4  
                   _LATD 000F8C                     u2217 1F3E                     u2137 12E6  
                   u1450 16F8                     u2227 1F56                     u2147 12FE  
                   u1700 1218                     u1380 1582                     u2237 1F68  
                   u2157 1318                     u1470 1704                     u2247 1F8A  
                   u2167 1340                     u1800 1E1E                     u2257 2096  
                   u2177 13DE                     u2267 20A0                     u2187 1428  
                   u1740 1274                     u1900 1CC4                     u2197 14EC  
                   u1750 1298                     u1905 1CBA                     u1860 1E96  
                   u1940 1D1A                     u1890 1C94                     abs@a 0013  
                   _dbuf 0080                     _main 12CA                     _dtoa 151A  
                   _prec 007A                     _nout 0076                     pad@i 001C  
                   pad@p 0019                     fsr1h 000FE2                     fsr2h 000FDA  
                   indf2 000FDF                     fsr1l 000FE1                     pad@w 001E  
                   fsr2l 000FD9                     start 0000            __CFG_IESO$OFF 000000  
        ___fldiv@new_exp 0020            __CFG_MCLRE$ON 000000             ___param_bank 000000  
                  ??_abs 0015                    ??_pad 001B            ___fltol@sign1 0030  
        __end_of___aodiv 1A24                    ?_main 0001                    ?_dtoa 0020  
        __end_of___aomod 1C88          __end_of___fldiv 12CA          __end_of___awdiv 1E5C  
        __end_of___awmod 1ECC          __end_of___fltol 1D42          ___awdiv@divisor 0003  
                  _T1CON 000FCD          ___awdiv@counter 0005             vfpfcnvrt@fmt 0046  
                  _TMR1H 000FCF                    _TMR1L 000FCE                    _TRISB 000F93  
                  _TRISD 000F95            __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
        __end_of_lcdInst 213E           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
        __end_of_initLCD 1FA2           __CFG_EBTRB$OFF 000000                    _flags 007C  
                  _fputc 1ECC                    _fputs 1FF4                    pad@fp 0015  
                  _width 0078                    _putch 2126                    main@a 006E  
                  main@i 006C                    dtoa@d 0022                    dtoa@i 0042  
                  dtoa@n 003A                    dtoa@p 0034                    dtoa@s 0038  
                  dtoa@w 0036                    tablat 000FF5          send_nibble@data 0002  
        __end_of_pulse_e 20B2                    status 000FD8           __CFG_PBADEN$ON 000000  
        __initialization 20B2             __end_of_main 151A             __end_of_dtoa 175C  
                 ??_main 0068                   ??_dtoa 002A            __activetblptr 000001  
           ?_send_nibble 0001                   ?_fputc 0005                   ?_fputs 000E  
       ___awdiv@dividend 0001                   ?_putch 0001                   _TMR1ON 007E68  
                 _SSPADD 000FC8                   _SSPBUF 000FC9         __end_of___xxtofl 1B64  
         __CFG_XINST$OFF 000000             vfprintf@cfmt 005A                ??___aodiv 0011  
              ??___aomod 0011                ??___fldiv 0017                ??___awdiv 0005  
         __CFG_STVREN$ON 000000                ??___awmod 0005                ??___fltol 002C  
                 clear_0 20B8                   clear_1 20C4         ___awdiv@quotient 0007  
        ___awmod@divisor 0003          ___awmod@counter 0005                ??_lcdInst 0004  
                 _printf 20D8                   pad@buf 0017                   dtoa@fp 0020  
                 _strlen 205E                ??_initLCD 0005                   fputc@c 0005  
                 fputs@c 0012                   fputs@i 0013                   fputs@s 000E  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8         __end_of_vfprintf 1FF4                ??_pulse_e 0001  
           ___xxtofl@arg 000B    pulse_e@interruptState 0001             ___xxtofl@exp 000A  
           ___xxtofl@val 0001               __accesstop 0080  __end_of__initialization 20CA  
          ___rparam_used 000001               ___fltol@f1 0028           __pcstackCOMRAM 0001  
          __end_of_fputc 1F38            __end_of_fputs 202C            __end_of_putch 2132  
                ??_fputc 0009                  ??_fputs 0012                  ??_putch 0004  
             __pbssBANK0 0080       __size_of_send_byte 0012                  ?_printf 005C  
                ?_strlen 0001                ?___xxtofl 0001       __size_of_vfpfcnvrt 0180  
             _dist_final 0070                  _SSPCON1 000FC6                  _SSPCON2 000FC5  
                _SSPSTAT 000FC7     __size_of_send_nibble 0016                  __Hparam 0000  
                __Lparam 0000                  ___aodiv 18DC                  ___aomod 1B64  
                ___fldiv 1042                  ___awdiv 1DD8                  ___awmod 1E5C  
                ___fltol 1C88                ?_vfprintf 0054             __psmallconst 1000  
                __pcinit 20B2                  __ramtop 1000                  _lcdInst 2132  
                __ptext0 12CA                  __ptext1 20D8                  __ptext2 1FA2  
                __ptext3 175C                  __ptext4 151A                  __ptext5 1D42  
                __ptext6 205E                  __ptext7 1FF4                  __ptext8 1ECC  
                __ptext9 2126          __size_of_printf 0026          __size_of_strlen 002A  
                _initLCD 1F38             __size_of_abs 0032             __size_of_pad 0096  
             ??___xxtofl 0005         ___awmod@dividend 0001                  _pulse_e 2088  
   end_of_initialization 20CA    __end_of_LCD_SIZE_HORZ 1007        __end_of_send_byte 2126  
  __end_of_LCD_SIZE_VERT 1006                  fputc@fp 0007                  fputs@fp 0010  
      __end_of_vfpfcnvrt 18DC                  postdec2 000FDD                  postinc0 000FEE  
                postinc1 000FE6                  postinc2 000FDE               ??_vfprintf 005A  
                strlen@a 0003                  strlen@s 0001            ___xxtofl@sign 0009  
              _TRISCbits 000F94              ___fldiv@grs 0022              ___fldiv@rem 001B  
          send_byte@data 0003              vfpfcnvrt@ap 0048              vfpfcnvrt@fp 0044  
            vfpfcnvrt@ll 004C           __end_of_printf 20FE           __end_of_strlen 2088  
    start_initialization 20B2              __end_of_abs 205E              __end_of_pad 1DD8  
            vfprintf@fmt 0056         __CFG_LPT1OSC$OFF 000000                 ??_printf 0064  
               ??_strlen 0003                ___fldiv@a 0013                ___fldiv@b 000F  
            __pbssCOMRAM 0070         ___aodiv@dividend 0001        __size_of___xxtofl 0140  
      __CFG_CCP2MX$PORTC 000000                 ?___aodiv 0001                 ?___aomod 0001  
               ?___fldiv 000F                 ?___awdiv 0001         ___aodiv@quotient 0013  
               ?___awmod 0001                 ?___fltol 0028                 ?_lcdInst 0001  
      __size_of_vfprintf 0052                 ?_initLCD 0001              __smallconst 1000  
          ??_send_nibble 0002                 ?_pulse_e 0001           __size_of_fputc 006C  
         __size_of_fputs 0038           __size_of_putch 000C                 _LATDbits 000F8C  
              _send_byte 2114           _LCD_LINE1_ADDR 1004           _LCD_LINE2_ADDR 1003  
         _LCD_LINE3_ADDR 1002           _LCD_LINE4_ADDR 1001         __CFG_WDTPS$32768 000000  
              _vfpfcnvrt 175C   __end_of_LCD_LINE1_ADDR 1005   __end_of_LCD_LINE2_ADDR 1004  
 __end_of_LCD_LINE3_ADDR 1003   __end_of_LCD_LINE4_ADDR 1002      __end_of_send_nibble 2114  
             ?_send_byte 0001                 __Hrparam 0000               vfprintf@ap 0058  
               __Lrparam 0000               vfprintf@fp 0054             __Lsmallconst 1000  
     __CFG_BOREN$SBORDIS 000000         __size_of___aodiv 0148         __size_of___aomod 0124  
       __size_of___fldiv 0288         __size_of___awdiv 0084         __size_of___awmod 0070  
       __size_of___fltol 00BA               ?_vfpfcnvrt 0044          ___aodiv@divisor 0009  
        ___aodiv@counter 0011         __size_of_lcdInst 000C         __size_of_initLCD 006A  
               ___xxtofl 1A24                 _dtoa$376 0032                 __ptext10 202C  
               __ptext11 1B64                 __ptext20 1042                 __ptext12 18DC  
               __ptext21 1E5C                 __ptext13 1F38                 __ptext22 1DD8  
               __ptext14 2132                 __ptext15 2114                 __ptext16 20FE  
               __ptext17 2088                 __ptext18 1A24                 __ptext19 1C88  
       __size_of_pulse_e 002A            __size_of_main 0250            __size_of_dtoa 0242  
               _vfprintf 1FA2                printf@fmt 005C         ___aomod@dividend 0001  
              putch@data 0004               _INTCONbits 000FF2              _send_nibble 20FE  
          _LCD_SIZE_HORZ 1006            _LCD_SIZE_VERT 1005              ??_send_byte 0003  
               printf@ap 0066          ___aomod@divisor 0009              ??_vfpfcnvrt 004A  
            lcdInst@data 0004          ___aomod@counter 0011              _SSPCON1bits 000FC6  
            _SSPCON2bits 000FC5             ___aodiv@sign 0012             ___aomod@sign 0012  
