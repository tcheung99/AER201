

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Apr 01 16:44:42 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
     9                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    10  0000                     
    11                           ; Version 2.05
    12                           ; Generated 20/12/2018 GMT
    13                           ; 
    14                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC18F4620 Definitions
    43                           ; 
    44                           ; SFR Addresses
    45  0000                     _ADCON1	set	4033
    46  0000                     _TRISE	set	3990
    47  0000                     _TRISD	set	3989
    48  0000                     _TRISC	set	3988
    49  0000                     _TRISB	set	3987
    50  0000                     _TRISA	set	3986
    51  0000                     _LATE	set	3981
    52  0000                     _LATD	set	3980
    53  0000                     _LATC	set	3979
    54  0000                     _LATB	set	3978
    55  0000                     _LATA	set	3977
    56                           
    57                           ; #config settings
    58  0000                     
    59                           	psect	cinit
    60  00FECA                     __pcinit:
    61                           	opt callstack 0
    62  00FECA                     start_initialization:
    63                           	opt callstack 0
    64  00FECA                     __initialization:
    65                           	opt callstack 0
    66  00FECA                     end_of_initialization:
    67                           	opt callstack 0
    68  00FECA                     __end_of__initialization:
    69                           	opt callstack 0
    70  00FECA  0100               	movlb	0
    71  00FECC  EF68  F07F         	goto	_main	;jump to C main() function
    72                           
    73                           	psect	cstackCOMRAM
    74  000001                     __pcstackCOMRAM:
    75                           	opt callstack 0
    76  000001                     ??_main:
    77                           
    78                           ; 1 bytes @ 0x0
    79  000001                     	ds	2
    80  000003                     main@temp:
    81                           	opt callstack 0
    82                           
    83                           ; 1 bytes @ 0x2
    84  000003                     	ds	1
    85  000004                     main@i:
    86                           	opt callstack 0
    87                           
    88                           ; 1 bytes @ 0x3
    89  000004                     	ds	1
    90                           
    91 ;;
    92 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
    93 ;;
    94 ;; *************** function _main *****************
    95 ;; Defined at:
    96 ;;		line 33 in file "main.c"
    97 ;; Parameters:    Size  Location     Type
    98 ;;		None
    99 ;; Auto vars:     Size  Location     Type
   100 ;;  i               1    3[COMRAM] unsigned char 
   101 ;;  temp            1    2[COMRAM] unsigned char 
   102 ;; Return value:  Size  Location     Type
   103 ;;                  1    wreg      void 
   104 ;; Registers used:
   105 ;;		wreg, status,2, status,0
   106 ;; Tracked objects:
   107 ;;		On entry : 0/0
   108 ;;		On exit  : 0/0
   109 ;;		Unchanged: 0/0
   110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   112 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   113 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   114 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   115 ;;Total ram usage:        4 bytes
   116 ;; This function calls:
   117 ;;		Nothing
   118 ;; This function is called by:
   119 ;;		Startup code after reset
   120 ;; This function uses a non-reentrant model
   121 ;;
   122                           
   123                           	psect	text0
   124  00FED0                     __ptext0:
   125                           	opt callstack 0
   126  00FED0                     _main:
   127                           	opt callstack 31
   128                           
   129                           ;main.c: 38:     LATA = 0x00;
   130                           
   131                           ;incstack = 0
   132  00FED0  0E00               	movlw	0
   133  00FED2  6E89               	movwf	3977,c	;volatile
   134                           
   135                           ;main.c: 39:     LATB = 0x00;
   136  00FED4  0E00               	movlw	0
   137  00FED6  6E8A               	movwf	3978,c	;volatile
   138                           
   139                           ;main.c: 40:     LATC = 0x00;
   140  00FED8  0E00               	movlw	0
   141  00FEDA  6E8B               	movwf	3979,c	;volatile
   142                           
   143                           ;main.c: 41:     LATD = 0x00;
   144  00FEDC  0E00               	movlw	0
   145  00FEDE  6E8C               	movwf	3980,c	;volatile
   146                           
   147                           ;main.c: 42:     LATE = 0x00;
   148  00FEE0  0E00               	movlw	0
   149  00FEE2  6E8D               	movwf	3981,c	;volatile
   150                           
   151                           ;main.c: 46:     TRISA = 0x00;
   152  00FEE4  0E00               	movlw	0
   153  00FEE6  6E92               	movwf	3986,c	;volatile
   154                           
   155                           ;main.c: 47:     TRISB = 0x00;
   156  00FEE8  0E00               	movlw	0
   157  00FEEA  6E93               	movwf	3987,c	;volatile
   158                           
   159                           ;main.c: 48:     TRISC = 0x00;
   160  00FEEC  0E00               	movlw	0
   161  00FEEE  6E94               	movwf	3988,c	;volatile
   162                           
   163                           ;main.c: 49:     TRISD = 0x00;
   164  00FEF0  0E00               	movlw	0
   165  00FEF2  6E95               	movwf	3989,c	;volatile
   166                           
   167                           ;main.c: 50:     TRISE = 0x00;
   168  00FEF4  0E00               	movlw	0
   169  00FEF6  6E96               	movwf	3990,c	;volatile
   170                           
   171                           ;main.c: 53:     ADCON1 = 0b00001111;
   172  00FEF8  0E0F               	movlw	15
   173  00FEFA  6EC1               	movwf	4033,c	;volatile
   174  00FEFC                     l29:
   175                           
   176                           ;main.c: 62:         unsigned char i = 0;
   177  00FEFC  0E00               	movlw	0
   178  00FEFE  6E04               	movwf	main@i,c
   179                           
   180                           ;main.c: 63:         unsigned char temp = 0x00;
   181  00FF00  0E00               	movlw	0
   182  00FF02  6E03               	movwf	main@temp,c
   183                           
   184                           ;main.c: 65:         temp = 1 << 7;
   185  00FF04  0E80               	movlw	128
   186  00FF06  6E03               	movwf	main@temp,c
   187                           
   188                           ;main.c: 68:         for (i = 0; i < 8; i++){
   189  00FF08  0E00               	movlw	0
   190  00FF0A  6E04               	movwf	main@i,c
   191  00FF0C                     l30:
   192                           
   193                           ;main.c: 69:             LATA = temp;
   194  00FF0C  C003  FF89         	movff	main@temp,3977	;volatile
   195                           
   196                           ;main.c: 70:             temp >>= 1;
   197  00FF10  90D8               	bcf	status,0,c
   198  00FF12  3203               	rrcf	main@temp,f,c
   199                           
   200                           ;main.c: 71:             _delay((unsigned long)((250)*(10000000/4000.0)));
   201  00FF14  0E04               	movlw	4
   202  00FF16  6E02               	movwf	(??_main+1)& (0+255),c
   203  00FF18  0E2C               	movlw	44
   204  00FF1A  6E01               	movwf	??_main& (0+255),c
   205  00FF1C  0EAC               	movlw	172
   206  00FF1E                     u67:
   207  00FF1E  2EE8               	decfsz	wreg,f,c
   208  00FF20  D7FE               	bra	u67
   209  00FF22  2E01               	decfsz	??_main& (0+255),f,c
   210  00FF24  D7FC               	bra	u67
   211  00FF26  2E02               	decfsz	(??_main+1)& (0+255),f,c
   212  00FF28  D7FA               	bra	u67
   213                           
   214                           ;main.c: 72:         }
   215  00FF2A  2A04               	incf	main@i,f,c
   216  00FF2C  0E07               	movlw	7
   217  00FF2E  6404               	cpfsgt	main@i,c
   218  00FF30  D7ED               	goto	l30
   219                           
   220                           ;main.c: 73:         LATA = 0x00;
   221  00FF32  0E00               	movlw	0
   222  00FF34  6E89               	movwf	3977,c	;volatile
   223                           
   224                           ;main.c: 76:         temp = 1 << 7;
   225  00FF36  0E80               	movlw	128
   226  00FF38  6E03               	movwf	main@temp,c
   227                           
   228                           ;main.c: 77:         for (i = 0; i < 8; i++){
   229  00FF3A  0E00               	movlw	0
   230  00FF3C  6E04               	movwf	main@i,c
   231  00FF3E                     l32:
   232                           
   233                           ;main.c: 78:             LATB = temp;
   234  00FF3E  C003  FF8A         	movff	main@temp,3978	;volatile
   235                           
   236                           ;main.c: 79:             temp >>= 1;
   237  00FF42  90D8               	bcf	status,0,c
   238  00FF44  3203               	rrcf	main@temp,f,c
   239                           
   240                           ;main.c: 80:             _delay((unsigned long)((250)*(10000000/4000.0)));
   241  00FF46  0E04               	movlw	4
   242  00FF48  6E02               	movwf	(??_main+1)& (0+255),c
   243  00FF4A  0E2C               	movlw	44
   244  00FF4C  6E01               	movwf	??_main& (0+255),c
   245  00FF4E  0EAC               	movlw	172
   246  00FF50                     u77:
   247  00FF50  2EE8               	decfsz	wreg,f,c
   248  00FF52  D7FE               	bra	u77
   249  00FF54  2E01               	decfsz	??_main& (0+255),f,c
   250  00FF56  D7FC               	bra	u77
   251  00FF58  2E02               	decfsz	(??_main+1)& (0+255),f,c
   252  00FF5A  D7FA               	bra	u77
   253                           
   254                           ;main.c: 81:         }
   255  00FF5C  2A04               	incf	main@i,f,c
   256  00FF5E  0E07               	movlw	7
   257  00FF60  6404               	cpfsgt	main@i,c
   258  00FF62  D7ED               	goto	l32
   259                           
   260                           ;main.c: 82:         LATB = 0x00;
   261  00FF64  0E00               	movlw	0
   262  00FF66  6E8A               	movwf	3978,c	;volatile
   263                           
   264                           ;main.c: 84:         temp = 1 << 7;
   265  00FF68  0E80               	movlw	128
   266  00FF6A  6E03               	movwf	main@temp,c
   267                           
   268                           ;main.c: 85:         for (i = 0; i < 8; i++){
   269  00FF6C  0E00               	movlw	0
   270  00FF6E  6E04               	movwf	main@i,c
   271  00FF70                     l34:
   272                           
   273                           ;main.c: 86:             LATC = temp;
   274  00FF70  C003  FF8B         	movff	main@temp,3979	;volatile
   275                           
   276                           ;main.c: 87:             temp >>= 1;
   277  00FF74  90D8               	bcf	status,0,c
   278  00FF76  3203               	rrcf	main@temp,f,c
   279                           
   280                           ;main.c: 88:             _delay((unsigned long)((250)*(10000000/4000.0)));
   281  00FF78  0E04               	movlw	4
   282  00FF7A  6E02               	movwf	(??_main+1)& (0+255),c
   283  00FF7C  0E2C               	movlw	44
   284  00FF7E  6E01               	movwf	??_main& (0+255),c
   285  00FF80  0EAC               	movlw	172
   286  00FF82                     u87:
   287  00FF82  2EE8               	decfsz	wreg,f,c
   288  00FF84  D7FE               	bra	u87
   289  00FF86  2E01               	decfsz	??_main& (0+255),f,c
   290  00FF88  D7FC               	bra	u87
   291  00FF8A  2E02               	decfsz	(??_main+1)& (0+255),f,c
   292  00FF8C  D7FA               	bra	u87
   293                           
   294                           ;main.c: 89:         }
   295  00FF8E  2A04               	incf	main@i,f,c
   296  00FF90  0E07               	movlw	7
   297  00FF92  6404               	cpfsgt	main@i,c
   298  00FF94  D7ED               	goto	l34
   299                           
   300                           ;main.c: 90:         LATC = 0x00;
   301  00FF96  0E00               	movlw	0
   302  00FF98  6E8B               	movwf	3979,c	;volatile
   303                           
   304                           ;main.c: 92:         temp = 1 << 7;
   305  00FF9A  0E80               	movlw	128
   306  00FF9C  6E03               	movwf	main@temp,c
   307                           
   308                           ;main.c: 93:         for (i = 0; i < 8; i++){
   309  00FF9E  0E00               	movlw	0
   310  00FFA0  6E04               	movwf	main@i,c
   311  00FFA2                     l36:
   312                           
   313                           ;main.c: 94:             LATD = temp;
   314  00FFA2  C003  FF8C         	movff	main@temp,3980	;volatile
   315                           
   316                           ;main.c: 95:             temp >>= 1;
   317  00FFA6  90D8               	bcf	status,0,c
   318  00FFA8  3203               	rrcf	main@temp,f,c
   319                           
   320                           ;main.c: 96:             _delay((unsigned long)((250)*(10000000/4000.0)));
   321  00FFAA  0E04               	movlw	4
   322  00FFAC  6E02               	movwf	(??_main+1)& (0+255),c
   323  00FFAE  0E2C               	movlw	44
   324  00FFB0  6E01               	movwf	??_main& (0+255),c
   325  00FFB2  0EAC               	movlw	172
   326  00FFB4                     u97:
   327  00FFB4  2EE8               	decfsz	wreg,f,c
   328  00FFB6  D7FE               	bra	u97
   329  00FFB8  2E01               	decfsz	??_main& (0+255),f,c
   330  00FFBA  D7FC               	bra	u97
   331  00FFBC  2E02               	decfsz	(??_main+1)& (0+255),f,c
   332  00FFBE  D7FA               	bra	u97
   333                           
   334                           ;main.c: 97:         }
   335  00FFC0  2A04               	incf	main@i,f,c
   336  00FFC2  0E07               	movlw	7
   337  00FFC4  6404               	cpfsgt	main@i,c
   338  00FFC6  D7ED               	goto	l36
   339                           
   340                           ;main.c: 98:         LATD = 0x00;
   341  00FFC8  0E00               	movlw	0
   342  00FFCA  6E8C               	movwf	3980,c	;volatile
   343                           
   344                           ;main.c: 101:         temp = 1 << 2;
   345  00FFCC  0E04               	movlw	4
   346  00FFCE  6E03               	movwf	main@temp,c
   347                           
   348                           ;main.c: 102:         for (i = 0; i < 3; i++){
   349  00FFD0  0E00               	movlw	0
   350  00FFD2  6E04               	movwf	main@i,c
   351  00FFD4                     l38:
   352                           
   353                           ;main.c: 103:             LATE = temp;
   354  00FFD4  C003  FF8D         	movff	main@temp,3981	;volatile
   355                           
   356                           ;main.c: 104:             temp >>= 1;
   357  00FFD8  90D8               	bcf	status,0,c
   358  00FFDA  3203               	rrcf	main@temp,f,c
   359                           
   360                           ;main.c: 105:             _delay((unsigned long)((250)*(10000000/4000.0)));
   361  00FFDC  0E04               	movlw	4
   362  00FFDE  6E02               	movwf	(??_main+1)& (0+255),c
   363  00FFE0  0E2C               	movlw	44
   364  00FFE2  6E01               	movwf	??_main& (0+255),c
   365  00FFE4  0EAC               	movlw	172
   366  00FFE6                     u107:
   367  00FFE6  2EE8               	decfsz	wreg,f,c
   368  00FFE8  D7FE               	bra	u107
   369  00FFEA  2E01               	decfsz	??_main& (0+255),f,c
   370  00FFEC  D7FC               	bra	u107
   371  00FFEE  2E02               	decfsz	(??_main+1)& (0+255),f,c
   372  00FFF0  D7FA               	bra	u107
   373                           
   374                           ;main.c: 106:         }
   375  00FFF2  2A04               	incf	main@i,f,c
   376  00FFF4  0E02               	movlw	2
   377  00FFF6  6404               	cpfsgt	main@i,c
   378  00FFF8  D7ED               	goto	l38
   379                           
   380                           ;main.c: 107:         LATE = 0x00;
   381  00FFFA  0E00               	movlw	0
   382  00FFFC  6E8D               	movwf	3981,c	;volatile
   383  00FFFE  D77E               	goto	l29
   384  010000                     __end_of_main:
   385                           	opt callstack 0
   386  0000                     
   387                           	psect	rparam
   388  0000                     tosu	equ	0xFFF
   389                           tosh	equ	0xFFE
   390                           tosl	equ	0xFFD
   391                           stkptr	equ	0xFFC
   392                           pclatu	equ	0xFFB
   393                           pclath	equ	0xFFA
   394                           pcl	equ	0xFF9
   395                           tblptru	equ	0xFF8
   396                           tblptrh	equ	0xFF7
   397                           tblptrl	equ	0xFF6
   398                           tablat	equ	0xFF5
   399                           prodh	equ	0xFF4
   400                           prodl	equ	0xFF3
   401                           indf0	equ	0xFEF
   402                           postinc0	equ	0xFEE
   403                           postdec0	equ	0xFED
   404                           preinc0	equ	0xFEC
   405                           plusw0	equ	0xFEB
   406                           fsr0h	equ	0xFEA
   407                           fsr0l	equ	0xFE9
   408                           wreg	equ	0xFE8
   409                           indf1	equ	0xFE7
   410                           postinc1	equ	0xFE6
   411                           postdec1	equ	0xFE5
   412                           preinc1	equ	0xFE4
   413                           plusw1	equ	0xFE3
   414                           fsr1h	equ	0xFE2
   415                           fsr1l	equ	0xFE1
   416                           bsr	equ	0xFE0
   417                           indf2	equ	0xFDF
   418                           postinc2	equ	0xFDE
   419                           postdec2	equ	0xFDD
   420                           preinc2	equ	0xFDC
   421                           plusw2	equ	0xFDB
   422                           fsr2h	equ	0xFDA
   423                           fsr2l	equ	0xFD9
   424                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      4       4
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     225
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F      4       4       1        3.1%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
ABS                  0      0       0      34        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BIGRAM             F7F      0       0      37        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Apr 01 16:44:42 2019

                     l30 FF0C                       l32 FF3E                       l34 FF70  
                     l36 FFA2                       l29 FEFC                       l38 FFD4  
            __CFG_CPD$ON 000000                       u67 FF1E                       u77 FF50  
                     u87 FF82                       u97 FFB4              __CFG_BORV$3 000000  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000              __CFG_OSC$HS 000000             __CFG_CPB$OFF 000000  
                    u107 FFE6                      wreg 000FE8             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     _LATA 000F89                     _LATB 000F8A  
                   _LATC 000F8B                     _LATD 000F8C                     _LATE 000F8D  
                   _main FED0                     start 0000            __CFG_IESO$OFF 000000  
          __CFG_MCLRE$ON 000000             ___param_bank 000000                    ?_main 0001  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95                    _TRISE 000F96            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000                    main@i 0004                    status 000FD8  
         __CFG_PBADEN$ON 000000          __initialization FECA             __end_of_main 0000  
                 ??_main 0001            __activetblptr 000000                   _ADCON1 000FC1  
         __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000               __accesstop 0080  
__end_of__initialization FECA            ___rparam_used 000001           __pcstackCOMRAM 0001  
                __Hparam 0000                  __Lparam 0000                  __pcinit FECA  
                __ramtop 1000                  __ptext0 FED0     end_of_initialization FECA  
    start_initialization FECA         __CFG_LPT1OSC$OFF 000000        __CFG_CCP2MX$PORTC 000000  
       __CFG_WDTPS$32768 000000                 __Hrparam 0000                 __Lrparam 0000  
     __CFG_BOREN$SBORDIS 000000            __size_of_main 0130                 main@temp 0003  
