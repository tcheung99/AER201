MPASM 5.73                          MAIN.ASM   12-9-2018  23:12:02         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;Port Tester for PIC18F4620
                      00002 ;Sequentially turns on all pins that have debug lights on the DevBugger board
                      00003 #include <p18f4620.inc>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Mar 21 2017
                      00005 ;  MPASM PIC18F4620 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2017 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01440         LIST
                      00004         list P=18F4620, F=INHX32, C=160, N=80, ST=OFF, MM=OFF, R=DEC
                      00005 
                      00006 ;;;;;;Configuration Bits;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00007 
                      00008         CONFIG OSC=HS, FCMEN=OFF, IESO=OFF
                      00009         CONFIG PWRT = OFF, BOREN = SBORDIS, BORV = 3
                      00010         CONFIG WDT = OFF, WDTPS = 32768
                      00011         CONFIG MCLRE = ON, LPT1OSC = OFF, PBADEN = OFF, CCP2MX = PORTC
                      00012         CONFIG STVREN = ON, LVP = OFF, XINST = OFF
                      00013         CONFIG DEBUG = OFF
                      00014         CONFIG CP0 = OFF, CP1 = OFF, CP2 = OFF, CP3 = OFF
                      00015         CONFIG CPB = OFF, CPD = OFF
                      00016         CONFIG WRT0 = OFF, WRT1 = OFF, WRT2 = OFF, WRT3 = OFF
                      00017         CONFIG WRTB = OFF, WRTC = OFF, WRTD = OFF
                      00018         CONFIG EBTR0 = OFF, EBTR1 = OFF, EBTR2 = OFF, EBTR3 = OFF
                      00019         CONFIG EBTRB = OFF
                      00020 
                      00021 ;;;;;;Variables;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00022 
                      00023         cblock   0x70
  00000070            00024            d1
  00000071            00025            d2
                      00026         endc
                      00027 
                      00028 ;;;;;;Macros;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00029 
                      00030 ROTATE  macro    PORT
                      00031         bcf      STATUS,C    ;Clear the Carry bit so it isn't rotated into PORT
                      00032         rlncf    PORT        ;Rotate PORT to the left (bitshift)
                      00033         call     delay       ;Delay for a bit so we can actually see it
                      00034         endm
                      00035 
                      00036         org 0x00
000000 6AF2           00037         clrf     INTCON      ;Turn off interrupts
000002 6A92           00038         clrf     TRISA       ;All ports are completely output
000004 6A93           00039         clrf     TRISB
000006 6A94           00040         clrf     TRISC
000008 6A95           00041         clrf     TRISD
00000A 6A96           00042         clrf     TRISE
00000C 0E0F           00043         movlw    0x0F        ;Force analog-capable pins to digital mode
00000E 6EC1           00044         movwf    ADCON1     
                      00045          
                      00046         ;Initialize all ports to 0
000010 6A89           00047         clrf     LATA
000012 6A8A           00048         clrf     LATB
000014 6A8B           00049         clrf     LATC
000016 6A8C           00050         clrf     LATD
000018 6A8D           00051         clrf     LATE
                      00052          
00001A 0E01           00053 begin   movlw    d'1'    ;Start PORTE as 0b00000001
00001C 6E8D           00054         movwf    LATE
00001E EC?? F???      00055         call     delay
                      00056         ROTATE   LATE    ;PORTE = 0b00000010
000022 90D8               M         bcf      STATUS,C    ;Clear the Carry bit so it isn't rotated into PORT
000024 468D               M         rlncf    LATE        ;Rotate PORT to the left (bitshift)
000026 EC?? F???          M         call     delay       ;Delay for a bit so we can actually see it
                      00057         ROTATE   LATE    ;PORTE = 0b00000100
00002A 90D8               M         bcf      STATUS,C    ;Clear the Carry bit so it isn't rotated into PORT
00002C 468D               M         rlncf    LATE        ;Rotate PORT to the left (bitshift)
00002E EC?? F???          M         call     delay       ;Delay for a bit so we can actually see it
000032 6A8D           00058         clrf     LATE    ;PORTE = 0
MPASM 5.73                          MAIN.ASM   12-9-2018  23:12:02         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00059          
000034 0E01           00060         movlw    d'1'
000036 6E89           00061         movwf    LATA    ;PORTA = 0b00000001
000038 EC?? F???      00062         call     delay
                      00063         ROTATE   LATA    ;PORTA = b'00000010'
00003C 90D8               M         bcf      STATUS,C    ;Clear the Carry bit so it isn't rotated into PORT
00003E 4689               M         rlncf    LATA        ;Rotate PORT to the left (bitshift)
000040 EC?? F???          M         call     delay       ;Delay for a bit so we can actually see it
                      00064         ROTATE   LATA    ;PORTA = b'00000100'
000044 90D8               M         bcf      STATUS,C    ;Clear the Carry bit so it isn't rotated into PORT
000046 4689               M         rlncf    LATA        ;Rotate PORT to the left (bitshift)
000048 EC?? F???          M         call     delay       ;Delay for a bit so we can actually see it
                      00065         ROTATE   LATA    ;PORTA = b'00001000'
00004C 90D8               M         bcf      STATUS,C    ;Clear the Carry bit so it isn't rotated into PORT
00004E 4689               M         rlncf    LATA        ;Rotate PORT to the left (bitshift)
000050 EC?? F???          M         call     delay       ;Delay for a bit so we can actually see it
                      00066         ROTATE   LATA    ;PORTA = b'00010000'
000054 90D8               M         bcf      STATUS,C    ;Clear the Carry bit so it isn't rotated into PORT
000056 4689               M         rlncf    LATA        ;Rotate PORT to the left (bitshift)
000058 EC?? F???          M         call     delay       ;Delay for a bit so we can actually see it
                      00067         ROTATE   LATA    ;PORTA = b'00100000;
00005C 90D8               M         bcf      STATUS,C    ;Clear the Carry bit so it isn't rotated into PORT
00005E 4689               M         rlncf    LATA        ;Rotate PORT to the left (bitshift)
000060 EC?? F???          M         call     delay       ;Delay for a bit so we can actually see it
000064 6A89           00068         clrf     LATA    ;PORTA = 0
                      00069          
000066 0E01           00070         movlw    d'1'
000068 6E8A           00071         movwf    LATB
00006A EC?? F???      00072         call     delay
                      00073         ROTATE   LATB
00006E 90D8               M         bcf      STATUS,C    ;Clear the Carry bit so it isn't rotated into PORT
000070 468A               M         rlncf    LATB        ;Rotate PORT to the left (bitshift)
000072 EC?? F???          M         call     delay       ;Delay for a bit so we can actually see it
                      00074         ROTATE   LATB
000076 90D8               M         bcf      STATUS,C    ;Clear the Carry bit so it isn't rotated into PORT
000078 468A               M         rlncf    LATB        ;Rotate PORT to the left (bitshift)
00007A EC?? F???          M         call     delay       ;Delay for a bit so we can actually see it
                      00075         ROTATE   LATB
00007E 90D8               M         bcf      STATUS,C    ;Clear the Carry bit so it isn't rotated into PORT
000080 468A               M         rlncf    LATB        ;Rotate PORT to the left (bitshift)
000082 EC?? F???          M         call     delay       ;Delay for a bit so we can actually see it
                      00076         ROTATE   LATB
000086 90D8               M         bcf      STATUS,C    ;Clear the Carry bit so it isn't rotated into PORT
000088 468A               M         rlncf    LATB        ;Rotate PORT to the left (bitshift)
00008A EC?? F???          M         call     delay       ;Delay for a bit so we can actually see it
                      00077         ROTATE   LATB
00008E 90D8               M         bcf      STATUS,C    ;Clear the Carry bit so it isn't rotated into PORT
000090 468A               M         rlncf    LATB        ;Rotate PORT to the left (bitshift)
000092 EC?? F???          M         call     delay       ;Delay for a bit so we can actually see it
                      00078         ROTATE   LATB
000096 90D8               M         bcf      STATUS,C    ;Clear the Carry bit so it isn't rotated into PORT
000098 468A               M         rlncf    LATB        ;Rotate PORT to the left (bitshift)
00009A EC?? F???          M         call     delay       ;Delay for a bit so we can actually see it
                      00079         ROTATE   LATB
00009E 90D8               M         bcf      STATUS,C    ;Clear the Carry bit so it isn't rotated into PORT
0000A0 468A               M         rlncf    LATB        ;Rotate PORT to the left (bitshift)
0000A2 EC?? F???          M         call     delay       ;Delay for a bit so we can actually see it
0000A6 6A8A           00080         clrf     LATB
                      00081          
0000A8 0E01           00082         movlw    d'1'
0000AA 6E8B           00083         movwf    LATC
0000AC EC?? F???      00084         call     delay
                      00085         ROTATE   LATC
0000B0 90D8               M         bcf      STATUS,C    ;Clear the Carry bit so it isn't rotated into PORT
0000B2 468B               M         rlncf    LATC        ;Rotate PORT to the left (bitshift)
0000B4 EC?? F???          M         call     delay       ;Delay for a bit so we can actually see it
                      00086         ROTATE   LATC
0000B8 90D8               M         bcf      STATUS,C    ;Clear the Carry bit so it isn't rotated into PORT
0000BA 468B               M         rlncf    LATC        ;Rotate PORT to the left (bitshift)
0000BC EC?? F???          M         call     delay       ;Delay for a bit so we can actually see it
                      00087         ROTATE   LATC
0000C0 90D8               M         bcf      STATUS,C    ;Clear the Carry bit so it isn't rotated into PORT
0000C2 468B               M         rlncf    LATC        ;Rotate PORT to the left (bitshift)
0000C4 EC?? F???          M         call     delay       ;Delay for a bit so we can actually see it
MPASM 5.73                          MAIN.ASM   12-9-2018  23:12:02         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00088         ROTATE   LATC
0000C8 90D8               M         bcf      STATUS,C    ;Clear the Carry bit so it isn't rotated into PORT
0000CA 468B               M         rlncf    LATC        ;Rotate PORT to the left (bitshift)
0000CC EC?? F???          M         call     delay       ;Delay for a bit so we can actually see it
                      00089         ROTATE   LATC
0000D0 90D8               M         bcf      STATUS,C    ;Clear the Carry bit so it isn't rotated into PORT
0000D2 468B               M         rlncf    LATC        ;Rotate PORT to the left (bitshift)
0000D4 EC?? F???          M         call     delay       ;Delay for a bit so we can actually see it
                      00090         ROTATE   LATC
0000D8 90D8               M         bcf      STATUS,C    ;Clear the Carry bit so it isn't rotated into PORT
0000DA 468B               M         rlncf    LATC        ;Rotate PORT to the left (bitshift)
0000DC EC?? F???          M         call     delay       ;Delay for a bit so we can actually see it
                      00091         ROTATE   LATC
0000E0 90D8               M         bcf      STATUS,C    ;Clear the Carry bit so it isn't rotated into PORT
0000E2 468B               M         rlncf    LATC        ;Rotate PORT to the left (bitshift)
0000E4 EC?? F???          M         call     delay       ;Delay for a bit so we can actually see it
0000E8 6A8B           00092         clrf     LATC
                      00093          
0000EA 0E01           00094         movlw    d'1'
0000EC 6E8C           00095         movwf    LATD
0000EE EC?? F???      00096         call     delay
                      00097         ROTATE   LATD
0000F2 90D8               M         bcf      STATUS,C    ;Clear the Carry bit so it isn't rotated into PORT
0000F4 468C               M         rlncf    LATD        ;Rotate PORT to the left (bitshift)
0000F6 EC?? F???          M         call     delay       ;Delay for a bit so we can actually see it
                      00098         ROTATE   LATD
0000FA 90D8               M         bcf      STATUS,C    ;Clear the Carry bit so it isn't rotated into PORT
0000FC 468C               M         rlncf    LATD        ;Rotate PORT to the left (bitshift)
0000FE EC?? F???          M         call     delay       ;Delay for a bit so we can actually see it
                      00099         ROTATE   LATD
000102 90D8               M         bcf      STATUS,C    ;Clear the Carry bit so it isn't rotated into PORT
000104 468C               M         rlncf    LATD        ;Rotate PORT to the left (bitshift)
000106 EC?? F???          M         call     delay       ;Delay for a bit so we can actually see it
                      00100         ROTATE   LATD
00010A 90D8               M         bcf      STATUS,C    ;Clear the Carry bit so it isn't rotated into PORT
00010C 468C               M         rlncf    LATD        ;Rotate PORT to the left (bitshift)
00010E EC?? F???          M         call     delay       ;Delay for a bit so we can actually see it
                      00101         ROTATE   LATD
000112 90D8               M         bcf      STATUS,C    ;Clear the Carry bit so it isn't rotated into PORT
000114 468C               M         rlncf    LATD        ;Rotate PORT to the left (bitshift)
000116 EC?? F???          M         call     delay       ;Delay for a bit so we can actually see it
                      00102         ROTATE   LATD
00011A 90D8               M         bcf      STATUS,C    ;Clear the Carry bit so it isn't rotated into PORT
00011C 468C               M         rlncf    LATD        ;Rotate PORT to the left (bitshift)
00011E EC?? F???          M         call     delay       ;Delay for a bit so we can actually see it
                      00103         ROTATE   LATD
000122 90D8               M         bcf      STATUS,C    ;Clear the Carry bit so it isn't rotated into PORT
000124 468C               M         rlncf    LATD        ;Rotate PORT to the left (bitshift)
000126 EC?? F???          M         call     delay       ;Delay for a bit so we can actually see it
00012A 6A8C           00104         clrf     LATD
                      00105          
00012C EF?? F???      00106         goto     begin
                      00107 
                      00108         ;DELAY FUNCTION
000130                00109 delay   ;Executes loop 65536 times, with approx. 4 instruction cycles per loop (nop = 1, decf=1, goto=2)
                      00110         ;Recall that 1 instruction cycle = 4 clock cycles
000130 6A70           00111         clrf    d1
000132 6A71           00112         clrf    d2               
000134 0000           00113 delay1  nop
000136 2E70           00114         decfsz  d1, 1   ;Count from 255 to 0 (NOTE: we rely on overflow to reset the counter)
000138 EF?? F???      00115         goto    $-4     ;Note: each instruction is 2 bytes long, so to go to the previous instruction, $-2 is needed    
00013C 0000           00116         nop
00013E 2E71           00117         decfsz  d2, 1
000140 EF?? F???      00118         goto    delay1  ;Alternatively, could use label    
000144 0012           00119         return
                      00120         end

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

