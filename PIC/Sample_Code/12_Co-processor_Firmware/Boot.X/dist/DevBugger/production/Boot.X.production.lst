

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Sun Dec 09 14:46:48 2018

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,inline
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,inline
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    80                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    81                           	dabs	1,0x400,48,_BDT
    82                           	dabs	1,0x500,64,_cdc_data_tx
    83                           	dabs	1,0x438,8,_CtrlTrfData
    84                           	dabs	1,0x430,8,_SetupPkt
    85                           	dabs	1,0x540,64,_cdc_data_rx
    86  0000                     
    87                           ; Version 1.42
    88                           ; Generated 13/04/2017 GMT
    89                           ; 
    90                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    91                           ; All rights reserved.
    92                           ; 
    93                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    94                           ; 
    95                           ; Redistribution and use in source and binary forms, with or without modification, are
    96                           ; permitted provided that the following conditions are met:
    97                           ; 
    98                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    99                           ;        conditions and the following disclaimer.
   100                           ; 
   101                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   102                           ;        of conditions and the following disclaimer in the documentation and/or other
   103                           ;        materials provided with the distribution.
   104                           ; 
   105                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   106                           ;        software without specific prior written permission.
   107                           ; 
   108                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   109                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   110                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   111                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   112                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   113                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   114                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   115                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   116                           ; 
   117                           ; 
   118                           ; Code-generator required, PIC18F2550 Definitions
   119                           ; 
   120                           ; SFR Addresses
   121  0000                     
   122                           	psect	idataCOMRAM
   123  002BAA                     __pidataCOMRAM:
   124                           	opt stack 0
   125                           
   126                           ;initializer for _UART
   127  002BAA  A3                 	db	low _uart
   128  002BAB  00                 	db	high _uart
   129                           
   130                           ;initializer for _KPDState
   131  002BAC  01                 	db	1
   132                           
   133                           ;initializer for Keypad@dataEnd
   134  002BAD  F0                 	db	240
   135                           
   136                           ;initializer for _dataEnd
   137                           
   138                           	psect	idataBANK0
   139  002BB0                     __pidataBANK0:
   140                           	opt stack 0
   141  002BB0  F0                 	db	240
   142                           
   143                           	psect	smallconst
   144  000800                     __psmallconst:
   145                           	opt stack 0
   146  000800  00                 	db	0
   147  000801                     _USB_SD_Ptr:
   148                           	opt stack 0
   149  000801  C6                 	db	low _sd000
   150  000802  08                 	db	high _sd000
   151  000803  80                 	db	low _sd001
   152  000804  08                 	db	high _sd001
   153  000805  4C                 	db	low _sd002
   154  000806  08                 	db	high _sd002
   155  000807                     __end_of_USB_SD_Ptr:
   156                           	opt stack 0
   157  000807                     _USB_CD_Ptr:
   158                           	opt stack 0
   159  000807  09                 	db	low _configDescriptor1
   160  000808  08                 	db	high _configDescriptor1
   161  000809                     __end_of_USB_CD_Ptr:
   162                           	opt stack 0
   163  000809                     _configDescriptor1:
   164                           	opt stack 0
   165  000809  09                 	db	9
   166  00080A  02                 	db	2
   167  00080B  43                 	db	67
   168  00080C  00                 	db	0
   169  00080D  02                 	db	2
   170  00080E  01                 	db	1
   171  00080F  00                 	db	0
   172  000810  C0                 	db	192
   173  000811  32                 	db	50
   174  000812  09                 	db	9
   175  000813  04                 	db	4
   176  000814  00                 	db	0
   177  000815  00                 	db	0
   178  000816  01                 	db	1
   179  000817  02                 	db	2
   180  000818  02                 	db	2
   181  000819  01                 	db	1
   182  00081A  00                 	db	0
   183  00081B  05                 	db	5
   184  00081C  24                 	db	36
   185  00081D  00                 	db	0
   186  00081E  10                 	db	16
   187  00081F  01                 	db	1
   188  000820  04                 	db	4
   189  000821  24                 	db	36
   190  000822  02                 	db	2
   191  000823  02                 	db	2
   192  000824  05                 	db	5
   193  000825  24                 	db	36
   194  000826  06                 	db	6
   195  000827  00                 	db	0
   196  000828  01                 	db	1
   197  000829  05                 	db	5
   198  00082A  24                 	db	36
   199  00082B  01                 	db	1
   200  00082C  00                 	db	0
   201  00082D  01                 	db	1
   202  00082E  07                 	db	7
   203  00082F  05                 	db	5
   204  000830  81                 	db	129
   205  000831  03                 	db	3
   206  000832  08                 	db	8
   207  000833  00                 	db	0
   208  000834  02                 	db	2
   209  000835  09                 	db	9
   210  000836  04                 	db	4
   211  000837  01                 	db	1
   212  000838  00                 	db	0
   213  000839  02                 	db	2
   214  00083A  0A                 	db	10
   215  00083B  00                 	db	0
   216  00083C  00                 	db	0
   217  00083D  00                 	db	0
   218  00083E  07                 	db	7
   219  00083F  05                 	db	5
   220  000840  02                 	db	2
   221  000841  02                 	db	2
   222  000842  40                 	db	64
   223  000843  00                 	db	0
   224  000844  00                 	db	0
   225  000845  07                 	db	7
   226  000846  05                 	db	5
   227  000847  82                 	db	130
   228  000848  02                 	db	2
   229  000849  40                 	db	64
   230  00084A  00                 	db	0
   231  00084B  00                 	db	0
   232  00084C                     __end_of_configDescriptor1:
   233                           	opt stack 0
   234  00084C                     _sd002:
   235                           	opt stack 0
   236  00084C  34                 	db	52
   237  00084D  03                 	db	3
   238  00084E  0043               	dw	67
   239  000850  0044               	dw	68
   240  000852  0043               	dw	67
   241  000854  0020               	dw	32
   242  000856  0052               	dw	82
   243  000858  0053               	dw	83
   244  00085A  002D               	dw	45
   245  00085C  0032               	dw	50
   246  00085E  0033               	dw	51
   247  000860  0032               	dw	50
   248  000862  0020               	dw	32
   249  000864  0045               	dw	69
   250  000866  006D               	dw	109
   251  000868  0075               	dw	117
   252  00086A  006C               	dw	108
   253  00086C  0061               	dw	97
   254  00086E  0074               	dw	116
   255  000870  0069               	dw	105
   256  000872  006F               	dw	111
   257  000874  006E               	dw	110
   258  000876  0020               	dw	32
   259  000878  0044               	dw	68
   260  00087A  0065               	dw	101
   261  00087C  006D               	dw	109
   262  00087E  006F               	dw	111
   263  000880                     __end_of_sd002:
   264                           	opt stack 0
   265  000880                     _sd001:
   266                           	opt stack 0
   267  000880  34                 	db	52
   268  000881  03                 	db	3
   269  000882  004D               	dw	77
   270  000884  0069               	dw	105
   271  000886  0063               	dw	99
   272  000888  0072               	dw	114
   273  00088A  006F               	dw	111
   274  00088C  0063               	dw	99
   275  00088E  0068               	dw	104
   276  000890  0069               	dw	105
   277  000892  0070               	dw	112
   278  000894  0020               	dw	32
   279  000896  0054               	dw	84
   280  000898  0065               	dw	101
   281  00089A  0063               	dw	99
   282  00089C  0068               	dw	104
   283  00089E  006E               	dw	110
   284  0008A0  006F               	dw	111
   285  0008A2  006C               	dw	108
   286  0008A4  006F               	dw	111
   287  0008A6  0067               	dw	103
   288  0008A8  0079               	dw	121
   289  0008AA  0020               	dw	32
   290  0008AC  0049               	dw	73
   291  0008AE  006E               	dw	110
   292  0008B0  0063               	dw	99
   293  0008B2  002E               	dw	46
   294  0008B4                     __end_of_sd001:
   295                           	opt stack 0
   296  0008B4                     _device_dsc:
   297                           	opt stack 0
   298  0008B4  12                 	db	18
   299  0008B5  01                 	db	1
   300  0008B6  0200               	dw	512
   301  0008B8  02                 	db	2
   302  0008B9  00                 	db	0
   303  0008BA  00                 	db	0
   304  0008BB  08                 	db	8
   305  0008BC  04D8               	dw	1240
   306  0008BE  000A               	dw	10
   307  0008C0  0100               	dw	256
   308  0008C2  01                 	db	1
   309  0008C3  02                 	db	2
   310  0008C4  00                 	db	0
   311  0008C5  01                 	db	1
   312  0008C6                     __end_of_device_dsc:
   313                           	opt stack 0
   314  0008C6                     _sd000:
   315                           	opt stack 0
   316  0008C6  04                 	db	4
   317  0008C7  03                 	db	3
   318  0008C8  0409               	dw	1033
   319  0008CA                     __end_of_sd000:
   320                           	opt stack 0
   321  0000                     _PORTAbits	set	3968
   322  0000                     _PORTBbits	set	3969
   323  0000                     _ADCON0bits	set	4034
   324  0000                     _OSCCONbits	set	4051
   325  0000                     _LATAbits	set	3977
   326  0000                     _UEP0bits	set	3952
   327  0000                     _INTCONbits	set	4082
   328  0000                     _IPR2bits	set	4002
   329  0000                     _RCONbits	set	4048
   330  0000                     _UCON	set	3949
   331  0000                     _USTAT	set	3948
   332  0000                     _PIR2bits	set	4001
   333  0000                     _UIEbits	set	3945
   334  0000                     _UIRbits	set	3944
   335  0000                     _UADDR	set	3950
   336  0000                     _UIE	set	3945
   337  0000                     _UEIE	set	3947
   338  0000                     _UCFG	set	3951
   339  0000                     _UIR	set	3944
   340  0000                     _UEIR	set	3946
   341  0000                     _PIE2bits	set	4000
   342  0000                     _SPBRGH	set	4016
   343  0000                     _SPBRG	set	4015
   344  0000                     _TXREG	set	4013
   345  0000                     _RCREG	set	4014
   346  0000                     _TRISCbits	set	3988
   347  0000                     _RCSTAbits	set	4011
   348  0000                     _PIR1bits	set	3998
   349  0000                     _TXSTAbits	set	4012
   350  0000                     _ADCON1	set	4033
   351  0000                     _LATC	set	3979
   352  0000                     _LATB	set	3978
   353  0000                     _LATA	set	3977
   354  0000                     _TRISC	set	3988
   355  0000                     _TRISB	set	3987
   356  0000                     _TRISA	set	3986
   357  0000                     _UCONbits	set	3949
   358  0000                     _UEP1	set	3953
   359  0000                     _UEP0	set	3952
   360  0000                     _TRISC7	set	31911
   361  0000                     _TRISC6	set	31910
   362  0000                     _RCIF	set	31989
   363  0000                     _TRMT	set	32097
   364  0000                     _TXIF	set	31988
   365  0000                     _ADIE	set	31982
   366  0000                     _PEIE	set	32662
   367                           
   368                           ; #config settings
   369  0008CA  00                 	db	0	; dummy byte at the end
   370  0000                     
   371                           	psect	cinit
   372  002722                     __pcinit:
   373                           	opt stack 0
   374  002722                     start_initialization:
   375                           	opt stack 0
   376  002722                     __initialization:
   377                           	opt stack 0
   378                           
   379                           ; Initialize objects allocated to BANK0 (1 bytes)
   380                           ; load TBLPTR registers with __pidataBANK0
   381  002722  0EB0               	movlw	low __pidataBANK0
   382  002724  6EF6               	movwf	tblptrl,c
   383  002726  0E2B               	movlw	high __pidataBANK0
   384  002728  6EF7               	movwf	tblptrh,c
   385  00272A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   386  00272C  6EF8               	movwf	tblptru,c
   387  00272E  0009               	tblrd		*+	;fetch initializer
   388  002730  CFF5 F0ED          	movff	tablat,__pdataBANK0
   389                           
   390                           ; Initialize objects allocated to COMRAM (4 bytes)
   391                           ; load TBLPTR registers with __pidataCOMRAM
   392  002734  0EAA               	movlw	low __pidataCOMRAM
   393  002736  6EF6               	movwf	tblptrl,c
   394  002738  0E2B               	movlw	high __pidataCOMRAM
   395  00273A  6EF7               	movwf	tblptrh,c
   396  00273C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   397  00273E  6EF8               	movwf	tblptru,c
   398  002740  EE00  F054         	lfsr	0,__pdataCOMRAM
   399  002744  EE10 F004          	lfsr	1,4
   400  002748                     copy_data0:
   401  002748  0009               	tblrd		*+
   402  00274A  CFF5 FFEE          	movff	tablat,postinc0
   403  00274E  50E5               	movf	postdec1,w,c
   404  002750  50E1               	movf	fsr1l,w,c
   405  002752  E1FA               	bnz	copy_data0
   406                           
   407                           ; Clear objects allocated to BANK1 (128 bytes)
   408  002754  EE01  F000         	lfsr	0,__pbssBANK1
   409  002758  0E80               	movlw	128
   410  00275A                     clear_0:
   411  00275A  6AEE               	clrf	postinc0,c
   412  00275C  06E8               	decf	wreg,f,c
   413  00275E  E1FD               	bnz	clear_0
   414                           
   415                           ; Clear objects allocated to BANK0 (104 bytes)
   416  002760  EE00  F060         	lfsr	0,__pbssBANK0
   417  002764  0E68               	movlw	104
   418  002766                     clear_1:
   419  002766  6AEE               	clrf	postinc0,c
   420  002768  06E8               	decf	wreg,f,c
   421  00276A  E1FD               	bnz	clear_1
   422                           
   423                           ; Clear objects allocated to COMRAM (40 bytes)
   424  00276C  EE00  F02C         	lfsr	0,__pbssCOMRAM
   425  002770  0E28               	movlw	40
   426  002772                     clear_2:
   427  002772  6AEE               	clrf	postinc0,c
   428  002774  06E8               	decf	wreg,f,c
   429  002776  E1FD               	bnz	clear_2
   430  002778                     end_of_initialization:
   431                           	opt stack 0
   432  002778                     __end_of__initialization:
   433                           	opt stack 0
   434  002778  9058               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   435  00277A  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   436  00277C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   437  00277E  6EF8               	movwf	tblptru,c
   438  002780  0100               	movlb	0
   439  002782  EF16  F011         	goto	_main	;jump to C main() function
   440                           tblptru	equ	0xFF8
   441                           tblptrh	equ	0xFF7
   442                           tblptrl	equ	0xFF6
   443                           tablat	equ	0xFF5
   444                           postinc0	equ	0xFEE
   445                           wreg	equ	0xFE8
   446                           postdec1	equ	0xFE5
   447                           fsr1l	equ	0xFE1
   448                           
   449                           	psect	bssCOMRAM
   450  00002C                     __pbssCOMRAM:
   451                           	opt stack 0
   452  00002C                     _USB1msTickCount:
   453                           	opt stack 0
   454  00002C                     	ds	4
   455  000030                     _keypadFlags:
   456                           	opt stack 0
   457  000030                     	ds	3
   458  000033                     _CDCDataInHandle:
   459                           	opt stack 0
   460  000033                     	ds	2
   461  000035                     _pBDTEntryEP0OutNext:
   462                           	opt stack 0
   463  000035                     	ds	2
   464  000037                     _pBDTEntryEP0OutCurrent:
   465                           	opt stack 0
   466  000037                     	ds	2
   467  000039                     	ds	1
   468  00003A                     _UARTinterruptState:
   469                           	opt stack 0
   470  00003A                     	ds	1
   471  00003B                     _control_signal_bitmap:
   472                           	opt stack 0
   473  00003B                     	ds	1
   474  00003C                     _cdc_mem_type:
   475                           	opt stack 0
   476  00003C                     	ds	1
   477  00003D                     _cdc_tx_len:
   478                           	opt stack 0
   479  00003D                     	ds	1
   480  00003E                     _USBDeferOUTDataStagePackets:
   481                           	opt stack 0
   482  00003E                     	ds	1
   483  00003F                     _USBDeferINDataStagePackets:
   484                           	opt stack 0
   485  00003F                     	ds	1
   486  000040                     _USBStatusStageEnabledFlag2:
   487                           	opt stack 0
   488  000040                     	ds	1
   489  000041                     _USBStatusStageEnabledFlag1:
   490                           	opt stack 0
   491  000041                     	ds	1
   492  000042                     _USBDeferStatusStagePacket:
   493                           	opt stack 0
   494  000042                     	ds	1
   495  000043                     _USBStatusStageTimeoutCounter:
   496                           	opt stack 0
   497  000043                     	ds	1
   498  000044                     _BothEP0OutUOWNsSet:
   499                           	opt stack 0
   500  000044                     	ds	1
   501  000045                     _endpoint_number:
   502                           	opt stack 0
   503  000045                     	ds	1
   504  000046                     _RemoteWakeup:
   505                           	opt stack 0
   506  000046                     	ds	1
   507  000047                     _controlTransferState:
   508                           	opt stack 0
   509  000047                     	ds	1
   510  000048                     _shortPacketStatus:
   511                           	opt stack 0
   512  000048                     	ds	1
   513  000049                     _RS232_Out_Data_Rdy:
   514                           	opt stack 0
   515  000049                     	ds	1
   516  00004A                     _RS232cp:
   517                           	opt stack 0
   518  00004A                     	ds	1
   519  00004B                     _LastRS232Out:
   520                           	opt stack 0
   521  00004B                     	ds	1
   522  00004C                     _NextUSBOut:
   523                           	opt stack 0
   524  00004C                     	ds	1
   525  00004D                     _cdc_trf_state:
   526                           	opt stack 0
   527  00004D                     	ds	1
   528  00004E                     _USBDeviceState:
   529                           	opt stack 0
   530  00004E                     	ds	1
   531  00004F                     _USBAlternateInterface:
   532                           	opt stack 0
   533  00004F                     	ds	2
   534  000051                     Keypad@dataOut:
   535                           	opt stack 0
   536  000051                     	ds	1
   537  000052                     _USTATcopy:
   538                           	opt stack 0
   539  000052                     	ds	1
   540  000053                     _USBActiveConfiguration:
   541                           	opt stack 0
   542  000053                     	ds	1
   543                           tblptru	equ	0xFF8
   544                           tblptrh	equ	0xFF7
   545                           tblptrl	equ	0xFF6
   546                           tablat	equ	0xFF5
   547                           postinc0	equ	0xFEE
   548                           wreg	equ	0xFE8
   549                           postdec1	equ	0xFE5
   550                           fsr1l	equ	0xFE1
   551                           
   552                           	psect	dataCOMRAM
   553  000054                     __pdataCOMRAM:
   554                           	opt stack 0
   555  000054                     _UART:
   556                           	opt stack 0
   557  000054                     	ds	2
   558  000056                     _KPDState:
   559                           	opt stack 0
   560  000056                     	ds	1
   561  000057                     Keypad@dataEnd:
   562                           	opt stack 0
   563  000057                     	ds	1
   564                           tblptru	equ	0xFF8
   565                           tblptrh	equ	0xFF7
   566                           tblptrl	equ	0xFF6
   567                           tablat	equ	0xFF5
   568                           postinc0	equ	0xFEE
   569                           wreg	equ	0xFE8
   570                           postdec1	equ	0xFE5
   571                           fsr1l	equ	0xFE1
   572                           
   573                           	psect	bssBANK0
   574  000060                     __pbssBANK0:
   575                           	opt stack 0
   576  000060                     _outPipes:
   577                           	opt stack 0
   578  000060                     	ds	8
   579  000068                     _inPipes:
   580                           	opt stack 0
   581  000068                     	ds	6
   582  00006E                     _pBDTEntryIn:
   583                           	opt stack 0
   584  00006E                     	ds	6
   585  000074                     _pBDTEntryOut:
   586                           	opt stack 0
   587  000074                     	ds	6
   588  00007A                     _BaudRateGen:
   589                           	opt stack 0
   590  00007A                     	ds	4
   591  00007E                     _pCDCDst:
   592                           	opt stack 0
   593  00007E                     	ds	3
   594  000081                     _pCDCSrc:
   595                           	opt stack 0
   596  000081                     	ds	3
   597  000084                     _ep_data_out:
   598                           	opt stack 0
   599  000084                     	ds	3
   600  000087                     _ep_data_in:
   601                           	opt stack 0
   602  000087                     	ds	3
   603  00008A                     _CDCDataOutHandle:
   604                           	opt stack 0
   605  00008A                     	ds	2
   606  00008C                     _pDst:
   607                           	opt stack 0
   608  00008C                     	ds	2
   609  00008E                     _lastTransmission:
   610                           	opt stack 0
   611  00008E                     	ds	2
   612  000090                     _cdc_rx_len:
   613                           	opt stack 0
   614  000090                     	ds	1
   615  000091                     _USBTicksSinceSuspendEnd:
   616                           	opt stack 0
   617  000091                     	ds	1
   618  000092                     _USBBusIsSuspended:
   619                           	opt stack 0
   620  000092                     	ds	1
   621  000093                     _arr_dataRX:
   622                           	opt stack 0
   623  000093                     	ds	16
   624  0000A3                     _uart:
   625                           	opt stack 0
   626  0000A3                     	ds	12
   627  0000AF                     _cdc_notice:
   628                           	opt stack 0
   629  0000AF                     	ds	10
   630  0000B9                     _dummy_encapsulated_cmd_response:
   631                           	opt stack 0
   632  0000B9                     	ds	8
   633  0000C1                     _line_coding:
   634                           	opt stack 0
   635  0000C1                     	ds	7
   636                           tblptru	equ	0xFF8
   637                           tblptrh	equ	0xFF7
   638                           tblptrl	equ	0xFF6
   639                           tablat	equ	0xFF5
   640                           postinc0	equ	0xFEE
   641                           wreg	equ	0xFE8
   642                           postdec1	equ	0xFE5
   643                           fsr1l	equ	0xFE1
   644                           
   645                           	psect	dataBANK0
   646  0000ED                     __pdataBANK0:
   647                           	opt stack 0
   648  0000ED                     	ds	1
   649                           tblptru	equ	0xFF8
   650                           tblptrh	equ	0xFF7
   651                           tblptrl	equ	0xFF6
   652                           tablat	equ	0xFF5
   653                           postinc0	equ	0xFEE
   654                           wreg	equ	0xFE8
   655                           postdec1	equ	0xFE5
   656                           fsr1l	equ	0xFE1
   657                           
   658                           	psect	bssBANK1
   659  000100                     __pbssBANK1:
   660                           	opt stack 0
   661  000100                     _RS232_Out_Data:
   662                           	opt stack 0
   663  000100                     	ds	64
   664  000140                     _USB_Out_Buffer:
   665                           	opt stack 0
   666  000140                     	ds	64
   667                           tblptru	equ	0xFF8
   668                           tblptrh	equ	0xFF7
   669                           tblptrl	equ	0xFF6
   670                           tablat	equ	0xFF5
   671                           postinc0	equ	0xFEE
   672                           wreg	equ	0xFE8
   673                           postdec1	equ	0xFE5
   674                           fsr1l	equ	0xFE1
   675                           
   676                           	psect	cstackBANK1
   677  000180                     __pcstackBANK1:
   678                           	opt stack 0
   679  000180                     ??_UART_Init:
   680                           
   681                           ; 1 bytes @ 0x0
   682  000180                     	ds	4
   683  000184                     main@boot:
   684                           	opt stack 0
   685                           
   686                           ; 1 bytes @ 0x4
   687  000184                     	ds	1
   688  000185                     main@data:
   689                           	opt stack 0
   690                           
   691                           ; 1 bytes @ 0x5
   692  000185                     	ds	1
   693                           tblptru	equ	0xFF8
   694                           tblptrh	equ	0xFF7
   695                           tblptrl	equ	0xFF6
   696                           tablat	equ	0xFF5
   697                           postinc0	equ	0xFEE
   698                           wreg	equ	0xFE8
   699                           postdec1	equ	0xFE5
   700                           fsr1l	equ	0xFE1
   701                           
   702                           	psect	cstackBANK0
   703  0000C8                     __pcstackBANK0:
   704                           	opt stack 0
   705  0000C8                     ??_SYS_InterruptLow:
   706                           
   707                           ; 1 bytes @ 0x0
   708  0000C8                     	ds	17
   709  0000D9                     ?_USBTransferOnePacket:
   710                           	opt stack 0
   711  0000D9                     ?___aldiv:
   712                           	opt stack 0
   713  0000D9                     SYSTEM_Initialize@state:
   714                           	opt stack 0
   715  0000D9                     USART_putcUSART@c:
   716                           	opt stack 0
   717  0000D9                     USART_getcUSART@c:
   718                           	opt stack 0
   719  0000D9                     USBTransferOnePacket@dir:
   720                           	opt stack 0
   721  0000D9                     readKeyboard@i:
   722                           	opt stack 0
   723  0000D9                     putUSBUSART@data:
   724                           	opt stack 0
   725  0000D9                     uartTransmitBlocking@data:
   726                           	opt stack 0
   727  0000D9                     memset@p1:
   728                           	opt stack 0
   729  0000D9                     ___aldiv@dividend:
   730                           	opt stack 0
   731                           
   732                           ; 4 bytes @ 0x11
   733  0000D9                     	ds	1
   734  0000DA                     ??_keypadRoutine:
   735  0000DA                     ??_keypadRoutine_StateBased:
   736  0000DA                     USBTransferOnePacket@data:
   737                           	opt stack 0
   738                           
   739                           ; 2 bytes @ 0x12
   740  0000DA                     	ds	1
   741  0000DB                     putUSBUSART@length:
   742                           	opt stack 0
   743  0000DB                     uartTransmitBlocking@numBytes:
   744                           	opt stack 0
   745  0000DB                     memset@c:
   746                           	opt stack 0
   747                           
   748                           ; 2 bytes @ 0x13
   749  0000DB                     	ds	1
   750  0000DC                     ??_uartTransmitBlocking:
   751  0000DC                     USBTransferOnePacket@len:
   752                           	opt stack 0
   753                           
   754                           ; 1 bytes @ 0x14
   755  0000DC                     	ds	1
   756  0000DD                     ??_USBTransferOnePacket:
   757  0000DD                     uartTransmitBlocking@numTransmits:
   758                           	opt stack 0
   759  0000DD                     memset@n:
   760                           	opt stack 0
   761  0000DD                     ___aldiv@divisor:
   762                           	opt stack 0
   763                           
   764                           ; 4 bytes @ 0x15
   765  0000DD                     	ds	1
   766  0000DE                     ??_keypadRoutineUART:
   767                           
   768                           ; 1 bytes @ 0x16
   769  0000DE                     	ds	1
   770  0000DF                     memset@p:
   771                           	opt stack 0
   772                           
   773                           ; 2 bytes @ 0x17
   774  0000DF                     	ds	2
   775  0000E1                     USBDeviceInit@i:
   776                           	opt stack 0
   777  0000E1                     USBTransferOnePacket@ep:
   778                           	opt stack 0
   779  0000E1                     ___aldiv@counter:
   780                           	opt stack 0
   781                           
   782                           ; 1 bytes @ 0x19
   783  0000E1                     	ds	1
   784  0000E2                     ___aldiv@sign:
   785                           	opt stack 0
   786  0000E2                     USBTransferOnePacket@handle:
   787                           	opt stack 0
   788                           
   789                           ; 2 bytes @ 0x1A
   790  0000E2                     	ds	1
   791  0000E3                     ___aldiv@quotient:
   792                           	opt stack 0
   793                           
   794                           ; 4 bytes @ 0x1B
   795  0000E3                     	ds	1
   796  0000E4                     CDCTxService@i:
   797                           	opt stack 0
   798  0000E4                     getsUSBUSART@buffer:
   799                           	opt stack 0
   800                           
   801                           ; 2 bytes @ 0x1C
   802  0000E4                     	ds	1
   803  0000E5                     CDCTxService@byte_to_send:
   804                           	opt stack 0
   805                           
   806                           ; 1 bytes @ 0x1D
   807  0000E5                     	ds	1
   808  0000E6                     getsUSBUSART@len:
   809                           	opt stack 0
   810                           
   811                           ; 1 bytes @ 0x1E
   812  0000E6                     	ds	1
   813  0000E7                     UART_Init@baud:
   814                           	opt stack 0
   815                           
   816                           ; 4 bytes @ 0x1F
   817  0000E7                     	ds	1
   818  0000E8                     
   819                           ; 1 bytes @ 0x20
   820  0000E8                     	ds	3
   821  0000EB                     ??_bootKeypadUART:
   822                           
   823                           ; 1 bytes @ 0x23
   824  0000EB                     	ds	1
   825  0000EC                     ??_main:
   826                           
   827                           ; 1 bytes @ 0x24
   828  0000EC                     	ds	1
   829                           tblptru	equ	0xFF8
   830                           tblptrh	equ	0xFF7
   831                           tblptrl	equ	0xFF6
   832                           tablat	equ	0xFF5
   833                           postinc0	equ	0xFEE
   834                           wreg	equ	0xFE8
   835                           postdec1	equ	0xFE5
   836                           fsr1l	equ	0xFE1
   837                           
   838                           	psect	cstackCOMRAM
   839  000001                     __pcstackCOMRAM:
   840                           	opt stack 0
   841  000001                     ??_USBStdGetDscHandler:
   842  000001                     ??_USBStdGetStatusHandler:
   843  000001                     ?i2_USBTransferOnePacket:
   844                           	opt stack 0
   845  000001                     ?___lldiv:
   846                           	opt stack 0
   847  000001                     USART_Initialize@c:
   848                           	opt stack 0
   849  000001                     USBConfigureEndpoint@direction:
   850                           	opt stack 0
   851  000001                     USBCtrlTrfTxService@byteToSend:
   852                           	opt stack 0
   853  000001                     i2USBTransferOnePacket@dir:
   854                           	opt stack 0
   855  000001                     memcpy@d1:
   856                           	opt stack 0
   857  000001                     i2memset@p1:
   858                           	opt stack 0
   859  000001                     ___lldiv@dividend:
   860                           	opt stack 0
   861                           
   862                           ; 4 bytes @ 0x0
   863  000001                     	ds	1
   864  000002                     ??_USBConfigureEndpoint:
   865  000002                     USBStdGetStatusHandler@p:
   866                           	opt stack 0
   867  000002                     i2USBTransferOnePacket@data:
   868                           	opt stack 0
   869                           
   870                           ; 2 bytes @ 0x1
   871  000002                     	ds	1
   872  000003                     memcpy@s1:
   873                           	opt stack 0
   874  000003                     i2memset@c:
   875                           	opt stack 0
   876                           
   877                           ; 2 bytes @ 0x2
   878  000003                     	ds	1
   879  000004                     i2USBTransferOnePacket@len:
   880                           	opt stack 0
   881                           
   882                           ; 1 bytes @ 0x3
   883  000004                     	ds	1
   884  000005                     ??i2_USBTransferOnePacket:
   885  000005                     memcpy@n:
   886                           	opt stack 0
   887  000005                     i2memset@n:
   888                           	opt stack 0
   889  000005                     ___lldiv@divisor:
   890                           	opt stack 0
   891                           
   892                           ; 4 bytes @ 0x4
   893  000005                     	ds	1
   894  000006                     USBConfigureEndpoint@EPNum:
   895                           	opt stack 0
   896                           
   897                           ; 1 bytes @ 0x5
   898  000006                     	ds	1
   899  000007                     USBConfigureEndpoint@handle:
   900                           	opt stack 0
   901  000007                     memcpy@d:
   902                           	opt stack 0
   903  000007                     i2memset@p:
   904                           	opt stack 0
   905                           
   906                           ; 2 bytes @ 0x6
   907  000007                     	ds	2
   908  000009                     USBEnableEndpoint@options:
   909                           	opt stack 0
   910  000009                     i2USBDeviceInit@i:
   911                           	opt stack 0
   912  000009                     i2USBTransferOnePacket@ep:
   913                           	opt stack 0
   914  000009                     memcpy@s:
   915                           	opt stack 0
   916  000009                     ___lldiv@quotient:
   917                           	opt stack 0
   918                           
   919                           ; 4 bytes @ 0x8
   920  000009                     	ds	1
   921  00000A                     USBEnableEndpoint@p:
   922                           	opt stack 0
   923  00000A                     i2USBTransferOnePacket@handle:
   924                           	opt stack 0
   925                           
   926                           ; 2 bytes @ 0x9
   927  00000A                     	ds	1
   928  00000B                     memcpy@tmp:
   929                           	opt stack 0
   930                           
   931                           ; 1 bytes @ 0xA
   932  00000B                     	ds	1
   933  00000C                     USBEnableEndpoint@ep:
   934                           	opt stack 0
   935                           
   936                           ; 1 bytes @ 0xB
   937  00000C                     	ds	1
   938  00000D                     APP_DeviceCDCEmulatorInitialize@i:
   939                           	opt stack 0
   940  00000D                     ___lldiv@counter:
   941                           	opt stack 0
   942                           
   943                           ; 1 bytes @ 0xC
   944  00000D                     	ds	1
   945  00000E                     USER_USB_CALLBACK_EVENT_HANDLER@event:
   946                           	opt stack 0
   947  00000E                     USART_mySetLineCodingHandler@dwBaud:
   948                           	opt stack 0
   949                           
   950                           ; 4 bytes @ 0xD
   951  00000E                     	ds	2
   952  000010                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
   953                           	opt stack 0
   954                           
   955                           ; 2 bytes @ 0xF
   956  000010                     	ds	2
   957  000012                     USBCtrlTrfRxService@i:
   958                           	opt stack 0
   959  000012                     USBCtrlTrfInHandler@lastDTS:
   960                           	opt stack 0
   961  000012                     USER_USB_CALLBACK_EVENT_HANDLER@size:
   962                           	opt stack 0
   963                           
   964                           ; 2 bytes @ 0x11
   965  000012                     	ds	1
   966  000013                     USBCtrlTrfRxService@byteToRead:
   967                           	opt stack 0
   968                           
   969                           ; 1 bytes @ 0x12
   970  000013                     	ds	1
   971  000014                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
   972                           
   973                           ; 1 bytes @ 0x13
   974  000014                     	ds	2
   975  000016                     ??_USBStdFeatureReqHandler:
   976  000016                     USBStdSetCfgHandler@i:
   977                           	opt stack 0
   978                           
   979                           ; 1 bytes @ 0x15
   980  000016                     	ds	1
   981  000017                     USBStdFeatureReqHandler@pUEP:
   982                           	opt stack 0
   983                           
   984                           ; 2 bytes @ 0x16
   985  000017                     	ds	2
   986  000019                     USBStdFeatureReqHandler@current_ep_data:
   987                           	opt stack 0
   988                           
   989                           ; 1 bytes @ 0x18
   990  000019                     	ds	1
   991  00001A                     USBStdFeatureReqHandler@p:
   992                           	opt stack 0
   993                           
   994                           ; 2 bytes @ 0x19
   995  00001A                     	ds	2
   996  00001C                     ??_USBCtrlEPService:
   997  00001C                     
   998                           ; 1 bytes @ 0x1B
   999  00001C                     	ds	1
  1000  00001D                     USBDeviceTasks@i:
  1001                           	opt stack 0
  1002                           
  1003                           ; 1 bytes @ 0x1C
  1004  00001D                     	ds	1
  1005  00001E                     ??_SYS_InterruptHigh:
  1006                           
  1007                           ; 1 bytes @ 0x1D
  1008  00001E                     	ds	14
  1009                           tblptru	equ	0xFF8
  1010                           tblptrh	equ	0xFF7
  1011                           tblptrl	equ	0xFF6
  1012                           tablat	equ	0xFF5
  1013                           postinc0	equ	0xFEE
  1014                           wreg	equ	0xFE8
  1015                           postdec1	equ	0xFE5
  1016                           fsr1l	equ	0xFE1
  1017                           
  1018 ;;
  1019 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1020 ;;
  1021 ;; *************** function _main *****************
  1022 ;; Defined at:
  1023 ;;		line 32 in file "main.c"
  1024 ;; Parameters:    Size  Location     Type
  1025 ;;		None
  1026 ;; Auto vars:     Size  Location     Type
  1027 ;;  data            1    5[BANK1 ] unsigned char 
  1028 ;;  boot            1    4[BANK1 ] char 
  1029 ;; Return value:  Size  Location     Type
  1030 ;;                  1    wreg      void 
  1031 ;; Registers used:
  1032 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1033 ;; Tracked objects:
  1034 ;;		On entry : 0/0
  1035 ;;		On exit  : 0/0
  1036 ;;		Unchanged: 0/0
  1037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1038 ;;      Params:         0       0       0       0       0       0       0       0       0
  1039 ;;      Locals:         0       0       2       0       0       0       0       0       0
  1040 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1041 ;;      Totals:         0       1       2       0       0       0       0       0       0
  1042 ;;Total ram usage:        3 bytes
  1043 ;; Hardware stack levels required when called:   17
  1044 ;; This function calls:
  1045 ;;		_bootKeypadAndComPort
  1046 ;;		_bootKeypadPORTB
  1047 ;;		_bootKeypadUART
  1048 ;;		_bootUserCode
  1049 ;;		_machineConfig
  1050 ;;		_readKeyboard
  1051 ;; This function is called by:
  1052 ;;		Startup code after reset
  1053 ;; This function uses a non-reentrant model
  1054 ;;
  1055                           
  1056                           	psect	text0
  1057  00222C                     __ptext0:
  1058                           	opt stack 0
  1059  00222C                     _main:
  1060                           	opt stack 14
  1061                           
  1062                           ;main.c: 34: machineConfig();
  1063                           
  1064                           ;incstack = 0
  1065  00222C  EC18  F015         	call	_machineConfig	;wreg free
  1066                           
  1067                           ;main.c: 36: _delay((unsigned long)((10)*(8000000/4000.0)));
  1068  002230  0E1A               	movlw	26
  1069  002232  0100               	movlb	0	; () banked
  1070  002234  6FEC               	movwf	??_main& (0+255),b
  1071  002236  0EF8               	movlw	248
  1072  002238                     u5497:
  1073  002238  2EE8               	decfsz	wreg,f,c
  1074  00223A  D7FE               	bra	u5497
  1075  00223C  2FEC               	decfsz	??_main& (0+255),f,b
  1076  00223E  D7FC               	bra	u5497
  1077  002240  F000               	nop	
  1078                           
  1079                           ;main.c: 38: signed char boot = -1;
  1080  002242  0101               	movlb	1	; () banked
  1081  002244  6984               	setf	main@boot& (0+255),b
  1082                           
  1083                           ; BSR set to: 1
  1084                           ;main.c: 41: unsigned char data = readKeyboard();
  1085  002246  ECF0  F011         	call	_readKeyboard	;wreg free
  1086  00224A  0101               	movlb	1	; () banked
  1087  00224C  6F85               	movwf	main@data& (0+255),b
  1088                           
  1089                           ; BSR set to: 1
  1090                           ;main.c: 44: if (data != 0xF0){
  1091  00224E  0EF0               	movlw	240
  1092  002250  0101               	movlb	1	; () banked
  1093  002252  1985               	xorwf	main@data& (0+255),w,b
  1094  002254  B4D8               	btfsc	status,2,c
  1095  002256  D028               	goto	l5851
  1096                           
  1097                           ; BSR set to: 1
  1098                           ;main.c: 49: _delay((unsigned long)((20)*(8000000/4000.0)));
  1099  002258  0E34               	movlw	52
  1100  00225A  0100               	movlb	0	; () banked
  1101  00225C  6FEC               	movwf	??_main& (0+255),b
  1102  00225E  0EF1               	movlw	241
  1103  002260                     u5507:
  1104  002260  2EE8               	decfsz	wreg,f,c
  1105  002262  D7FE               	bra	u5507
  1106  002264  2FEC               	decfsz	??_main& (0+255),f,b
  1107  002266  D7FC               	bra	u5507
  1108  002268  D000               	nop2	
  1109                           
  1110                           ;main.c: 50: if (data == readKeyboard()){
  1111  00226A  ECF0  F011         	call	_readKeyboard	;wreg free
  1112  00226E  0101               	movlb	1	; () banked
  1113  002270  1985               	xorwf	main@data& (0+255),w,b
  1114  002272  A4D8               	btfss	status,2,c
  1115  002274  D019               	goto	l5851
  1116                           
  1117                           ; BSR set to: 1
  1118                           ;main.c: 51: boot = data;
  1119  002276  C185  F184         	movff	main@data,main@boot
  1120  00227A                     l5839:
  1121                           
  1122                           ; BSR set to: 1
  1123  00227A  ECF0  F011         	call	_readKeyboard	;wreg free
  1124  00227E  0101               	movlb	1	; () banked
  1125  002280  1985               	xorwf	main@data& (0+255),w,b
  1126  002282  A4D8               	btfss	status,2,c
  1127  002284  D011               	goto	l5851
  1128  002286  D7F9               	goto	l5839
  1129  002288                     l5841:
  1130                           
  1131                           ; BSR set to: 1
  1132                           ;main.c: 63: bootKeypadAndComPort();
  1133  002288  EC77  F015         	call	_bootKeypadAndComPort	;wreg free
  1134                           
  1135                           ;main.c: 64: break;
  1136  00228C  EF53  F000         	goto	start
  1137  002290                     l5843:
  1138                           
  1139                           ;main.c: 66: bootKeypadUART();
  1140  002290  ECAD  F014         	call	_bootKeypadUART	;wreg free
  1141                           
  1142                           ;main.c: 67: break;
  1143  002294  EF53  F000         	goto	start
  1144  002298                     l5845:
  1145                           
  1146                           ;main.c: 69: bootUserCode();
  1147  002298  ECD7  F015         	call	_bootUserCode	;wreg free
  1148                           
  1149                           ;main.c: 70: break;
  1150  00229C  EF53  F000         	goto	start
  1151  0022A0                     l5847:
  1152                           
  1153                           ;main.c: 72: bootKeypadPORTB();
  1154  0022A0  ECD2  F015         	call	_bootKeypadPORTB	;wreg free
  1155                           
  1156                           ;main.c: 74: }
  1157                           
  1158                           ;main.c: 73: break;
  1159  0022A4  EF53  F000         	goto	start
  1160  0022A8                     l5851:
  1161  0022A8  0101               	movlb	1	; () banked
  1162  0022AA  5184               	movf	main@boot& (0+255),w,b
  1163                           
  1164                           ; Switch size 1, requested type "space"
  1165                           ; Number of cases is 3, Range of values is 0 to 2
  1166                           ; switch strategies available:
  1167                           ; Name         Instructions Cycles
  1168                           ; simple_byte           10     6 (average)
  1169                           ;	Chosen strategy is simple_byte
  1170  0022AC  0A00               	xorlw	0	; case 0
  1171  0022AE  B4D8               	btfsc	status,2,c
  1172  0022B0  D7EB               	goto	l5841
  1173  0022B2  0A01               	xorlw	1	; case 1
  1174  0022B4  B4D8               	btfsc	status,2,c
  1175  0022B6  D7EC               	goto	l5843
  1176  0022B8  0A03               	xorlw	3	; case 2
  1177  0022BA  B4D8               	btfsc	status,2,c
  1178  0022BC  D7ED               	goto	l5845
  1179  0022BE  D7F0               	goto	l5847
  1180  0022C0                     __end_of_main:
  1181                           	opt stack 0
  1182                           tblptru	equ	0xFF8
  1183                           tblptrh	equ	0xFF7
  1184                           tblptrl	equ	0xFF6
  1185                           tablat	equ	0xFF5
  1186                           postinc0	equ	0xFEE
  1187                           wreg	equ	0xFE8
  1188                           postdec1	equ	0xFE5
  1189                           fsr1l	equ	0xFE1
  1190                           status	equ	0xFD8
  1191                           
  1192 ;; *************** function _machineConfig *****************
  1193 ;; Defined at:
  1194 ;;		line 3 in file "machineConfig.c"
  1195 ;; Parameters:    Size  Location     Type
  1196 ;;		None
  1197 ;; Auto vars:     Size  Location     Type
  1198 ;;		None
  1199 ;; Return value:  Size  Location     Type
  1200 ;;                  1    wreg      void 
  1201 ;; Registers used:
  1202 ;;		wreg, status,2
  1203 ;; Tracked objects:
  1204 ;;		On entry : 0/0
  1205 ;;		On exit  : 0/0
  1206 ;;		Unchanged: 0/0
  1207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1208 ;;      Params:         0       0       0       0       0       0       0       0       0
  1209 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1210 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1211 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1212 ;;Total ram usage:        0 bytes
  1213 ;; Hardware stack levels used:    1
  1214 ;; Hardware stack levels required when called:   12
  1215 ;; This function calls:
  1216 ;;		Nothing
  1217 ;; This function is called by:
  1218 ;;		_main
  1219 ;; This function uses a non-reentrant model
  1220 ;;
  1221                           
  1222                           	psect	text1
  1223  002A30                     __ptext1:
  1224                           	opt stack 0
  1225  002A30                     _machineConfig:
  1226                           	opt stack 18
  1227                           
  1228                           ;machineConfig.c: 6: OSCCONbits.IRCF = 0b111;
  1229                           
  1230                           ;incstack = 0
  1231  002A30  88D3               	bsf	4051,4,c	;volatile
  1232  002A32  8AD3               	bsf	4051,5,c	;volatile
  1233  002A34  8CD3               	bsf	4051,6,c	;volatile
  1234                           
  1235                           ;machineConfig.c: 7: OSCCONbits.SCS1 = 1;
  1236  002A36  82D3               	bsf	4051,1,c	;volatile
  1237                           
  1238                           ;machineConfig.c: 8: OSCCONbits.SCS0 = 0;
  1239  002A38  90D3               	bcf	4051,0,c	;volatile
  1240                           
  1241                           ;machineConfig.c: 11: TRISA = 0b11011111;
  1242  002A3A  0EDF               	movlw	223
  1243  002A3C  6E92               	movwf	3986,c	;volatile
  1244                           
  1245                           ;machineConfig.c: 13: TRISB = 0b00001111;
  1246  002A3E  0E0F               	movlw	15
  1247  002A40  6E93               	movwf	3987,c	;volatile
  1248                           
  1249                           ;machineConfig.c: 14: TRISC = 0b10000000;
  1250  002A42  0E80               	movlw	128
  1251  002A44  6E94               	movwf	3988,c	;volatile
  1252                           
  1253                           ;machineConfig.c: 17: LATA = 0x00;
  1254  002A46  0E00               	movlw	0
  1255  002A48  6E89               	movwf	3977,c	;volatile
  1256                           
  1257                           ;machineConfig.c: 18: LATB = 0xF0;
  1258  002A4A  0EF0               	movlw	240
  1259  002A4C  6E8A               	movwf	3978,c	;volatile
  1260                           
  1261                           ;machineConfig.c: 19: LATC = 0b10000000;
  1262  002A4E  0E80               	movlw	128
  1263  002A50  6E8B               	movwf	3979,c	;volatile
  1264                           
  1265                           ;machineConfig.c: 22: ADCON1 = 0x0F;
  1266  002A52  0E0F               	movlw	15
  1267  002A54  6EC1               	movwf	4033,c	;volatile
  1268                           
  1269                           ;machineConfig.c: 23: ADCON0bits.ADON = 0;
  1270  002A56  90C2               	bcf	4034,0,c	;volatile
  1271                           
  1272                           ;machineConfig.c: 26: PEIE = 1;
  1273  002A58  8CF2               	bsf	intcon,6,c	;volatile
  1274                           
  1275                           ;machineConfig.c: 27: ADIE = 0;
  1276  002A5A  9C9D               	bcf	3997,6,c	;volatile
  1277                           
  1278                           ;machineConfig.c: 28: RCONbits.IPEN = 0;
  1279  002A5C  9ED0               	bcf	4048,7,c	;volatile
  1280                           
  1281                           ;machineConfig.c: 29: (INTCONbits.GIE = 0);
  1282  002A5E  9EF2               	bcf	intcon,7,c	;volatile
  1283  002A60  0012               	return		;funcret
  1284  002A62                     __end_of_machineConfig:
  1285                           	opt stack 0
  1286                           tblptru	equ	0xFF8
  1287                           tblptrh	equ	0xFF7
  1288                           tblptrl	equ	0xFF6
  1289                           tablat	equ	0xFF5
  1290                           intcon	equ	0xFF2
  1291                           postinc0	equ	0xFEE
  1292                           wreg	equ	0xFE8
  1293                           postdec1	equ	0xFE5
  1294                           fsr1l	equ	0xFE1
  1295                           status	equ	0xFD8
  1296                           
  1297 ;; *************** function _bootUserCode *****************
  1298 ;; Defined at:
  1299 ;;		line 132 in file "main.c"
  1300 ;; Parameters:    Size  Location     Type
  1301 ;;		None
  1302 ;; Auto vars:     Size  Location     Type
  1303 ;;		None
  1304 ;; Return value:  Size  Location     Type
  1305 ;;                  1    wreg      void 
  1306 ;; Registers used:
  1307 ;;		None
  1308 ;; Tracked objects:
  1309 ;;		On entry : 0/0
  1310 ;;		On exit  : 0/0
  1311 ;;		Unchanged: 0/0
  1312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1313 ;;      Params:         0       0       0       0       0       0       0       0       0
  1314 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1315 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1316 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1317 ;;Total ram usage:        0 bytes
  1318 ;; Hardware stack levels used:    1
  1319 ;; Hardware stack levels required when called:   12
  1320 ;; This function calls:
  1321 ;;		Nothing
  1322 ;; This function is called by:
  1323 ;;		_main
  1324 ;; This function uses a non-reentrant model
  1325 ;;
  1326                           
  1327                           	psect	text2
  1328  002BAE                     __ptext2:
  1329                           	opt stack 0
  1330  002BAE                     _bootUserCode:
  1331                           	opt stack 18
  1332  002BAE                     l773:
  1333  002BAE  D7FF               	goto	l773
  1334  002BB0                     __end_of_bootUserCode:
  1335                           	opt stack 0
  1336                           tblptru	equ	0xFF8
  1337                           tblptrh	equ	0xFF7
  1338                           tblptrl	equ	0xFF6
  1339                           tablat	equ	0xFF5
  1340                           intcon	equ	0xFF2
  1341                           postinc0	equ	0xFEE
  1342                           wreg	equ	0xFE8
  1343                           postdec1	equ	0xFE5
  1344                           fsr1l	equ	0xFE1
  1345                           status	equ	0xFD8
  1346                           
  1347 ;; *************** function _bootKeypadUART *****************
  1348 ;; Defined at:
  1349 ;;		line 114 in file "main.c"
  1350 ;; Parameters:    Size  Location     Type
  1351 ;;		None
  1352 ;; Auto vars:     Size  Location     Type
  1353 ;;		None
  1354 ;; Return value:  Size  Location     Type
  1355 ;;                  1    wreg      void 
  1356 ;; Registers used:
  1357 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1358 ;; Tracked objects:
  1359 ;;		On entry : 0/0
  1360 ;;		On exit  : 0/0
  1361 ;;		Unchanged: 0/0
  1362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1363 ;;      Params:         0       0       0       0       0       0       0       0       0
  1364 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1365 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1366 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1367 ;;Total ram usage:        1 bytes
  1368 ;; Hardware stack levels used:    1
  1369 ;; Hardware stack levels required when called:   14
  1370 ;; This function calls:
  1371 ;;		_UART_Init
  1372 ;;		_keypadRoutineUART
  1373 ;; This function is called by:
  1374 ;;		_main
  1375 ;; This function uses a non-reentrant model
  1376 ;;
  1377                           
  1378                           	psect	text3
  1379  00295A                     __ptext3:
  1380                           	opt stack 0
  1381  00295A                     _bootKeypadUART:
  1382                           	opt stack 16
  1383                           
  1384                           ;main.c: 116: UART_Init(9600);
  1385                           
  1386                           ;incstack = 0
  1387  00295A  0E80               	movlw	128
  1388  00295C  0100               	movlb	0	; () banked
  1389  00295E  6FE7               	movwf	UART_Init@baud& (0+255),b
  1390  002960  0E25               	movlw	37
  1391  002962  6FE8               	movwf	(UART_Init@baud+1)& (0+255),b
  1392  002964  0E00               	movlw	0
  1393  002966  6FE9               	movwf	(UART_Init@baud+2)& (0+255),b
  1394  002968  0E00               	movlw	0
  1395  00296A  6FEA               	movwf	(UART_Init@baud+3)& (0+255),b
  1396  00296C  ECAA  F011         	call	_UART_Init	;wreg free
  1397                           
  1398                           ;main.c: 117: TXSTAbits.TXEN = 1; _delay((unsigned long)((5)*(8000000/4000.0)));;
  1399  002970  8AAC               	bsf	4012,5,c	;volatile
  1400  002972  0E0D               	movlw	13
  1401  002974  0100               	movlb	0	; () banked
  1402  002976  6FEB               	movwf	??_bootKeypadUART& (0+255),b
  1403  002978  0EFB               	movlw	251
  1404  00297A                     u5517:
  1405  00297A  2EE8               	decfsz	wreg,f,c
  1406  00297C  D7FE               	bra	u5517
  1407  00297E  2FEB               	decfsz	??_bootKeypadUART& (0+255),f,b
  1408  002980  D7FC               	bra	u5517
  1409  002982  D000               	nop2	
  1410                           
  1411                           ;main.c: 122: TRISA = 0b11101111;
  1412  002984  0EEF               	movlw	239
  1413  002986  6E92               	movwf	3986,c	;volatile
  1414                           
  1415                           ;main.c: 124: LATAbits.LATA4 = 1;
  1416  002988  8889               	bsf	3977,4,c	;volatile
  1417  00298A                     l5801:
  1418                           
  1419                           ;main.c: 127: keypadRoutineUART();
  1420  00298A  EC77  F012         	call	_keypadRoutineUART	;wreg free
  1421  00298E  D7FD               	goto	l5801
  1422  002990                     __end_of_bootKeypadUART:
  1423                           	opt stack 0
  1424                           tblptru	equ	0xFF8
  1425                           tblptrh	equ	0xFF7
  1426                           tblptrl	equ	0xFF6
  1427                           tablat	equ	0xFF5
  1428                           intcon	equ	0xFF2
  1429                           postinc0	equ	0xFEE
  1430                           wreg	equ	0xFE8
  1431                           postdec1	equ	0xFE5
  1432                           fsr1l	equ	0xFE1
  1433                           status	equ	0xFD8
  1434                           
  1435 ;; *************** function _keypadRoutineUART *****************
  1436 ;; Defined at:
  1437 ;;		line 231 in file "Keypad.c"
  1438 ;; Parameters:    Size  Location     Type
  1439 ;;		None
  1440 ;; Auto vars:     Size  Location     Type
  1441 ;;		None
  1442 ;; Return value:  Size  Location     Type
  1443 ;;                  1    wreg      void 
  1444 ;; Registers used:
  1445 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1446 ;; Tracked objects:
  1447 ;;		On entry : 0/0
  1448 ;;		On exit  : 0/0
  1449 ;;		Unchanged: 0/0
  1450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1451 ;;      Params:         0       0       0       0       0       0       0       0       0
  1452 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1453 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1454 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1455 ;;Total ram usage:        1 bytes
  1456 ;; Hardware stack levels used:    1
  1457 ;; Hardware stack levels required when called:   13
  1458 ;; This function calls:
  1459 ;;		_readKeyboard
  1460 ;;		_uartTransmitBlocking
  1461 ;; This function is called by:
  1462 ;;		_bootKeypadUART
  1463 ;; This function uses a non-reentrant model
  1464 ;;
  1465                           
  1466                           	psect	text4
  1467  0024EE                     __ptext4:
  1468                           	opt stack 0
  1469  0024EE                     _keypadRoutineUART:
  1470                           	opt stack 16
  1471                           
  1472                           ;Keypad.c: 246: else{
  1473                           ;Keypad.c: 248: dataOut = readKeyboard();
  1474                           
  1475                           ;Keypad.c: 243: }
  1476                           
  1477                           ;Keypad.c: 242: while(0){ continue; }
  1478                           
  1479                           ;Keypad.c: 240: if(0){
  1480                           
  1481                           ;incstack = 0
  1482  0024EE  ECF0  F011         	call	_readKeyboard	;wreg free
  1483  0024F2  6E51               	movwf	Keypad@dataOut,c
  1484                           
  1485                           ;Keypad.c: 251: if (dataOut != 0xF0){
  1486  0024F4  0EF0               	movlw	240
  1487  0024F6  1851               	xorwf	Keypad@dataOut,w,c
  1488  0024F8  B4D8               	btfsc	status,2,c
  1489  0024FA  0012               	return	
  1490                           
  1491                           ;Keypad.c: 255: _delay((unsigned long)((20)*(8000000/4000.0)));
  1492  0024FC  0E34               	movlw	52
  1493  0024FE  0100               	movlb	0	; () banked
  1494  002500  6FDE               	movwf	??_keypadRoutineUART& (0+255),b
  1495  002502  0EF1               	movlw	241
  1496  002504                     u5527:
  1497  002504  2EE8               	decfsz	wreg,f,c
  1498  002506  D7FE               	bra	u5527
  1499  002508  2FDE               	decfsz	??_keypadRoutineUART& (0+255),f,b
  1500  00250A  D7FC               	bra	u5527
  1501  00250C  D000               	nop2	
  1502                           
  1503                           ;Keypad.c: 257: if (dataOut == readKeyboard()){
  1504  00250E  ECF0  F011         	call	_readKeyboard	;wreg free
  1505  002512  1851               	xorwf	Keypad@dataOut,w,c
  1506  002514  A4D8               	btfss	status,2,c
  1507  002516  0012               	return	
  1508                           
  1509                           ;Keypad.c: 259: uartTransmitBlocking(&dataOut, 1);
  1510  002518  0E51               	movlw	low Keypad@dataOut
  1511  00251A  0100               	movlb	0	; () banked
  1512  00251C  6FD9               	movwf	uartTransmitBlocking@data& (0+255),b
  1513  00251E  0E00               	movlw	high Keypad@dataOut
  1514  002520  0100               	movlb	0	; () banked
  1515  002522  6FDA               	movwf	(uartTransmitBlocking@data+1)& (0+255),b
  1516  002524  0E01               	movlw	1
  1517  002526  0100               	movlb	0	; () banked
  1518  002528  6FDB               	movwf	uartTransmitBlocking@numBytes& (0+255),b
  1519  00252A  ECD2  F00F         	call	_uartTransmitBlocking	;wreg free
  1520                           
  1521                           ;Keypad.c: 262: while (dataOut == readKeyboard()){
  1522  00252E  D00B               	goto	l5755
  1523  002530                     l5751:
  1524                           
  1525                           ;Keypad.c: 263: uartTransmitBlocking(&dataOut, 1);
  1526  002530  0E51               	movlw	low Keypad@dataOut
  1527  002532  0100               	movlb	0	; () banked
  1528  002534  6FD9               	movwf	uartTransmitBlocking@data& (0+255),b
  1529  002536  0E00               	movlw	high Keypad@dataOut
  1530  002538  0100               	movlb	0	; () banked
  1531  00253A  6FDA               	movwf	(uartTransmitBlocking@data+1)& (0+255),b
  1532  00253C  0E01               	movlw	1
  1533  00253E  0100               	movlb	0	; () banked
  1534  002540  6FDB               	movwf	uartTransmitBlocking@numBytes& (0+255),b
  1535  002542  ECD2  F00F         	call	_uartTransmitBlocking	;wreg free
  1536  002546                     l5755:
  1537  002546  ECF0  F011         	call	_readKeyboard	;wreg free
  1538  00254A  1851               	xorwf	Keypad@dataOut,w,c
  1539  00254C  B4D8               	btfsc	status,2,c
  1540  00254E  D7F0               	goto	l5751
  1541                           
  1542                           ;Keypad.c: 275: }
  1543                           ;Keypad.c: 276: }
  1544                           ;Keypad.c: 279: uartTransmitBlocking(&dataEnd, 1);
  1545  002550  0E57               	movlw	low Keypad@dataEnd
  1546  002552  0100               	movlb	0	; () banked
  1547  002554  6FD9               	movwf	uartTransmitBlocking@data& (0+255),b
  1548  002556  0E00               	movlw	high Keypad@dataEnd
  1549  002558  0100               	movlb	0	; () banked
  1550  00255A  6FDA               	movwf	(uartTransmitBlocking@data+1)& (0+255),b
  1551  00255C  0E01               	movlw	1
  1552  00255E  0100               	movlb	0	; () banked
  1553  002560  6FDB               	movwf	uartTransmitBlocking@numBytes& (0+255),b
  1554  002562  ECD2  F00F         	call	_uartTransmitBlocking	;wreg free
  1555  002566  0012               	return	
  1556  002568                     __end_of_keypadRoutineUART:
  1557                           	opt stack 0
  1558                           tblptru	equ	0xFF8
  1559                           tblptrh	equ	0xFF7
  1560                           tblptrl	equ	0xFF6
  1561                           tablat	equ	0xFF5
  1562                           intcon	equ	0xFF2
  1563                           postinc0	equ	0xFEE
  1564                           wreg	equ	0xFE8
  1565                           postdec1	equ	0xFE5
  1566                           fsr1l	equ	0xFE1
  1567                           status	equ	0xFD8
  1568                           
  1569 ;; *************** function _uartTransmitBlocking *****************
  1570 ;; Defined at:
  1571 ;;		line 22 in file "UART_PIC.c"
  1572 ;; Parameters:    Size  Location     Type
  1573 ;;  data            2   17[BANK0 ] PTR unsigned char 
  1574 ;;		 -> Keypad@dataEnd(1), Keypad@dataOut(1), 
  1575 ;;  numBytes        1   19[BANK0 ] unsigned char 
  1576 ;; Auto vars:     Size  Location     Type
  1577 ;;  numTransmits    1   21[BANK0 ] unsigned char 
  1578 ;; Return value:  Size  Location     Type
  1579 ;;                  1    wreg      void 
  1580 ;; Registers used:
  1581 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1582 ;; Tracked objects:
  1583 ;;		On entry : 0/0
  1584 ;;		On exit  : 0/0
  1585 ;;		Unchanged: 0/0
  1586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1587 ;;      Params:         0       3       0       0       0       0       0       0       0
  1588 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1589 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1590 ;;      Totals:         0       5       0       0       0       0       0       0       0
  1591 ;;Total ram usage:        5 bytes
  1592 ;; Hardware stack levels used:    1
  1593 ;; Hardware stack levels required when called:   12
  1594 ;; This function calls:
  1595 ;;		Nothing
  1596 ;; This function is called by:
  1597 ;;		_keypadRoutineUART
  1598 ;; This function uses a non-reentrant model
  1599 ;;
  1600                           
  1601                           	psect	text5
  1602  001FA4                     __ptext5:
  1603                           	opt stack 0
  1604  001FA4                     _uartTransmitBlocking:
  1605                           	opt stack 16
  1606  001FA4                     l5437:
  1607  001FA4  EE20 F008          	lfsr	2,8
  1608  001FA8  5054               	movf	_UART,w,c
  1609  001FAA  26D9               	addwf	fsr2l,f,c
  1610  001FAC  5055               	movf	_UART+1,w,c
  1611  001FAE  22DA               	addwfc	fsr2h,f,c
  1612  001FB0  50DF               	movf	indf2,w,c
  1613  001FB2  B4D8               	btfsc	status,2,c
  1614  001FB4  D7F7               	goto	l5437
  1615                           
  1616                           ;UART_PIC.c: 39: UART -> _stateTX = UART_STATE_BUSY;
  1617  001FB6  EE20 F008          	lfsr	2,8
  1618  001FBA  5054               	movf	_UART,w,c
  1619  001FBC  26D9               	addwf	fsr2l,f,c
  1620  001FBE  5055               	movf	_UART+1,w,c
  1621  001FC0  22DA               	addwfc	fsr2h,f,c
  1622  001FC2  0E00               	movlw	0
  1623  001FC4  6EDF               	movwf	indf2,c
  1624                           
  1625                           ;UART_PIC.c: 42: unsigned char numTransmits = 0;
  1626  001FC6  0E00               	movlw	0
  1627  001FC8  0100               	movlb	0	; () banked
  1628  001FCA  6FDD               	movwf	uartTransmitBlocking@numTransmits& (0+255),b
  1629                           
  1630                           ; BSR set to: 0
  1631                           ;UART_PIC.c: 45: TXSTAbits.TXEN = 1; _delay((unsigned long)((5)*(8000000/4000.0)));;
  1632  001FCC  8AAC               	bsf	4012,5,c	;volatile
  1633                           
  1634                           ; BSR set to: 0
  1635  001FCE  0E0D               	movlw	13
  1636  001FD0  0100               	movlb	0	; () banked
  1637  001FD2  6FDC               	movwf	??_uartTransmitBlocking& (0+255),b
  1638  001FD4  0EFB               	movlw	251
  1639  001FD6                     u5537:
  1640  001FD6  2EE8               	decfsz	wreg,f,c
  1641  001FD8  D7FE               	bra	u5537
  1642  001FDA  2FDC               	decfsz	??_uartTransmitBlocking& (0+255),f,b
  1643  001FDC  D7FC               	bra	u5537
  1644  001FDE  D000               	nop2	
  1645                           
  1646                           ;UART_PIC.c: 48: while(numTransmits < numBytes){
  1647  001FE0  D029               	goto	l5459
  1648  001FE2                     l5447:
  1649  001FE2  B2AC               	btfsc	4012,1,c	;volatile
  1650  001FE4  D002               	goto	u5040
  1651  001FE6  0E01               	movlw	1
  1652  001FE8  D001               	goto	u5042
  1653  001FEA                     u5040:
  1654  001FEA  0E00               	movlw	0
  1655  001FEC                     u5042:
  1656  001FEC  0100               	movlb	0	; () banked
  1657  001FEE  6FDC               	movwf	??_uartTransmitBlocking& (0+255),b
  1658  001FF0  B89E               	btfsc	3998,4,c	;volatile
  1659  001FF2  D002               	goto	u5050
  1660  001FF4  0E01               	movlw	1
  1661  001FF6  D001               	goto	u5052
  1662  001FF8                     u5050:
  1663  001FF8  0E00               	movlw	0
  1664  001FFA                     u5052:
  1665  001FFA  0100               	movlb	0	; () banked
  1666  001FFC  11DC               	iorwf	??_uartTransmitBlocking& (0+255),w,b
  1667  001FFE  E1F1               	bnz	l5447
  1668                           
  1669                           ; BSR set to: 0
  1670                           ;UART_PIC.c: 53: __nop();
  1671  002000  F000               	nop	
  1672                           
  1673                           ;UART_PIC.c: 56: UARTinterruptState = INTCONbits.GIE;
  1674  002002  0E00               	movlw	0
  1675  002004  BEF2               	btfsc	intcon,7,c	;volatile
  1676  002006  0E01               	movlw	1
  1677  002008  6E3A               	movwf	_UARTinterruptState,c	;volatile
  1678                           
  1679                           ;UART_PIC.c: 57: (INTCONbits.GIE = 0);
  1680  00200A  9EF2               	bcf	intcon,7,c	;volatile
  1681                           
  1682                           ;UART_PIC.c: 58: TXREG = data[numTransmits];
  1683  00200C  0100               	movlb	0	; () banked
  1684  00200E  51DD               	movf	uartTransmitBlocking@numTransmits& (0+255),w,b
  1685  002010  0D01               	mullw	1
  1686  002012  50F3               	movf	prodl,w,c
  1687  002014  0100               	movlb	0	; () banked
  1688  002016  25D9               	addwf	uartTransmitBlocking@data& (0+255),w,b
  1689  002018  6ED9               	movwf	fsr2l,c
  1690  00201A  50F4               	movf	prodh,w,c
  1691  00201C  0100               	movlb	0	; () banked
  1692  00201E  21DA               	addwfc	(uartTransmitBlocking@data+1)& (0+255),w,b
  1693  002020  6EDA               	movwf	fsr2h,c
  1694  002022  50DF               	movf	indf2,w,c
  1695  002024  6EAD               	movwf	4013,c	;volatile
  1696                           
  1697                           ; BSR set to: 0
  1698                           ;UART_PIC.c: 59: INTCONbits.GIE = UARTinterruptState;
  1699  002026  B03A               	btfsc	_UARTinterruptState,0,c	;volatile
  1700  002028  D002               	bra	u5065
  1701  00202A  9EF2               	bcf	intcon,7,c	;volatile
  1702  00202C  D001               	bra	u5066
  1703  00202E                     u5065:
  1704  00202E  8EF2               	bsf	intcon,7,c	;volatile
  1705  002030                     u5066:
  1706                           
  1707                           ;UART_PIC.c: 61: numTransmits++;
  1708  002030  0100               	movlb	0	; () banked
  1709  002032  2BDD               	incf	uartTransmitBlocking@numTransmits& (0+255),f,b
  1710  002034                     l5459:
  1711  002034  0100               	movlb	0	; () banked
  1712  002036  51DB               	movf	uartTransmitBlocking@numBytes& (0+255),w,b
  1713  002038  0100               	movlb	0	; () banked
  1714  00203A  5DDD               	subwf	uartTransmitBlocking@numTransmits& (0+255),w,b
  1715  00203C  A0D8               	btfss	status,0,c
  1716  00203E  D7D1               	goto	l5447
  1717                           
  1718                           ; BSR set to: 0
  1719                           ;UART_PIC.c: 65: }
  1720                           ;UART_PIC.c: 68: UART -> _stateTX = UART_STATE_READY;
  1721                           
  1722                           ; BSR set to: 0
  1723  002040  EE20 F008          	lfsr	2,8
  1724  002044  5054               	movf	_UART,w,c
  1725  002046  26D9               	addwf	fsr2l,f,c
  1726  002048  5055               	movf	_UART+1,w,c
  1727  00204A  22DA               	addwfc	fsr2h,f,c
  1728  00204C  0E01               	movlw	1
  1729  00204E  6EDF               	movwf	indf2,c
  1730                           
  1731                           ; BSR set to: 0
  1732  002050  0012               	return		;funcret
  1733  002052                     __end_of_uartTransmitBlocking:
  1734                           	opt stack 0
  1735                           tblptru	equ	0xFF8
  1736                           tblptrh	equ	0xFF7
  1737                           tblptrl	equ	0xFF6
  1738                           tablat	equ	0xFF5
  1739                           prodh	equ	0xFF4
  1740                           prodl	equ	0xFF3
  1741                           intcon	equ	0xFF2
  1742                           postinc0	equ	0xFEE
  1743                           wreg	equ	0xFE8
  1744                           postdec1	equ	0xFE5
  1745                           fsr1l	equ	0xFE1
  1746                           indf2	equ	0xFDF
  1747                           fsr2h	equ	0xFDA
  1748                           fsr2l	equ	0xFD9
  1749                           status	equ	0xFD8
  1750                           
  1751 ;; *************** function _UART_Init *****************
  1752 ;; Defined at:
  1753 ;;		line 137 in file "UART_PIC.c"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;  baud            4   31[BANK0 ] long 
  1756 ;; Auto vars:     Size  Location     Type
  1757 ;;		None
  1758 ;; Return value:  Size  Location     Type
  1759 ;;                  1    wreg      void 
  1760 ;; Registers used:
  1761 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1762 ;; Tracked objects:
  1763 ;;		On entry : 0/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1767 ;;      Params:         0       4       0       0       0       0       0       0       0
  1768 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1769 ;;      Temps:          0       0       4       0       0       0       0       0       0
  1770 ;;      Totals:         0       4       4       0       0       0       0       0       0
  1771 ;;Total ram usage:        8 bytes
  1772 ;; Hardware stack levels used:    1
  1773 ;; Hardware stack levels required when called:   13
  1774 ;; This function calls:
  1775 ;;		___aldiv
  1776 ;; This function is called by:
  1777 ;;		_bootKeypadUART
  1778 ;; This function uses a non-reentrant model
  1779 ;;
  1780                           
  1781                           	psect	text6
  1782  002354                     __ptext6:
  1783                           	opt stack 0
  1784  002354                     _UART_Init:
  1785                           	opt stack 16
  1786                           
  1787                           ;UART_PIC.c: 150: SPBRG = (unsigned char)((8000000 / (64 * baud)) - 1);
  1788                           
  1789                           ; BSR set to: 0
  1790                           ;incstack = 0
  1791  002354  0E00               	movlw	0
  1792  002356  0100               	movlb	0	; () banked
  1793  002358  6FD9               	movwf	___aldiv@dividend& (0+255),b
  1794  00235A  0E12               	movlw	18
  1795  00235C  6FDA               	movwf	(___aldiv@dividend+1)& (0+255),b
  1796  00235E  0E7A               	movlw	122
  1797  002360  6FDB               	movwf	(___aldiv@dividend+2)& (0+255),b
  1798  002362  0E00               	movlw	0
  1799  002364  6FDC               	movwf	(___aldiv@dividend+3)& (0+255),b
  1800  002366  C0E7  F180         	movff	UART_Init@baud,??_UART_Init
  1801  00236A  C0E8  F181         	movff	UART_Init@baud+1,??_UART_Init+1
  1802  00236E  C0E9  F182         	movff	UART_Init@baud+2,??_UART_Init+2
  1803  002372  C0EA  F183         	movff	UART_Init@baud+3,??_UART_Init+3
  1804  002376  0E06               	movlw	6
  1805  002378                     u5405:
  1806  002378  90D8               	bcf	status,0,c
  1807  00237A  0101               	movlb	1	; () banked
  1808  00237C  3780               	rlcf	??_UART_Init& (0+255),f,b
  1809  00237E  3781               	rlcf	(??_UART_Init+1)& (0+255),f,b
  1810  002380  3782               	rlcf	(??_UART_Init+2)& (0+255),f,b
  1811  002382  3783               	rlcf	(??_UART_Init+3)& (0+255),f,b
  1812  002384  2EE8               	decfsz	wreg,f,c
  1813  002386  D7F8               	goto	u5405
  1814  002388  C180  F0DD         	movff	??_UART_Init,___aldiv@divisor
  1815  00238C  C181  F0DE         	movff	??_UART_Init+1,___aldiv@divisor+1
  1816  002390  C182  F0DF         	movff	??_UART_Init+2,___aldiv@divisor+2
  1817  002394  C183  F0E0         	movff	??_UART_Init+3,___aldiv@divisor+3
  1818  002398  EC1E  F00A         	call	___aldiv	;wreg free
  1819  00239C  0100               	movlb	0	; () banked
  1820  00239E  05D9               	decf	?___aldiv& (0+255),w,b
  1821  0023A0  6EAF               	movwf	4015,c	;volatile
  1822                           
  1823                           ; BSR set to: 0
  1824                           ;UART_PIC.c: 153: TXSTAbits.TX9 = 0;
  1825  0023A2  9CAC               	bcf	4012,6,c	;volatile
  1826                           
  1827                           ; BSR set to: 0
  1828                           ;UART_PIC.c: 154: TXSTAbits.SYNC = 0;
  1829  0023A4  98AC               	bcf	4012,4,c	;volatile
  1830                           
  1831                           ; BSR set to: 0
  1832                           ;UART_PIC.c: 155: TXSTAbits.TXEN = 1;
  1833  0023A6  8AAC               	bsf	4012,5,c	;volatile
  1834                           
  1835                           ; BSR set to: 0
  1836                           ;UART_PIC.c: 158: RCSTAbits.RX9 = 0;
  1837  0023A8  9CAB               	bcf	4011,6,c	;volatile
  1838                           
  1839                           ; BSR set to: 0
  1840                           ;UART_PIC.c: 159: RCSTAbits.CREN = 1;
  1841  0023AA  88AB               	bsf	4011,4,c	;volatile
  1842                           
  1843                           ; BSR set to: 0
  1844                           ;UART_PIC.c: 162: UART -> _stateTX = UART_STATE_READY;
  1845  0023AC  EE20 F008          	lfsr	2,8
  1846  0023B0  5054               	movf	_UART,w,c
  1847  0023B2  26D9               	addwf	fsr2l,f,c
  1848  0023B4  5055               	movf	_UART+1,w,c
  1849  0023B6  22DA               	addwfc	fsr2h,f,c
  1850  0023B8  0E01               	movlw	1
  1851  0023BA  6EDF               	movwf	indf2,c
  1852                           
  1853                           ; BSR set to: 0
  1854                           ;UART_PIC.c: 163: UART -> _stateRX = UART_STATE_READY;
  1855  0023BC  EE20 F009          	lfsr	2,9
  1856  0023C0  5054               	movf	_UART,w,c
  1857  0023C2  26D9               	addwf	fsr2l,f,c
  1858  0023C4  5055               	movf	_UART+1,w,c
  1859  0023C6  22DA               	addwfc	fsr2h,f,c
  1860  0023C8  0E01               	movlw	1
  1861  0023CA  6EDF               	movwf	indf2,c
  1862                           
  1863                           ; BSR set to: 0
  1864                           ;UART_PIC.c: 166: uart._dataRX = arr_dataRX;
  1865  0023CC  0E93               	movlw	low _arr_dataRX
  1866  0023CE  0100               	movlb	0	; () banked
  1867  0023D0  6FA7               	movwf	(_uart+4)& (0+255),b	;volatile
  1868  0023D2  0E00               	movlw	high _arr_dataRX
  1869  0023D4  0100               	movlb	0	; () banked
  1870  0023D6  6FA8               	movwf	(_uart+5)& (0+255),b	;volatile
  1871                           
  1872                           ; BSR set to: 0
  1873                           ;UART_PIC.c: 169: TRISC6 = 0;
  1874  0023D8  9C94               	bcf	3988,6,c	;volatile
  1875                           
  1876                           ; BSR set to: 0
  1877                           ;UART_PIC.c: 170: TRISC7 = 1;
  1878  0023DA  8E94               	bsf	3988,7,c	;volatile
  1879                           
  1880                           ; BSR set to: 0
  1881                           ;UART_PIC.c: 173: RCSTAbits.SPEN = 1;
  1882  0023DC  8EAB               	bsf	4011,7,c	;volatile
  1883                           
  1884                           ; BSR set to: 0
  1885  0023DE  0012               	return		;funcret
  1886  0023E0                     __end_of_UART_Init:
  1887                           	opt stack 0
  1888                           tblptru	equ	0xFF8
  1889                           tblptrh	equ	0xFF7
  1890                           tblptrl	equ	0xFF6
  1891                           tablat	equ	0xFF5
  1892                           prodh	equ	0xFF4
  1893                           prodl	equ	0xFF3
  1894                           intcon	equ	0xFF2
  1895                           postinc0	equ	0xFEE
  1896                           wreg	equ	0xFE8
  1897                           postdec1	equ	0xFE5
  1898                           fsr1l	equ	0xFE1
  1899                           indf2	equ	0xFDF
  1900                           fsr2h	equ	0xFDA
  1901                           fsr2l	equ	0xFD9
  1902                           status	equ	0xFD8
  1903                           
  1904 ;; *************** function ___aldiv *****************
  1905 ;; Defined at:
  1906 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\aldiv.c"
  1907 ;; Parameters:    Size  Location     Type
  1908 ;;  dividend        4   17[BANK0 ] long 
  1909 ;;  divisor         4   21[BANK0 ] long 
  1910 ;; Auto vars:     Size  Location     Type
  1911 ;;  quotient        4   27[BANK0 ] long 
  1912 ;;  sign            1   26[BANK0 ] unsigned char 
  1913 ;;  counter         1   25[BANK0 ] unsigned char 
  1914 ;; Return value:  Size  Location     Type
  1915 ;;                  4   17[BANK0 ] long 
  1916 ;; Registers used:
  1917 ;;		wreg, status,2, status,0
  1918 ;; Tracked objects:
  1919 ;;		On entry : 0/0
  1920 ;;		On exit  : 0/0
  1921 ;;		Unchanged: 0/0
  1922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1923 ;;      Params:         0       8       0       0       0       0       0       0       0
  1924 ;;      Locals:         0       6       0       0       0       0       0       0       0
  1925 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1926 ;;      Totals:         0      14       0       0       0       0       0       0       0
  1927 ;;Total ram usage:       14 bytes
  1928 ;; Hardware stack levels used:    1
  1929 ;; Hardware stack levels required when called:   12
  1930 ;; This function calls:
  1931 ;;		Nothing
  1932 ;; This function is called by:
  1933 ;;		_UART_Init
  1934 ;; This function uses a non-reentrant model
  1935 ;;
  1936                           
  1937                           	psect	text7
  1938  00143C                     __ptext7:
  1939                           	opt stack 0
  1940  00143C                     ___aldiv:
  1941                           	opt stack 16
  1942                           
  1943                           ; BSR set to: 0
  1944                           ;incstack = 0
  1945  00143C  0E00               	movlw	0
  1946  00143E  0100               	movlb	0	; () banked
  1947  001440  6FE2               	movwf	___aldiv@sign& (0+255),b
  1948                           
  1949                           ; BSR set to: 0
  1950  001442  0100               	movlb	0	; () banked
  1951  001444  AFE0               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  1952  001446  D00C               	goto	l5471
  1953                           
  1954                           ; BSR set to: 0
  1955  001448  0100               	movlb	0	; () banked
  1956  00144A  1FE0               	comf	(___aldiv@divisor+3)& (0+255),f,b
  1957  00144C  1FDF               	comf	(___aldiv@divisor+2)& (0+255),f,b
  1958  00144E  1FDE               	comf	(___aldiv@divisor+1)& (0+255),f,b
  1959  001450  6DDD               	negf	___aldiv@divisor& (0+255),b
  1960  001452  0E00               	movlw	0
  1961  001454  23DE               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  1962  001456  23DF               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  1963  001458  23E0               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  1964                           
  1965                           ; BSR set to: 0
  1966  00145A  0E01               	movlw	1
  1967  00145C  0100               	movlb	0	; () banked
  1968  00145E  6FE2               	movwf	___aldiv@sign& (0+255),b
  1969  001460                     l5471:
  1970                           
  1971                           ; BSR set to: 0
  1972  001460  0100               	movlb	0	; () banked
  1973  001462  AFDC               	btfss	(___aldiv@dividend+3)& (0+255),7,b
  1974  001464  D00C               	goto	l5477
  1975                           
  1976                           ; BSR set to: 0
  1977  001466  0100               	movlb	0	; () banked
  1978  001468  1FDC               	comf	(___aldiv@dividend+3)& (0+255),f,b
  1979  00146A  1FDB               	comf	(___aldiv@dividend+2)& (0+255),f,b
  1980  00146C  1FDA               	comf	(___aldiv@dividend+1)& (0+255),f,b
  1981  00146E  6DD9               	negf	___aldiv@dividend& (0+255),b
  1982  001470  0E00               	movlw	0
  1983  001472  23DA               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  1984  001474  23DB               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  1985  001476  23DC               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  1986                           
  1987                           ; BSR set to: 0
  1988  001478  0E01               	movlw	1
  1989  00147A  0100               	movlb	0	; () banked
  1990  00147C  1BE2               	xorwf	___aldiv@sign& (0+255),f,b
  1991  00147E                     l5477:
  1992                           
  1993                           ; BSR set to: 0
  1994  00147E  0E00               	movlw	0
  1995  001480  0100               	movlb	0	; () banked
  1996  001482  6FE3               	movwf	___aldiv@quotient& (0+255),b
  1997  001484  0E00               	movlw	0
  1998  001486  6FE4               	movwf	(___aldiv@quotient+1)& (0+255),b
  1999  001488  0E00               	movlw	0
  2000  00148A  6FE5               	movwf	(___aldiv@quotient+2)& (0+255),b
  2001  00148C  0E00               	movlw	0
  2002  00148E  6FE6               	movwf	(___aldiv@quotient+3)& (0+255),b
  2003                           
  2004                           ; BSR set to: 0
  2005  001490  0100               	movlb	0	; () banked
  2006  001492  51DD               	movf	___aldiv@divisor& (0+255),w,b
  2007  001494  0100               	movlb	0	; () banked
  2008  001496  11DE               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  2009  001498  0100               	movlb	0	; () banked
  2010  00149A  11DF               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  2011  00149C  0100               	movlb	0	; () banked
  2012  00149E  11E0               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
  2013  0014A0  B4D8               	btfsc	status,2,c
  2014  0014A2  D042               	goto	l5499
  2015                           
  2016                           ; BSR set to: 0
  2017  0014A4  0E01               	movlw	1
  2018  0014A6  0100               	movlb	0	; () banked
  2019  0014A8  6FE1               	movwf	___aldiv@counter& (0+255),b
  2020  0014AA  D008               	goto	l5485
  2021  0014AC                     l5483:
  2022                           
  2023                           ; BSR set to: 0
  2024  0014AC  0100               	movlb	0	; () banked
  2025  0014AE  90D8               	bcf	status,0,c
  2026  0014B0  37DD               	rlcf	___aldiv@divisor& (0+255),f,b
  2027  0014B2  37DE               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  2028  0014B4  37DF               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  2029  0014B6  37E0               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  2030  0014B8  0100               	movlb	0	; () banked
  2031  0014BA  2BE1               	incf	___aldiv@counter& (0+255),f,b
  2032  0014BC                     l5485:
  2033                           
  2034                           ; BSR set to: 0
  2035  0014BC  0100               	movlb	0	; () banked
  2036  0014BE  AFE0               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  2037  0014C0  D7F5               	goto	l5483
  2038  0014C2                     l5487:
  2039                           
  2040                           ; BSR set to: 0
  2041  0014C2  0100               	movlb	0	; () banked
  2042  0014C4  90D8               	bcf	status,0,c
  2043  0014C6  37E3               	rlcf	___aldiv@quotient& (0+255),f,b
  2044  0014C8  37E4               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  2045  0014CA  37E5               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  2046  0014CC  37E6               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  2047                           
  2048                           ; BSR set to: 0
  2049  0014CE  0100               	movlb	0	; () banked
  2050  0014D0  51DD               	movf	___aldiv@divisor& (0+255),w,b
  2051  0014D2  0100               	movlb	0	; () banked
  2052  0014D4  5DD9               	subwf	___aldiv@dividend& (0+255),w,b
  2053  0014D6  0100               	movlb	0	; () banked
  2054  0014D8  51DE               	movf	(___aldiv@divisor+1)& (0+255),w,b
  2055  0014DA  0100               	movlb	0	; () banked
  2056  0014DC  59DA               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  2057  0014DE  0100               	movlb	0	; () banked
  2058  0014E0  51DF               	movf	(___aldiv@divisor+2)& (0+255),w,b
  2059  0014E2  0100               	movlb	0	; () banked
  2060  0014E4  59DB               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  2061  0014E6  0100               	movlb	0	; () banked
  2062  0014E8  51E0               	movf	(___aldiv@divisor+3)& (0+255),w,b
  2063  0014EA  0100               	movlb	0	; () banked
  2064  0014EC  59DC               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  2065  0014EE  A0D8               	btfss	status,0,c
  2066  0014F0  D012               	goto	l5495
  2067                           
  2068                           ; BSR set to: 0
  2069  0014F2  0100               	movlb	0	; () banked
  2070  0014F4  51DD               	movf	___aldiv@divisor& (0+255),w,b
  2071  0014F6  0100               	movlb	0	; () banked
  2072  0014F8  5FD9               	subwf	___aldiv@dividend& (0+255),f,b
  2073  0014FA  0100               	movlb	0	; () banked
  2074  0014FC  51DE               	movf	(___aldiv@divisor+1)& (0+255),w,b
  2075  0014FE  0100               	movlb	0	; () banked
  2076  001500  5BDA               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  2077  001502  0100               	movlb	0	; () banked
  2078  001504  51DF               	movf	(___aldiv@divisor+2)& (0+255),w,b
  2079  001506  0100               	movlb	0	; () banked
  2080  001508  5BDB               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  2081  00150A  0100               	movlb	0	; () banked
  2082  00150C  51E0               	movf	(___aldiv@divisor+3)& (0+255),w,b
  2083  00150E  0100               	movlb	0	; () banked
  2084  001510  5BDC               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  2085                           
  2086                           ; BSR set to: 0
  2087  001512  0100               	movlb	0	; () banked
  2088  001514  81E3               	bsf	___aldiv@quotient& (0+255),0,b
  2089  001516                     l5495:
  2090                           
  2091                           ; BSR set to: 0
  2092  001516  0100               	movlb	0	; () banked
  2093  001518  90D8               	bcf	status,0,c
  2094  00151A  33E0               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  2095  00151C  33DF               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  2096  00151E  33DE               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  2097  001520  33DD               	rrcf	___aldiv@divisor& (0+255),f,b
  2098                           
  2099                           ; BSR set to: 0
  2100  001522  0100               	movlb	0	; () banked
  2101  001524  2FE1               	decfsz	___aldiv@counter& (0+255),f,b
  2102  001526  D7CD               	goto	l5487
  2103  001528                     l5499:
  2104                           
  2105                           ; BSR set to: 0
  2106  001528  0100               	movlb	0	; () banked
  2107  00152A  51E2               	movf	___aldiv@sign& (0+255),w,b
  2108  00152C  0100               	movlb	0	; () banked
  2109  00152E  B4D8               	btfsc	status,2,c
  2110  001530  D009               	goto	l5503
  2111                           
  2112                           ; BSR set to: 0
  2113  001532  0100               	movlb	0	; () banked
  2114  001534  1FE6               	comf	(___aldiv@quotient+3)& (0+255),f,b
  2115  001536  1FE5               	comf	(___aldiv@quotient+2)& (0+255),f,b
  2116  001538  1FE4               	comf	(___aldiv@quotient+1)& (0+255),f,b
  2117  00153A  6DE3               	negf	___aldiv@quotient& (0+255),b
  2118  00153C  0E00               	movlw	0
  2119  00153E  23E4               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  2120  001540  23E5               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  2121  001542  23E6               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  2122  001544                     l5503:
  2123                           
  2124                           ; BSR set to: 0
  2125  001544  C0E3  F0D9         	movff	___aldiv@quotient,?___aldiv
  2126  001548  C0E4  F0DA         	movff	___aldiv@quotient+1,?___aldiv+1
  2127  00154C  C0E5  F0DB         	movff	___aldiv@quotient+2,?___aldiv+2
  2128  001550  C0E6  F0DC         	movff	___aldiv@quotient+3,?___aldiv+3
  2129  001554  0012               	return	
  2130  001556                     __end_of___aldiv:
  2131                           	opt stack 0
  2132                           tblptru	equ	0xFF8
  2133                           tblptrh	equ	0xFF7
  2134                           tblptrl	equ	0xFF6
  2135                           tablat	equ	0xFF5
  2136                           prodh	equ	0xFF4
  2137                           prodl	equ	0xFF3
  2138                           intcon	equ	0xFF2
  2139                           postinc0	equ	0xFEE
  2140                           wreg	equ	0xFE8
  2141                           postdec1	equ	0xFE5
  2142                           fsr1l	equ	0xFE1
  2143                           indf2	equ	0xFDF
  2144                           fsr2h	equ	0xFDA
  2145                           fsr2l	equ	0xFD9
  2146                           status	equ	0xFD8
  2147                           
  2148 ;; *************** function _bootKeypadPORTB *****************
  2149 ;; Defined at:
  2150 ;;		line 81 in file "main.c"
  2151 ;; Parameters:    Size  Location     Type
  2152 ;;		None
  2153 ;; Auto vars:     Size  Location     Type
  2154 ;;		None
  2155 ;; Return value:  Size  Location     Type
  2156 ;;                  1    wreg      void 
  2157 ;; Registers used:
  2158 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2159 ;; Tracked objects:
  2160 ;;		On entry : 0/0
  2161 ;;		On exit  : 0/0
  2162 ;;		Unchanged: 0/0
  2163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2164 ;;      Params:         0       0       0       0       0       0       0       0       0
  2165 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2166 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2167 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2168 ;;Total ram usage:        0 bytes
  2169 ;; Hardware stack levels used:    1
  2170 ;; Hardware stack levels required when called:   14
  2171 ;; This function calls:
  2172 ;;		_keypadRoutine
  2173 ;; This function is called by:
  2174 ;;		_main
  2175 ;; This function uses a non-reentrant model
  2176 ;;
  2177                           
  2178                           	psect	text8
  2179  002BA4                     __ptext8:
  2180                           	opt stack 0
  2181  002BA4                     _bootKeypadPORTB:
  2182                           	opt stack 16
  2183  002BA4                     
  2184                           ;main.c: 83: keypadRoutine();
  2185  002BA4  ECF1  F012         	call	_keypadRoutine	;wreg free
  2186  002BA8  D7FD               	goto	l5803
  2187  002BAA                     __end_of_bootKeypadPORTB:
  2188                           	opt stack 0
  2189                           tblptru	equ	0xFF8
  2190                           tblptrh	equ	0xFF7
  2191                           tblptrl	equ	0xFF6
  2192                           tablat	equ	0xFF5
  2193                           prodh	equ	0xFF4
  2194                           prodl	equ	0xFF3
  2195                           intcon	equ	0xFF2
  2196                           postinc0	equ	0xFEE
  2197                           wreg	equ	0xFE8
  2198                           postdec1	equ	0xFE5
  2199                           fsr1l	equ	0xFE1
  2200                           indf2	equ	0xFDF
  2201                           fsr2h	equ	0xFDA
  2202                           fsr2l	equ	0xFD9
  2203                           status	equ	0xFD8
  2204                           
  2205 ;; *************** function _keypadRoutine *****************
  2206 ;; Defined at:
  2207 ;;		line 47 in file "Keypad.c"
  2208 ;; Parameters:    Size  Location     Type
  2209 ;;		None
  2210 ;; Auto vars:     Size  Location     Type
  2211 ;;		None
  2212 ;; Return value:  Size  Location     Type
  2213 ;;                  1    wreg      void 
  2214 ;; Registers used:
  2215 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2216 ;; Tracked objects:
  2217 ;;		On entry : 0/0
  2218 ;;		On exit  : 0/0
  2219 ;;		Unchanged: 0/0
  2220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2221 ;;      Params:         0       0       0       0       0       0       0       0       0
  2222 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2223 ;;      Temps:          0       1       0       0       0       0       0       0       0
  2224 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2225 ;;Total ram usage:        1 bytes
  2226 ;; Hardware stack levels used:    1
  2227 ;; Hardware stack levels required when called:   13
  2228 ;; This function calls:
  2229 ;;		_readKeyboard
  2230 ;; This function is called by:
  2231 ;;		_bootKeypadPORTB
  2232 ;; This function uses a non-reentrant model
  2233 ;;
  2234                           
  2235                           	psect	text9
  2236  0025E2                     __ptext9:
  2237                           	opt stack 0
  2238  0025E2                     _keypadRoutine:
  2239                           	opt stack 16
  2240                           
  2241                           ;Keypad.c: 56: if(PORTAbits.RA4){
  2242                           
  2243                           ;incstack = 0
  2244  0025E2  A880               	btfss	3968,4,c	;volatile
  2245  0025E4  D009               	goto	l5617
  2246                           
  2247                           ;Keypad.c: 57: LATAbits.LATA5 = 0;
  2248  0025E6  9A89               	bcf	3977,5,c	;volatile
  2249                           
  2250                           ;Keypad.c: 58: TRISA = 0xFF;
  2251  0025E8  6892               	setf	3986,c	;volatile
  2252  0025EA                     l920:
  2253  0025EA  B880               	btfsc	3968,4,c	;volatile
  2254  0025EC  D7FE               	goto	l920
  2255                           
  2256                           ;Keypad.c: 60: LATA = 0x00;
  2257  0025EE  0E00               	movlw	0
  2258  0025F0  6E89               	movwf	3977,c	;volatile
  2259                           
  2260                           ;Keypad.c: 61: TRISA = 0b11011111;
  2261  0025F2  0EDF               	movlw	223
  2262  0025F4  6E92               	movwf	3986,c	;volatile
  2263                           
  2264                           ;Keypad.c: 62: }
  2265  0025F6  0012               	return	
  2266  0025F8                     l5617:
  2267                           
  2268                           ;Keypad.c: 65: else{
  2269                           ;Keypad.c: 66: TRISA = 0b11011111;
  2270  0025F8  0EDF               	movlw	223
  2271  0025FA  6E92               	movwf	3986,c	;volatile
  2272                           
  2273                           ;Keypad.c: 69: dataOut = readKeyboard();
  2274  0025FC  ECF0  F011         	call	_readKeyboard	;wreg free
  2275  002600  6E51               	movwf	Keypad@dataOut,c
  2276                           
  2277                           ;Keypad.c: 72: if (dataOut != 0xF0){
  2278  002602  0EF0               	movlw	240
  2279  002604  1851               	xorwf	Keypad@dataOut,w,c
  2280  002606  B4D8               	btfsc	status,2,c
  2281  002608  0012               	return	
  2282                           
  2283                           ;Keypad.c: 77: _delay((unsigned long)((20)*(8000000/4000.0)));
  2284  00260A  0E34               	movlw	52
  2285  00260C  0100               	movlb	0	; () banked
  2286  00260E  6FDA               	movwf	??_keypadRoutine& (0+255),b
  2287  002610  0EF1               	movlw	241
  2288  002612                     u5547:
  2289  002612  2EE8               	decfsz	wreg,f,c
  2290  002614  D7FE               	bra	u5547
  2291  002616  2FDA               	decfsz	??_keypadRoutine& (0+255),f,b
  2292  002618  D7FC               	bra	u5547
  2293  00261A  D000               	nop2	
  2294                           
  2295                           ;Keypad.c: 78: if (dataOut == readKeyboard()){
  2296  00261C  ECF0  F011         	call	_readKeyboard	;wreg free
  2297  002620  1851               	xorwf	Keypad@dataOut,w,c
  2298  002622  A4D8               	btfss	status,2,c
  2299  002624  D011               	goto	l5637
  2300                           
  2301                           ;Keypad.c: 83: LATA = dataOut & 0b00001111U;
  2302  002626  5051               	movf	Keypad@dataOut,w,c
  2303  002628  0B0F               	andlw	15
  2304  00262A  6E89               	movwf	3977,c	;volatile
  2305                           
  2306                           ;Keypad.c: 84: TRISA = 0b11010000;
  2307  00262C  0ED0               	movlw	208
  2308  00262E  6E92               	movwf	3986,c	;volatile
  2309                           
  2310                           ;Keypad.c: 85: LATAbits.LATA5 = 1;
  2311  002630  8A89               	bsf	3977,5,c	;volatile
  2312                           
  2313                           ;Keypad.c: 88: while (dataOut == readKeyboard()){
  2314  002632  D005               	goto	l5635
  2315  002634                     l927:
  2316                           
  2317                           ;Keypad.c: 92: if(PORTAbits.RA4){
  2318  002634  A880               	btfss	3968,4,c	;volatile
  2319  002636  D003               	goto	l5635
  2320                           
  2321                           ;Keypad.c: 93: TRISA = 0xFF;
  2322  002638  6892               	setf	3986,c	;volatile
  2323  00263A                     l929:
  2324  00263A  B880               	btfsc	3968,4,c	;volatile
  2325  00263C  D7FE               	goto	l929
  2326  00263E                     l5635:
  2327  00263E  ECF0  F011         	call	_readKeyboard	;wreg free
  2328  002642  1851               	xorwf	Keypad@dataOut,w,c
  2329  002644  B4D8               	btfsc	status,2,c
  2330  002646  D7F6               	goto	l927
  2331  002648                     l5637:
  2332                           
  2333                           ;Keypad.c: 96: }
  2334                           ;Keypad.c: 97: }
  2335                           ;Keypad.c: 98: }
  2336                           ;Keypad.c: 99: }
  2337                           ;Keypad.c: 103: LATA = 0x00;
  2338  002648  0E00               	movlw	0
  2339  00264A  6E89               	movwf	3977,c	;volatile
  2340                           
  2341                           ;Keypad.c: 104: TRISA = 0b11011111;
  2342  00264C  0EDF               	movlw	223
  2343  00264E  6E92               	movwf	3986,c	;volatile
  2344  002650  0012               	return	
  2345  002652                     __end_of_keypadRoutine:
  2346                           	opt stack 0
  2347                           tblptru	equ	0xFF8
  2348                           tblptrh	equ	0xFF7
  2349                           tblptrl	equ	0xFF6
  2350                           tablat	equ	0xFF5
  2351                           prodh	equ	0xFF4
  2352                           prodl	equ	0xFF3
  2353                           intcon	equ	0xFF2
  2354                           postinc0	equ	0xFEE
  2355                           wreg	equ	0xFE8
  2356                           postdec1	equ	0xFE5
  2357                           fsr1l	equ	0xFE1
  2358                           indf2	equ	0xFDF
  2359                           fsr2h	equ	0xFDA
  2360                           fsr2l	equ	0xFD9
  2361                           status	equ	0xFD8
  2362                           
  2363 ;; *************** function _bootKeypadAndComPort *****************
  2364 ;; Defined at:
  2365 ;;		line 91 in file "main.c"
  2366 ;; Parameters:    Size  Location     Type
  2367 ;;		None
  2368 ;; Auto vars:     Size  Location     Type
  2369 ;;		None
  2370 ;; Return value:  Size  Location     Type
  2371 ;;                  1    wreg      void 
  2372 ;; Registers used:
  2373 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2374 ;; Tracked objects:
  2375 ;;		On entry : 0/0
  2376 ;;		On exit  : 0/0
  2377 ;;		Unchanged: 0/0
  2378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2379 ;;      Params:         0       0       0       0       0       0       0       0       0
  2380 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2381 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2382 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2383 ;;Total ram usage:        0 bytes
  2384 ;; Hardware stack levels used:    1
  2385 ;; Hardware stack levels required when called:   16
  2386 ;; This function calls:
  2387 ;;		_CDC_Routine
  2388 ;;		_SYSTEM_Initialize
  2389 ;;		_USBDeviceAttach
  2390 ;;		_USBDeviceInit
  2391 ;;		_keypadRoutine_StateBased
  2392 ;; This function is called by:
  2393 ;;		_main
  2394 ;; This function uses a non-reentrant model
  2395 ;;
  2396                           
  2397                           	psect	text10
  2398  002AEE                     __ptext10:
  2399                           	opt stack 0
  2400  002AEE                     _bootKeypadAndComPort:
  2401                           	opt stack 14
  2402                           
  2403                           ;main.c: 92: (INTCONbits.GIE = 1);
  2404                           
  2405                           ;incstack = 0
  2406  002AEE  8EF2               	bsf	intcon,7,c	;volatile
  2407                           
  2408                           ;main.c: 94: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  2409  002AF0  0E00               	movlw	0
  2410  002AF2  ECC8  F014         	call	_SYSTEM_Initialize
  2411                           
  2412                           ;main.c: 96: USBDeviceInit();
  2413  002AF6  ECB6  F005         	call	_USBDeviceInit	;wreg free
  2414                           
  2415                           ;main.c: 97: USBDeviceAttach();
  2416  002AFA  EC31  F015         	call	_USBDeviceAttach	;wreg free
  2417                           
  2418                           ;main.c: 99: keypadFlags.f_disabled_to_enabled = 1;
  2419  002AFE  0E01               	movlw	1
  2420  002B00  6E30               	movwf	_keypadFlags,c
  2421                           
  2422                           ;main.c: 100: keypadFlags.f_enabled_to_disabled = 1;
  2423  002B02  0E01               	movlw	1
  2424  002B04  6E31               	movwf	_keypadFlags+1,c
  2425                           
  2426                           ;main.c: 101: keypadFlags.sending_f_first = 1;
  2427  002B06  0E01               	movlw	1
  2428  002B08  6E32               	movwf	_keypadFlags+2,c
  2429  002B0A                     l5787:
  2430                           
  2431                           ;main.c: 105: CDC_Routine();
  2432  002B0A  ECC4  F015         	call	_CDC_Routine	;wreg free
  2433                           
  2434                           ;main.c: 106: keypadRoutine_StateBased();
  2435  002B0E  EC9A  F00C         	call	_keypadRoutine_StateBased	;wreg free
  2436  002B12  D7FB               	goto	l5787
  2437  002B14                     __end_of_bootKeypadAndComPort:
  2438                           	opt stack 0
  2439                           tblptru	equ	0xFF8
  2440                           tblptrh	equ	0xFF7
  2441                           tblptrl	equ	0xFF6
  2442                           tablat	equ	0xFF5
  2443                           prodh	equ	0xFF4
  2444                           prodl	equ	0xFF3
  2445                           intcon	equ	0xFF2
  2446                           postinc0	equ	0xFEE
  2447                           wreg	equ	0xFE8
  2448                           postdec1	equ	0xFE5
  2449                           fsr1l	equ	0xFE1
  2450                           indf2	equ	0xFDF
  2451                           fsr2h	equ	0xFDA
  2452                           fsr2l	equ	0xFD9
  2453                           status	equ	0xFD8
  2454                           
  2455 ;; *************** function _keypadRoutine_StateBased *****************
  2456 ;; Defined at:
  2457 ;;		line 109 in file "Keypad.c"
  2458 ;; Parameters:    Size  Location     Type
  2459 ;;		None
  2460 ;; Auto vars:     Size  Location     Type
  2461 ;;		None
  2462 ;; Return value:  Size  Location     Type
  2463 ;;                  1    wreg      void 
  2464 ;; Registers used:
  2465 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2466 ;; Tracked objects:
  2467 ;;		On entry : 0/0
  2468 ;;		On exit  : 0/0
  2469 ;;		Unchanged: 0/0
  2470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2471 ;;      Params:         0       0       0       0       0       0       0       0       0
  2472 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2473 ;;      Temps:          0       1       0       0       0       0       0       0       0
  2474 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2475 ;;Total ram usage:        1 bytes
  2476 ;; Hardware stack levels used:    1
  2477 ;; Hardware stack levels required when called:   13
  2478 ;; This function calls:
  2479 ;;		_readKeyboard
  2480 ;; This function is called by:
  2481 ;;		_bootKeypadAndComPort
  2482 ;; This function uses a non-reentrant model
  2483 ;;
  2484                           
  2485                           	psect	text11
  2486  001934                     __ptext11:
  2487                           	opt stack 0
  2488  001934                     _keypadRoutine_StateBased:
  2489                           	opt stack 16
  2490                           
  2491                           ;Keypad.c: 119: switch(KPDState){
  2492                           
  2493                           ;incstack = 0
  2494  001934  D063               	goto	l5711
  2495  001936                     l937:
  2496                           
  2497                           ;Keypad.c: 124: if(PORTAbits.RA4){
  2498  001936  A880               	btfss	3968,4,c	;volatile
  2499  001938  D00A               	goto	l5651
  2500                           
  2501                           ;Keypad.c: 125: if(keypadFlags.f_enabled_to_disabled){
  2502  00193A  5031               	movf	_keypadFlags+1,w,c
  2503  00193C  B4D8               	btfsc	status,2,c
  2504  00193E  D00A               	goto	l942
  2505                           
  2506                           ;Keypad.c: 126: keypadFlags.f_enabled_to_disabled = 0;
  2507  001940  0E00               	movlw	0
  2508  001942  6E31               	movwf	_keypadFlags+1,c
  2509                           
  2510                           ;Keypad.c: 130: keypadFlags.f_disabled_to_enabled = 1;
  2511  001944  0E01               	movlw	1
  2512  001946  6E30               	movwf	_keypadFlags,c
  2513                           
  2514                           ;Keypad.c: 131: LATAbits.LATA5 = 0;
  2515  001948  9A89               	bcf	3977,5,c	;volatile
  2516                           
  2517                           ;Keypad.c: 132: TRISA = 0xFF;
  2518  00194A  6892               	setf	3986,c	;volatile
  2519                           
  2520                           ;Keypad.c: 133: return;
  2521  00194C  0012               	return	
  2522  00194E                     l5651:
  2523                           
  2524                           ;Keypad.c: 136: else{
  2525                           ;Keypad.c: 138: KPDState = polling;
  2526  00194E  0E01               	movlw	1
  2527  001950  6E56               	movwf	_KPDState,c
  2528                           
  2529                           ;Keypad.c: 139: return;
  2530  001952  0012               	return	
  2531  001954                     l942:
  2532                           
  2533                           ;Keypad.c: 144: if(PORTAbits.RA4){
  2534  001954  A880               	btfss	3968,4,c	;volatile
  2535  001956  D003               	goto	l5659
  2536                           
  2537                           ;Keypad.c: 145: KPDState = disabled;
  2538  001958  0E00               	movlw	0
  2539  00195A  6E56               	movwf	_KPDState,c
  2540                           
  2541                           ;Keypad.c: 146: return;
  2542  00195C  0012               	return	
  2543  00195E                     l5659:
  2544                           
  2545                           ;Keypad.c: 147: }
  2546                           ;Keypad.c: 150: if(keypadFlags.f_disabled_to_enabled){
  2547  00195E  5030               	movf	_keypadFlags,w,c
  2548  001960  B4D8               	btfsc	status,2,c
  2549  001962  D006               	goto	l944
  2550                           
  2551                           ;Keypad.c: 151: keypadFlags.f_disabled_to_enabled = 0;
  2552  001964  0E00               	movlw	0
  2553  001966  6E30               	movwf	_keypadFlags,c
  2554                           
  2555                           ;Keypad.c: 155: keypadFlags.f_enabled_to_disabled = 1;
  2556  001968  0E01               	movlw	1
  2557  00196A  6E31               	movwf	_keypadFlags+1,c
  2558                           
  2559                           ;Keypad.c: 156: LATA = 0x00;
  2560  00196C  0E00               	movlw	0
  2561  00196E  6E89               	movwf	3977,c	;volatile
  2562  001970                     l944:
  2563                           
  2564                           ;Keypad.c: 157: }
  2565                           ;Keypad.c: 158: TRISA = 0b11011111;
  2566  001970  0EDF               	movlw	223
  2567  001972  6E92               	movwf	3986,c	;volatile
  2568                           
  2569                           ;Keypad.c: 161: dataOut = readKeyboard();
  2570  001974  ECF0  F011         	call	_readKeyboard	;wreg free
  2571  001978  6E51               	movwf	Keypad@dataOut,c
  2572                           
  2573                           ;Keypad.c: 164: if (dataOut != 0xF0){
  2574  00197A  0EF0               	movlw	240
  2575  00197C  1851               	xorwf	Keypad@dataOut,w,c
  2576  00197E  B4D8               	btfsc	status,2,c
  2577  001980  0012               	return	
  2578                           
  2579                           ;Keypad.c: 167: KPDState = debouncing;
  2580  001982  0E02               	movlw	2
  2581  001984  6E56               	movwf	_KPDState,c
  2582                           
  2583                           ;Keypad.c: 168: }
  2584                           ;Keypad.c: 169: return;
  2585  001986  0012               	return	
  2586  001988                     l946:
  2587                           
  2588                           ;Keypad.c: 174: if(PORTAbits.RA4){
  2589  001988  A880               	btfss	3968,4,c	;volatile
  2590  00198A  D003               	goto	l5675
  2591                           
  2592                           ;Keypad.c: 175: KPDState = disabled;
  2593  00198C  0E00               	movlw	0
  2594  00198E  6E56               	movwf	_KPDState,c
  2595                           
  2596                           ;Keypad.c: 176: return;
  2597  001990  0012               	return	
  2598  001992                     l5675:
  2599                           
  2600                           ;Keypad.c: 177: }
  2601                           ;Keypad.c: 183: _delay((unsigned long)((20)*(8000000/4000.0)));
  2602  001992  0E34               	movlw	52
  2603  001994  0100               	movlb	0	; () banked
  2604  001996  6FDA               	movwf	??_keypadRoutine_StateBased& (0+255),b
  2605  001998  0EF1               	movlw	241
  2606  00199A                     u5557:
  2607  00199A  2EE8               	decfsz	wreg,f,c
  2608  00199C  D7FE               	bra	u5557
  2609  00199E  2FDA               	decfsz	??_keypadRoutine_StateBased& (0+255),f,b
  2610  0019A0  D7FC               	bra	u5557
  2611  0019A2  D000               	nop2	
  2612                           
  2613                           ;Keypad.c: 184: if (dataOut == readKeyboard()){
  2614  0019A4  ECF0  F011         	call	_readKeyboard	;wreg free
  2615  0019A8  1851               	xorwf	Keypad@dataOut,w,c
  2616  0019AA  A4D8               	btfss	status,2,c
  2617  0019AC  D003               	goto	l5681
  2618                           
  2619                           ;Keypad.c: 186: KPDState = sending;
  2620  0019AE  0E03               	movlw	3
  2621  0019B0  6E56               	movwf	_KPDState,c
  2622                           
  2623                           ;Keypad.c: 187: }
  2624  0019B2  0012               	return	
  2625  0019B4                     l5681:
  2626                           
  2627                           ;Keypad.c: 188: else{
  2628                           ;Keypad.c: 190: KPDState = polling;
  2629  0019B4  0E01               	movlw	1
  2630  0019B6  6E56               	movwf	_KPDState,c
  2631                           
  2632                           ;Keypad.c: 191: }
  2633                           ;Keypad.c: 192: return;
  2634  0019B8  0012               	return	
  2635  0019BA                     l950:
  2636                           
  2637                           ;Keypad.c: 197: if(PORTAbits.RA4){
  2638  0019BA  A880               	btfss	3968,4,c	;volatile
  2639  0019BC  D005               	goto	l5689
  2640                           
  2641                           ;Keypad.c: 198: KPDState = disabled;
  2642  0019BE  0E00               	movlw	0
  2643  0019C0  6E56               	movwf	_KPDState,c
  2644                           
  2645                           ;Keypad.c: 199: keypadFlags.sending_f_first = 1;
  2646  0019C2  0E01               	movlw	1
  2647  0019C4  6E32               	movwf	_keypadFlags+2,c
  2648                           
  2649                           ;Keypad.c: 200: return;
  2650  0019C6  0012               	return	
  2651  0019C8                     l5689:
  2652                           
  2653                           ;Keypad.c: 201: }
  2654                           ;Keypad.c: 202: if(keypadFlags.sending_f_first){
  2655  0019C8  5032               	movf	_keypadFlags+2,w,c
  2656  0019CA  B4D8               	btfsc	status,2,c
  2657  0019CC  D009               	goto	l5699
  2658                           
  2659                           ;Keypad.c: 203: keypadFlags.sending_f_first = 0;
  2660  0019CE  0E00               	movlw	0
  2661  0019D0  6E32               	movwf	_keypadFlags+2,c
  2662                           
  2663                           ;Keypad.c: 208: LATA = dataOut & 0b00001111U;
  2664  0019D2  5051               	movf	Keypad@dataOut,w,c
  2665  0019D4  0B0F               	andlw	15
  2666  0019D6  6E89               	movwf	3977,c	;volatile
  2667                           
  2668                           ;Keypad.c: 209: TRISA = 0b11010000;
  2669  0019D8  0ED0               	movlw	208
  2670  0019DA  6E92               	movwf	3986,c	;volatile
  2671                           
  2672                           ;Keypad.c: 210: LATAbits.LATA5 = 1;
  2673  0019DC  8A89               	bsf	3977,5,c	;volatile
  2674                           
  2675                           ;Keypad.c: 211: }
  2676  0019DE  0012               	return	
  2677  0019E0                     l5699:
  2678                           
  2679                           ;Keypad.c: 212: else{
  2680                           ;Keypad.c: 213: if(dataOut == readKeyboard()){
  2681  0019E0  ECF0  F011         	call	_readKeyboard	;wreg free
  2682  0019E4  1851               	xorwf	Keypad@dataOut,w,c
  2683  0019E6  B4D8               	btfsc	status,2,c
  2684  0019E8  0012               	return	
  2685                           
  2686                           ;Keypad.c: 216: else{
  2687                           ;Keypad.c: 219: LATA = 0x00;
  2688                           
  2689                           ;Keypad.c: 215: }
  2690                           
  2691                           ;Keypad.c: 214: return;
  2692  0019EA  0E00               	movlw	0
  2693  0019EC  6E89               	movwf	3977,c	;volatile
  2694                           
  2695                           ;Keypad.c: 220: TRISA = 0b11011111;
  2696  0019EE  0EDF               	movlw	223
  2697  0019F0  6E92               	movwf	3986,c	;volatile
  2698                           
  2699                           ;Keypad.c: 223: KPDState = polling;
  2700  0019F2  0E01               	movlw	1
  2701  0019F4  6E56               	movwf	_KPDState,c
  2702                           
  2703                           ;Keypad.c: 224: keypadFlags.sending_f_first = 1;
  2704  0019F6  0E01               	movlw	1
  2705  0019F8  6E32               	movwf	_keypadFlags+2,c
  2706                           
  2707                           ;Keypad.c: 228: }
  2708                           
  2709                           ;Keypad.c: 225: }
  2710                           ;Keypad.c: 226: }
  2711                           ;Keypad.c: 227: return;
  2712  0019FA  0012               	return	
  2713  0019FC                     l5711:
  2714  0019FC  5056               	movf	_KPDState,w,c
  2715                           
  2716                           ; Switch size 1, requested type "space"
  2717                           ; Number of cases is 4, Range of values is 0 to 3
  2718                           ; switch strategies available:
  2719                           ; Name         Instructions Cycles
  2720                           ; simple_byte           13     7 (average)
  2721                           ;	Chosen strategy is simple_byte
  2722  0019FE  0A00               	xorlw	0	; case 0
  2723  001A00  B4D8               	btfsc	status,2,c
  2724  001A02  D799               	goto	l937
  2725  001A04  0A01               	xorlw	1	; case 1
  2726  001A06  B4D8               	btfsc	status,2,c
  2727  001A08  D7A5               	goto	l942
  2728  001A0A  0A03               	xorlw	3	; case 2
  2729  001A0C  B4D8               	btfsc	status,2,c
  2730  001A0E  D7BC               	goto	l946
  2731  001A10  0A01               	xorlw	1	; case 3
  2732  001A12  A4D8               	btfss	status,2,c
  2733  001A14  0012               	return	
  2734  001A16  D7D1               	goto	l950
  2735  001A18                     __end_of_keypadRoutine_StateBased:
  2736                           	opt stack 0
  2737                           tblptru	equ	0xFF8
  2738                           tblptrh	equ	0xFF7
  2739                           tblptrl	equ	0xFF6
  2740                           tablat	equ	0xFF5
  2741                           prodh	equ	0xFF4
  2742                           prodl	equ	0xFF3
  2743                           intcon	equ	0xFF2
  2744                           postinc0	equ	0xFEE
  2745                           wreg	equ	0xFE8
  2746                           postdec1	equ	0xFE5
  2747                           fsr1l	equ	0xFE1
  2748                           indf2	equ	0xFDF
  2749                           fsr2h	equ	0xFDA
  2750                           fsr2l	equ	0xFD9
  2751                           status	equ	0xFD8
  2752                           
  2753 ;; *************** function _readKeyboard *****************
  2754 ;; Defined at:
  2755 ;;		line 14 in file "Keypad.c"
  2756 ;; Parameters:    Size  Location     Type
  2757 ;;		None
  2758 ;; Auto vars:     Size  Location     Type
  2759 ;;  i               1   17[BANK0 ] unsigned char 
  2760 ;; Return value:  Size  Location     Type
  2761 ;;                  1    wreg      unsigned char 
  2762 ;; Registers used:
  2763 ;;		wreg, status,2, status,0, prodl, prodh
  2764 ;; Tracked objects:
  2765 ;;		On entry : 0/0
  2766 ;;		On exit  : 0/0
  2767 ;;		Unchanged: 0/0
  2768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2769 ;;      Params:         0       0       0       0       0       0       0       0       0
  2770 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2771 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2772 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2773 ;;Total ram usage:        1 bytes
  2774 ;; Hardware stack levels used:    1
  2775 ;; Hardware stack levels required when called:   12
  2776 ;; This function calls:
  2777 ;;		Nothing
  2778 ;; This function is called by:
  2779 ;;		_main
  2780 ;;		_keypadRoutine
  2781 ;;		_keypadRoutine_StateBased
  2782 ;;		_keypadRoutineUART
  2783 ;; This function uses a non-reentrant model
  2784 ;;
  2785                           
  2786                           	psect	text12
  2787  0023E0                     __ptext12:
  2788                           	opt stack 0
  2789  0023E0                     _readKeyboard:
  2790                           	opt stack 18
  2791                           
  2792                           ;Keypad.c: 25: for(unsigned char i = 0; i < 4; i++){
  2793                           
  2794                           ;incstack = 0
  2795  0023E0  0E00               	movlw	0
  2796  0023E2  0100               	movlb	0	; () banked
  2797  0023E4  6FD9               	movwf	readKeyboard@i& (0+255),b
  2798  0023E6                     l5389:
  2799                           
  2800                           ; BSR set to: 0
  2801  0023E6  0E03               	movlw	3
  2802  0023E8  0100               	movlb	0	; () banked
  2803  0023EA  65D9               	cpfsgt	readKeyboard@i& (0+255),b
  2804  0023EC  D001               	goto	l5393
  2805  0023EE  D03C               	goto	l5431
  2806  0023F0                     l5393:
  2807                           
  2808                           ; BSR set to: 0
  2809                           ;Keypad.c: 26: if(i == 0)
  2810  0023F0  0100               	movlb	0	; () banked
  2811  0023F2  51D9               	movf	readKeyboard@i& (0+255),w,b
  2812  0023F4  0100               	movlb	0	; () banked
  2813  0023F6  A4D8               	btfss	status,2,c
  2814  0023F8  D002               	goto	l5397
  2815                           
  2816                           ; BSR set to: 0
  2817                           ;Keypad.c: 27: LATB = 0x10;
  2818  0023FA  0E10               	movlw	16
  2819  0023FC  D013               	goto	L3
  2820  0023FE                     l5397:
  2821                           
  2822                           ; BSR set to: 0
  2823                           ;Keypad.c: 28: else if(i == 1)
  2824  0023FE  0100               	movlb	0	; () banked
  2825  002400  05D9               	decf	readKeyboard@i& (0+255),w,b
  2826  002402  A4D8               	btfss	status,2,c
  2827  002404  D002               	goto	l5401
  2828                           
  2829                           ; BSR set to: 0
  2830                           ;Keypad.c: 29: LATB = 0x20;
  2831  002406  0E20               	movlw	32
  2832  002408  D00D               	goto	L3
  2833  00240A                     l5401:
  2834                           
  2835                           ; BSR set to: 0
  2836                           ;Keypad.c: 30: else if(i == 2)
  2837  00240A  0E02               	movlw	2
  2838  00240C  0100               	movlb	0	; () banked
  2839  00240E  19D9               	xorwf	readKeyboard@i& (0+255),w,b
  2840  002410  A4D8               	btfss	status,2,c
  2841  002412  D002               	goto	l5405
  2842                           
  2843                           ; BSR set to: 0
  2844                           ;Keypad.c: 31: LATB = 0x40;
  2845  002414  0E40               	movlw	64
  2846  002416  D006               	goto	L3
  2847  002418                     l5405:
  2848                           
  2849                           ; BSR set to: 0
  2850                           ;Keypad.c: 32: else if(i == 3)
  2851  002418  0E03               	movlw	3
  2852  00241A  0100               	movlb	0	; () banked
  2853  00241C  19D9               	xorwf	readKeyboard@i& (0+255),w,b
  2854  00241E  A4D8               	btfss	status,2,c
  2855  002420  D002               	goto	l5409
  2856                           
  2857                           ; BSR set to: 0
  2858                           ;Keypad.c: 33: LATB = 0x80;
  2859  002422  0E80               	movlw	128
  2860  002424                     L3:
  2861  002424  6E8A               	movwf	3978,c	;volatile
  2862  002426                     l5409:
  2863                           
  2864                           ; BSR set to: 0
  2865                           ;Keypad.c: 35: if(PORTBbits.RB0)
  2866  002426  A081               	btfss	3969,0,c	;volatile
  2867  002428  D005               	goto	l912
  2868                           
  2869                           ; BSR set to: 0
  2870                           ;Keypad.c: 36: return (i * 4U);
  2871  00242A  0100               	movlb	0	; () banked
  2872  00242C  51D9               	movf	readKeyboard@i& (0+255),w,b
  2873  00242E  0D04               	mullw	4
  2874  002430  50F3               	movf	prodl,w,c
  2875                           
  2876                           ; BSR set to: 0
  2877  002432  0012               	return	
  2878  002434                     l912:
  2879                           
  2880                           ; BSR set to: 0
  2881                           ;Keypad.c: 37: if(PORTBbits.RB1)
  2882  002434  A281               	btfss	3969,1,c	;volatile
  2883  002436  D005               	goto	l914
  2884                           
  2885                           ; BSR set to: 0
  2886                           ;Keypad.c: 38: return (i * 4U) + 1U;
  2887  002438  0100               	movlb	0	; () banked
  2888  00243A  51D9               	movf	readKeyboard@i& (0+255),w,b
  2889  00243C  0D04               	mullw	4
  2890  00243E  28F3               	incf	prodl,w,c
  2891                           
  2892                           ; BSR set to: 0
  2893  002440  0012               	return	
  2894  002442                     l914:
  2895                           
  2896                           ; BSR set to: 0
  2897                           ;Keypad.c: 39: if(PORTBbits.RB2)
  2898  002442  A481               	btfss	3969,2,c	;volatile
  2899  002444  D006               	goto	l915
  2900                           
  2901                           ; BSR set to: 0
  2902                           ;Keypad.c: 40: return (i * 4U) + 2U;
  2903  002446  0100               	movlb	0	; () banked
  2904  002448  51D9               	movf	readKeyboard@i& (0+255),w,b
  2905  00244A  0D04               	mullw	4
  2906  00244C  50F3               	movf	prodl,w,c
  2907  00244E  0F02               	addlw	2
  2908                           
  2909                           ; BSR set to: 0
  2910  002450  0012               	return	
  2911  002452                     l915:
  2912                           
  2913                           ; BSR set to: 0
  2914                           ;Keypad.c: 41: if(PORTBbits.RB3)
  2915  002452  A681               	btfss	3969,3,c	;volatile
  2916  002454  D006               	goto	l5427
  2917                           
  2918                           ; BSR set to: 0
  2919                           ;Keypad.c: 42: return (i * 4U) + 3U;
  2920  002456  0100               	movlb	0	; () banked
  2921  002458  51D9               	movf	readKeyboard@i& (0+255),w,b
  2922  00245A  0D04               	mullw	4
  2923  00245C  50F3               	movf	prodl,w,c
  2924  00245E  0F03               	addlw	3
  2925                           
  2926                           ; BSR set to: 0
  2927  002460  0012               	return	
  2928  002462                     l5427:
  2929                           
  2930                           ; BSR set to: 0
  2931  002462  0100               	movlb	0	; () banked
  2932  002464  2BD9               	incf	readKeyboard@i& (0+255),f,b
  2933  002466  D7BF               	goto	l5389
  2934  002468                     l5431:
  2935                           
  2936                           ; BSR set to: 0
  2937                           ;Keypad.c: 43: }
  2938                           ;Keypad.c: 44: return 0xF0;
  2939  002468  0EF0               	movlw	240
  2940  00246A  0012               	return	
  2941  00246C                     __end_of_readKeyboard:
  2942                           	opt stack 0
  2943                           tblptru	equ	0xFF8
  2944                           tblptrh	equ	0xFF7
  2945                           tblptrl	equ	0xFF6
  2946                           tablat	equ	0xFF5
  2947                           prodh	equ	0xFF4
  2948                           prodl	equ	0xFF3
  2949                           intcon	equ	0xFF2
  2950                           postinc0	equ	0xFEE
  2951                           wreg	equ	0xFE8
  2952                           postdec1	equ	0xFE5
  2953                           fsr1l	equ	0xFE1
  2954                           indf2	equ	0xFDF
  2955                           fsr2h	equ	0xFDA
  2956                           fsr2l	equ	0xFD9
  2957                           status	equ	0xFD8
  2958                           
  2959 ;; *************** function _USBDeviceInit *****************
  2960 ;; Defined at:
  2961 ;;		line 277 in file "../USBConverter/mla/v2017_03_06/framework/usb/src/usb_device.c"
  2962 ;; Parameters:    Size  Location     Type
  2963 ;;		None
  2964 ;; Auto vars:     Size  Location     Type
  2965 ;;  i               1   25[BANK0 ] unsigned char 
  2966 ;; Return value:  Size  Location     Type
  2967 ;;                  1    wreg      void 
  2968 ;; Registers used:
  2969 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2970 ;; Tracked objects:
  2971 ;;		On entry : 0/0
  2972 ;;		On exit  : 0/0
  2973 ;;		Unchanged: 0/0
  2974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2975 ;;      Params:         0       0       0       0       0       0       0       0       0
  2976 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2977 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2978 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2979 ;;Total ram usage:        1 bytes
  2980 ;; Hardware stack levels used:    1
  2981 ;; Hardware stack levels required when called:   13
  2982 ;; This function calls:
  2983 ;;		_memset
  2984 ;; This function is called by:
  2985 ;;		_bootKeypadAndComPort
  2986 ;; This function uses a non-reentrant model
  2987 ;;
  2988                           
  2989                           	psect	text13
  2990  000B6C                     __ptext13:
  2991                           	opt stack 0
  2992  000B6C                     _USBDeviceInit:
  2993                           	opt stack 16
  2994                           
  2995                           ;usb_device.c: 279: uint8_t i;
  2996                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
  2997                           
  2998                           ; BSR set to: 0
  2999                           ;incstack = 0
  3000  000B6C  9AA0               	bcf	4000,5,c	;volatile
  3001                           
  3002                           ;usb_device.c: 285: ;
  3003                           ;usb_device.c: 288: {UEIR = 0;};
  3004  000B6E  0E00               	movlw	0
  3005  000B70  6E6A               	movwf	3946,c	;volatile
  3006                           
  3007                           ;usb_device.c: 291: {UIR = 0;};
  3008  000B72  0E00               	movlw	0
  3009  000B74  6E68               	movwf	3944,c	;volatile
  3010                           
  3011                           ;usb_device.c: 294: UEP0 = 0;
  3012  000B76  0E00               	movlw	0
  3013  000B78  6E70               	movwf	3952,c	;volatile
  3014                           
  3015                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
  3016  000B7A  0E71               	movlw	113
  3017  000B7C  0100               	movlb	0	; () banked
  3018  000B7E  6FD9               	movwf	memset@p1& (0+255),b
  3019  000B80  0E0F               	movlw	15
  3020  000B82  0100               	movlb	0	; () banked
  3021  000B84  6FDA               	movwf	(memset@p1+1)& (0+255),b
  3022  000B86  0E00               	movlw	0
  3023  000B88  0100               	movlb	0	; () banked
  3024  000B8A  6FDC               	movwf	(memset@c+1)& (0+255),b
  3025  000B8C  0E00               	movlw	0
  3026  000B8E  6FDB               	movwf	memset@c& (0+255),b
  3027  000B90  0E00               	movlw	0
  3028  000B92  0100               	movlb	0	; () banked
  3029  000B94  6FDE               	movwf	(memset@n+1)& (0+255),b
  3030  000B96  0E02               	movlw	2
  3031  000B98  6FDD               	movwf	memset@n& (0+255),b
  3032  000B9A  ECFE  F014         	call	_memset	;wreg free
  3033                           
  3034                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  3035  000B9E  0E16               	movlw	22
  3036  000BA0  6E6F               	movwf	3951,c	;volatile
  3037  000BA2  0E9F               	movlw	159
  3038  000BA4  6E6B               	movwf	3947,c	;volatile
  3039  000BA6  0E7B               	movlw	123
  3040  000BA8  6E69               	movwf	3945,c	;volatile
  3041                           
  3042                           ;usb_device.c: 301: ;
  3043                           ;usb_device.c: 304: ;
  3044                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  3045  000BAA  0E00               	movlw	0
  3046  000BAC  0100               	movlb	0	; () banked
  3047  000BAE  6FE1               	movwf	USBDeviceInit@i& (0+255),b
  3048  000BB0                     l5539:
  3049                           
  3050                           ; BSR set to: 0
  3051  000BB0  0E0B               	movlw	11
  3052  000BB2  0100               	movlb	0	; () banked
  3053  000BB4  65E1               	cpfsgt	USBDeviceInit@i& (0+255),b
  3054  000BB6  D001               	goto	l5543
  3055  000BB8  D010               	goto	l306
  3056  000BBA                     l5543:
  3057                           
  3058                           ; BSR set to: 0
  3059                           ;usb_device.c: 308: {
  3060                           ;usb_device.c: 309: BDT[i].Val = 0x00;
  3061  000BBA  0100               	movlb	0	; () banked
  3062  000BBC  51E1               	movf	USBDeviceInit@i& (0+255),w,b
  3063  000BBE  0D04               	mullw	4
  3064  000BC0  0E00               	movlw	0
  3065  000BC2  24F3               	addwf	prodl,w,c
  3066  000BC4  6ED9               	movwf	fsr2l,c
  3067  000BC6  0E04               	movlw	4
  3068  000BC8  20F4               	addwfc	prodh,w,c
  3069  000BCA  6EDA               	movwf	fsr2h,c
  3070  000BCC  6ADE               	clrf	postinc2,c
  3071  000BCE  6ADE               	clrf	postinc2,c
  3072  000BD0  6ADE               	clrf	postinc2,c
  3073  000BD2  6ADD               	clrf	postdec2,c
  3074                           
  3075                           ; BSR set to: 0
  3076  000BD4  0100               	movlb	0	; () banked
  3077  000BD6  2BE1               	incf	USBDeviceInit@i& (0+255),f,b
  3078  000BD8  D7EB               	goto	l5539
  3079  000BDA                     l306:
  3080                           
  3081                           ; BSR set to: 0
  3082                           ;usb_device.c: 310: }
  3083                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
  3084  000BDA  8C6D               	bsf	3949,6,c	;volatile
  3085                           
  3086                           ; BSR set to: 0
  3087                           ;usb_device.c: 316: UADDR = 0x00;
  3088  000BDC  0E00               	movlw	0
  3089  000BDE  6E6E               	movwf	3950,c	;volatile
  3090                           
  3091                           ; BSR set to: 0
  3092                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
  3093  000BE0  986D               	bcf	3949,4,c	;volatile
  3094                           
  3095                           ; BSR set to: 0
  3096                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
  3097  000BE2  9C6D               	bcf	3949,6,c	;volatile
  3098  000BE4                     l5555:
  3099                           
  3100                           ; BSR set to: 0
  3101                           ;usb_device.c: 326: {
  3102                           ;usb_device.c: 327: (UIR &= 0xF7);
  3103  000BE4  9668               	bcf	3944,3,c	;volatile
  3104                           
  3105                           ; BSR set to: 0
  3106                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
  3107  000BE6  0E00               	movlw	0
  3108  000BE8  0100               	movlb	0	; () banked
  3109  000BEA  6F6B               	movwf	(_inPipes+3)& (0+255),b	;volatile
  3110                           
  3111                           ; BSR set to: 0
  3112                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
  3113  000BEC  0E00               	movlw	0
  3114  000BEE  0100               	movlb	0	; () banked
  3115  000BF0  6F63               	movwf	(_outPipes+3)& (0+255),b	;volatile
  3116                           
  3117                           ; BSR set to: 0
  3118                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
  3119  000BF2  0E00               	movlw	0
  3120  000BF4  0100               	movlb	0	; () banked
  3121  000BF6  6F65               	movwf	(_outPipes+5)& (0+255),b	;volatile
  3122  000BF8  0E00               	movlw	0
  3123  000BFA  6F64               	movwf	(_outPipes+4)& (0+255),b	;volatile
  3124                           
  3125                           ; BSR set to: 0
  3126                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
  3127  000BFC  B668               	btfsc	3944,3,c	;volatile
  3128  000BFE  D7F2               	goto	l5555
  3129                           
  3130                           ; BSR set to: 0
  3131                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
  3132                           
  3133                           ; BSR set to: 0
  3134  000C00  0E01               	movlw	1
  3135  000C02  6E41               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  3136                           
  3137                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
  3138  000C04  0E01               	movlw	1
  3139  000C06  6E40               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  3140                           
  3141                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
  3142  000C08  0E00               	movlw	0
  3143  000C0A  6E3F               	movwf	_USBDeferINDataStagePackets,c	;volatile
  3144                           
  3145                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
  3146  000C0C  0E00               	movlw	0
  3147  000C0E  6E3E               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  3148                           
  3149                           ;usb_device.c: 341: USBBusIsSuspended = 0;
  3150  000C10  0E00               	movlw	0
  3151  000C12  0100               	movlb	0	; () banked
  3152  000C14  6F92               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
  3153                           
  3154                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
  3155  000C16  0E00               	movlw	0
  3156  000C18  0100               	movlb	0	; () banked
  3157  000C1A  6FE1               	movwf	USBDeviceInit@i& (0+255),b
  3158  000C1C                     l5567:
  3159                           
  3160                           ; BSR set to: 0
  3161  000C1C  0E02               	movlw	2
  3162  000C1E  0100               	movlb	0	; () banked
  3163  000C20  65E1               	cpfsgt	USBDeviceInit@i& (0+255),b
  3164  000C22  D001               	goto	l5571
  3165  000C24  D033               	goto	l5577
  3166  000C26                     l5571:
  3167                           
  3168                           ; BSR set to: 0
  3169                           ;usb_device.c: 346: {
  3170                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
  3171  000C26  0100               	movlb	0	; () banked
  3172  000C28  51E1               	movf	USBDeviceInit@i& (0+255),w,b
  3173  000C2A  0D02               	mullw	2
  3174  000C2C  0E6E               	movlw	low _pBDTEntryIn
  3175  000C2E  24F3               	addwf	prodl,w,c
  3176  000C30  6ED9               	movwf	fsr2l,c
  3177  000C32  0E00               	movlw	high _pBDTEntryIn
  3178  000C34  20F4               	addwfc	prodh,w,c
  3179  000C36  6EDA               	movwf	fsr2h,c
  3180  000C38  0E00               	movlw	0
  3181  000C3A  6EDE               	movwf	postinc2,c
  3182  000C3C  0E00               	movlw	0
  3183  000C3E  6EDD               	movwf	postdec2,c
  3184                           
  3185                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
  3186  000C40  0100               	movlb	0	; () banked
  3187  000C42  51E1               	movf	USBDeviceInit@i& (0+255),w,b
  3188  000C44  0D02               	mullw	2
  3189  000C46  0E74               	movlw	low _pBDTEntryOut
  3190  000C48  24F3               	addwf	prodl,w,c
  3191  000C4A  6ED9               	movwf	fsr2l,c
  3192  000C4C  0E00               	movlw	high _pBDTEntryOut
  3193  000C4E  20F4               	addwfc	prodh,w,c
  3194  000C50  6EDA               	movwf	fsr2h,c
  3195  000C52  0E00               	movlw	0
  3196  000C54  6EDE               	movwf	postinc2,c
  3197  000C56  0E00               	movlw	0
  3198  000C58  6EDD               	movwf	postdec2,c
  3199                           
  3200                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
  3201  000C5A  0100               	movlb	0	; () banked
  3202  000C5C  51E1               	movf	USBDeviceInit@i& (0+255),w,b
  3203  000C5E  0D01               	mullw	1
  3204  000C60  0E87               	movlw	low _ep_data_in
  3205  000C62  24F3               	addwf	prodl,w,c
  3206  000C64  6ED9               	movwf	fsr2l,c
  3207  000C66  0E00               	movlw	high _ep_data_in
  3208  000C68  20F4               	addwfc	prodh,w,c
  3209  000C6A  6EDA               	movwf	fsr2h,c
  3210  000C6C  0E00               	movlw	0
  3211  000C6E  6EDF               	movwf	indf2,c
  3212                           
  3213                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
  3214  000C70  0100               	movlb	0	; () banked
  3215  000C72  51E1               	movf	USBDeviceInit@i& (0+255),w,b
  3216  000C74  0D01               	mullw	1
  3217  000C76  0E84               	movlw	low _ep_data_out
  3218  000C78  24F3               	addwf	prodl,w,c
  3219  000C7A  6ED9               	movwf	fsr2l,c
  3220  000C7C  0E00               	movlw	high _ep_data_out
  3221  000C7E  20F4               	addwfc	prodh,w,c
  3222  000C80  6EDA               	movwf	fsr2h,c
  3223  000C82  0E00               	movlw	0
  3224  000C84  6EDF               	movwf	indf2,c
  3225                           
  3226                           ; BSR set to: 0
  3227  000C86  0100               	movlb	0	; () banked
  3228  000C88  2BE1               	incf	USBDeviceInit@i& (0+255),f,b
  3229  000C8A  D7C8               	goto	l5567
  3230  000C8C                     l5577:
  3231                           
  3232                           ; BSR set to: 0
  3233                           ;usb_device.c: 351: }
  3234                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  3235  000C8C  0E08               	movlw	8
  3236  000C8E  0100               	movlb	0	; () banked
  3237  000C90  6F6E               	movwf	_pBDTEntryIn& (0+255),b
  3238  000C92  0E04               	movlw	4
  3239  000C94  0100               	movlb	0	; () banked
  3240  000C96  6F6F               	movwf	(_pBDTEntryIn+1)& (0+255),b
  3241                           
  3242                           ; BSR set to: 0
  3243                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
  3244  000C98  0E16               	movlw	22
  3245  000C9A  6E70               	movwf	3952,c	;volatile
  3246                           
  3247                           ; BSR set to: 0
  3248                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  3249  000C9C  0E04               	movlw	4
  3250  000C9E  0104               	movlb	4	; () banked
  3251  000CA0  6F03               	movwf	3,b	;volatile
  3252  000CA2  0E30               	movlw	48
  3253  000CA4  6F02               	movwf	2,b	;volatile
  3254                           
  3255                           ; BSR set to: 4
  3256                           ;usb_device.c: 359: BDT[0].CNT = 8;
  3257  000CA6  0E08               	movlw	8
  3258  000CA8  0104               	movlb	4	; () banked
  3259  000CAA  6F01               	movwf	1,b	;volatile
  3260                           
  3261                           ; BSR set to: 4
  3262                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
  3263  000CAC  0E04               	movlw	4
  3264  000CAE  0104               	movlb	4	; () banked
  3265  000CB0  6F00               	movwf	0,b	;volatile
  3266                           
  3267                           ; BSR set to: 4
  3268                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
  3269  000CB2  0104               	movlb	4	; () banked
  3270  000CB4  8F00               	bsf	0,7,b	;volatile
  3271                           
  3272                           ; BSR set to: 4
  3273                           ;usb_device.c: 364: USBActiveConfiguration = 0;
  3274  000CB6  0E00               	movlw	0
  3275  000CB8  6E53               	movwf	_USBActiveConfiguration,c	;volatile
  3276                           
  3277                           ; BSR set to: 4
  3278                           ;usb_device.c: 366: USB1msTickCount = 0;
  3279  000CBA  0E00               	movlw	0
  3280  000CBC  6E2C               	movwf	_USB1msTickCount,c	;volatile
  3281  000CBE  0E00               	movlw	0
  3282  000CC0  6E2D               	movwf	_USB1msTickCount+1,c	;volatile
  3283  000CC2  0E00               	movlw	0
  3284  000CC4  6E2E               	movwf	_USB1msTickCount+2,c	;volatile
  3285  000CC6  0E00               	movlw	0
  3286  000CC8  6E2F               	movwf	_USB1msTickCount+3,c	;volatile
  3287                           
  3288                           ; BSR set to: 4
  3289                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
  3290  000CCA  0E00               	movlw	0
  3291  000CCC  0100               	movlb	0	; () banked
  3292  000CCE  6F91               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
  3293                           
  3294                           ; BSR set to: 0
  3295                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
  3296  000CD0  0E00               	movlw	0
  3297  000CD2  6E4E               	movwf	_USBDeviceState,c	;volatile
  3298                           
  3299                           ; BSR set to: 0
  3300  000CD4  0012               	return		;funcret
  3301  000CD6                     __end_of_USBDeviceInit:
  3302                           	opt stack 0
  3303                           tblptru	equ	0xFF8
  3304                           tblptrh	equ	0xFF7
  3305                           tblptrl	equ	0xFF6
  3306                           tablat	equ	0xFF5
  3307                           prodh	equ	0xFF4
  3308                           prodl	equ	0xFF3
  3309                           intcon	equ	0xFF2
  3310                           postinc0	equ	0xFEE
  3311                           wreg	equ	0xFE8
  3312                           postdec1	equ	0xFE5
  3313                           fsr1l	equ	0xFE1
  3314                           indf2	equ	0xFDF
  3315                           postinc2	equ	0xFDE
  3316                           postdec2	equ	0xFDD
  3317                           fsr2h	equ	0xFDA
  3318                           fsr2l	equ	0xFD9
  3319                           status	equ	0xFD8
  3320                           
  3321 ;; *************** function _memset *****************
  3322 ;; Defined at:
  3323 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memset.c"
  3324 ;; Parameters:    Size  Location     Type
  3325 ;;  p1              2   17[BANK0 ] PTR void 
  3326 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  3327 ;;  c               2   19[BANK0 ] int 
  3328 ;;  n               2   21[BANK0 ] unsigned int 
  3329 ;; Auto vars:     Size  Location     Type
  3330 ;;  p               2   23[BANK0 ] PTR unsigned char 
  3331 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  3332 ;; Return value:  Size  Location     Type
  3333 ;;                  2   17[BANK0 ] PTR void 
  3334 ;; Registers used:
  3335 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3336 ;; Tracked objects:
  3337 ;;		On entry : 0/0
  3338 ;;		On exit  : 0/0
  3339 ;;		Unchanged: 0/0
  3340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3341 ;;      Params:         0       6       0       0       0       0       0       0       0
  3342 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3343 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3344 ;;      Totals:         0       8       0       0       0       0       0       0       0
  3345 ;;Total ram usage:        8 bytes
  3346 ;; Hardware stack levels used:    1
  3347 ;; Hardware stack levels required when called:   12
  3348 ;; This function calls:
  3349 ;;		Nothing
  3350 ;; This function is called by:
  3351 ;;		_USBDeviceInit
  3352 ;; This function uses a non-reentrant model
  3353 ;;
  3354                           
  3355                           	psect	text14
  3356  0029FC                     __ptext14:
  3357                           	opt stack 0
  3358  0029FC                     _memset:
  3359                           	opt stack 16
  3360                           
  3361                           ; BSR set to: 0
  3362                           ;incstack = 0
  3363  0029FC  C0D9  F0DF         	movff	memset@p1,memset@p
  3364  002A00  C0DA  F0E0         	movff	memset@p1+1,memset@p+1
  3365  002A04  D009               	goto	l5385
  3366  002A06                     l5381:
  3367  002A06  C0DF  FFD9         	movff	memset@p,fsr2l
  3368  002A0A  C0E0  FFDA         	movff	memset@p+1,fsr2h
  3369  002A0E  C0DB  FFDF         	movff	memset@c,indf2
  3370  002A12  0100               	movlb	0	; () banked
  3371  002A14  4BDF               	infsnz	memset@p& (0+255),f,b
  3372  002A16  2BE0               	incf	(memset@p+1)& (0+255),f,b
  3373  002A18                     l5385:
  3374  002A18  0100               	movlb	0	; () banked
  3375  002A1A  07DD               	decf	memset@n& (0+255),f,b
  3376  002A1C  A0D8               	btfss	status,0,c
  3377  002A1E  07DE               	decf	(memset@n+1)& (0+255),f,b
  3378  002A20  0100               	movlb	0	; () banked
  3379  002A22  29DD               	incf	memset@n& (0+255),w,b
  3380  002A24  E1F0               	bnz	l5381
  3381  002A26  0100               	movlb	0	; () banked
  3382  002A28  29DE               	incf	(memset@n+1)& (0+255),w,b
  3383  002A2A  B4D8               	btfsc	status,2,c
  3384  002A2C  0012               	return	
  3385  002A2E  D7EB               	goto	l5381
  3386  002A30                     __end_of_memset:
  3387                           	opt stack 0
  3388                           tblptru	equ	0xFF8
  3389                           tblptrh	equ	0xFF7
  3390                           tblptrl	equ	0xFF6
  3391                           tablat	equ	0xFF5
  3392                           prodh	equ	0xFF4
  3393                           prodl	equ	0xFF3
  3394                           intcon	equ	0xFF2
  3395                           postinc0	equ	0xFEE
  3396                           wreg	equ	0xFE8
  3397                           postdec1	equ	0xFE5
  3398                           fsr1l	equ	0xFE1
  3399                           indf2	equ	0xFDF
  3400                           postinc2	equ	0xFDE
  3401                           postdec2	equ	0xFDD
  3402                           fsr2h	equ	0xFDA
  3403                           fsr2l	equ	0xFD9
  3404                           status	equ	0xFD8
  3405                           
  3406 ;; *************** function _USBDeviceAttach *****************
  3407 ;; Defined at:
  3408 ;;		line 1352 in file "../USBConverter/mla/v2017_03_06/framework/usb/src/usb_device.c"
  3409 ;; Parameters:    Size  Location     Type
  3410 ;;		None
  3411 ;; Auto vars:     Size  Location     Type
  3412 ;;		None
  3413 ;; Return value:  Size  Location     Type
  3414 ;;                  1    wreg      void 
  3415 ;; Registers used:
  3416 ;;		wreg, status,2
  3417 ;; Tracked objects:
  3418 ;;		On entry : 0/0
  3419 ;;		On exit  : 0/0
  3420 ;;		Unchanged: 0/0
  3421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3422 ;;      Params:         0       0       0       0       0       0       0       0       0
  3423 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3424 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3425 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3426 ;;Total ram usage:        0 bytes
  3427 ;; Hardware stack levels used:    1
  3428 ;; Hardware stack levels required when called:   12
  3429 ;; This function calls:
  3430 ;;		Nothing
  3431 ;; This function is called by:
  3432 ;;		_bootKeypadAndComPort
  3433 ;; This function uses a non-reentrant model
  3434 ;;
  3435                           
  3436                           	psect	text15
  3437  002A62                     __ptext15:
  3438                           	opt stack 0
  3439  002A62                     _USBDeviceAttach:
  3440                           	opt stack 17
  3441                           
  3442                           ;usb_device.c: 1356: {
  3443                           ;usb_device.c: 1357: if(1 == 1)
  3444                           
  3445                           ; BSR set to: 0
  3446                           ;incstack = 0
  3447  002A62  504E               	movf	_USBDeviceState,w,c	;volatile
  3448  002A64  A4D8               	btfss	status,2,c
  3449  002A66  0012               	return	
  3450                           
  3451                           ;usb_device.c: 1358: {
  3452                           ;usb_device.c: 1360: UCON = 0;
  3453  002A68  0E00               	movlw	0
  3454  002A6A  6E6D               	movwf	3949,c	;volatile
  3455                           
  3456                           ;usb_device.c: 1363: UIE = 0;
  3457  002A6C  0E00               	movlw	0
  3458  002A6E  6E69               	movwf	3945,c	;volatile
  3459                           
  3460                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  3461  002A70  0E16               	movlw	22
  3462  002A72  6E6F               	movwf	3951,c	;volatile
  3463  002A74  0E9F               	movlw	159
  3464  002A76  6E6B               	movwf	3947,c	;volatile
  3465  002A78  0E7B               	movlw	123
  3466  002A7A  6E69               	movwf	3945,c	;volatile
  3467                           
  3468                           ;usb_device.c: 1369: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
  3469  002A7C  8ED0               	bsf	4048,7,c	;volatile
  3470  002A7E  8AA2               	bsf	4002,5,c	;volatile
  3471  002A80  8AA0               	bsf	4000,5,c	;volatile
  3472  002A82  8EF2               	bsf	intcon,7,c	;volatile
  3473                           
  3474                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  3475  002A84  D001               	goto	l366
  3476  002A86                     l367:
  3477  002A86  866D               	bsf	3949,3,c	;volatile
  3478  002A88                     l366:
  3479  002A88  A66D               	btfss	3949,3,c	;volatile
  3480  002A8A  D7FD               	goto	l367
  3481                           
  3482                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
  3483  002A8C  0E01               	movlw	1
  3484  002A8E  6E4E               	movwf	_USBDeviceState,c	;volatile
  3485  002A90  0012               	return	
  3486  002A92                     __end_of_USBDeviceAttach:
  3487                           	opt stack 0
  3488                           tblptru	equ	0xFF8
  3489                           tblptrh	equ	0xFF7
  3490                           tblptrl	equ	0xFF6
  3491                           tablat	equ	0xFF5
  3492                           prodh	equ	0xFF4
  3493                           prodl	equ	0xFF3
  3494                           intcon	equ	0xFF2
  3495                           postinc0	equ	0xFEE
  3496                           wreg	equ	0xFE8
  3497                           postdec1	equ	0xFE5
  3498                           fsr1l	equ	0xFE1
  3499                           indf2	equ	0xFDF
  3500                           postinc2	equ	0xFDE
  3501                           postdec2	equ	0xFDD
  3502                           fsr2h	equ	0xFDA
  3503                           fsr2l	equ	0xFD9
  3504                           status	equ	0xFD8
  3505                           
  3506 ;; *************** function _SYSTEM_Initialize *****************
  3507 ;; Defined at:
  3508 ;;		line 35 in file "../USBConverter/LPC_FSUSB-CDC-X/system.c"
  3509 ;; Parameters:    Size  Location     Type
  3510 ;;  state           1    wreg     enum E3323
  3511 ;; Auto vars:     Size  Location     Type
  3512 ;;  state           1   17[BANK0 ] enum E3323
  3513 ;; Return value:  Size  Location     Type
  3514 ;;                  1    wreg      void 
  3515 ;; Registers used:
  3516 ;;		wreg, status,2, status,0
  3517 ;; Tracked objects:
  3518 ;;		On entry : 0/0
  3519 ;;		On exit  : 0/0
  3520 ;;		Unchanged: 0/0
  3521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3522 ;;      Params:         0       0       0       0       0       0       0       0       0
  3523 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3524 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3525 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3526 ;;Total ram usage:        1 bytes
  3527 ;; Hardware stack levels used:    1
  3528 ;; Hardware stack levels required when called:   12
  3529 ;; This function calls:
  3530 ;;		Nothing
  3531 ;; This function is called by:
  3532 ;;		_bootKeypadAndComPort
  3533 ;; This function uses a non-reentrant model
  3534 ;;
  3535                           
  3536                           	psect	text16
  3537  002990                     __ptext16:
  3538                           	opt stack 0
  3539  002990                     _SYSTEM_Initialize:
  3540                           	opt stack 17
  3541                           
  3542                           ;incstack = 0
  3543                           ;SYSTEM_Initialize@state stored from wreg
  3544  002990  0100               	movlb	0	; () banked
  3545  002992  6FD9               	movwf	SYSTEM_Initialize@state& (0+255),b
  3546                           
  3547                           ;system.c: 37: switch(state)
  3548  002994  D00E               	goto	l5523
  3549  002996                     l60:
  3550                           
  3551                           ; BSR set to: 0
  3552                           ;system.c: 41: TRISA = 0b11111111;
  3553  002996  6892               	setf	3986,c	;volatile
  3554                           
  3555                           ; BSR set to: 0
  3556                           ;system.c: 42: TRISB = 0b00001111;
  3557  002998  0E0F               	movlw	15
  3558  00299A  6E93               	movwf	3987,c	;volatile
  3559                           
  3560                           ;system.c: 43: TRISC = 0b10000000;
  3561  00299C  0E80               	movlw	128
  3562  00299E  6E94               	movwf	3988,c	;volatile
  3563                           
  3564                           ;system.c: 46: LATA = 0x00;
  3565  0029A0  0E00               	movlw	0
  3566  0029A2  6E89               	movwf	3977,c	;volatile
  3567                           
  3568                           ;system.c: 47: LATB = 0xF0;
  3569  0029A4  0EF0               	movlw	240
  3570  0029A6  6E8A               	movwf	3978,c	;volatile
  3571                           
  3572                           ;system.c: 48: LATC = 0b10000000;
  3573  0029A8  0E80               	movlw	128
  3574  0029AA  6E8B               	movwf	3979,c	;volatile
  3575                           
  3576                           ; BSR set to: 0
  3577                           ;system.c: 50: ADCON1 |= 0x0F;
  3578  0029AC  0E0F               	movlw	15
  3579  0029AE  12C1               	iorwf	4033,f,c	;volatile
  3580                           
  3581                           ; BSR set to: 0
  3582                           ;system.c: 58: }
  3583                           
  3584                           ; BSR set to: 0
  3585                           ;system.c: 57: break;
  3586                           
  3587                           ;system.c: 56: case SYSTEM_STATE_USB_RESUME:
  3588                           
  3589                           ; BSR set to: 0
  3590                           ;system.c: 54: break;
  3591                           
  3592                           ;system.c: 53: case SYSTEM_STATE_USB_SUSPEND:
  3593                           
  3594                           ;system.c: 51: break;
  3595  0029B0  0012               	return	
  3596  0029B2                     l5523:
  3597  0029B2  0100               	movlb	0	; () banked
  3598  0029B4  51D9               	movf	SYSTEM_Initialize@state& (0+255),w,b
  3599                           
  3600                           ; Switch size 1, requested type "space"
  3601                           ; Number of cases is 3, Range of values is 0 to 2
  3602                           ; switch strategies available:
  3603                           ; Name         Instructions Cycles
  3604                           ; simple_byte           10     6 (average)
  3605                           ;	Chosen strategy is simple_byte
  3606  0029B6  0A00               	xorlw	0	; case 0
  3607  0029B8  B4D8               	btfsc	status,2,c
  3608  0029BA  D7ED               	goto	l60
  3609  0029BC  0A01               	xorlw	1	; case 1
  3610  0029BE  B4D8               	btfsc	status,2,c
  3611  0029C0  0012               	return	
  3612  0029C2  0A03               	xorlw	3	; case 2
  3613  0029C4  0012               	return	
  3614  0029C6                     __end_of_SYSTEM_Initialize:
  3615                           	opt stack 0
  3616                           tblptru	equ	0xFF8
  3617                           tblptrh	equ	0xFF7
  3618                           tblptrl	equ	0xFF6
  3619                           tablat	equ	0xFF5
  3620                           prodh	equ	0xFF4
  3621                           prodl	equ	0xFF3
  3622                           intcon	equ	0xFF2
  3623                           postinc0	equ	0xFEE
  3624                           wreg	equ	0xFE8
  3625                           postdec1	equ	0xFE5
  3626                           fsr1l	equ	0xFE1
  3627                           indf2	equ	0xFDF
  3628                           postinc2	equ	0xFDE
  3629                           postdec2	equ	0xFDD
  3630                           fsr2h	equ	0xFDA
  3631                           fsr2l	equ	0xFD9
  3632                           status	equ	0xFD8
  3633                           
  3634 ;; *************** function _CDC_Routine *****************
  3635 ;; Defined at:
  3636 ;;		line 50 in file "../USBConverter/LPC_FSUSB-CDC-X/main_cdc.c"
  3637 ;; Parameters:    Size  Location     Type
  3638 ;;		None
  3639 ;; Auto vars:     Size  Location     Type
  3640 ;;		None
  3641 ;; Return value:  Size  Location     Type
  3642 ;;                  1    wreg      void 
  3643 ;; Registers used:
  3644 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3645 ;; Tracked objects:
  3646 ;;		On entry : 0/0
  3647 ;;		On exit  : 0/0
  3648 ;;		Unchanged: 0/0
  3649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3650 ;;      Params:         0       0       0       0       0       0       0       0       0
  3651 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3652 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3653 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3654 ;;Total ram usage:        0 bytes
  3655 ;; Hardware stack levels used:    1
  3656 ;; Hardware stack levels required when called:   15
  3657 ;; This function calls:
  3658 ;;		_APP_DeviceCDCEmulatorTasks
  3659 ;; This function is called by:
  3660 ;;		_bootKeypadAndComPort
  3661 ;; This function uses a non-reentrant model
  3662 ;;
  3663                           
  3664                           	psect	text17
  3665  002B88                     __ptext17:
  3666                           	opt stack 0
  3667  002B88                     _CDC_Routine:
  3668                           	opt stack 14
  3669                           
  3670                           ;main_cdc.c: 55: if( USBDeviceState < CONFIGURED_STATE )
  3671                           
  3672                           ; BSR set to: 0
  3673                           ;incstack = 0
  3674  002B88  0E20               	movlw	32
  3675  002B8A  604E               	cpfslt	_USBDeviceState,c	;volatile
  3676  002B8C  D001               	goto	l13
  3677  002B8E  0012               	return	
  3678  002B90                     l13:
  3679                           
  3680                           ;main_cdc.c: 59: }
  3681                           ;main_cdc.c: 65: if( UCONbits.SUSPND== 1 )
  3682  002B90  B26D               	btfsc	3949,1,c	;volatile
  3683  002B92  0012               	return	
  3684                           
  3685                           ;main_cdc.c: 69: }
  3686                           ;main_cdc.c: 72: APP_DeviceCDCEmulatorTasks();
  3687                           
  3688                           ;main_cdc.c: 66: {
  3689                           ;main_cdc.c: 68: return;
  3690  002B94  EC53  F00E         	call	_APP_DeviceCDCEmulatorTasks	;wreg free
  3691  002B98  0012               	return		;funcret
  3692  002B9A                     __end_of_CDC_Routine:
  3693                           	opt stack 0
  3694                           tblptru	equ	0xFF8
  3695                           tblptrh	equ	0xFF7
  3696                           tblptrl	equ	0xFF6
  3697                           tablat	equ	0xFF5
  3698                           prodh	equ	0xFF4
  3699                           prodl	equ	0xFF3
  3700                           intcon	equ	0xFF2
  3701                           postinc0	equ	0xFEE
  3702                           wreg	equ	0xFE8
  3703                           postdec1	equ	0xFE5
  3704                           fsr1l	equ	0xFE1
  3705                           indf2	equ	0xFDF
  3706                           postinc2	equ	0xFDE
  3707                           postdec2	equ	0xFDD
  3708                           fsr2h	equ	0xFDA
  3709                           fsr2l	equ	0xFD9
  3710                           status	equ	0xFD8
  3711                           
  3712 ;; *************** function _APP_DeviceCDCEmulatorTasks *****************
  3713 ;; Defined at:
  3714 ;;		line 102 in file "../USBConverter/mla/v2017_03_06/framework/usb/src/app_device_cdc_to_uart.c"
  3715 ;; Parameters:    Size  Location     Type
  3716 ;;		None
  3717 ;; Auto vars:     Size  Location     Type
  3718 ;;		None
  3719 ;; Return value:  Size  Location     Type
  3720 ;;                  1    wreg      void 
  3721 ;; Registers used:
  3722 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3723 ;; Tracked objects:
  3724 ;;		On entry : 0/0
  3725 ;;		On exit  : 0/0
  3726 ;;		Unchanged: 0/0
  3727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3728 ;;      Params:         0       0       0       0       0       0       0       0       0
  3729 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3730 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3731 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3732 ;;Total ram usage:        0 bytes
  3733 ;; Hardware stack levels used:    1
  3734 ;; Hardware stack levels required when called:   14
  3735 ;; This function calls:
  3736 ;;		_CDCTxService
  3737 ;;		_USART_getcUSART
  3738 ;;		_USART_putcUSART
  3739 ;;		_getsUSBUSART
  3740 ;;		_putUSBUSART
  3741 ;; This function is called by:
  3742 ;;		_CDC_Routine
  3743 ;; This function uses a non-reentrant model
  3744 ;;
  3745                           
  3746                           	psect	text18
  3747  001CA6                     __ptext18:
  3748                           	opt stack 0
  3749  001CA6                     _APP_DeviceCDCEmulatorTasks:
  3750                           	opt stack 14
  3751                           
  3752                           ;app_device_cdc_to_uart.c: 107: if( USBDeviceState < CONFIGURED_STATE )
  3753                           
  3754                           ;incstack = 0
  3755  001CA6  0E20               	movlw	32
  3756  001CA8  604E               	cpfslt	_USBDeviceState,c	;volatile
  3757  001CAA  D001               	goto	l126
  3758  001CAC  0012               	return	
  3759  001CAE                     l126:
  3760                           
  3761                           ;app_device_cdc_to_uart.c: 110: }
  3762                           ;app_device_cdc_to_uart.c: 116: if( UCONbits.SUSPND== 1 )
  3763  001CAE  B26D               	btfsc	3949,1,c	;volatile
  3764  001CB0  0012               	return	
  3765                           
  3766                           ;app_device_cdc_to_uart.c: 119: }
  3767                           ;app_device_cdc_to_uart.c: 121: if (RS232_Out_Data_Rdy == 0)
  3768                           
  3769                           ;app_device_cdc_to_uart.c: 117: {
  3770                           ;app_device_cdc_to_uart.c: 118: return;
  3771  001CB2  5049               	movf	_RS232_Out_Data_Rdy,w,c
  3772  001CB4  A4D8               	btfss	status,2,c
  3773  001CB6  D013               	goto	l129
  3774                           
  3775                           ;app_device_cdc_to_uart.c: 122: {
  3776                           ;app_device_cdc_to_uart.c: 123: LastRS232Out = getsUSBUSART(RS232_Out_Data,64);
  3777  001CB8  0E00               	movlw	low _RS232_Out_Data
  3778  001CBA  0100               	movlb	0	; () banked
  3779  001CBC  6FE4               	movwf	getsUSBUSART@buffer& (0+255),b
  3780  001CBE  0E01               	movlw	high _RS232_Out_Data
  3781  001CC0  0100               	movlb	0	; () banked
  3782  001CC2  6FE5               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
  3783  001CC4  0E40               	movlw	64
  3784  001CC6  0100               	movlb	0	; () banked
  3785  001CC8  6FE6               	movwf	getsUSBUSART@len& (0+255),b
  3786  001CCA  EC17  F00F         	call	_getsUSBUSART	;wreg free
  3787  001CCE  6E4B               	movwf	_LastRS232Out,c
  3788                           
  3789                           ;app_device_cdc_to_uart.c: 124: if(LastRS232Out > 0)
  3790  001CD0  504B               	movf	_LastRS232Out,w,c
  3791  001CD2  B4D8               	btfsc	status,2,c
  3792  001CD4  D004               	goto	l129
  3793                           
  3794                           ;app_device_cdc_to_uart.c: 125: {
  3795                           ;app_device_cdc_to_uart.c: 126: RS232_Out_Data_Rdy = 1;
  3796  001CD6  0E01               	movlw	1
  3797  001CD8  6E49               	movwf	_RS232_Out_Data_Rdy,c
  3798                           
  3799                           ;app_device_cdc_to_uart.c: 127: RS232cp = 0;
  3800  001CDA  0E00               	movlw	0
  3801  001CDC  6E4A               	movwf	_RS232cp,c
  3802  001CDE                     l129:
  3803                           
  3804                           ;app_device_cdc_to_uart.c: 128: }
  3805                           ;app_device_cdc_to_uart.c: 129: }
  3806                           ;app_device_cdc_to_uart.c: 133: if(RS232_Out_Data_Rdy && TXSTAbits.TRMT)
  3807  001CDE  5049               	movf	_RS232_Out_Data_Rdy,w,c
  3808  001CE0  A4D8               	btfss	status,2,c
  3809  001CE2  A2AC               	btfss	4012,1,c	;volatile
  3810  001CE4  D012               	goto	l5359
  3811                           
  3812                           ;app_device_cdc_to_uart.c: 134: {
  3813                           ;app_device_cdc_to_uart.c: 136: USART_putcUSART(RS232_Out_Data[RS232cp]);
  3814  001CE6  504A               	movf	_RS232cp,w,c
  3815  001CE8  0D01               	mullw	1
  3816  001CEA  0E00               	movlw	low _RS232_Out_Data
  3817  001CEC  24F3               	addwf	prodl,w,c
  3818  001CEE  6ED9               	movwf	fsr2l,c
  3819  001CF0  0E01               	movlw	high _RS232_Out_Data
  3820  001CF2  20F4               	addwfc	prodh,w,c
  3821  001CF4  6EDA               	movwf	fsr2h,c
  3822  001CF6  50DF               	movf	indf2,w,c
  3823  001CF8  ECCD  F015         	call	_USART_putcUSART
  3824                           
  3825                           ;app_device_cdc_to_uart.c: 137: ++RS232cp;
  3826  001CFC  2A4A               	incf	_RS232cp,f,c
  3827                           
  3828                           ;app_device_cdc_to_uart.c: 138: if (RS232cp == LastRS232Out)
  3829  001CFE  504B               	movf	_LastRS232Out,w,c
  3830  001D00  184A               	xorwf	_RS232cp,w,c
  3831  001D02  A4D8               	btfss	status,2,c
  3832  001D04  D002               	goto	l5359
  3833                           
  3834                           ;app_device_cdc_to_uart.c: 139: RS232_Out_Data_Rdy = 0;
  3835  001D06  0E00               	movlw	0
  3836  001D08  6E49               	movwf	_RS232_Out_Data_Rdy,c
  3837  001D0A                     l5359:
  3838                           
  3839                           ;app_device_cdc_to_uart.c: 140: }
  3840                           ;app_device_cdc_to_uart.c: 144: if(PIR1bits.RCIF && (NextUSBOut < (64 - 1))){
  3841  001D0A  AA9E               	btfss	3998,5,c	;volatile
  3842  001D0C  D019               	goto	l5369
  3843  001D0E  0E3F               	movlw	63
  3844  001D10  604C               	cpfslt	_NextUSBOut,c
  3845  001D12  D016               	goto	l5369
  3846                           
  3847                           ;app_device_cdc_to_uart.c: 145: USB_Out_Buffer[NextUSBOut] = USART_getcUSART();
  3848  001D14  504C               	movf	_NextUSBOut,w,c
  3849  001D16  0D01               	mullw	1
  3850  001D18  0E40               	movlw	low _USB_Out_Buffer
  3851  001D1A  24F3               	addwf	prodl,w,c
  3852  001D1C  6ED9               	movwf	fsr2l,c
  3853  001D1E  0E01               	movlw	high _USB_Out_Buffer
  3854  001D20  20F4               	addwfc	prodh,w,c
  3855  001D22  6EDA               	movwf	fsr2h,c
  3856  001D24  ECAD  F015         	call	_USART_getcUSART	;wreg free
  3857  001D28  6EDF               	movwf	indf2,c
  3858                           
  3859                           ;app_device_cdc_to_uart.c: 146: ++NextUSBOut;
  3860  001D2A  2A4C               	incf	_NextUSBOut,f,c
  3861                           
  3862                           ;app_device_cdc_to_uart.c: 147: USB_Out_Buffer[NextUSBOut] = 0;
  3863  001D2C  504C               	movf	_NextUSBOut,w,c
  3864  001D2E  0D01               	mullw	1
  3865  001D30  0E40               	movlw	low _USB_Out_Buffer
  3866  001D32  24F3               	addwf	prodl,w,c
  3867  001D34  6ED9               	movwf	fsr2l,c
  3868  001D36  0E01               	movlw	high _USB_Out_Buffer
  3869  001D38  20F4               	addwfc	prodh,w,c
  3870  001D3A  6EDA               	movwf	fsr2h,c
  3871  001D3C  0E00               	movlw	0
  3872  001D3E  6EDF               	movwf	indf2,c
  3873  001D40                     l5369:
  3874                           
  3875                           ;app_device_cdc_to_uart.c: 148: }
  3876                           ;app_device_cdc_to_uart.c: 153: if(((cdc_trf_state == 0)) && (NextUSBOut > 0))
  3877  001D40  504D               	movf	_cdc_trf_state,w,c
  3878  001D42  A4D8               	btfss	status,2,c
  3879  001D44  D00F               	goto	l5377
  3880  001D46  504C               	movf	_NextUSBOut,w,c
  3881  001D48  B4D8               	btfsc	status,2,c
  3882  001D4A  D00C               	goto	l5377
  3883                           
  3884                           ;app_device_cdc_to_uart.c: 154: {
  3885                           ;app_device_cdc_to_uart.c: 155: putUSBUSART(&USB_Out_Buffer[0], NextUSBOut);
  3886  001D4C  0E40               	movlw	low _USB_Out_Buffer
  3887  001D4E  0100               	movlb	0	; () banked
  3888  001D50  6FD9               	movwf	putUSBUSART@data& (0+255),b
  3889  001D52  0E01               	movlw	high _USB_Out_Buffer
  3890  001D54  0100               	movlb	0	; () banked
  3891  001D56  6FDA               	movwf	(putUSBUSART@data+1)& (0+255),b
  3892  001D58  C04C  F0DB         	movff	_NextUSBOut,putUSBUSART@length
  3893  001D5C  EC9D  F015         	call	_putUSBUSART	;wreg free
  3894                           
  3895                           ;app_device_cdc_to_uart.c: 156: NextUSBOut = 0;
  3896  001D60  0E00               	movlw	0
  3897  001D62  6E4C               	movwf	_NextUSBOut,c
  3898  001D64                     l5377:
  3899                           
  3900                           ;app_device_cdc_to_uart.c: 157: }
  3901                           ;app_device_cdc_to_uart.c: 159: CDCTxService();
  3902  001D64  ECB1  F007         	call	_CDCTxService	;wreg free
  3903  001D68  0012               	return		;funcret
  3904  001D6A                     __end_of_APP_DeviceCDCEmulatorTasks:
  3905                           	opt stack 0
  3906                           tblptru	equ	0xFF8
  3907                           tblptrh	equ	0xFF7
  3908                           tblptrl	equ	0xFF6
  3909                           tablat	equ	0xFF5
  3910                           prodh	equ	0xFF4
  3911                           prodl	equ	0xFF3
  3912                           intcon	equ	0xFF2
  3913                           postinc0	equ	0xFEE
  3914                           wreg	equ	0xFE8
  3915                           postdec1	equ	0xFE5
  3916                           fsr1l	equ	0xFE1
  3917                           indf2	equ	0xFDF
  3918                           postinc2	equ	0xFDE
  3919                           postdec2	equ	0xFDD
  3920                           fsr2h	equ	0xFDA
  3921                           fsr2l	equ	0xFD9
  3922                           status	equ	0xFD8
  3923                           
  3924 ;; *************** function _putUSBUSART *****************
  3925 ;; Defined at:
  3926 ;;		line 531 in file "../USBConverter/mla/v2017_03_06/framework/usb/src/usb_device_cdc.c"
  3927 ;; Parameters:    Size  Location     Type
  3928 ;;  data            2   17[BANK0 ] PTR unsigned char 
  3929 ;;		 -> USB_Out_Buffer(64), 
  3930 ;;  length          1   19[BANK0 ] unsigned char 
  3931 ;; Auto vars:     Size  Location     Type
  3932 ;;		None
  3933 ;; Return value:  Size  Location     Type
  3934 ;;                  1    wreg      void 
  3935 ;; Registers used:
  3936 ;;		wreg, status,2, status,0
  3937 ;; Tracked objects:
  3938 ;;		On entry : 0/0
  3939 ;;		On exit  : 0/0
  3940 ;;		Unchanged: 0/0
  3941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3942 ;;      Params:         0       3       0       0       0       0       0       0       0
  3943 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3944 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3945 ;;      Totals:         0       3       0       0       0       0       0       0       0
  3946 ;;Total ram usage:        3 bytes
  3947 ;; Hardware stack levels used:    1
  3948 ;; Hardware stack levels required when called:   12
  3949 ;; This function calls:
  3950 ;;		Nothing
  3951 ;; This function is called by:
  3952 ;;		_APP_DeviceCDCEmulatorTasks
  3953 ;; This function uses a non-reentrant model
  3954 ;;
  3955                           
  3956                           	psect	text19
  3957  002B3A                     __ptext19:
  3958                           	opt stack 0
  3959  002B3A                     _putUSBUSART:
  3960                           	opt stack 15
  3961                           
  3962                           ;usb_device_cdc.c: 556: {PIE2bits.USBIE = 0;};
  3963                           
  3964                           ;incstack = 0
  3965  002B3A  9AA0               	bcf	4000,5,c	;volatile
  3966                           
  3967                           ;usb_device_cdc.c: 557: if(cdc_trf_state == 0)
  3968  002B3C  504D               	movf	_cdc_trf_state,w,c
  3969  002B3E  A4D8               	btfss	status,2,c
  3970  002B40  D00A               	goto	l5267
  3971                           
  3972                           ;usb_device_cdc.c: 558: {
  3973                           ;usb_device_cdc.c: 559: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
  3974  002B42  C0D9  F081         	movff	putUSBUSART@data,_pCDCSrc
  3975  002B46  C0DA  F082         	movff	putUSBUSART@data+1,_pCDCSrc+1
  3976  002B4A  C0DB  F03D         	movff	putUSBUSART@length,_cdc_tx_len
  3977  002B4E  0E01               	movlw	1
  3978  002B50  6E3C               	movwf	_cdc_mem_type,c
  3979  002B52  0E01               	movlw	1
  3980  002B54  6E4D               	movwf	_cdc_trf_state,c
  3981  002B56                     l5267:
  3982                           
  3983                           ;usb_device_cdc.c: 560: }
  3984                           ;usb_device_cdc.c: 561: {PIE2bits.USBIE = 1;};
  3985  002B56  8AA0               	bsf	4000,5,c	;volatile
  3986  002B58  0012               	return		;funcret
  3987  002B5A                     __end_of_putUSBUSART:
  3988                           	opt stack 0
  3989                           tblptru	equ	0xFF8
  3990                           tblptrh	equ	0xFF7
  3991                           tblptrl	equ	0xFF6
  3992                           tablat	equ	0xFF5
  3993                           prodh	equ	0xFF4
  3994                           prodl	equ	0xFF3
  3995                           intcon	equ	0xFF2
  3996                           postinc0	equ	0xFEE
  3997                           wreg	equ	0xFE8
  3998                           postdec1	equ	0xFE5
  3999                           fsr1l	equ	0xFE1
  4000                           indf2	equ	0xFDF
  4001                           postinc2	equ	0xFDE
  4002                           postdec2	equ	0xFDD
  4003                           fsr2h	equ	0xFDA
  4004                           fsr2l	equ	0xFD9
  4005                           status	equ	0xFD8
  4006                           
  4007 ;; *************** function _getsUSBUSART *****************
  4008 ;; Defined at:
  4009 ;;		line 460 in file "../USBConverter/mla/v2017_03_06/framework/usb/src/usb_device_cdc.c"
  4010 ;; Parameters:    Size  Location     Type
  4011 ;;  buffer          2   28[BANK0 ] PTR unsigned char 
  4012 ;;		 -> RS232_Out_Data(64), 
  4013 ;;  len             1   30[BANK0 ] unsigned char 
  4014 ;; Auto vars:     Size  Location     Type
  4015 ;;		None
  4016 ;; Return value:  Size  Location     Type
  4017 ;;                  1    wreg      unsigned char 
  4018 ;; Registers used:
  4019 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4020 ;; Tracked objects:
  4021 ;;		On entry : 0/0
  4022 ;;		On exit  : 0/0
  4023 ;;		Unchanged: 0/0
  4024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4025 ;;      Params:         0       3       0       0       0       0       0       0       0
  4026 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4027 ;;      Temps:          0       1       0       0       0       0       0       0       0
  4028 ;;      Totals:         0       4       0       0       0       0       0       0       0
  4029 ;;Total ram usage:        4 bytes
  4030 ;; Hardware stack levels used:    1
  4031 ;; Hardware stack levels required when called:   13
  4032 ;; This function calls:
  4033 ;;		_USBTransferOnePacket
  4034 ;; This function is called by:
  4035 ;;		_APP_DeviceCDCEmulatorTasks
  4036 ;; This function uses a non-reentrant model
  4037 ;;
  4038                           
  4039                           	psect	text20
  4040  001E2E                     __ptext20:
  4041                           	opt stack 0
  4042  001E2E                     _getsUSBUSART:
  4043                           	opt stack 14
  4044                           
  4045                           ;usb_device_cdc.c: 462: cdc_rx_len = 0;
  4046                           
  4047                           ;incstack = 0
  4048  001E2E  0E00               	movlw	0
  4049  001E30  0100               	movlb	0	; () banked
  4050  001E32  6F90               	movwf	_cdc_rx_len& (0+255),b
  4051                           
  4052                           ; BSR set to: 0
  4053                           ;usb_device_cdc.c: 464: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
  4054  001E34  0100               	movlb	0	; () banked
  4055  001E36  518A               	movf	_CDCDataOutHandle& (0+255),w,b
  4056  001E38  0100               	movlb	0	; () banked
  4057  001E3A  118B               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
  4058  001E3C  B4D8               	btfsc	status,2,c
  4059  001E3E  D007               	goto	l5227
  4060                           
  4061                           ; BSR set to: 0
  4062  001E40  C08A  FFD9         	movff	_CDCDataOutHandle,fsr2l
  4063  001E44  C08B  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
  4064  001E48  0100               	movlb	0	; () banked
  4065  001E4A  BEDF               	btfsc	indf2,7,c
  4066  001E4C  D04B               	goto	l5241
  4067  001E4E                     l5227:
  4068                           
  4069                           ; BSR set to: 0
  4070                           ;usb_device_cdc.c: 465: {
  4071                           ;usb_device_cdc.c: 470: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
  4072  001E4E  0100               	movlb	0	; () banked
  4073  001E50  EE20 F001          	lfsr	2,1
  4074  001E54  518A               	movf	_CDCDataOutHandle& (0+255),w,b
  4075  001E56  26D9               	addwf	fsr2l,f,c
  4076  001E58  518B               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
  4077  001E5A  22DA               	addwfc	fsr2h,f,c
  4078  001E5C  0100               	movlb	0	; () banked
  4079  001E5E  51E6               	movf	getsUSBUSART@len& (0+255),w,b
  4080  001E60  5CDE               	subwf	postinc2,w,c
  4081  001E62  B0D8               	btfsc	status,0,c
  4082  001E64  D00A               	goto	l5231
  4083                           
  4084                           ; BSR set to: 0
  4085                           ;usb_device_cdc.c: 471: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
  4086  001E66  0100               	movlb	0	; () banked
  4087  001E68  EE20 F001          	lfsr	2,1
  4088  001E6C  518A               	movf	_CDCDataOutHandle& (0+255),w,b
  4089  001E6E  26D9               	addwf	fsr2l,f,c
  4090  001E70  518B               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
  4091  001E72  22DA               	addwfc	fsr2h,f,c
  4092  001E74  50DF               	movf	indf2,w,c
  4093  001E76  0100               	movlb	0	; () banked
  4094  001E78  6FE6               	movwf	getsUSBUSART@len& (0+255),b
  4095  001E7A                     l5231:
  4096                           
  4097                           ; BSR set to: 0
  4098                           ;usb_device_cdc.c: 476: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
  4099  001E7A  0E00               	movlw	0
  4100  001E7C  0100               	movlb	0	; () banked
  4101  001E7E  6F90               	movwf	_cdc_rx_len& (0+255),b
  4102  001E80  D018               	goto	l5237
  4103  001E82                     l5233:
  4104                           
  4105                           ; BSR set to: 0
  4106                           ;usb_device_cdc.c: 477: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
  4107  001E82  0100               	movlb	0	; () banked
  4108  001E84  5190               	movf	_cdc_rx_len& (0+255),w,b
  4109  001E86  0D01               	mullw	1
  4110  001E88  0E40               	movlw	64
  4111  001E8A  24F3               	addwf	prodl,w,c
  4112  001E8C  6ED9               	movwf	fsr2l,c
  4113  001E8E  0E05               	movlw	5
  4114  001E90  20F4               	addwfc	prodh,w,c
  4115  001E92  6EDA               	movwf	fsr2h,c
  4116  001E94  0100               	movlb	0	; () banked
  4117  001E96  5190               	movf	_cdc_rx_len& (0+255),w,b
  4118  001E98  0D01               	mullw	1
  4119  001E9A  50F3               	movf	prodl,w,c
  4120  001E9C  0100               	movlb	0	; () banked
  4121  001E9E  25E4               	addwf	getsUSBUSART@buffer& (0+255),w,b
  4122  001EA0  6EE1               	movwf	fsr1l,c
  4123  001EA2  50F4               	movf	prodh,w,c
  4124  001EA4  0100               	movlb	0	; () banked
  4125  001EA6  21E5               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
  4126  001EA8  6EE2               	movwf	fsr1h,c
  4127  001EAA  CFDF FFE7          	movff	indf2,indf1
  4128                           
  4129                           ; BSR set to: 0
  4130  001EAE  0100               	movlb	0	; () banked
  4131  001EB0  2B90               	incf	_cdc_rx_len& (0+255),f,b
  4132  001EB2                     l5237:
  4133                           
  4134                           ; BSR set to: 0
  4135  001EB2  0100               	movlb	0	; () banked
  4136  001EB4  51E6               	movf	getsUSBUSART@len& (0+255),w,b
  4137  001EB6  0100               	movlb	0	; () banked
  4138  001EB8  5D90               	subwf	_cdc_rx_len& (0+255),w,b
  4139  001EBA  A0D8               	btfss	status,0,c
  4140  001EBC  D7E2               	goto	l5233
  4141                           
  4142                           ; BSR set to: 0
  4143                           ;usb_device_cdc.c: 483: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  4144                           
  4145                           ; BSR set to: 0
  4146  001EBE  0E00               	movlw	0
  4147  001EC0  0100               	movlb	0	; () banked
  4148  001EC2  6FD9               	movwf	USBTransferOnePacket@dir& (0+255),b
  4149  001EC4  0E40               	movlw	64
  4150  001EC6  0100               	movlb	0	; () banked
  4151  001EC8  6FDA               	movwf	USBTransferOnePacket@data& (0+255),b
  4152  001ECA  0E05               	movlw	5
  4153  001ECC  0100               	movlb	0	; () banked
  4154  001ECE  6FDB               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  4155  001ED0  0E40               	movlw	64
  4156  001ED2  0100               	movlb	0	; () banked
  4157  001ED4  6FDC               	movwf	USBTransferOnePacket@len& (0+255),b
  4158  001ED6  0E02               	movlw	2
  4159  001ED8  ECED  F008         	call	_USBTransferOnePacket
  4160  001EDC  C0D9  F08A         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
  4161  001EE0  C0DA  F08B         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
  4162  001EE4                     l5241:
  4163                           
  4164                           ;usb_device_cdc.c: 485: }
  4165                           ;usb_device_cdc.c: 487: return cdc_rx_len;
  4166  001EE4  0100               	movlb	0	; () banked
  4167  001EE6  5190               	movf	_cdc_rx_len& (0+255),w,b
  4168  001EE8  0012               	return	
  4169  001EEA                     __end_of_getsUSBUSART:
  4170                           	opt stack 0
  4171                           tblptru	equ	0xFF8
  4172                           tblptrh	equ	0xFF7
  4173                           tblptrl	equ	0xFF6
  4174                           tablat	equ	0xFF5
  4175                           prodh	equ	0xFF4
  4176                           prodl	equ	0xFF3
  4177                           intcon	equ	0xFF2
  4178                           postinc0	equ	0xFEE
  4179                           wreg	equ	0xFE8
  4180                           indf1	equ	0xFE7
  4181                           postdec1	equ	0xFE5
  4182                           fsr1h	equ	0xFE2
  4183                           fsr1l	equ	0xFE1
  4184                           indf2	equ	0xFDF
  4185                           postinc2	equ	0xFDE
  4186                           postdec2	equ	0xFDD
  4187                           fsr2h	equ	0xFDA
  4188                           fsr2l	equ	0xFD9
  4189                           status	equ	0xFD8
  4190                           
  4191 ;; *************** function _USART_putcUSART *****************
  4192 ;; Defined at:
  4193 ;;		line 86 in file "../USBConverter/mla/v2017_03_06/framework/usb/src/usart.c"
  4194 ;; Parameters:    Size  Location     Type
  4195 ;;  c               1    wreg     unsigned char 
  4196 ;; Auto vars:     Size  Location     Type
  4197 ;;  c               1   17[BANK0 ] unsigned char 
  4198 ;; Return value:  Size  Location     Type
  4199 ;;                  1    wreg      void 
  4200 ;; Registers used:
  4201 ;;		wreg
  4202 ;; Tracked objects:
  4203 ;;		On entry : 0/0
  4204 ;;		On exit  : 0/0
  4205 ;;		Unchanged: 0/0
  4206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4207 ;;      Params:         0       0       0       0       0       0       0       0       0
  4208 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4209 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4210 ;;      Totals:         0       1       0       0       0       0       0       0       0
  4211 ;;Total ram usage:        1 bytes
  4212 ;; Hardware stack levels used:    1
  4213 ;; Hardware stack levels required when called:   12
  4214 ;; This function calls:
  4215 ;;		Nothing
  4216 ;; This function is called by:
  4217 ;;		_APP_DeviceCDCEmulatorTasks
  4218 ;; This function uses a non-reentrant model
  4219 ;;
  4220                           
  4221                           	psect	text21
  4222  002B9A                     __ptext21:
  4223                           	opt stack 0
  4224  002B9A                     _USART_putcUSART:
  4225                           	opt stack 15
  4226                           
  4227                           ; BSR set to: 0
  4228                           ;incstack = 0
  4229                           ;USART_putcUSART@c stored from wreg
  4230  002B9A  0100               	movlb	0	; () banked
  4231  002B9C  6FD9               	movwf	USART_putcUSART@c& (0+255),b
  4232                           
  4233                           ;usart.c: 88: TXREG = c;
  4234  002B9E  C0D9  FFAD         	movff	USART_putcUSART@c,4013	;volatile
  4235  002BA2  0012               	return		;funcret
  4236  002BA4                     __end_of_USART_putcUSART:
  4237                           	opt stack 0
  4238                           tblptru	equ	0xFF8
  4239                           tblptrh	equ	0xFF7
  4240                           tblptrl	equ	0xFF6
  4241                           tablat	equ	0xFF5
  4242                           prodh	equ	0xFF4
  4243                           prodl	equ	0xFF3
  4244                           intcon	equ	0xFF2
  4245                           postinc0	equ	0xFEE
  4246                           wreg	equ	0xFE8
  4247                           indf1	equ	0xFE7
  4248                           postdec1	equ	0xFE5
  4249                           fsr1h	equ	0xFE2
  4250                           fsr1l	equ	0xFE1
  4251                           indf2	equ	0xFDF
  4252                           postinc2	equ	0xFDE
  4253                           postdec2	equ	0xFDD
  4254                           fsr2h	equ	0xFDA
  4255                           fsr2l	equ	0xFD9
  4256                           status	equ	0xFD8
  4257                           
  4258 ;; *************** function _USART_getcUSART *****************
  4259 ;; Defined at:
  4260 ;;		line 145 in file "../USBConverter/mla/v2017_03_06/framework/usb/src/usart.c"
  4261 ;; Parameters:    Size  Location     Type
  4262 ;;		None
  4263 ;; Auto vars:     Size  Location     Type
  4264 ;;  c               1   17[BANK0 ] unsigned char 
  4265 ;; Return value:  Size  Location     Type
  4266 ;;                  1    wreg      unsigned char 
  4267 ;; Registers used:
  4268 ;;		wreg, status,2
  4269 ;; Tracked objects:
  4270 ;;		On entry : 0/0
  4271 ;;		On exit  : 0/0
  4272 ;;		Unchanged: 0/0
  4273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4274 ;;      Params:         0       0       0       0       0       0       0       0       0
  4275 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4276 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4277 ;;      Totals:         0       1       0       0       0       0       0       0       0
  4278 ;;Total ram usage:        1 bytes
  4279 ;; Hardware stack levels used:    1
  4280 ;; Hardware stack levels required when called:   12
  4281 ;; This function calls:
  4282 ;;		Nothing
  4283 ;; This function is called by:
  4284 ;;		_APP_DeviceCDCEmulatorTasks
  4285 ;; This function uses a non-reentrant model
  4286 ;;
  4287                           
  4288                           	psect	text22
  4289  002B5A                     __ptext22:
  4290                           	opt stack 0
  4291  002B5A                     _USART_getcUSART:
  4292                           	opt stack 15
  4293                           
  4294                           ;usart.c: 147: char c;
  4295                           ;usart.c: 149: if (RCSTAbits.OERR)
  4296                           
  4297                           ;incstack = 0
  4298  002B5A  A2AB               	btfss	4011,1,c	;volatile
  4299  002B5C  D005               	goto	l164
  4300                           
  4301                           ;usart.c: 150: {
  4302                           ;usart.c: 151: RCSTAbits.CREN = 0;
  4303  002B5E  98AB               	bcf	4011,4,c	;volatile
  4304                           
  4305                           ;usart.c: 152: c = RCREG;
  4306  002B60  CFAE F0D9          	movff	4014,USART_getcUSART@c	;volatile
  4307                           
  4308                           ;usart.c: 153: RCSTAbits.CREN = 1;
  4309  002B64  88AB               	bsf	4011,4,c	;volatile
  4310                           
  4311                           ;usart.c: 154: }
  4312  002B66  D002               	goto	l5251
  4313  002B68                     l164:
  4314                           
  4315                           ;usart.c: 155: else
  4316                           ;usart.c: 156: {
  4317                           ;usart.c: 157: c = RCREG;
  4318  002B68  CFAE F0D9          	movff	4014,USART_getcUSART@c	;volatile
  4319  002B6C                     l5251:
  4320                           
  4321                           ;usart.c: 158: }
  4322                           ;usart.c: 163: return c;
  4323  002B6C  0100               	movlb	0	; () banked
  4324  002B6E  51D9               	movf	USART_getcUSART@c& (0+255),w,b
  4325  002B70  0012               	return	
  4326  002B72                     __end_of_USART_getcUSART:
  4327                           	opt stack 0
  4328                           tblptru	equ	0xFF8
  4329                           tblptrh	equ	0xFF7
  4330                           tblptrl	equ	0xFF6
  4331                           tablat	equ	0xFF5
  4332                           prodh	equ	0xFF4
  4333                           prodl	equ	0xFF3
  4334                           intcon	equ	0xFF2
  4335                           postinc0	equ	0xFEE
  4336                           wreg	equ	0xFE8
  4337                           indf1	equ	0xFE7
  4338                           postdec1	equ	0xFE5
  4339                           fsr1h	equ	0xFE2
  4340                           fsr1l	equ	0xFE1
  4341                           indf2	equ	0xFDF
  4342                           postinc2	equ	0xFDE
  4343                           postdec2	equ	0xFDD
  4344                           fsr2h	equ	0xFDA
  4345                           fsr2l	equ	0xFD9
  4346                           status	equ	0xFD8
  4347                           
  4348 ;; *************** function _CDCTxService *****************
  4349 ;; Defined at:
  4350 ;;		line 811 in file "../USBConverter/mla/v2017_03_06/framework/usb/src/usb_device_cdc.c"
  4351 ;; Parameters:    Size  Location     Type
  4352 ;;		None
  4353 ;; Auto vars:     Size  Location     Type
  4354 ;;  byte_to_send    1   29[BANK0 ] unsigned char 
  4355 ;;  i               1   28[BANK0 ] unsigned char 
  4356 ;; Return value:  Size  Location     Type
  4357 ;;                  1    wreg      void 
  4358 ;; Registers used:
  4359 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4360 ;; Tracked objects:
  4361 ;;		On entry : 0/0
  4362 ;;		On exit  : 0/0
  4363 ;;		Unchanged: 0/0
  4364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4365 ;;      Params:         0       0       0       0       0       0       0       0       0
  4366 ;;      Locals:         0       2       0       0       0       0       0       0       0
  4367 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4368 ;;      Totals:         0       2       0       0       0       0       0       0       0
  4369 ;;Total ram usage:        2 bytes
  4370 ;; Hardware stack levels used:    1
  4371 ;; Hardware stack levels required when called:   13
  4372 ;; This function calls:
  4373 ;;		_USBTransferOnePacket
  4374 ;; This function is called by:
  4375 ;;		_APP_DeviceCDCEmulatorTasks
  4376 ;; This function uses a non-reentrant model
  4377 ;;
  4378                           
  4379                           	psect	text23
  4380  000F62                     __ptext23:
  4381                           	opt stack 0
  4382  000F62                     _CDCTxService:
  4383                           	opt stack 14
  4384                           
  4385                           ;usb_device_cdc.c: 813: uint8_t byte_to_send;
  4386                           ;usb_device_cdc.c: 814: uint8_t i;
  4387                           ;usb_device_cdc.c: 816: {PIE2bits.USBIE = 0;};
  4388                           
  4389                           ; BSR set to: 0
  4390                           ;incstack = 0
  4391  000F62  9AA0               	bcf	4000,5,c	;volatile
  4392                           
  4393                           ;usb_device_cdc.c: 818: {};
  4394                           ;usb_device_cdc.c: 820: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
  4395  000F64  5033               	movf	_CDCDataInHandle,w,c
  4396  000F66  1034               	iorwf	_CDCDataInHandle+1,w,c
  4397  000F68  B4D8               	btfsc	status,2,c
  4398  000F6A  D008               	goto	l5277
  4399  000F6C  C033  FFD9         	movff	_CDCDataInHandle,fsr2l
  4400  000F70  C034  FFDA         	movff	_CDCDataInHandle+1,fsr2h
  4401  000F74  AEDF               	btfss	indf2,7,c
  4402  000F76  D002               	goto	l5277
  4403                           
  4404                           ;usb_device_cdc.c: 821: {
  4405                           ;usb_device_cdc.c: 822: {PIE2bits.USBIE = 1;};
  4406  000F78  8AA0               	bsf	4000,5,c	;volatile
  4407                           
  4408                           ;usb_device_cdc.c: 823: return;
  4409  000F7A  0012               	return	
  4410  000F7C                     l5277:
  4411                           
  4412                           ;usb_device_cdc.c: 824: }
  4413                           ;usb_device_cdc.c: 831: if(cdc_trf_state == 3)
  4414  000F7C  0E03               	movlw	3
  4415  000F7E  184D               	xorwf	_cdc_trf_state,w,c
  4416  000F80  A4D8               	btfss	status,2,c
  4417  000F82  D002               	goto	l667
  4418                           
  4419                           ;usb_device_cdc.c: 832: cdc_trf_state = 0;
  4420  000F84  0E00               	movlw	0
  4421  000F86  6E4D               	movwf	_cdc_trf_state,c
  4422  000F88                     l667:
  4423                           
  4424                           ;usb_device_cdc.c: 837: if(cdc_trf_state == 0)
  4425  000F88  504D               	movf	_cdc_trf_state,w,c
  4426  000F8A  A4D8               	btfss	status,2,c
  4427  000F8C  D002               	goto	l5283
  4428                           
  4429                           ;usb_device_cdc.c: 838: {
  4430                           ;usb_device_cdc.c: 839: {PIE2bits.USBIE = 1;};
  4431  000F8E  8AA0               	bsf	4000,5,c	;volatile
  4432                           
  4433                           ;usb_device_cdc.c: 840: return;
  4434  000F90  0012               	return	
  4435  000F92                     l5283:
  4436                           
  4437                           ;usb_device_cdc.c: 841: }
  4438                           ;usb_device_cdc.c: 846: if(cdc_trf_state == 2)
  4439  000F92  0E02               	movlw	2
  4440  000F94  184D               	xorwf	_cdc_trf_state,w,c
  4441  000F96  A4D8               	btfss	status,2,c
  4442  000F98  D016               	goto	l5289
  4443                           
  4444                           ;usb_device_cdc.c: 847: {
  4445                           ;usb_device_cdc.c: 848: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
  4446  000F9A  0E01               	movlw	1
  4447  000F9C  0100               	movlb	0	; () banked
  4448  000F9E  6FD9               	movwf	USBTransferOnePacket@dir& (0+255),b
  4449  000FA0  0E00               	movlw	0
  4450  000FA2  0100               	movlb	0	; () banked
  4451  000FA4  6FDA               	movwf	USBTransferOnePacket@data& (0+255),b
  4452  000FA6  0E00               	movlw	0
  4453  000FA8  0100               	movlb	0	; () banked
  4454  000FAA  6FDB               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  4455  000FAC  0E00               	movlw	0
  4456  000FAE  0100               	movlb	0	; () banked
  4457  000FB0  6FDC               	movwf	USBTransferOnePacket@len& (0+255),b
  4458  000FB2  0E02               	movlw	2
  4459  000FB4  ECED  F008         	call	_USBTransferOnePacket
  4460  000FB8  C0D9  F033         	movff	?_USBTransferOnePacket,_CDCDataInHandle
  4461  000FBC  C0DA  F034         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
  4462                           
  4463                           ;usb_device_cdc.c: 850: cdc_trf_state = 3;
  4464  000FC0  0E03               	movlw	3
  4465  000FC2  6E4D               	movwf	_cdc_trf_state,c
  4466                           
  4467                           ;usb_device_cdc.c: 851: }
  4468  000FC4  D06A               	goto	l5333
  4469  000FC6                     l5289:
  4470                           
  4471                           ;usb_device_cdc.c: 852: else if(cdc_trf_state == 1)
  4472  000FC6  044D               	decf	_cdc_trf_state,w,c
  4473  000FC8  A4D8               	btfss	status,2,c
  4474  000FCA  D067               	goto	l5333
  4475                           
  4476                           ;usb_device_cdc.c: 853: {
  4477                           ;usb_device_cdc.c: 857: if(cdc_tx_len > sizeof(cdc_data_tx))
  4478  000FCC  0E40               	movlw	64
  4479  000FCE  643D               	cpfsgt	_cdc_tx_len,c
  4480  000FD0  D004               	goto	l672
  4481                           
  4482                           ;usb_device_cdc.c: 858: byte_to_send = sizeof(cdc_data_tx);
  4483  000FD2  0E40               	movlw	64
  4484  000FD4  0100               	movlb	0	; () banked
  4485  000FD6  6FE5               	movwf	CDCTxService@byte_to_send& (0+255),b
  4486  000FD8  D002               	goto	l5295
  4487  000FDA                     l672:
  4488                           
  4489                           ;usb_device_cdc.c: 859: else
  4490                           ;usb_device_cdc.c: 860: byte_to_send = cdc_tx_len;
  4491  000FDA  C03D  F0E5         	movff	_cdc_tx_len,CDCTxService@byte_to_send
  4492  000FDE                     l5295:
  4493                           
  4494                           ;usb_device_cdc.c: 865: cdc_tx_len = cdc_tx_len - byte_to_send;
  4495  000FDE  0100               	movlb	0	; () banked
  4496  000FE0  51E5               	movf	CDCTxService@byte_to_send& (0+255),w,b
  4497  000FE2  0800               	sublw	0
  4498  000FE4  243D               	addwf	_cdc_tx_len,w,c
  4499  000FE6  6E3D               	movwf	_cdc_tx_len,c
  4500                           
  4501                           ;usb_device_cdc.c: 867: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
  4502  000FE8  0E00               	movlw	0
  4503  000FEA  0100               	movlb	0	; () banked
  4504  000FEC  6F7E               	movwf	_pCDCDst& (0+255),b
  4505  000FEE  0E05               	movlw	5
  4506  000FF0  0100               	movlb	0	; () banked
  4507  000FF2  6F7F               	movwf	(_pCDCDst+1)& (0+255),b
  4508                           
  4509                           ; BSR set to: 0
  4510                           ;usb_device_cdc.c: 869: i = byte_to_send;
  4511  000FF4  C0E5  F0E4         	movff	CDCTxService@byte_to_send,CDCTxService@i
  4512                           
  4513                           ; BSR set to: 0
  4514                           ;usb_device_cdc.c: 870: if(cdc_mem_type == 0x00)
  4515  000FF8  503C               	movf	_cdc_mem_type,w,c
  4516  000FFA  B4D8               	btfsc	status,2,c
  4517  000FFC  D013               	goto	l5311
  4518  000FFE  D02A               	goto	l5321
  4519  001000                     l5303:
  4520                           
  4521                           ; BSR set to: 0
  4522                           ;usb_device_cdc.c: 873: {
  4523                           ;usb_device_cdc.c: 874: *pCDCDst.bRam = *pCDCSrc.bRom;
  4524  001000  C081  FFD9         	movff	_pCDCSrc,fsr2l
  4525  001004  C082  FFDA         	movff	_pCDCSrc+1,fsr2h
  4526  001008  C07E  FFE1         	movff	_pCDCDst,fsr1l
  4527  00100C  C07F  FFE2         	movff	_pCDCDst+1,fsr1h
  4528  001010  CFDF FFE7          	movff	indf2,indf1
  4529                           
  4530                           ; BSR set to: 0
  4531                           ;usb_device_cdc.c: 875: pCDCDst.bRam++;
  4532  001014  0100               	movlb	0	; () banked
  4533  001016  4B7E               	infsnz	_pCDCDst& (0+255),f,b
  4534  001018  2B7F               	incf	(_pCDCDst+1)& (0+255),f,b
  4535                           
  4536                           ; BSR set to: 0
  4537                           ;usb_device_cdc.c: 876: pCDCSrc.bRom++;
  4538  00101A  0100               	movlb	0	; () banked
  4539  00101C  4B81               	infsnz	_pCDCSrc& (0+255),f,b
  4540  00101E  2B82               	incf	(_pCDCSrc+1)& (0+255),f,b
  4541                           
  4542                           ; BSR set to: 0
  4543                           ;usb_device_cdc.c: 877: i--;
  4544  001020  0100               	movlb	0	; () banked
  4545  001022  07E4               	decf	CDCTxService@i& (0+255),f,b
  4546  001024                     l5311:
  4547                           
  4548                           ; BSR set to: 0
  4549  001024  0100               	movlb	0	; () banked
  4550  001026  51E4               	movf	CDCTxService@i& (0+255),w,b
  4551  001028  0100               	movlb	0	; () banked
  4552  00102A  B4D8               	btfsc	status,2,c
  4553  00102C  D018               	goto	l5323
  4554  00102E  D7E8               	goto	l5303
  4555  001030                     l5313:
  4556                           
  4557                           ; BSR set to: 0
  4558                           ;usb_device_cdc.c: 883: {
  4559                           ;usb_device_cdc.c: 884: *pCDCDst.bRam = *pCDCSrc.bRam;
  4560  001030  C081  FFD9         	movff	_pCDCSrc,fsr2l
  4561  001034  C082  FFDA         	movff	_pCDCSrc+1,fsr2h
  4562  001038  C07E  FFE1         	movff	_pCDCDst,fsr1l
  4563  00103C  C07F  FFE2         	movff	_pCDCDst+1,fsr1h
  4564  001040  CFDF FFE7          	movff	indf2,indf1
  4565                           
  4566                           ; BSR set to: 0
  4567                           ;usb_device_cdc.c: 885: pCDCDst.bRam++;
  4568  001044  0100               	movlb	0	; () banked
  4569  001046  4B7E               	infsnz	_pCDCDst& (0+255),f,b
  4570  001048  2B7F               	incf	(_pCDCDst+1)& (0+255),f,b
  4571                           
  4572                           ; BSR set to: 0
  4573                           ;usb_device_cdc.c: 886: pCDCSrc.bRam++;
  4574  00104A  0100               	movlb	0	; () banked
  4575  00104C  4B81               	infsnz	_pCDCSrc& (0+255),f,b
  4576  00104E  2B82               	incf	(_pCDCSrc+1)& (0+255),f,b
  4577                           
  4578                           ; BSR set to: 0
  4579                           ;usb_device_cdc.c: 887: i--;
  4580  001050  0100               	movlb	0	; () banked
  4581  001052  07E4               	decf	CDCTxService@i& (0+255),f,b
  4582  001054                     l5321:
  4583                           
  4584                           ; BSR set to: 0
  4585  001054  0100               	movlb	0	; () banked
  4586  001056  51E4               	movf	CDCTxService@i& (0+255),w,b
  4587  001058  0100               	movlb	0	; () banked
  4588  00105A  A4D8               	btfss	status,2,c
  4589  00105C  D7E9               	goto	l5313
  4590  00105E                     l5323:
  4591                           
  4592                           ; BSR set to: 0
  4593                           ;usb_device_cdc.c: 888: }
  4594                           ;usb_device_cdc.c: 889: }
  4595                           ;usb_device_cdc.c: 895: if(cdc_tx_len == 0)
  4596  00105E  503D               	movf	_cdc_tx_len,w,c
  4597  001060  A4D8               	btfss	status,2,c
  4598  001062  D009               	goto	l5331
  4599                           
  4600                           ; BSR set to: 0
  4601                           ;usb_device_cdc.c: 896: {
  4602                           ;usb_device_cdc.c: 897: if(byte_to_send == 64)
  4603  001064  0E40               	movlw	64
  4604  001066  0100               	movlb	0	; () banked
  4605  001068  19E5               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
  4606  00106A  A4D8               	btfss	status,2,c
  4607  00106C  D002               	goto	l5329
  4608                           
  4609                           ; BSR set to: 0
  4610                           ;usb_device_cdc.c: 898: cdc_trf_state = 2;
  4611  00106E  0E02               	movlw	2
  4612  001070  D001               	goto	L4
  4613  001072                     l5329:
  4614                           
  4615                           ; BSR set to: 0
  4616                           ;usb_device_cdc.c: 899: else
  4617                           ;usb_device_cdc.c: 900: cdc_trf_state = 3;
  4618  001072  0E03               	movlw	3
  4619  001074                     L4:
  4620  001074  6E4D               	movwf	_cdc_trf_state,c
  4621  001076                     l5331:
  4622                           
  4623                           ; BSR set to: 0
  4624                           ;usb_device_cdc.c: 901: }
  4625                           ;usb_device_cdc.c: 902: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
  4626  001076  0E01               	movlw	1
  4627  001078  0100               	movlb	0	; () banked
  4628  00107A  6FD9               	movwf	USBTransferOnePacket@dir& (0+255),b
  4629  00107C  0E00               	movlw	0
  4630  00107E  0100               	movlb	0	; () banked
  4631  001080  6FDA               	movwf	USBTransferOnePacket@data& (0+255),b
  4632  001082  0E05               	movlw	5
  4633  001084  0100               	movlb	0	; () banked
  4634  001086  6FDB               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  4635  001088  C0E5  F0DC         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
  4636  00108C  0E02               	movlw	2
  4637  00108E  ECED  F008         	call	_USBTransferOnePacket
  4638  001092  C0D9  F033         	movff	?_USBTransferOnePacket,_CDCDataInHandle
  4639  001096  C0DA  F034         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
  4640  00109A                     l5333:
  4641                           
  4642                           ;usb_device_cdc.c: 904: }
  4643                           ;usb_device_cdc.c: 906: {PIE2bits.USBIE = 1;};
  4644  00109A  8AA0               	bsf	4000,5,c	;volatile
  4645  00109C  0012               	return		;funcret
  4646  00109E                     __end_of_CDCTxService:
  4647                           	opt stack 0
  4648                           tblptru	equ	0xFF8
  4649                           tblptrh	equ	0xFF7
  4650                           tblptrl	equ	0xFF6
  4651                           tablat	equ	0xFF5
  4652                           prodh	equ	0xFF4
  4653                           prodl	equ	0xFF3
  4654                           intcon	equ	0xFF2
  4655                           postinc0	equ	0xFEE
  4656                           wreg	equ	0xFE8
  4657                           indf1	equ	0xFE7
  4658                           postdec1	equ	0xFE5
  4659                           fsr1h	equ	0xFE2
  4660                           fsr1l	equ	0xFE1
  4661                           indf2	equ	0xFDF
  4662                           postinc2	equ	0xFDE
  4663                           postdec2	equ	0xFDD
  4664                           fsr2h	equ	0xFDA
  4665                           fsr2l	equ	0xFD9
  4666                           status	equ	0xFD8
  4667                           
  4668 ;; *************** function _USBTransferOnePacket *****************
  4669 ;; Defined at:
  4670 ;;		line 995 in file "../USBConverter/mla/v2017_03_06/framework/usb/src/usb_device.c"
  4671 ;; Parameters:    Size  Location     Type
  4672 ;;  ep              1    wreg     unsigned char 
  4673 ;;  dir             1   17[BANK0 ] unsigned char 
  4674 ;;  data            2   18[BANK0 ] PTR unsigned char 
  4675 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
  4676 ;;  len             1   20[BANK0 ] unsigned char 
  4677 ;; Auto vars:     Size  Location     Type
  4678 ;;  ep              1   25[BANK0 ] unsigned char 
  4679 ;;  handle          2   26[BANK0 ] PTR volatile struct __BD
  4680 ;;		 -> RAM(2047), BDT(48), NULL(0), 
  4681 ;; Return value:  Size  Location     Type
  4682 ;;                  2   17[BANK0 ] PTR void 
  4683 ;; Registers used:
  4684 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4685 ;; Tracked objects:
  4686 ;;		On entry : 0/0
  4687 ;;		On exit  : 0/0
  4688 ;;		Unchanged: 0/0
  4689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4690 ;;      Params:         0       4       0       0       0       0       0       0       0
  4691 ;;      Locals:         0       3       0       0       0       0       0       0       0
  4692 ;;      Temps:          0       4       0       0       0       0       0       0       0
  4693 ;;      Totals:         0      11       0       0       0       0       0       0       0
  4694 ;;Total ram usage:       11 bytes
  4695 ;; Hardware stack levels used:    1
  4696 ;; Hardware stack levels required when called:   12
  4697 ;; This function calls:
  4698 ;;		Nothing
  4699 ;; This function is called by:
  4700 ;;		_getsUSBUSART
  4701 ;;		_CDCTxService
  4702 ;;		_USBCDCEventHandler
  4703 ;; This function uses a non-reentrant model
  4704 ;;
  4705                           
  4706                           	psect	text24
  4707  0011DA                     __ptext24:
  4708                           	opt stack 0
  4709  0011DA                     _USBTransferOnePacket:
  4710                           	opt stack 14
  4711                           
  4712                           ;incstack = 0
  4713                           ;USBTransferOnePacket@ep stored from wreg
  4714  0011DA  0100               	movlb	0	; () banked
  4715  0011DC  6FE1               	movwf	USBTransferOnePacket@ep& (0+255),b
  4716                           
  4717                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  4718                           ;usb_device.c: 1000: if(dir != 0)
  4719  0011DE  0100               	movlb	0	; () banked
  4720  0011E0  51D9               	movf	USBTransferOnePacket@dir& (0+255),w,b
  4721  0011E2  0100               	movlb	0	; () banked
  4722  0011E4  B4D8               	btfsc	status,2,c
  4723  0011E6  D008               	goto	l5195
  4724                           
  4725                           ; BSR set to: 0
  4726                           ;usb_device.c: 1001: {
  4727                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  4728  0011E8  0100               	movlb	0	; () banked
  4729  0011EA  51E1               	movf	USBTransferOnePacket@ep& (0+255),w,b
  4730  0011EC  0D02               	mullw	2
  4731  0011EE  0E6E               	movlw	low _pBDTEntryIn
  4732  0011F0  24F3               	addwf	prodl,w,c
  4733  0011F2  6ED9               	movwf	fsr2l,c
  4734  0011F4  0E00               	movlw	high _pBDTEntryIn
  4735  0011F6  D007               	goto	L5
  4736  0011F8                     l5195:
  4737                           
  4738                           ; BSR set to: 0
  4739                           ;usb_device.c: 1005: else
  4740                           ;usb_device.c: 1006: {
  4741                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  4742  0011F8  0100               	movlb	0	; () banked
  4743  0011FA  51E1               	movf	USBTransferOnePacket@ep& (0+255),w,b
  4744  0011FC  0D02               	mullw	2
  4745  0011FE  0E74               	movlw	low _pBDTEntryOut
  4746  001200  24F3               	addwf	prodl,w,c
  4747  001202  6ED9               	movwf	fsr2l,c
  4748  001204  0E00               	movlw	high _pBDTEntryOut
  4749  001206                     L5:
  4750  001206  20F4               	addwfc	prodh,w,c
  4751  001208  6EDA               	movwf	fsr2h,c
  4752  00120A  CFDE F0E2          	movff	postinc2,USBTransferOnePacket@handle
  4753  00120E  CFDD F0E3          	movff	postdec2,USBTransferOnePacket@handle+1
  4754                           
  4755                           ; BSR set to: 0
  4756                           ;usb_device.c: 1009: }
  4757                           ;usb_device.c: 1013: if(handle == 0)
  4758                           
  4759                           ; BSR set to: 0
  4760  001212  0100               	movlb	0	; () banked
  4761  001214  51E2               	movf	USBTransferOnePacket@handle& (0+255),w,b
  4762  001216  0100               	movlb	0	; () banked
  4763  001218  11E3               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  4764  00121A  A4D8               	btfss	status,2,c
  4765  00121C  D007               	goto	l5203
  4766                           
  4767                           ; BSR set to: 0
  4768                           ;usb_device.c: 1014: {
  4769                           ;usb_device.c: 1015: return 0;
  4770  00121E  0E00               	movlw	0
  4771  001220  0100               	movlb	0	; () banked
  4772  001222  6FD9               	movwf	?_USBTransferOnePacket& (0+255),b
  4773  001224  0E00               	movlw	0
  4774  001226  0100               	movlb	0	; () banked
  4775  001228  6FDA               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
  4776                           
  4777                           ; BSR set to: 0
  4778  00122A  0012               	return	
  4779  00122C                     l5203:
  4780                           
  4781                           ; BSR set to: 0
  4782                           ;usb_device.c: 1016: }
  4783                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
  4784  00122C  0100               	movlb	0	; () banked
  4785  00122E  EE20 F002          	lfsr	2,2
  4786  001232  51E2               	movf	USBTransferOnePacket@handle& (0+255),w,b
  4787  001234  26D9               	addwf	fsr2l,f,c
  4788  001236  51E3               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  4789  001238  22DA               	addwfc	fsr2h,f,c
  4790  00123A  C0DA  FFDE         	movff	USBTransferOnePacket@data,postinc2
  4791  00123E  C0DB  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
  4792                           
  4793                           ;usb_device.c: 1030: handle->CNT = len;
  4794  001242  0100               	movlb	0	; () banked
  4795  001244  EE20 F001          	lfsr	2,1
  4796  001248  51E2               	movf	USBTransferOnePacket@handle& (0+255),w,b
  4797  00124A  26D9               	addwf	fsr2l,f,c
  4798  00124C  51E3               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  4799  00124E  22DA               	addwfc	fsr2h,f,c
  4800  001250  C0DC  FFDF         	movff	USBTransferOnePacket@len,indf2
  4801                           
  4802                           ; BSR set to: 0
  4803                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  4804  001254  C0E2  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  4805  001258  C0E3  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  4806  00125C  0E40               	movlw	64
  4807  00125E  16DF               	andwf	indf2,f,c
  4808                           
  4809                           ; BSR set to: 0
  4810                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  4811  001260  C0E2  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  4812  001264  C0E3  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  4813  001268  0E00               	movlw	0
  4814  00126A  86DB               	bsf	plusw2,3,c
  4815                           
  4816                           ; BSR set to: 0
  4817                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  4818  00126C  C0E2  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  4819  001270  C0E3  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  4820  001274  0E00               	movlw	0
  4821  001276  8EDB               	bsf	plusw2,7,c
  4822                           
  4823                           ; BSR set to: 0
  4824                           ;usb_device.c: 1036: if(dir != 0)
  4825  001278  0100               	movlb	0	; () banked
  4826  00127A  51D9               	movf	USBTransferOnePacket@dir& (0+255),w,b
  4827  00127C  0100               	movlb	0	; () banked
  4828  00127E  B4D8               	btfsc	status,2,c
  4829  001280  D01E               	goto	l5215
  4830                           
  4831                           ; BSR set to: 0
  4832                           ;usb_device.c: 1037: {
  4833                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
  4834  001282  0100               	movlb	0	; () banked
  4835  001284  51E1               	movf	USBTransferOnePacket@ep& (0+255),w,b
  4836  001286  0D02               	mullw	2
  4837  001288  0E6E               	movlw	low _pBDTEntryIn
  4838  00128A  24F3               	addwf	prodl,w,c
  4839  00128C  6ED9               	movwf	fsr2l,c
  4840  00128E  0E00               	movlw	high _pBDTEntryIn
  4841  001290  20F4               	addwfc	prodh,w,c
  4842  001292  6EDA               	movwf	fsr2h,c
  4843  001294  CFDE F0DD          	movff	postinc2,??_USBTransferOnePacket
  4844  001298  CFDD F0DE          	movff	postdec2,??_USBTransferOnePacket+1
  4845  00129C  0E04               	movlw	4
  4846  00129E  0100               	movlb	0	; () banked
  4847  0012A0  19DD               	xorwf	??_USBTransferOnePacket& (0+255),w,b
  4848  0012A2  0100               	movlb	0	; () banked
  4849  0012A4  6FDF               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
  4850  0012A6  0100               	movlb	0	; () banked
  4851  0012A8  51DE               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
  4852  0012AA  0100               	movlb	0	; () banked
  4853  0012AC  6FE0               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
  4854  0012AE  0100               	movlb	0	; () banked
  4855  0012B0  51E1               	movf	USBTransferOnePacket@ep& (0+255),w,b
  4856  0012B2  0D02               	mullw	2
  4857  0012B4  0E6E               	movlw	low _pBDTEntryIn
  4858  0012B6  24F3               	addwf	prodl,w,c
  4859  0012B8  6ED9               	movwf	fsr2l,c
  4860  0012BA  0E00               	movlw	high _pBDTEntryIn
  4861  0012BC  D01D               	goto	L6
  4862  0012BE                     l5215:
  4863                           
  4864                           ; BSR set to: 0
  4865                           ;usb_device.c: 1041: else
  4866                           ;usb_device.c: 1042: {
  4867                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
  4868  0012BE  0100               	movlb	0	; () banked
  4869  0012C0  51E1               	movf	USBTransferOnePacket@ep& (0+255),w,b
  4870  0012C2  0D02               	mullw	2
  4871  0012C4  0E74               	movlw	low _pBDTEntryOut
  4872  0012C6  24F3               	addwf	prodl,w,c
  4873  0012C8  6ED9               	movwf	fsr2l,c
  4874  0012CA  0E00               	movlw	high _pBDTEntryOut
  4875  0012CC  20F4               	addwfc	prodh,w,c
  4876  0012CE  6EDA               	movwf	fsr2h,c
  4877  0012D0  CFDE F0DD          	movff	postinc2,??_USBTransferOnePacket
  4878  0012D4  CFDD F0DE          	movff	postdec2,??_USBTransferOnePacket+1
  4879  0012D8  0E04               	movlw	4
  4880  0012DA  0100               	movlb	0	; () banked
  4881  0012DC  19DD               	xorwf	??_USBTransferOnePacket& (0+255),w,b
  4882  0012DE  0100               	movlb	0	; () banked
  4883  0012E0  6FDF               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
  4884  0012E2  0100               	movlb	0	; () banked
  4885  0012E4  51DE               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
  4886  0012E6  0100               	movlb	0	; () banked
  4887  0012E8  6FE0               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
  4888  0012EA  0100               	movlb	0	; () banked
  4889  0012EC  51E1               	movf	USBTransferOnePacket@ep& (0+255),w,b
  4890  0012EE  0D02               	mullw	2
  4891  0012F0  0E74               	movlw	low _pBDTEntryOut
  4892  0012F2  24F3               	addwf	prodl,w,c
  4893  0012F4  6ED9               	movwf	fsr2l,c
  4894  0012F6  0E00               	movlw	high _pBDTEntryOut
  4895  0012F8                     L6:
  4896  0012F8  20F4               	addwfc	prodh,w,c
  4897  0012FA  6EDA               	movwf	fsr2h,c
  4898  0012FC  C0DF  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
  4899  001300  C0E0  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
  4900                           
  4901                           ; BSR set to: 0
  4902                           ;usb_device.c: 1045: }
  4903                           ;usb_device.c: 1046: return (void*)handle;
  4904                           
  4905                           ; BSR set to: 0
  4906  001304  C0E2  F0D9         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
  4907  001308  C0E3  F0DA         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
  4908  00130C  0012               	return	
  4909  00130E                     __end_of_USBTransferOnePacket:
  4910                           	opt stack 0
  4911                           tblptru	equ	0xFF8
  4912                           tblptrh	equ	0xFF7
  4913                           tblptrl	equ	0xFF6
  4914                           tablat	equ	0xFF5
  4915                           prodh	equ	0xFF4
  4916                           prodl	equ	0xFF3
  4917                           intcon	equ	0xFF2
  4918                           postinc0	equ	0xFEE
  4919                           wreg	equ	0xFE8
  4920                           indf1	equ	0xFE7
  4921                           postdec1	equ	0xFE5
  4922                           fsr1h	equ	0xFE2
  4923                           fsr1l	equ	0xFE1
  4924                           indf2	equ	0xFDF
  4925                           postinc2	equ	0xFDE
  4926                           postdec2	equ	0xFDD
  4927                           plusw2	equ	0xFDB
  4928                           fsr2h	equ	0xFDA
  4929                           fsr2l	equ	0xFD9
  4930                           status	equ	0xFD8
  4931                           
  4932 ;; *************** function _SYS_InterruptLow *****************
  4933 ;; Defined at:
  4934 ;;		line 15 in file "../USBConverter/LPC_FSUSB-CDC-X/system.c"
  4935 ;; Parameters:    Size  Location     Type
  4936 ;;		None
  4937 ;; Auto vars:     Size  Location     Type
  4938 ;;		None
  4939 ;; Return value:  Size  Location     Type
  4940 ;;                  1    wreg      void 
  4941 ;; Registers used:
  4942 ;;		None
  4943 ;; Tracked objects:
  4944 ;;		On entry : 0/0
  4945 ;;		On exit  : 0/0
  4946 ;;		Unchanged: 0/0
  4947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4948 ;;      Params:         0       0       0       0       0       0       0       0       0
  4949 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4950 ;;      Temps:          0      17       0       0       0       0       0       0       0
  4951 ;;      Totals:         0      17       0       0       0       0       0       0       0
  4952 ;;Total ram usage:       17 bytes
  4953 ;; Hardware stack levels used:    1
  4954 ;; Hardware stack levels required when called:   11
  4955 ;; This function calls:
  4956 ;;		Nothing
  4957 ;; This function is called by:
  4958 ;;		Interrupt level 1
  4959 ;; This function uses a non-reentrant model
  4960 ;;
  4961                           
  4962                           	psect	intcodelo
  4963  000018                     __pintcodelo:
  4964                           	opt stack 0
  4965  000018                     _SYS_InterruptLow:
  4966                           	opt stack 14
  4967                           
  4968                           ; BSR set to: 0
  4969                           ;incstack = 0
  4970  000018  8058               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  4971  00001A  CFD8 F0C8          	movff	status,??_SYS_InterruptLow
  4972  00001E  CFE8 F0C9          	movff	wreg,??_SYS_InterruptLow+1
  4973  000022  CFE0 F0CA          	movff	bsr,??_SYS_InterruptLow+2
  4974  000026  CFFA F0CB          	movff	pclath,??_SYS_InterruptLow+3
  4975  00002A  CFFB F0CC          	movff	pclatu,??_SYS_InterruptLow+4
  4976  00002E  CFE9 F0CD          	movff	fsr0l,??_SYS_InterruptLow+5
  4977  000032  CFEA F0CE          	movff	fsr0h,??_SYS_InterruptLow+6
  4978  000036  CFE1 F0CF          	movff	fsr1l,??_SYS_InterruptLow+7
  4979  00003A  CFE2 F0D0          	movff	fsr1h,??_SYS_InterruptLow+8
  4980  00003E  CFD9 F0D1          	movff	fsr2l,??_SYS_InterruptLow+9
  4981  000042  CFDA F0D2          	movff	fsr2h,??_SYS_InterruptLow+10
  4982  000046  CFF3 F0D3          	movff	prodl,??_SYS_InterruptLow+11
  4983  00004A  CFF4 F0D4          	movff	prodh,??_SYS_InterruptLow+12
  4984  00004E  CFF6 F0D5          	movff	tblptrl,??_SYS_InterruptLow+13
  4985  000052  CFF7 F0D6          	movff	tblptrh,??_SYS_InterruptLow+14
  4986  000056  CFF8 F0D7          	movff	tblptru,??_SYS_InterruptLow+15
  4987  00005A  CFF5 F0D8          	movff	tablat,??_SYS_InterruptLow+16
  4988  00005E  C0D8  FFF5         	movff	??_SYS_InterruptLow+16,tablat
  4989  000062  C0D7  FFF8         	movff	??_SYS_InterruptLow+15,tblptru
  4990  000066  C0D6  FFF7         	movff	??_SYS_InterruptLow+14,tblptrh
  4991  00006A  C0D5  FFF6         	movff	??_SYS_InterruptLow+13,tblptrl
  4992  00006E  C0D4  FFF4         	movff	??_SYS_InterruptLow+12,prodh
  4993  000072  C0D3  FFF3         	movff	??_SYS_InterruptLow+11,prodl
  4994  000076  C0D2  FFDA         	movff	??_SYS_InterruptLow+10,fsr2h
  4995  00007A  C0D1  FFD9         	movff	??_SYS_InterruptLow+9,fsr2l
  4996  00007E  C0D0  FFE2         	movff	??_SYS_InterruptLow+8,fsr1h
  4997  000082  C0CF  FFE1         	movff	??_SYS_InterruptLow+7,fsr1l
  4998  000086  C0CE  FFEA         	movff	??_SYS_InterruptLow+6,fsr0h
  4999  00008A  C0CD  FFE9         	movff	??_SYS_InterruptLow+5,fsr0l
  5000  00008E  C0CC  FFFB         	movff	??_SYS_InterruptLow+4,pclatu
  5001  000092  C0CB  FFFA         	movff	??_SYS_InterruptLow+3,pclath
  5002  000096  C0CA  FFE0         	movff	??_SYS_InterruptLow+2,bsr
  5003  00009A  C0C9  FFE8         	movff	??_SYS_InterruptLow+1,wreg
  5004  00009E  C0C8  FFD8         	movff	??_SYS_InterruptLow,status
  5005  0000A2  9058               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  5006  0000A4  0010               	retfie	
  5007  0000A6                     __end_of_SYS_InterruptLow:
  5008                           	opt stack 0
  5009                           pclatu	equ	0xFFB
  5010                           pclath	equ	0xFFA
  5011                           tblptru	equ	0xFF8
  5012                           tblptrh	equ	0xFF7
  5013                           tblptrl	equ	0xFF6
  5014                           tablat	equ	0xFF5
  5015                           prodh	equ	0xFF4
  5016                           prodl	equ	0xFF3
  5017                           intcon	equ	0xFF2
  5018                           postinc0	equ	0xFEE
  5019                           fsr0h	equ	0xFEA
  5020                           fsr0l	equ	0xFE9
  5021                           wreg	equ	0xFE8
  5022                           indf1	equ	0xFE7
  5023                           postdec1	equ	0xFE5
  5024                           fsr1h	equ	0xFE2
  5025                           fsr1l	equ	0xFE1
  5026                           bsr	equ	0xFE0
  5027                           indf2	equ	0xFDF
  5028                           postinc2	equ	0xFDE
  5029                           postdec2	equ	0xFDD
  5030                           plusw2	equ	0xFDB
  5031                           fsr2h	equ	0xFDA
  5032                           fsr2l	equ	0xFD9
  5033                           status	equ	0xFD8
  5034                           
  5035 ;; *************** function _SYS_InterruptHigh *****************
  5036 ;; Defined at:
  5037 ;;		line 6 in file "../USBConverter/LPC_FSUSB-CDC-X/system.c"
  5038 ;; Parameters:    Size  Location     Type
  5039 ;;		None
  5040 ;; Auto vars:     Size  Location     Type
  5041 ;;		None
  5042 ;; Return value:  Size  Location     Type
  5043 ;;                  1    wreg      void 
  5044 ;; Registers used:
  5045 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5046 ;; Tracked objects:
  5047 ;;		On entry : 0/0
  5048 ;;		On exit  : 0/0
  5049 ;;		Unchanged: 0/0
  5050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5051 ;;      Params:         0       0       0       0       0       0       0       0       0
  5052 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5053 ;;      Temps:         14       0       0       0       0       0       0       0       0
  5054 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5055 ;;Total ram usage:       14 bytes
  5056 ;; Hardware stack levels used:    1
  5057 ;; Hardware stack levels required when called:   10
  5058 ;; This function calls:
  5059 ;;		_USBDeviceTasks
  5060 ;; This function is called by:
  5061 ;;		Interrupt level 2
  5062 ;; This function uses a non-reentrant model
  5063 ;;
  5064                           
  5065                           	psect	intcode
  5066  000008                     __pintcode:
  5067                           	opt stack 0
  5068  000008                     _SYS_InterruptHigh:
  5069                           	opt stack 14
  5070                           
  5071                           ;incstack = 0
  5072  000008  8258               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5073  00000A  EDB4  F012         	call	int_func,f	;refresh shadow registers
  5074                           pclatu	equ	0xFFB
  5075                           pclath	equ	0xFFA
  5076                           tblptru	equ	0xFF8
  5077                           tblptrh	equ	0xFF7
  5078                           tblptrl	equ	0xFF6
  5079                           tablat	equ	0xFF5
  5080                           prodh	equ	0xFF4
  5081                           prodl	equ	0xFF3
  5082                           intcon	equ	0xFF2
  5083                           postinc0	equ	0xFEE
  5084                           fsr0h	equ	0xFEA
  5085                           fsr0l	equ	0xFE9
  5086                           wreg	equ	0xFE8
  5087                           indf1	equ	0xFE7
  5088                           postdec1	equ	0xFE5
  5089                           fsr1h	equ	0xFE2
  5090                           fsr1l	equ	0xFE1
  5091                           bsr	equ	0xFE0
  5092                           indf2	equ	0xFDF
  5093                           postinc2	equ	0xFDE
  5094                           postdec2	equ	0xFDD
  5095                           plusw2	equ	0xFDB
  5096                           fsr2h	equ	0xFDA
  5097                           fsr2l	equ	0xFD9
  5098                           status	equ	0xFD8
  5099                           
  5100                           	psect	intcode_body
  5101  002568                     __pintcode_body:
  5102                           	opt stack 14
  5103  002568                     int_func:
  5104                           	opt stack 14
  5105  002568  0006               	pop		; remove dummy address from shadow register refresh
  5106  00256A  CFFA F01E          	movff	pclath,??_SYS_InterruptHigh
  5107  00256E  CFFB F01F          	movff	pclatu,??_SYS_InterruptHigh+1
  5108  002572  CFE9 F020          	movff	fsr0l,??_SYS_InterruptHigh+2
  5109  002576  CFEA F021          	movff	fsr0h,??_SYS_InterruptHigh+3
  5110  00257A  CFE1 F022          	movff	fsr1l,??_SYS_InterruptHigh+4
  5111  00257E  CFE2 F023          	movff	fsr1h,??_SYS_InterruptHigh+5
  5112  002582  CFD9 F024          	movff	fsr2l,??_SYS_InterruptHigh+6
  5113  002586  CFDA F025          	movff	fsr2h,??_SYS_InterruptHigh+7
  5114  00258A  CFF3 F026          	movff	prodl,??_SYS_InterruptHigh+8
  5115  00258E  CFF4 F027          	movff	prodh,??_SYS_InterruptHigh+9
  5116  002592  CFF6 F028          	movff	tblptrl,??_SYS_InterruptHigh+10
  5117  002596  CFF7 F029          	movff	tblptrh,??_SYS_InterruptHigh+11
  5118  00259A  CFF8 F02A          	movff	tblptru,??_SYS_InterruptHigh+12
  5119  00259E  CFF5 F02B          	movff	tablat,??_SYS_InterruptHigh+13
  5120                           
  5121                           ;system.c: 12: USBDeviceTasks();
  5122  0025A2  EC87  F009         	call	_USBDeviceTasks	;wreg free
  5123  0025A6  C02B  FFF5         	movff	??_SYS_InterruptHigh+13,tablat
  5124  0025AA  C02A  FFF8         	movff	??_SYS_InterruptHigh+12,tblptru
  5125  0025AE  C029  FFF7         	movff	??_SYS_InterruptHigh+11,tblptrh
  5126  0025B2  C028  FFF6         	movff	??_SYS_InterruptHigh+10,tblptrl
  5127  0025B6  C027  FFF4         	movff	??_SYS_InterruptHigh+9,prodh
  5128  0025BA  C026  FFF3         	movff	??_SYS_InterruptHigh+8,prodl
  5129  0025BE  C025  FFDA         	movff	??_SYS_InterruptHigh+7,fsr2h
  5130  0025C2  C024  FFD9         	movff	??_SYS_InterruptHigh+6,fsr2l
  5131  0025C6  C023  FFE2         	movff	??_SYS_InterruptHigh+5,fsr1h
  5132  0025CA  C022  FFE1         	movff	??_SYS_InterruptHigh+4,fsr1l
  5133  0025CE  C021  FFEA         	movff	??_SYS_InterruptHigh+3,fsr0h
  5134  0025D2  C020  FFE9         	movff	??_SYS_InterruptHigh+2,fsr0l
  5135  0025D6  C01F  FFFB         	movff	??_SYS_InterruptHigh+1,pclatu
  5136  0025DA  C01E  FFFA         	movff	??_SYS_InterruptHigh,pclath
  5137  0025DE  9258               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5138  0025E0  0011               	retfie		f
  5139  0025E2                     __end_of_SYS_InterruptHigh:
  5140                           	opt stack 0
  5141                           pclatu	equ	0xFFB
  5142                           pclath	equ	0xFFA
  5143                           tblptru	equ	0xFF8
  5144                           tblptrh	equ	0xFF7
  5145                           tblptrl	equ	0xFF6
  5146                           tablat	equ	0xFF5
  5147                           prodh	equ	0xFF4
  5148                           prodl	equ	0xFF3
  5149                           intcon	equ	0xFF2
  5150                           postinc0	equ	0xFEE
  5151                           fsr0h	equ	0xFEA
  5152                           fsr0l	equ	0xFE9
  5153                           wreg	equ	0xFE8
  5154                           indf1	equ	0xFE7
  5155                           postdec1	equ	0xFE5
  5156                           fsr1h	equ	0xFE2
  5157                           fsr1l	equ	0xFE1
  5158                           bsr	equ	0xFE0
  5159                           indf2	equ	0xFDF
  5160                           postinc2	equ	0xFDE
  5161                           postdec2	equ	0xFDD
  5162                           plusw2	equ	0xFDB
  5163                           fsr2h	equ	0xFDA
  5164                           fsr2l	equ	0xFD9
  5165                           status	equ	0xFD8
  5166                           
  5167 ;; *************** function _USBDeviceTasks *****************
  5168 ;; Defined at:
  5169 ;;		line 477 in file "../USBConverter/mla/v2017_03_06/framework/usb/src/usb_device.c"
  5170 ;; Parameters:    Size  Location     Type
  5171 ;;		None
  5172 ;; Auto vars:     Size  Location     Type
  5173 ;;  i               1   28[COMRAM] unsigned char 
  5174 ;; Return value:  Size  Location     Type
  5175 ;;                  1    wreg      void 
  5176 ;; Registers used:
  5177 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5178 ;; Tracked objects:
  5179 ;;		On entry : 0/0
  5180 ;;		On exit  : 0/0
  5181 ;;		Unchanged: 0/0
  5182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5183 ;;      Params:         0       0       0       0       0       0       0       0       0
  5184 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5185 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5186 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5187 ;;Total ram usage:        1 bytes
  5188 ;; Hardware stack levels used:    1
  5189 ;; Hardware stack levels required when called:    9
  5190 ;; This function calls:
  5191 ;;		_USBCtrlEPAllowStatusStage
  5192 ;;		_USBCtrlEPService
  5193 ;;		_USBIncrement1msInternalTimers
  5194 ;;		_USBStallHandler
  5195 ;;		_USBSuspend
  5196 ;;		_USBWakeFromSuspend
  5197 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5198 ;;		i2_USBDeviceInit
  5199 ;; This function is called by:
  5200 ;;		_SYS_InterruptHigh
  5201 ;; This function uses a non-reentrant model
  5202 ;;
  5203                           
  5204                           	psect	text27
  5205  00130E                     __ptext27:
  5206                           	opt stack 0
  5207  00130E                     _USBDeviceTasks:
  5208                           	opt stack 14
  5209                           
  5210                           ;usb_device.c: 479: uint8_t i;
  5211                           ;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
  5212                           
  5213                           ;incstack = 0
  5214  00130E  044E               	decf	_USBDeviceState,w,c	;volatile
  5215  001310  B4D8               	btfsc	status,2,c
  5216                           
  5217                           ;usb_device.c: 591: {
  5218                           ;usb_device.c: 601: if(!UCONbits.SE0)
  5219  001312  BA6D               	btfsc	3949,5,c	;volatile
  5220  001314  D006               	goto	i2l4837
  5221                           
  5222                           ;usb_device.c: 602: {
  5223                           ;usb_device.c: 608: {UIR = 0;};
  5224  001316  0E00               	movlw	0
  5225  001318  6E68               	movwf	3944,c	;volatile
  5226                           
  5227                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
  5228  00131A  8069               	bsf	3945,0,c	;volatile
  5229                           
  5230                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
  5231  00131C  8869               	bsf	3945,4,c	;volatile
  5232                           
  5233                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
  5234  00131E  0E02               	movlw	2
  5235  001320  6E4E               	movwf	_USBDeviceState,c	;volatile
  5236  001322                     i2l4837:
  5237                           
  5238                           ;usb_device.c: 617: }
  5239                           ;usb_device.c: 618: }
  5240                           ;usb_device.c: 634: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  5241  001322  B468               	btfsc	3944,2,c	;volatile
  5242  001324  A469               	btfss	3945,2,c	;volatile
  5243  001326  D003               	goto	i2l4845
  5244                           
  5245                           ;usb_device.c: 635: {
  5246                           ;usb_device.c: 636: (UIR &= 0xFB);
  5247  001328  9468               	bcf	3944,2,c	;volatile
  5248                           
  5249                           ;usb_device.c: 640: USBWakeFromSuspend();
  5250  00132A  ECE3  F014         	call	_USBWakeFromSuspend	;wreg free
  5251  00132E                     i2l4845:
  5252                           
  5253                           ;usb_device.c: 642: }
  5254                           ;usb_device.c: 647: if(UCONbits.SUSPND==1)
  5255  00132E  A26D               	btfss	3949,1,c	;volatile
  5256  001330  D002               	goto	i2l317
  5257                           
  5258                           ;usb_device.c: 648: {
  5259                           ;usb_device.c: 649: {PIR2bits.USBIF = 0;};
  5260  001332  9AA1               	bcf	4001,5,c	;volatile
  5261                           
  5262                           ;usb_device.c: 650: return;
  5263  001334  0012               	return	
  5264  001336                     i2l317:
  5265                           
  5266                           ;usb_device.c: 651: }
  5267                           ;usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
  5268  001336  B068               	btfsc	3944,0,c	;volatile
  5269  001338  A069               	btfss	3945,0,c	;volatile
  5270  00133A  D006               	goto	i2l4859
  5271                           
  5272                           ;usb_device.c: 664: {
  5273                           ;usb_device.c: 665: USBDeviceInit();
  5274  00133C  EC6B  F006         	call	i2_USBDeviceInit	;wreg free
  5275                           
  5276                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
  5277  001340  8AA0               	bsf	4000,5,c	;volatile
  5278                           
  5279                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
  5280  001342  0E04               	movlw	4
  5281  001344  6E4E               	movwf	_USBDeviceState,c	;volatile
  5282                           
  5283                           ;usb_device.c: 681: (UIR &= 0xFE);
  5284  001346  9068               	bcf	3944,0,c	;volatile
  5285  001348                     i2l4859:
  5286                           
  5287                           ;usb_device.c: 682: }
  5288                           ;usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  5289  001348  B868               	btfsc	3944,4,c	;volatile
  5290  00134A  A869               	btfss	3945,4,c	;volatile
  5291  00134C  D002               	goto	i2l4865
  5292                           
  5293                           ;usb_device.c: 688: {
  5294                           ;usb_device.c: 694: USBSuspend();
  5295  00134E  EC49  F015         	call	_USBSuspend	;wreg free
  5296  001352                     i2l4865:
  5297                           
  5298                           ;usb_device.c: 696: }
  5299                           ;usb_device.c: 708: if(UIRbits.SOFIF)
  5300  001352  AC68               	btfss	3944,6,c	;volatile
  5301  001354  D01A               	goto	i2l4883
  5302                           
  5303                           ;usb_device.c: 709: {
  5304                           ;usb_device.c: 711: if(UIEbits.SOFIE)
  5305  001356  AC69               	btfss	3945,6,c	;volatile
  5306  001358  D00E               	goto	i2l4871
  5307                           
  5308                           ;usb_device.c: 712: {
  5309                           ;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  5310  00135A  0E00               	movlw	0
  5311  00135C  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  5312  00135E  0E73               	movlw	115
  5313  001360  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  5314  001362  0E00               	movlw	0
  5315  001364  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  5316  001366  0E00               	movlw	0
  5317  001368  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  5318  00136A  0E00               	movlw	0
  5319  00136C  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  5320  00136E  0E01               	movlw	1
  5321  001370  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  5322  001372  ECC3  F013         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  5323  001376                     i2l4871:
  5324                           
  5325                           ;usb_device.c: 714: }
  5326                           ;usb_device.c: 715: (UIR &= 0xBF);
  5327  001376  9C68               	bcf	3944,6,c	;volatile
  5328                           
  5329                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
  5330  001378  EC8A  F015         	call	_USBIncrement1msInternalTimers	;wreg free
  5331                           
  5332                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
  5333  00137C  5043               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
  5334  00137E  A4D8               	btfss	status,2,c
  5335                           
  5336                           ;usb_device.c: 736: {
  5337                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
  5338  001380  0643               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
  5339                           
  5340                           ;usb_device.c: 738: }
  5341                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
  5342  001382  5043               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
  5343  001384  B4D8               	btfsc	status,2,c
  5344                           
  5345                           ;usb_device.c: 745: {
  5346                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
  5347  001386  ECB5  F00E         	call	_USBCtrlEPAllowStatusStage	;wreg free
  5348  00138A                     i2l4883:
  5349                           
  5350                           ;usb_device.c: 747: }
  5351                           ;usb_device.c: 749: }
  5352                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
  5353  00138A  BA68               	btfsc	3944,5,c	;volatile
  5354  00138C  AA69               	btfss	3945,5,c	;volatile
  5355  00138E  D002               	goto	i2l4889
  5356                           
  5357                           ;usb_device.c: 752: {
  5358                           ;usb_device.c: 753: USBStallHandler();
  5359  001390  EC6E  F014         	call	_USBStallHandler	;wreg free
  5360  001394                     i2l4889:
  5361                           
  5362                           ;usb_device.c: 754: }
  5363                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
  5364  001394  B268               	btfsc	3944,1,c	;volatile
  5365  001396  A269               	btfss	3945,1,c	;volatile
  5366  001398  D00F               	goto	i2l4897
  5367                           
  5368                           ;usb_device.c: 757: {
  5369                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  5370  00139A  0E7F               	movlw	127
  5371  00139C  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  5372  00139E  680E               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  5373  0013A0  0E00               	movlw	0
  5374  0013A2  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  5375  0013A4  0E00               	movlw	0
  5376  0013A6  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  5377  0013A8  0E00               	movlw	0
  5378  0013AA  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  5379  0013AC  0E01               	movlw	1
  5380  0013AE  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  5381  0013B0  ECC3  F013         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  5382                           
  5383                           ;usb_device.c: 759: {UEIR = 0;};
  5384  0013B4  0E00               	movlw	0
  5385  0013B6  6E6A               	movwf	3946,c	;volatile
  5386  0013B8                     i2l4897:
  5387                           
  5388                           ;usb_device.c: 767: }
  5389                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
  5390  0013B8  0E04               	movlw	4
  5391  0013BA  604E               	cpfslt	_USBDeviceState,c	;volatile
  5392  0013BC  D002               	goto	i2l327
  5393                           
  5394                           ;usb_device.c: 775: {
  5395                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
  5396  0013BE  9AA1               	bcf	4001,5,c	;volatile
  5397                           
  5398                           ;usb_device.c: 777: return;
  5399  0013C0  0012               	return	
  5400  0013C2                     i2l327:
  5401                           
  5402                           ;usb_device.c: 778: }
  5403                           ;usb_device.c: 783: if(UIEbits.TRNIE)
  5404  0013C2  A669               	btfss	3945,3,c	;volatile
  5405  0013C4  D039               	goto	i2l328
  5406                           
  5407                           ;usb_device.c: 784: {
  5408                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
  5409  0013C6  0E00               	movlw	0
  5410  0013C8  6E1D               	movwf	USBDeviceTasks@i,c
  5411  0013CA                     i2l4903:
  5412  0013CA  0E03               	movlw	3
  5413  0013CC  641D               	cpfsgt	USBDeviceTasks@i,c
  5414  0013CE  D001               	goto	i2l329
  5415  0013D0  D033               	goto	i2l328
  5416  0013D2                     i2l329:
  5417                           
  5418                           ;usb_device.c: 786: {
  5419                           ;usb_device.c: 787: if(UIRbits.TRNIF)
  5420  0013D2  A668               	btfss	3944,3,c	;volatile
  5421  0013D4  D031               	goto	i2l328
  5422                           
  5423                           ;usb_device.c: 788: {
  5424                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
  5425  0013D6  CF6C F052          	movff	3948,_USTATcopy	;volatile
  5426                           
  5427                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
  5428  0013DA  3052               	rrcf	_USTATcopy,w,c	;volatile
  5429  0013DC  32E8               	rrcf	wreg,f,c
  5430  0013DE  32E8               	rrcf	wreg,f,c
  5431  0013E0  0B0F               	andlw	15
  5432  0013E2  6E45               	movwf	_endpoint_number,c	;volatile
  5433                           
  5434                           ;usb_device.c: 793: (UIR &= 0xF7);
  5435  0013E4  9668               	bcf	3944,3,c	;volatile
  5436                           
  5437                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
  5438  0013E6  B452               	btfsc	_USTATcopy,2,c	;volatile
  5439  0013E8  D007               	goto	i2l4917
  5440                           
  5441                           ;usb_device.c: 799: {
  5442                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  5443  0013EA  5045               	movf	_endpoint_number,w,c	;volatile
  5444  0013EC  0D01               	mullw	1
  5445  0013EE  0E84               	movlw	low _ep_data_out
  5446  0013F0  24F3               	addwf	prodl,w,c
  5447  0013F2  6ED9               	movwf	fsr2l,c
  5448  0013F4  0E00               	movlw	high _ep_data_out
  5449  0013F6  D006               	goto	L7
  5450  0013F8                     i2l4917:
  5451                           
  5452                           ;usb_device.c: 802: else
  5453                           ;usb_device.c: 803: {
  5454                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  5455  0013F8  5045               	movf	_endpoint_number,w,c	;volatile
  5456  0013FA  0D01               	mullw	1
  5457  0013FC  0E87               	movlw	low _ep_data_in
  5458  0013FE  24F3               	addwf	prodl,w,c
  5459  001400  6ED9               	movwf	fsr2l,c
  5460  001402  0E00               	movlw	high _ep_data_in
  5461  001404                     L7:
  5462  001404  20F4               	addwfc	prodh,w,c
  5463  001406  6EDA               	movwf	fsr2h,c
  5464  001408  0100               	movlb	0	; () banked
  5465  00140A  70DF               	btg	indf2,0,c
  5466                           
  5467                           ; BSR set to: 0
  5468                           ;usb_device.c: 805: }
  5469                           ;usb_device.c: 810: if(endpoint_number == 0)
  5470                           
  5471                           ; BSR set to: 0
  5472  00140C  5045               	movf	_endpoint_number,w,c	;volatile
  5473  00140E  A4D8               	btfss	status,2,c
  5474  001410  D003               	goto	i2l4923
  5475                           
  5476                           ; BSR set to: 0
  5477                           ;usb_device.c: 811: {
  5478                           ;usb_device.c: 812: USBCtrlEPService();
  5479  001412  ECCB  F010         	call	_USBCtrlEPService	;wreg free
  5480                           
  5481                           ;usb_device.c: 813: }
  5482  001416  D00E               	goto	i2l4925
  5483  001418                     i2l4923:
  5484                           
  5485                           ;usb_device.c: 814: else
  5486                           ;usb_device.c: 815: {
  5487                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  5488  001418  0E00               	movlw	0
  5489  00141A  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  5490  00141C  0E72               	movlw	114
  5491  00141E  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  5492  001420  0E52               	movlw	low _USTATcopy
  5493  001422  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  5494  001424  0E00               	movlw	high _USTATcopy
  5495  001426  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  5496  001428  0E00               	movlw	0
  5497  00142A  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  5498  00142C  0E00               	movlw	0
  5499  00142E  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  5500  001430  ECC3  F013         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  5501  001434                     i2l4925:
  5502  001434  2A1D               	incf	USBDeviceTasks@i,f,c
  5503  001436  D7C9               	goto	i2l4903
  5504  001438                     i2l328:
  5505                           
  5506                           ;usb_device.c: 822: }
  5507                           ;usb_device.c: 823: }
  5508                           ;usb_device.c: 824: }
  5509                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
  5510  001438  9AA1               	bcf	4001,5,c	;volatile
  5511  00143A  0012               	return		;funcret
  5512  00143C                     __end_of_USBDeviceTasks:
  5513                           	opt stack 0
  5514                           pclatu	equ	0xFFB
  5515                           pclath	equ	0xFFA
  5516                           tblptru	equ	0xFF8
  5517                           tblptrh	equ	0xFF7
  5518                           tblptrl	equ	0xFF6
  5519                           tablat	equ	0xFF5
  5520                           prodh	equ	0xFF4
  5521                           prodl	equ	0xFF3
  5522                           intcon	equ	0xFF2
  5523                           postinc0	equ	0xFEE
  5524                           fsr0h	equ	0xFEA
  5525                           fsr0l	equ	0xFE9
  5526                           wreg	equ	0xFE8
  5527                           indf1	equ	0xFE7
  5528                           postdec1	equ	0xFE5
  5529                           fsr1h	equ	0xFE2
  5530                           fsr1l	equ	0xFE1
  5531                           bsr	equ	0xFE0
  5532                           indf2	equ	0xFDF
  5533                           postinc2	equ	0xFDE
  5534                           postdec2	equ	0xFDD
  5535                           plusw2	equ	0xFDB
  5536                           fsr2h	equ	0xFDA
  5537                           fsr2l	equ	0xFD9
  5538                           status	equ	0xFD8
  5539                           
  5540 ;; *************** function i2_USBDeviceInit *****************
  5541 ;; Defined at:
  5542 ;;		line 277 in file "../USBConverter/mla/v2017_03_06/framework/usb/src/usb_device.c"
  5543 ;; Parameters:    Size  Location     Type
  5544 ;;		None
  5545 ;; Auto vars:     Size  Location     Type
  5546 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
  5547 ;; Return value:  Size  Location     Type
  5548 ;;                  1    wreg      void 
  5549 ;; Registers used:
  5550 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5551 ;; Tracked objects:
  5552 ;;		On entry : 0/0
  5553 ;;		On exit  : 0/0
  5554 ;;		Unchanged: 0/0
  5555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5556 ;;      Params:         0       0       0       0       0       0       0       0       0
  5557 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5558 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5559 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5560 ;;Total ram usage:        1 bytes
  5561 ;; Hardware stack levels used:    1
  5562 ;; Hardware stack levels required when called:    1
  5563 ;; This function calls:
  5564 ;;		i2_memset
  5565 ;; This function is called by:
  5566 ;;		_USBDeviceTasks
  5567 ;; This function uses a non-reentrant model
  5568 ;;
  5569                           
  5570                           	psect	text28
  5571  000CD6                     __ptext28:
  5572                           	opt stack 0
  5573  000CD6                     i2_USBDeviceInit:
  5574                           	opt stack 21
  5575                           
  5576                           ;usb_device.c: 279: uint8_t i;
  5577                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
  5578                           
  5579                           ;incstack = 0
  5580  000CD6  9AA0               	bcf	4000,5,c	;volatile
  5581                           
  5582                           ;usb_device.c: 285: ;
  5583                           ;usb_device.c: 288: {UEIR = 0;};
  5584  000CD8  0E00               	movlw	0
  5585  000CDA  6E6A               	movwf	3946,c	;volatile
  5586                           
  5587                           ;usb_device.c: 291: {UIR = 0;};
  5588  000CDC  0E00               	movlw	0
  5589  000CDE  6E68               	movwf	3944,c	;volatile
  5590                           
  5591                           ;usb_device.c: 294: UEP0 = 0;
  5592  000CE0  0E00               	movlw	0
  5593  000CE2  6E70               	movwf	3952,c	;volatile
  5594                           
  5595                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
  5596  000CE4  0E71               	movlw	113
  5597  000CE6  6E01               	movwf	i2memset@p1,c
  5598  000CE8  0E0F               	movlw	15
  5599  000CEA  6E02               	movwf	i2memset@p1+1,c
  5600  000CEC  0E00               	movlw	0
  5601  000CEE  6E04               	movwf	i2memset@c+1,c
  5602  000CF0  0E00               	movlw	0
  5603  000CF2  6E03               	movwf	i2memset@c,c
  5604  000CF4  0E00               	movlw	0
  5605  000CF6  6E06               	movwf	i2memset@n+1,c
  5606  000CF8  0E02               	movlw	2
  5607  000CFA  6E05               	movwf	i2memset@n,c
  5608  000CFC  EC61  F015         	call	i2_memset	;wreg free
  5609                           
  5610                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  5611  000D00  0E16               	movlw	22
  5612  000D02  6E6F               	movwf	3951,c	;volatile
  5613  000D04  0E9F               	movlw	159
  5614  000D06  6E6B               	movwf	3947,c	;volatile
  5615  000D08  0E7B               	movlw	123
  5616  000D0A  6E69               	movwf	3945,c	;volatile
  5617                           
  5618                           ;usb_device.c: 301: ;
  5619                           ;usb_device.c: 304: ;
  5620                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  5621  000D0C  0E00               	movlw	0
  5622  000D0E  6E09               	movwf	i2USBDeviceInit@i,c
  5623  000D10                     i2l4769:
  5624  000D10  0E0B               	movlw	11
  5625  000D12  6409               	cpfsgt	i2USBDeviceInit@i,c
  5626  000D14  D001               	goto	i2l4773
  5627  000D16  D00E               	goto	i2l306
  5628  000D18                     i2l4773:
  5629                           
  5630                           ;usb_device.c: 308: {
  5631                           ;usb_device.c: 309: BDT[i].Val = 0x00;
  5632  000D18  5009               	movf	i2USBDeviceInit@i,w,c
  5633  000D1A  0D04               	mullw	4
  5634  000D1C  0E00               	movlw	0
  5635  000D1E  24F3               	addwf	prodl,w,c
  5636  000D20  6ED9               	movwf	fsr2l,c
  5637  000D22  0E04               	movlw	4
  5638  000D24  20F4               	addwfc	prodh,w,c
  5639  000D26  6EDA               	movwf	fsr2h,c
  5640  000D28  6ADE               	clrf	postinc2,c
  5641  000D2A  6ADE               	clrf	postinc2,c
  5642  000D2C  6ADE               	clrf	postinc2,c
  5643  000D2E  6ADD               	clrf	postdec2,c
  5644  000D30  2A09               	incf	i2USBDeviceInit@i,f,c
  5645  000D32  D7EE               	goto	i2l4769
  5646  000D34                     i2l306:
  5647                           
  5648                           ;usb_device.c: 310: }
  5649                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
  5650  000D34  8C6D               	bsf	3949,6,c	;volatile
  5651                           
  5652                           ;usb_device.c: 316: UADDR = 0x00;
  5653  000D36  0E00               	movlw	0
  5654  000D38  6E6E               	movwf	3950,c	;volatile
  5655                           
  5656                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
  5657  000D3A  986D               	bcf	3949,4,c	;volatile
  5658                           
  5659                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
  5660  000D3C  9C6D               	bcf	3949,6,c	;volatile
  5661  000D3E                     i2l4785:
  5662                           
  5663                           ;usb_device.c: 326: {
  5664                           ;usb_device.c: 327: (UIR &= 0xF7);
  5665  000D3E  9668               	bcf	3944,3,c	;volatile
  5666                           
  5667                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
  5668  000D40  0E00               	movlw	0
  5669  000D42  0100               	movlb	0	; () banked
  5670  000D44  6F6B               	movwf	(_inPipes+3)& (0+255),b	;volatile
  5671                           
  5672                           ; BSR set to: 0
  5673                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
  5674  000D46  0E00               	movlw	0
  5675  000D48  0100               	movlb	0	; () banked
  5676  000D4A  6F63               	movwf	(_outPipes+3)& (0+255),b	;volatile
  5677                           
  5678                           ; BSR set to: 0
  5679                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
  5680  000D4C  0E00               	movlw	0
  5681  000D4E  0100               	movlb	0	; () banked
  5682  000D50  6F65               	movwf	(_outPipes+5)& (0+255),b	;volatile
  5683  000D52  0E00               	movlw	0
  5684  000D54  6F64               	movwf	(_outPipes+4)& (0+255),b	;volatile
  5685                           
  5686                           ; BSR set to: 0
  5687                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
  5688  000D56  B668               	btfsc	3944,3,c	;volatile
  5689  000D58  D7F2               	goto	i2l4785
  5690                           
  5691                           ; BSR set to: 0
  5692                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
  5693                           
  5694                           ; BSR set to: 0
  5695  000D5A  0E01               	movlw	1
  5696  000D5C  6E41               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  5697                           
  5698                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
  5699  000D5E  0E01               	movlw	1
  5700  000D60  6E40               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  5701                           
  5702                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
  5703  000D62  0E00               	movlw	0
  5704  000D64  6E3F               	movwf	_USBDeferINDataStagePackets,c	;volatile
  5705                           
  5706                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
  5707  000D66  0E00               	movlw	0
  5708  000D68  6E3E               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  5709                           
  5710                           ;usb_device.c: 341: USBBusIsSuspended = 0;
  5711  000D6A  0E00               	movlw	0
  5712  000D6C  0100               	movlb	0	; () banked
  5713  000D6E  6F92               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
  5714                           
  5715                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
  5716  000D70  0E00               	movlw	0
  5717  000D72  6E09               	movwf	i2USBDeviceInit@i,c
  5718  000D74                     i2l4797:
  5719                           
  5720                           ; BSR set to: 0
  5721  000D74  0E02               	movlw	2
  5722  000D76  6409               	cpfsgt	i2USBDeviceInit@i,c
  5723  000D78  D001               	goto	i2l4801
  5724  000D7A  D02E               	goto	i2l4807
  5725  000D7C                     i2l4801:
  5726                           
  5727                           ;usb_device.c: 346: {
  5728                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
  5729  000D7C  5009               	movf	i2USBDeviceInit@i,w,c
  5730  000D7E  0D02               	mullw	2
  5731  000D80  0E6E               	movlw	low _pBDTEntryIn
  5732  000D82  24F3               	addwf	prodl,w,c
  5733  000D84  6ED9               	movwf	fsr2l,c
  5734  000D86  0E00               	movlw	high _pBDTEntryIn
  5735  000D88  20F4               	addwfc	prodh,w,c
  5736  000D8A  6EDA               	movwf	fsr2h,c
  5737  000D8C  0E00               	movlw	0
  5738  000D8E  6EDE               	movwf	postinc2,c
  5739  000D90  0E00               	movlw	0
  5740  000D92  6EDD               	movwf	postdec2,c
  5741                           
  5742                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
  5743  000D94  5009               	movf	i2USBDeviceInit@i,w,c
  5744  000D96  0D02               	mullw	2
  5745  000D98  0E74               	movlw	low _pBDTEntryOut
  5746  000D9A  24F3               	addwf	prodl,w,c
  5747  000D9C  6ED9               	movwf	fsr2l,c
  5748  000D9E  0E00               	movlw	high _pBDTEntryOut
  5749  000DA0  20F4               	addwfc	prodh,w,c
  5750  000DA2  6EDA               	movwf	fsr2h,c
  5751  000DA4  0E00               	movlw	0
  5752  000DA6  6EDE               	movwf	postinc2,c
  5753  000DA8  0E00               	movlw	0
  5754  000DAA  6EDD               	movwf	postdec2,c
  5755                           
  5756                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
  5757  000DAC  5009               	movf	i2USBDeviceInit@i,w,c
  5758  000DAE  0D01               	mullw	1
  5759  000DB0  0E87               	movlw	low _ep_data_in
  5760  000DB2  24F3               	addwf	prodl,w,c
  5761  000DB4  6ED9               	movwf	fsr2l,c
  5762  000DB6  0E00               	movlw	high _ep_data_in
  5763  000DB8  20F4               	addwfc	prodh,w,c
  5764  000DBA  6EDA               	movwf	fsr2h,c
  5765  000DBC  0E00               	movlw	0
  5766  000DBE  6EDF               	movwf	indf2,c
  5767                           
  5768                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
  5769  000DC0  5009               	movf	i2USBDeviceInit@i,w,c
  5770  000DC2  0D01               	mullw	1
  5771  000DC4  0E84               	movlw	low _ep_data_out
  5772  000DC6  24F3               	addwf	prodl,w,c
  5773  000DC8  6ED9               	movwf	fsr2l,c
  5774  000DCA  0E00               	movlw	high _ep_data_out
  5775  000DCC  20F4               	addwfc	prodh,w,c
  5776  000DCE  6EDA               	movwf	fsr2h,c
  5777  000DD0  0E00               	movlw	0
  5778  000DD2  6EDF               	movwf	indf2,c
  5779  000DD4  2A09               	incf	i2USBDeviceInit@i,f,c
  5780  000DD6  D7CE               	goto	i2l4797
  5781  000DD8                     i2l4807:
  5782                           
  5783                           ;usb_device.c: 351: }
  5784                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  5785  000DD8  0E08               	movlw	8
  5786  000DDA  0100               	movlb	0	; () banked
  5787  000DDC  6F6E               	movwf	_pBDTEntryIn& (0+255),b
  5788  000DDE  0E04               	movlw	4
  5789  000DE0  0100               	movlb	0	; () banked
  5790  000DE2  6F6F               	movwf	(_pBDTEntryIn+1)& (0+255),b
  5791                           
  5792                           ; BSR set to: 0
  5793                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
  5794  000DE4  0E16               	movlw	22
  5795  000DE6  6E70               	movwf	3952,c	;volatile
  5796                           
  5797                           ; BSR set to: 0
  5798                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  5799  000DE8  0E04               	movlw	4
  5800  000DEA  0104               	movlb	4	; () banked
  5801  000DEC  6F03               	movwf	3,b	;volatile
  5802  000DEE  0E30               	movlw	48
  5803  000DF0  6F02               	movwf	2,b	;volatile
  5804                           
  5805                           ; BSR set to: 4
  5806                           ;usb_device.c: 359: BDT[0].CNT = 8;
  5807  000DF2  0E08               	movlw	8
  5808  000DF4  0104               	movlb	4	; () banked
  5809  000DF6  6F01               	movwf	1,b	;volatile
  5810                           
  5811                           ; BSR set to: 4
  5812                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
  5813  000DF8  0E04               	movlw	4
  5814  000DFA  0104               	movlb	4	; () banked
  5815  000DFC  6F00               	movwf	0,b	;volatile
  5816                           
  5817                           ; BSR set to: 4
  5818                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
  5819  000DFE  0104               	movlb	4	; () banked
  5820  000E00  8F00               	bsf	0,7,b	;volatile
  5821                           
  5822                           ; BSR set to: 4
  5823                           ;usb_device.c: 364: USBActiveConfiguration = 0;
  5824  000E02  0E00               	movlw	0
  5825  000E04  6E53               	movwf	_USBActiveConfiguration,c	;volatile
  5826                           
  5827                           ; BSR set to: 4
  5828                           ;usb_device.c: 366: USB1msTickCount = 0;
  5829  000E06  0E00               	movlw	0
  5830  000E08  6E2C               	movwf	_USB1msTickCount,c	;volatile
  5831  000E0A  0E00               	movlw	0
  5832  000E0C  6E2D               	movwf	_USB1msTickCount+1,c	;volatile
  5833  000E0E  0E00               	movlw	0
  5834  000E10  6E2E               	movwf	_USB1msTickCount+2,c	;volatile
  5835  000E12  0E00               	movlw	0
  5836  000E14  6E2F               	movwf	_USB1msTickCount+3,c	;volatile
  5837                           
  5838                           ; BSR set to: 4
  5839                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
  5840  000E16  0E00               	movlw	0
  5841  000E18  0100               	movlb	0	; () banked
  5842  000E1A  6F91               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
  5843                           
  5844                           ; BSR set to: 0
  5845                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
  5846  000E1C  0E00               	movlw	0
  5847  000E1E  6E4E               	movwf	_USBDeviceState,c	;volatile
  5848                           
  5849                           ; BSR set to: 0
  5850  000E20  0012               	return		;funcret
  5851  000E22                     __end_ofi2_USBDeviceInit:
  5852                           	opt stack 0
  5853                           pclatu	equ	0xFFB
  5854                           pclath	equ	0xFFA
  5855                           tblptru	equ	0xFF8
  5856                           tblptrh	equ	0xFF7
  5857                           tblptrl	equ	0xFF6
  5858                           tablat	equ	0xFF5
  5859                           prodh	equ	0xFF4
  5860                           prodl	equ	0xFF3
  5861                           intcon	equ	0xFF2
  5862                           postinc0	equ	0xFEE
  5863                           fsr0h	equ	0xFEA
  5864                           fsr0l	equ	0xFE9
  5865                           wreg	equ	0xFE8
  5866                           indf1	equ	0xFE7
  5867                           postdec1	equ	0xFE5
  5868                           fsr1h	equ	0xFE2
  5869                           fsr1l	equ	0xFE1
  5870                           bsr	equ	0xFE0
  5871                           indf2	equ	0xFDF
  5872                           postinc2	equ	0xFDE
  5873                           postdec2	equ	0xFDD
  5874                           plusw2	equ	0xFDB
  5875                           fsr2h	equ	0xFDA
  5876                           fsr2l	equ	0xFD9
  5877                           status	equ	0xFD8
  5878                           
  5879 ;; *************** function _USBWakeFromSuspend *****************
  5880 ;; Defined at:
  5881 ;;		line 2303 in file "../USBConverter/mla/v2017_03_06/framework/usb/src/usb_device.c"
  5882 ;; Parameters:    Size  Location     Type
  5883 ;;		None
  5884 ;; Auto vars:     Size  Location     Type
  5885 ;;		None
  5886 ;; Return value:  Size  Location     Type
  5887 ;;                  1    wreg      void 
  5888 ;; Registers used:
  5889 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5890 ;; Tracked objects:
  5891 ;;		On entry : 0/0
  5892 ;;		On exit  : 0/0
  5893 ;;		Unchanged: 0/0
  5894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5895 ;;      Params:         0       0       0       0       0       0       0       0       0
  5896 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5897 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5898 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5899 ;;Total ram usage:        0 bytes
  5900 ;; Hardware stack levels used:    1
  5901 ;; Hardware stack levels required when called:    5
  5902 ;; This function calls:
  5903 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5904 ;; This function is called by:
  5905 ;;		_USBDeviceTasks
  5906 ;; This function uses a non-reentrant model
  5907 ;;
  5908                           
  5909                           	psect	text29
  5910  0029C6                     __ptext29:
  5911                           	opt stack 0
  5912  0029C6                     _USBWakeFromSuspend:
  5913                           	opt stack 17
  5914                           
  5915                           ;usb_device.c: 2305: USBBusIsSuspended = 0;
  5916                           
  5917                           ; BSR set to: 0
  5918                           ;incstack = 0
  5919  0029C6  0E00               	movlw	0
  5920  0029C8  0100               	movlb	0	; () banked
  5921  0029CA  6F92               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
  5922                           
  5923                           ; BSR set to: 0
  5924                           ;usb_device.c: 2311: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  5925  0029CC  0E00               	movlw	0
  5926  0029CE  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  5927  0029D0  0E74               	movlw	116
  5928  0029D2  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  5929  0029D4  0E00               	movlw	0
  5930  0029D6  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  5931  0029D8  0E00               	movlw	0
  5932  0029DA  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  5933  0029DC  0E00               	movlw	0
  5934  0029DE  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  5935  0029E0  0E00               	movlw	0
  5936  0029E2  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  5937  0029E4  ECC3  F013         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  5938                           
  5939                           ;usb_device.c: 2318: UCONbits.SUSPND = 0;
  5940  0029E8  926D               	bcf	3949,1,c	;volatile
  5941                           
  5942                           ;usb_device.c: 2323: UIEbits.ACTVIE = 0;
  5943  0029EA  9469               	bcf	3945,2,c	;volatile
  5944                           
  5945                           ;usb_device.c: 2341: while(UIRbits.ACTVIF)
  5946  0029EC  D001               	goto	i2l4533
  5947  0029EE                     i2l4531:
  5948                           
  5949                           ;usb_device.c: 2343: {
  5950                           ;usb_device.c: 2344: (UIR &= 0xFB);
  5951  0029EE  9468               	bcf	3944,2,c	;volatile
  5952  0029F0                     i2l4533:
  5953  0029F0  B468               	btfsc	3944,2,c	;volatile
  5954  0029F2  D7FD               	goto	i2l4531
  5955                           
  5956                           ;usb_device.c: 2345: }
  5957                           ;usb_device.c: 2347: USBTicksSinceSuspendEnd = 0;
  5958  0029F4  0E00               	movlw	0
  5959  0029F6  0100               	movlb	0	; () banked
  5960  0029F8  6F91               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
  5961                           
  5962                           ; BSR set to: 0
  5963  0029FA  0012               	return		;funcret
  5964  0029FC                     __end_of_USBWakeFromSuspend:
  5965                           	opt stack 0
  5966                           pclatu	equ	0xFFB
  5967                           pclath	equ	0xFFA
  5968                           tblptru	equ	0xFF8
  5969                           tblptrh	equ	0xFF7
  5970                           tblptrl	equ	0xFF6
  5971                           tablat	equ	0xFF5
  5972                           prodh	equ	0xFF4
  5973                           prodl	equ	0xFF3
  5974                           intcon	equ	0xFF2
  5975                           postinc0	equ	0xFEE
  5976                           fsr0h	equ	0xFEA
  5977                           fsr0l	equ	0xFE9
  5978                           wreg	equ	0xFE8
  5979                           indf1	equ	0xFE7
  5980                           postdec1	equ	0xFE5
  5981                           fsr1h	equ	0xFE2
  5982                           fsr1l	equ	0xFE1
  5983                           bsr	equ	0xFE0
  5984                           indf2	equ	0xFDF
  5985                           postinc2	equ	0xFDE
  5986                           postdec2	equ	0xFDD
  5987                           plusw2	equ	0xFDB
  5988                           fsr2h	equ	0xFDA
  5989                           fsr2l	equ	0xFD9
  5990                           status	equ	0xFD8
  5991                           
  5992 ;; *************** function _USBSuspend *****************
  5993 ;; Defined at:
  5994 ;;		line 2245 in file "../USBConverter/mla/v2017_03_06/framework/usb/src/usb_device.c"
  5995 ;; Parameters:    Size  Location     Type
  5996 ;;		None
  5997 ;; Auto vars:     Size  Location     Type
  5998 ;;		None
  5999 ;; Return value:  Size  Location     Type
  6000 ;;                  1    wreg      void 
  6001 ;; Registers used:
  6002 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6003 ;; Tracked objects:
  6004 ;;		On entry : 0/0
  6005 ;;		On exit  : 0/0
  6006 ;;		Unchanged: 0/0
  6007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6008 ;;      Params:         0       0       0       0       0       0       0       0       0
  6009 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6010 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6011 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6012 ;;Total ram usage:        0 bytes
  6013 ;; Hardware stack levels used:    1
  6014 ;; Hardware stack levels required when called:    5
  6015 ;; This function calls:
  6016 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6017 ;; This function is called by:
  6018 ;;		_USBDeviceTasks
  6019 ;; This function uses a non-reentrant model
  6020 ;;
  6021                           
  6022                           	psect	text30
  6023  002A92                     __ptext30:
  6024                           	opt stack 0
  6025  002A92                     _USBSuspend:
  6026                           	opt stack 17
  6027                           
  6028                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
  6029                           
  6030                           ; BSR set to: 0
  6031                           ;incstack = 0
  6032  002A92  8469               	bsf	3945,2,c	;volatile
  6033                           
  6034                           ;usb_device.c: 2271: (UIR &= 0xEF);
  6035  002A94  9868               	bcf	3944,4,c	;volatile
  6036                           
  6037                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
  6038  002A96  826D               	bsf	3949,1,c	;volatile
  6039                           
  6040                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
  6041  002A98  0E01               	movlw	1
  6042  002A9A  0100               	movlb	0	; () banked
  6043  002A9C  6F92               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
  6044                           
  6045                           ; BSR set to: 0
  6046                           ;usb_device.c: 2278: USBTicksSinceSuspendEnd = 0;
  6047  002A9E  0E00               	movlw	0
  6048  002AA0  0100               	movlb	0	; () banked
  6049  002AA2  6F91               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
  6050                           
  6051                           ; BSR set to: 0
  6052                           ;usb_device.c: 2285: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  6053  002AA4  0E00               	movlw	0
  6054  002AA6  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  6055  002AA8  0E75               	movlw	117
  6056  002AAA  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  6057  002AAC  0E00               	movlw	0
  6058  002AAE  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  6059  002AB0  0E00               	movlw	0
  6060  002AB2  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  6061  002AB4  0E00               	movlw	0
  6062  002AB6  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  6063  002AB8  0E00               	movlw	0
  6064  002ABA  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  6065  002ABC  ECC3  F013         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  6066  002AC0  0012               	return		;funcret
  6067  002AC2                     __end_of_USBSuspend:
  6068                           	opt stack 0
  6069                           pclatu	equ	0xFFB
  6070                           pclath	equ	0xFFA
  6071                           tblptru	equ	0xFF8
  6072                           tblptrh	equ	0xFF7
  6073                           tblptrl	equ	0xFF6
  6074                           tablat	equ	0xFF5
  6075                           prodh	equ	0xFF4
  6076                           prodl	equ	0xFF3
  6077                           intcon	equ	0xFF2
  6078                           postinc0	equ	0xFEE
  6079                           fsr0h	equ	0xFEA
  6080                           fsr0l	equ	0xFE9
  6081                           wreg	equ	0xFE8
  6082                           indf1	equ	0xFE7
  6083                           postdec1	equ	0xFE5
  6084                           fsr1h	equ	0xFE2
  6085                           fsr1l	equ	0xFE1
  6086                           bsr	equ	0xFE0
  6087                           indf2	equ	0xFDF
  6088                           postinc2	equ	0xFDE
  6089                           postdec2	equ	0xFDD
  6090                           plusw2	equ	0xFDB
  6091                           fsr2h	equ	0xFDA
  6092                           fsr2l	equ	0xFD9
  6093                           status	equ	0xFD8
  6094                           
  6095 ;; *************** function _USBStallHandler *****************
  6096 ;; Defined at:
  6097 ;;		line 2202 in file "../USBConverter/mla/v2017_03_06/framework/usb/src/usb_device.c"
  6098 ;; Parameters:    Size  Location     Type
  6099 ;;		None
  6100 ;; Auto vars:     Size  Location     Type
  6101 ;;		None
  6102 ;; Return value:  Size  Location     Type
  6103 ;;                  1    wreg      void 
  6104 ;; Registers used:
  6105 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6106 ;; Tracked objects:
  6107 ;;		On entry : 0/0
  6108 ;;		On exit  : 0/0
  6109 ;;		Unchanged: 0/0
  6110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6111 ;;      Params:         0       0       0       0       0       0       0       0       0
  6112 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6113 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6114 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6115 ;;Total ram usage:        1 bytes
  6116 ;; Hardware stack levels used:    1
  6117 ;; This function calls:
  6118 ;;		Nothing
  6119 ;; This function is called by:
  6120 ;;		_USBDeviceTasks
  6121 ;; This function uses a non-reentrant model
  6122 ;;
  6123                           
  6124                           	psect	text31
  6125  0028DC                     __ptext31:
  6126                           	opt stack 0
  6127  0028DC                     _USBStallHandler:
  6128                           	opt stack 22
  6129                           
  6130                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
  6131                           
  6132                           ;incstack = 0
  6133  0028DC  A070               	btfss	3952,0,c	;volatile
  6134  0028DE  D01D               	goto	i2l467
  6135                           
  6136                           ;usb_device.c: 2215: {
  6137                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  6138  0028E0  C037  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  6139  0028E4  C038  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  6140  0028E8  0E80               	movlw	128
  6141  0028EA  18DE               	xorwf	postinc2,w,c
  6142  0028EC  A4D8               	btfss	status,2,c
  6143  0028EE  D014               	goto	i2l4569
  6144  0028F0  C06E  FFD9         	movff	_pBDTEntryIn,fsr2l
  6145  0028F4  C06F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  6146  0028F8  0E84               	movlw	132
  6147  0028FA  18DE               	xorwf	postinc2,w,c
  6148  0028FC  A4D8               	btfss	status,2,c
  6149  0028FE  D00C               	goto	i2l4569
  6150                           
  6151                           ;usb_device.c: 2218: {
  6152                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  6153  002900  C037  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  6154  002904  C038  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  6155  002908  0E0C               	movlw	12
  6156  00290A  6EDF               	movwf	indf2,c
  6157                           
  6158                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  6159  00290C  C037  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  6160  002910  C038  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  6161  002914  0E00               	movlw	0
  6162  002916  8EDB               	bsf	plusw2,7,c
  6163  002918                     i2l4569:
  6164                           
  6165                           ;usb_device.c: 2222: }
  6166                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
  6167  002918  9070               	bcf	3952,0,c	;volatile
  6168  00291A                     i2l467:
  6169                           
  6170                           ;usb_device.c: 2224: }
  6171                           ;usb_device.c: 2226: (UIR &= 0xDF);
  6172  00291A  9A68               	bcf	3944,5,c	;volatile
  6173  00291C  0012               	return		;funcret
  6174  00291E                     __end_of_USBStallHandler:
  6175                           	opt stack 0
  6176                           pclatu	equ	0xFFB
  6177                           pclath	equ	0xFFA
  6178                           tblptru	equ	0xFF8
  6179                           tblptrh	equ	0xFF7
  6180                           tblptrl	equ	0xFF6
  6181                           tablat	equ	0xFF5
  6182                           prodh	equ	0xFF4
  6183                           prodl	equ	0xFF3
  6184                           intcon	equ	0xFF2
  6185                           postinc0	equ	0xFEE
  6186                           fsr0h	equ	0xFEA
  6187                           fsr0l	equ	0xFE9
  6188                           wreg	equ	0xFE8
  6189                           indf1	equ	0xFE7
  6190                           postdec1	equ	0xFE5
  6191                           fsr1h	equ	0xFE2
  6192                           fsr1l	equ	0xFE1
  6193                           bsr	equ	0xFE0
  6194                           indf2	equ	0xFDF
  6195                           postinc2	equ	0xFDE
  6196                           postdec2	equ	0xFDD
  6197                           plusw2	equ	0xFDB
  6198                           fsr2h	equ	0xFDA
  6199                           fsr2l	equ	0xFD9
  6200                           status	equ	0xFD8
  6201                           
  6202 ;; *************** function _USBIncrement1msInternalTimers *****************
  6203 ;; Defined at:
  6204 ;;		line 3025 in file "../USBConverter/mla/v2017_03_06/framework/usb/src/usb_device.c"
  6205 ;; Parameters:    Size  Location     Type
  6206 ;;		None
  6207 ;; Auto vars:     Size  Location     Type
  6208 ;;		None
  6209 ;; Return value:  Size  Location     Type
  6210 ;;                  1    wreg      void 
  6211 ;; Registers used:
  6212 ;;		wreg, status,2, status,0
  6213 ;; Tracked objects:
  6214 ;;		On entry : 0/0
  6215 ;;		On exit  : 0/0
  6216 ;;		Unchanged: 0/0
  6217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6218 ;;      Params:         0       0       0       0       0       0       0       0       0
  6219 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6220 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6221 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6222 ;;Total ram usage:        0 bytes
  6223 ;; Hardware stack levels used:    1
  6224 ;; This function calls:
  6225 ;;		Nothing
  6226 ;; This function is called by:
  6227 ;;		_USBDeviceTasks
  6228 ;; This function uses a non-reentrant model
  6229 ;;
  6230                           
  6231                           	psect	text32
  6232  002B14                     __ptext32:
  6233                           	opt stack 0
  6234  002B14                     _USBIncrement1msInternalTimers:
  6235                           	opt stack 22
  6236                           
  6237                           ;usb_device.c: 3033: USB1msTickCount++;
  6238                           
  6239                           ;incstack = 0
  6240  002B14  0E01               	movlw	1
  6241  002B16  262C               	addwf	_USB1msTickCount,f,c	;volatile
  6242  002B18  0E00               	movlw	0
  6243  002B1A  222D               	addwfc	_USB1msTickCount+1,f,c	;volatile
  6244  002B1C  222E               	addwfc	_USB1msTickCount+2,f,c	;volatile
  6245  002B1E  222F               	addwfc	_USB1msTickCount+3,f,c	;volatile
  6246                           
  6247                           ;usb_device.c: 3034: if(USBBusIsSuspended == 0)
  6248  002B20  0100               	movlb	0	; () banked
  6249  002B22  5192               	movf	_USBBusIsSuspended& (0+255),w,b	;volatile
  6250  002B24  A4D8               	btfss	status,2,c
  6251  002B26  0012               	return	
  6252                           
  6253                           ; BSR set to: 0
  6254                           ;usb_device.c: 3035: {
  6255                           ;usb_device.c: 3036: USBTicksSinceSuspendEnd++;
  6256  002B28  0100               	movlb	0	; () banked
  6257  002B2A  2B91               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b	;volatile
  6258                           
  6259                           ; BSR set to: 0
  6260                           ;usb_device.c: 3038: if(USBTicksSinceSuspendEnd == 0)
  6261  002B2C  0100               	movlb	0	; () banked
  6262  002B2E  5191               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b	;volatile
  6263  002B30  A4D8               	btfss	status,2,c
  6264  002B32  0012               	return	
  6265                           
  6266                           ; BSR set to: 0
  6267                           ;usb_device.c: 3039: {
  6268                           ;usb_device.c: 3040: USBTicksSinceSuspendEnd = 255;
  6269  002B34  0100               	movlb	0	; () banked
  6270  002B36  6991               	setf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
  6271                           
  6272                           ; BSR set to: 0
  6273  002B38  0012               	return	
  6274  002B3A                     __end_of_USBIncrement1msInternalTimers:
  6275                           	opt stack 0
  6276                           pclatu	equ	0xFFB
  6277                           pclath	equ	0xFFA
  6278                           tblptru	equ	0xFF8
  6279                           tblptrh	equ	0xFF7
  6280                           tblptrl	equ	0xFF6
  6281                           tablat	equ	0xFF5
  6282                           prodh	equ	0xFF4
  6283                           prodl	equ	0xFF3
  6284                           intcon	equ	0xFF2
  6285                           postinc0	equ	0xFEE
  6286                           fsr0h	equ	0xFEA
  6287                           fsr0l	equ	0xFE9
  6288                           wreg	equ	0xFE8
  6289                           indf1	equ	0xFE7
  6290                           postdec1	equ	0xFE5
  6291                           fsr1h	equ	0xFE2
  6292                           fsr1l	equ	0xFE1
  6293                           bsr	equ	0xFE0
  6294                           indf2	equ	0xFDF
  6295                           postinc2	equ	0xFDE
  6296                           postdec2	equ	0xFDD
  6297                           plusw2	equ	0xFDB
  6298                           fsr2h	equ	0xFDA
  6299                           fsr2l	equ	0xFD9
  6300                           status	equ	0xFD8
  6301                           
  6302 ;; *************** function _USBCtrlEPService *****************
  6303 ;; Defined at:
  6304 ;;		line 2372 in file "../USBConverter/mla/v2017_03_06/framework/usb/src/usb_device.c"
  6305 ;; Parameters:    Size  Location     Type
  6306 ;;		None
  6307 ;; Auto vars:     Size  Location     Type
  6308 ;;		None
  6309 ;; Return value:  Size  Location     Type
  6310 ;;                  1    wreg      void 
  6311 ;; Registers used:
  6312 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6313 ;; Tracked objects:
  6314 ;;		On entry : 0/0
  6315 ;;		On exit  : 0/0
  6316 ;;		Unchanged: 0/0
  6317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6318 ;;      Params:         0       0       0       0       0       0       0       0       0
  6319 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6320 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6321 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6322 ;;Total ram usage:        1 bytes
  6323 ;; Hardware stack levels used:    1
  6324 ;; Hardware stack levels required when called:    8
  6325 ;; This function calls:
  6326 ;;		_USBCtrlTrfInHandler
  6327 ;;		_USBCtrlTrfOutHandler
  6328 ;;		_USBCtrlTrfSetupHandler
  6329 ;;		_memcpy
  6330 ;; This function is called by:
  6331 ;;		_USBDeviceTasks
  6332 ;; This function uses a non-reentrant model
  6333 ;;
  6334                           
  6335                           	psect	text33
  6336  002196                     __ptext33:
  6337                           	opt stack 0
  6338  002196                     _USBCtrlEPService:
  6339                           	opt stack 14
  6340                           
  6341                           ;usb_device.c: 2378: USBStatusStageTimeoutCounter = (uint8_t)45;
  6342                           
  6343                           ; BSR set to: 0
  6344                           ;incstack = 0
  6345  002196  0E2D               	movlw	45
  6346  002198  6E43               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
  6347                           
  6348                           ;usb_device.c: 2382: if((USTATcopy.Val & ~0x02) == 0x00)
  6349  00219A  C052  F01C         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
  6350  00219E  0EFD               	movlw	253
  6351  0021A0  161C               	andwf	??_USBCtrlEPService,f,c
  6352  0021A2  A4D8               	btfss	status,2,c
  6353  0021A4  D03B               	goto	i2l4589
  6354                           
  6355                           ;usb_device.c: 2383: {
  6356                           ;usb_device.c: 2386: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  6357  0021A6  C052  F01C         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
  6358  0021AA  90D8               	bcf	status,0,c
  6359  0021AC  321C               	rrcf	??_USBCtrlEPService,f,c
  6360  0021AE  0E3F               	movlw	63
  6361  0021B0  161C               	andwf	??_USBCtrlEPService,f,c
  6362  0021B2  501C               	movf	??_USBCtrlEPService,w,c
  6363  0021B4  0D04               	mullw	4
  6364  0021B6  0E00               	movlw	0
  6365  0021B8  24F3               	addwf	prodl,w,c
  6366  0021BA  6E37               	movwf	_pBDTEntryEP0OutCurrent,c
  6367  0021BC  0E04               	movlw	4
  6368  0021BE  20F4               	addwfc	prodh,w,c
  6369  0021C0  6E38               	movwf	_pBDTEntryEP0OutCurrent+1,c
  6370                           
  6371                           ;usb_device.c: 2394: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  6372  0021C2  C037  F035         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  6373  0021C6  C038  F036         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  6374                           
  6375                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
  6376  0021CA  0E04               	movlw	4
  6377  0021CC  1835               	xorwf	_pBDTEntryEP0OutNext,w,c
  6378  0021CE  6E35               	movwf	_pBDTEntryEP0OutNext,c
  6379  0021D0  5036               	movf	_pBDTEntryEP0OutNext+1,w,c
  6380  0021D2  6E36               	movwf	_pBDTEntryEP0OutNext+1,c
  6381                           
  6382                           ;usb_device.c: 2399: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  6383  0021D4  C037  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  6384  0021D8  C038  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  6385  0021DC  30DF               	rrcf	indf2,w,c
  6386  0021DE  32E8               	rrcf	wreg,f,c
  6387  0021E0  0B0F               	andlw	15
  6388  0021E2  0A0D               	xorlw	13
  6389  0021E4  A4D8               	btfss	status,2,c
  6390  0021E6  D017               	goto	i2l4587
  6391                           
  6392                           ;usb_device.c: 2400: {
  6393                           ;usb_device.c: 2405: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
  6394  0021E8  0E30               	movlw	48
  6395  0021EA  6E01               	movwf	memcpy@d1,c
  6396  0021EC  0E04               	movlw	4
  6397  0021EE  6E02               	movwf	memcpy@d1+1,c
  6398  0021F0  EE20 F002          	lfsr	2,2
  6399  0021F4  5037               	movf	_pBDTEntryEP0OutCurrent,w,c
  6400  0021F6  26D9               	addwf	fsr2l,f,c
  6401  0021F8  5038               	movf	_pBDTEntryEP0OutCurrent+1,w,c
  6402  0021FA  22DA               	addwfc	fsr2h,f,c
  6403  0021FC  CFDE F003          	movff	postinc2,memcpy@s1
  6404  002200  CFDD F004          	movff	postdec2,memcpy@s1+1
  6405  002204  0E00               	movlw	0
  6406  002206  6E06               	movwf	memcpy@n+1,c
  6407  002208  0E08               	movlw	8
  6408  00220A  6E05               	movwf	memcpy@n,c
  6409  00220C  EC4C  F014         	call	_memcpy	;wreg free
  6410                           
  6411                           ;usb_device.c: 2408: USBCtrlTrfSetupHandler();
  6412  002210  EC29  F010         	call	_USBCtrlTrfSetupHandler	;wreg free
  6413                           
  6414                           ;usb_device.c: 2409: }
  6415  002214  0012               	return	
  6416  002216                     i2l4587:
  6417                           
  6418                           ;usb_device.c: 2410: else
  6419                           ;usb_device.c: 2411: {
  6420                           ;usb_device.c: 2413: USBCtrlTrfOutHandler();
  6421  002216  ECF1  F013         	call	_USBCtrlTrfOutHandler	;wreg free
  6422                           
  6423                           ;usb_device.c: 2414: }
  6424                           ;usb_device.c: 2415: }
  6425  00221A  0012               	return	
  6426  00221C                     i2l4589:
  6427                           
  6428                           ;usb_device.c: 2416: else if((USTATcopy.Val & ~0x02) == 0x04)
  6429  00221C  5052               	movf	_USTATcopy,w,c	;volatile
  6430  00221E  0BFD               	andlw	253
  6431  002220  0A04               	xorlw	4
  6432  002222  A4D8               	btfss	status,2,c
  6433  002224  0012               	return	
  6434                           
  6435                           ;usb_device.c: 2417: {
  6436                           ;usb_device.c: 2420: USBCtrlTrfInHandler();
  6437  002226  EC2C  F00B         	call	_USBCtrlTrfInHandler	;wreg free
  6438  00222A  0012               	return	
  6439  00222C                     __end_of_USBCtrlEPService:
  6440                           	opt stack 0
  6441                           pclatu	equ	0xFFB
  6442                           pclath	equ	0xFFA
  6443                           tblptru	equ	0xFF8
  6444                           tblptrh	equ	0xFF7
  6445                           tblptrl	equ	0xFF6
  6446                           tablat	equ	0xFF5
  6447                           prodh	equ	0xFF4
  6448                           prodl	equ	0xFF3
  6449                           intcon	equ	0xFF2
  6450                           postinc0	equ	0xFEE
  6451                           fsr0h	equ	0xFEA
  6452                           fsr0l	equ	0xFE9
  6453                           wreg	equ	0xFE8
  6454                           indf1	equ	0xFE7
  6455                           postdec1	equ	0xFE5
  6456                           fsr1h	equ	0xFE2
  6457                           fsr1l	equ	0xFE1
  6458                           bsr	equ	0xFE0
  6459                           indf2	equ	0xFDF
  6460                           postinc2	equ	0xFDE
  6461                           postdec2	equ	0xFDD
  6462                           plusw2	equ	0xFDB
  6463                           fsr2h	equ	0xFDA
  6464                           fsr2l	equ	0xFD9
  6465                           status	equ	0xFD8
  6466                           
  6467 ;; *************** function _memcpy *****************
  6468 ;; Defined at:
  6469 ;;		line 27 in file "D:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memcpy.c"
  6470 ;; Parameters:    Size  Location     Type
  6471 ;;  d1              2    0[COMRAM] PTR void 
  6472 ;;		 -> SetupPkt(8), 
  6473 ;;  s1              2    2[COMRAM] PTR const void 
  6474 ;;		 -> CtrlTrfData(8), RAM(2047), SetupPkt(8), 
  6475 ;;  n               2    4[COMRAM] unsigned int 
  6476 ;; Auto vars:     Size  Location     Type
  6477 ;;  s               2    8[COMRAM] PTR const unsigned char 
  6478 ;;		 -> CtrlTrfData(8), RAM(2047), SetupPkt(8), 
  6479 ;;  d               2    6[COMRAM] PTR unsigned char 
  6480 ;;		 -> SetupPkt(8), 
  6481 ;;  tmp             1   10[COMRAM] unsigned char 
  6482 ;; Return value:  Size  Location     Type
  6483 ;;                  2    0[COMRAM] PTR void 
  6484 ;; Registers used:
  6485 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6486 ;; Tracked objects:
  6487 ;;		On entry : 0/0
  6488 ;;		On exit  : 0/0
  6489 ;;		Unchanged: 0/0
  6490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6491 ;;      Params:         6       0       0       0       0       0       0       0       0
  6492 ;;      Locals:         5       0       0       0       0       0       0       0       0
  6493 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6494 ;;      Totals:        11       0       0       0       0       0       0       0       0
  6495 ;;Total ram usage:       11 bytes
  6496 ;; Hardware stack levels used:    1
  6497 ;; This function calls:
  6498 ;;		Nothing
  6499 ;; This function is called by:
  6500 ;;		_USBCtrlEPService
  6501 ;; This function uses a non-reentrant model
  6502 ;;
  6503                           
  6504                           	psect	text34
  6505  002898                     __ptext34:
  6506                           	opt stack 0
  6507  002898                     _memcpy:
  6508                           	opt stack 21
  6509                           
  6510                           ;incstack = 0
  6511  002898  C003  F009         	movff	memcpy@s1,memcpy@s
  6512  00289C  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  6513  0028A0  C001  F007         	movff	memcpy@d1,memcpy@d
  6514  0028A4  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  6515  0028A8  D010               	goto	i2l4227
  6516  0028AA                     i2l4219:
  6517  0028AA  C009  FFD9         	movff	memcpy@s,fsr2l
  6518  0028AE  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  6519  0028B2  50DF               	movf	indf2,w,c
  6520  0028B4  6E0B               	movwf	memcpy@tmp,c
  6521  0028B6  4A09               	infsnz	memcpy@s,f,c
  6522  0028B8  2A0A               	incf	memcpy@s+1,f,c
  6523  0028BA  C007  FFD9         	movff	memcpy@d,fsr2l
  6524  0028BE  C008  FFDA         	movff	memcpy@d+1,fsr2h
  6525  0028C2  C00B  FFDF         	movff	memcpy@tmp,indf2
  6526  0028C6  4A07               	infsnz	memcpy@d,f,c
  6527  0028C8  2A08               	incf	memcpy@d+1,f,c
  6528  0028CA                     i2l4227:
  6529  0028CA  0605               	decf	memcpy@n,f,c
  6530  0028CC  A0D8               	btfss	status,0,c
  6531  0028CE  0606               	decf	memcpy@n+1,f,c
  6532  0028D0  2805               	incf	memcpy@n,w,c
  6533  0028D2  E1EB               	bnz	i2l4219
  6534  0028D4  2806               	incf	memcpy@n+1,w,c
  6535  0028D6  B4D8               	btfsc	status,2,c
  6536  0028D8  0012               	return	
  6537  0028DA  D7E7               	goto	i2l4219
  6538  0028DC                     __end_of_memcpy:
  6539                           	opt stack 0
  6540                           pclatu	equ	0xFFB
  6541                           pclath	equ	0xFFA
  6542                           tblptru	equ	0xFF8
  6543                           tblptrh	equ	0xFF7
  6544                           tblptrl	equ	0xFF6
  6545                           tablat	equ	0xFF5
  6546                           prodh	equ	0xFF4
  6547                           prodl	equ	0xFF3
  6548                           intcon	equ	0xFF2
  6549                           postinc0	equ	0xFEE
  6550                           fsr0h	equ	0xFEA
  6551                           fsr0l	equ	0xFE9
  6552                           wreg	equ	0xFE8
  6553                           indf1	equ	0xFE7
  6554                           postdec1	equ	0xFE5
  6555                           fsr1h	equ	0xFE2
  6556                           fsr1l	equ	0xFE1
  6557                           bsr	equ	0xFE0
  6558                           indf2	equ	0xFDF
  6559                           postinc2	equ	0xFDE
  6560                           postdec2	equ	0xFDD
  6561                           plusw2	equ	0xFDB
  6562                           fsr2h	equ	0xFDA
  6563                           fsr2l	equ	0xFD9
  6564                           status	equ	0xFD8
  6565                           
  6566 ;; *************** function _USBCtrlTrfSetupHandler *****************
  6567 ;; Defined at:
  6568 ;;		line 2465 in file "../USBConverter/mla/v2017_03_06/framework/usb/src/usb_device.c"
  6569 ;; Parameters:    Size  Location     Type
  6570 ;;		None
  6571 ;; Auto vars:     Size  Location     Type
  6572 ;;		None
  6573 ;; Return value:  Size  Location     Type
  6574 ;;                  1    wreg      void 
  6575 ;; Registers used:
  6576 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6577 ;; Tracked objects:
  6578 ;;		On entry : 0/0
  6579 ;;		On exit  : 0/0
  6580 ;;		Unchanged: 0/0
  6581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6582 ;;      Params:         0       0       0       0       0       0       0       0       0
  6583 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6584 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6585 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6586 ;;Total ram usage:        0 bytes
  6587 ;; Hardware stack levels used:    1
  6588 ;; Hardware stack levels required when called:    7
  6589 ;; This function calls:
  6590 ;;		_USBCheckStdRequest
  6591 ;;		_USBCtrlEPServiceComplete
  6592 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6593 ;; This function is called by:
  6594 ;;		_USBCtrlEPService
  6595 ;; This function uses a non-reentrant model
  6596 ;;
  6597                           
  6598                           	psect	text35
  6599  002052                     __ptext35:
  6600                           	opt stack 0
  6601  002052                     _USBCtrlTrfSetupHandler:
  6602                           	opt stack 14
  6603                           
  6604                           ;usb_device.c: 2470: shortPacketStatus = 0;
  6605                           
  6606                           ;incstack = 0
  6607  002052  0E00               	movlw	0
  6608  002054  6E48               	movwf	_shortPacketStatus,c	;volatile
  6609                           
  6610                           ;usb_device.c: 2471: USBDeferStatusStagePacket = 0;
  6611  002056  0E00               	movlw	0
  6612  002058  6E42               	movwf	_USBDeferStatusStagePacket,c	;volatile
  6613                           
  6614                           ;usb_device.c: 2472: USBDeferINDataStagePackets = 0;
  6615  00205A  0E00               	movlw	0
  6616  00205C  6E3F               	movwf	_USBDeferINDataStagePackets,c	;volatile
  6617                           
  6618                           ;usb_device.c: 2473: USBDeferOUTDataStagePackets = 0;
  6619  00205E  0E00               	movlw	0
  6620  002060  6E3E               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  6621                           
  6622                           ;usb_device.c: 2474: BothEP0OutUOWNsSet = 0;
  6623  002062  0E00               	movlw	0
  6624  002064  6E44               	movwf	_BothEP0OutUOWNsSet,c	;volatile
  6625                           
  6626                           ;usb_device.c: 2475: controlTransferState = 0;
  6627  002066  0E00               	movlw	0
  6628  002068  6E47               	movwf	_controlTransferState,c	;volatile
  6629                           
  6630                           ;usb_device.c: 2484: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  6631  00206A  C06E  FFD9         	movff	_pBDTEntryIn,fsr2l
  6632  00206E  C06F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  6633  002072  0E7F               	movlw	127
  6634  002074  16DF               	andwf	indf2,f,c
  6635                           
  6636                           ;usb_device.c: 2486: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  6637  002076  0E04               	movlw	4
  6638  002078  0100               	movlb	0	; () banked
  6639  00207A  196E               	xorwf	_pBDTEntryIn& (0+255),w,b
  6640  00207C  0100               	movlb	0	; () banked
  6641  00207E  6F6E               	movwf	_pBDTEntryIn& (0+255),b
  6642  002080  0100               	movlb	0	; () banked
  6643  002082  516F               	movf	(_pBDTEntryIn+1)& (0+255),w,b
  6644  002084  0100               	movlb	0	; () banked
  6645  002086  6F6F               	movwf	(_pBDTEntryIn+1)& (0+255),b
  6646                           
  6647                           ; BSR set to: 0
  6648                           ;usb_device.c: 2487: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  6649  002088  C06E  FFD9         	movff	_pBDTEntryIn,fsr2l
  6650  00208C  C06F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  6651  002090  0E7F               	movlw	127
  6652  002092  16DF               	andwf	indf2,f,c
  6653                           
  6654                           ; BSR set to: 0
  6655                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  6656  002094  0E04               	movlw	4
  6657  002096  0100               	movlb	0	; () banked
  6658  002098  196E               	xorwf	_pBDTEntryIn& (0+255),w,b
  6659  00209A  0100               	movlb	0	; () banked
  6660  00209C  6F6E               	movwf	_pBDTEntryIn& (0+255),b
  6661  00209E  0100               	movlb	0	; () banked
  6662  0020A0  516F               	movf	(_pBDTEntryIn+1)& (0+255),w,b
  6663  0020A2  0100               	movlb	0	; () banked
  6664  0020A4  6F6F               	movwf	(_pBDTEntryIn+1)& (0+255),b
  6665                           
  6666                           ; BSR set to: 0
  6667                           ;usb_device.c: 2489: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  6668  0020A6  C035  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  6669  0020AA  C036  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  6670  0020AE  0E7F               	movlw	127
  6671  0020B0  16DF               	andwf	indf2,f,c
  6672                           
  6673                           ; BSR set to: 0
  6674                           ;usb_device.c: 2491: inPipes[0].info.Val = 0;
  6675  0020B2  0E00               	movlw	0
  6676  0020B4  0100               	movlb	0	; () banked
  6677  0020B6  6F6B               	movwf	(_inPipes+3)& (0+255),b	;volatile
  6678                           
  6679                           ; BSR set to: 0
  6680                           ;usb_device.c: 2492: inPipes[0].wCount.Val = 0;
  6681  0020B8  0E00               	movlw	0
  6682  0020BA  0100               	movlb	0	; () banked
  6683  0020BC  6F6D               	movwf	(_inPipes+5)& (0+255),b	;volatile
  6684  0020BE  0E00               	movlw	0
  6685  0020C0  6F6C               	movwf	(_inPipes+4)& (0+255),b	;volatile
  6686                           
  6687                           ; BSR set to: 0
  6688                           ;usb_device.c: 2493: outPipes[0].info.Val = 0;
  6689  0020C2  0E00               	movlw	0
  6690  0020C4  0100               	movlb	0	; () banked
  6691  0020C6  6F63               	movwf	(_outPipes+3)& (0+255),b	;volatile
  6692                           
  6693                           ; BSR set to: 0
  6694                           ;usb_device.c: 2494: outPipes[0].wCount.Val = 0;
  6695  0020C8  0E00               	movlw	0
  6696  0020CA  0100               	movlb	0	; () banked
  6697  0020CC  6F65               	movwf	(_outPipes+5)& (0+255),b	;volatile
  6698  0020CE  0E00               	movlw	0
  6699  0020D0  6F64               	movwf	(_outPipes+4)& (0+255),b	;volatile
  6700                           
  6701                           ; BSR set to: 0
  6702                           ;usb_device.c: 2500: USBCheckStdRequest();
  6703  0020D2  EC21  F00C         	call	_USBCheckStdRequest	;wreg free
  6704                           
  6705                           ;usb_device.c: 2501: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  6706  0020D6  0E00               	movlw	0
  6707  0020D8  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  6708  0020DA  0E03               	movlw	3
  6709  0020DC  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  6710  0020DE  0E00               	movlw	0
  6711  0020E0  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  6712  0020E2  0E00               	movlw	0
  6713  0020E4  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  6714  0020E6  0E00               	movlw	0
  6715  0020E8  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  6716  0020EA  0E00               	movlw	0
  6717  0020EC  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  6718  0020EE  ECC3  F013         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  6719                           
  6720                           ;usb_device.c: 2514: USBCtrlEPServiceComplete();
  6721  0020F2  ECA7  F00B         	call	_USBCtrlEPServiceComplete	;wreg free
  6722  0020F6  0012               	return		;funcret
  6723  0020F8                     __end_of_USBCtrlTrfSetupHandler:
  6724                           	opt stack 0
  6725                           pclatu	equ	0xFFB
  6726                           pclath	equ	0xFFA
  6727                           tblptru	equ	0xFF8
  6728                           tblptrh	equ	0xFF7
  6729                           tblptrl	equ	0xFF6
  6730                           tablat	equ	0xFF5
  6731                           prodh	equ	0xFF4
  6732                           prodl	equ	0xFF3
  6733                           intcon	equ	0xFF2
  6734                           postinc0	equ	0xFEE
  6735                           fsr0h	equ	0xFEA
  6736                           fsr0l	equ	0xFE9
  6737                           wreg	equ	0xFE8
  6738                           indf1	equ	0xFE7
  6739                           postdec1	equ	0xFE5
  6740                           fsr1h	equ	0xFE2
  6741                           fsr1l	equ	0xFE1
  6742                           bsr	equ	0xFE0
  6743                           indf2	equ	0xFDF
  6744                           postinc2	equ	0xFDE
  6745                           postdec2	equ	0xFDD
  6746                           plusw2	equ	0xFDB
  6747                           fsr2h	equ	0xFDA
  6748                           fsr2l	equ	0xFD9
  6749                           status	equ	0xFD8
  6750                           
  6751 ;; *************** function _USBCtrlEPServiceComplete *****************
  6752 ;; Defined at:
  6753 ;;		line 1616 in file "../USBConverter/mla/v2017_03_06/framework/usb/src/usb_device.c"
  6754 ;; Parameters:    Size  Location     Type
  6755 ;;		None
  6756 ;; Auto vars:     Size  Location     Type
  6757 ;;		None
  6758 ;; Return value:  Size  Location     Type
  6759 ;;                  1    wreg      void 
  6760 ;; Registers used:
  6761 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6762 ;; Tracked objects:
  6763 ;;		On entry : 0/0
  6764 ;;		On exit  : 0/0
  6765 ;;		Unchanged: 0/0
  6766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6767 ;;      Params:         0       0       0       0       0       0       0       0       0
  6768 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6769 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6770 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6771 ;;Total ram usage:        0 bytes
  6772 ;; Hardware stack levels used:    1
  6773 ;; Hardware stack levels required when called:    2
  6774 ;; This function calls:
  6775 ;;		_USBCtrlEPAllowDataStage
  6776 ;;		_USBCtrlEPAllowStatusStage
  6777 ;; This function is called by:
  6778 ;;		_USBCtrlTrfSetupHandler
  6779 ;; This function uses a non-reentrant model
  6780 ;;
  6781                           
  6782                           	psect	text36
  6783  00174E                     __ptext36:
  6784                           	opt stack 0
  6785  00174E                     _USBCtrlEPServiceComplete:
  6786                           	opt stack 18
  6787                           
  6788                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
  6789                           
  6790                           ;incstack = 0
  6791  00174E  986D               	bcf	3949,4,c	;volatile
  6792                           
  6793                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
  6794  001750  0100               	movlb	0	; () banked
  6795  001752  BF6B               	btfsc	(_inPipes+3)& (0+255),7,b	;volatile
  6796  001754  D039               	goto	i2l391
  6797                           
  6798                           ; BSR set to: 0
  6799                           ;usb_device.c: 1629: {
  6800                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
  6801  001756  0100               	movlb	0	; () banked
  6802  001758  AF63               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
  6803  00175A  D00B               	goto	i2l4041
  6804                           
  6805                           ; BSR set to: 0
  6806                           ;usb_device.c: 1631: {
  6807                           ;usb_device.c: 1632: controlTransferState = 2;
  6808  00175C  0E02               	movlw	2
  6809  00175E  6E47               	movwf	_controlTransferState,c	;volatile
  6810                           
  6811                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
  6812  001760  503E               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
  6813  001762  B4D8               	btfsc	status,2,c
  6814                           
  6815                           ; BSR set to: 0
  6816                           ;usb_device.c: 1644: {
  6817                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
  6818  001764  EC7C  F010         	call	_USBCtrlEPAllowDataStage	;wreg free
  6819                           
  6820                           ;usb_device.c: 1646: }
  6821                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
  6822  001768  0E00               	movlw	0
  6823  00176A  6E40               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  6824                           
  6825                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
  6826  00176C  0E00               	movlw	0
  6827  00176E  6E41               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  6828                           
  6829                           ;usb_device.c: 1652: }
  6830  001770  0012               	return	
  6831  001772                     i2l4041:
  6832                           
  6833                           ;usb_device.c: 1653: else
  6834                           ;usb_device.c: 1654: {
  6835                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
  6836  001772  EE20 F001          	lfsr	2,1
  6837  001776  5035               	movf	_pBDTEntryEP0OutNext,w,c
  6838  001778  26D9               	addwf	fsr2l,f,c
  6839  00177A  5036               	movf	_pBDTEntryEP0OutNext+1,w,c
  6840  00177C  22DA               	addwfc	fsr2h,f,c
  6841  00177E  0E08               	movlw	8
  6842  001780  6EDF               	movwf	indf2,c
  6843                           
  6844                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  6845  001782  EE20 F002          	lfsr	2,2
  6846  001786  5035               	movf	_pBDTEntryEP0OutNext,w,c
  6847  001788  26D9               	addwf	fsr2l,f,c
  6848  00178A  5036               	movf	_pBDTEntryEP0OutNext+1,w,c
  6849  00178C  22DA               	addwfc	fsr2h,f,c
  6850  00178E  0E30               	movlw	48
  6851  001790  6EDE               	movwf	postinc2,c
  6852  001792  0E04               	movlw	4
  6853  001794  6EDD               	movwf	postdec2,c
  6854                           
  6855                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  6856  001796  C035  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  6857  00179A  C036  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  6858  00179E  0E0C               	movlw	12
  6859  0017A0  6EDF               	movwf	indf2,c
  6860                           
  6861                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6862  0017A2  C035  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  6863  0017A6  C036  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  6864  0017AA  0E00               	movlw	0
  6865  0017AC  8EDB               	bsf	plusw2,7,c
  6866                           
  6867                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
  6868  0017AE  C06E  FFD9         	movff	_pBDTEntryIn,fsr2l
  6869  0017B2  C06F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  6870  0017B6  0E04               	movlw	4
  6871  0017B8  6EDF               	movwf	indf2,c
  6872                           
  6873                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
  6874  0017BA  C06E  FFD9         	movff	_pBDTEntryIn,fsr2l
  6875  0017BE  C06F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  6876  0017C2  0E00               	movlw	0
  6877  0017C4  8EDB               	bsf	plusw2,7,c
  6878                           
  6879                           ;usb_device.c: 1665: }
  6880                           ;usb_device.c: 1666: }
  6881  0017C6  0012               	return	
  6882  0017C8                     i2l391:
  6883                           
  6884                           ; BSR set to: 0
  6885                           ;usb_device.c: 1667: else
  6886                           ;usb_device.c: 1668: {
  6887                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
  6888  0017C8  0104               	movlb	4	; () banked
  6889  0017CA  AF30               	btfss	48,7,b	;volatile
  6890  0017CC  D010               	goto	i2l4061
  6891                           
  6892                           ; BSR set to: 4
  6893                           ;usb_device.c: 1670: {
  6894                           ;usb_device.c: 1671: controlTransferState = 1;
  6895  0017CE  0E01               	movlw	1
  6896  0017D0  6E47               	movwf	_controlTransferState,c	;volatile
  6897                           
  6898                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
  6899  0017D2  503F               	movf	_USBDeferINDataStagePackets,w,c	;volatile
  6900  0017D4  B4D8               	btfsc	status,2,c
  6901                           
  6902                           ; BSR set to: 4
  6903                           ;usb_device.c: 1686: {
  6904                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
  6905  0017D6  EC7C  F010         	call	_USBCtrlEPAllowDataStage	;wreg free
  6906                           
  6907                           ;usb_device.c: 1688: }
  6908                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
  6909  0017DA  0E00               	movlw	0
  6910  0017DC  6E40               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  6911                           
  6912                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
  6913  0017DE  0E00               	movlw	0
  6914  0017E0  6E41               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  6915                           
  6916                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
  6917  0017E2  5042               	movf	_USBDeferStatusStagePacket,w,c	;volatile
  6918  0017E4  A4D8               	btfss	status,2,c
  6919  0017E6  0012               	return	
  6920                           
  6921                           ;usb_device.c: 1713: {
  6922                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
  6923  0017E8  ECB5  F00E         	call	_USBCtrlEPAllowStatusStage	;wreg free
  6924                           
  6925                           ;usb_device.c: 1715: }
  6926                           ;usb_device.c: 1716: }
  6927  0017EC  0012               	return	
  6928  0017EE                     i2l4061:
  6929                           
  6930                           ;usb_device.c: 1717: else
  6931                           ;usb_device.c: 1718: {
  6932                           ;usb_device.c: 1729: controlTransferState = 2;
  6933  0017EE  0E02               	movlw	2
  6934  0017F0  6E47               	movwf	_controlTransferState,c	;volatile
  6935                           
  6936                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
  6937  0017F2  EE20 F001          	lfsr	2,1
  6938  0017F6  5035               	movf	_pBDTEntryEP0OutNext,w,c
  6939  0017F8  26D9               	addwf	fsr2l,f,c
  6940  0017FA  5036               	movf	_pBDTEntryEP0OutNext+1,w,c
  6941  0017FC  22DA               	addwfc	fsr2h,f,c
  6942  0017FE  0E08               	movlw	8
  6943  001800  6EDF               	movwf	indf2,c
  6944                           
  6945                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  6946  001802  EE20 F002          	lfsr	2,2
  6947  001806  5035               	movf	_pBDTEntryEP0OutNext,w,c
  6948  001808  26D9               	addwf	fsr2l,f,c
  6949  00180A  5036               	movf	_pBDTEntryEP0OutNext+1,w,c
  6950  00180C  22DA               	addwfc	fsr2h,f,c
  6951  00180E  0E30               	movlw	48
  6952  001810  6EDE               	movwf	postinc2,c
  6953  001812  0E04               	movlw	4
  6954  001814  6EDD               	movwf	postdec2,c
  6955                           
  6956                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  6957  001816  C035  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  6958  00181A  C036  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  6959  00181E  0E04               	movlw	4
  6960  001820  6EDF               	movwf	indf2,c
  6961                           
  6962                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6963  001822  C035  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  6964  001826  C036  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  6965  00182A  0E00               	movlw	0
  6966  00182C  8EDB               	bsf	plusw2,7,c
  6967                           
  6968                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
  6969  00182E  0E00               	movlw	0
  6970  001830  6E40               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  6971                           
  6972                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
  6973  001832  0E00               	movlw	0
  6974  001834  6E41               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  6975                           
  6976                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
  6977  001836  5042               	movf	_USBDeferStatusStagePacket,w,c	;volatile
  6978  001838  A4D8               	btfss	status,2,c
  6979  00183A  0012               	return	
  6980                           
  6981                           ;usb_device.c: 1741: {
  6982                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
  6983  00183C  ECB5  F00E         	call	_USBCtrlEPAllowStatusStage	;wreg free
  6984  001840  0012               	return	
  6985  001842                     __end_of_USBCtrlEPServiceComplete:
  6986                           	opt stack 0
  6987                           pclatu	equ	0xFFB
  6988                           pclath	equ	0xFFA
  6989                           tblptru	equ	0xFF8
  6990                           tblptrh	equ	0xFF7
  6991                           tblptrl	equ	0xFF6
  6992                           tablat	equ	0xFF5
  6993                           prodh	equ	0xFF4
  6994                           prodl	equ	0xFF3
  6995                           intcon	equ	0xFF2
  6996                           postinc0	equ	0xFEE
  6997                           fsr0h	equ	0xFEA
  6998                           fsr0l	equ	0xFE9
  6999                           wreg	equ	0xFE8
  7000                           indf1	equ	0xFE7
  7001                           postdec1	equ	0xFE5
  7002                           fsr1h	equ	0xFE2
  7003                           fsr1l	equ	0xFE1
  7004                           bsr	equ	0xFE0
  7005                           indf2	equ	0xFDF
  7006                           postinc2	equ	0xFDE
  7007                           postdec2	equ	0xFDD
  7008                           plusw2	equ	0xFDB
  7009                           fsr2h	equ	0xFDA
  7010                           fsr2l	equ	0xFD9
  7011                           status	equ	0xFD8
  7012                           
  7013 ;; *************** function _USBCtrlEPAllowDataStage *****************
  7014 ;; Defined at:
  7015 ;;		line 1488 in file "../USBConverter/mla/v2017_03_06/framework/usb/src/usb_device.c"
  7016 ;; Parameters:    Size  Location     Type
  7017 ;;		None
  7018 ;; Auto vars:     Size  Location     Type
  7019 ;;		None
  7020 ;; Return value:  Size  Location     Type
  7021 ;;                  1    wreg      void 
  7022 ;; Registers used:
  7023 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7024 ;; Tracked objects:
  7025 ;;		On entry : 0/0
  7026 ;;		On exit  : 0/0
  7027 ;;		Unchanged: 0/0
  7028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7029 ;;      Params:         0       0       0       0       0       0       0       0       0
  7030 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7031 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7032 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7033 ;;Total ram usage:        0 bytes
  7034 ;; Hardware stack levels used:    1
  7035 ;; Hardware stack levels required when called:    1
  7036 ;; This function calls:
  7037 ;;		_USBCtrlTrfTxService
  7038 ;; This function is called by:
  7039 ;;		_USBCtrlEPServiceComplete
  7040 ;; This function uses a non-reentrant model
  7041 ;;
  7042                           
  7043                           	psect	text37
  7044  0020F8                     __ptext37:
  7045                           	opt stack 0
  7046  0020F8                     _USBCtrlEPAllowDataStage:
  7047                           	opt stack 18
  7048                           
  7049                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
  7050                           
  7051                           ;incstack = 0
  7052  0020F8  0E00               	movlw	0
  7053  0020FA  6E3F               	movwf	_USBDeferINDataStagePackets,c	;volatile
  7054                           
  7055                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
  7056  0020FC  0E00               	movlw	0
  7057  0020FE  6E3E               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  7058                           
  7059                           ;usb_device.c: 1493: if(controlTransferState == 2)
  7060  002100  0E02               	movlw	2
  7061  002102  1847               	xorwf	_controlTransferState,w,c	;volatile
  7062  002104  A4D8               	btfss	status,2,c
  7063  002106  D01F               	goto	i2l3721
  7064                           
  7065                           ;usb_device.c: 1494: {
  7066                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
  7067  002108  EE20 F001          	lfsr	2,1
  7068  00210C  5035               	movf	_pBDTEntryEP0OutNext,w,c
  7069  00210E  26D9               	addwf	fsr2l,f,c
  7070  002110  5036               	movf	_pBDTEntryEP0OutNext+1,w,c
  7071  002112  22DA               	addwfc	fsr2h,f,c
  7072  002114  0E08               	movlw	8
  7073  002116  6EDF               	movwf	indf2,c
  7074                           
  7075                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  7076  002118  EE20 F002          	lfsr	2,2
  7077  00211C  5035               	movf	_pBDTEntryEP0OutNext,w,c
  7078  00211E  26D9               	addwf	fsr2l,f,c
  7079  002120  5036               	movf	_pBDTEntryEP0OutNext+1,w,c
  7080  002122  22DA               	addwfc	fsr2h,f,c
  7081  002124  0E38               	movlw	56
  7082  002126  6EDE               	movwf	postinc2,c
  7083  002128  0E04               	movlw	4
  7084  00212A  6EDD               	movwf	postdec2,c
  7085                           
  7086                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  7087  00212C  C035  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  7088  002130  C036  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  7089  002134  0E48               	movlw	72
  7090  002136  6EDF               	movwf	indf2,c
  7091                           
  7092                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  7093  002138  C035  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  7094  00213C  C036  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  7095  002140  0E00               	movlw	0
  7096  002142  8EDB               	bsf	plusw2,7,c
  7097                           
  7098                           ;usb_device.c: 1500: }
  7099  002144  0012               	return	
  7100  002146                     i2l3721:
  7101                           
  7102                           ;usb_device.c: 1501: else
  7103                           ;usb_device.c: 1502: {
  7104                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  7105  002146  0100               	movlb	0	; () banked
  7106  002148  516C               	movf	(_inPipes+4)& (0+255),w,b	;volatile
  7107  00214A  0104               	movlb	4	; () banked
  7108  00214C  5D36               	subwf	54,w,b	;volatile
  7109  00214E  0100               	movlb	0	; () banked
  7110  002150  516D               	movf	(_inPipes+5)& (0+255),w,b	;volatile
  7111  002152  0104               	movlb	4	; () banked
  7112  002154  5937               	subwfb	55,w,b	;volatile
  7113  002156  B0D8               	btfsc	status,0,c
  7114  002158  D004               	goto	i2l3725
  7115                           
  7116                           ; BSR set to: 4
  7117                           ;usb_device.c: 1506: {
  7118                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
  7119  00215A  C436 F06C          	movff	1078,_inPipes+4	;volatile
  7120  00215E  C437 F06D          	movff	1079,_inPipes+5	;volatile
  7121  002162                     i2l3725:
  7122                           
  7123                           ; BSR set to: 4
  7124                           ;usb_device.c: 1508: }
  7125                           ;usb_device.c: 1509: USBCtrlTrfTxService();
  7126  002162  EC7D  F00D         	call	_USBCtrlTrfTxService	;wreg free
  7127                           
  7128                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
  7129  002166  0100               	movlb	0	; () banked
  7130  002168  EE20 F002          	lfsr	2,2
  7131  00216C  516E               	movf	_pBDTEntryIn& (0+255),w,b
  7132  00216E  26D9               	addwf	fsr2l,f,c
  7133  002170  516F               	movf	(_pBDTEntryIn+1)& (0+255),w,b
  7134  002172  22DA               	addwfc	fsr2h,f,c
  7135  002174  0E38               	movlw	56
  7136  002176  6EDE               	movwf	postinc2,c
  7137  002178  0E04               	movlw	4
  7138  00217A  6EDD               	movwf	postdec2,c
  7139                           
  7140                           ; BSR set to: 0
  7141                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  7142  00217C  C06E  FFD9         	movff	_pBDTEntryIn,fsr2l
  7143  002180  C06F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  7144  002184  0E48               	movlw	72
  7145  002186  6EDF               	movwf	indf2,c
  7146                           
  7147                           ; BSR set to: 0
  7148                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
  7149  002188  C06E  FFD9         	movff	_pBDTEntryIn,fsr2l
  7150  00218C  C06F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  7151  002190  0E00               	movlw	0
  7152  002192  8EDB               	bsf	plusw2,7,c
  7153  002194  0012               	return	
  7154  002196                     __end_of_USBCtrlEPAllowDataStage:
  7155                           	opt stack 0
  7156                           pclatu	equ	0xFFB
  7157                           pclath	equ	0xFFA
  7158                           tblptru	equ	0xFF8
  7159                           tblptrh	equ	0xFF7
  7160                           tblptrl	equ	0xFF6
  7161                           tablat	equ	0xFF5
  7162                           prodh	equ	0xFF4
  7163                           prodl	equ	0xFF3
  7164                           intcon	equ	0xFF2
  7165                           postinc0	equ	0xFEE
  7166                           fsr0h	equ	0xFEA
  7167                           fsr0l	equ	0xFE9
  7168                           wreg	equ	0xFE8
  7169                           indf1	equ	0xFE7
  7170                           postdec1	equ	0xFE5
  7171                           fsr1h	equ	0xFE2
  7172                           fsr1l	equ	0xFE1
  7173                           bsr	equ	0xFE0
  7174                           indf2	equ	0xFDF
  7175                           postinc2	equ	0xFDE
  7176                           postdec2	equ	0xFDD
  7177                           plusw2	equ	0xFDB
  7178                           fsr2h	equ	0xFDA
  7179                           fsr2l	equ	0xFD9
  7180                           status	equ	0xFD8
  7181                           
  7182 ;; *************** function _USBCheckStdRequest *****************
  7183 ;; Defined at:
  7184 ;;		line 2686 in file "../USBConverter/mla/v2017_03_06/framework/usb/src/usb_device.c"
  7185 ;; Parameters:    Size  Location     Type
  7186 ;;		None
  7187 ;; Auto vars:     Size  Location     Type
  7188 ;;		None
  7189 ;; Return value:  Size  Location     Type
  7190 ;;                  1    wreg      void 
  7191 ;; Registers used:
  7192 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7193 ;; Tracked objects:
  7194 ;;		On entry : 0/0
  7195 ;;		On exit  : 0/0
  7196 ;;		Unchanged: 0/0
  7197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7198 ;;      Params:         0       0       0       0       0       0       0       0       0
  7199 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7200 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7201 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7202 ;;Total ram usage:        0 bytes
  7203 ;; Hardware stack levels used:    1
  7204 ;; Hardware stack levels required when called:    6
  7205 ;; This function calls:
  7206 ;;		_USBStdFeatureReqHandler
  7207 ;;		_USBStdGetDscHandler
  7208 ;;		_USBStdGetStatusHandler
  7209 ;;		_USBStdSetCfgHandler
  7210 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7211 ;; This function is called by:
  7212 ;;		_USBCtrlTrfSetupHandler
  7213 ;; This function uses a non-reentrant model
  7214 ;;
  7215                           
  7216                           	psect	text38
  7217  001842                     __ptext38:
  7218                           	opt stack 0
  7219  001842                     _USBCheckStdRequest:
  7220                           	opt stack 14
  7221                           
  7222                           ;usb_device.c: 2688: if(SetupPkt.RequestType != (0x00>>5)) return;
  7223                           
  7224                           ;incstack = 0
  7225  001842  0104               	movlb	4	; () banked
  7226  001844  3930               	swapf	48,w,b	;volatile
  7227  001846  32E8               	rrcf	wreg,f,c
  7228  001848  0B03               	andlw	3
  7229  00184A  0900               	iorlw	0
  7230  00184C  A4D8               	btfss	status,2,c
  7231  00184E  0012               	return	
  7232  001850  D04F               	goto	i2l4163
  7233  001852                     i2l516:
  7234                           
  7235                           ; BSR set to: 4
  7236                           ;usb_device.c: 2693: inPipes[0].info.bits.busy = 1;
  7237  001852  0100               	movlb	0	; () banked
  7238  001854  8F6B               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
  7239                           
  7240                           ; BSR set to: 0
  7241                           ;usb_device.c: 2694: USBDeviceState = ADR_PENDING_STATE;
  7242  001856  0E08               	movlw	8
  7243  001858  6E4E               	movwf	_USBDeviceState,c	;volatile
  7244                           
  7245                           ;usb_device.c: 2696: break;
  7246  00185A  0012               	return	
  7247  00185C                     i2l4133:
  7248                           
  7249                           ;usb_device.c: 2698: USBStdGetDscHandler();
  7250  00185C  EC4F  F008         	call	_USBStdGetDscHandler	;wreg free
  7251                           
  7252                           ;usb_device.c: 2699: break;
  7253  001860  0012               	return	
  7254  001862                     i2l4135:
  7255                           
  7256                           ;usb_device.c: 2701: USBStdSetCfgHandler();
  7257  001862  EC0C  F00D         	call	_USBStdSetCfgHandler	;wreg free
  7258                           
  7259                           ;usb_device.c: 2702: break;
  7260  001866  0012               	return	
  7261  001868                     i2l4137:
  7262                           
  7263                           ;usb_device.c: 2704: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  7264  001868  0E53               	movlw	low _USBActiveConfiguration
  7265  00186A  0100               	movlb	0	; () banked
  7266  00186C  6F68               	movwf	_inPipes& (0+255),b	;volatile
  7267  00186E  0E00               	movlw	high _USBActiveConfiguration
  7268  001870  0100               	movlb	0	; () banked
  7269  001872  6F69               	movwf	(_inPipes+1)& (0+255),b	;volatile
  7270                           
  7271                           ; BSR set to: 0
  7272                           ;usb_device.c: 2705: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  7273  001874  0100               	movlb	0	; () banked
  7274  001876  816B               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
  7275                           
  7276                           ; BSR set to: 0
  7277                           ;usb_device.c: 2706: inPipes[0].wCount.v[0] = 1;
  7278  001878  0E01               	movlw	1
  7279  00187A  0100               	movlb	0	; () banked
  7280  00187C  6F6C               	movwf	(_inPipes+4)& (0+255),b	;volatile
  7281                           
  7282                           ; BSR set to: 0
  7283                           ;usb_device.c: 2707: inPipes[0].info.bits.busy = 1;
  7284  00187E  0100               	movlb	0	; () banked
  7285  001880  8F6B               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
  7286                           
  7287                           ;usb_device.c: 2708: break;
  7288  001882  0012               	return	
  7289  001884                     i2l4145:
  7290                           
  7291                           ;usb_device.c: 2710: USBStdGetStatusHandler();
  7292  001884  EC75  F00F         	call	_USBStdGetStatusHandler	;wreg free
  7293                           
  7294                           ;usb_device.c: 2711: break;
  7295  001888  0012               	return	
  7296  00188A                     i2l4147:
  7297                           
  7298                           ;usb_device.c: 2713: case 3:
  7299                           ;usb_device.c: 2714: USBStdFeatureReqHandler();
  7300  00188A  EC66  F004         	call	_USBStdFeatureReqHandler	;wreg free
  7301                           
  7302                           ;usb_device.c: 2715: break;
  7303  00188E  0012               	return	
  7304  001890                     i2l4149:
  7305                           
  7306                           ;usb_device.c: 2717: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  7307  001890  0104               	movlb	4	; () banked
  7308  001892  5134               	movf	52,w,b	;volatile
  7309  001894  0D01               	mullw	1
  7310  001896  0E4F               	movlw	low _USBAlternateInterface
  7311  001898  24F3               	addwf	prodl,w,c
  7312  00189A  0100               	movlb	0	; () banked
  7313  00189C  6F68               	movwf	_inPipes& (0+255),b	;volatile
  7314  00189E  0E00               	movlw	high _USBAlternateInterface
  7315  0018A0  20F4               	addwfc	prodh,w,c
  7316  0018A2  0100               	movlb	0	; () banked
  7317  0018A4  6F69               	movwf	(_inPipes+1)& (0+255),b	;volatile
  7318                           
  7319                           ; BSR set to: 0
  7320                           ;usb_device.c: 2718: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  7321  0018A6  0100               	movlb	0	; () banked
  7322  0018A8  816B               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
  7323                           
  7324                           ; BSR set to: 0
  7325                           ;usb_device.c: 2719: inPipes[0].wCount.v[0] = 1;
  7326  0018AA  0E01               	movlw	1
  7327  0018AC  0100               	movlb	0	; () banked
  7328  0018AE  6F6C               	movwf	(_inPipes+4)& (0+255),b	;volatile
  7329                           
  7330                           ; BSR set to: 0
  7331                           ;usb_device.c: 2720: inPipes[0].info.bits.busy = 1;
  7332  0018B0  0100               	movlb	0	; () banked
  7333  0018B2  8F6B               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
  7334                           
  7335                           ;usb_device.c: 2721: break;
  7336  0018B4  0012               	return	
  7337  0018B6                     i2l525:
  7338                           
  7339                           ; BSR set to: 4
  7340                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
  7341  0018B6  0100               	movlb	0	; () banked
  7342  0018B8  8F6B               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
  7343                           
  7344                           ; BSR set to: 0
  7345                           ;usb_device.c: 2724: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  7346  0018BA  0104               	movlb	4	; () banked
  7347  0018BC  5134               	movf	52,w,b	;volatile
  7348  0018BE  0D01               	mullw	1
  7349  0018C0  0E4F               	movlw	low _USBAlternateInterface
  7350  0018C2  24F3               	addwf	prodl,w,c
  7351  0018C4  6ED9               	movwf	fsr2l,c
  7352  0018C6  0E00               	movlw	high _USBAlternateInterface
  7353  0018C8  20F4               	addwfc	prodh,w,c
  7354  0018CA  6EDA               	movwf	fsr2h,c
  7355  0018CC  C432 FFDF          	movff	1074,indf2	;volatile
  7356                           
  7357                           ;usb_device.c: 2725: break;
  7358  0018D0  0012               	return	
  7359  0018D2                     i2l4159:
  7360                           
  7361                           ; BSR set to: 4
  7362                           ;usb_device.c: 2727: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  7363  0018D2  0E00               	movlw	0
  7364  0018D4  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  7365  0018D6  0E02               	movlw	2
  7366  0018D8  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  7367  0018DA  0E00               	movlw	0
  7368  0018DC  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  7369  0018DE  0E00               	movlw	0
  7370  0018E0  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  7371  0018E2  0E00               	movlw	0
  7372  0018E4  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  7373  0018E6  0E00               	movlw	0
  7374  0018E8  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  7375  0018EA  ECC3  F013         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7376                           
  7377                           ;usb_device.c: 2732: }
  7378                           
  7379                           ;usb_device.c: 2731: break;
  7380                           
  7381                           ;usb_device.c: 2730: default:
  7382                           
  7383                           ;usb_device.c: 2729: case 12:
  7384                           
  7385                           ;usb_device.c: 2728: break;
  7386  0018EE  0012               	return	
  7387  0018F0                     i2l4163:
  7388  0018F0  0104               	movlb	4	; () banked
  7389  0018F2  5131               	movf	49,w,b	;volatile
  7390                           
  7391                           ; Switch size 1, requested type "space"
  7392                           ; Number of cases is 11, Range of values is 0 to 12
  7393                           ; switch strategies available:
  7394                           ; Name         Instructions Cycles
  7395                           ; simple_byte           34    18 (average)
  7396                           ;	Chosen strategy is simple_byte
  7397  0018F4  0A00               	xorlw	0	; case 0
  7398  0018F6  B4D8               	btfsc	status,2,c
  7399  0018F8  D7C5               	goto	i2l4145
  7400  0018FA  0A01               	xorlw	1	; case 1
  7401  0018FC  B4D8               	btfsc	status,2,c
  7402  0018FE  D7C5               	goto	i2l4147
  7403  001900  0A02               	xorlw	2	; case 3
  7404  001902  B4D8               	btfsc	status,2,c
  7405  001904  D7C2               	goto	i2l4147
  7406  001906  0A06               	xorlw	6	; case 5
  7407  001908  B4D8               	btfsc	status,2,c
  7408  00190A  D7A3               	goto	i2l516
  7409  00190C  0A03               	xorlw	3	; case 6
  7410  00190E  B4D8               	btfsc	status,2,c
  7411  001910  D7A5               	goto	i2l4133
  7412  001912  0A01               	xorlw	1	; case 7
  7413  001914  B4D8               	btfsc	status,2,c
  7414  001916  D7DD               	goto	i2l4159
  7415  001918  0A0F               	xorlw	15	; case 8
  7416  00191A  B4D8               	btfsc	status,2,c
  7417  00191C  D7A5               	goto	i2l4137
  7418  00191E  0A01               	xorlw	1	; case 9
  7419  001920  B4D8               	btfsc	status,2,c
  7420  001922  D79F               	goto	i2l4135
  7421  001924  0A03               	xorlw	3	; case 10
  7422  001926  B4D8               	btfsc	status,2,c
  7423  001928  D7B3               	goto	i2l4149
  7424  00192A  0A01               	xorlw	1	; case 11
  7425  00192C  B4D8               	btfsc	status,2,c
  7426  00192E  D7C3               	goto	i2l525
  7427  001930  0A07               	xorlw	7	; case 12
  7428  001932  0012               	return	
  7429  001934                     __end_of_USBCheckStdRequest:
  7430                           	opt stack 0
  7431                           pclatu	equ	0xFFB
  7432                           pclath	equ	0xFFA
  7433                           tblptru	equ	0xFF8
  7434                           tblptrh	equ	0xFF7
  7435                           tblptrl	equ	0xFF6
  7436                           tablat	equ	0xFF5
  7437                           prodh	equ	0xFF4
  7438                           prodl	equ	0xFF3
  7439                           intcon	equ	0xFF2
  7440                           postinc0	equ	0xFEE
  7441                           fsr0h	equ	0xFEA
  7442                           fsr0l	equ	0xFE9
  7443                           wreg	equ	0xFE8
  7444                           indf1	equ	0xFE7
  7445                           postdec1	equ	0xFE5
  7446                           fsr1h	equ	0xFE2
  7447                           fsr1l	equ	0xFE1
  7448                           bsr	equ	0xFE0
  7449                           indf2	equ	0xFDF
  7450                           postinc2	equ	0xFDE
  7451                           postdec2	equ	0xFDD
  7452                           plusw2	equ	0xFDB
  7453                           fsr2h	equ	0xFDA
  7454                           fsr2l	equ	0xFD9
  7455                           status	equ	0xFD8
  7456                           
  7457 ;; *************** function _USBStdSetCfgHandler *****************
  7458 ;; Defined at:
  7459 ;;		line 1968 in file "../USBConverter/mla/v2017_03_06/framework/usb/src/usb_device.c"
  7460 ;; Parameters:    Size  Location     Type
  7461 ;;		None
  7462 ;; Auto vars:     Size  Location     Type
  7463 ;;  i               1   21[COMRAM] unsigned char 
  7464 ;; Return value:  Size  Location     Type
  7465 ;;                  1    wreg      void 
  7466 ;; Registers used:
  7467 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7468 ;; Tracked objects:
  7469 ;;		On entry : 0/0
  7470 ;;		On exit  : 0/0
  7471 ;;		Unchanged: 0/0
  7472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7473 ;;      Params:         0       0       0       0       0       0       0       0       0
  7474 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7475 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7476 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7477 ;;Total ram usage:        1 bytes
  7478 ;; Hardware stack levels used:    1
  7479 ;; Hardware stack levels required when called:    5
  7480 ;; This function calls:
  7481 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7482 ;;		i2_memset
  7483 ;; This function is called by:
  7484 ;;		_USBCheckStdRequest
  7485 ;; This function uses a non-reentrant model
  7486 ;;
  7487                           
  7488                           	psect	text39
  7489  001A18                     __ptext39:
  7490                           	opt stack 0
  7491  001A18                     _USBStdSetCfgHandler:
  7492                           	opt stack 14
  7493                           
  7494                           ;usb_device.c: 1970: uint8_t i;
  7495                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
  7496                           
  7497                           ;incstack = 0
  7498  001A18  0100               	movlb	0	; () banked
  7499  001A1A  8F6B               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
  7500                           
  7501                           ; BSR set to: 0
  7502                           ;usb_device.c: 1976: memset((void*)&UEP1,0x00,(2));;
  7503  001A1C  0E71               	movlw	113
  7504  001A1E  6E01               	movwf	i2memset@p1,c
  7505  001A20  0E0F               	movlw	15
  7506  001A22  6E02               	movwf	i2memset@p1+1,c
  7507  001A24  0E00               	movlw	0
  7508  001A26  6E04               	movwf	i2memset@c+1,c
  7509  001A28  0E00               	movlw	0
  7510  001A2A  6E03               	movwf	i2memset@c,c
  7511  001A2C  0E00               	movlw	0
  7512  001A2E  6E06               	movwf	i2memset@n+1,c
  7513  001A30  0E02               	movlw	2
  7514  001A32  6E05               	movwf	i2memset@n,c
  7515  001A34  EC61  F015         	call	i2_memset	;wreg free
  7516                           
  7517                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  7518  001A38  0E00               	movlw	0
  7519  001A3A  6E01               	movwf	i2memset@p1,c
  7520  001A3C  0E04               	movlw	4
  7521  001A3E  6E02               	movwf	i2memset@p1+1,c
  7522  001A40  0E00               	movlw	0
  7523  001A42  6E04               	movwf	i2memset@c+1,c
  7524  001A44  0E00               	movlw	0
  7525  001A46  6E03               	movwf	i2memset@c,c
  7526  001A48  0E00               	movlw	0
  7527  001A4A  6E06               	movwf	i2memset@n+1,c
  7528  001A4C  0E30               	movlw	48
  7529  001A4E  6E05               	movwf	i2memset@n,c
  7530  001A50  EC61  F015         	call	i2_memset	;wreg free
  7531                           
  7532                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
  7533  001A54  8C6D               	bsf	3949,6,c	;volatile
  7534                           
  7535                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
  7536  001A56  0E00               	movlw	0
  7537  001A58  6E16               	movwf	USBStdSetCfgHandler@i,c
  7538  001A5A                     i2l3741:
  7539  001A5A  0E02               	movlw	2
  7540  001A5C  6416               	cpfsgt	USBStdSetCfgHandler@i,c
  7541  001A5E  D001               	goto	i2l3745
  7542  001A60  D016               	goto	i2l3751
  7543  001A62                     i2l3745:
  7544                           
  7545                           ;usb_device.c: 1988: {
  7546                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
  7547  001A62  5016               	movf	USBStdSetCfgHandler@i,w,c
  7548  001A64  0D01               	mullw	1
  7549  001A66  0E87               	movlw	low _ep_data_in
  7550  001A68  24F3               	addwf	prodl,w,c
  7551  001A6A  6ED9               	movwf	fsr2l,c
  7552  001A6C  0E00               	movlw	high _ep_data_in
  7553  001A6E  20F4               	addwfc	prodh,w,c
  7554  001A70  6EDA               	movwf	fsr2h,c
  7555  001A72  0E00               	movlw	0
  7556  001A74  6EDF               	movwf	indf2,c
  7557                           
  7558                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
  7559  001A76  5016               	movf	USBStdSetCfgHandler@i,w,c
  7560  001A78  0D01               	mullw	1
  7561  001A7A  0E84               	movlw	low _ep_data_out
  7562  001A7C  24F3               	addwf	prodl,w,c
  7563  001A7E  6ED9               	movwf	fsr2l,c
  7564  001A80  0E00               	movlw	high _ep_data_out
  7565  001A82  20F4               	addwfc	prodh,w,c
  7566  001A84  6EDA               	movwf	fsr2h,c
  7567  001A86  0E00               	movlw	0
  7568  001A88  6EDF               	movwf	indf2,c
  7569  001A8A  2A16               	incf	USBStdSetCfgHandler@i,f,c
  7570  001A8C  D7E6               	goto	i2l3741
  7571  001A8E                     i2l3751:
  7572                           
  7573                           ;usb_device.c: 1991: }
  7574                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
  7575  001A8E  0E4F               	movlw	low _USBAlternateInterface
  7576  001A90  6E01               	movwf	i2memset@p1,c
  7577  001A92  0E00               	movlw	high _USBAlternateInterface
  7578  001A94  6E02               	movwf	i2memset@p1+1,c
  7579  001A96  0E00               	movlw	0
  7580  001A98  6E04               	movwf	i2memset@c+1,c
  7581  001A9A  0E00               	movlw	0
  7582  001A9C  6E03               	movwf	i2memset@c,c
  7583  001A9E  0E00               	movlw	0
  7584  001AA0  6E06               	movwf	i2memset@n+1,c
  7585  001AA2  0E02               	movlw	2
  7586  001AA4  6E05               	movwf	i2memset@n,c
  7587  001AA6  EC61  F015         	call	i2_memset	;wreg free
  7588                           
  7589                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
  7590  001AAA  9C6D               	bcf	3949,6,c	;volatile
  7591                           
  7592                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  7593  001AAC  0E08               	movlw	8
  7594  001AAE  0100               	movlb	0	; () banked
  7595  001AB0  6F6E               	movwf	_pBDTEntryIn& (0+255),b
  7596  001AB2  0E04               	movlw	4
  7597  001AB4  0100               	movlb	0	; () banked
  7598  001AB6  6F6F               	movwf	(_pBDTEntryIn+1)& (0+255),b
  7599                           
  7600                           ; BSR set to: 0
  7601                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  7602  001AB8  0E00               	movlw	0
  7603  001ABA  6E37               	movwf	_pBDTEntryEP0OutCurrent,c
  7604  001ABC  0E04               	movlw	4
  7605  001ABE  6E38               	movwf	_pBDTEntryEP0OutCurrent+1,c
  7606                           
  7607                           ; BSR set to: 0
  7608                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  7609  001AC0  C037  F035         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  7610  001AC4  C038  F036         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  7611                           
  7612                           ; BSR set to: 0
  7613                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  7614  001AC8  C432 F053          	movff	1074,_USBActiveConfiguration	;volatile
  7615                           
  7616                           ; BSR set to: 0
  7617                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
  7618  001ACC  5053               	movf	_USBActiveConfiguration,w,c	;volatile
  7619  001ACE  A4D8               	btfss	status,2,c
  7620  001AD0  D003               	goto	i2l3767
  7621                           
  7622                           ; BSR set to: 0
  7623                           ;usb_device.c: 2010: {
  7624                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
  7625  001AD2  0E10               	movlw	16
  7626  001AD4  6E4E               	movwf	_USBDeviceState,c	;volatile
  7627                           
  7628                           ;usb_device.c: 2013: }
  7629  001AD6  0012               	return	
  7630  001AD8                     i2l3767:
  7631                           
  7632                           ; BSR set to: 0
  7633                           ;usb_device.c: 2014: else
  7634                           ;usb_device.c: 2015: {
  7635                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  7636  001AD8  0E00               	movlw	0
  7637  001ADA  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  7638  001ADC  0E01               	movlw	1
  7639  001ADE  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  7640  001AE0  0E53               	movlw	low _USBActiveConfiguration
  7641  001AE2  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  7642  001AE4  0E00               	movlw	high _USBActiveConfiguration
  7643  001AE6  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  7644  001AE8  0E00               	movlw	0
  7645  001AEA  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  7646  001AEC  0E01               	movlw	1
  7647  001AEE  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  7648  001AF0  ECC3  F013         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7649                           
  7650                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
  7651  001AF4  0E20               	movlw	32
  7652  001AF6  6E4E               	movwf	_USBDeviceState,c	;volatile
  7653  001AF8  0012               	return	
  7654  001AFA                     __end_of_USBStdSetCfgHandler:
  7655                           	opt stack 0
  7656                           pclatu	equ	0xFFB
  7657                           pclath	equ	0xFFA
  7658                           tblptru	equ	0xFF8
  7659                           tblptrh	equ	0xFF7
  7660                           tblptrl	equ	0xFF6
  7661                           tablat	equ	0xFF5
  7662                           prodh	equ	0xFF4
  7663                           prodl	equ	0xFF3
  7664                           intcon	equ	0xFF2
  7665                           postinc0	equ	0xFEE
  7666                           fsr0h	equ	0xFEA
  7667                           fsr0l	equ	0xFE9
  7668                           wreg	equ	0xFE8
  7669                           indf1	equ	0xFE7
  7670                           postdec1	equ	0xFE5
  7671                           fsr1h	equ	0xFE2
  7672                           fsr1l	equ	0xFE1
  7673                           bsr	equ	0xFE0
  7674                           indf2	equ	0xFDF
  7675                           postinc2	equ	0xFDE
  7676                           postdec2	equ	0xFDD
  7677                           plusw2	equ	0xFDB
  7678                           fsr2h	equ	0xFDA
  7679                           fsr2l	equ	0xFD9
  7680                           status	equ	0xFD8
  7681                           
  7682 ;; *************** function i2_memset *****************
  7683 ;; Defined at:
  7684 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memset.c"
  7685 ;; Parameters:    Size  Location     Type
  7686 ;;  p1              2    0[COMRAM] PTR void 
  7687 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  7688 ;;  c               2    2[COMRAM] int 
  7689 ;;  n               2    4[COMRAM] unsigned int 
  7690 ;; Auto vars:     Size  Location     Type
  7691 ;;  memset          2    6[COMRAM] PTR unsigned char 
  7692 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  7693 ;; Return value:  Size  Location     Type
  7694 ;;                  2    0[COMRAM] PTR void 
  7695 ;; Registers used:
  7696 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7697 ;; Tracked objects:
  7698 ;;		On entry : 0/0
  7699 ;;		On exit  : 0/0
  7700 ;;		Unchanged: 0/0
  7701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7702 ;;      Params:         6       0       0       0       0       0       0       0       0
  7703 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7704 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7705 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7706 ;;Total ram usage:        8 bytes
  7707 ;; Hardware stack levels used:    1
  7708 ;; This function calls:
  7709 ;;		Nothing
  7710 ;; This function is called by:
  7711 ;;		_USBStdSetCfgHandler
  7712 ;;		i2_USBDeviceInit
  7713 ;; This function uses a non-reentrant model
  7714 ;;
  7715                           
  7716                           	psect	text40
  7717  002AC2                     __ptext40:
  7718                           	opt stack 0
  7719  002AC2                     i2_memset:
  7720                           	opt stack 21
  7721                           
  7722                           ;incstack = 0
  7723  002AC2  C001  F007         	movff	i2memset@p1,i2memset@p
  7724  002AC6  C002  F008         	movff	i2memset@p1+1,i2memset@p+1
  7725  002ACA  D008               	goto	i2l3635
  7726  002ACC                     i2l3631:
  7727  002ACC  C007  FFD9         	movff	i2memset@p,fsr2l
  7728  002AD0  C008  FFDA         	movff	i2memset@p+1,fsr2h
  7729  002AD4  C003  FFDF         	movff	i2memset@c,indf2
  7730  002AD8  4A07               	infsnz	i2memset@p,f,c
  7731  002ADA  2A08               	incf	i2memset@p+1,f,c
  7732  002ADC                     i2l3635:
  7733  002ADC  0605               	decf	i2memset@n,f,c
  7734  002ADE  A0D8               	btfss	status,0,c
  7735  002AE0  0606               	decf	i2memset@n+1,f,c
  7736  002AE2  2805               	incf	i2memset@n,w,c
  7737  002AE4  E1F3               	bnz	i2l3631
  7738  002AE6  2806               	incf	i2memset@n+1,w,c
  7739  002AE8  B4D8               	btfsc	status,2,c
  7740  002AEA  0012               	return	
  7741  002AEC  D7EF               	goto	i2l3631
  7742  002AEE                     __end_ofi2_memset:
  7743                           	opt stack 0
  7744                           pclatu	equ	0xFFB
  7745                           pclath	equ	0xFFA
  7746                           tblptru	equ	0xFF8
  7747                           tblptrh	equ	0xFF7
  7748                           tblptrl	equ	0xFF6
  7749                           tablat	equ	0xFF5
  7750                           prodh	equ	0xFF4
  7751                           prodl	equ	0xFF3
  7752                           intcon	equ	0xFF2
  7753                           postinc0	equ	0xFEE
  7754                           fsr0h	equ	0xFEA
  7755                           fsr0l	equ	0xFE9
  7756                           wreg	equ	0xFE8
  7757                           indf1	equ	0xFE7
  7758                           postdec1	equ	0xFE5
  7759                           fsr1h	equ	0xFE2
  7760                           fsr1l	equ	0xFE1
  7761                           bsr	equ	0xFE0
  7762                           indf2	equ	0xFDF
  7763                           postinc2	equ	0xFDE
  7764                           postdec2	equ	0xFDD
  7765                           plusw2	equ	0xFDB
  7766                           fsr2h	equ	0xFDA
  7767                           fsr2l	equ	0xFD9
  7768                           status	equ	0xFD8
  7769                           
  7770 ;; *************** function _USBStdGetStatusHandler *****************
  7771 ;; Defined at:
  7772 ;;		line 2129 in file "../USBConverter/mla/v2017_03_06/framework/usb/src/usb_device.c"
  7773 ;; Parameters:    Size  Location     Type
  7774 ;;		None
  7775 ;; Auto vars:     Size  Location     Type
  7776 ;;  p               2    1[COMRAM] PTR struct __BDT
  7777 ;;		 -> RAM(2047), BDT(48), NULL(0), 
  7778 ;; Return value:  Size  Location     Type
  7779 ;;                  1    wreg      void 
  7780 ;; Registers used:
  7781 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7782 ;; Tracked objects:
  7783 ;;		On entry : 0/0
  7784 ;;		On exit  : 0/0
  7785 ;;		Unchanged: 0/0
  7786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7787 ;;      Params:         0       0       0       0       0       0       0       0       0
  7788 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7789 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7790 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7791 ;;Total ram usage:        3 bytes
  7792 ;; Hardware stack levels used:    1
  7793 ;; This function calls:
  7794 ;;		Nothing
  7795 ;; This function is called by:
  7796 ;;		_USBCheckStdRequest
  7797 ;; This function uses a non-reentrant model
  7798 ;;
  7799                           
  7800                           	psect	text41
  7801  001EEA                     __ptext41:
  7802                           	opt stack 0
  7803  001EEA                     _USBStdGetStatusHandler:
  7804                           	opt stack 19
  7805                           
  7806                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
  7807                           
  7808                           ;incstack = 0
  7809  001EEA  0E00               	movlw	0
  7810  001EEC  0104               	movlb	4	; () banked
  7811  001EEE  6F38               	movwf	56,b	;volatile
  7812                           
  7813                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
  7814  001EF0  0E00               	movlw	0
  7815  001EF2  0104               	movlb	4	; () banked
  7816  001EF4  6F39               	movwf	57,b	;volatile
  7817                           
  7818                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
  7819  001EF6  D03B               	goto	i2l3823
  7820  001EF8                     i2l454:
  7821                           
  7822                           ; BSR set to: 4
  7823                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
  7824  001EF8  0100               	movlb	0	; () banked
  7825  001EFA  8F6B               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
  7826                           
  7827                           ;usb_device.c: 2145: }
  7828                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
  7829                           
  7830                           ; BSR set to: 4
  7831                           
  7832                           ; BSR set to: 0
  7833                           ;usb_device.c: 2143: {
  7834                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
  7835                           
  7836                           ;usb_device.c: 2142: if(0 == 1)
  7837  001EFC  0446               	decf	_RemoteWakeup,w,c	;volatile
  7838  001EFE  A4D8               	btfss	status,2,c
  7839  001F00  D042               	goto	i2l457
  7840                           
  7841                           ;usb_device.c: 2148: {
  7842                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
  7843  001F02  0104               	movlb	4	; () banked
  7844  001F04  8338               	bsf	56,1,b	;volatile
  7845                           
  7846                           ; BSR set to: 4
  7847                           ;usb_device.c: 2150: }
  7848                           ;usb_device.c: 2151: break;
  7849  001F06  D03F               	goto	i2l457
  7850  001F08                     i2l458:
  7851                           
  7852                           ; BSR set to: 4
  7853                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
  7854  001F08  0100               	movlb	0	; () banked
  7855  001F0A  8F6B               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
  7856                           
  7857                           ;usb_device.c: 2154: break;
  7858  001F0C  D03C               	goto	i2l457
  7859  001F0E                     i2l459:
  7860                           
  7861                           ; BSR set to: 4
  7862                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
  7863  001F0E  0100               	movlb	0	; () banked
  7864  001F10  8F6B               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
  7865                           
  7866                           ;usb_device.c: 2160: {
  7867                           ;usb_device.c: 2161: BDT_ENTRY *p;
  7868                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
  7869  001F12  0104               	movlb	4	; () banked
  7870  001F14  BF34               	btfsc	52,7,b	;volatile
  7871  001F16  D00B               	goto	i2l3813
  7872                           
  7873                           ; BSR set to: 4
  7874                           ;usb_device.c: 2164: {
  7875                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  7876  001F18  0104               	movlb	4	; () banked
  7877  001F1A  5134               	movf	52,w,b	;volatile
  7878  001F1C  0B0F               	andlw	15
  7879  001F1E  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
  7880  001F20  5001               	movf	??_USBStdGetStatusHandler,w,c
  7881  001F22  0D02               	mullw	2
  7882  001F24  0E74               	movlw	low _pBDTEntryOut
  7883  001F26  24F3               	addwf	prodl,w,c
  7884  001F28  6ED9               	movwf	fsr2l,c
  7885  001F2A  0E00               	movlw	high _pBDTEntryOut
  7886  001F2C  D00A               	goto	L8
  7887  001F2E                     i2l3813:
  7888                           
  7889                           ; BSR set to: 4
  7890                           ;usb_device.c: 2167: else
  7891                           ;usb_device.c: 2168: {
  7892                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  7893  001F2E  0104               	movlb	4	; () banked
  7894  001F30  5134               	movf	52,w,b	;volatile
  7895  001F32  0B0F               	andlw	15
  7896  001F34  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
  7897  001F36  5001               	movf	??_USBStdGetStatusHandler,w,c
  7898  001F38  0D02               	mullw	2
  7899  001F3A  0E6E               	movlw	low _pBDTEntryIn
  7900  001F3C  24F3               	addwf	prodl,w,c
  7901  001F3E  6ED9               	movwf	fsr2l,c
  7902  001F40  0E00               	movlw	high _pBDTEntryIn
  7903  001F42                     L8:
  7904  001F42  20F4               	addwfc	prodh,w,c
  7905  001F44  6EDA               	movwf	fsr2h,c
  7906  001F46  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
  7907  001F4A  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
  7908                           
  7909                           ; BSR set to: 4
  7910                           ;usb_device.c: 2170: }
  7911                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  7912                           
  7913                           ; BSR set to: 4
  7914  001F4E  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
  7915  001F52  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
  7916  001F56  AEDF               	btfss	indf2,7,c
  7917  001F58  D016               	goto	i2l457
  7918                           
  7919                           ; BSR set to: 4
  7920  001F5A  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
  7921  001F5E  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
  7922  001F62  A4DF               	btfss	indf2,2,c
  7923  001F64  D010               	goto	i2l457
  7924                           
  7925                           ; BSR set to: 4
  7926                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
  7927  001F66  0E01               	movlw	1
  7928  001F68  0104               	movlb	4	; () banked
  7929  001F6A  6F38               	movwf	56,b	;volatile
  7930                           
  7931                           ; BSR set to: 4
  7932                           ;usb_device.c: 2175: }
  7933                           ;usb_device.c: 2176: }
  7934                           
  7935                           ; BSR set to: 4
  7936                           ;usb_device.c: 2174: break;
  7937  001F6C  D00C               	goto	i2l457
  7938  001F6E                     i2l3823:
  7939                           
  7940                           ; BSR set to: 4
  7941  001F6E  0104               	movlb	4	; () banked
  7942  001F70  5130               	movf	48,w,b	;volatile
  7943  001F72  0B1F               	andlw	31
  7944                           
  7945                           ; Switch size 1, requested type "space"
  7946                           ; Number of cases is 3, Range of values is 0 to 2
  7947                           ; switch strategies available:
  7948                           ; Name         Instructions Cycles
  7949                           ; simple_byte           10     6 (average)
  7950                           ;	Chosen strategy is simple_byte
  7951  001F74  0A00               	xorlw	0	; case 0
  7952  001F76  B4D8               	btfsc	status,2,c
  7953  001F78  D7BF               	goto	i2l454
  7954  001F7A  0A01               	xorlw	1	; case 1
  7955  001F7C  B4D8               	btfsc	status,2,c
  7956  001F7E  D7C4               	goto	i2l458
  7957  001F80  0A03               	xorlw	3	; case 2
  7958  001F82  B4D8               	btfsc	status,2,c
  7959  001F84  D7C4               	goto	i2l459
  7960  001F86                     i2l457:
  7961                           
  7962                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
  7963  001F86  0100               	movlb	0	; () banked
  7964  001F88  AF6B               	btfss	(_inPipes+3)& (0+255),7,b	;volatile
  7965  001F8A  0012               	return	
  7966                           
  7967                           ; BSR set to: 0
  7968                           ;usb_device.c: 2179: {
  7969                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
  7970  001F8C  0E38               	movlw	56
  7971  001F8E  0100               	movlb	0	; () banked
  7972  001F90  6F68               	movwf	_inPipes& (0+255),b	;volatile
  7973  001F92  0E04               	movlw	4
  7974  001F94  0100               	movlb	0	; () banked
  7975  001F96  6F69               	movwf	(_inPipes+1)& (0+255),b	;volatile
  7976                           
  7977                           ; BSR set to: 0
  7978                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  7979  001F98  0100               	movlb	0	; () banked
  7980  001F9A  816B               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
  7981                           
  7982                           ; BSR set to: 0
  7983                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
  7984  001F9C  0E02               	movlw	2
  7985  001F9E  0100               	movlb	0	; () banked
  7986  001FA0  6F6C               	movwf	(_inPipes+4)& (0+255),b	;volatile
  7987  001FA2  0012               	return	
  7988  001FA4                     __end_of_USBStdGetStatusHandler:
  7989                           	opt stack 0
  7990                           pclatu	equ	0xFFB
  7991                           pclath	equ	0xFFA
  7992                           tblptru	equ	0xFF8
  7993                           tblptrh	equ	0xFF7
  7994                           tblptrl	equ	0xFF6
  7995                           tablat	equ	0xFF5
  7996                           prodh	equ	0xFF4
  7997                           prodl	equ	0xFF3
  7998                           intcon	equ	0xFF2
  7999                           postinc0	equ	0xFEE
  8000                           fsr0h	equ	0xFEA
  8001                           fsr0l	equ	0xFE9
  8002                           wreg	equ	0xFE8
  8003                           indf1	equ	0xFE7
  8004                           postdec1	equ	0xFE5
  8005                           fsr1h	equ	0xFE2
  8006                           fsr1l	equ	0xFE1
  8007                           bsr	equ	0xFE0
  8008                           indf2	equ	0xFDF
  8009                           postinc2	equ	0xFDE
  8010                           postdec2	equ	0xFDD
  8011                           plusw2	equ	0xFDB
  8012                           fsr2h	equ	0xFDA
  8013                           fsr2l	equ	0xFD9
  8014                           status	equ	0xFD8
  8015                           
  8016 ;; *************** function _USBStdGetDscHandler *****************
  8017 ;; Defined at:
  8018 ;;		line 2043 in file "../USBConverter/mla/v2017_03_06/framework/usb/src/usb_device.c"
  8019 ;; Parameters:    Size  Location     Type
  8020 ;;		None
  8021 ;; Auto vars:     Size  Location     Type
  8022 ;;		None
  8023 ;; Return value:  Size  Location     Type
  8024 ;;                  1    wreg      void 
  8025 ;; Registers used:
  8026 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  8027 ;; Tracked objects:
  8028 ;;		On entry : 0/0
  8029 ;;		On exit  : 0/0
  8030 ;;		Unchanged: 0/0
  8031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8032 ;;      Params:         0       0       0       0       0       0       0       0       0
  8033 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8034 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8035 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8036 ;;Total ram usage:        2 bytes
  8037 ;; Hardware stack levels used:    1
  8038 ;; This function calls:
  8039 ;;		Nothing
  8040 ;; This function is called by:
  8041 ;;		_USBCheckStdRequest
  8042 ;; This function uses a non-reentrant model
  8043 ;;
  8044                           
  8045                           	psect	text42
  8046  00109E                     __ptext42:
  8047                           	opt stack 0
  8048  00109E                     _USBStdGetDscHandler:
  8049                           	opt stack 19
  8050                           
  8051                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
  8052                           
  8053                           ; BSR set to: 0
  8054                           ;incstack = 0
  8055  00109E  0E80               	movlw	128
  8056  0010A0  0104               	movlb	4	; () banked
  8057  0010A2  1930               	xorwf	48,w,b	;volatile
  8058  0010A4  A4D8               	btfss	status,2,c
  8059  0010A6  0012               	return	
  8060                           
  8061                           ; BSR set to: 4
  8062                           ;usb_device.c: 2046: {
  8063                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  8064  0010A8  0EC0               	movlw	192
  8065  0010AA  0100               	movlb	0	; () banked
  8066  0010AC  6F6B               	movwf	(_inPipes+3)& (0+255),b	;volatile
  8067                           
  8068                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
  8069  0010AE  D089               	goto	i2l3801
  8070  0010B0                     i2l3775:
  8071                           
  8072                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
  8073  0010B0  0EB4               	movlw	low _device_dsc
  8074  0010B2  0100               	movlb	0	; () banked
  8075  0010B4  6F68               	movwf	_inPipes& (0+255),b	;volatile
  8076  0010B6  0E08               	movlw	high _device_dsc
  8077  0010B8  0100               	movlb	0	; () banked
  8078  0010BA  6F69               	movwf	(_inPipes+1)& (0+255),b	;volatile
  8079                           
  8080                           ; BSR set to: 0
  8081                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
  8082  0010BC  0E00               	movlw	0
  8083  0010BE  0100               	movlb	0	; () banked
  8084  0010C0  6F6D               	movwf	(_inPipes+5)& (0+255),b	;volatile
  8085  0010C2  0E12               	movlw	18
  8086  0010C4  6F6C               	movwf	(_inPipes+4)& (0+255),b	;volatile
  8087                           
  8088                           ;usb_device.c: 2058: break;
  8089  0010C6  0012               	return	
  8090  0010C8                     i2l3779:
  8091                           
  8092                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
  8093  0010C8  0104               	movlb	4	; () banked
  8094  0010CA  5132               	movf	50,w,b	;volatile
  8095  0010CC  A4D8               	btfss	status,2,c
  8096  0010CE  D044               	goto	i2l3787
  8097                           
  8098                           ; BSR set to: 4
  8099                           ;usb_device.c: 2064: {
  8100                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  8101  0010D0  0104               	movlb	4	; () banked
  8102  0010D2  5132               	movf	50,w,b	;volatile
  8103  0010D4  0D02               	mullw	2
  8104  0010D6  0E07               	movlw	low _USB_CD_Ptr
  8105  0010D8  24F3               	addwf	prodl,w,c
  8106  0010DA  6EF6               	movwf	tblptrl,c
  8107  0010DC  0E08               	movlw	high _USB_CD_Ptr
  8108  0010DE  20F4               	addwfc	prodh,w,c
  8109  0010E0  6EF7               	movwf	tblptrh,c
  8110  0010E2                     	if	0	;There are less than 3 active tblptr bytes
  8111  0010E2                     	endif
  8112  0010E2  0009               	tblrd		*+
  8113  0010E4  CFF5 F068          	movff	tablat,_inPipes	;volatile
  8114  0010E8  000A               	tblrd		*-
  8115  0010EA  CFF5 F069          	movff	tablat,_inPipes+1	;volatile
  8116                           
  8117                           ; BSR set to: 4
  8118                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
  8119  0010EE  0E02               	movlw	2
  8120  0010F0  0100               	movlb	0	; () banked
  8121  0010F2  2568               	addwf	_inPipes& (0+255),w,b	;volatile
  8122  0010F4  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
  8123  0010F6  0E00               	movlw	0
  8124  0010F8  0100               	movlb	0	; () banked
  8125  0010FA  2169               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
  8126  0010FC  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
  8127  0010FE  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
  8128  001102  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
  8129  001106  6AF8               	clrf	tblptru,c
  8130  001108  0E07               	movlw	(high __ramtop+-1)
  8131  00110A  64F7               	cpfsgt	tblptrh,c
  8132  00110C  D003               	bra	i2u269_47
  8133  00110E  0008               	tblrd		*
  8134  001110  50F5               	movf	tablat,w,c
  8135  001112  D005               	bra	i2u269_40
  8136  001114                     i2u269_47:
  8137  001114  CFF6 FFE1          	movff	tblptrl,fsr1l
  8138  001118  CFF7 FFE2          	movff	tblptrh,fsr1h
  8139  00111C  50E7               	movf	indf1,w,c
  8140  00111E                     i2u269_40:
  8141  00111E  0100               	movlb	0	; () banked
  8142  001120  6F6C               	movwf	(_inPipes+4)& (0+255),b	;volatile
  8143                           
  8144                           ; BSR set to: 0
  8145                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
  8146  001122  0E03               	movlw	3
  8147  001124  0100               	movlb	0	; () banked
  8148  001126  2568               	addwf	_inPipes& (0+255),w,b	;volatile
  8149  001128  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
  8150  00112A  0E00               	movlw	0
  8151  00112C  0100               	movlb	0	; () banked
  8152  00112E  2169               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
  8153  001130  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
  8154  001132  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
  8155  001136  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
  8156  00113A  6AF8               	clrf	tblptru,c
  8157  00113C  0E07               	movlw	(high __ramtop+-1)
  8158  00113E  64F7               	cpfsgt	tblptrh,c
  8159  001140  D003               	bra	i2u270_47
  8160  001142  0008               	tblrd		*
  8161  001144  50F5               	movf	tablat,w,c
  8162  001146  D005               	bra	i2u270_40
  8163  001148                     i2u270_47:
  8164  001148  CFF6 FFE1          	movff	tblptrl,fsr1l
  8165  00114C  CFF7 FFE2          	movff	tblptrh,fsr1h
  8166  001150  50E7               	movf	indf1,w,c
  8167  001152                     i2u270_40:
  8168  001152  0100               	movlb	0	; () banked
  8169  001154  6F6D               	movwf	(_inPipes+5)& (0+255),b	;volatile
  8170                           
  8171                           ;usb_device.c: 2076: }
  8172  001156  0012               	return	
  8173  001158                     i2l3787:
  8174                           
  8175                           ;usb_device.c: 2077: else
  8176                           ;usb_device.c: 2078: {
  8177                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
  8178  001158  0E00               	movlw	0
  8179  00115A  0100               	movlb	0	; () banked
  8180  00115C  6F6B               	movwf	(_inPipes+3)& (0+255),b	;volatile
  8181                           
  8182                           ; BSR set to: 0
  8183                           ;usb_device.c: 2080: }
  8184                           ;usb_device.c: 2081: break;
  8185  00115E  0012               	return	
  8186  001160                     i2l3789:
  8187                           
  8188                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
  8189  001160  0E03               	movlw	3
  8190  001162  0104               	movlb	4	; () banked
  8191  001164  6132               	cpfslt	50,b	;volatile
  8192  001166  D025               	goto	i2l3795
  8193                           
  8194                           ; BSR set to: 4
  8195                           ;usb_device.c: 2087: {
  8196                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  8197  001168  0104               	movlb	4	; () banked
  8198  00116A  5132               	movf	50,w,b	;volatile
  8199  00116C  0D02               	mullw	2
  8200  00116E  0E01               	movlw	low _USB_SD_Ptr
  8201  001170  24F3               	addwf	prodl,w,c
  8202  001172  6EF6               	movwf	tblptrl,c
  8203  001174  0E08               	movlw	high _USB_SD_Ptr
  8204  001176  20F4               	addwfc	prodh,w,c
  8205  001178  6EF7               	movwf	tblptrh,c
  8206  00117A                     	if	0	;There are less than 3 active tblptr bytes
  8207  00117A                     	endif
  8208  00117A  0009               	tblrd		*+
  8209  00117C  CFF5 F068          	movff	tablat,_inPipes	;volatile
  8210  001180  000A               	tblrd		*-
  8211  001182  CFF5 F069          	movff	tablat,_inPipes+1	;volatile
  8212                           
  8213                           ; BSR set to: 4
  8214                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  8215  001186  C068  FFF6         	movff	_inPipes,tblptrl	;volatile
  8216  00118A  C069  FFF7         	movff	_inPipes+1,tblptrh	;volatile
  8217  00118E  6AF8               	clrf	tblptru,c
  8218  001190  0E07               	movlw	(high __ramtop+-1)
  8219  001192  64F7               	cpfsgt	tblptrh,c
  8220  001194  D003               	bra	i2u272_47
  8221  001196  0008               	tblrd		*
  8222  001198  50F5               	movf	tablat,w,c
  8223  00119A  D005               	bra	i2u272_40
  8224  00119C                     i2u272_47:
  8225  00119C  CFF6 FFE1          	movff	tblptrl,fsr1l
  8226  0011A0  CFF7 FFE2          	movff	tblptrh,fsr1h
  8227  0011A4  50E7               	movf	indf1,w,c
  8228  0011A6                     i2u272_40:
  8229  0011A6  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
  8230  0011A8  5001               	movf	??_USBStdGetDscHandler,w,c
  8231  0011AA  0100               	movlb	0	; () banked
  8232  0011AC  6F6C               	movwf	(_inPipes+4)& (0+255),b	;volatile
  8233  0011AE  6B6D               	clrf	(_inPipes+5)& (0+255),b	;volatile
  8234                           
  8235                           ;usb_device.c: 2092: }
  8236  0011B0  0012               	return	
  8237  0011B2                     i2l3795:
  8238                           
  8239                           ;usb_device.c: 2102: else
  8240                           ;usb_device.c: 2103: {
  8241                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
  8242  0011B2  0E00               	movlw	0
  8243  0011B4  0100               	movlb	0	; () banked
  8244  0011B6  6F6B               	movwf	(_inPipes+3)& (0+255),b	;volatile
  8245                           
  8246                           ; BSR set to: 0
  8247                           ;usb_device.c: 2105: }
  8248                           ;usb_device.c: 2106: break;
  8249  0011B8  0012               	return	
  8250  0011BA                     i2l3797:
  8251                           
  8252                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
  8253  0011BA  0E00               	movlw	0
  8254  0011BC  0100               	movlb	0	; () banked
  8255  0011BE  6F6B               	movwf	(_inPipes+3)& (0+255),b	;volatile
  8256                           
  8257                           ; BSR set to: 0
  8258                           ;usb_device.c: 2110: }
  8259                           
  8260                           ;usb_device.c: 2109: break;
  8261  0011C0  0012               	return	
  8262  0011C2                     i2l3801:
  8263                           
  8264                           ; BSR set to: 0
  8265  0011C2  0104               	movlb	4	; () banked
  8266  0011C4  5133               	movf	51,w,b	;volatile
  8267                           
  8268                           ; Switch size 1, requested type "space"
  8269                           ; Number of cases is 3, Range of values is 1 to 3
  8270                           ; switch strategies available:
  8271                           ; Name         Instructions Cycles
  8272                           ; simple_byte           10     6 (average)
  8273                           ;	Chosen strategy is simple_byte
  8274  0011C6  0A01               	xorlw	1	; case 1
  8275  0011C8  B4D8               	btfsc	status,2,c
  8276  0011CA  D772               	goto	i2l3775
  8277  0011CC  0A03               	xorlw	3	; case 2
  8278  0011CE  B4D8               	btfsc	status,2,c
  8279  0011D0  D77B               	goto	i2l3779
  8280  0011D2  0A01               	xorlw	1	; case 3
  8281  0011D4  B4D8               	btfsc	status,2,c
  8282  0011D6  D7C4               	goto	i2l3789
  8283  0011D8  D7F0               	goto	i2l3797
  8284  0011DA                     __end_of_USBStdGetDscHandler:
  8285                           	opt stack 0
  8286                           pclatu	equ	0xFFB
  8287                           pclath	equ	0xFFA
  8288                           tblptru	equ	0xFF8
  8289                           tblptrh	equ	0xFF7
  8290                           tblptrl	equ	0xFF6
  8291                           tablat	equ	0xFF5
  8292                           prodh	equ	0xFF4
  8293                           prodl	equ	0xFF3
  8294                           intcon	equ	0xFF2
  8295                           postinc0	equ	0xFEE
  8296                           fsr0h	equ	0xFEA
  8297                           fsr0l	equ	0xFE9
  8298                           wreg	equ	0xFE8
  8299                           indf1	equ	0xFE7
  8300                           postdec1	equ	0xFE5
  8301                           fsr1h	equ	0xFE2
  8302                           fsr1l	equ	0xFE1
  8303                           bsr	equ	0xFE0
  8304                           indf2	equ	0xFDF
  8305                           postinc2	equ	0xFDE
  8306                           postdec2	equ	0xFDD
  8307                           plusw2	equ	0xFDB
  8308                           fsr2h	equ	0xFDA
  8309                           fsr2l	equ	0xFD9
  8310                           status	equ	0xFD8
  8311                           
  8312 ;; *************** function _USBStdFeatureReqHandler *****************
  8313 ;; Defined at:
  8314 ;;		line 2754 in file "../USBConverter/mla/v2017_03_06/framework/usb/src/usb_device.c"
  8315 ;; Parameters:    Size  Location     Type
  8316 ;;		None
  8317 ;; Auto vars:     Size  Location     Type
  8318 ;;  p               2   25[COMRAM] PTR struct __BDT
  8319 ;;		 -> RAM(2047), BDT(48), NULL(0), 
  8320 ;;  pUEP            2   22[COMRAM] PTR unsigned char 
  8321 ;;		 -> UEP0(1), 
  8322 ;;  current_ep_d    1   24[COMRAM] struct .
  8323 ;; Return value:  Size  Location     Type
  8324 ;;                  1    wreg      void 
  8325 ;; Registers used:
  8326 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8327 ;; Tracked objects:
  8328 ;;		On entry : 0/0
  8329 ;;		On exit  : 0/0
  8330 ;;		Unchanged: 0/0
  8331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8332 ;;      Params:         0       0       0       0       0       0       0       0       0
  8333 ;;      Locals:         5       0       0       0       0       0       0       0       0
  8334 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8335 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8336 ;;Total ram usage:        6 bytes
  8337 ;; Hardware stack levels used:    1
  8338 ;; Hardware stack levels required when called:    5
  8339 ;; This function calls:
  8340 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8341 ;; This function is called by:
  8342 ;;		_USBCheckStdRequest
  8343 ;; This function uses a non-reentrant model
  8344 ;;
  8345                           
  8346                           	psect	text43
  8347  0008CC                     __ptext43:
  8348                           	opt stack 0
  8349  0008CC                     _USBStdFeatureReqHandler:
  8350                           	opt stack 14
  8351                           
  8352                           ;usb_device.c: 2756: BDT_ENTRY *p;
  8353                           ;usb_device.c: 2757: EP_STATUS current_ep_data;
  8354                           ;usb_device.c: 2761: unsigned char* pUEP;
  8355                           ;usb_device.c: 2799: if((SetupPkt.bFeature == 1)&&
  8356                           ;usb_device.c: 2800: (SetupPkt.Recipient == (0x00)))
  8357                           
  8358                           ;incstack = 0
  8359  0008CC  0104               	movlb	4	; () banked
  8360  0008CE  0532               	decf	50,w,b	;volatile
  8361  0008D0  A4D8               	btfss	status,2,c
  8362  0008D2  D011               	goto	i2l531
  8363                           
  8364                           ; BSR set to: 4
  8365  0008D4  0104               	movlb	4	; () banked
  8366  0008D6  5130               	movf	48,w,b	;volatile
  8367  0008D8  0B1F               	andlw	31
  8368  0008DA  0900               	iorlw	0
  8369  0008DC  A4D8               	btfss	status,2,c
  8370  0008DE  D00B               	goto	i2l531
  8371                           
  8372                           ; BSR set to: 4
  8373                           ;usb_device.c: 2801: {
  8374                           ;usb_device.c: 2802: inPipes[0].info.bits.busy = 1;
  8375  0008E0  0100               	movlb	0	; () banked
  8376  0008E2  8F6B               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
  8377                           
  8378                           ; BSR set to: 0
  8379                           ;usb_device.c: 2803: if(SetupPkt.bRequest == 3)
  8380  0008E4  0E03               	movlw	3
  8381  0008E6  0104               	movlb	4	; () banked
  8382  0008E8  1931               	xorwf	49,w,b	;volatile
  8383  0008EA  A4D8               	btfss	status,2,c
  8384  0008EC  D002               	goto	i2l3841
  8385                           
  8386                           ; BSR set to: 4
  8387                           ;usb_device.c: 2804: RemoteWakeup = 1;
  8388  0008EE  0E01               	movlw	1
  8389  0008F0  D001               	goto	L9
  8390  0008F2                     i2l3841:
  8391                           
  8392                           ; BSR set to: 4
  8393                           ;usb_device.c: 2805: else
  8394                           ;usb_device.c: 2806: RemoteWakeup = 0;
  8395  0008F2  0E00               	movlw	0
  8396  0008F4                     L9:
  8397  0008F4  6E46               	movwf	_RemoteWakeup,c	;volatile
  8398  0008F6                     i2l531:
  8399                           
  8400                           ; BSR set to: 4
  8401                           ;usb_device.c: 2807: }
  8402                           ;usb_device.c: 2810: if((SetupPkt.bFeature == 0)&&
  8403                           ;usb_device.c: 2811: (SetupPkt.Recipient == (0x02))&&
  8404                           ;usb_device.c: 2812: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
  8405                           ;usb_device.c: 2813: (USBDeviceState == CONFIGURED_STATE))
  8406  0008F6  0104               	movlb	4	; () banked
  8407  0008F8  5132               	movf	50,w,b	;volatile
  8408  0008FA  A4D8               	btfss	status,2,c
  8409  0008FC  0012               	return	
  8410                           
  8411                           ; BSR set to: 4
  8412  0008FE  0104               	movlb	4	; () banked
  8413  000900  5130               	movf	48,w,b	;volatile
  8414  000902  0B1F               	andlw	31
  8415  000904  0A02               	xorlw	2
  8416  000906  A4D8               	btfss	status,2,c
  8417  000908  0012               	return	
  8418                           
  8419                           ; BSR set to: 4
  8420  00090A  0104               	movlb	4	; () banked
  8421  00090C  5134               	movf	52,w,b	;volatile
  8422  00090E  0B0F               	andlw	15
  8423  000910  0900               	iorlw	0
  8424  000912  B4D8               	btfsc	status,2,c
  8425  000914  0012               	return	
  8426                           
  8427                           ; BSR set to: 4
  8428  000916  0104               	movlb	4	; () banked
  8429  000918  5134               	movf	52,w,b	;volatile
  8430  00091A  0B0F               	andlw	15
  8431  00091C  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  8432  00091E  0E03               	movlw	3
  8433  000920  6016               	cpfslt	??_USBStdFeatureReqHandler,c
  8434  000922  0012               	return	
  8435                           
  8436                           ; BSR set to: 4
  8437  000924  0E20               	movlw	32
  8438  000926  184E               	xorwf	_USBDeviceState,w,c	;volatile
  8439  000928  A4D8               	btfss	status,2,c
  8440  00092A  0012               	return	
  8441                           
  8442                           ; BSR set to: 4
  8443                           ;usb_device.c: 2814: {
  8444                           ;usb_device.c: 2817: inPipes[0].info.bits.busy = 1;
  8445  00092C  0100               	movlb	0	; () banked
  8446  00092E  8F6B               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
  8447                           
  8448                           ;usb_device.c: 2820: if(SetupPkt.EPDir == 0)
  8449  000930  0104               	movlb	4	; () banked
  8450  000932  BF34               	btfsc	52,7,b	;volatile
  8451  000934  D01B               	goto	i2l3855
  8452                           
  8453                           ; BSR set to: 4
  8454                           ;usb_device.c: 2821: {
  8455                           ;usb_device.c: 2822: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  8456  000936  0104               	movlb	4	; () banked
  8457  000938  5134               	movf	52,w,b	;volatile
  8458  00093A  0B0F               	andlw	15
  8459  00093C  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  8460  00093E  5016               	movf	??_USBStdFeatureReqHandler,w,c
  8461  000940  0D02               	mullw	2
  8462  000942  0E74               	movlw	low _pBDTEntryOut
  8463  000944  24F3               	addwf	prodl,w,c
  8464  000946  6ED9               	movwf	fsr2l,c
  8465  000948  0E00               	movlw	high _pBDTEntryOut
  8466  00094A  20F4               	addwfc	prodh,w,c
  8467  00094C  6EDA               	movwf	fsr2h,c
  8468  00094E  CFDE F01A          	movff	postinc2,USBStdFeatureReqHandler@p
  8469  000952  CFDD F01B          	movff	postdec2,USBStdFeatureReqHandler@p+1
  8470                           
  8471                           ;usb_device.c: 2823: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  8472  000956  0104               	movlb	4	; () banked
  8473  000958  5134               	movf	52,w,b	;volatile
  8474  00095A  0B0F               	andlw	15
  8475  00095C  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  8476  00095E  5016               	movf	??_USBStdFeatureReqHandler,w,c
  8477  000960  0D01               	mullw	1
  8478  000962  0E84               	movlw	low _ep_data_out
  8479  000964  24F3               	addwf	prodl,w,c
  8480  000966  6ED9               	movwf	fsr2l,c
  8481  000968  0E00               	movlw	high _ep_data_out
  8482  00096A  D01A               	goto	L10
  8483  00096C                     i2l3855:
  8484                           
  8485                           ; BSR set to: 4
  8486                           ;usb_device.c: 2825: else
  8487                           ;usb_device.c: 2826: {
  8488                           ;usb_device.c: 2827: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  8489  00096C  0104               	movlb	4	; () banked
  8490  00096E  5134               	movf	52,w,b	;volatile
  8491  000970  0B0F               	andlw	15
  8492  000972  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  8493  000974  5016               	movf	??_USBStdFeatureReqHandler,w,c
  8494  000976  0D02               	mullw	2
  8495  000978  0E6E               	movlw	low _pBDTEntryIn
  8496  00097A  24F3               	addwf	prodl,w,c
  8497  00097C  6ED9               	movwf	fsr2l,c
  8498  00097E  0E00               	movlw	high _pBDTEntryIn
  8499  000980  20F4               	addwfc	prodh,w,c
  8500  000982  6EDA               	movwf	fsr2h,c
  8501  000984  CFDE F01A          	movff	postinc2,USBStdFeatureReqHandler@p
  8502  000988  CFDD F01B          	movff	postdec2,USBStdFeatureReqHandler@p+1
  8503                           
  8504                           ;usb_device.c: 2828: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  8505  00098C  0104               	movlb	4	; () banked
  8506  00098E  5134               	movf	52,w,b	;volatile
  8507  000990  0B0F               	andlw	15
  8508  000992  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  8509  000994  5016               	movf	??_USBStdFeatureReqHandler,w,c
  8510  000996  0D01               	mullw	1
  8511  000998  0E87               	movlw	low _ep_data_in
  8512  00099A  24F3               	addwf	prodl,w,c
  8513  00099C  6ED9               	movwf	fsr2l,c
  8514  00099E  0E00               	movlw	high _ep_data_in
  8515  0009A0                     L10:
  8516  0009A0  20F4               	addwfc	prodh,w,c
  8517  0009A2  6EDA               	movwf	fsr2h,c
  8518  0009A4  50DF               	movf	indf2,w,c
  8519  0009A6  6E19               	movwf	USBStdFeatureReqHandler@current_ep_data,c
  8520                           
  8521                           ; BSR set to: 4
  8522                           ;usb_device.c: 2829: }
  8523                           ;usb_device.c: 2835: if(current_ep_data.bits.ping_pong_state == 0)
  8524                           
  8525                           ; BSR set to: 4
  8526  0009A8  B019               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
  8527  0009AA  D006               	goto	i2l3861
  8528                           
  8529                           ; BSR set to: 4
  8530                           ;usb_device.c: 2836: {
  8531                           ;usb_device.c: 2837: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
  8532  0009AC  0EFB               	movlw	251
  8533  0009AE  141A               	andwf	USBStdFeatureReqHandler@p,w,c
  8534  0009B0  6E1A               	movwf	USBStdFeatureReqHandler@p,c
  8535  0009B2  0EFF               	movlw	255
  8536  0009B4  141B               	andwf	USBStdFeatureReqHandler@p+1,w,c
  8537  0009B6  D004               	goto	L11
  8538  0009B8                     i2l3861:
  8539                           
  8540                           ; BSR set to: 4
  8541                           ;usb_device.c: 2839: else
  8542                           ;usb_device.c: 2840: {
  8543                           ;usb_device.c: 2841: p = (BDT_ENTRY*)(((uintptr_t)p) | 0x0004);
  8544  0009B8  0E04               	movlw	4
  8545  0009BA  101A               	iorwf	USBStdFeatureReqHandler@p,w,c
  8546  0009BC  6E1A               	movwf	USBStdFeatureReqHandler@p,c
  8547  0009BE  501B               	movf	USBStdFeatureReqHandler@p+1,w,c
  8548  0009C0                     L11:
  8549  0009C0  6E1B               	movwf	USBStdFeatureReqHandler@p+1,c
  8550                           
  8551                           ; BSR set to: 4
  8552                           ;usb_device.c: 2842: }
  8553                           ;usb_device.c: 2847: if(SetupPkt.EPDir == 0)
  8554                           
  8555                           ; BSR set to: 4
  8556  0009C2  0104               	movlb	4	; () banked
  8557  0009C4  BF34               	btfsc	52,7,b	;volatile
  8558  0009C6  D00B               	goto	i2l3867
  8559                           
  8560                           ; BSR set to: 4
  8561                           ;usb_device.c: 2848: {
  8562                           ;usb_device.c: 2849: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  8563  0009C8  0104               	movlb	4	; () banked
  8564  0009CA  5134               	movf	52,w,b	;volatile
  8565  0009CC  0B0F               	andlw	15
  8566  0009CE  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  8567  0009D0  5016               	movf	??_USBStdFeatureReqHandler,w,c
  8568  0009D2  0D02               	mullw	2
  8569  0009D4  0E74               	movlw	low _pBDTEntryOut
  8570  0009D6  24F3               	addwf	prodl,w,c
  8571  0009D8  6ED9               	movwf	fsr2l,c
  8572  0009DA  0E00               	movlw	high _pBDTEntryOut
  8573  0009DC  D00A               	goto	L12
  8574  0009DE                     i2l3867:
  8575                           
  8576                           ; BSR set to: 4
  8577                           ;usb_device.c: 2851: else
  8578                           ;usb_device.c: 2852: {
  8579                           ;usb_device.c: 2853: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  8580  0009DE  0104               	movlb	4	; () banked
  8581  0009E0  5134               	movf	52,w,b	;volatile
  8582  0009E2  0B0F               	andlw	15
  8583  0009E4  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  8584  0009E6  5016               	movf	??_USBStdFeatureReqHandler,w,c
  8585  0009E8  0D02               	mullw	2
  8586  0009EA  0E6E               	movlw	low _pBDTEntryIn
  8587  0009EC  24F3               	addwf	prodl,w,c
  8588  0009EE  6ED9               	movwf	fsr2l,c
  8589  0009F0  0E00               	movlw	high _pBDTEntryIn
  8590  0009F2                     L12:
  8591  0009F2  20F4               	addwfc	prodh,w,c
  8592  0009F4  6EDA               	movwf	fsr2h,c
  8593  0009F6  C01A  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
  8594  0009FA  C01B  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
  8595                           
  8596                           ; BSR set to: 4
  8597                           ;usb_device.c: 2854: }
  8598                           ;usb_device.c: 2857: if(SetupPkt.bRequest == 3)
  8599                           
  8600                           ; BSR set to: 4
  8601  0009FE  0E03               	movlw	3
  8602  000A00  0104               	movlb	4	; () banked
  8603  000A02  1931               	xorwf	49,w,b	;volatile
  8604  000A04  A4D8               	btfss	status,2,c
  8605  000A06  D02F               	goto	i2l3883
  8606                           
  8607                           ; BSR set to: 4
  8608                           ;usb_device.c: 2858: {
  8609                           ;usb_device.c: 2859: if(p->STAT.UOWN == 1)
  8610  000A08  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  8611  000A0C  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  8612  000A10  AEDF               	btfss	indf2,7,c
  8613  000A12  D01C               	goto	i2l3879
  8614                           
  8615                           ; BSR set to: 4
  8616                           ;usb_device.c: 2860: {
  8617                           ;usb_device.c: 2863: if(SetupPkt.EPDir == 0)
  8618  000A14  0104               	movlb	4	; () banked
  8619  000A16  BF34               	btfsc	52,7,b	;volatile
  8620  000A18  D00B               	goto	i2l3877
  8621                           
  8622                           ; BSR set to: 4
  8623                           ;usb_device.c: 2864: {
  8624                           ;usb_device.c: 2865: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
  8625  000A1A  0104               	movlb	4	; () banked
  8626  000A1C  5134               	movf	52,w,b	;volatile
  8627  000A1E  0B0F               	andlw	15
  8628  000A20  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  8629  000A22  5016               	movf	??_USBStdFeatureReqHandler,w,c
  8630  000A24  0D01               	mullw	1
  8631  000A26  0E84               	movlw	low _ep_data_out
  8632  000A28  24F3               	addwf	prodl,w,c
  8633  000A2A  6ED9               	movwf	fsr2l,c
  8634  000A2C  0E00               	movlw	high _ep_data_out
  8635  000A2E  D00A               	goto	L13
  8636  000A30                     i2l3877:
  8637                           
  8638                           ;usb_device.c: 2867: else
  8639                           ;usb_device.c: 2868: {
  8640                           ;usb_device.c: 2869: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
  8641  000A30  0104               	movlb	4	; () banked
  8642  000A32  5134               	movf	52,w,b	;volatile
  8643  000A34  0B0F               	andlw	15
  8644  000A36  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  8645  000A38  5016               	movf	??_USBStdFeatureReqHandler,w,c
  8646  000A3A  0D01               	mullw	1
  8647  000A3C  0E87               	movlw	low _ep_data_in
  8648  000A3E  24F3               	addwf	prodl,w,c
  8649  000A40  6ED9               	movwf	fsr2l,c
  8650  000A42  0E00               	movlw	high _ep_data_in
  8651  000A44                     L13:
  8652  000A44  20F4               	addwfc	prodh,w,c
  8653  000A46  6EDA               	movwf	fsr2h,c
  8654  000A48  0100               	movlb	0	; () banked
  8655  000A4A  82DF               	bsf	indf2,1,c
  8656  000A4C                     i2l3879:
  8657                           
  8658                           ;usb_device.c: 2870: }
  8659                           ;usb_device.c: 2871: }
  8660                           ;usb_device.c: 2874: p->STAT.Val |= 0x04;
  8661  000A4C  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  8662  000A50  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  8663  000A54  0E00               	movlw	0
  8664  000A56  84DB               	bsf	plusw2,2,c
  8665                           
  8666                           ;usb_device.c: 2875: p->STAT.Val |= 0x80;
  8667  000A58  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  8668  000A5C  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  8669  000A60  0E00               	movlw	0
  8670  000A62  8EDB               	bsf	plusw2,7,c
  8671                           
  8672                           ;usb_device.c: 2876: }
  8673  000A64  0012               	return	
  8674  000A66                     i2l3883:
  8675                           
  8676                           ;usb_device.c: 2877: else
  8677                           ;usb_device.c: 2878: {
  8678                           ;usb_device.c: 2882: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  8679  000A66  0E04               	movlw	4
  8680  000A68  181A               	xorwf	USBStdFeatureReqHandler@p,w,c
  8681  000A6A  6E1A               	movwf	USBStdFeatureReqHandler@p,c
  8682  000A6C  501B               	movf	USBStdFeatureReqHandler@p+1,w,c
  8683  000A6E  6E1B               	movwf	USBStdFeatureReqHandler@p+1,c
  8684                           
  8685                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
  8686  000A70  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  8687  000A74  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  8688  000A78  AEDF               	btfss	indf2,7,c
  8689  000A7A  D01B               	goto	i2l3893
  8690                           
  8691                           ;usb_device.c: 2885: {
  8692                           ;usb_device.c: 2888: p->STAT.Val &= (~0x80);
  8693  000A7C  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  8694  000A80  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  8695  000A84  0E7F               	movlw	127
  8696  000A86  16DF               	andwf	indf2,f,c
  8697                           
  8698                           ;usb_device.c: 2889: p->STAT.Val |= 0x40;
  8699  000A88  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  8700  000A8C  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  8701  000A90  0E00               	movlw	0
  8702  000A92  8CDB               	bsf	plusw2,6,c
  8703                           
  8704                           ;usb_device.c: 2890: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  8705  000A94  0E00               	movlw	0
  8706  000A96  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  8707  000A98  0E05               	movlw	5
  8708  000A9A  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  8709  000A9C  C01A  F010         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
  8710  000AA0  C01B  F011         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  8711  000AA4  0E00               	movlw	0
  8712  000AA6  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  8713  000AA8  0E02               	movlw	2
  8714  000AAA  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  8715  000AAC  ECC3  F013         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8716                           
  8717                           ;usb_device.c: 2891: }
  8718  000AB0  D006               	goto	i2l3895
  8719  000AB2                     i2l3893:
  8720                           
  8721                           ;usb_device.c: 2892: else
  8722                           ;usb_device.c: 2893: {
  8723                           ;usb_device.c: 2895: p->STAT.Val |= 0x40;
  8724  000AB2  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  8725  000AB6  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  8726  000ABA  0E00               	movlw	0
  8727  000ABC  8CDB               	bsf	plusw2,6,c
  8728  000ABE                     i2l3895:
  8729                           
  8730                           ;usb_device.c: 2896: }
  8731                           ;usb_device.c: 2900: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  8732  000ABE  0E04               	movlw	4
  8733  000AC0  181A               	xorwf	USBStdFeatureReqHandler@p,w,c
  8734  000AC2  6E1A               	movwf	USBStdFeatureReqHandler@p,c
  8735  000AC4  501B               	movf	USBStdFeatureReqHandler@p+1,w,c
  8736  000AC6  6E1B               	movwf	USBStdFeatureReqHandler@p+1,c
  8737                           
  8738                           ;usb_device.c: 2906: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  8739  000AC8  B219               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
  8740  000ACA  D006               	goto	i2l550
  8741  000ACC  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  8742  000AD0  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  8743  000AD4  AEDF               	btfss	indf2,7,c
  8744  000AD6  D031               	goto	i2l3909
  8745  000AD8                     i2l550:
  8746                           
  8747                           ;usb_device.c: 2907: {
  8748                           ;usb_device.c: 2908: if(SetupPkt.EPDir == 0)
  8749  000AD8  0104               	movlb	4	; () banked
  8750  000ADA  BF34               	btfsc	52,7,b	;volatile
  8751  000ADC  D00B               	goto	i2l3903
  8752                           
  8753                           ; BSR set to: 4
  8754                           ;usb_device.c: 2909: {
  8755                           ;usb_device.c: 2910: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
  8756  000ADE  0104               	movlb	4	; () banked
  8757  000AE0  5134               	movf	52,w,b	;volatile
  8758  000AE2  0B0F               	andlw	15
  8759  000AE4  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  8760  000AE6  5016               	movf	??_USBStdFeatureReqHandler,w,c
  8761  000AE8  0D01               	mullw	1
  8762  000AEA  0E84               	movlw	low _ep_data_out
  8763  000AEC  24F3               	addwf	prodl,w,c
  8764  000AEE  6ED9               	movwf	fsr2l,c
  8765  000AF0  0E00               	movlw	high _ep_data_out
  8766  000AF2  D00A               	goto	L14
  8767  000AF4                     i2l3903:
  8768                           
  8769                           ;usb_device.c: 2912: else
  8770                           ;usb_device.c: 2913: {
  8771                           ;usb_device.c: 2914: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
  8772  000AF4  0104               	movlb	4	; () banked
  8773  000AF6  5134               	movf	52,w,b	;volatile
  8774  000AF8  0B0F               	andlw	15
  8775  000AFA  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  8776  000AFC  5016               	movf	??_USBStdFeatureReqHandler,w,c
  8777  000AFE  0D01               	mullw	1
  8778  000B00  0E87               	movlw	low _ep_data_in
  8779  000B02  24F3               	addwf	prodl,w,c
  8780  000B04  6ED9               	movwf	fsr2l,c
  8781  000B06  0E00               	movlw	high _ep_data_in
  8782  000B08                     L14:
  8783  000B08  20F4               	addwfc	prodh,w,c
  8784  000B0A  6EDA               	movwf	fsr2h,c
  8785  000B0C  0100               	movlb	0	; () banked
  8786  000B0E  92DF               	bcf	indf2,1,c
  8787                           
  8788                           ; BSR set to: 0
  8789                           ;usb_device.c: 2915: }
  8790                           ;usb_device.c: 2917: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  8791                           
  8792                           ; BSR set to: 0
  8793  000B10  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  8794  000B14  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  8795  000B18  0E3B               	movlw	59
  8796  000B1A  16DF               	andwf	indf2,f,c
  8797                           
  8798                           ; BSR set to: 0
  8799                           ;usb_device.c: 2920: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  8800  000B1C  0E00               	movlw	0
  8801  000B1E  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  8802  000B20  0E05               	movlw	5
  8803  000B22  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  8804  000B24  C01A  F010         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
  8805  000B28  C01B  F011         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  8806  000B2C  0E00               	movlw	0
  8807  000B2E  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  8808  000B30  0E02               	movlw	2
  8809  000B32  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  8810  000B34  ECC3  F013         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8811                           
  8812                           ;usb_device.c: 2921: }
  8813  000B38  D006               	goto	i2l3911
  8814  000B3A                     i2l3909:
  8815                           
  8816                           ;usb_device.c: 2922: else
  8817                           ;usb_device.c: 2923: {
  8818                           ;usb_device.c: 2925: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  8819  000B3A  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  8820  000B3E  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  8821  000B42  0E3B               	movlw	59
  8822  000B44  16DF               	andwf	indf2,f,c
  8823  000B46                     i2l3911:
  8824                           
  8825                           ;usb_device.c: 2926: }
  8826                           ;usb_device.c: 2973: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
  8827  000B46  0104               	movlb	4	; () banked
  8828  000B48  5134               	movf	52,w,b	;volatile
  8829  000B4A  0B0F               	andlw	15
  8830  000B4C  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  8831  000B4E  5016               	movf	??_USBStdFeatureReqHandler,w,c
  8832  000B50  0D01               	mullw	1
  8833  000B52  0E70               	movlw	112
  8834  000B54  24F3               	addwf	prodl,w,c
  8835  000B56  6E17               	movwf	USBStdFeatureReqHandler@pUEP,c
  8836  000B58  0E0F               	movlw	15
  8837  000B5A  20F4               	addwfc	prodh,w,c
  8838  000B5C  6E18               	movwf	USBStdFeatureReqHandler@pUEP+1,c
  8839                           
  8840                           ; BSR set to: 4
  8841                           ;usb_device.c: 2977: *pUEP &= ~0x0001;
  8842  000B5E  C017  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
  8843  000B62  C018  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
  8844  000B66  0EFE               	movlw	254
  8845  000B68  16DF               	andwf	indf2,f,c
  8846                           
  8847                           ; BSR set to: 4
  8848  000B6A  0012               	return	
  8849  000B6C                     __end_of_USBStdFeatureReqHandler:
  8850                           	opt stack 0
  8851                           pclatu	equ	0xFFB
  8852                           pclath	equ	0xFFA
  8853                           tblptru	equ	0xFF8
  8854                           tblptrh	equ	0xFF7
  8855                           tblptrl	equ	0xFF6
  8856                           tablat	equ	0xFF5
  8857                           prodh	equ	0xFF4
  8858                           prodl	equ	0xFF3
  8859                           intcon	equ	0xFF2
  8860                           postinc0	equ	0xFEE
  8861                           fsr0h	equ	0xFEA
  8862                           fsr0l	equ	0xFE9
  8863                           wreg	equ	0xFE8
  8864                           indf1	equ	0xFE7
  8865                           postdec1	equ	0xFE5
  8866                           fsr1h	equ	0xFE2
  8867                           fsr1l	equ	0xFE1
  8868                           bsr	equ	0xFE0
  8869                           indf2	equ	0xFDF
  8870                           postinc2	equ	0xFDE
  8871                           postdec2	equ	0xFDD
  8872                           plusw2	equ	0xFDB
  8873                           fsr2h	equ	0xFDA
  8874                           fsr2l	equ	0xFD9
  8875                           status	equ	0xFD8
  8876                           
  8877 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  8878 ;; Defined at:
  8879 ;;		line 96 in file "../USBConverter/LPC_FSUSB-CDC-X/main_cdc.c"
  8880 ;; Parameters:    Size  Location     Type
  8881 ;;  event           2   13[COMRAM] enum E3369
  8882 ;;  pdata           2   15[COMRAM] PTR void 
  8883 ;;		 -> RAM(2047), USTATcopy(1), USBActiveConfiguration(1), BDT(48), 
  8884 ;;		 -> NULL(0), 
  8885 ;;  size            2   17[COMRAM] unsigned int 
  8886 ;; Auto vars:     Size  Location     Type
  8887 ;;		None
  8888 ;; Return value:  Size  Location     Type
  8889 ;;                  1    wreg      unsigned char 
  8890 ;; Registers used:
  8891 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8892 ;; Tracked objects:
  8893 ;;		On entry : 0/0
  8894 ;;		On exit  : 0/0
  8895 ;;		Unchanged: 0/0
  8896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8897 ;;      Params:         6       0       0       0       0       0       0       0       0
  8898 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8899 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8900 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8901 ;;Total ram usage:        8 bytes
  8902 ;; Hardware stack levels used:    1
  8903 ;; Hardware stack levels required when called:    4
  8904 ;; This function calls:
  8905 ;;		_APP_DeviceCDCEmulatorInitialize
  8906 ;;		_USBCheckCDCRequest
  8907 ;; This function is called by:
  8908 ;;		_USBDeviceTasks
  8909 ;;		_USBStdSetCfgHandler
  8910 ;;		_USBSuspend
  8911 ;;		_USBWakeFromSuspend
  8912 ;;		_USBCtrlTrfSetupHandler
  8913 ;;		_USBCheckStdRequest
  8914 ;;		_USBStdFeatureReqHandler
  8915 ;; This function uses a non-reentrant model
  8916 ;;
  8917                           
  8918                           	psect	text44
  8919  002786                     __ptext44:
  8920                           	opt stack 0
  8921  002786                     _USER_USB_CALLBACK_EVENT_HANDLER:
  8922                           	opt stack 18
  8923                           
  8924                           ;main_cdc.c: 98: switch(event)
  8925                           
  8926                           ;incstack = 0
  8927  002786  D006               	goto	i2l3553
  8928  002788                     i2l3547:
  8929                           
  8930                           ;main_cdc.c: 112: APP_DeviceCDCEmulatorInitialize();
  8931  002788  EC5E  F013         	call	_APP_DeviceCDCEmulatorInitialize	;wreg free
  8932                           
  8933                           ;main_cdc.c: 115: break;
  8934                           
  8935                           ;main_cdc.c: 114: case EVENT_SET_DESCRIPTOR:
  8936                           
  8937                           ;main_cdc.c: 113: break;
  8938  00278C  0012               	return	
  8939  00278E                     i2l3549:
  8940                           
  8941                           ;main_cdc.c: 119: USBCheckCDCRequest();
  8942  00278E  ECEB  F00D         	call	_USBCheckCDCRequest	;wreg free
  8943                           
  8944                           ;main_cdc.c: 135: }
  8945                           
  8946                           ;main_cdc.c: 134: break;
  8947                           
  8948                           ;main_cdc.c: 133: default:
  8949                           
  8950                           ;main_cdc.c: 132: break;
  8951                           
  8952                           ;main_cdc.c: 123: case EVENT_TRANSFER_TERMINATED:
  8953                           
  8954                           ;main_cdc.c: 122: break;
  8955                           
  8956                           ;main_cdc.c: 121: case EVENT_BUS_ERROR:
  8957                           
  8958                           ;main_cdc.c: 120: break;
  8959  002792  0012               	return	
  8960  002794                     i2l3553:
  8961  002794  C00E  F014         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
  8962  002798  C00F  F015         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
  8963                           
  8964                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  8965                           ; Switch size 1, requested type "space"
  8966                           ; Number of cases is 2, Range of values is 0 to 127
  8967                           ; switch strategies available:
  8968                           ; Name         Instructions Cycles
  8969                           ; simple_byte            7     4 (average)
  8970                           ;	Chosen strategy is simple_byte
  8971  00279C  5015               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
  8972  00279E  0A00               	xorlw	0	; case 0
  8973  0027A0  B4D8               	btfsc	status,2,c
  8974  0027A2  D004               	goto	i2l5893
  8975  0027A4  0A7F               	xorlw	127	; case 127
  8976  0027A6  A4D8               	btfss	status,2,c
  8977  0027A8  0012               	return	
  8978  0027AA  D018               	goto	i2l5895
  8979  0027AC                     i2l5893:
  8980                           
  8981                           ; Switch size 1, requested type "space"
  8982                           ; Number of cases is 8, Range of values is 1 to 117
  8983                           ; switch strategies available:
  8984                           ; Name         Instructions Cycles
  8985                           ; simple_byte           25    13 (average)
  8986                           ;	Chosen strategy is simple_byte
  8987  0027AC  5014               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
  8988  0027AE  0A01               	xorlw	1	; case 1
  8989  0027B0  B4D8               	btfsc	status,2,c
  8990  0027B2  D7EA               	goto	i2l3547
  8991  0027B4  0A03               	xorlw	3	; case 2
  8992  0027B6  B4D8               	btfsc	status,2,c
  8993  0027B8  0012               	return	
  8994  0027BA  0A01               	xorlw	1	; case 3
  8995  0027BC  B4D8               	btfsc	status,2,c
  8996  0027BE  D7E7               	goto	i2l3549
  8997  0027C0  0A06               	xorlw	6	; case 5
  8998  0027C2  B4D8               	btfsc	status,2,c
  8999  0027C4  0012               	return	
  9000  0027C6  0A77               	xorlw	119	; case 114
  9001  0027C8  B4D8               	btfsc	status,2,c
  9002  0027CA  0012               	return	
  9003  0027CC  0A01               	xorlw	1	; case 115
  9004  0027CE  B4D8               	btfsc	status,2,c
  9005  0027D0  0012               	return	
  9006  0027D2  0A07               	xorlw	7	; case 116
  9007  0027D4  B4D8               	btfsc	status,2,c
  9008  0027D6  0012               	return	
  9009  0027D8  0A01               	xorlw	1	; case 117
  9010  0027DA  0012               	return	
  9011  0027DC                     i2l5895:
  9012                           
  9013                           ; Switch size 1, requested type "space"
  9014                           ; Number of cases is 1, Range of values is 255 to 255
  9015                           ; switch strategies available:
  9016                           ; Name         Instructions Cycles
  9017                           ; simple_byte            4     3 (average)
  9018                           ;	Chosen strategy is simple_byte
  9019  0027DC  5014               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
  9020  0027DE  0AFF               	xorlw	255	; case 255
  9021  0027E0  0012               	return	
  9022  0027E2                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
  9023                           	opt stack 0
  9024                           pclatu	equ	0xFFB
  9025                           pclath	equ	0xFFA
  9026                           tblptru	equ	0xFF8
  9027                           tblptrh	equ	0xFF7
  9028                           tblptrl	equ	0xFF6
  9029                           tablat	equ	0xFF5
  9030                           prodh	equ	0xFF4
  9031                           prodl	equ	0xFF3
  9032                           intcon	equ	0xFF2
  9033                           postinc0	equ	0xFEE
  9034                           fsr0h	equ	0xFEA
  9035                           fsr0l	equ	0xFE9
  9036                           wreg	equ	0xFE8
  9037                           indf1	equ	0xFE7
  9038                           postdec1	equ	0xFE5
  9039                           fsr1h	equ	0xFE2
  9040                           fsr1l	equ	0xFE1
  9041                           bsr	equ	0xFE0
  9042                           indf2	equ	0xFDF
  9043                           postinc2	equ	0xFDE
  9044                           postdec2	equ	0xFDD
  9045                           plusw2	equ	0xFDB
  9046                           fsr2h	equ	0xFDA
  9047                           fsr2l	equ	0xFD9
  9048                           status	equ	0xFD8
  9049                           
  9050 ;; *************** function _USBCheckCDCRequest *****************
  9051 ;; Defined at:
  9052 ;;		line 147 in file "../USBConverter/mla/v2017_03_06/framework/usb/src/usb_device_cdc.c"
  9053 ;; Parameters:    Size  Location     Type
  9054 ;;		None
  9055 ;; Auto vars:     Size  Location     Type
  9056 ;;		None
  9057 ;; Return value:  Size  Location     Type
  9058 ;;                  1    wreg      void 
  9059 ;; Registers used:
  9060 ;;		wreg, status,2, status,0
  9061 ;; Tracked objects:
  9062 ;;		On entry : 0/0
  9063 ;;		On exit  : 0/0
  9064 ;;		Unchanged: 0/0
  9065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9066 ;;      Params:         0       0       0       0       0       0       0       0       0
  9067 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9068 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9069 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9070 ;;Total ram usage:        0 bytes
  9071 ;; Hardware stack levels used:    1
  9072 ;; This function calls:
  9073 ;;		Nothing
  9074 ;; This function is called by:
  9075 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9076 ;; This function uses a non-reentrant model
  9077 ;;
  9078                           
  9079                           	psect	text45
  9080  001BD6                     __ptext45:
  9081                           	opt stack 0
  9082  001BD6                     _USBCheckCDCRequest:
  9083                           	opt stack 21
  9084                           
  9085                           ;usb_device_cdc.c: 152: if(SetupPkt.Recipient != (0x01)) return;
  9086                           
  9087                           ;incstack = 0
  9088  001BD6  0104               	movlb	4	; () banked
  9089  001BD8  5130               	movf	48,w,b	;volatile
  9090  001BDA  0B1F               	andlw	31
  9091  001BDC  06E8               	decf	wreg,f,c
  9092  001BDE  A4D8               	btfss	status,2,c
  9093  001BE0  0012               	return	
  9094                           
  9095                           ; BSR set to: 4
  9096                           ;usb_device_cdc.c: 157: if(SetupPkt.RequestType != (0x20>>5)) return;
  9097                           
  9098                           ; BSR set to: 4
  9099                           
  9100                           ; BSR set to: 4
  9101  001BE2  0104               	movlb	4	; () banked
  9102  001BE4  3930               	swapf	48,w,b	;volatile
  9103  001BE6  32E8               	rrcf	wreg,f,c
  9104  001BE8  0B03               	andlw	3
  9105  001BEA  06E8               	decf	wreg,f,c
  9106  001BEC  A4D8               	btfss	status,2,c
  9107  001BEE  0012               	return	
  9108                           
  9109                           ; BSR set to: 4
  9110                           ;usb_device_cdc.c: 163: if((SetupPkt.bIntfID != 0x0)&&
  9111                           ;usb_device_cdc.c: 164: (SetupPkt.bIntfID != 0x01)) return;
  9112                           
  9113                           ; BSR set to: 4
  9114                           
  9115                           ; BSR set to: 4
  9116  001BF0  0104               	movlb	4	; () banked
  9117  001BF2  5134               	movf	52,w,b	;volatile
  9118  001BF4  B4D8               	btfsc	status,2,c
  9119  001BF6  D045               	goto	i2l3543
  9120                           
  9121                           ; BSR set to: 4
  9122  001BF8  0104               	movlb	4	; () banked
  9123  001BFA  0534               	decf	52,w,b	;volatile
  9124  001BFC  A4D8               	btfss	status,2,c
  9125  001BFE  0012               	return	
  9126  001C00  D040               	goto	i2l3543
  9127  001C02                     i2l3519:
  9128                           
  9129                           ; BSR set to: 4
  9130                           ;usb_device_cdc.c: 171: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  9131  001C02  0EB9               	movlw	low _dummy_encapsulated_cmd_response
  9132  001C04  0100               	movlb	0	; () banked
  9133  001C06  6F68               	movwf	_inPipes& (0+255),b	;volatile
  9134  001C08  0E00               	movlw	high _dummy_encapsulated_cmd_response
  9135  001C0A  0100               	movlb	0	; () banked
  9136  001C0C  6F69               	movwf	(_inPipes+1)& (0+255),b	;volatile
  9137                           
  9138                           ; BSR set to: 0
  9139                           ;usb_device_cdc.c: 172: inPipes[0].wCount.Val = 0x08;
  9140  001C0E  0E00               	movlw	0
  9141  001C10  0100               	movlb	0	; () banked
  9142  001C12  6F6D               	movwf	(_inPipes+5)& (0+255),b	;volatile
  9143  001C14  0E08               	movlw	8
  9144  001C16  6F6C               	movwf	(_inPipes+4)& (0+255),b	;volatile
  9145                           
  9146                           ; BSR set to: 0
  9147                           ;usb_device_cdc.c: 173: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9148  001C18  0100               	movlb	0	; () banked
  9149  001C1A  816B               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
  9150                           
  9151                           ; BSR set to: 0
  9152                           ;usb_device_cdc.c: 174: inPipes[0].info.bits.busy = 1;
  9153  001C1C  0100               	movlb	0	; () banked
  9154  001C1E  8F6B               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
  9155                           
  9156                           ;usb_device_cdc.c: 175: break;
  9157  001C20  0012               	return	
  9158  001C22                     i2l3527:
  9159                           
  9160                           ;usb_device_cdc.c: 178: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  9161  001C22  0EB9               	movlw	low _dummy_encapsulated_cmd_response
  9162  001C24  0100               	movlb	0	; () banked
  9163  001C26  6F68               	movwf	_inPipes& (0+255),b	;volatile
  9164  001C28  0E00               	movlw	high _dummy_encapsulated_cmd_response
  9165  001C2A  0100               	movlb	0	; () banked
  9166  001C2C  6F69               	movwf	(_inPipes+1)& (0+255),b	;volatile
  9167                           
  9168                           ; BSR set to: 0
  9169                           ;usb_device_cdc.c: 179: inPipes[0].info.bits.busy = 1;
  9170  001C2E  0100               	movlb	0	; () banked
  9171  001C30  8F6B               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
  9172                           
  9173                           ;usb_device_cdc.c: 180: break;
  9174  001C32  0012               	return	
  9175  001C34                     i2l619:
  9176                           
  9177                           ; BSR set to: 4
  9178                           ;usb_device_cdc.c: 185: outPipes[0].wCount.Val = SetupPkt.wLength;
  9179  001C34  C436 F064          	movff	1078,_outPipes+4	;volatile
  9180  001C38  C437 F065          	movff	1079,_outPipes+5	;volatile
  9181                           
  9182                           ; BSR set to: 4
  9183                           ;usb_device_cdc.c: 186: outPipes[0].pDst.bRam = (uint8_t*)&cdc_notice.SetLineCoding._byt
      +                          e[0];
  9184  001C3C  0EAF               	movlw	low _cdc_notice
  9185  001C3E  0100               	movlb	0	; () banked
  9186  001C40  6F60               	movwf	_outPipes& (0+255),b	;volatile
  9187  001C42  0E00               	movlw	high _cdc_notice
  9188  001C44  0100               	movlb	0	; () banked
  9189  001C46  6F61               	movwf	(_outPipes+1)& (0+255),b	;volatile
  9190                           
  9191                           ;usb_device_cdc.c: 187: outPipes[0].pFunc = &USART_mySetLineCodingHandler;
  9192  001C48  0E3E               	movlw	low _USART_mySetLineCodingHandler
  9193  001C4A  0100               	movlb	0	; () banked
  9194  001C4C  6F66               	movwf	(_outPipes+6)& (0+255),b	;volatile
  9195  001C4E  0E28               	movlw	high _USART_mySetLineCodingHandler
  9196  001C50  0100               	movlb	0	; () banked
  9197  001C52  6F67               	movwf	(_outPipes+7)& (0+255),b	;volatile
  9198                           
  9199                           ; BSR set to: 0
  9200                           ;usb_device_cdc.c: 188: outPipes[0].info.bits.busy = 1;
  9201  001C54  0100               	movlb	0	; () banked
  9202  001C56  8F63               	bsf	(_outPipes+3)& (0+255),7,b	;volatile
  9203                           
  9204                           ;usb_device_cdc.c: 189: break;
  9205  001C58  0012               	return	
  9206  001C5A                     i2l3535:
  9207                           
  9208                           ;usb_device_cdc.c: 192: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
  9209  001C5A  0EC1               	movlw	low _line_coding
  9210  001C5C  0100               	movlb	0	; () banked
  9211  001C5E  6F68               	movwf	_inPipes& (0+255),b	;volatile
  9212  001C60  0E00               	movlw	high _line_coding
  9213  001C62  0100               	movlb	0	; () banked
  9214  001C64  6F69               	movwf	(_inPipes+1)& (0+255),b	;volatile
  9215                           
  9216                           ; BSR set to: 0
  9217  001C66  0E00               	movlw	0
  9218  001C68  0100               	movlb	0	; () banked
  9219  001C6A  6F6D               	movwf	(_inPipes+5)& (0+255),b	;volatile
  9220  001C6C  0E07               	movlw	7
  9221  001C6E  6F6C               	movwf	(_inPipes+4)& (0+255),b	;volatile
  9222                           
  9223                           ; BSR set to: 0
  9224  001C70  0EC1               	movlw	193
  9225  001C72  0100               	movlb	0	; () banked
  9226  001C74  6F6B               	movwf	(_inPipes+3)& (0+255),b	;volatile
  9227                           
  9228                           ;usb_device_cdc.c: 196: break;
  9229  001C76  0012               	return	
  9230  001C78                     i2l621:
  9231                           
  9232                           ; BSR set to: 4
  9233                           ;usb_device_cdc.c: 199: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
  9234  001C78  C432 F03B          	movff	1074,_control_signal_bitmap	;volatile
  9235                           
  9236                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
  9237  001C7C  0100               	movlb	0	; () banked
  9238  001C7E  8F6B               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
  9239                           
  9240                           ; BSR set to: 0
  9241                           ;usb_device_cdc.c: 258: }
  9242                           
  9243                           ; BSR set to: 0
  9244                           ;usb_device_cdc.c: 257: break;
  9245                           
  9246                           ;usb_device_cdc.c: 256: default:
  9247                           
  9248                           ;usb_device_cdc.c: 232: break;
  9249  001C80  0012               	return	
  9250  001C82                     i2l3543:
  9251  001C82  0104               	movlb	4	; () banked
  9252  001C84  5131               	movf	49,w,b	;volatile
  9253                           
  9254                           ; Switch size 1, requested type "space"
  9255                           ; Number of cases is 5, Range of values is 0 to 34
  9256                           ; switch strategies available:
  9257                           ; Name         Instructions Cycles
  9258                           ; simple_byte           16     9 (average)
  9259                           ;	Chosen strategy is simple_byte
  9260  001C86  0A00               	xorlw	0	; case 0
  9261  001C88  B4D8               	btfsc	status,2,c
  9262  001C8A  D7BB               	goto	i2l3519
  9263  001C8C  0A01               	xorlw	1	; case 1
  9264  001C8E  B4D8               	btfsc	status,2,c
  9265  001C90  D7C8               	goto	i2l3527
  9266  001C92  0A21               	xorlw	33	; case 32
  9267  001C94  B4D8               	btfsc	status,2,c
  9268  001C96  D7CE               	goto	i2l619
  9269  001C98  0A01               	xorlw	1	; case 33
  9270  001C9A  B4D8               	btfsc	status,2,c
  9271  001C9C  D7DE               	goto	i2l3535
  9272  001C9E  0A03               	xorlw	3	; case 34
  9273  001CA0  A4D8               	btfss	status,2,c
  9274  001CA2  0012               	return	
  9275  001CA4  D7E9               	goto	i2l621
  9276  001CA6                     __end_of_USBCheckCDCRequest:
  9277                           	opt stack 0
  9278                           pclatu	equ	0xFFB
  9279                           pclath	equ	0xFFA
  9280                           tblptru	equ	0xFF8
  9281                           tblptrh	equ	0xFF7
  9282                           tblptrl	equ	0xFF6
  9283                           tablat	equ	0xFF5
  9284                           prodh	equ	0xFF4
  9285                           prodl	equ	0xFF3
  9286                           intcon	equ	0xFF2
  9287                           postinc0	equ	0xFEE
  9288                           fsr0h	equ	0xFEA
  9289                           fsr0l	equ	0xFE9
  9290                           wreg	equ	0xFE8
  9291                           indf1	equ	0xFE7
  9292                           postdec1	equ	0xFE5
  9293                           fsr1h	equ	0xFE2
  9294                           fsr1l	equ	0xFE1
  9295                           bsr	equ	0xFE0
  9296                           indf2	equ	0xFDF
  9297                           postinc2	equ	0xFDE
  9298                           postdec2	equ	0xFDD
  9299                           plusw2	equ	0xFDB
  9300                           fsr2h	equ	0xFDA
  9301                           fsr2l	equ	0xFD9
  9302                           status	equ	0xFD8
  9303                           
  9304 ;; *************** function _APP_DeviceCDCEmulatorInitialize *****************
  9305 ;; Defined at:
  9306 ;;		line 60 in file "../USBConverter/mla/v2017_03_06/framework/usb/src/app_device_cdc_to_uart.c"
  9307 ;; Parameters:    Size  Location     Type
  9308 ;;		None
  9309 ;; Auto vars:     Size  Location     Type
  9310 ;;  i               1   12[COMRAM] unsigned char 
  9311 ;; Return value:  Size  Location     Type
  9312 ;;                  1    wreg      void 
  9313 ;; Registers used:
  9314 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9315 ;; Tracked objects:
  9316 ;;		On entry : 0/0
  9317 ;;		On exit  : 0/0
  9318 ;;		Unchanged: 0/0
  9319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9320 ;;      Params:         0       0       0       0       0       0       0       0       0
  9321 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9322 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9323 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9324 ;;Total ram usage:        1 bytes
  9325 ;; Hardware stack levels used:    1
  9326 ;; Hardware stack levels required when called:    3
  9327 ;; This function calls:
  9328 ;;		_CDCInitEP
  9329 ;;		_USART_Initialize
  9330 ;; This function is called by:
  9331 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9332 ;; This function uses a non-reentrant model
  9333 ;;
  9334                           
  9335                           	psect	text46
  9336  0026BC                     __ptext46:
  9337                           	opt stack 0
  9338  0026BC                     _APP_DeviceCDCEmulatorInitialize:
  9339                           	opt stack 18
  9340                           
  9341                           ;app_device_cdc_to_uart.c: 62: CDCInitEP();
  9342                           
  9343                           ;incstack = 0
  9344  0026BC  EC29  F013         	call	_CDCInitEP	;wreg free
  9345                           
  9346                           ;app_device_cdc_to_uart.c: 65: line_coding.bCharFormat = 0;
  9347  0026C0  0E00               	movlw	0
  9348  0026C2  0100               	movlb	0	; () banked
  9349  0026C4  6FC5               	movwf	(_line_coding+4)& (0+255),b
  9350                           
  9351                           ; BSR set to: 0
  9352                           ;app_device_cdc_to_uart.c: 66: line_coding.bDataBits = 8;
  9353  0026C6  0E08               	movlw	8
  9354  0026C8  0100               	movlb	0	; () banked
  9355  0026CA  6FC7               	movwf	(_line_coding+6)& (0+255),b
  9356                           
  9357                           ; BSR set to: 0
  9358                           ;app_device_cdc_to_uart.c: 67: line_coding.bParityType = 0;
  9359  0026CC  0E00               	movlw	0
  9360  0026CE  0100               	movlb	0	; () banked
  9361  0026D0  6FC6               	movwf	(_line_coding+5)& (0+255),b
  9362                           
  9363                           ; BSR set to: 0
  9364                           ;app_device_cdc_to_uart.c: 68: line_coding.dwDTERate = 9600;
  9365  0026D2  0E80               	movlw	128
  9366  0026D4  0100               	movlb	0	; () banked
  9367  0026D6  6FC1               	movwf	_line_coding& (0+255),b
  9368  0026D8  0E25               	movlw	37
  9369  0026DA  6FC2               	movwf	(_line_coding+1)& (0+255),b
  9370  0026DC  0E00               	movlw	0
  9371  0026DE  6FC3               	movwf	(_line_coding+2)& (0+255),b
  9372  0026E0  0E00               	movlw	0
  9373  0026E2  6FC4               	movwf	(_line_coding+3)& (0+255),b
  9374                           
  9375                           ; BSR set to: 0
  9376                           ;app_device_cdc_to_uart.c: 70: unsigned char i;
  9377                           ;app_device_cdc_to_uart.c: 71: USART_Initialize();
  9378  0026E4  ECB9  F015         	call	_USART_Initialize	;wreg free
  9379                           
  9380                           ;app_device_cdc_to_uart.c: 74: for (i=0; i<sizeof(USB_Out_Buffer); i++)
  9381  0026E8  0E00               	movlw	0
  9382  0026EA  6E0D               	movwf	APP_DeviceCDCEmulatorInitialize@i,c
  9383  0026EC                     i2l3491:
  9384  0026EC  0E3F               	movlw	63
  9385  0026EE  640D               	cpfsgt	APP_DeviceCDCEmulatorInitialize@i,c
  9386  0026F0  D001               	goto	i2l3495
  9387  0026F2  D00C               	goto	i2l3501
  9388  0026F4                     i2l3495:
  9389                           
  9390                           ;app_device_cdc_to_uart.c: 75: {
  9391                           ;app_device_cdc_to_uart.c: 76: USB_Out_Buffer[i] = 0;
  9392  0026F4  500D               	movf	APP_DeviceCDCEmulatorInitialize@i,w,c
  9393  0026F6  0D01               	mullw	1
  9394  0026F8  0E40               	movlw	low _USB_Out_Buffer
  9395  0026FA  24F3               	addwf	prodl,w,c
  9396  0026FC  6ED9               	movwf	fsr2l,c
  9397  0026FE  0E01               	movlw	high _USB_Out_Buffer
  9398  002700  20F4               	addwfc	prodh,w,c
  9399  002702  6EDA               	movwf	fsr2h,c
  9400  002704  0E00               	movlw	0
  9401  002706  6EDF               	movwf	indf2,c
  9402  002708  2A0D               	incf	APP_DeviceCDCEmulatorInitialize@i,f,c
  9403  00270A  D7F0               	goto	i2l3491
  9404  00270C                     i2l3501:
  9405                           
  9406                           ;app_device_cdc_to_uart.c: 77: }
  9407                           ;app_device_cdc_to_uart.c: 79: NextUSBOut = 0;
  9408  00270C  0E00               	movlw	0
  9409  00270E  6E4C               	movwf	_NextUSBOut,c
  9410                           
  9411                           ;app_device_cdc_to_uart.c: 80: LastRS232Out = 0;
  9412  002710  0E00               	movlw	0
  9413  002712  6E4B               	movwf	_LastRS232Out,c
  9414                           
  9415                           ;app_device_cdc_to_uart.c: 81: lastTransmission = 0;
  9416  002714  0E00               	movlw	0
  9417  002716  0100               	movlb	0	; () banked
  9418  002718  6F8E               	movwf	_lastTransmission& (0+255),b
  9419  00271A  0E00               	movlw	0
  9420  00271C  0100               	movlb	0	; () banked
  9421  00271E  6F8F               	movwf	(_lastTransmission+1)& (0+255),b
  9422                           
  9423                           ; BSR set to: 0
  9424  002720  0012               	return		;funcret
  9425  002722                     __end_of_APP_DeviceCDCEmulatorInitialize:
  9426                           	opt stack 0
  9427                           pclatu	equ	0xFFB
  9428                           pclath	equ	0xFFA
  9429                           tblptru	equ	0xFF8
  9430                           tblptrh	equ	0xFF7
  9431                           tblptrl	equ	0xFF6
  9432                           tablat	equ	0xFF5
  9433                           prodh	equ	0xFF4
  9434                           prodl	equ	0xFF3
  9435                           intcon	equ	0xFF2
  9436                           postinc0	equ	0xFEE
  9437                           fsr0h	equ	0xFEA
  9438                           fsr0l	equ	0xFE9
  9439                           wreg	equ	0xFE8
  9440                           indf1	equ	0xFE7
  9441                           postdec1	equ	0xFE5
  9442                           fsr1h	equ	0xFE2
  9443                           fsr1l	equ	0xFE1
  9444                           bsr	equ	0xFE0
  9445                           indf2	equ	0xFDF
  9446                           postinc2	equ	0xFDE
  9447                           postdec2	equ	0xFDD
  9448                           plusw2	equ	0xFDB
  9449                           fsr2h	equ	0xFDA
  9450                           fsr2l	equ	0xFD9
  9451                           status	equ	0xFD8
  9452                           
  9453 ;; *************** function _CDCInitEP *****************
  9454 ;; Defined at:
  9455 ;;		line 294 in file "../USBConverter/mla/v2017_03_06/framework/usb/src/usb_device_cdc.c"
  9456 ;; Parameters:    Size  Location     Type
  9457 ;;		None
  9458 ;; Auto vars:     Size  Location     Type
  9459 ;;		None
  9460 ;; Return value:  Size  Location     Type
  9461 ;;                  1    wreg      void 
  9462 ;; Registers used:
  9463 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9464 ;; Tracked objects:
  9465 ;;		On entry : 0/0
  9466 ;;		On exit  : 0/0
  9467 ;;		Unchanged: 0/0
  9468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9469 ;;      Params:         0       0       0       0       0       0       0       0       0
  9470 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9471 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9472 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9473 ;;Total ram usage:        0 bytes
  9474 ;; Hardware stack levels used:    1
  9475 ;; Hardware stack levels required when called:    2
  9476 ;; This function calls:
  9477 ;;		_USBEnableEndpoint
  9478 ;;		i2_USBTransferOnePacket
  9479 ;; This function is called by:
  9480 ;;		_APP_DeviceCDCEmulatorInitialize
  9481 ;; This function uses a non-reentrant model
  9482 ;;
  9483                           
  9484                           	psect	text47
  9485  002652                     __ptext47:
  9486                           	opt stack 0
  9487  002652                     _CDCInitEP:
  9488                           	opt stack 18
  9489                           
  9490                           ;usb_device_cdc.c: 297: line_coding.dwDTERate = 9600;
  9491                           
  9492                           ; BSR set to: 0
  9493                           ;incstack = 0
  9494  002652  0E80               	movlw	128
  9495  002654  0100               	movlb	0	; () banked
  9496  002656  6FC1               	movwf	_line_coding& (0+255),b
  9497  002658  0E25               	movlw	37
  9498  00265A  6FC2               	movwf	(_line_coding+1)& (0+255),b
  9499  00265C  0E00               	movlw	0
  9500  00265E  6FC3               	movwf	(_line_coding+2)& (0+255),b
  9501  002660  0E00               	movlw	0
  9502  002662  6FC4               	movwf	(_line_coding+3)& (0+255),b
  9503                           
  9504                           ;usb_device_cdc.c: 298: line_coding.bCharFormat = 0x00;
  9505  002664  0E00               	movlw	0
  9506  002666  0100               	movlb	0	; () banked
  9507  002668  6FC5               	movwf	(_line_coding+4)& (0+255),b
  9508                           
  9509                           ;usb_device_cdc.c: 299: line_coding.bParityType = 0x00;
  9510  00266A  0E00               	movlw	0
  9511  00266C  0100               	movlb	0	; () banked
  9512  00266E  6FC6               	movwf	(_line_coding+5)& (0+255),b
  9513                           
  9514                           ;usb_device_cdc.c: 300: line_coding.bDataBits = 0x08;
  9515  002670  0E08               	movlw	8
  9516  002672  0100               	movlb	0	; () banked
  9517  002674  6FC7               	movwf	(_line_coding+6)& (0+255),b
  9518                           
  9519                           ;usb_device_cdc.c: 302: cdc_rx_len = 0;
  9520  002676  0E00               	movlw	0
  9521  002678  0100               	movlb	0	; () banked
  9522  00267A  6F90               	movwf	_cdc_rx_len& (0+255),b
  9523                           
  9524                           ; BSR set to: 0
  9525                           ;usb_device_cdc.c: 315: USBEnableEndpoint(1,0x02|0x10|0x08);
  9526  00267C  0E1A               	movlw	26
  9527  00267E  6E09               	movwf	USBEnableEndpoint@options,c
  9528  002680  0E01               	movlw	1
  9529  002682  EC8F  F014         	call	_USBEnableEndpoint
  9530                           
  9531                           ;usb_device_cdc.c: 316: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
  9532  002686  0E1E               	movlw	30
  9533  002688  6E09               	movwf	USBEnableEndpoint@options,c
  9534  00268A  0E02               	movlw	2
  9535  00268C  EC8F  F014         	call	_USBEnableEndpoint
  9536                           
  9537                           ;usb_device_cdc.c: 318: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  9538  002690  0E00               	movlw	0
  9539  002692  6E01               	movwf	i2USBTransferOnePacket@dir,c
  9540  002694  0E40               	movlw	64
  9541  002696  6E02               	movwf	i2USBTransferOnePacket@data,c
  9542  002698  0E05               	movlw	5
  9543  00269A  6E03               	movwf	i2USBTransferOnePacket@data+1,c
  9544  00269C  0E40               	movlw	64
  9545  00269E  6E04               	movwf	i2USBTransferOnePacket@len,c
  9546  0026A0  0E02               	movlw	2
  9547  0026A2  ECAB  F00A         	call	i2_USBTransferOnePacket
  9548  0026A6  C001  F08A         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
  9549  0026AA  C002  F08B         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
  9550                           
  9551                           ;usb_device_cdc.c: 319: CDCDataInHandle = (0);
  9552  0026AE  0E00               	movlw	0
  9553  0026B0  6E33               	movwf	_CDCDataInHandle,c
  9554  0026B2  0E00               	movlw	0
  9555  0026B4  6E34               	movwf	_CDCDataInHandle+1,c
  9556                           
  9557                           ;usb_device_cdc.c: 321: cdc_trf_state = 0;
  9558  0026B6  0E00               	movlw	0
  9559  0026B8  6E4D               	movwf	_cdc_trf_state,c
  9560  0026BA  0012               	return		;funcret
  9561  0026BC                     __end_of_CDCInitEP:
  9562                           	opt stack 0
  9563                           pclatu	equ	0xFFB
  9564                           pclath	equ	0xFFA
  9565                           tblptru	equ	0xFF8
  9566                           tblptrh	equ	0xFF7
  9567                           tblptrl	equ	0xFF6
  9568                           tablat	equ	0xFF5
  9569                           prodh	equ	0xFF4
  9570                           prodl	equ	0xFF3
  9571                           intcon	equ	0xFF2
  9572                           postinc0	equ	0xFEE
  9573                           fsr0h	equ	0xFEA
  9574                           fsr0l	equ	0xFE9
  9575                           wreg	equ	0xFE8
  9576                           indf1	equ	0xFE7
  9577                           postdec1	equ	0xFE5
  9578                           fsr1h	equ	0xFE2
  9579                           fsr1l	equ	0xFE1
  9580                           bsr	equ	0xFE0
  9581                           indf2	equ	0xFDF
  9582                           postinc2	equ	0xFDE
  9583                           postdec2	equ	0xFDD
  9584                           plusw2	equ	0xFDB
  9585                           fsr2h	equ	0xFDA
  9586                           fsr2l	equ	0xFD9
  9587                           status	equ	0xFD8
  9588                           
  9589 ;; *************** function i2_USBTransferOnePacket *****************
  9590 ;; Defined at:
  9591 ;;		line 995 in file "../USBConverter/mla/v2017_03_06/framework/usb/src/usb_device.c"
  9592 ;; Parameters:    Size  Location     Type
  9593 ;;  ep              1    wreg     unsigned char 
  9594 ;;  dir             1    0[COMRAM] unsigned char 
  9595 ;;  data            2    1[COMRAM] PTR unsigned char 
  9596 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
  9597 ;;  len             1    3[COMRAM] unsigned char 
  9598 ;; Auto vars:     Size  Location     Type
  9599 ;;  ep              1    8[COMRAM] unsigned char 
  9600 ;;  USBTransferO    2    9[COMRAM] PTR volatile struct __BD
  9601 ;;		 -> RAM(2047), BDT(48), NULL(0), 
  9602 ;; Return value:  Size  Location     Type
  9603 ;;                  2    0[COMRAM] PTR void 
  9604 ;; Registers used:
  9605 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9606 ;; Tracked objects:
  9607 ;;		On entry : 0/0
  9608 ;;		On exit  : 0/0
  9609 ;;		Unchanged: 0/0
  9610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9611 ;;      Params:         4       0       0       0       0       0       0       0       0
  9612 ;;      Locals:         3       0       0       0       0       0       0       0       0
  9613 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9614 ;;      Totals:        11       0       0       0       0       0       0       0       0
  9615 ;;Total ram usage:       11 bytes
  9616 ;; Hardware stack levels used:    1
  9617 ;; This function calls:
  9618 ;;		Nothing
  9619 ;; This function is called by:
  9620 ;;		_CDCInitEP
  9621 ;; This function uses a non-reentrant model
  9622 ;;
  9623                           
  9624                           	psect	text48
  9625  001556                     __ptext48:
  9626                           	opt stack 0
  9627  001556                     i2_USBTransferOnePacket:
  9628                           	opt stack 19
  9629                           
  9630                           ;incstack = 0
  9631                           ;i2USBTransferOnePacket@ep stored from wreg
  9632  001556  6E09               	movwf	i2USBTransferOnePacket@ep,c
  9633                           
  9634                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  9635                           ;usb_device.c: 1000: if(dir != 0)
  9636  001558  5001               	movf	i2USBTransferOnePacket@dir,w,c
  9637  00155A  B4D8               	btfsc	status,2,c
  9638  00155C  D007               	goto	i2l3437
  9639                           
  9640                           ;usb_device.c: 1001: {
  9641                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  9642  00155E  5009               	movf	i2USBTransferOnePacket@ep,w,c
  9643  001560  0D02               	mullw	2
  9644  001562  0E6E               	movlw	low _pBDTEntryIn
  9645  001564  24F3               	addwf	prodl,w,c
  9646  001566  6ED9               	movwf	fsr2l,c
  9647  001568  0E00               	movlw	high _pBDTEntryIn
  9648  00156A  D006               	goto	L15
  9649  00156C                     i2l3437:
  9650                           
  9651                           ;usb_device.c: 1005: else
  9652                           ;usb_device.c: 1006: {
  9653                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  9654  00156C  5009               	movf	i2USBTransferOnePacket@ep,w,c
  9655  00156E  0D02               	mullw	2
  9656  001570  0E74               	movlw	low _pBDTEntryOut
  9657  001572  24F3               	addwf	prodl,w,c
  9658  001574  6ED9               	movwf	fsr2l,c
  9659  001576  0E00               	movlw	high _pBDTEntryOut
  9660  001578                     L15:
  9661  001578  20F4               	addwfc	prodh,w,c
  9662  00157A  6EDA               	movwf	fsr2h,c
  9663  00157C  CFDE F00A          	movff	postinc2,i2USBTransferOnePacket@handle
  9664  001580  CFDD F00B          	movff	postdec2,i2USBTransferOnePacket@handle+1
  9665                           
  9666                           ;usb_device.c: 1009: }
  9667                           ;usb_device.c: 1013: if(handle == 0)
  9668  001584  500A               	movf	i2USBTransferOnePacket@handle,w,c
  9669  001586  100B               	iorwf	i2USBTransferOnePacket@handle+1,w,c
  9670  001588  A4D8               	btfss	status,2,c
  9671  00158A  D005               	goto	i2l3445
  9672                           
  9673                           ;usb_device.c: 1014: {
  9674                           ;usb_device.c: 1015: return 0;
  9675  00158C  0E00               	movlw	0
  9676  00158E  6E01               	movwf	?i2_USBTransferOnePacket,c
  9677  001590  0E00               	movlw	0
  9678  001592  6E02               	movwf	?i2_USBTransferOnePacket+1,c
  9679  001594  0012               	return	
  9680  001596                     i2l3445:
  9681                           
  9682                           ;usb_device.c: 1016: }
  9683                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
  9684  001596  EE20 F002          	lfsr	2,2
  9685  00159A  500A               	movf	i2USBTransferOnePacket@handle,w,c
  9686  00159C  26D9               	addwf	fsr2l,f,c
  9687  00159E  500B               	movf	i2USBTransferOnePacket@handle+1,w,c
  9688  0015A0  22DA               	addwfc	fsr2h,f,c
  9689  0015A2  C002  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
  9690  0015A6  C003  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
  9691                           
  9692                           ;usb_device.c: 1030: handle->CNT = len;
  9693  0015AA  EE20 F001          	lfsr	2,1
  9694  0015AE  500A               	movf	i2USBTransferOnePacket@handle,w,c
  9695  0015B0  26D9               	addwf	fsr2l,f,c
  9696  0015B2  500B               	movf	i2USBTransferOnePacket@handle+1,w,c
  9697  0015B4  22DA               	addwfc	fsr2h,f,c
  9698  0015B6  C004  FFDF         	movff	i2USBTransferOnePacket@len,indf2
  9699                           
  9700                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  9701  0015BA  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
  9702  0015BE  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
  9703  0015C2  0E40               	movlw	64
  9704  0015C4  16DF               	andwf	indf2,f,c
  9705                           
  9706                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  9707  0015C6  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
  9708  0015CA  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
  9709  0015CE  0E00               	movlw	0
  9710  0015D0  86DB               	bsf	plusw2,3,c
  9711                           
  9712                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  9713  0015D2  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
  9714  0015D6  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
  9715  0015DA  0E00               	movlw	0
  9716  0015DC  8EDB               	bsf	plusw2,7,c
  9717                           
  9718                           ;usb_device.c: 1036: if(dir != 0)
  9719  0015DE  5001               	movf	i2USBTransferOnePacket@dir,w,c
  9720  0015E0  B4D8               	btfsc	status,2,c
  9721  0015E2  D018               	goto	i2l3457
  9722                           
  9723                           ;usb_device.c: 1037: {
  9724                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
  9725  0015E4  5009               	movf	i2USBTransferOnePacket@ep,w,c
  9726  0015E6  0D02               	mullw	2
  9727  0015E8  0E6E               	movlw	low _pBDTEntryIn
  9728  0015EA  24F3               	addwf	prodl,w,c
  9729  0015EC  6ED9               	movwf	fsr2l,c
  9730  0015EE  0E00               	movlw	high _pBDTEntryIn
  9731  0015F0  20F4               	addwfc	prodh,w,c
  9732  0015F2  6EDA               	movwf	fsr2h,c
  9733  0015F4  CFDE F005          	movff	postinc2,??i2_USBTransferOnePacket
  9734  0015F8  CFDD F006          	movff	postdec2,??i2_USBTransferOnePacket+1
  9735  0015FC  0E04               	movlw	4
  9736  0015FE  1805               	xorwf	??i2_USBTransferOnePacket,w,c
  9737  001600  6E07               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
  9738  001602  5006               	movf	??i2_USBTransferOnePacket+1,w,c
  9739  001604  6E08               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
  9740  001606  5009               	movf	i2USBTransferOnePacket@ep,w,c
  9741  001608  0D02               	mullw	2
  9742  00160A  0E6E               	movlw	low _pBDTEntryIn
  9743  00160C  24F3               	addwf	prodl,w,c
  9744  00160E  6ED9               	movwf	fsr2l,c
  9745  001610  0E00               	movlw	high _pBDTEntryIn
  9746  001612  D017               	goto	L16
  9747  001614                     i2l3457:
  9748                           
  9749                           ;usb_device.c: 1041: else
  9750                           ;usb_device.c: 1042: {
  9751                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
  9752  001614  5009               	movf	i2USBTransferOnePacket@ep,w,c
  9753  001616  0D02               	mullw	2
  9754  001618  0E74               	movlw	low _pBDTEntryOut
  9755  00161A  24F3               	addwf	prodl,w,c
  9756  00161C  6ED9               	movwf	fsr2l,c
  9757  00161E  0E00               	movlw	high _pBDTEntryOut
  9758  001620  20F4               	addwfc	prodh,w,c
  9759  001622  6EDA               	movwf	fsr2h,c
  9760  001624  CFDE F005          	movff	postinc2,??i2_USBTransferOnePacket
  9761  001628  CFDD F006          	movff	postdec2,??i2_USBTransferOnePacket+1
  9762  00162C  0E04               	movlw	4
  9763  00162E  1805               	xorwf	??i2_USBTransferOnePacket,w,c
  9764  001630  6E07               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
  9765  001632  5006               	movf	??i2_USBTransferOnePacket+1,w,c
  9766  001634  6E08               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
  9767  001636  5009               	movf	i2USBTransferOnePacket@ep,w,c
  9768  001638  0D02               	mullw	2
  9769  00163A  0E74               	movlw	low _pBDTEntryOut
  9770  00163C  24F3               	addwf	prodl,w,c
  9771  00163E  6ED9               	movwf	fsr2l,c
  9772  001640  0E00               	movlw	high _pBDTEntryOut
  9773  001642                     L16:
  9774  001642  20F4               	addwfc	prodh,w,c
  9775  001644  6EDA               	movwf	fsr2h,c
  9776  001646  C007  FFDE         	movff	??i2_USBTransferOnePacket+2,postinc2
  9777  00164A  C008  FFDD         	movff	??i2_USBTransferOnePacket+3,postdec2
  9778                           
  9779                           ;usb_device.c: 1045: }
  9780                           ;usb_device.c: 1046: return (void*)handle;
  9781  00164E  C00A  F001         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
  9782  001652  C00B  F002         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
  9783  001656  0012               	return	
  9784  001658                     __end_ofi2_USBTransferOnePacket:
  9785                           	opt stack 0
  9786                           pclatu	equ	0xFFB
  9787                           pclath	equ	0xFFA
  9788                           tblptru	equ	0xFF8
  9789                           tblptrh	equ	0xFF7
  9790                           tblptrl	equ	0xFF6
  9791                           tablat	equ	0xFF5
  9792                           prodh	equ	0xFF4
  9793                           prodl	equ	0xFF3
  9794                           intcon	equ	0xFF2
  9795                           postinc0	equ	0xFEE
  9796                           fsr0h	equ	0xFEA
  9797                           fsr0l	equ	0xFE9
  9798                           wreg	equ	0xFE8
  9799                           indf1	equ	0xFE7
  9800                           postdec1	equ	0xFE5
  9801                           fsr1h	equ	0xFE2
  9802                           fsr1l	equ	0xFE1
  9803                           bsr	equ	0xFE0
  9804                           indf2	equ	0xFDF
  9805                           postinc2	equ	0xFDE
  9806                           postdec2	equ	0xFDD
  9807                           plusw2	equ	0xFDB
  9808                           fsr2h	equ	0xFDA
  9809                           fsr2l	equ	0xFD9
  9810                           status	equ	0xFD8
  9811                           
  9812 ;; *************** function _USBEnableEndpoint *****************
  9813 ;; Defined at:
  9814 ;;		line 878 in file "../USBConverter/mla/v2017_03_06/framework/usb/src/usb_device.c"
  9815 ;; Parameters:    Size  Location     Type
  9816 ;;  ep              1    wreg     unsigned char 
  9817 ;;  options         1    8[COMRAM] unsigned char 
  9818 ;; Auto vars:     Size  Location     Type
  9819 ;;  ep              1   11[COMRAM] unsigned char 
  9820 ;;  p               2    9[COMRAM] PTR unsigned char 
  9821 ;;		 -> UEP0(1), 
  9822 ;; Return value:  Size  Location     Type
  9823 ;;                  1    wreg      void 
  9824 ;; Registers used:
  9825 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9826 ;; Tracked objects:
  9827 ;;		On entry : 0/0
  9828 ;;		On exit  : 0/0
  9829 ;;		Unchanged: 0/0
  9830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9831 ;;      Params:         1       0       0       0       0       0       0       0       0
  9832 ;;      Locals:         3       0       0       0       0       0       0       0       0
  9833 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9834 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9835 ;;Total ram usage:        4 bytes
  9836 ;; Hardware stack levels used:    1
  9837 ;; Hardware stack levels required when called:    1
  9838 ;; This function calls:
  9839 ;;		_USBConfigureEndpoint
  9840 ;; This function is called by:
  9841 ;;		_CDCInitEP
  9842 ;; This function uses a non-reentrant model
  9843 ;;
  9844                           
  9845                           	psect	text49
  9846  00291E                     __ptext49:
  9847                           	opt stack 0
  9848  00291E                     _USBEnableEndpoint:
  9849                           	opt stack 18
  9850                           
  9851                           ;incstack = 0
  9852                           ;USBEnableEndpoint@ep stored from wreg
  9853  00291E  6E0C               	movwf	USBEnableEndpoint@ep,c
  9854                           
  9855                           ;usb_device.c: 880: unsigned char* p;
  9856                           ;usb_device.c: 884: if(options & 0x04)
  9857  002920  A409               	btfss	USBEnableEndpoint@options,2,c
  9858  002922  D005               	goto	i2l3425
  9859                           
  9860                           ;usb_device.c: 885: {
  9861                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
  9862  002924  0E00               	movlw	0
  9863  002926  6E01               	movwf	USBConfigureEndpoint@direction,c
  9864  002928  500C               	movf	USBEnableEndpoint@ep,w,c
  9865  00292A  EC60  F011         	call	_USBConfigureEndpoint
  9866  00292E                     i2l3425:
  9867                           
  9868                           ;usb_device.c: 887: }
  9869                           ;usb_device.c: 888: if(options & 0x02)
  9870  00292E  A209               	btfss	USBEnableEndpoint@options,1,c
  9871  002930  D005               	goto	i2l3429
  9872                           
  9873                           ;usb_device.c: 889: {
  9874                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
  9875  002932  0E01               	movlw	1
  9876  002934  6E01               	movwf	USBConfigureEndpoint@direction,c
  9877  002936  500C               	movf	USBEnableEndpoint@ep,w,c
  9878  002938  EC60  F011         	call	_USBConfigureEndpoint
  9879  00293C                     i2l3429:
  9880                           
  9881                           ;usb_device.c: 891: }
  9882                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
  9883  00293C  500C               	movf	USBEnableEndpoint@ep,w,c
  9884  00293E  0D01               	mullw	1
  9885  002940  0E70               	movlw	112
  9886  002942  24F3               	addwf	prodl,w,c
  9887  002944  6E0A               	movwf	USBEnableEndpoint@p,c
  9888  002946  0E0F               	movlw	15
  9889  002948  20F4               	addwfc	prodh,w,c
  9890  00294A  6E0B               	movwf	USBEnableEndpoint@p+1,c
  9891                           
  9892                           ;usb_device.c: 901: *p = options;
  9893  00294C  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
  9894  002950  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
  9895  002954  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
  9896  002958  0012               	return		;funcret
  9897  00295A                     __end_of_USBEnableEndpoint:
  9898                           	opt stack 0
  9899                           pclatu	equ	0xFFB
  9900                           pclath	equ	0xFFA
  9901                           tblptru	equ	0xFF8
  9902                           tblptrh	equ	0xFF7
  9903                           tblptrl	equ	0xFF6
  9904                           tablat	equ	0xFF5
  9905                           prodh	equ	0xFF4
  9906                           prodl	equ	0xFF3
  9907                           intcon	equ	0xFF2
  9908                           postinc0	equ	0xFEE
  9909                           fsr0h	equ	0xFEA
  9910                           fsr0l	equ	0xFE9
  9911                           wreg	equ	0xFE8
  9912                           indf1	equ	0xFE7
  9913                           postdec1	equ	0xFE5
  9914                           fsr1h	equ	0xFE2
  9915                           fsr1l	equ	0xFE1
  9916                           bsr	equ	0xFE0
  9917                           indf2	equ	0xFDF
  9918                           postinc2	equ	0xFDE
  9919                           postdec2	equ	0xFDD
  9920                           plusw2	equ	0xFDB
  9921                           fsr2h	equ	0xFDA
  9922                           fsr2l	equ	0xFD9
  9923                           status	equ	0xFD8
  9924                           
  9925 ;; *************** function _USBConfigureEndpoint *****************
  9926 ;; Defined at:
  9927 ;;		line 1543 in file "../USBConverter/mla/v2017_03_06/framework/usb/src/usb_device.c"
  9928 ;; Parameters:    Size  Location     Type
  9929 ;;  EPNum           1    wreg     unsigned char 
  9930 ;;  direction       1    0[COMRAM] unsigned char 
  9931 ;; Auto vars:     Size  Location     Type
  9932 ;;  EPNum           1    5[COMRAM] unsigned char 
  9933 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
  9934 ;;		 -> BDT(48), 
  9935 ;; Return value:  Size  Location     Type
  9936 ;;                  1    wreg      void 
  9937 ;; Registers used:
  9938 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9939 ;; Tracked objects:
  9940 ;;		On entry : 0/0
  9941 ;;		On exit  : 0/0
  9942 ;;		Unchanged: 0/0
  9943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9944 ;;      Params:         1       0       0       0       0       0       0       0       0
  9945 ;;      Locals:         3       0       0       0       0       0       0       0       0
  9946 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9947 ;;      Totals:         8       0       0       0       0       0       0       0       0
  9948 ;;Total ram usage:        8 bytes
  9949 ;; Hardware stack levels used:    1
  9950 ;; This function calls:
  9951 ;;		Nothing
  9952 ;; This function is called by:
  9953 ;;		_USBEnableEndpoint
  9954 ;; This function uses a non-reentrant model
  9955 ;;
  9956                           
  9957                           	psect	text50
  9958  0022C0                     __ptext50:
  9959                           	opt stack 0
  9960  0022C0                     _USBConfigureEndpoint:
  9961                           	opt stack 18
  9962                           
  9963                           ;incstack = 0
  9964                           ;USBConfigureEndpoint@EPNum stored from wreg
  9965  0022C0  6E06               	movwf	USBConfigureEndpoint@EPNum,c
  9966                           
  9967                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
  9968                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
  9969  0022C2  0E00               	movlw	0
  9970  0022C4  6E07               	movwf	USBConfigureEndpoint@handle,c
  9971  0022C6  0E04               	movlw	4
  9972  0022C8  6E08               	movwf	USBConfigureEndpoint@handle+1,c
  9973                           
  9974                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
  9975  0022CA  5001               	movf	USBConfigureEndpoint@direction,w,c
  9976  0022CC  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
  9977  0022CE  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
  9978  0022D0  90D8               	bcf	status,0,c
  9979  0022D2  3602               	rlcf	??_USBConfigureEndpoint,f,c
  9980  0022D4  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
  9981  0022D6  5006               	movf	USBConfigureEndpoint@EPNum,w,c
  9982  0022D8  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
  9983  0022DA  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
  9984  0022DC  90D8               	bcf	status,0,c
  9985  0022DE  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
  9986  0022E0  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
  9987  0022E2  90D8               	bcf	status,0,c
  9988  0022E4  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
  9989  0022E6  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
  9990  0022E8  5002               	movf	??_USBConfigureEndpoint,w,c
  9991  0022EA  2604               	addwf	??_USBConfigureEndpoint+2,f,c
  9992  0022EC  5003               	movf	??_USBConfigureEndpoint+1,w,c
  9993  0022EE  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
  9994  0022F0  90D8               	bcf	status,0,c
  9995  0022F2  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
  9996  0022F4  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
  9997  0022F6  90D8               	bcf	status,0,c
  9998  0022F8  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
  9999  0022FA  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 10000  0022FC  5004               	movf	??_USBConfigureEndpoint+2,w,c
 10001  0022FE  2607               	addwf	USBConfigureEndpoint@handle,f,c
 10002  002300  5005               	movf	??_USBConfigureEndpoint+3,w,c
 10003  002302  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 10004                           
 10005                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
 10006  002304  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 10007  002308  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 10008  00230C  9EDF               	bcf	indf2,7,c
 10009                           
 10010                           ;usb_device.c: 1557: if(direction == 0)
 10011  00230E  5001               	movf	USBConfigureEndpoint@direction,w,c
 10012  002310  A4D8               	btfss	status,2,c
 10013  002312  D007               	goto	i2l3415
 10014                           
 10015                           ;usb_device.c: 1558: {
 10016                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
 10017  002314  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 10018  002316  0D02               	mullw	2
 10019  002318  0E74               	movlw	low _pBDTEntryOut
 10020  00231A  24F3               	addwf	prodl,w,c
 10021  00231C  6ED9               	movwf	fsr2l,c
 10022  00231E  0E00               	movlw	high _pBDTEntryOut
 10023  002320  D006               	goto	L17
 10024  002322                     i2l3415:
 10025                           
 10026                           ;usb_device.c: 1561: else
 10027                           ;usb_device.c: 1562: {
 10028                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
 10029  002322  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 10030  002324  0D02               	mullw	2
 10031  002326  0E6E               	movlw	low _pBDTEntryIn
 10032  002328  24F3               	addwf	prodl,w,c
 10033  00232A  6ED9               	movwf	fsr2l,c
 10034  00232C  0E00               	movlw	high _pBDTEntryIn
 10035  00232E                     L17:
 10036  00232E  20F4               	addwfc	prodh,w,c
 10037  002330  6EDA               	movwf	fsr2h,c
 10038  002332  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 10039  002336  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 10040                           
 10041                           ;usb_device.c: 1564: }
 10042                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
 10043  00233A  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 10044  00233E  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 10045  002342  9CDF               	bcf	indf2,6,c
 10046                           
 10047                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
 10048  002344  EE20 F004          	lfsr	2,4
 10049  002348  5007               	movf	USBConfigureEndpoint@handle,w,c
 10050  00234A  26D9               	addwf	fsr2l,f,c
 10051  00234C  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 10052  00234E  22DA               	addwfc	fsr2h,f,c
 10053  002350  8CDF               	bsf	indf2,6,c
 10054  002352  0012               	return		;funcret
 10055  002354                     __end_of_USBConfigureEndpoint:
 10056                           	opt stack 0
 10057                           pclatu	equ	0xFFB
 10058                           pclath	equ	0xFFA
 10059                           tblptru	equ	0xFF8
 10060                           tblptrh	equ	0xFF7
 10061                           tblptrl	equ	0xFF6
 10062                           tablat	equ	0xFF5
 10063                           prodh	equ	0xFF4
 10064                           prodl	equ	0xFF3
 10065                           intcon	equ	0xFF2
 10066                           postinc0	equ	0xFEE
 10067                           fsr0h	equ	0xFEA
 10068                           fsr0l	equ	0xFE9
 10069                           wreg	equ	0xFE8
 10070                           indf1	equ	0xFE7
 10071                           postdec1	equ	0xFE5
 10072                           fsr1h	equ	0xFE2
 10073                           fsr1l	equ	0xFE1
 10074                           bsr	equ	0xFE0
 10075                           indf2	equ	0xFDF
 10076                           postinc2	equ	0xFDE
 10077                           postdec2	equ	0xFDD
 10078                           plusw2	equ	0xFDB
 10079                           fsr2h	equ	0xFDA
 10080                           fsr2l	equ	0xFD9
 10081                           status	equ	0xFD8
 10082                           
 10083 ;; *************** function _USBCtrlTrfOutHandler *****************
 10084 ;; Defined at:
 10085 ;;		line 2538 in file "../USBConverter/mla/v2017_03_06/framework/usb/src/usb_device.c"
 10086 ;; Parameters:    Size  Location     Type
 10087 ;;		None
 10088 ;; Auto vars:     Size  Location     Type
 10089 ;;		None
 10090 ;; Return value:  Size  Location     Type
 10091 ;;                  1    wreg      void 
 10092 ;; Registers used:
 10093 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 10094 ;; Tracked objects:
 10095 ;;		On entry : 0/0
 10096 ;;		On exit  : 0/0
 10097 ;;		Unchanged: 0/0
 10098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10099 ;;      Params:         0       0       0       0       0       0       0       0       0
 10100 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10101 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10102 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10103 ;;Total ram usage:        0 bytes
 10104 ;; Hardware stack levels used:    1
 10105 ;; Hardware stack levels required when called:    3
 10106 ;; This function calls:
 10107 ;;		_USBCtrlTrfRxService
 10108 ;; This function is called by:
 10109 ;;		_USBCtrlEPService
 10110 ;; This function uses a non-reentrant model
 10111 ;;
 10112                           
 10113                           	psect	text51
 10114  0027E2                     __ptext51:
 10115                           	opt stack 0
 10116  0027E2                     _USBCtrlTrfOutHandler:
 10117                           	opt stack 18
 10118                           
 10119                           ;usb_device.c: 2540: if(controlTransferState == 2)
 10120                           
 10121                           ;incstack = 0
 10122  0027E2  0E02               	movlw	2
 10123  0027E4  1847               	xorwf	_controlTransferState,w,c	;volatile
 10124  0027E6  A4D8               	btfss	status,2,c
 10125  0027E8  D003               	goto	i2l4259
 10126                           
 10127                           ;usb_device.c: 2541: {
 10128                           ;usb_device.c: 2542: USBCtrlTrfRxService();
 10129  0027EA  EC11  F007         	call	_USBCtrlTrfRxService	;wreg free
 10130                           
 10131                           ;usb_device.c: 2543: }
 10132  0027EE  0012               	return	
 10133  0027F0                     i2l4259:
 10134                           
 10135                           ;usb_device.c: 2544: else
 10136                           ;usb_device.c: 2545: {
 10137                           ;usb_device.c: 2548: controlTransferState = 0;
 10138  0027F0  0E00               	movlw	0
 10139  0027F2  6E47               	movwf	_controlTransferState,c	;volatile
 10140                           
 10141                           ;usb_device.c: 2555: if(BothEP0OutUOWNsSet == 0)
 10142  0027F4  5044               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 10143  0027F6  A4D8               	btfss	status,2,c
 10144  0027F8  D01F               	goto	i2l4267
 10145                           
 10146                           ;usb_device.c: 2556: {
 10147                           ;usb_device.c: 2557: pBDTEntryEP0OutNext->CNT = 8;
 10148  0027FA  EE20 F001          	lfsr	2,1
 10149  0027FE  5035               	movf	_pBDTEntryEP0OutNext,w,c
 10150  002800  26D9               	addwf	fsr2l,f,c
 10151  002802  5036               	movf	_pBDTEntryEP0OutNext+1,w,c
 10152  002804  22DA               	addwfc	fsr2h,f,c
 10153  002806  0E08               	movlw	8
 10154  002808  6EDF               	movwf	indf2,c
 10155                           
 10156                           ;usb_device.c: 2558: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 10157  00280A  EE20 F002          	lfsr	2,2
 10158  00280E  5035               	movf	_pBDTEntryEP0OutNext,w,c
 10159  002810  26D9               	addwf	fsr2l,f,c
 10160  002812  5036               	movf	_pBDTEntryEP0OutNext+1,w,c
 10161  002814  22DA               	addwfc	fsr2h,f,c
 10162  002816  0E30               	movlw	48
 10163  002818  6EDE               	movwf	postinc2,c
 10164  00281A  0E04               	movlw	4
 10165  00281C  6EDD               	movwf	postdec2,c
 10166                           
 10167                           ;usb_device.c: 2559: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 10168  00281E  C035  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 10169  002822  C036  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 10170  002826  0E0C               	movlw	12
 10171  002828  6EDF               	movwf	indf2,c
 10172                           
 10173                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 10174  00282A  C035  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 10175  00282E  C036  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 10176  002832  0E00               	movlw	0
 10177  002834  8EDB               	bsf	plusw2,7,c
 10178                           
 10179                           ;usb_device.c: 2561: }
 10180  002836  0012               	return	
 10181  002838                     i2l4267:
 10182                           
 10183                           ;usb_device.c: 2562: else
 10184                           ;usb_device.c: 2563: {
 10185                           ;usb_device.c: 2564: BothEP0OutUOWNsSet = 0;
 10186  002838  0E00               	movlw	0
 10187  00283A  6E44               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 10188  00283C  0012               	return	
 10189  00283E                     __end_of_USBCtrlTrfOutHandler:
 10190                           	opt stack 0
 10191                           pclatu	equ	0xFFB
 10192                           pclath	equ	0xFFA
 10193                           tblptru	equ	0xFF8
 10194                           tblptrh	equ	0xFF7
 10195                           tblptrl	equ	0xFF6
 10196                           tablat	equ	0xFF5
 10197                           prodh	equ	0xFF4
 10198                           prodl	equ	0xFF3
 10199                           intcon	equ	0xFF2
 10200                           postinc0	equ	0xFEE
 10201                           fsr0h	equ	0xFEA
 10202                           fsr0l	equ	0xFE9
 10203                           wreg	equ	0xFE8
 10204                           indf1	equ	0xFE7
 10205                           postdec1	equ	0xFE5
 10206                           fsr1h	equ	0xFE2
 10207                           fsr1l	equ	0xFE1
 10208                           bsr	equ	0xFE0
 10209                           indf2	equ	0xFDF
 10210                           postinc2	equ	0xFDE
 10211                           postdec2	equ	0xFDD
 10212                           plusw2	equ	0xFDB
 10213                           fsr2h	equ	0xFDA
 10214                           fsr2l	equ	0xFD9
 10215                           status	equ	0xFD8
 10216                           
 10217 ;; *************** function _USBCtrlTrfRxService *****************
 10218 ;; Defined at:
 10219 ;;		line 1852 in file "../USBConverter/mla/v2017_03_06/framework/usb/src/usb_device.c"
 10220 ;; Parameters:    Size  Location     Type
 10221 ;;		None
 10222 ;; Auto vars:     Size  Location     Type
 10223 ;;  byteToRead      1   18[COMRAM] unsigned char 
 10224 ;;  i               1   17[COMRAM] unsigned char 
 10225 ;; Return value:  Size  Location     Type
 10226 ;;                  1    wreg      void 
 10227 ;; Registers used:
 10228 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 10229 ;; Tracked objects:
 10230 ;;		On entry : 0/0
 10231 ;;		On exit  : 0/0
 10232 ;;		Unchanged: 0/0
 10233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10234 ;;      Params:         0       0       0       0       0       0       0       0       0
 10235 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10236 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10237 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10238 ;;Total ram usage:        2 bytes
 10239 ;; Hardware stack levels used:    1
 10240 ;; Hardware stack levels required when called:    2
 10241 ;; This function calls:
 10242 ;;		_USART_mySetLineCodingHandler
 10243 ;;		_USBCtrlEPAllowStatusStage
 10244 ;; This function is called by:
 10245 ;;		_USBCtrlTrfOutHandler
 10246 ;; This function uses a non-reentrant model
 10247 ;;
 10248                           
 10249                           	psect	text52
 10250  000E22                     __ptext52:
 10251                           	opt stack 0
 10252  000E22                     _USBCtrlTrfRxService:
 10253                           	opt stack 18
 10254                           
 10255                           ;usb_device.c: 1854: uint8_t byteToRead;
 10256                           ;usb_device.c: 1855: uint8_t i;
 10257                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 10258                           
 10259                           ;incstack = 0
 10260  000E22  EE20 F001          	lfsr	2,1
 10261  000E26  5037               	movf	_pBDTEntryEP0OutCurrent,w,c
 10262  000E28  26D9               	addwf	fsr2l,f,c
 10263  000E2A  5038               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 10264  000E2C  22DA               	addwfc	fsr2h,f,c
 10265  000E2E  50DF               	movf	indf2,w,c
 10266  000E30  6E13               	movwf	USBCtrlTrfRxService@byteToRead,c
 10267                           
 10268                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
 10269  000E32  5013               	movf	USBCtrlTrfRxService@byteToRead,w,c
 10270  000E34  0100               	movlb	0	; () banked
 10271  000E36  5D64               	subwf	(_outPipes+4)& (0+255),w,b	;volatile
 10272  000E38  0E00               	movlw	0
 10273  000E3A  5965               	subwfb	(_outPipes+5)& (0+255),w,b	;volatile
 10274  000E3C  A0D8               	btfss	status,0,c
 10275                           
 10276                           ; BSR set to: 0
 10277                           ;usb_device.c: 1866: {
 10278                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
 10279  000E3E  C064  F013         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 10280                           
 10281                           ; BSR set to: 0
 10282                           ;usb_device.c: 1868: }
 10283                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
 10284                           
 10285                           ; BSR set to: 0
 10286  000E42  5013               	movf	USBCtrlTrfRxService@byteToRead,w,c
 10287  000E44  0100               	movlb	0	; () banked
 10288  000E46  5F64               	subwf	(_outPipes+4)& (0+255),f,b	;volatile
 10289  000E48  0E00               	movlw	0
 10290  000E4A  5B65               	subwfb	(_outPipes+5)& (0+255),f,b	;volatile
 10291                           
 10292                           ; BSR set to: 0
 10293                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
 10294  000E4C  0E00               	movlw	0
 10295  000E4E  6E12               	movwf	USBCtrlTrfRxService@i,c
 10296  000E50  D012               	goto	i2l4095
 10297  000E52                     i2l4089:
 10298                           
 10299                           ; BSR set to: 0
 10300                           ;usb_device.c: 1875: {
 10301                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 10302  000E52  5012               	movf	USBCtrlTrfRxService@i,w,c
 10303  000E54  0D01               	mullw	1
 10304  000E56  0E38               	movlw	56
 10305  000E58  24F3               	addwf	prodl,w,c
 10306  000E5A  6ED9               	movwf	fsr2l,c
 10307  000E5C  0E04               	movlw	4
 10308  000E5E  20F4               	addwfc	prodh,w,c
 10309  000E60  6EDA               	movwf	fsr2h,c
 10310  000E62  C060  FFE1         	movff	_outPipes,fsr1l	;volatile
 10311  000E66  C061  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 10312  000E6A  CFDF FFE7          	movff	indf2,indf1
 10313                           
 10314                           ; BSR set to: 0
 10315  000E6E  0100               	movlb	0	; () banked
 10316  000E70  4B60               	infsnz	_outPipes& (0+255),f,b	;volatile
 10317  000E72  2B61               	incf	(_outPipes+1)& (0+255),f,b	;volatile
 10318                           
 10319                           ; BSR set to: 0
 10320  000E74  2A12               	incf	USBCtrlTrfRxService@i,f,c
 10321  000E76                     i2l4095:
 10322                           
 10323                           ; BSR set to: 0
 10324  000E76  5013               	movf	USBCtrlTrfRxService@byteToRead,w,c
 10325  000E78  5C12               	subwf	USBCtrlTrfRxService@i,w,c
 10326  000E7A  A0D8               	btfss	status,0,c
 10327  000E7C  D7EA               	goto	i2l4089
 10328                           
 10329                           ; BSR set to: 0
 10330                           ;usb_device.c: 1877: }
 10331                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
 10332                           
 10333                           ; BSR set to: 0
 10334  000E7E  0100               	movlb	0	; () banked
 10335  000E80  5164               	movf	(_outPipes+4)& (0+255),w,b	;volatile
 10336  000E82  0100               	movlb	0	; () banked
 10337  000E84  1165               	iorwf	(_outPipes+5)& (0+255),w,b	;volatile
 10338  000E86  B4D8               	btfsc	status,2,c
 10339  000E88  D032               	goto	i2l4111
 10340                           
 10341                           ; BSR set to: 0
 10342                           ;usb_device.c: 1882: {
 10343                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
 10344  000E8A  EE20 F001          	lfsr	2,1
 10345  000E8E  5035               	movf	_pBDTEntryEP0OutNext,w,c
 10346  000E90  26D9               	addwf	fsr2l,f,c
 10347  000E92  5036               	movf	_pBDTEntryEP0OutNext+1,w,c
 10348  000E94  22DA               	addwfc	fsr2h,f,c
 10349  000E96  0E08               	movlw	8
 10350  000E98  6EDF               	movwf	indf2,c
 10351                           
 10352                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 10353  000E9A  EE20 F002          	lfsr	2,2
 10354  000E9E  5035               	movf	_pBDTEntryEP0OutNext,w,c
 10355  000EA0  26D9               	addwf	fsr2l,f,c
 10356  000EA2  5036               	movf	_pBDTEntryEP0OutNext+1,w,c
 10357  000EA4  22DA               	addwfc	fsr2h,f,c
 10358  000EA6  0E38               	movlw	56
 10359  000EA8  6EDE               	movwf	postinc2,c
 10360  000EAA  0E04               	movlw	4
 10361  000EAC  6EDD               	movwf	postdec2,c
 10362                           
 10363                           ; BSR set to: 0
 10364                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 10365  000EAE  C037  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 10366  000EB2  C038  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 10367  000EB6  BCDF               	btfsc	indf2,6,c
 10368  000EB8  D00D               	goto	i2l4107
 10369                           
 10370                           ; BSR set to: 0
 10371                           ;usb_device.c: 1886: {
 10372                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 10373  000EBA  C035  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 10374  000EBE  C036  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 10375  000EC2  0E48               	movlw	72
 10376  000EC4  6EDF               	movwf	indf2,c
 10377                           
 10378                           ; BSR set to: 0
 10379                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 10380  000EC6  C035  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 10381  000ECA  C036  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 10382  000ECE  0E00               	movlw	0
 10383  000ED0  8EDB               	bsf	plusw2,7,c
 10384                           
 10385                           ;usb_device.c: 1889: }
 10386  000ED2  0012               	return	
 10387  000ED4                     i2l4107:
 10388                           
 10389                           ; BSR set to: 0
 10390                           ;usb_device.c: 1890: else
 10391                           ;usb_device.c: 1891: {
 10392                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 10393  000ED4  C035  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 10394  000ED8  C036  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 10395  000EDC  0E08               	movlw	8
 10396  000EDE  6EDF               	movwf	indf2,c
 10397                           
 10398                           ; BSR set to: 0
 10399                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 10400  000EE0  C035  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 10401  000EE4  C036  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 10402  000EE8  0E00               	movlw	0
 10403  000EEA  8EDB               	bsf	plusw2,7,c
 10404                           
 10405                           ; BSR set to: 0
 10406                           ;usb_device.c: 1894: }
 10407                           ;usb_device.c: 1895: }
 10408  000EEC  0012               	return	
 10409  000EEE                     i2l4111:
 10410                           
 10411                           ; BSR set to: 0
 10412                           ;usb_device.c: 1896: else
 10413                           ;usb_device.c: 1897: {
 10414                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 10415  000EEE  EE20 F001          	lfsr	2,1
 10416  000EF2  5035               	movf	_pBDTEntryEP0OutNext,w,c
 10417  000EF4  26D9               	addwf	fsr2l,f,c
 10418  000EF6  5036               	movf	_pBDTEntryEP0OutNext+1,w,c
 10419  000EF8  22DA               	addwfc	fsr2h,f,c
 10420  000EFA  0E08               	movlw	8
 10421  000EFC  6EDF               	movwf	indf2,c
 10422                           
 10423                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 10424  000EFE  EE20 F002          	lfsr	2,2
 10425  000F02  5035               	movf	_pBDTEntryEP0OutNext,w,c
 10426  000F04  26D9               	addwf	fsr2l,f,c
 10427  000F06  5036               	movf	_pBDTEntryEP0OutNext+1,w,c
 10428  000F08  22DA               	addwfc	fsr2h,f,c
 10429  000F0A  0E30               	movlw	48
 10430  000F0C  6EDE               	movwf	postinc2,c
 10431  000F0E  0E04               	movlw	4
 10432  000F10  6EDD               	movwf	postdec2,c
 10433                           
 10434                           ; BSR set to: 0
 10435                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 10436  000F12  C035  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 10437  000F16  C036  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 10438  000F1A  0E04               	movlw	4
 10439  000F1C  6EDF               	movwf	indf2,c
 10440                           
 10441                           ; BSR set to: 0
 10442                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 10443  000F1E  C035  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 10444  000F22  C036  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 10445  000F26  0E00               	movlw	0
 10446  000F28  8EDB               	bsf	plusw2,7,c
 10447                           
 10448                           ; BSR set to: 0
 10449                           ;usb_device.c: 1914: if(outPipes[0].pFunc != (0))
 10450  000F2A  0100               	movlb	0	; () banked
 10451  000F2C  5166               	movf	(_outPipes+6)& (0+255),w,b	;volatile
 10452  000F2E  0100               	movlb	0	; () banked
 10453  000F30  1167               	iorwf	(_outPipes+7)& (0+255),w,b	;volatile
 10454  000F32  B4D8               	btfsc	status,2,c
 10455  000F34  D00E               	goto	i2l4121
 10456                           
 10457                           ; BSR set to: 0
 10458                           ;usb_device.c: 1915: {
 10459                           ;usb_device.c: 1921: outPipes[0].pFunc();
 10460  000F36  EE20  F066         	lfsr	2,_outPipes+6	;volatile
 10461  000F3A  D801               	call	i2u326_48
 10462  000F3C  D00A               	goto	i2l4121
 10463  000F3E                     i2u326_48:
 10464  000F3E  0005               	push	
 10465  000F40  6EFA               	movwf	pclath,c
 10466  000F42  50DE               	movf	postinc2,w,c
 10467  000F44  6EFD               	movwf	tosl,c
 10468  000F46  50DE               	movf	postinc2,w,c
 10469  000F48  6EFE               	movwf	tosh,c
 10470  000F4A  50F8               	movf	tblptru,w,c
 10471  000F4C  6EFF               	movwf	tosu,c
 10472  000F4E  50FA               	movf	pclath,w,c
 10473  000F50  0012               	return		;indir
 10474  000F52                     i2l4121:
 10475                           
 10476                           ;usb_device.c: 1926: }
 10477                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
 10478  000F52  0100               	movlb	0	; () banked
 10479  000F54  9F63               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 10480                           
 10481                           ; BSR set to: 0
 10482                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
 10483  000F56  5042               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 10484  000F58  A4D8               	btfss	status,2,c
 10485  000F5A  0012               	return	
 10486                           
 10487                           ; BSR set to: 0
 10488                           ;usb_device.c: 1942: {
 10489                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
 10490  000F5C  ECB5  F00E         	call	_USBCtrlEPAllowStatusStage	;wreg free
 10491  000F60  0012               	return	
 10492  000F62                     __end_of_USBCtrlTrfRxService:
 10493                           	opt stack 0
 10494                           tosu	equ	0xFFF
 10495                           tosh	equ	0xFFE
 10496                           tosl	equ	0xFFD
 10497                           pclatu	equ	0xFFB
 10498                           pclath	equ	0xFFA
 10499                           tblptru	equ	0xFF8
 10500                           tblptrh	equ	0xFF7
 10501                           tblptrl	equ	0xFF6
 10502                           tablat	equ	0xFF5
 10503                           prodh	equ	0xFF4
 10504                           prodl	equ	0xFF3
 10505                           intcon	equ	0xFF2
 10506                           postinc0	equ	0xFEE
 10507                           fsr0h	equ	0xFEA
 10508                           fsr0l	equ	0xFE9
 10509                           wreg	equ	0xFE8
 10510                           indf1	equ	0xFE7
 10511                           postdec1	equ	0xFE5
 10512                           fsr1h	equ	0xFE2
 10513                           fsr1l	equ	0xFE1
 10514                           bsr	equ	0xFE0
 10515                           indf2	equ	0xFDF
 10516                           postinc2	equ	0xFDE
 10517                           postdec2	equ	0xFDD
 10518                           plusw2	equ	0xFDB
 10519                           fsr2h	equ	0xFDA
 10520                           fsr2l	equ	0xFD9
 10521                           status	equ	0xFD8
 10522                           
 10523 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 10524 ;; Defined at:
 10525 ;;		line 1416 in file "../USBConverter/mla/v2017_03_06/framework/usb/src/usb_device.c"
 10526 ;; Parameters:    Size  Location     Type
 10527 ;;		None
 10528 ;; Auto vars:     Size  Location     Type
 10529 ;;		None
 10530 ;; Return value:  Size  Location     Type
 10531 ;;                  1    wreg      void 
 10532 ;; Registers used:
 10533 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10534 ;; Tracked objects:
 10535 ;;		On entry : 0/0
 10536 ;;		On exit  : 0/0
 10537 ;;		Unchanged: 0/0
 10538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10539 ;;      Params:         0       0       0       0       0       0       0       0       0
 10540 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10541 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10542 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10543 ;;Total ram usage:        0 bytes
 10544 ;; Hardware stack levels used:    1
 10545 ;; This function calls:
 10546 ;;		Nothing
 10547 ;; This function is called by:
 10548 ;;		_USBDeviceTasks
 10549 ;;		_USBCtrlEPServiceComplete
 10550 ;;		_USBCtrlTrfRxService
 10551 ;; This function uses a non-reentrant model
 10552 ;;
 10553                           
 10554                           	psect	text53
 10555  001D6A                     __ptext53:
 10556                           	opt stack 0
 10557  001D6A                     _USBCtrlEPAllowStatusStage:
 10558                           	opt stack 19
 10559                           
 10560                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 10561                           
 10562                           ;incstack = 0
 10563  001D6A  5041               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 10564  001D6C  A4D8               	btfss	status,2,c
 10565  001D6E  0012               	return	
 10566                           
 10567                           ;usb_device.c: 1424: {
 10568                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 10569  001D70  0E01               	movlw	1
 10570  001D72  6E41               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 10571                           
 10572                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 10573  001D74  5040               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 10574  001D76  A4D8               	btfss	status,2,c
 10575  001D78  0012               	return	
 10576                           
 10577                           ;usb_device.c: 1427: {
 10578                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 10579  001D7A  0E01               	movlw	1
 10580  001D7C  6E40               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 10581                           
 10582                           ;usb_device.c: 1432: if(controlTransferState == 2)
 10583  001D7E  0E02               	movlw	2
 10584  001D80  1847               	xorwf	_controlTransferState,w,c	;volatile
 10585  001D82  A4D8               	btfss	status,2,c
 10586  001D84  D016               	goto	i2l3661
 10587                           
 10588                           ;usb_device.c: 1433: {
 10589                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 10590  001D86  0100               	movlb	0	; () banked
 10591  001D88  EE20 F001          	lfsr	2,1
 10592  001D8C  516E               	movf	_pBDTEntryIn& (0+255),w,b
 10593  001D8E  26D9               	addwf	fsr2l,f,c
 10594  001D90  516F               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 10595  001D92  22DA               	addwfc	fsr2h,f,c
 10596  001D94  0E00               	movlw	0
 10597  001D96  6EDF               	movwf	indf2,c
 10598                           
 10599                           ; BSR set to: 0
 10600                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 10601  001D98  C06E  FFD9         	movff	_pBDTEntryIn,fsr2l
 10602  001D9C  C06F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 10603  001DA0  0E48               	movlw	72
 10604  001DA2  6EDF               	movwf	indf2,c
 10605                           
 10606                           ; BSR set to: 0
 10607                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 10608  001DA4  C06E  FFD9         	movff	_pBDTEntryIn,fsr2l
 10609  001DA8  C06F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 10610  001DAC  0E00               	movlw	0
 10611  001DAE  8EDB               	bsf	plusw2,7,c
 10612                           
 10613                           ;usb_device.c: 1437: }
 10614  001DB0  0012               	return	
 10615  001DB2                     i2l3661:
 10616                           
 10617                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 10618  001DB2  0447               	decf	_controlTransferState,w,c	;volatile
 10619  001DB4  A4D8               	btfss	status,2,c
 10620  001DB6  0012               	return	
 10621                           
 10622                           ;usb_device.c: 1439: {
 10623                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 10624  001DB8  0E00               	movlw	0
 10625  001DBA  6E44               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 10626                           
 10627                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
 10628  001DBC  EE20 F001          	lfsr	2,1
 10629  001DC0  5037               	movf	_pBDTEntryEP0OutCurrent,w,c
 10630  001DC2  26D9               	addwf	fsr2l,f,c
 10631  001DC4  5038               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 10632  001DC6  22DA               	addwfc	fsr2h,f,c
 10633  001DC8  0E08               	movlw	8
 10634  001DCA  6EDF               	movwf	indf2,c
 10635                           
 10636                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 10637  001DCC  EE20 F002          	lfsr	2,2
 10638  001DD0  5037               	movf	_pBDTEntryEP0OutCurrent,w,c
 10639  001DD2  26D9               	addwf	fsr2l,f,c
 10640  001DD4  5038               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 10641  001DD6  22DA               	addwfc	fsr2h,f,c
 10642  001DD8  0E30               	movlw	48
 10643  001DDA  6EDE               	movwf	postinc2,c
 10644  001DDC  0E04               	movlw	4
 10645  001DDE  6EDD               	movwf	postdec2,c
 10646                           
 10647                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 10648  001DE0  C037  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 10649  001DE4  C038  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 10650  001DE8  0E04               	movlw	4
 10651  001DEA  6EDF               	movwf	indf2,c
 10652                           
 10653                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 10654  001DEC  C037  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 10655  001DF0  C038  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 10656  001DF4  0E00               	movlw	0
 10657  001DF6  8EDB               	bsf	plusw2,7,c
 10658                           
 10659                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 10660  001DF8  0E01               	movlw	1
 10661  001DFA  6E44               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 10662                           
 10663                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
 10664  001DFC  EE20 F001          	lfsr	2,1
 10665  001E00  5035               	movf	_pBDTEntryEP0OutNext,w,c
 10666  001E02  26D9               	addwf	fsr2l,f,c
 10667  001E04  5036               	movf	_pBDTEntryEP0OutNext+1,w,c
 10668  001E06  22DA               	addwfc	fsr2h,f,c
 10669  001E08  0E08               	movlw	8
 10670  001E0A  6EDF               	movwf	indf2,c
 10671                           
 10672                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 10673  001E0C  EE20 F002          	lfsr	2,2
 10674  001E10  5035               	movf	_pBDTEntryEP0OutNext,w,c
 10675  001E12  26D9               	addwf	fsr2l,f,c
 10676  001E14  5036               	movf	_pBDTEntryEP0OutNext+1,w,c
 10677  001E16  22DA               	addwfc	fsr2h,f,c
 10678  001E18  0E30               	movlw	48
 10679  001E1A  6EDE               	movwf	postinc2,c
 10680  001E1C  0E04               	movlw	4
 10681  001E1E  6EDD               	movwf	postdec2,c
 10682                           
 10683                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 10684  001E20  C035  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 10685  001E24  C036  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 10686  001E28  0E80               	movlw	128
 10687  001E2A  6EDF               	movwf	indf2,c
 10688  001E2C  0012               	return	
 10689  001E2E                     __end_of_USBCtrlEPAllowStatusStage:
 10690                           	opt stack 0
 10691                           tosu	equ	0xFFF
 10692                           tosh	equ	0xFFE
 10693                           tosl	equ	0xFFD
 10694                           pclatu	equ	0xFFB
 10695                           pclath	equ	0xFFA
 10696                           tblptru	equ	0xFF8
 10697                           tblptrh	equ	0xFF7
 10698                           tblptrl	equ	0xFF6
 10699                           tablat	equ	0xFF5
 10700                           prodh	equ	0xFF4
 10701                           prodl	equ	0xFF3
 10702                           intcon	equ	0xFF2
 10703                           postinc0	equ	0xFEE
 10704                           fsr0h	equ	0xFEA
 10705                           fsr0l	equ	0xFE9
 10706                           wreg	equ	0xFE8
 10707                           indf1	equ	0xFE7
 10708                           postdec1	equ	0xFE5
 10709                           fsr1h	equ	0xFE2
 10710                           fsr1l	equ	0xFE1
 10711                           bsr	equ	0xFE0
 10712                           indf2	equ	0xFDF
 10713                           postinc2	equ	0xFDE
 10714                           postdec2	equ	0xFDD
 10715                           plusw2	equ	0xFDB
 10716                           fsr2h	equ	0xFDA
 10717                           fsr2l	equ	0xFD9
 10718                           status	equ	0xFD8
 10719                           
 10720 ;; *************** function _USBCtrlTrfInHandler *****************
 10721 ;; Defined at:
 10722 ;;		line 2592 in file "../USBConverter/mla/v2017_03_06/framework/usb/src/usb_device.c"
 10723 ;; Parameters:    Size  Location     Type
 10724 ;;		None
 10725 ;; Auto vars:     Size  Location     Type
 10726 ;;  lastDTS         1   17[COMRAM] unsigned char 
 10727 ;; Return value:  Size  Location     Type
 10728 ;;                  1    wreg      void 
 10729 ;; Registers used:
 10730 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
 10731 ;; Tracked objects:
 10732 ;;		On entry : 0/0
 10733 ;;		On exit  : 0/0
 10734 ;;		Unchanged: 0/0
 10735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10736 ;;      Params:         0       0       0       0       0       0       0       0       0
 10737 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10738 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10739 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10740 ;;Total ram usage:        1 bytes
 10741 ;; Hardware stack levels used:    1
 10742 ;; Hardware stack levels required when called:    2
 10743 ;; This function calls:
 10744 ;;		_USART_mySetLineCodingHandler
 10745 ;;		_USBCtrlTrfTxService
 10746 ;; This function is called by:
 10747 ;;		_USBCtrlEPService
 10748 ;; This function uses a non-reentrant model
 10749 ;;
 10750                           
 10751                           	psect	text54
 10752  001658                     __ptext54:
 10753                           	opt stack 0
 10754  001658                     _USBCtrlTrfInHandler:
 10755                           	opt stack 19
 10756                           
 10757                           ;usb_device.c: 2594: uint8_t lastDTS;
 10758                           ;usb_device.c: 2596: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 10759                           
 10760                           ;incstack = 0
 10761  001658  C06E  FFD9         	movff	_pBDTEntryIn,fsr2l
 10762  00165C  C06F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 10763  001660  0100               	movlb	0	; () banked
 10764  001662  0E00               	movlw	0
 10765  001664  BCDF               	btfsc	indf2,6,c
 10766  001666  0E01               	movlw	1
 10767  001668  6E12               	movwf	USBCtrlTrfInHandler@lastDTS,c
 10768                           
 10769                           ; BSR set to: 0
 10770                           ;usb_device.c: 2599: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 10771  00166A  0E04               	movlw	4
 10772  00166C  0100               	movlb	0	; () banked
 10773  00166E  196E               	xorwf	_pBDTEntryIn& (0+255),w,b
 10774  001670  0100               	movlb	0	; () banked
 10775  001672  6F6E               	movwf	_pBDTEntryIn& (0+255),b
 10776  001674  0100               	movlb	0	; () banked
 10777  001676  516F               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 10778  001678  0100               	movlb	0	; () banked
 10779  00167A  6F6F               	movwf	(_pBDTEntryIn+1)& (0+255),b
 10780                           
 10781                           ; BSR set to: 0
 10782                           ;usb_device.c: 2604: if(USBDeviceState == ADR_PENDING_STATE)
 10783  00167C  0E08               	movlw	8
 10784  00167E  184E               	xorwf	_USBDeviceState,w,c	;volatile
 10785  001680  A4D8               	btfss	status,2,c
 10786  001682  D00B               	goto	i2l4283
 10787                           
 10788                           ; BSR set to: 0
 10789                           ;usb_device.c: 2605: {
 10790                           ;usb_device.c: 2606: UADDR = (SetupPkt.bDevADR & 0x7F);
 10791  001684  0104               	movlb	4	; () banked
 10792  001686  5132               	movf	50,w,b	;volatile
 10793  001688  0B7F               	andlw	127
 10794  00168A  6E6E               	movwf	3950,c	;volatile
 10795                           
 10796                           ; BSR set to: 4
 10797                           ;usb_device.c: 2607: if(UADDR != 0u)
 10798  00168C  506E               	movf	3950,w,c	;volatile
 10799  00168E  B4D8               	btfsc	status,2,c
 10800  001690  D002               	goto	i2l4281
 10801                           
 10802                           ; BSR set to: 4
 10803                           ;usb_device.c: 2608: {
 10804                           ;usb_device.c: 2609: USBDeviceState=ADDRESS_STATE;
 10805  001692  0E10               	movlw	16
 10806  001694  D001               	goto	L18
 10807  001696                     i2l4281:
 10808                           
 10809                           ; BSR set to: 4
 10810                           ;usb_device.c: 2611: else
 10811                           ;usb_device.c: 2612: {
 10812                           ;usb_device.c: 2613: USBDeviceState=DEFAULT_STATE;
 10813  001696  0E04               	movlw	4
 10814  001698                     L18:
 10815  001698  6E4E               	movwf	_USBDeviceState,c	;volatile
 10816  00169A                     i2l4283:
 10817                           
 10818                           ;usb_device.c: 2614: }
 10819                           ;usb_device.c: 2615: }
 10820                           ;usb_device.c: 2618: if(controlTransferState == 1)
 10821  00169A  0447               	decf	_controlTransferState,w,c	;volatile
 10822  00169C  A4D8               	btfss	status,2,c
 10823  00169E  D03B               	goto	i2l502
 10824                           
 10825                           ;usb_device.c: 2619: {
 10826                           ;usb_device.c: 2620: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 10827  0016A0  0100               	movlb	0	; () banked
 10828  0016A2  EE20 F002          	lfsr	2,2
 10829  0016A6  516E               	movf	_pBDTEntryIn& (0+255),w,b
 10830  0016A8  26D9               	addwf	fsr2l,f,c
 10831  0016AA  516F               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 10832  0016AC  22DA               	addwfc	fsr2h,f,c
 10833  0016AE  0E38               	movlw	56
 10834  0016B0  6EDE               	movwf	postinc2,c
 10835  0016B2  0E04               	movlw	4
 10836  0016B4  6EDD               	movwf	postdec2,c
 10837                           
 10838                           ; BSR set to: 0
 10839                           ;usb_device.c: 2621: USBCtrlTrfTxService();
 10840  0016B6  EC7D  F00D         	call	_USBCtrlTrfTxService	;wreg free
 10841                           
 10842                           ;usb_device.c: 2627: if(shortPacketStatus == 2)
 10843  0016BA  0E02               	movlw	2
 10844  0016BC  1848               	xorwf	_shortPacketStatus,w,c	;volatile
 10845  0016BE  A4D8               	btfss	status,2,c
 10846  0016C0  D00D               	goto	i2l4295
 10847                           
 10848                           ;usb_device.c: 2628: {
 10849                           ;usb_device.c: 2631: pBDTEntryIn[0]->STAT.Val = 0x04;
 10850  0016C2  C06E  FFD9         	movff	_pBDTEntryIn,fsr2l
 10851  0016C6  C06F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 10852  0016CA  0E04               	movlw	4
 10853  0016CC  6EDF               	movwf	indf2,c
 10854                           
 10855                           ;usb_device.c: 2632: pBDTEntryIn[0]->STAT.Val |= 0x80;
 10856  0016CE  C06E  FFD9         	movff	_pBDTEntryIn,fsr2l
 10857  0016D2  C06F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 10858  0016D6  0E00               	movlw	0
 10859  0016D8  8EDB               	bsf	plusw2,7,c
 10860                           
 10861                           ;usb_device.c: 2633: }
 10862  0016DA  0012               	return	
 10863  0016DC                     i2l4295:
 10864                           
 10865                           ;usb_device.c: 2634: else
 10866                           ;usb_device.c: 2635: {
 10867                           ;usb_device.c: 2636: if(lastDTS == 0)
 10868  0016DC  5012               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 10869  0016DE  A4D8               	btfss	status,2,c
 10870  0016E0  D00D               	goto	i2l4301
 10871                           
 10872                           ;usb_device.c: 2637: {
 10873                           ;usb_device.c: 2638: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 10874  0016E2  C06E  FFD9         	movff	_pBDTEntryIn,fsr2l
 10875  0016E6  C06F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 10876  0016EA  0E48               	movlw	72
 10877  0016EC  6EDF               	movwf	indf2,c
 10878                           
 10879                           ;usb_device.c: 2639: pBDTEntryIn[0]->STAT.Val |= 0x80;
 10880  0016EE  C06E  FFD9         	movff	_pBDTEntryIn,fsr2l
 10881  0016F2  C06F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 10882  0016F6  0E00               	movlw	0
 10883  0016F8  8EDB               	bsf	plusw2,7,c
 10884                           
 10885                           ;usb_device.c: 2640: }
 10886  0016FA  0012               	return	
 10887  0016FC                     i2l4301:
 10888                           
 10889                           ;usb_device.c: 2641: else
 10890                           ;usb_device.c: 2642: {
 10891                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 10892  0016FC  C06E  FFD9         	movff	_pBDTEntryIn,fsr2l
 10893  001700  C06F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 10894  001704  0E08               	movlw	8
 10895  001706  6EDF               	movwf	indf2,c
 10896                           
 10897                           ;usb_device.c: 2644: pBDTEntryIn[0]->STAT.Val |= 0x80;
 10898  001708  C06E  FFD9         	movff	_pBDTEntryIn,fsr2l
 10899  00170C  C06F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 10900  001710  0E00               	movlw	0
 10901  001712  8EDB               	bsf	plusw2,7,c
 10902                           
 10903                           ;usb_device.c: 2645: }
 10904                           ;usb_device.c: 2646: }
 10905                           ;usb_device.c: 2647: }
 10906  001714  0012               	return	
 10907  001716                     i2l502:
 10908                           
 10909                           ;usb_device.c: 2648: else
 10910                           ;usb_device.c: 2649: {
 10911                           ;usb_device.c: 2653: if(outPipes[0].info.bits.busy == 1)
 10912  001716  0100               	movlb	0	; () banked
 10913  001718  AF63               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 10914  00171A  D016               	goto	i2l4311
 10915                           
 10916                           ; BSR set to: 0
 10917                           ;usb_device.c: 2654: {
 10918                           ;usb_device.c: 2655: if(outPipes[0].pFunc != (0))
 10919  00171C  0100               	movlb	0	; () banked
 10920  00171E  5166               	movf	(_outPipes+6)& (0+255),w,b	;volatile
 10921  001720  0100               	movlb	0	; () banked
 10922  001722  1167               	iorwf	(_outPipes+7)& (0+255),w,b	;volatile
 10923  001724  B4D8               	btfsc	status,2,c
 10924  001726  D00E               	goto	i2l4309
 10925                           
 10926                           ; BSR set to: 0
 10927                           ;usb_device.c: 2656: {
 10928                           ;usb_device.c: 2657: outPipes[0].pFunc();
 10929  001728  EE20  F066         	lfsr	2,_outPipes+6	;volatile
 10930  00172C  D801               	call	i2u351_48
 10931  00172E  D00A               	goto	i2l4309
 10932  001730                     i2u351_48:
 10933  001730  0005               	push	
 10934  001732  6EFA               	movwf	pclath,c
 10935  001734  50DE               	movf	postinc2,w,c
 10936  001736  6EFD               	movwf	tosl,c
 10937  001738  50DE               	movf	postinc2,w,c
 10938  00173A  6EFE               	movwf	tosh,c
 10939  00173C  50F8               	movf	tblptru,w,c
 10940  00173E  6EFF               	movwf	tosu,c
 10941  001740  50FA               	movf	pclath,w,c
 10942  001742  0012               	return		;indir
 10943  001744                     i2l4309:
 10944                           
 10945                           ;usb_device.c: 2658: }
 10946                           ;usb_device.c: 2659: outPipes[0].info.bits.busy = 0;
 10947  001744  0100               	movlb	0	; () banked
 10948  001746  9F63               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 10949  001748                     i2l4311:
 10950                           
 10951                           ; BSR set to: 0
 10952                           ;usb_device.c: 2660: }
 10953                           ;usb_device.c: 2662: controlTransferState = 0;
 10954  001748  0E00               	movlw	0
 10955  00174A  6E47               	movwf	_controlTransferState,c	;volatile
 10956  00174C  0012               	return	
 10957  00174E                     __end_of_USBCtrlTrfInHandler:
 10958                           	opt stack 0
 10959                           tosu	equ	0xFFF
 10960                           tosh	equ	0xFFE
 10961                           tosl	equ	0xFFD
 10962                           pclatu	equ	0xFFB
 10963                           pclath	equ	0xFFA
 10964                           tblptru	equ	0xFF8
 10965                           tblptrh	equ	0xFF7
 10966                           tblptrl	equ	0xFF6
 10967                           tablat	equ	0xFF5
 10968                           prodh	equ	0xFF4
 10969                           prodl	equ	0xFF3
 10970                           intcon	equ	0xFF2
 10971                           postinc0	equ	0xFEE
 10972                           fsr0h	equ	0xFEA
 10973                           fsr0l	equ	0xFE9
 10974                           wreg	equ	0xFE8
 10975                           indf1	equ	0xFE7
 10976                           postdec1	equ	0xFE5
 10977                           fsr1h	equ	0xFE2
 10978                           fsr1l	equ	0xFE1
 10979                           bsr	equ	0xFE0
 10980                           indf2	equ	0xFDF
 10981                           postinc2	equ	0xFDE
 10982                           postdec2	equ	0xFDD
 10983                           plusw2	equ	0xFDB
 10984                           fsr2h	equ	0xFDA
 10985                           fsr2l	equ	0xFD9
 10986                           status	equ	0xFD8
 10987                           
 10988 ;; *************** function _USBCtrlTrfTxService *****************
 10989 ;; Defined at:
 10990 ;;		line 1771 in file "../USBConverter/mla/v2017_03_06/framework/usb/src/usb_device.c"
 10991 ;; Parameters:    Size  Location     Type
 10992 ;;		None
 10993 ;; Auto vars:     Size  Location     Type
 10994 ;;  byteToSend      1    0[COMRAM] unsigned char 
 10995 ;; Return value:  Size  Location     Type
 10996 ;;                  1    wreg      void 
 10997 ;; Registers used:
 10998 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10999 ;; Tracked objects:
 11000 ;;		On entry : 0/0
 11001 ;;		On exit  : 0/0
 11002 ;;		Unchanged: 0/0
 11003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11004 ;;      Params:         0       0       0       0       0       0       0       0       0
 11005 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11006 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11007 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11008 ;;Total ram usage:        1 bytes
 11009 ;; Hardware stack levels used:    1
 11010 ;; This function calls:
 11011 ;;		Nothing
 11012 ;; This function is called by:
 11013 ;;		_USBCtrlEPAllowDataStage
 11014 ;;		_USBCtrlTrfInHandler
 11015 ;; This function uses a non-reentrant model
 11016 ;;
 11017                           
 11018                           	psect	text55
 11019  001AFA                     __ptext55:
 11020                           	opt stack 0
 11021  001AFA                     _USBCtrlTrfTxService:
 11022                           	opt stack 18
 11023                           
 11024                           ;usb_device.c: 1773: uint8_t byteToSend;
 11025                           ;usb_device.c: 1777: byteToSend = 8;
 11026                           
 11027                           ;incstack = 0
 11028  001AFA  0E08               	movlw	8
 11029  001AFC  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 11030                           
 11031                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 11032  001AFE  0100               	movlb	0	; () banked
 11033  001B00  516D               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 11034  001B02  E111               	bnz	i2l3577
 11035  001B04  0E08               	movlw	8
 11036  001B06  0100               	movlb	0	; () banked
 11037  001B08  5D6C               	subwf	(_inPipes+4)& (0+255),w,b	;volatile
 11038  001B0A  B0D8               	btfsc	status,0,c
 11039  001B0C  D00C               	goto	i2l3577
 11040                           
 11041                           ; BSR set to: 0
 11042                           ;usb_device.c: 1779: {
 11043                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 11044  001B0E  C06C  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 11045                           
 11046                           ; BSR set to: 0
 11047                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 11048  001B12  5048               	movf	_shortPacketStatus,w,c	;volatile
 11049  001B14  A4D8               	btfss	status,2,c
 11050  001B16  D002               	goto	i2l3573
 11051                           
 11052                           ; BSR set to: 0
 11053                           ;usb_device.c: 1788: {
 11054                           ;usb_device.c: 1789: shortPacketStatus = 1;
 11055  001B18  0E01               	movlw	1
 11056  001B1A  D004               	goto	L19
 11057  001B1C                     i2l3573:
 11058                           
 11059                           ; BSR set to: 0
 11060                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 11061  001B1C  0448               	decf	_shortPacketStatus,w,c	;volatile
 11062  001B1E  A4D8               	btfss	status,2,c
 11063  001B20  D002               	goto	i2l3577
 11064                           
 11065                           ; BSR set to: 0
 11066                           ;usb_device.c: 1792: {
 11067                           ;usb_device.c: 1793: shortPacketStatus = 2;
 11068  001B22  0E02               	movlw	2
 11069  001B24                     L19:
 11070  001B24  6E48               	movwf	_shortPacketStatus,c	;volatile
 11071  001B26                     i2l3577:
 11072                           
 11073                           ; BSR set to: 0
 11074                           ;usb_device.c: 1794: }
 11075                           ;usb_device.c: 1795: }
 11076                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 11077  001B26  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 11078  001B28  0100               	movlb	0	; () banked
 11079  001B2A  5F6C               	subwf	(_inPipes+4)& (0+255),f,b	;volatile
 11080  001B2C  0E00               	movlw	0
 11081  001B2E  5B6D               	subwfb	(_inPipes+5)& (0+255),f,b	;volatile
 11082                           
 11083                           ; BSR set to: 0
 11084                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 11085  001B30  0100               	movlb	0	; () banked
 11086  001B32  EE20 F001          	lfsr	2,1
 11087  001B36  516E               	movf	_pBDTEntryIn& (0+255),w,b
 11088  001B38  26D9               	addwf	fsr2l,f,c
 11089  001B3A  516F               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 11090  001B3C  22DA               	addwfc	fsr2h,f,c
 11091  001B3E  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 11092                           
 11093                           ; BSR set to: 0
 11094                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 11095  001B42  0E38               	movlw	56
 11096  001B44  0100               	movlb	0	; () banked
 11097  001B46  6F8C               	movwf	_pDst& (0+255),b
 11098  001B48  0E04               	movlw	4
 11099  001B4A  0100               	movlb	0	; () banked
 11100  001B4C  6F8D               	movwf	(_pDst+1)& (0+255),b
 11101                           
 11102                           ; BSR set to: 0
 11103                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 11104  001B4E  0100               	movlb	0	; () banked
 11105  001B50  A16B               	btfss	(_inPipes+3)& (0+255),0,b	;volatile
 11106  001B52  D01D               	goto	i2l3595
 11107  001B54  D03C               	goto	i2l3605
 11108  001B56                     i2l3587:
 11109                           
 11110                           ; BSR set to: 0
 11111                           ;usb_device.c: 1812: {
 11112                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 11113  001B56  C068  FFF6         	movff	_inPipes,tblptrl	;volatile
 11114  001B5A  C069  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 11115  001B5E  6AF8               	clrf	tblptru,c
 11116  001B60  C08C  FFD9         	movff	_pDst,fsr2l
 11117  001B64  C08D  FFDA         	movff	_pDst+1,fsr2h
 11118  001B68  0E07               	movlw	(high __ramtop+-1)
 11119  001B6A  64F7               	cpfsgt	tblptrh,c
 11120  001B6C  D003               	bra	i2u247_47
 11121  001B6E  0008               	tblrd		*
 11122  001B70  50F5               	movf	tablat,w,c
 11123  001B72  D005               	bra	i2u247_40
 11124  001B74                     i2u247_47:
 11125  001B74  CFF6 FFE1          	movff	tblptrl,fsr1l
 11126  001B78  CFF7 FFE2          	movff	tblptrh,fsr1h
 11127  001B7C  50E7               	movf	indf1,w,c
 11128  001B7E                     i2u247_40:
 11129  001B7E  6EDF               	movwf	indf2,c
 11130  001B80  0100               	movlb	0	; () banked
 11131  001B82  4B68               	infsnz	_inPipes& (0+255),f,b	;volatile
 11132  001B84  2B69               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 11133                           
 11134                           ; BSR set to: 0
 11135  001B86  0100               	movlb	0	; () banked
 11136  001B88  4B8C               	infsnz	_pDst& (0+255),f,b
 11137  001B8A  2B8D               	incf	(_pDst+1)& (0+255),f,b
 11138                           
 11139                           ; BSR set to: 0
 11140                           ;usb_device.c: 1814: byteToSend--;
 11141  001B8C  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 11142  001B8E                     i2l3595:
 11143                           
 11144                           ; BSR set to: 0
 11145  001B8E  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 11146  001B90  B4D8               	btfsc	status,2,c
 11147  001B92  0012               	return	
 11148  001B94  D7E0               	goto	i2l3587
 11149  001B96                     i2l3597:
 11150                           
 11151                           ; BSR set to: 0
 11152                           ;usb_device.c: 1820: {
 11153                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 11154  001B96  C068  FFF6         	movff	_inPipes,tblptrl	;volatile
 11155  001B9A  C069  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 11156  001B9E  6AF8               	clrf	tblptru,c
 11157  001BA0  C08C  FFD9         	movff	_pDst,fsr2l
 11158  001BA4  C08D  FFDA         	movff	_pDst+1,fsr2h
 11159  001BA8  0E07               	movlw	(high __ramtop+-1)
 11160  001BAA  64F7               	cpfsgt	tblptrh,c
 11161  001BAC  D003               	bra	i2u249_47
 11162  001BAE  0008               	tblrd		*
 11163  001BB0  50F5               	movf	tablat,w,c
 11164  001BB2  D005               	bra	i2u249_40
 11165  001BB4                     i2u249_47:
 11166  001BB4  CFF6 FFE1          	movff	tblptrl,fsr1l
 11167  001BB8  CFF7 FFE2          	movff	tblptrh,fsr1h
 11168  001BBC  50E7               	movf	indf1,w,c
 11169  001BBE                     i2u249_40:
 11170  001BBE  6EDF               	movwf	indf2,c
 11171  001BC0  0100               	movlb	0	; () banked
 11172  001BC2  4B68               	infsnz	_inPipes& (0+255),f,b	;volatile
 11173  001BC4  2B69               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 11174                           
 11175                           ; BSR set to: 0
 11176  001BC6  0100               	movlb	0	; () banked
 11177  001BC8  4B8C               	infsnz	_pDst& (0+255),f,b
 11178  001BCA  2B8D               	incf	(_pDst+1)& (0+255),f,b
 11179                           
 11180                           ; BSR set to: 0
 11181                           ;usb_device.c: 1822: byteToSend--;
 11182  001BCC  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 11183  001BCE                     i2l3605:
 11184                           
 11185                           ; BSR set to: 0
 11186  001BCE  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 11187  001BD0  B4D8               	btfsc	status,2,c
 11188  001BD2  0012               	return	
 11189  001BD4  D7E0               	goto	i2l3597
 11190  001BD6                     __end_of_USBCtrlTrfTxService:
 11191                           	opt stack 0
 11192                           tosu	equ	0xFFF
 11193                           tosh	equ	0xFFE
 11194                           tosl	equ	0xFFD
 11195                           pclatu	equ	0xFFB
 11196                           pclath	equ	0xFFA
 11197                           tblptru	equ	0xFF8
 11198                           tblptrh	equ	0xFF7
 11199                           tblptrl	equ	0xFF6
 11200                           tablat	equ	0xFF5
 11201                           prodh	equ	0xFF4
 11202                           prodl	equ	0xFF3
 11203                           intcon	equ	0xFF2
 11204                           postinc0	equ	0xFEE
 11205                           fsr0h	equ	0xFEA
 11206                           fsr0l	equ	0xFE9
 11207                           wreg	equ	0xFE8
 11208                           indf1	equ	0xFE7
 11209                           postdec1	equ	0xFE5
 11210                           fsr1h	equ	0xFE2
 11211                           fsr1l	equ	0xFE1
 11212                           bsr	equ	0xFE0
 11213                           indf2	equ	0xFDF
 11214                           postinc2	equ	0xFDE
 11215                           postdec2	equ	0xFDD
 11216                           plusw2	equ	0xFDB
 11217                           fsr2h	equ	0xFDA
 11218                           fsr2l	equ	0xFD9
 11219                           status	equ	0xFD8
 11220                           
 11221 ;; *************** function _USART_mySetLineCodingHandler *****************
 11222 ;; Defined at:
 11223 ;;		line 112 in file "../USBConverter/mla/v2017_03_06/framework/usb/src/usart.c"
 11224 ;; Parameters:    Size  Location     Type
 11225 ;;		None
 11226 ;; Auto vars:     Size  Location     Type
 11227 ;;  dwBaud          4   13[COMRAM] unsigned long 
 11228 ;; Return value:  Size  Location     Type
 11229 ;;                  1    wreg      void 
 11230 ;; Registers used:
 11231 ;;		wreg, status,2, status,0, cstack
 11232 ;; Tracked objects:
 11233 ;;		On entry : 0/0
 11234 ;;		On exit  : 0/0
 11235 ;;		Unchanged: 0/0
 11236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11237 ;;      Params:         0       0       0       0       0       0       0       0       0
 11238 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11239 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11240 ;;      Totals:         4       0       0       0       0       0       0       0       0
 11241 ;;Total ram usage:        4 bytes
 11242 ;; Hardware stack levels used:    1
 11243 ;; Hardware stack levels required when called:    1
 11244 ;; This function calls:
 11245 ;;		_USART_Initialize
 11246 ;;		___lldiv
 11247 ;; This function is called by:
 11248 ;;		_USBCheckCDCRequest
 11249 ;;		_USBCtrlTrfRxService
 11250 ;;		_USBCtrlTrfInHandler
 11251 ;; This function uses a non-reentrant model
 11252 ;;
 11253                           
 11254                           	psect	text56
 11255  00283E                     __ptext56:
 11256                           	opt stack 0
 11257  00283E                     _USART_mySetLineCodingHandler:
 11258                           	opt stack 18
 11259                           
 11260                           ;usart.c: 115: {line_coding.dwDTERate=cdc_notice.GetLineCoding.dwDTERate;};
 11261                           
 11262                           ; BSR set to: 0
 11263                           ;incstack = 0
 11264  00283E  C0AF  F0C1         	movff	_cdc_notice,_line_coding
 11265  002842  C0B0  F0C2         	movff	_cdc_notice+1,_line_coding+1
 11266  002846  C0B1  F0C3         	movff	_cdc_notice+2,_line_coding+2
 11267  00284A  C0B2  F0C4         	movff	_cdc_notice+3,_line_coding+3
 11268                           
 11269                           ;usart.c: 119: uint32_t dwBaud;
 11270                           ;usart.c: 120: dwBaud = ((8000000/64) / line_coding.dwDTERate) - 1;
 11271  00284E  0E48               	movlw	72
 11272  002850  6E01               	movwf	___lldiv@dividend,c
 11273  002852  0EE8               	movlw	232
 11274  002854  6E02               	movwf	___lldiv@dividend+1,c
 11275  002856  0E01               	movlw	1
 11276  002858  6E03               	movwf	___lldiv@dividend+2,c
 11277  00285A  0E00               	movlw	0
 11278  00285C  6E04               	movwf	___lldiv@dividend+3,c
 11279  00285E  C0C1  F005         	movff	_line_coding,___lldiv@divisor
 11280  002862  C0C2  F006         	movff	_line_coding+1,___lldiv@divisor+1
 11281  002866  C0C3  F007         	movff	_line_coding+2,___lldiv@divisor+2
 11282  00286A  C0C4  F008         	movff	_line_coding+3,___lldiv@divisor+3
 11283  00286E  EC36  F012         	call	___lldiv	;wreg free
 11284  002872  0EFF               	movlw	255
 11285  002874  2401               	addwf	?___lldiv,w,c
 11286  002876  6E0E               	movwf	USART_mySetLineCodingHandler@dwBaud,c
 11287  002878  0EFF               	movlw	255
 11288  00287A  2002               	addwfc	?___lldiv+1,w,c
 11289  00287C  6E0F               	movwf	USART_mySetLineCodingHandler@dwBaud+1,c
 11290  00287E  0EFF               	movlw	255
 11291  002880  2003               	addwfc	?___lldiv+2,w,c
 11292  002882  6E10               	movwf	USART_mySetLineCodingHandler@dwBaud+2,c
 11293  002884  0EFF               	movlw	255
 11294  002886  2004               	addwfc	?___lldiv+3,w,c
 11295  002888  6E11               	movwf	USART_mySetLineCodingHandler@dwBaud+3,c
 11296                           
 11297                           ;usart.c: 121: SPBRG = (uint8_t) dwBaud;
 11298  00288A  C00E  FFAF         	movff	USART_mySetLineCodingHandler@dwBaud,4015	;volatile
 11299                           
 11300                           ;usart.c: 122: SPBRGH = (uint8_t)((uint16_t) (dwBaud >> 8));
 11301  00288E  C00F  FFB0         	movff	USART_mySetLineCodingHandler@dwBaud+1,4016	;volatile
 11302                           
 11303                           ;usart.c: 125: USART_Initialize();
 11304  002892  ECB9  F015         	call	_USART_Initialize	;wreg free
 11305  002896  0012               	return		;funcret
 11306  002898                     __end_of_USART_mySetLineCodingHandler:
 11307                           	opt stack 0
 11308                           tosu	equ	0xFFF
 11309                           tosh	equ	0xFFE
 11310                           tosl	equ	0xFFD
 11311                           pclatu	equ	0xFFB
 11312                           pclath	equ	0xFFA
 11313                           tblptru	equ	0xFF8
 11314                           tblptrh	equ	0xFF7
 11315                           tblptrl	equ	0xFF6
 11316                           tablat	equ	0xFF5
 11317                           prodh	equ	0xFF4
 11318                           prodl	equ	0xFF3
 11319                           intcon	equ	0xFF2
 11320                           postinc0	equ	0xFEE
 11321                           fsr0h	equ	0xFEA
 11322                           fsr0l	equ	0xFE9
 11323                           wreg	equ	0xFE8
 11324                           indf1	equ	0xFE7
 11325                           postdec1	equ	0xFE5
 11326                           fsr1h	equ	0xFE2
 11327                           fsr1l	equ	0xFE1
 11328                           bsr	equ	0xFE0
 11329                           indf2	equ	0xFDF
 11330                           postinc2	equ	0xFDE
 11331                           postdec2	equ	0xFDD
 11332                           plusw2	equ	0xFDB
 11333                           fsr2h	equ	0xFDA
 11334                           fsr2l	equ	0xFD9
 11335                           status	equ	0xFD8
 11336                           
 11337 ;; *************** function ___lldiv *****************
 11338 ;; Defined at:
 11339 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lldiv.c"
 11340 ;; Parameters:    Size  Location     Type
 11341 ;;  dividend        4    0[COMRAM] unsigned long 
 11342 ;;  divisor         4    4[COMRAM] unsigned long 
 11343 ;; Auto vars:     Size  Location     Type
 11344 ;;  quotient        4    8[COMRAM] unsigned long 
 11345 ;;  counter         1   12[COMRAM] unsigned char 
 11346 ;; Return value:  Size  Location     Type
 11347 ;;                  4    0[COMRAM] unsigned long 
 11348 ;; Registers used:
 11349 ;;		wreg, status,2, status,0
 11350 ;; Tracked objects:
 11351 ;;		On entry : 0/0
 11352 ;;		On exit  : 0/0
 11353 ;;		Unchanged: 0/0
 11354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11355 ;;      Params:         8       0       0       0       0       0       0       0       0
 11356 ;;      Locals:         5       0       0       0       0       0       0       0       0
 11357 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11358 ;;      Totals:        13       0       0       0       0       0       0       0       0
 11359 ;;Total ram usage:       13 bytes
 11360 ;; Hardware stack levels used:    1
 11361 ;; This function calls:
 11362 ;;		Nothing
 11363 ;; This function is called by:
 11364 ;;		_USART_mySetLineCodingHandler
 11365 ;; This function uses a non-reentrant model
 11366 ;;
 11367                           
 11368                           	psect	text57
 11369  00246C                     __ptext57:
 11370                           	opt stack 0
 11371  00246C                     ___lldiv:
 11372                           	opt stack 18
 11373                           
 11374                           ;incstack = 0
 11375  00246C  0E00               	movlw	0
 11376  00246E  6E09               	movwf	___lldiv@quotient,c
 11377  002470  0E00               	movlw	0
 11378  002472  6E0A               	movwf	___lldiv@quotient+1,c
 11379  002474  0E00               	movlw	0
 11380  002476  6E0B               	movwf	___lldiv@quotient+2,c
 11381  002478  0E00               	movlw	0
 11382  00247A  6E0C               	movwf	___lldiv@quotient+3,c
 11383  00247C  5005               	movf	___lldiv@divisor,w,c
 11384  00247E  1006               	iorwf	___lldiv@divisor+1,w,c
 11385  002480  1007               	iorwf	___lldiv@divisor+2,w,c
 11386  002482  1008               	iorwf	___lldiv@divisor+3,w,c
 11387  002484  B4D8               	btfsc	status,2,c
 11388  002486  D02A               	goto	i2l1323
 11389  002488  0E01               	movlw	1
 11390  00248A  6E0D               	movwf	___lldiv@counter,c
 11391  00248C  D006               	goto	i2l3615
 11392  00248E                     i2l3613:
 11393  00248E  90D8               	bcf	status,0,c
 11394  002490  3605               	rlcf	___lldiv@divisor,f,c
 11395  002492  3606               	rlcf	___lldiv@divisor+1,f,c
 11396  002494  3607               	rlcf	___lldiv@divisor+2,f,c
 11397  002496  3608               	rlcf	___lldiv@divisor+3,f,c
 11398  002498  2A0D               	incf	___lldiv@counter,f,c
 11399  00249A                     i2l3615:
 11400  00249A  AE08               	btfss	___lldiv@divisor+3,7,c
 11401  00249C  D7F8               	goto	i2l3613
 11402  00249E                     i2l3617:
 11403  00249E  90D8               	bcf	status,0,c
 11404  0024A0  3609               	rlcf	___lldiv@quotient,f,c
 11405  0024A2  360A               	rlcf	___lldiv@quotient+1,f,c
 11406  0024A4  360B               	rlcf	___lldiv@quotient+2,f,c
 11407  0024A6  360C               	rlcf	___lldiv@quotient+3,f,c
 11408  0024A8  5005               	movf	___lldiv@divisor,w,c
 11409  0024AA  5C01               	subwf	___lldiv@dividend,w,c
 11410  0024AC  5006               	movf	___lldiv@divisor+1,w,c
 11411  0024AE  5802               	subwfb	___lldiv@dividend+1,w,c
 11412  0024B0  5007               	movf	___lldiv@divisor+2,w,c
 11413  0024B2  5803               	subwfb	___lldiv@dividend+2,w,c
 11414  0024B4  5008               	movf	___lldiv@divisor+3,w,c
 11415  0024B6  5804               	subwfb	___lldiv@dividend+3,w,c
 11416  0024B8  A0D8               	btfss	status,0,c
 11417  0024BA  D009               	goto	i2l3625
 11418  0024BC  5005               	movf	___lldiv@divisor,w,c
 11419  0024BE  5E01               	subwf	___lldiv@dividend,f,c
 11420  0024C0  5006               	movf	___lldiv@divisor+1,w,c
 11421  0024C2  5A02               	subwfb	___lldiv@dividend+1,f,c
 11422  0024C4  5007               	movf	___lldiv@divisor+2,w,c
 11423  0024C6  5A03               	subwfb	___lldiv@dividend+2,f,c
 11424  0024C8  5008               	movf	___lldiv@divisor+3,w,c
 11425  0024CA  5A04               	subwfb	___lldiv@dividend+3,f,c
 11426  0024CC  8009               	bsf	___lldiv@quotient,0,c
 11427  0024CE                     i2l3625:
 11428  0024CE  90D8               	bcf	status,0,c
 11429  0024D0  3208               	rrcf	___lldiv@divisor+3,f,c
 11430  0024D2  3207               	rrcf	___lldiv@divisor+2,f,c
 11431  0024D4  3206               	rrcf	___lldiv@divisor+1,f,c
 11432  0024D6  3205               	rrcf	___lldiv@divisor,f,c
 11433  0024D8  2E0D               	decfsz	___lldiv@counter,f,c
 11434  0024DA  D7E1               	goto	i2l3617
 11435  0024DC                     i2l1323:
 11436  0024DC  C009  F001         	movff	___lldiv@quotient,?___lldiv
 11437  0024E0  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 11438  0024E4  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 11439  0024E8  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 11440  0024EC  0012               	return		;funcret
 11441  0024EE                     __end_of___lldiv:
 11442                           	opt stack 0
 11443                           tosu	equ	0xFFF
 11444                           tosh	equ	0xFFE
 11445                           tosl	equ	0xFFD
 11446                           pclatu	equ	0xFFB
 11447                           pclath	equ	0xFFA
 11448                           tblptru	equ	0xFF8
 11449                           tblptrh	equ	0xFF7
 11450                           tblptrl	equ	0xFF6
 11451                           tablat	equ	0xFF5
 11452                           prodh	equ	0xFF4
 11453                           prodl	equ	0xFF3
 11454                           intcon	equ	0xFF2
 11455                           postinc0	equ	0xFEE
 11456                           fsr0h	equ	0xFEA
 11457                           fsr0l	equ	0xFE9
 11458                           wreg	equ	0xFE8
 11459                           indf1	equ	0xFE7
 11460                           postdec1	equ	0xFE5
 11461                           fsr1h	equ	0xFE2
 11462                           fsr1l	equ	0xFE1
 11463                           bsr	equ	0xFE0
 11464                           indf2	equ	0xFDF
 11465                           postinc2	equ	0xFDE
 11466                           postdec2	equ	0xFDD
 11467                           plusw2	equ	0xFDB
 11468                           fsr2h	equ	0xFDA
 11469                           fsr2l	equ	0xFD9
 11470                           status	equ	0xFD8
 11471                           
 11472 ;; *************** function _USART_Initialize *****************
 11473 ;; Defined at:
 11474 ;;		line 46 in file "../USBConverter/mla/v2017_03_06/framework/usb/src/usart.c"
 11475 ;; Parameters:    Size  Location     Type
 11476 ;;		None
 11477 ;; Auto vars:     Size  Location     Type
 11478 ;;  c               1    0[COMRAM] unsigned char 
 11479 ;; Return value:  Size  Location     Type
 11480 ;;                  1    wreg      void 
 11481 ;; Registers used:
 11482 ;;		None
 11483 ;; Tracked objects:
 11484 ;;		On entry : 0/0
 11485 ;;		On exit  : 0/0
 11486 ;;		Unchanged: 0/0
 11487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11488 ;;      Params:         0       0       0       0       0       0       0       0       0
 11489 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11490 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11491 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11492 ;;Total ram usage:        1 bytes
 11493 ;; Hardware stack levels used:    1
 11494 ;; This function calls:
 11495 ;;		Nothing
 11496 ;; This function is called by:
 11497 ;;		_APP_DeviceCDCEmulatorInitialize
 11498 ;;		_USART_mySetLineCodingHandler
 11499 ;; This function uses a non-reentrant model
 11500 ;;
 11501                           
 11502                           	psect	text58
 11503  002B72                     __ptext58:
 11504                           	opt stack 0
 11505  002B72                     _USART_Initialize:
 11506                           	opt stack 20
 11507                           
 11508                           ;usart.c: 48: unsigned char c;
 11509                           ;usart.c: 51: TXSTAbits.TX9 = 0;
 11510                           
 11511                           ;incstack = 0
 11512  002B72  9CAC               	bcf	4012,6,c	;volatile
 11513                           
 11514                           ;usart.c: 52: TXSTAbits.SYNC = 0;
 11515  002B74  98AC               	bcf	4012,4,c	;volatile
 11516                           
 11517                           ;usart.c: 53: TXSTAbits.TXEN = 1;
 11518  002B76  8AAC               	bsf	4012,5,c	;volatile
 11519                           
 11520                           ;usart.c: 56: RCSTAbits.RX9 = 0;
 11521  002B78  9CAB               	bcf	4011,6,c	;volatile
 11522                           
 11523                           ;usart.c: 57: RCSTAbits.CREN = 1;
 11524  002B7A  88AB               	bsf	4011,4,c	;volatile
 11525                           
 11526                           ;usart.c: 59: TRISCbits.TRISC7 = 1;
 11527  002B7C  8E94               	bsf	3988,7,c	;volatile
 11528                           
 11529                           ;usart.c: 60: TRISCbits.TRISC6 = 0;
 11530  002B7E  9C94               	bcf	3988,6,c	;volatile
 11531                           
 11532                           ;usart.c: 63: RCSTAbits.SPEN = 1;
 11533  002B80  8EAB               	bsf	4011,7,c	;volatile
 11534                           
 11535                           ;usart.c: 65: c = RCREG;
 11536  002B82  CFAE F001          	movff	4014,USART_Initialize@c	;volatile
 11537  002B86  0012               	return		;funcret
 11538  002B88                     __end_of_USART_Initialize:
 11539                           	opt stack 0
 11540                           tosu	equ	0xFFF
 11541                           tosh	equ	0xFFE
 11542                           tosl	equ	0xFFD
 11543                           pclatu	equ	0xFFB
 11544                           pclath	equ	0xFFA
 11545                           tblptru	equ	0xFF8
 11546                           tblptrh	equ	0xFF7
 11547                           tblptrl	equ	0xFF6
 11548                           tablat	equ	0xFF5
 11549                           prodh	equ	0xFF4
 11550                           prodl	equ	0xFF3
 11551                           intcon	equ	0xFF2
 11552                           postinc0	equ	0xFEE
 11553                           fsr0h	equ	0xFEA
 11554                           fsr0l	equ	0xFE9
 11555                           wreg	equ	0xFE8
 11556                           indf1	equ	0xFE7
 11557                           postdec1	equ	0xFE5
 11558                           fsr1h	equ	0xFE2
 11559                           fsr1l	equ	0xFE1
 11560                           bsr	equ	0xFE0
 11561                           indf2	equ	0xFDF
 11562                           postinc2	equ	0xFDE
 11563                           postdec2	equ	0xFDD
 11564                           plusw2	equ	0xFDB
 11565                           fsr2h	equ	0xFDA
 11566                           fsr2l	equ	0xFD9
 11567                           status	equ	0xFD8
 11568                           tosu	equ	0xFFF
 11569                           tosh	equ	0xFFE
 11570                           tosl	equ	0xFFD
 11571                           pclatu	equ	0xFFB
 11572                           pclath	equ	0xFFA
 11573                           tblptru	equ	0xFF8
 11574                           tblptrh	equ	0xFF7
 11575                           tblptrl	equ	0xFF6
 11576                           tablat	equ	0xFF5
 11577                           prodh	equ	0xFF4
 11578                           prodl	equ	0xFF3
 11579                           intcon	equ	0xFF2
 11580                           postinc0	equ	0xFEE
 11581                           fsr0h	equ	0xFEA
 11582                           fsr0l	equ	0xFE9
 11583                           wreg	equ	0xFE8
 11584                           indf1	equ	0xFE7
 11585                           postdec1	equ	0xFE5
 11586                           fsr1h	equ	0xFE2
 11587                           fsr1l	equ	0xFE1
 11588                           bsr	equ	0xFE0
 11589                           indf2	equ	0xFDF
 11590                           postinc2	equ	0xFDE
 11591                           postdec2	equ	0xFDD
 11592                           plusw2	equ	0xFDB
 11593                           fsr2h	equ	0xFDA
 11594                           fsr2l	equ	0xFD9
 11595                           status	equ	0xFD8
 11596                           
 11597                           	psect	text59
 11598  000000                     __ptext59:
 11599                           	opt stack 0
 11600                           tosu	equ	0xFFF
 11601                           tosh	equ	0xFFE
 11602                           tosl	equ	0xFFD
 11603                           pclatu	equ	0xFFB
 11604                           pclath	equ	0xFFA
 11605                           tblptru	equ	0xFF8
 11606                           tblptrh	equ	0xFF7
 11607                           tblptrl	equ	0xFF6
 11608                           tablat	equ	0xFF5
 11609                           prodh	equ	0xFF4
 11610                           prodl	equ	0xFF3
 11611                           intcon	equ	0xFF2
 11612                           postinc0	equ	0xFEE
 11613                           fsr0h	equ	0xFEA
 11614                           fsr0l	equ	0xFE9
 11615                           wreg	equ	0xFE8
 11616                           indf1	equ	0xFE7
 11617                           postdec1	equ	0xFE5
 11618                           fsr1h	equ	0xFE2
 11619                           fsr1l	equ	0xFE1
 11620                           bsr	equ	0xFE0
 11621                           indf2	equ	0xFDF
 11622                           postinc2	equ	0xFDE
 11623                           postdec2	equ	0xFDD
 11624                           plusw2	equ	0xFDB
 11625                           fsr2h	equ	0xFDA
 11626                           fsr2l	equ	0xFD9
 11627                           status	equ	0xFD8
 11628                           
 11629                           	psect	rparam
 11630  0000                     tosu	equ	0xFFF
 11631                           tosh	equ	0xFFE
 11632                           tosl	equ	0xFFD
 11633                           pclatu	equ	0xFFB
 11634                           pclath	equ	0xFFA
 11635                           tblptru	equ	0xFF8
 11636                           tblptrh	equ	0xFF7
 11637                           tblptrl	equ	0xFF6
 11638                           tablat	equ	0xFF5
 11639                           prodh	equ	0xFF4
 11640                           prodl	equ	0xFF3
 11641                           intcon	equ	0xFF2
 11642                           postinc0	equ	0xFEE
 11643                           fsr0h	equ	0xFEA
 11644                           fsr0l	equ	0xFE9
 11645                           wreg	equ	0xFE8
 11646                           indf1	equ	0xFE7
 11647                           postdec1	equ	0xFE5
 11648                           fsr1h	equ	0xFE2
 11649                           fsr1l	equ	0xFE1
 11650                           bsr	equ	0xFE0
 11651                           indf2	equ	0xFDF
 11652                           postinc2	equ	0xFDE
 11653                           postdec2	equ	0xFDD
 11654                           plusw2	equ	0xFDB
 11655                           fsr2h	equ	0xFDA
 11656                           fsr2l	equ	0xFD9
 11657                           status	equ	0xFD8
 11658                           
 11659                           	psect	temp
 11660  000058                     btemp:
 11661                           	opt stack 0
 11662  000058                     	ds	1
 11663  0000                     int$flags	set	btemp
 11664                           tosu	equ	0xFFF
 11665                           tosh	equ	0xFFE
 11666                           tosl	equ	0xFFD
 11667                           pclatu	equ	0xFFB
 11668                           pclath	equ	0xFFA
 11669                           tblptru	equ	0xFF8
 11670                           tblptrh	equ	0xFF7
 11671                           tblptrl	equ	0xFF6
 11672                           tablat	equ	0xFF5
 11673                           prodh	equ	0xFF4
 11674                           prodl	equ	0xFF3
 11675                           intcon	equ	0xFF2
 11676                           postinc0	equ	0xFEE
 11677                           fsr0h	equ	0xFEA
 11678                           fsr0l	equ	0xFE9
 11679                           wreg	equ	0xFE8
 11680                           indf1	equ	0xFE7
 11681                           postdec1	equ	0xFE5
 11682                           fsr1h	equ	0xFE2
 11683                           fsr1l	equ	0xFE1
 11684                           bsr	equ	0xFE0
 11685                           indf2	equ	0xFDF
 11686                           postinc2	equ	0xFDE
 11687                           postdec2	equ	0xFDD
 11688                           plusw2	equ	0xFDB
 11689                           fsr2h	equ	0xFDA
 11690                           fsr2l	equ	0xFD9
 11691                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    201
    Data        5
    BSS         272
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     43      87
    BANK0           160     37     142
    BANK1           256      6     134
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           192      0       0
    BANK5           128      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), BDT(BIGRAMl[48]), 
		 -> NULL(NULL[0]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 2047
		 -> CtrlTrfData(BIGRAMhl[8]), RAM(DATA[2047]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 2047
		 -> CtrlTrfData(BIGRAMhl[8]), RAM(DATA[2047]), SetupPkt(BIGRAMhl[8]), 

    uartTransmitBlocking@data	PTR unsigned char  size(2) Largest target is 1
		 -> Keypad@dataEnd(COMRAM[1]), Keypad@dataOut(COMRAM[1]), 

    UART._dataRX	PTR unsigned char  size(2) Largest target is 16
		 -> arr_dataRX(BANK0[16]), 

    UART._dataTX	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    UART	PTR volatile struct . size(2) Largest target is 14
		 -> uart(BANK0[12]), 

    S2730$_dataRX	PTR unsigned char  size(2) Largest target is 16
		 -> arr_dataRX(BANK0[16]), 

    uart._dataRX	PTR unsigned char  size(2) Largest target is 16
		 -> arr_dataRX(BANK0[16]), 

    S2730$_dataTX	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    uart._dataTX	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 64
		 -> USB_Out_Buffer(BANK1[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> RS232_Out_Data(BANK1[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S2358_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S2358_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S2358_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S2358_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 2047
		 -> RAM(DATA[2047]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 2047
		 -> RAM(DATA[2047]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 2047
		 -> RAM(DATA[2047]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BIGRAMhl[64]), cdc_data_rx(BIGRAMhh[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 2047
		 -> RAM(DATA[2047]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 2047
		 -> RAM(DATA[2047]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 2047
		 -> RAM(DATA[2047]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    S671$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> USART_mySetLineCodingHandler(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> USART_mySetLineCodingHandler(), 

    S661$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S661$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S637$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S637$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S637$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S637$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    lastTransmission	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _SYS_InterruptLow in COMRAM

    None.

Critical Paths under _SYS_InterruptHigh in COMRAM

    _SYS_InterruptHigh->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_APP_DeviceCDCEmulatorInitialize
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USART_mySetLineCodingHandler
    _USBCtrlTrfInHandler->_USART_mySetLineCodingHandler
    _USART_mySetLineCodingHandler->___lldiv

Critical Paths under _main in BANK0

    _main->_bootKeypadUART
    _bootKeypadUART->_UART_Init
    _keypadRoutineUART->_uartTransmitBlocking
    _UART_Init->___aldiv
    _bootKeypadPORTB->_keypadRoutine
    _keypadRoutine->_readKeyboard
    _keypadRoutine_StateBased->_readKeyboard
    _USBDeviceInit->_memset
    _APP_DeviceCDCEmulatorTasks->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket

Critical Paths under _SYS_InterruptLow in BANK0

    None.

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _bootKeypadUART->_UART_Init

Critical Paths under _SYS_InterruptLow in BANK1

    None.

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptLow in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptLow in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptLow in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptLow in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _SYS_InterruptLow in BANK6

    None.

Critical Paths under _SYS_InterruptHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _SYS_InterruptLow in BANK7

    None.

Critical Paths under _SYS_InterruptHigh in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    9389
                                             36 BANK0      1     1      0
                                              4 BANK1      2     2      0
               _bootKeypadAndComPort
                    _bootKeypadPORTB
                     _bootKeypadUART
                       _bootUserCode
                      _machineConfig
                       _readKeyboard
 ---------------------------------------------------------------------------------
 (1) _machineConfig                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _bootUserCode                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _bootKeypadUART                                       1     1      0    2066
                                             35 BANK0      1     1      0
                          _UART_Init
                  _keypadRoutineUART
 ---------------------------------------------------------------------------------
 (2) _keypadRoutineUART                                    1     1      0    1278
                                             22 BANK0      1     1      0
                       _readKeyboard
               _uartTransmitBlocking
 ---------------------------------------------------------------------------------
 (3) _uartTransmitBlocking                                 5     2      3     962
                                             17 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (2) _UART_Init                                            8     4      4     788
                                             31 BANK0      4     0      4
                                              0 BANK1      4     4      0
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     653
                                             17 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _bootKeypadPORTB                                      0     0      0     316
                      _keypadRoutine
 ---------------------------------------------------------------------------------
 (2) _keypadRoutine                                        1     1      0     316
                                             18 BANK0      1     1      0
                       _readKeyboard
 ---------------------------------------------------------------------------------
 (1) _bootKeypadAndComPort                                 0     0      0    6527
                        _CDC_Routine
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
           _keypadRoutine_StateBased
 ---------------------------------------------------------------------------------
 (2) _keypadRoutine_StateBased                             1     1      0     316
                                             18 BANK0      1     1      0
                       _readKeyboard
 ---------------------------------------------------------------------------------
 (1) _readKeyboard                                         1     1      0     316
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        1     1      0    1361
                                             25 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6    1070
                                             17 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (2) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_Initialize                                    1     1      0      31
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _CDC_Routine                                          0     0      0    4819
         _APP_DeviceCDCEmulatorTasks
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceCDCEmulatorTasks                           0     0      0    4819
                       _CDCTxService
                    _USART_getcUSART
                    _USART_putcUSART
                       _getsUSBUSART
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (4) _putUSBUSART                                          3     0      3     270
                                             17 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (4) _getsUSBUSART                                         4     1      3    2292
                                             28 BANK0      4     1      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USART_putcUSART                                      1     1      0      31
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _USART_getcUSART                                      1     1      0      37
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _CDCTxService                                         2     2      0    2189
                                             28 BANK0      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (5) _USBTransferOnePacket                                11     7      4    1988
                                             17 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _SYS_InterruptLow                                    17    17      0       0
                                              0 BANK0     17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _SYS_InterruptHigh                                   14    14      0   30810
                                             29 COMRAM    14    14      0
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (8) _USBDeviceTasks                                       1     1      0   30810
                                             28 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (9) i2_USBDeviceInit                                      1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (9) _USBWakeFromSuspend                                   0     0      0    3948
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (9) _USBSuspend                                           0     0      0    3948
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (9) _USBStallHandler                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _USBCtrlEPService                                     1     1      0   18310
                                             27 COMRAM     1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (10) _memcpy                                             11     5      6     410
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (10) _USBCtrlTrfSetupHandler                              0     0      0   16899
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (11) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (12) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (11) _USBCheckStdRequest                                  0     0      0   12859
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USBStdSetCfgHandler                                 1     1      0    4446
                                             21 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (10) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (12) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (12) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (12) _USBStdFeatureReqHandler                             6     6      0    4419
                                             21 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (9) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    3948
                                             13 COMRAM     8     2      6
    _APP_DeviceCDCEmulatorInitialize
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (10) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _APP_DeviceCDCEmulatorInitialize                     1     1      0    1256
                                             12 COMRAM     1     1      0
                          _CDCInitEP
                   _USART_Initialize
 ---------------------------------------------------------------------------------
 (11) _CDCInitEP                                           0     0      0    1187
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (12) i2_USBTransferOnePacket                             11     7      4     454
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (12) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (13) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (10) _USBCtrlTrfOutHandler                                0     0      0     500
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (11) _USBCtrlTrfRxService                                 2     2      0     500
                                             17 COMRAM     2     2      0
       _USART_mySetLineCodingHandler *
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (12) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _USBCtrlTrfInHandler                                 1     1      0     501
                                             17 COMRAM     1     1      0
       _USART_mySetLineCodingHandler *
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _USART_mySetLineCodingHandler                        4     4      0     386
                                             13 COMRAM     4     4      0
                   _USART_Initialize
                            ___lldiv
 ---------------------------------------------------------------------------------
 (13) ___lldiv                                            13     5      8     340
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (11) _USART_Initialize                                    1     1      0       1
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _bootKeypadAndComPort
     _CDC_Routine
       _APP_DeviceCDCEmulatorTasks
         _CDCTxService
           _USBTransferOnePacket
         _USART_getcUSART
         _USART_putcUSART
         _getsUSBUSART
           _USBTransferOnePacket
         _putUSBUSART
     _SYSTEM_Initialize
     _USBDeviceAttach
     _USBDeviceInit
       _memset
     _keypadRoutine_StateBased
       _readKeyboard
   _bootKeypadPORTB
     _keypadRoutine
       _readKeyboard
   _bootKeypadUART
     _UART_Init
       ___aldiv
     _keypadRoutineUART
       _readKeyboard
       _uartTransmitBlocking
   _bootUserCode
   _machineConfig
   _readKeyboard

 _SYS_InterruptLow (ROOT)

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USART_mySetLineCodingHandler *
           _USART_Initialize
           ___lldiv
         _USBCtrlTrfTxService *
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USART_mySetLineCodingHandler *
             _USART_Initialize
             ___lldiv
           _USBCtrlEPAllowStatusStage *
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCDCEmulatorInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 _USART_Initialize
               _USBCheckCDCRequest
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCDCEmulatorInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 _USART_Initialize
               _USBCheckCDCRequest
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCDCEmulatorInitialize
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USART_Initialize
             _USBCheckCDCRequest
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCDCEmulatorInitialize
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _USART_Initialize
           _USBCheckCDCRequest
       _memcpy
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCDCEmulatorInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USART_Initialize
         _USBCheckCDCRequest
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCDCEmulatorInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USART_Initialize
         _USBCheckCDCRequest
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCDCEmulatorInitialize
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USART_Initialize
       _USBCheckCDCRequest
     i2_USBDeviceInit
       i2_memset

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            3FF      0       0      23        0.0%
BIGRAMhh           280      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      6      86       7       52.3%
BIGRAMhl            C0      0       0      22        0.0%
BITBANK4            C0      0       0      12        0.0%
BANK4               C0      0       0      13        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     25      8E       5       88.8%
BITBANK5            80      0       0      14        0.0%
BANK5               80      0       0      15        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2B      57       1       92.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     16B      16        0.0%
DATA                 0      0     16B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Sun Dec 09 14:46:48 2018

                              _USB_SD_Ptr 0801                                        l13 2B90  
                                      l60 2996                               __CFG_BOR$ON 000000  
                                      bsr 000FE0                             _USBDeviceInit 0B6C  
                             __CFG_BORV$3 000000                        __size_of_CDCInitEP 006A  
                            __CFG_CP0$OFF 000000                              __CFG_CP1$OFF 000000  
                            __CFG_CP2$OFF 000000                              __CFG_CP3$OFF 000000  
    USER_USB_CALLBACK_EVENT_HANDLER@event 000E      USER_USB_CALLBACK_EVENT_HANDLER@pdata 0010  
                __end_of_USART_Initialize 2B88                                       l126 1CAE  
                                     l129 1CDE                                       l306 0BDA  
                                     l164 2B68               __end_of_USBStdGetDscHandler 11DA  
                                     l366 2A88                                       l367 2A86  
                                     l672 0FDA                                       l912 2434  
                                     l920 25EA                                       l914 2442  
                                     l667 0F88                                       l915 2452  
                                     _BDT 000400                                       l773 2BAE  
                                     l950 19BA                                       l942 1954  
                                     l927 2634                                       l944 1970  
                                     l937 1936                                       l929 263A  
                                     l946 1988                              __CFG_CPB$OFF 000000  
                            __CFG_CPD$OFF 000000                                       _UIE 000F69  
                                     _UIR 000F68                            ?_machineConfig 0001  
                              _USBSuspend 2A92                      USBStdSetCfgHandler@i 0016  
                                     prod 000FF3                                       tosl 000FFD  
                                     wreg 000FE8                            _USBDeviceTasks 130E  
            uartTransmitBlocking@numBytes 00DB                            _USBDeviceState 004E  
                   ??_USBCtrlTrfRxService 0012                  __size_ofi2_USBDeviceInit 014C  
                          ??_getsUSBUSART 00E7                  USBEnableEndpoint@options 0009  
                            __CFG_LVP$OFF 000000                              __CFG_WDT$OFF 000000  
            __end_of_uartTransmitBlocking 2052                USBConfigureEndpoint@handle 0007  
                                    l5203 122C                                      l5215 12BE  
                                    l5303 1000                                      l5311 1024  
                                    l5231 1E7A                                      l5313 1030  
                                    l5321 1054                                      l5233 1E82  
                                    l5241 1EE4                                      l5401 240A  
                                    l5331 1076                                      l5323 105E  
                                    l5251 2B6C                                      l5227 1E4E  
                                    l5333 109A                                      l5237 1EB2  
                                    l5405 2418                                      l5431 2468  
                                    l5503 1544                                      l5329 1072  
                                    l5409 2426                                      l5195 11F8  
                                    l5283 0F92                                      l5267 2B56  
                                    l5523 29B2                                      l5427 2462  
                                    l5277 0F7C                                      l5381 2A06  
                                    l5437 1FA4                                      l5295 0FDE  
                                    l5359 1D0A                                      l5543 0BBA  
                                    l5711 19FC                                      l5471 1460  
                                    l5447 1FE2                                      l5289 0FC6  
                                    l5377 1D64                                      l5369 1D40  
                                    l5385 2A18                                      l5393 23F0  
                                    l5617 25F8                                      l5801 298A  
                                    l5571 0C26                                      l5555 0BE4  
                                    l5539 0BB0                                      l5651 194E  
                                    l5635 263E                                      l5803 2BA4  
                                    l5483 14AC                                      l5459 2034  
                                    l5397 23FE                                      l5389 23E6  
                                    l5637 2648                                      l5485 14BC  
                                    l5477 147E                                      l5567 0C1C  
                                    l5495 1516                                      l5487 14C2  
                                    l5751 2530                                      _ADIE 007CEE  
                                    l5577 0C8C                                      l5681 19B4  
                                    l5841 2288                                      l5675 1992  
                                    l5659 195E                                      l5499 1528  
                                    l5755 2546                                      l5843 2290  
                                    l5851 22A8                                      l5845 2298  
                                    l5847 22A0                                      l5839 227A  
                                    l5689 19C8                                      l5699 19E0  
                                    l5787 2B0A                                      _LATA 000F89  
                                    _LATB 000F8A                                      _LATC 000F8B  
                                    u5040 1FEA                                      u5050 1FF8  
                                    u5042 1FEC                                      u5052 1FFA  
                                    u5065 202E                                      u5066 2030  
                                    _PEIE 007F96                                      u5405 2378  
                                    u5507 2260                                      _RCIF 007CF5  
                                    u5517 297A                                      u5527 2504  
                                    u5537 1FD6                                      u5547 2612  
                                    u5557 199A                     ??_USBCtrlTrfTxService 0001  
                                    u5497 2238                                      _UCFG 000F6F  
                                    _UEP0 000F70                                      _UEP1 000F71  
                                    _UEIE 000F6B                                      _UEIR 000F6A  
                                    _UCON 000F6D                                      _UART 0054  
                                    _TRMT 007D61                                      _TXIF 007CF4  
                         _CDCDataInHandle 0033    USBStdFeatureReqHandler@current_ep_data 0019  
                                    _pDst 008C                                      _main 222C  
                ??i2_USBTransferOnePacket 0005                                      _uart 00A3  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    fsr2h 000FDA                                      fsr0l 000FE9  
                                    indf1 000FE7                               _BaudRateGen 007A  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                           _USBDeviceAttach 2A62  
                                    btemp 0058                                      prodh 000FF4  
                                    prodl 000FF3                                      start 00A6  
                           __CFG_IESO$OFF 000000                            ??_bootUserCode 00D9  
              __end_of_USBCheckStdRequest 1934                           _USART_putcUSART 2B9A  
                  ??_USBCtrlTrfOutHandler 0014                             __CFG_MCLRE$ON 000000  
                            ___param_bank 000000                 ??_USBStdFeatureReqHandler 0016  
           ?_USART_mySetLineCodingHandler 0001                  ??_USBStdGetStatusHandler 0001  
                          ?_USBDeviceInit 0001                             __CFG_PLLDIV$5 000000  
                          __CFG_CCP2MX$ON 000000                           __end_of___aldiv 1556  
                                   ?_main 0001         __size_of_USBCtrlEPServiceComplete 00F4  
                         __end_of___lldiv 24EE                    __end_of_USBDeviceTasks 143C  
               ?_USBCtrlEPServiceComplete 0001                                     i2l306 0D34  
                                   i2l317 1336                                     i2l502 1716  
                                   i2l327 13C2                                     i2l328 1438  
                                   i2l329 13D2                                     i2l531 08F6  
                                   i2l516 1852                                     i2l621 1C78  
                                   i2l525 18B6                                     i2l550 0AD8  
                                   i2l454 1EF8                                     i2l391 17C8  
                                   i2l457 1F86                                     i2l458 1F08  
                                   i2l619 1C34                                     i2l459 1F0E  
                                   i2l467 291A                                     _UADDR 000F6E  
                                   _RCREG 000FAE                      __size_of_CDC_Routine 0012  
                                   _SPBRG 000FAF                             __CFG_USBDIV$2 000000  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _USTAT 000F6C  
                                   _TXREG 000FAD                             __CFG_PWRT$OFF 000000  
                           __CFG_WRT0$OFF 000000        __size_of_USBCtrlEPAllowStatusStage 00C4  
                           __CFG_WRT1$OFF 000000                             __CFG_WRT2$OFF 000000  
                           __CFG_WRT3$OFF 000000               ?_APP_DeviceCDCEmulatorTasks 0001  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000                        __size_of_UART_Init 008C  
         __end_of_USBCtrlEPAllowDataStage 2196                                     _sd000 08C6  
                                   _sd001 0880                                     _sd002 084C  
                           __CFG_WRTB$OFF 000000            ?_USBIncrement1msInternalTimers 0001  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
                          __CFG_EBTRB$OFF 000000                                i2memset@p1 0001  
                 __end_of_USART_getcUSART 2B72                                     pclath 000FFA  
                                   tablat 000FF5                  __end_of_SYS_InterruptLow 00A6  
                                   plusw2 000FDB                         __end_of_CDCInitEP 26BC  
                                   status 000FD8                          __end_ofi2_memset 2AEE  
                        USART_getcUSART@c 00D9                           putUSBUSART@data 00D9  
      USART_mySetLineCodingHandler@dwBaud 000E              __size_of_USBStdSetCfgHandler 00E2  
                         __initialization 2722             __size_of_bootKeypadAndComPort 0026  
                            __end_of_main 22C0                     _control_signal_bitmap 003B  
               __size_of_USBCtrlEPService 0096                           ??_machineConfig 00D9  
                        ??_bootKeypadUART 00EB                                    ??_main 00EC  
                __size_of_bootKeypadPORTB 0006                             __activetblptr 000002  
                         ?_USBDeviceTasks 0001                               ?_USBSuspend 0001  
                              _NextUSBOut 004C                             ?_readKeyboard 0001  
                            _cdc_mem_type 003C                   __end_of_USBDeviceAttach 2A92  
                                  _ADCON1 000FC1                          _CDCDataOutHandle 008A  
                         getsUSBUSART@len 00E6                    SYSTEM_Initialize@state 00D9  
                   __size_of_CDCTxService 013C                                    i2l1323 24DC  
                                  i2l4111 0EEE                                    i2l4121 0F52  
                                  i2l4041 1772                                    i2l4107 0ED4  
                                  i2l4301 16FC                                    i2l3501 270C  
                                  i2l4133 185C                                    i2l4061 17EE  
                                  i2l4311 1748                                    i2l3415 2322  
                                  i2l4135 1862                                    i2l3425 292E  
                                  i2l4145 1884                                    i2l4137 1868  
                                  i2l4147 188A                                    i2l4163 18F0  
                                  i2l4219 28AA                                    i2l4227 28CA  
                                  i2l3613 248E                                    i2l3605 1BCE  
                                  i2l4309 1744                                    i2l3429 293C  
                                  i2l3445 1596                                    i2l3437 156C  
                                  i2l4149 1890                                    i2l3615 249A  
                                  i2l4095 0E76                                    i2l3535 1C5A  
                                  i2l3527 1C22                                    i2l3519 1C02  
                                  i2l3543 1C82                                    i2l3631 2ACC  
                                  i2l4159 18D2                                    i2l3625 24CE  
                                  i2l3617 249E                                    i2l4281 1696  
                                  i2l4089 0E52                                    i2l3457 1614  
                                  i2l3553 2794                                    i2l3801 11C2  
                                  i2l3721 2146                                    i2l4283 169A  
                                  i2l4267 2838                                    i2l4259 27F0  
                                  i2l3491 26EC                                    i2l3547 2788  
                                  i2l3635 2ADC                                    i2l4531 29EE  
                                  i2l3573 1B1C                                    i2l3661 1DB2  
                                  i2l3549 278E                                    i2l3813 1F2E  
                                  i2l3741 1A5A                                    i2l3725 2162  
                                  i2l4533 29F0                                    i2l4295 16DC  
                                  i2l3495 26F4                                    i2l3911 0B46  
                                  i2l3903 0AF4                                    i2l3823 1F6E  
                                  i2l3751 1A8E                                    i2l3577 1B26  
                                  i2l3841 08F2                                    i2l3745 1A62  
                                  i2l4801 0D7C                                    i2l3587 1B56  
                                  i2l3595 1B8E                                    i2l3597 1B96  
                                  i2l3909 0B3A                                    i2l3861 09B8  
                                  i2l3855 096C                                    i2l3775 10B0  
                                  i2l3767 1AD8                                    i2l4807 0DD8  
                                  i2l4903 13CA                                    i2l4569 2918  
                                  i2l3883 0A66                                    i2l3867 09DE  
                                  i2l3795 11B2                                    i2l3787 1158  
                                  i2l3779 10C8                                    i2l4587 2216  
                                  i2l4923 1418                                    i2l3893 0AB2  
                                  i2l3877 0A30                                    i2l3797 11BA  
                                  i2l3789 1160                                    i2l4589 221C  
                                  i2l4773 0D18                                    i2l4925 1434  
                                  i2l4917 13F8                                    i2l4845 132E  
                                  i2l4837 1322                                    i2l3895 0ABE  
                                  i2l3879 0A4C                                    i2l4871 1376  
                                  i2l4785 0D3E                                    i2l4769 0D10  
                                  i2l4865 1352                                    i2l4883 138A  
                                  i2l4859 1348                                    i2l4797 0D74  
                                  i2l4897 13B8                                    i2l4889 1394  
                                  i2l5893 27AC                                    i2l5895 27DC  
                 __end_of_USART_putcUSART 2BA4                             CDCTxService@i 00E4  
                                  _SPBRGH 000FB0                                    _TRISC6 007CA6  
                                  _TRISC7 007CA7                  i2USBTransferOnePacket@ep 0009  
                       ??i2_USBDeviceInit 0009           __size_ofi2_USBTransferOnePacket 0102  
                          __CFG_VREGEN$ON 000000                         _shortPacketStatus 0048  
                          __CFG_XINST$OFF 000000                           USBDeviceTasks@i 001D  
                       __end_of_UART_Init 23E0               USBStdFeatureReqHandler@pUEP 0017  
                USBTransferOnePacket@data 00DA                USBCtrlTrfInHandler@lastDTS 0012  
                         ??_USBDeviceInit 00E1                              ?_putUSBUSART 00D9  
                               ??___aldiv 00E1                            __CFG_STVREN$ON 000000  
                               ??___lldiv 0009                      __end_of_getsUSBUSART 1EEA  
                       _USBEnableEndpoint 291E           __size_of_USBStdGetStatusHandler 00BA  
                                  _memcpy 2898                      _uartTransmitBlocking 1FA4  
                                  _memset 29FC                                    clear_0 275A  
                                  clear_1 2766                                    clear_2 2772  
                      ?_USBEnableEndpoint 0009            ??_USART_mySetLineCodingHandler 000E  
           __size_of_USBTransferOnePacket 0134                            ??_readKeyboard 00D9  
                            __pdataCOMRAM 0054                              _CDCTxService 0F62  
                            __mediumconst 0000                      __end_of_bootUserCode 2BB0  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                       ??_USBEnableEndpoint 000A  
                          _RS232_Out_Data 0100                               _CtrlTrfData 000438  
                        ?_USART_getcUSART 0001                      _controlTransferState 0047  
                       _SYSTEM_Initialize 2990                                __accesstop 0060  
                 __end_of__initialization 2778                           __CFG_PBADEN$OFF 000000  
                  __size_of_keypadRoutine 0070                        ?_SYSTEM_Initialize 0001  
                           ___rparam_used 000001                  __size_of_USBStallHandler 0042  
                     __size_of_USBSuspend 0030                            __pcstackCOMRAM 0001  
               __end_of_USBEnableEndpoint 295A                             __end_of_sd000 08CA  
                           __end_of_sd001 08B4                             __end_of_sd002 0880  
                            __pidataBANK0 2BB0                       ??_SYSTEM_Initialize 00D9  
        __size_of_USBCtrlEPAllowDataStage 009E                     ?_uartTransmitBlocking 00D9  
           __size_of_USBConfigureEndpoint 0094               __end_of_USBCtrlTrfInHandler 174E  
                  i2_USBTransferOnePacket 1556   __end_of_APP_DeviceCDCEmulatorInitialize 2722  
__size_of_APP_DeviceCDCEmulatorInitialize 0066         ??_APP_DeviceCDCEmulatorInitialize 000D  
        ?_APP_DeviceCDCEmulatorInitialize 0001           _APP_DeviceCDCEmulatorInitialize 26BC  
                       ?_USART_Initialize 0001                                _cdc_notice 00AF  
                               ?i2_memset 0001                                _cdc_rx_len 0090  
                              _cdc_tx_len 003D                        ??_USART_Initialize 0001  
                ??_USBCtrlTrfSetupHandler 001C                         ??_bootKeypadPORTB 00DB  
                 _USBTicksSinceSuspendEnd 0091                            _USB_Out_Buffer 0140  
                        ?_USBDeviceAttach 0001                 __end_of_SYSTEM_Initialize 29C6  
                  _USBStdGetStatusHandler 1EEA                                __pbssBANK0 0060  
                              __pbssBANK1 0100                          ?_USART_putcUSART 0001  
             __size_of_USBWakeFromSuspend 0036                  _keypadRoutine_StateBased 1934  
                             _pBDTEntryIn 006E          __end_of_USBCtrlEPServiceComplete 1842  
             __size_of_USBCheckCDCRequest 00D0                      USBCtrlTrfRxService@i 0012  
                                 ?_memcpy 0001                                   ?_memset 00D9  
                              _device_dsc 08B4                          _USBCtrlEPService 2196  
                              _ep_data_in 0087                             _keypadRoutine 25E2  
             __end_of_USBCtrlTrfRxService 0F62                        _USBCheckStdRequest 1842  
                       _configDescriptor1 0809                                _arr_dataRX 0093  
                                 _RS232cp 004A                                ??i2_memset 0007  
             __end_of_USBCtrlTrfTxService 1BD6                       _USBStdSetCfgHandler 1A18  
                     ?_USBCheckStdRequest 0001              __size_of_USBStdGetDscHandler 013C  
                                 _UIEbits 000F69                                   _UIRbits 000F68  
                           _cdc_trf_state 004D                         ?_SYS_InterruptLow 0001  
                      ??_SYS_InterruptLow 00C8                                   _pCDCDst 007E  
                    __end_of_readKeyboard 246C                                   _pCDCSrc 0081  
                   __size_of_getsUSBUSART 00BC                                   __Hparam 0000  
         ??_USBIncrement1msInternalTimers 0001                      ?_USBStdSetCfgHandler 0001  
                               _CDCInitEP 2652                                   __Lparam 0000  
              __size_of_USBEnableEndpoint 003C                      ??_USBCheckStdRequest 001C  
                                 ___aldiv 143C                    ??_uartTransmitBlocking 00DC  
           __size_of_USBCtrlTrfOutHandler 005C                                   ___lldiv 246C  
                        ??_USBDeviceTasks 001D                         ??_USBStallHandler 0001  
                            __psmallconst 0800                                   _dataEnd 00ED  
                           ??_CDC_Routine 00E8                                   _dataOut 0039  
                    __size_of_putUSBUSART 0020                                   __pcinit 2722  
                      getsUSBUSART@buffer 00E4                           __size_of_memcpy 0044  
                         __size_of_memset 0034                            ?_keypadRoutine 0001  
               __end_of_configDescriptor1 084C                                   __ramtop 0800  
                        USART_putcUSART@c 00D9                     __size_of_bootUserCode 0002  
                                 __ptext0 222C                                   __ptext1 2A30  
                                 __ptext2 2BAE                                   __ptext3 295A  
                                 __ptext4 24EE                                   __ptext5 1FA4  
                                 __ptext6 2354                                   __ptext7 143C  
                                 __ptext8 2BA4                                   __ptext9 25E2  
                                 _inPipes 0068               _USBDeferOUTDataStagePackets 003E  
                            ??_USBSuspend 0016                          ___aldiv@dividend 00D9  
            __end_of_bootKeypadAndComPort 2B14                              _LastRS232Out 004B  
                         i2_USBDeviceInit 0CD6                          i2USBDeviceInit@i 0009  
                      __end_of_USB_CD_Ptr 0809                __size_of_SYSTEM_Initialize 0036  
         __size_of_USBCtrlTrfSetupHandler 00A6                            __pintcode_body 2568  
                    end_of_initialization 2778                              _getsUSBUSART 1E2E  
                      __end_of_USB_SD_Ptr 0807                                   memcpy@d 0007  
                                 memcpy@n 0005                                   memcpy@s 0009  
                     _pBDTEntryEP0OutNext 0035                                   memset@c 00DB  
                                 memset@n 00DD                                   memset@p 00DF  
                           __Lmediumconst 0000                                   int_func 2568  
                         _USB1msTickCount 002C           _dummy_encapsulated_cmd_response 00B9  
                ?_USBStdFeatureReqHandler 0001                     ??_USBStdSetCfgHandler 0016  
                         ___lldiv@divisor 0005                                ?_CDCInitEP 0001  
                         ___lldiv@counter 000D                              _bootUserCode 2BAE  
                      __end_of_USBSuspend 2AC2                         USART_Initialize@c 0001  
                 _USBCtrlEPAllowDataStage 20F8                                 _RCSTAbits 000FAB  
                        ___aldiv@quotient 00E3                                   postdec1 000FE5  
                                 postdec2 000FDD                                   postinc0 000FEE  
                                 postinc2 000FDE                  _USBCtrlEPServiceComplete 174E  
                               _UART_Init 2354                _USBStatusStageEnabledFlag1 0041  
              _USBStatusStageEnabledFlag2 0040                        USBEnableEndpoint@p 000A  
                               _PORTAbits 000F80                                 _PORTBbits 000F81  
                   __end_of_machineConfig 2A62                       __end_of_CDC_Routine 2B9A  
                               _TRISCbits 000F94                        _BothEP0OutUOWNsSet 0044  
               USBConfigureEndpoint@EPNum 0006                ?_USBCtrlEPAllowStatusStage 0001  
     USER_USB_CALLBACK_EVENT_HANDLER@size 0012                                 _USTATcopy 0052  
            __end_of_USBTransferOnePacket 130E                                 _TXSTAbits 000FAC  
                       putUSBUSART@length 00DB                    _USBCtrlTrfSetupHandler 2052  
                         ??_keypadRoutine 00DA                   ?i2_USBTransferOnePacket 0001  
                   __end_of_USBDeviceInit 0CD6     __end_of_USBIncrement1msInternalTimers 2B3A  
  __size_of_USBIncrement1msInternalTimers 0026             _USBIncrement1msInternalTimers 2B14  
                              ?_UART_Init 00E7                           _bootKeypadPORTB 2BA4  
                           __pidataCOMRAM 2BAA                   __end_ofi2_USBDeviceInit 0E22  
                               i2memset@c 0003                                 i2memset@n 0005  
                               i2memset@p 0007                            __end_of_memcpy 28DC  
                          __end_of_memset 2A30                         _USBBusIsSuspended 0092  
                     start_initialization 2722                   ?_USBStdGetStatusHandler 0001  
           USBCtrlTrfRxService@byteToRead 0013                               _cdc_data_rx 000540  
                             _cdc_data_tx 000500                ??_keypadRoutine_StateBased 00DA  
                       __size_ofi2_memset 002C              __end_of_USBConfigureEndpoint 2354  
         __end_of_USBStdFeatureReqHandler 0B6C                   __size_of_bootKeypadUART 0036  
                           Keypad@dataEnd 0057                     __size_of_readKeyboard 008C  
       __end_of_USBCtrlEPAllowStatusStage 1E2E                             Keypad@dataOut 0051  
                __end_of_USBCtrlEPService 222C                 __size_of_USART_Initialize 0016  
    __end_of_USART_mySetLineCodingHandler 2898     __size_of_USART_mySetLineCodingHandler 005A  
            _USART_mySetLineCodingHandler 283E                 ??_USBCtrlEPAllowDataStage 0002  
                             ??_CDCInitEP 000D                            USBDeviceInit@i 00E1  
                __size_of_USART_getcUSART 0018                    _pBDTEntryEP0OutCurrent 0037  
                 USBTransferOnePacket@dir 00D9                   USBTransferOnePacket@len 00DC  
          __end_ofi2_USBTransferOnePacket 1658                      _bootKeypadAndComPort 2AEE  
                     _USBStdGetDscHandler 109E                               __pdataBANK0 00ED  
                        __CFG_LPT1OSC$OFF 000000                                  ??_memcpy 0007  
                                ??_memset 00DF                               _CDC_Routine 2B88  
        uartTransmitBlocking@numTransmits 00DD                    _USBActiveConfiguration 0053  
          __end_of_USBStdGetStatusHandler 1FA4                               __pbssCOMRAM 002C  
                            _readKeyboard 23E0                             __pcstackBANK0 00C8  
                           __pcstackBANK1 0180              __size_of_USBCtrlTrfInHandler 00F6  
            ??_APP_DeviceCDCEmulatorTasks 00E8                      ?_USBStdGetDscHandler 0001  
                       _keypadRoutineUART 24EE                __end_of_USBWakeFromSuspend 29FC  
                         _USBStallHandler 28DC                          _lastTransmission 008E  
                      ?_keypadRoutineUART 0001                              _pBDTEntryOut 0074  
              __end_of_USBCheckCDCRequest 1CA6                  __size_of_USBDeviceAttach 0030  
                 __end_of_bootKeypadPORTB 2BAA                     ?_bootKeypadAndComPort 0001  
                      _UARTinterruptState 003A                  __size_of_USART_putcUSART 000A  
                               __pintcode 0008                       ??_keypadRoutineUART 00DE  
                           UART_Init@baud 00E7                                  ?___aldiv 00D9  
                                ?___lldiv 0001                               __pintcodelo 0018  
                             ??_UART_Init 0180                 __size_of_SYS_InterruptLow 008E  
     __size_of_APP_DeviceCDCEmulatorTasks 00C4                          ?i2_USBDeviceInit 0001  
                    _USBTransferOnePacket 11DA                               __smallconst 0800  
            __end_of_USBCtrlTrfOutHandler 283E                     ??_USBStdGetDscHandler 0001  
                             _ep_data_out 0084                 __end_of_keypadRoutineUART 2568  
            __size_of_USBCtrlTrfRxService 0140             USBConfigureEndpoint@direction 0001  
                         ___aldiv@divisor 00DD              __size_of_USBCtrlTrfTxService 00DC  
                         ___aldiv@counter 00E1                                  _LATAbits 000F89  
              ??_USBCtrlEPServiceComplete 0002                                  _IPR2bits 000FA2  
                                _PIE2bits 000FA0                                  i2u270_40 1152  
                                i2u270_47 1148                                  i2u247_40 1B7E  
                                i2u326_48 0F3E                                  i2u247_47 1B74  
                                i2u351_48 1730                                  i2u272_40 11A6  
                                i2u272_47 119C                                  i2u249_40 1BBE  
                                _PIR1bits 000F9E                                  _KPDState 0056  
                                i2u249_47 1BB4                                  _PIR2bits 000FA1  
                                i2u269_40 111E                                  i2u269_47 1114  
                                _RCONbits 000FD0                             ??_putUSBUSART 00DC  
                        __CFG_WDTPS$32768 000000                                  _UEP0bits 000F70  
              _USBDeferINDataStagePackets 003F               __size_of_USBCheckStdRequest 00F2  
                                _UCONbits 000F6D          APP_DeviceCDCEmulatorInitialize@i 000D  
                    _USBConfigureEndpoint 22C0             __size_of_uartTransmitBlocking 00AE  
                       ??_USART_getcUSART 00D9          __size_of_USBStdFeatureReqHandler 02A0  
                              _ADCON0bits 000FC2                     ?_USBTransferOnePacket 00D9  
                       _SYS_InterruptHigh 0008                             ?_CDCTxService 0001  
                            _RemoteWakeup 0046                                  i2_memset 2AC2  
                      ?_SYS_InterruptHigh 0001                        _RS232_Out_Data_Rdy 0049  
        __end_of_keypadRoutine_StateBased 1A18                   __end_of_USBStallHandler 291E  
                          _bootKeypadUART 295A                                 copy_data0 2748  
             ??_USBCtrlEPAllowStatusStage 0001               __end_of_USBStdSetCfgHandler 1AFA  
                     ??_SYS_InterruptHigh 001E                             readKeyboard@i 00D9  
                        _USART_Initialize 2B72                        __end_of_device_dsc 08C6  
                 ?_USBCtrlTrfSetupHandler 0001                    ??_bootKeypadAndComPort 00E8  
                 USBStdGetStatusHandler@p 0002                                  __Hrparam 0000  
                               memcpy@tmp 000B                                  __Lrparam 0000  
                        ?_bootKeypadPORTB 0001                    USBTransferOnePacket@ep 00E1  
                                _SetupPkt 000430                     ?_USBConfigureEndpoint 0001  
                        __size_of___aldiv 011A                         ??_USBDeviceAttach 00D9  
                        __size_of___lldiv 0082                 __end_of_SYS_InterruptHigh 25E2  
                       ??_USART_putcUSART 00D9                       __end_of_putUSBUSART 2B5A  
                             _line_coding 00C1                            ??_CDCTxService 00E4  
      __end_of_APP_DeviceCDCEmulatorTasks 1D6A                _APP_DeviceCDCEmulatorTasks 1CA6  
                  __end_of_bootKeypadUART 2990                   __size_of_USBDeviceTasks 012E  
                             _keypadFlags 0030                                  __ptext10 2AEE  
                                __ptext11 1934                                  __ptext20 1E2E  
                                __ptext12 23E0                                  __ptext21 2B9A  
                                __ptext13 0B6C                                  __ptext30 2A92  
                                __ptext22 2B5A                                  __ptext14 29FC  
                                __ptext31 28DC                                  __ptext23 0F62  
                                __ptext15 2A62                                  __ptext40 2AC2  
                                __ptext32 2B14                                  __ptext24 11DA  
                                __ptext16 2990                                  __ptext41 1EEA  
                                __ptext33 2196                                  __ptext17 2B88  
                                __ptext50 22C0                                  __ptext42 109E  
                                __ptext34 2898                                  __ptext18 1CA6  
                                __ptext51 27E2                                  __ptext43 08CC  
                                __ptext35 2052                                  __ptext27 130E  
                                __ptext19 2B3A                                  __ptext52 0E22  
                                __ptext44 2786                                  __ptext36 174E  
                                __ptext28 0CD6                                  __ptext53 1D6A  
                                __ptext45 1BD6                                  __ptext37 20F8  
                                __ptext29 29C6                                  __ptext54 1658  
                                __ptext46 26BC                                  __ptext38 1842  
                                __ptext55 1AFA                                  __ptext47 2652  
                                __ptext39 1A18                                  __ptext56 283E  
                                __ptext48 1556                                  __ptext57 246C  
                                __ptext49 291E                                  __ptext58 2B72  
                                __ptext59 0000                __size_of_keypadRoutineUART 007A  
          __end_of_USBCtrlTrfSetupHandler 20F8                             __size_of_main 0094  
                       ?_USBCtrlEPService 0001                        ??_USBCtrlEPService 001C  
                  __size_of_machineConfig 0032                       _USBCtrlTrfInHandler 1658  
                                _outPipes 0060                      _USBCtrlTrfOutHandler 27E2  
                                int$flags 0058                 _USBCtrlEPAllowStatusStage 1D6A  
                                main@data 0185                                  main@boot 0184  
                        _SYS_InterruptLow 0018                    ??_USBTransferOnePacket 00DD  
                            ?_CDC_Routine 0001                     __end_of_keypadRoutine 2652  
                   __CFG_CPUDIV$OSC3_PLL4 000000                 _USBDeferStatusStagePacket 0042  
                CDCTxService@byte_to_send 00E5                                _INTCONbits 000FF2  
                    ?_USBCtrlTrfInHandler 0001                                  memcpy@d1 0001  
                                memcpy@s1 0003             USBCtrlTrfTxService@byteToSend 0001  
                         ?_bootKeypadUART 0001                                  memset@p1 00D9  
                        ?_USBStallHandler 0001                  USBStdFeatureReqHandler@p 001A  
                                intlevel1 0000                                  intlevel2 0000  
                  __size_of_USBDeviceInit 016A   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 27E2  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 005C         ??_USER_USB_CALLBACK_EVENT_HANDLER 0014  
        ?_USER_USB_CALLBACK_EVENT_HANDLER 000E           _USER_USB_CALLBACK_EVENT_HANDLER 2786  
            i2USBTransferOnePacket@handle 000A                          ___lldiv@dividend 0001  
                              _OSCCONbits 000FD3                i2USBTransferOnePacket@data 0002  
                  ??_USBConfigureEndpoint 0002                     ?_USBCtrlTrfOutHandler 0001  
       __size_of_keypadRoutine_StateBased 00E4                 ?_keypadRoutine_StateBased 0001  
                             _putUSBUSART 2B3A                       _USBCtrlTrfRxService 0E22  
                      _USBWakeFromSuspend 29C6                   _USBStdFeatureReqHandler 08CC  
                      _USBCheckCDCRequest 1BD6                       _USBCtrlTrfTxService 1AFA  
              __size_of_SYS_InterruptHigh 25DA                       __CFG_FOSC$INTOSC_HS 000000  
                uartTransmitBlocking@data 00D9                       ?_USBWakeFromSuspend 0001  
                        ___lldiv@quotient 0009                     ??_USBCtrlTrfInHandler 0012  
                           _machineConfig 2A30                     _USBAlternateInterface 004F  
                     ?_USBCheckCDCRequest 0001                              ___aldiv@sign 00E2  
               i2USBTransferOnePacket@dir 0001                 i2USBTransferOnePacket@len 0004  
                     USBEnableEndpoint@ep 000C                           _endpoint_number 0045  
                    ?_USBCtrlTrfRxService 0001                             ?_getsUSBUSART 00E4  
                ?_USBCtrlEPAllowDataStage 0001                      ?_USBCtrlTrfTxService 0001  
            _USBStatusStageTimeoutCounter 0043                      ??_USBWakeFromSuspend 0016  
              USBTransferOnePacket@handle 00E2                           _USART_getcUSART 2B5A  
                    __end_of_CDCTxService 109E                      ??_USBCheckCDCRequest 0001  
                              _USB_CD_Ptr 0807                             ?_bootUserCode 0001  
