

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Apr 06 21:32:56 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1,inline
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1,inline
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    44  0000                     
    45                           ; Version 2.05
    46                           ; Generated 20/12/2018 GMT
    47                           ; 
    48                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC18F4620 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     
    80                           	psect	smallconst
    81  001000                     __psmallconst:
    82                           	opt callstack 0
    83  001000  00                 	db	0
    84  001001                     _keys:
    85                           	opt callstack 0
    86  001001  31                 	db	49
    87  001002  32                 	db	50
    88  001003  33                 	db	51
    89  001004  41                 	db	65
    90  001005  34                 	db	52
    91  001006  35                 	db	53
    92  001007  36                 	db	54
    93  001008  42                 	db	66
    94  001009  37                 	db	55
    95  00100A  38                 	db	56
    96  00100B  39                 	db	57
    97  00100C  43                 	db	67
    98  00100D  2A                 	db	42
    99  00100E  30                 	db	48
   100  00100F  23                 	db	35
   101  001010  44                 	db	68
   102  001011  00                 	db	0
   103  001012                     __end_of_keys:
   104                           	opt callstack 0
   105  001012                     _happynewyear:
   106                           	opt callstack 0
   107  001012  1E                 	db	30
   108  001013  1A                 	db	26
   109  001014  15                 	db	21
   110  001015  00                 	db	0
   111  001016  06                 	db	6
   112  001017  04                 	db	4
   113  001018  13                 	db	19
   114  001019                     __end_of_happynewyear:
   115                           	opt callstack 0
   116  001019                     _LCD_LINE4_ADDR:
   117                           	opt callstack 0
   118  001019  50                 	db	80
   119  00101A                     __end_of_LCD_LINE4_ADDR:
   120                           	opt callstack 0
   121  00101A                     _LCD_LINE3_ADDR:
   122                           	opt callstack 0
   123  00101A  10                 	db	16
   124  00101B                     __end_of_LCD_LINE3_ADDR:
   125                           	opt callstack 0
   126  00101B                     _LCD_LINE1_ADDR:
   127                           	opt callstack 0
   128  00101B  00                 	db	0
   129  00101C                     __end_of_LCD_LINE1_ADDR:
   130                           	opt callstack 0
   131  00101C                     _LCD_SIZE_VERT:
   132                           	opt callstack 0
   133  00101C  04                 	db	4
   134  00101D                     __end_of_LCD_SIZE_VERT:
   135                           	opt callstack 0
   136  00101D                     _LCD_SIZE_HORZ:
   137                           	opt callstack 0
   138  00101D  10                 	db	16
   139  00101E                     __end_of_LCD_SIZE_HORZ:
   140                           	opt callstack 0
   141  00101E  40                 	db	64
   142  00101F                     __end_of_LCD_LINE2_ADDR:
   143                           	opt callstack 0
   144  0000                     _LATDbits	set	3980
   145  0000                     _INTCONbits	set	4082
   146  0000                     _SSPBUF	set	4041
   147  0000                     _SSPCON2bits	set	4037
   148  0000                     _SSPCON1	set	4038
   149  0000                     _SSPADD	set	4040
   150  0000                     _TRISCbits	set	3988
   151  0000                     _SSPCON1bits	set	4038
   152  0000                     _SSPCON2	set	4037
   153  0000                     _SSPSTAT	set	4039
   154  0000                     _TRISD	set	3989
   155  0000                     _LATD	set	3980
   156  00101F                     STR_1:
   157  00101F  25                 	db	37
   158  001020  30                 	db	48	;'0'
   159  001021  32                 	db	50	;'2'
   160  001022  68                 	db	104	;'h'
   161  001023  68                 	db	104	;'h'
   162  001024  78                 	db	120	;'x'
   163  001025  2F                 	db	47
   164  001026  25                 	db	37
   165  001027  30                 	db	48	;'0'
   166  001028  32                 	db	50	;'2'
   167  001029  68                 	db	104	;'h'
   168  00102A  68                 	db	104	;'h'
   169  00102B  78                 	db	120	;'x'
   170  00102C  2F                 	db	47
   171  00102D  25                 	db	37
   172  00102E  30                 	db	48	;'0'
   173  00102F  32                 	db	50	;'2'
   174  001030  68                 	db	104	;'h'
   175  001031  68                 	db	104	;'h'
   176  001032  78                 	db	120	;'x'
   177  001033  00                 	db	0
   178  001034                     STR_2:
   179  001034  25                 	db	37
   180  001035  30                 	db	48	;'0'
   181  001036  32                 	db	50	;'2'
   182  001037  78                 	db	120	;'x'
   183  001038  3A                 	db	58	;':'
   184  001039  25                 	db	37
   185  00103A  30                 	db	48	;'0'
   186  00103B  32                 	db	50	;'2'
   187  00103C  78                 	db	120	;'x'
   188  00103D  3A                 	db	58	;':'
   189  00103E  25                 	db	37
   190  00103F  30                 	db	48	;'0'
   191  001040  32                 	db	50	;'2'
   192  001041  78                 	db	120	;'x'
   193  001042  00                 	db	0
   194  001043                     STR_7:
   195  001043  68                 	db	104	;'h'
   196  001044  68                 	db	104	;'h'
   197  001045  58                 	db	88	;'X'
   198  001046  00                 	db	0
   199  0000                     
   200                           ; #config settings
   201  001047  00                 	db	0	; dummy byte at the end
   202  0000                     
   203                           	psect	cinit
   204  001E70                     __pcinit:
   205                           	opt callstack 0
   206  001E70                     start_initialization:
   207                           	opt callstack 0
   208  001E70                     __initialization:
   209                           	opt callstack 0
   210                           
   211                           ; Clear objects allocated to BANK0 (36 bytes)
   212  001E70  EE00  F080         	lfsr	0,__pbssBANK0
   213  001E74  0E24               	movlw	36
   214  001E76                     clear_0:
   215  001E76  6AEE               	clrf	postinc0,c
   216  001E78  06E8               	decf	wreg,f,c
   217  001E7A  E1FD               	bnz	clear_0
   218                           
   219                           ; Clear objects allocated to COMRAM (4 bytes)
   220  001E7C  6A7F               	clrf	(__pbssCOMRAM+3)& (0+255),c
   221  001E7E  6A7E               	clrf	(__pbssCOMRAM+2)& (0+255),c
   222  001E80  6A7D               	clrf	(__pbssCOMRAM+1)& (0+255),c
   223  001E82  6A7C               	clrf	__pbssCOMRAM& (0+255),c
   224  001E84                     end_of_initialization:
   225                           	opt callstack 0
   226  001E84                     __end_of__initialization:
   227                           	opt callstack 0
   228  001E84  0E00               	movlw	low (__Lmediumconst shr (0+16))
   229  001E86  6EF8               	movwf	tblptru,c
   230  001E88  0100               	movlb	0
   231  001E8A  EFD3  F00B         	goto	_main	;jump to C main() function
   232                           
   233                           	psect	bssCOMRAM
   234  00007C                     __pbssCOMRAM:
   235                           	opt callstack 0
   236  00007C                     _prec:
   237                           	opt callstack 0
   238  00007C                     	ds	2
   239  00007E                     _flags:
   240                           	opt callstack 0
   241  00007E                     	ds	2
   242                           
   243                           	psect	bssBANK0
   244  000080                     __pbssBANK0:
   245                           	opt callstack 0
   246  000080                     _nout:
   247                           	opt callstack 0
   248  000080                     	ds	2
   249  000082                     _width:
   250                           	opt callstack 0
   251  000082                     	ds	2
   252  000084                     _dbuf:
   253                           	opt callstack 0
   254  000084                     	ds	32
   255                           
   256                           	psect	cstackCOMRAM
   257  000001                     __pcstackCOMRAM:
   258                           	opt callstack 0
   259  000001                     ??_I2C_Master_Wait:
   260  000001                     ?_strlen:
   261                           	opt callstack 0
   262  000001                     ?_isupper:
   263                           	opt callstack 0
   264  000001                     ?_isalpha:
   265                           	opt callstack 0
   266  000001                     ?_isdigit:
   267                           	opt callstack 0
   268  000001                     ?_strncmp:
   269                           	opt callstack 0
   270  000001                     ?_isspace:
   271                           	opt callstack 0
   272  000001                     ?_islower:
   273                           	opt callstack 0
   274  000001                     ?___wmul:
   275                           	opt callstack 0
   276  000001                     ?___lldiv:
   277                           	opt callstack 0
   278  000001                     pulse_e@interruptState:
   279                           	opt callstack 0
   280  000001                     ___wmul@multiplier:
   281                           	opt callstack 0
   282  000001                     isalpha@c:
   283                           	opt callstack 0
   284  000001                     isdigit@c:
   285                           	opt callstack 0
   286  000001                     isspace@c:
   287                           	opt callstack 0
   288  000001                     isupper@c:
   289                           	opt callstack 0
   290  000001                     strlen@s:
   291                           	opt callstack 0
   292  000001                     strncmp@_l:
   293                           	opt callstack 0
   294  000001                     islower@c:
   295                           	opt callstack 0
   296  000001                     ___lldiv@dividend:
   297                           	opt callstack 0
   298                           
   299                           ; 4 bytes @ 0x0
   300  000001                     	ds	1
   301  000002                     I2C_Master_Read@ackBit:
   302                           	opt callstack 0
   303  000002                     send_nibble@data:
   304                           	opt callstack 0
   305  000002                     I2C_Master_Write@byteToWrite:
   306                           	opt callstack 0
   307                           
   308                           ; 2 bytes @ 0x1
   309  000002                     	ds	1
   310  000003                     ??_isupper:
   311  000003                     ??_isalpha:
   312  000003                     ??_isdigit:
   313  000003                     ??_isspace:
   314  000003                     ??_islower:
   315  000003                     I2C_Master_Read@receivedByte:
   316                           	opt callstack 0
   317  000003                     send_byte@data:
   318                           	opt callstack 0
   319  000003                     ___wmul@multiplicand:
   320                           	opt callstack 0
   321  000003                     strlen@a:
   322                           	opt callstack 0
   323  000003                     strncmp@_r:
   324                           	opt callstack 0
   325                           
   326                           ; 2 bytes @ 0x2
   327  000003                     	ds	1
   328  000004                     rtc_set_time@i:
   329                           	opt callstack 0
   330  000004                     lcdInst@data:
   331                           	opt callstack 0
   332  000004                     putch@data:
   333                           	opt callstack 0
   334                           
   335                           ; 1 bytes @ 0x3
   336  000004                     	ds	1
   337  000005                     ??_initLCD:
   338  000005                     ___wmul@product:
   339                           	opt callstack 0
   340  000005                     fputc@c:
   341                           	opt callstack 0
   342  000005                     strncmp@n:
   343                           	opt callstack 0
   344  000005                     ___lldiv@divisor:
   345                           	opt callstack 0
   346                           
   347                           ; 4 bytes @ 0x4
   348  000005                     	ds	2
   349  000007                     ??_strncmp:
   350  000007                     ?_toupper:
   351                           	opt callstack 0
   352  000007                     _isspace$935:
   353                           	opt callstack 0
   354  000007                     fputc@fp:
   355                           	opt callstack 0
   356  000007                     toupper@c:
   357                           	opt callstack 0
   358                           
   359                           ; 2 bytes @ 0x6
   360  000007                     	ds	1
   361  000008                     ?_atoi:
   362                           	opt callstack 0
   363  000008                     atoi@s:
   364                           	opt callstack 0
   365  000008                     strncmp@l:
   366                           	opt callstack 0
   367                           
   368                           ; 2 bytes @ 0x7
   369  000008                     	ds	1
   370  000009                     ??_fputc:
   371  000009                     ??_toupper:
   372  000009                     ___lldiv@quotient:
   373                           	opt callstack 0
   374                           
   375                           ; 4 bytes @ 0x8
   376  000009                     	ds	1
   377  00000A                     ??_atoi:
   378  00000A                     strncmp@r:
   379                           	opt callstack 0
   380                           
   381                           ; 2 bytes @ 0x9
   382  00000A                     	ds	3
   383  00000D                     ___lldiv@counter:
   384                           	opt callstack 0
   385  00000D                     _toupper$1006:
   386                           	opt callstack 0
   387                           
   388                           ; 2 bytes @ 0xC
   389  00000D                     	ds	1
   390  00000E                     atoi@neg:
   391                           	opt callstack 0
   392  00000E                     fputs@s:
   393                           	opt callstack 0
   394  00000E                     I2C_Master_Init@clockFreq:
   395                           	opt callstack 0
   396                           
   397                           ; 4 bytes @ 0xD
   398  00000E                     	ds	2
   399  000010                     _atoi$908:
   400                           	opt callstack 0
   401  000010                     fputs@fp:
   402                           	opt callstack 0
   403                           
   404                           ; 2 bytes @ 0xF
   405  000010                     	ds	2
   406  000012                     ??_I2C_Master_Init:
   407  000012                     fputs@c:
   408                           	opt callstack 0
   409  000012                     _atoi$910:
   410                           	opt callstack 0
   411                           
   412                           ; 2 bytes @ 0x11
   413  000012                     	ds	1
   414  000013                     fputs@i:
   415                           	opt callstack 0
   416                           
   417                           ; 2 bytes @ 0x12
   418  000013                     	ds	1
   419  000014                     _atoi$909:
   420                           	opt callstack 0
   421                           
   422                           ; 1 bytes @ 0x13
   423  000014                     	ds	1
   424  000015                     ?_pad:
   425                           	opt callstack 0
   426  000015                     pad@fp:
   427                           	opt callstack 0
   428  000015                     atoi@n:
   429                           	opt callstack 0
   430                           
   431                           ; 2 bytes @ 0x14
   432  000015                     	ds	2
   433  000017                     pad@buf:
   434                           	opt callstack 0
   435                           
   436                           ; 2 bytes @ 0x16
   437  000017                     	ds	2
   438  000019                     pad@p:
   439                           	opt callstack 0
   440                           
   441                           ; 2 bytes @ 0x18
   442  000019                     	ds	2
   443  00001B                     ??_pad:
   444                           
   445                           ; 1 bytes @ 0x1A
   446  00001B                     	ds	1
   447  00001C                     pad@i:
   448                           	opt callstack 0
   449                           
   450                           ; 2 bytes @ 0x1B
   451  00001C                     	ds	2
   452  00001E                     pad@w:
   453                           	opt callstack 0
   454                           
   455                           ; 2 bytes @ 0x1D
   456  00001E                     	ds	2
   457  000020                     ?_xtoa:
   458                           	opt callstack 0
   459  000020                     xtoa@fp:
   460                           	opt callstack 0
   461                           
   462                           ; 2 bytes @ 0x1F
   463  000020                     	ds	2
   464  000022                     xtoa@d:
   465                           	opt callstack 0
   466                           
   467                           ; 8 bytes @ 0x21
   468  000022                     	ds	8
   469  00002A                     xtoa@x:
   470                           	opt callstack 0
   471                           
   472                           ; 1 bytes @ 0x29
   473  00002A                     	ds	1
   474  00002B                     ??_xtoa:
   475                           
   476                           ; 1 bytes @ 0x2A
   477  00002B                     	ds	8
   478  000033                     _xtoa$428:
   479                           	opt callstack 0
   480                           
   481                           ; 2 bytes @ 0x32
   482  000033                     	ds	2
   483  000035                     _xtoa$429:
   484                           	opt callstack 0
   485                           
   486                           ; 2 bytes @ 0x34
   487  000035                     	ds	2
   488  000037                     xtoa@p:
   489                           	opt callstack 0
   490                           
   491                           ; 2 bytes @ 0x36
   492  000037                     	ds	2
   493  000039                     xtoa@w:
   494                           	opt callstack 0
   495                           
   496                           ; 2 bytes @ 0x38
   497  000039                     	ds	2
   498  00003B                     xtoa@n:
   499                           	opt callstack 0
   500                           
   501                           ; 8 bytes @ 0x3A
   502  00003B                     	ds	8
   503  000043                     xtoa@i:
   504                           	opt callstack 0
   505                           
   506                           ; 2 bytes @ 0x42
   507  000043                     	ds	2
   508  000045                     xtoa@c:
   509                           	opt callstack 0
   510                           
   511                           ; 2 bytes @ 0x44
   512  000045                     	ds	2
   513  000047                     ?_vfpfcnvrt:
   514                           	opt callstack 0
   515  000047                     vfpfcnvrt@fp:
   516                           	opt callstack 0
   517                           
   518                           ; 2 bytes @ 0x46
   519  000047                     	ds	2
   520  000049                     vfpfcnvrt@fmt:
   521                           	opt callstack 0
   522                           
   523                           ; 2 bytes @ 0x48
   524  000049                     	ds	2
   525  00004B                     vfpfcnvrt@ap:
   526                           	opt callstack 0
   527                           
   528                           ; 2 bytes @ 0x4A
   529  00004B                     	ds	2
   530  00004D                     ??_vfpfcnvrt:
   531                           
   532                           ; 1 bytes @ 0x4C
   533  00004D                     	ds	4
   534  000051                     vfpfcnvrt@done:
   535                           	opt callstack 0
   536                           
   537                           ; 2 bytes @ 0x50
   538  000051                     	ds	2
   539  000053                     _vfpfcnvrt$444:
   540                           	opt callstack 0
   541                           
   542                           ; 2 bytes @ 0x52
   543  000053                     	ds	2
   544  000055                     vfpfcnvrt@llu:
   545                           	opt callstack 0
   546                           
   547                           ; 8 bytes @ 0x54
   548  000055                     	ds	8
   549  00005D                     vfpfcnvrt@c:
   550                           	opt callstack 0
   551                           
   552                           ; 1 bytes @ 0x5C
   553  00005D                     	ds	1
   554  00005E                     ?_vfprintf:
   555                           	opt callstack 0
   556  00005E                     vfprintf@fp:
   557                           	opt callstack 0
   558                           
   559                           ; 2 bytes @ 0x5D
   560  00005E                     	ds	2
   561  000060                     vfprintf@fmt:
   562                           	opt callstack 0
   563                           
   564                           ; 2 bytes @ 0x5F
   565  000060                     	ds	2
   566  000062                     vfprintf@ap:
   567                           	opt callstack 0
   568                           
   569                           ; 2 bytes @ 0x61
   570  000062                     	ds	2
   571  000064                     vfprintf@cfmt:
   572                           	opt callstack 0
   573                           
   574                           ; 2 bytes @ 0x63
   575  000064                     	ds	2
   576  000066                     ?_printf:
   577                           	opt callstack 0
   578  000066                     printf@fmt:
   579                           	opt callstack 0
   580                           
   581                           ; 2 bytes @ 0x65
   582  000066                     	ds	8
   583  00006E                     
   584                           ; 1 bytes @ 0x6D
   585  00006E                     	ds	2
   586  000070                     printf@ap:
   587                           	opt callstack 0
   588                           
   589                           ; 2 bytes @ 0x6F
   590  000070                     	ds	2
   591  000072                     ??_main:
   592                           
   593                           ; 1 bytes @ 0x71
   594  000072                     	ds	2
   595  000074                     main@time:
   596                           	opt callstack 0
   597                           
   598                           ; 7 bytes @ 0x73
   599  000074                     	ds	7
   600  00007B                     main@i:
   601                           	opt callstack 0
   602                           
   603                           ; 1 bytes @ 0x7A
   604  00007B                     	ds	1
   605                           
   606 ;;
   607 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   608 ;;
   609 ;; *************** function _main *****************
   610 ;; Defined at:
   611 ;;		line 38 in file "main.c"
   612 ;; Parameters:    Size  Location     Type
   613 ;;		None
   614 ;; Auto vars:     Size  Location     Type
   615 ;;  i               1  122[COMRAM] unsigned char 
   616 ;;  time            7  115[COMRAM] unsigned char [7]
   617 ;; Return value:  Size  Location     Type
   618 ;;                  1    wreg      void 
   619 ;; Registers used:
   620 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   621 ;; Tracked objects:
   622 ;;		On entry : 0/0
   623 ;;		On exit  : 0/0
   624 ;;		Unchanged: 0/0
   625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   627 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   628 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   629 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   630 ;;Total ram usage:       10 bytes
   631 ;; Hardware stack levels required when called:   11
   632 ;; This function calls:
   633 ;;		_I2C_Master_Init
   634 ;;		_I2C_Master_Read
   635 ;;		_I2C_Master_Start
   636 ;;		_I2C_Master_Stop
   637 ;;		_I2C_Master_Write
   638 ;;		_initLCD
   639 ;;		_lcdInst
   640 ;;		_printf
   641 ;;		_rtc_set_time
   642 ;; This function is called by:
   643 ;;		Startup code after reset
   644 ;; This function uses a non-reentrant model
   645 ;;
   646                           
   647                           	psect	text0
   648  0017A6                     __ptext0:
   649                           	opt callstack 0
   650  0017A6                     _main:
   651                           	opt callstack 20
   652                           
   653                           ;main.c: 42:     LATD = 0x00;
   654                           
   655                           ;incstack = 0
   656  0017A6  0E00               	movlw	0
   657  0017A8  6E8C               	movwf	3980,c	;volatile
   658                           
   659                           ;main.c: 43:     TRISD = 0x00;
   660  0017AA  0E00               	movlw	0
   661  0017AC  6E95               	movwf	3989,c	;volatile
   662                           
   663                           ;main.c: 45:     initLCD();
   664  0017AE  EC63  F00D         	call	_initLCD	;wreg free
   665                           
   666                           ;main.c: 48:     I2C_Master_Init(100000);
   667  0017B2  0EA0               	movlw	160
   668  0017B4  6E0E               	movwf	I2C_Master_Init@clockFreq,c
   669  0017B6  0E86               	movlw	134
   670  0017B8  6E0F               	movwf	I2C_Master_Init@clockFreq+1,c
   671  0017BA  0E01               	movlw	1
   672  0017BC  6E10               	movwf	I2C_Master_Init@clockFreq+2,c
   673  0017BE  0E00               	movlw	0
   674  0017C0  6E11               	movwf	I2C_Master_Init@clockFreq+3,c
   675  0017C2  EC98  F00D         	call	_I2C_Master_Init	;wreg free
   676                           
   677                           ;main.c: 52:     rtc_set_time();
   678  0017C6  EC16  F00E         	call	_rtc_set_time	;wreg free
   679  0017CA                     l2050:
   680                           
   681                           ;main.c: 58:         I2C_Master_Start();
   682  0017CA  EC79  F00F         	call	_I2C_Master_Start	;wreg free
   683                           
   684                           ;main.c: 59:         I2C_Master_Write(0b11010000);
   685  0017CE  0E00               	movlw	0
   686  0017D0  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
   687  0017D2  0ED0               	movlw	208
   688  0017D4  6E02               	movwf	I2C_Master_Write@byteToWrite,c
   689  0017D6  EC70  F00F         	call	_I2C_Master_Write	;wreg free
   690                           
   691                           ;main.c: 60:         I2C_Master_Write(0x00);
   692  0017DA  0E00               	movlw	0
   693  0017DC  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
   694  0017DE  0E00               	movlw	0
   695  0017E0  6E02               	movwf	I2C_Master_Write@byteToWrite,c
   696  0017E2  EC70  F00F         	call	_I2C_Master_Write	;wreg free
   697                           
   698                           ;main.c: 61:         I2C_Master_Stop();
   699  0017E6  EC75  F00F         	call	_I2C_Master_Stop	;wreg free
   700                           
   701                           ;main.c: 64:         I2C_Master_Start();
   702  0017EA  EC79  F00F         	call	_I2C_Master_Start	;wreg free
   703                           
   704                           ;main.c: 65:         I2C_Master_Write(0b11010001);
   705  0017EE  0E00               	movlw	0
   706  0017F0  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
   707  0017F2  0ED1               	movlw	209
   708  0017F4  6E02               	movwf	I2C_Master_Write@byteToWrite,c
   709  0017F6  EC70  F00F         	call	_I2C_Master_Write	;wreg free
   710                           
   711                           ;main.c: 66:         for(unsigned char i = 0; i < 6; i++){
   712  0017FA  0E00               	movlw	0
   713  0017FC  6E7B               	movwf	main@i,c
   714  0017FE                     l2068:
   715                           
   716                           ;main.c: 67:             time[i] = I2C_Master_Read(0);
   717  0017FE  0E74               	movlw	low main@time
   718  001800  247B               	addwf	main@i,w,c
   719  001802  6ED9               	movwf	fsr2l,c
   720  001804  6ADA               	clrf	fsr2h,c
   721  001806  0E00               	movlw	high main@time
   722  001808  22DA               	addwfc	fsr2h,f,c
   723  00180A  0E00               	movlw	0
   724  00180C  EC26  F00F         	call	_I2C_Master_Read
   725  001810  6EDF               	movwf	indf2,c
   726                           
   727                           ;main.c: 68:         }
   728  001812  2A7B               	incf	main@i,f,c
   729  001814  0E05               	movlw	5
   730  001816  647B               	cpfsgt	main@i,c
   731  001818  D7F2               	goto	l2068
   732                           
   733                           ;main.c: 69:         time[6] = I2C_Master_Read(1);
   734  00181A  0E01               	movlw	1
   735  00181C  EC26  F00F         	call	_I2C_Master_Read
   736  001820  6E7A               	movwf	main@time+6,c
   737                           
   738                           ;main.c: 70:         I2C_Master_Stop();
   739  001822  EC75  F00F         	call	_I2C_Master_Stop	;wreg free
   740                           
   741                           ;main.c: 73:         { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.0)));};
   742  001826  0E80               	movlw	128
   743  001828  EC6A  F00F         	call	_lcdInst
   744  00182C  0E07               	movlw	7
   745  00182E  6E72               	movwf	??_main& (0+255),c
   746  001830  0E7D               	movlw	125
   747  001832                     u1547:
   748  001832  2EE8               	decfsz	wreg,f,c
   749  001834  D7FE               	bra	u1547
   750  001836  2E72               	decfsz	??_main& (0+255),f,c
   751  001838  D7FC               	bra	u1547
   752  00183A  F000               	nop	
   753                           
   754                           ;main.c: 74:         printf("%02hhx/%02hhx/%02hhx", time[6]&0xff,time[5]&0xff,time[4]&0x
      +                          ff);
   755  00183C  0E1F               	movlw	low STR_1
   756  00183E  6E66               	movwf	printf@fmt,c
   757  001840  0E10               	movlw	high STR_1
   758  001842  6E67               	movwf	printf@fmt+1,c
   759  001844  C07A  F068         	movff	main@time+6,?_printf+2
   760  001848  6A69               	clrf	?_printf+3,c
   761  00184A  C079  F06A         	movff	main@time+5,?_printf+4
   762  00184E  6A6B               	clrf	?_printf+5,c
   763  001850  C078  F06C         	movff	main@time+4,?_printf+6
   764  001854  6A6D               	clrf	?_printf+7,c
   765  001856  EC00  F00F         	call	_printf	;wreg free
   766  00185A  0EC0               	movlw	192
   767  00185C  EC6A  F00F         	call	_lcdInst
   768                           
   769                           ;main.c: 76:         printf("%02x:%02x:%02x", time[2]&0xff,time[1]&0xff,time[0]&0xff);
   770  001860  0E34               	movlw	low STR_2
   771  001862  6E66               	movwf	printf@fmt,c
   772  001864  0E10               	movlw	high STR_2
   773  001866  6E67               	movwf	printf@fmt+1,c
   774  001868  C076  F068         	movff	main@time+2,?_printf+2
   775  00186C  6A69               	clrf	?_printf+3,c
   776  00186E  C075  F06A         	movff	main@time+1,?_printf+4
   777  001872  6A6B               	clrf	?_printf+5,c
   778  001874  C074  F06C         	movff	main@time,?_printf+6
   779  001878  6A6D               	clrf	?_printf+7,c
   780  00187A  EC00  F00F         	call	_printf	;wreg free
   781                           
   782                           ;main.c: 80:         _delay((unsigned long)((1000)*(10000000/4000.0)));
   783  00187E  0E0D               	movlw	13
   784  001880  6E73               	movwf	(??_main+1)& (0+255),c
   785  001882  0EAF               	movlw	175
   786  001884  6E72               	movwf	??_main& (0+255),c
   787  001886  0EB6               	movlw	182
   788  001888                     u1557:
   789  001888  2EE8               	decfsz	wreg,f,c
   790  00188A  D7FE               	bra	u1557
   791  00188C  2E72               	decfsz	??_main& (0+255),f,c
   792  00188E  D7FC               	bra	u1557
   793  001890  2E73               	decfsz	(??_main+1)& (0+255),f,c
   794  001892  D7FA               	bra	u1557
   795  001894  D000               	nop2	
   796  001896  D799               	goto	l2050
   797  001898                     __end_of_main:
   798                           	opt callstack 0
   799                           
   800 ;; *************** function _rtc_set_time *****************
   801 ;; Defined at:
   802 ;;		line 85 in file "main.c"
   803 ;; Parameters:    Size  Location     Type
   804 ;;		None
   805 ;; Auto vars:     Size  Location     Type
   806 ;;  i               1    3[COMRAM] unsigned char 
   807 ;; Return value:  Size  Location     Type
   808 ;;                  1    wreg      void 
   809 ;; Registers used:
   810 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   811 ;; Tracked objects:
   812 ;;		On entry : 0/0
   813 ;;		On exit  : 0/0
   814 ;;		Unchanged: 0/0
   815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   817 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   819 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   820 ;;Total ram usage:        1 bytes
   821 ;; Hardware stack levels used:    1
   822 ;; Hardware stack levels required when called:    2
   823 ;; This function calls:
   824 ;;		_I2C_Master_Start
   825 ;;		_I2C_Master_Stop
   826 ;;		_I2C_Master_Write
   827 ;; This function is called by:
   828 ;;		_main
   829 ;; This function uses a non-reentrant model
   830 ;;
   831                           
   832                           	psect	text1
   833  001C2C                     __ptext1:
   834                           	opt callstack 0
   835  001C2C                     _rtc_set_time:
   836                           	opt callstack 28
   837                           
   838                           ;main.c: 86:     I2C_Master_Start();
   839                           
   840                           ;incstack = 0
   841  001C2C  EC79  F00F         	call	_I2C_Master_Start	;wreg free
   842                           
   843                           ;main.c: 87:     I2C_Master_Write(0b11010000);
   844  001C30  0E00               	movlw	0
   845  001C32  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
   846  001C34  0ED0               	movlw	208
   847  001C36  6E02               	movwf	I2C_Master_Write@byteToWrite,c
   848  001C38  EC70  F00F         	call	_I2C_Master_Write	;wreg free
   849                           
   850                           ;main.c: 88:     I2C_Master_Write(0x00);
   851  001C3C  0E00               	movlw	0
   852  001C3E  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
   853  001C40  0E00               	movlw	0
   854  001C42  6E02               	movwf	I2C_Master_Write@byteToWrite,c
   855  001C44  EC70  F00F         	call	_I2C_Master_Write	;wreg free
   856                           
   857                           ;main.c: 91:     for(char i=0; i < 7; i++){
   858  001C48  0E00               	movlw	0
   859  001C4A  6E04               	movwf	rtc_set_time@i,c
   860  001C4C                     l2028:
   861                           
   862                           ;main.c: 92:         I2C_Master_Write(happynewyear[i]);
   863  001C4C  0E12               	movlw	low _happynewyear
   864  001C4E  2404               	addwf	rtc_set_time@i,w,c
   865  001C50  6EF6               	movwf	tblptrl,c
   866  001C52  6AF7               	clrf	tblptrh,c
   867  001C54  0E10               	movlw	high _happynewyear
   868  001C56  22F7               	addwfc	tblptrh,f,c
   869  001C58                     	if	0	;There are less than 3 active tblptr bytes
   870  001C58                     	endif
   871  001C58  0008               	tblrd		*
   872  001C5A  50F5               	movf	tablat,w,c
   873  001C5C  6E02               	movwf	I2C_Master_Write@byteToWrite,c
   874  001C5E  6A03               	clrf	I2C_Master_Write@byteToWrite+1,c
   875  001C60  EC70  F00F         	call	_I2C_Master_Write	;wreg free
   876                           
   877                           ;main.c: 93:     }
   878  001C64  2A04               	incf	rtc_set_time@i,f,c
   879  001C66  0E06               	movlw	6
   880  001C68  6404               	cpfsgt	rtc_set_time@i,c
   881  001C6A  D7F0               	goto	l2028
   882                           
   883                           ;main.c: 95:     I2C_Master_Stop();
   884  001C6C  EC75  F00F         	call	_I2C_Master_Stop	;wreg free
   885  001C70  0012               	return		;funcret
   886  001C72                     __end_of_rtc_set_time:
   887                           	opt callstack 0
   888                           
   889 ;; *************** function _I2C_Master_Write *****************
   890 ;; Defined at:
   891 ;;		line 70 in file "I2C.c"
   892 ;; Parameters:    Size  Location     Type
   893 ;;  byteToWrite     2    1[COMRAM] unsigned int 
   894 ;; Auto vars:     Size  Location     Type
   895 ;;		None
   896 ;; Return value:  Size  Location     Type
   897 ;;                  1    wreg      void 
   898 ;; Registers used:
   899 ;;		wreg, status,2, status,0, cstack
   900 ;; Tracked objects:
   901 ;;		On entry : 0/0
   902 ;;		On exit  : 0/0
   903 ;;		Unchanged: 0/0
   904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   905 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   908 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   909 ;;Total ram usage:        2 bytes
   910 ;; Hardware stack levels used:    1
   911 ;; Hardware stack levels required when called:    1
   912 ;; This function calls:
   913 ;;		_I2C_Master_Wait
   914 ;; This function is called by:
   915 ;;		_main
   916 ;;		_rtc_set_time
   917 ;; This function uses a non-reentrant model
   918 ;;
   919                           
   920                           	psect	text2
   921  001EE0                     __ptext2:
   922                           	opt callstack 0
   923  001EE0                     _I2C_Master_Write:
   924                           	opt callstack 28
   925                           
   926                           ;I2C.c: 71:     I2C_Master_Wait();
   927                           
   928                           ;incstack = 0
   929  001EE0  EC5B  F00F         	call	_I2C_Master_Wait	;wreg free
   930                           
   931                           ;I2C.c: 74:     SSPBUF = byteToWrite;
   932  001EE4  C002  FFC9         	movff	I2C_Master_Write@byteToWrite,4041	;volatile
   933  001EE8  0012               	return		;funcret
   934  001EEA                     __end_of_I2C_Master_Write:
   935                           	opt callstack 0
   936                           
   937 ;; *************** function _I2C_Master_Stop *****************
   938 ;; Defined at:
   939 ;;		line 65 in file "I2C.c"
   940 ;; Parameters:    Size  Location     Type
   941 ;;		None
   942 ;; Auto vars:     Size  Location     Type
   943 ;;		None
   944 ;; Return value:  Size  Location     Type
   945 ;;                  1    wreg      void 
   946 ;; Registers used:
   947 ;;		wreg, status,2, status,0, cstack
   948 ;; Tracked objects:
   949 ;;		On entry : 0/0
   950 ;;		On exit  : 0/0
   951 ;;		Unchanged: 0/0
   952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   957 ;;Total ram usage:        0 bytes
   958 ;; Hardware stack levels used:    1
   959 ;; Hardware stack levels required when called:    1
   960 ;; This function calls:
   961 ;;		_I2C_Master_Wait
   962 ;; This function is called by:
   963 ;;		_main
   964 ;;		_rtc_set_time
   965 ;; This function uses a non-reentrant model
   966 ;;
   967                           
   968                           	psect	text3
   969  001EEA                     __ptext3:
   970                           	opt callstack 0
   971  001EEA                     _I2C_Master_Stop:
   972                           	opt callstack 28
   973                           
   974                           ;I2C.c: 66:     I2C_Master_Wait();
   975                           
   976                           ;incstack = 0
   977  001EEA  EC5B  F00F         	call	_I2C_Master_Wait	;wreg free
   978                           
   979                           ;I2C.c: 67:     SSPCON2bits.PEN = 1;
   980  001EEE  84C5               	bsf	4037,2,c	;volatile
   981  001EF0  0012               	return		;funcret
   982  001EF2                     __end_of_I2C_Master_Stop:
   983                           	opt callstack 0
   984                           
   985 ;; *************** function _I2C_Master_Start *****************
   986 ;; Defined at:
   987 ;;		line 55 in file "I2C.c"
   988 ;; Parameters:    Size  Location     Type
   989 ;;		None
   990 ;; Auto vars:     Size  Location     Type
   991 ;;		None
   992 ;; Return value:  Size  Location     Type
   993 ;;                  1    wreg      void 
   994 ;; Registers used:
   995 ;;		wreg, status,2, status,0, cstack
   996 ;; Tracked objects:
   997 ;;		On entry : 0/0
   998 ;;		On exit  : 0/0
   999 ;;		Unchanged: 0/0
  1000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1005 ;;Total ram usage:        0 bytes
  1006 ;; Hardware stack levels used:    1
  1007 ;; Hardware stack levels required when called:    1
  1008 ;; This function calls:
  1009 ;;		_I2C_Master_Wait
  1010 ;; This function is called by:
  1011 ;;		_main
  1012 ;;		_rtc_set_time
  1013 ;; This function uses a non-reentrant model
  1014 ;;
  1015                           
  1016                           	psect	text4
  1017  001EF2                     __ptext4:
  1018                           	opt callstack 0
  1019  001EF2                     _I2C_Master_Start:
  1020                           	opt callstack 28
  1021                           
  1022                           ;I2C.c: 56:     I2C_Master_Wait();
  1023                           
  1024                           ;incstack = 0
  1025  001EF2  EC5B  F00F         	call	_I2C_Master_Wait	;wreg free
  1026                           
  1027                           ;I2C.c: 57:     SSPCON2bits.SEN = 1;
  1028  001EF6  80C5               	bsf	4037,0,c	;volatile
  1029  001EF8  0012               	return		;funcret
  1030  001EFA                     __end_of_I2C_Master_Start:
  1031                           	opt callstack 0
  1032                           
  1033 ;; *************** function _printf *****************
  1034 ;; Defined at:
  1035 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  1036 ;; Parameters:    Size  Location     Type
  1037 ;;  fmt             2  101[COMRAM] PTR const unsigned char 
  1038 ;;		 -> STR_2(15), STR_1(21), 
  1039 ;; Auto vars:     Size  Location     Type
  1040 ;;  ap              2  111[COMRAM] PTR void [1]
  1041 ;;		 -> ?_printf(2), 
  1042 ;;  ret             2    0        int 
  1043 ;; Return value:  Size  Location     Type
  1044 ;;                  2  101[COMRAM] int 
  1045 ;; Registers used:
  1046 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1047 ;; Tracked objects:
  1048 ;;		On entry : 0/0
  1049 ;;		On exit  : 0/0
  1050 ;;		Unchanged: 0/0
  1051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1052 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1053 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1055 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1056 ;;Total ram usage:       12 bytes
  1057 ;; Hardware stack levels used:    1
  1058 ;; Hardware stack levels required when called:   10
  1059 ;; This function calls:
  1060 ;;		_vfprintf
  1061 ;; This function is called by:
  1062 ;;		_main
  1063 ;; This function uses a non-reentrant model
  1064 ;;
  1065                           
  1066                           	psect	text5
  1067  001E00                     __ptext5:
  1068                           	opt callstack 0
  1069  001E00                     _printf:
  1070                           	opt callstack 20
  1071                           
  1072                           ;incstack = 0
  1073  001E00  0E68               	movlw	low (?_printf+2)
  1074  001E02  6E70               	movwf	printf@ap,c
  1075  001E04  0E00               	movlw	high (?_printf+2)
  1076  001E06  6E71               	movwf	printf@ap+1,c
  1077  001E08  0E00               	movlw	0
  1078  001E0A  6E5E               	movwf	vfprintf@fp,c
  1079  001E0C  0E00               	movlw	0
  1080  001E0E  6E5F               	movwf	vfprintf@fp+1,c
  1081  001E10  C066  F060         	movff	printf@fmt,vfprintf@fmt
  1082  001E14  C067  F061         	movff	printf@fmt+1,vfprintf@fmt+1
  1083  001E18  0E70               	movlw	low printf@ap
  1084  001E1A  6E62               	movwf	vfprintf@ap,c
  1085  001E1C  0E00               	movlw	high printf@ap
  1086  001E1E  6E63               	movwf	vfprintf@ap+1,c
  1087  001E20  ECC6  F00D         	call	_vfprintf	;wreg free
  1088  001E24  0012               	return		;funcret
  1089  001E26                     __end_of_printf:
  1090                           	opt callstack 0
  1091                           
  1092 ;; *************** function _vfprintf *****************
  1093 ;; Defined at:
  1094 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1095 ;; Parameters:    Size  Location     Type
  1096 ;;  fp              2   93[COMRAM] PTR struct _IO_FILE
  1097 ;;		 -> NULL(0), 
  1098 ;;  fmt             2   95[COMRAM] PTR const unsigned char 
  1099 ;;		 -> STR_2(15), STR_1(21), 
  1100 ;;  ap              2   97[COMRAM] PTR PTR void 
  1101 ;;		 -> printf@ap(2), 
  1102 ;; Auto vars:     Size  Location     Type
  1103 ;;  cfmt            2   99[COMRAM] PTR unsigned char 
  1104 ;;		 -> STR_2(15), STR_1(21), 
  1105 ;; Return value:  Size  Location     Type
  1106 ;;                  2   93[COMRAM] int 
  1107 ;; Registers used:
  1108 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1109 ;; Tracked objects:
  1110 ;;		On entry : 0/0
  1111 ;;		On exit  : 0/0
  1112 ;;		Unchanged: 0/0
  1113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1114 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1115 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1117 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1118 ;;Total ram usage:        8 bytes
  1119 ;; Hardware stack levels used:    1
  1120 ;; Hardware stack levels required when called:    9
  1121 ;; This function calls:
  1122 ;;		_vfpfcnvrt
  1123 ;; This function is called by:
  1124 ;;		_printf
  1125 ;; This function uses a non-reentrant model
  1126 ;;
  1127                           
  1128                           	psect	text6
  1129  001B8C                     __ptext6:
  1130                           	opt callstack 0
  1131  001B8C                     _vfprintf:
  1132                           	opt callstack 20
  1133                           
  1134                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1135                           
  1136                           ;incstack = 0
  1137  001B8C  C060  F064         	movff	vfprintf@fmt,vfprintf@cfmt
  1138  001B90  C061  F065         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1139                           
  1140                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1141  001B94  0E00               	movlw	0
  1142  001B96  0100               	movlb	0	; () banked
  1143  001B98  6F81               	movwf	(_nout+1)& (0+255),b
  1144  001B9A  0E00               	movlw	0
  1145  001B9C  6F80               	movwf	_nout& (0+255),b
  1146                           
  1147                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1148  001B9E  D013               	goto	l1966
  1149  001BA0                     l1964:
  1150                           
  1151                           ; BSR set to: 0
  1152                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1153  001BA0  C05E  F047         	movff	vfprintf@fp,vfpfcnvrt@fp
  1154  001BA4  C05F  F048         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1155  001BA8  0E64               	movlw	low vfprintf@cfmt
  1156  001BAA  6E49               	movwf	vfpfcnvrt@fmt,c
  1157  001BAC  0E00               	movlw	high vfprintf@cfmt
  1158  001BAE  6E4A               	movwf	vfpfcnvrt@fmt+1,c
  1159  001BB0  C062  F04B         	movff	vfprintf@ap,vfpfcnvrt@ap
  1160  001BB4  C063  F04C         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1161  001BB8  EC24  F008         	call	_vfpfcnvrt	;wreg free
  1162  001BBC  5047               	movf	?_vfpfcnvrt,w,c
  1163  001BBE  0100               	movlb	0	; () banked
  1164  001BC0  2780               	addwf	_nout& (0+255),f,b
  1165  001BC2  5048               	movf	?_vfpfcnvrt+1,w,c
  1166  001BC4  2381               	addwfc	(_nout+1)& (0+255),f,b
  1167  001BC6                     l1966:
  1168                           
  1169                           ; BSR set to: 0
  1170                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1171  001BC6  C064  FFF6         	movff	vfprintf@cfmt,tblptrl
  1172  001BCA  C065  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1173  001BCE                     	if	0	;tblptru may be non-zero
  1174  001BCE                     	endif
  1175  001BCE                     	if	0	;tblptru may be non-zero
  1176  001BCE                     	endif
  1177  001BCE  0008               	tblrd		*
  1178  001BD0  50F5               	movf	tablat,w,c
  1179  001BD2  0900               	iorlw	0
  1180  001BD4  A4D8               	btfss	status,2,c
  1181  001BD6  D7E4               	goto	l1964
  1182                           
  1183                           ; BSR set to: 0
  1184                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1185  001BD8  C080  F05E         	movff	_nout,?_vfprintf
  1186  001BDC  C081  F05F         	movff	_nout+1,?_vfprintf+1
  1187                           
  1188                           ; BSR set to: 0
  1189  001BE0  0012               	return		;funcret
  1190  001BE2                     __end_of_vfprintf:
  1191                           	opt callstack 0
  1192                           
  1193 ;; *************** function _vfpfcnvrt *****************
  1194 ;; Defined at:
  1195 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1196 ;; Parameters:    Size  Location     Type
  1197 ;;  fp              2   70[COMRAM] PTR struct _IO_FILE
  1198 ;;		 -> NULL(0), 
  1199 ;;  fmt             2   72[COMRAM] PTR PTR unsigned char 
  1200 ;;		 -> vfprintf@cfmt(2), 
  1201 ;;  ap              2   74[COMRAM] PTR PTR void 
  1202 ;;		 -> printf@ap(2), 
  1203 ;; Auto vars:     Size  Location     Type
  1204 ;;  llu             8   84[COMRAM] unsigned long long 
  1205 ;;  ll              8    0        long long 
  1206 ;;  f               4    0        long long 
  1207 ;;  vp              3    0        PTR void 
  1208 ;;  ct              3    0        unsigned char [3]
  1209 ;;  cp              3    0        PTR unsigned char 
  1210 ;;  done            2   80[COMRAM] int 
  1211 ;;  i               2    0        int 
  1212 ;;  c               1   92[COMRAM] unsigned char 
  1213 ;; Return value:  Size  Location     Type
  1214 ;;                  2   70[COMRAM] int 
  1215 ;; Registers used:
  1216 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1217 ;; Tracked objects:
  1218 ;;		On entry : 0/0
  1219 ;;		On exit  : 0/0
  1220 ;;		Unchanged: 0/0
  1221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1222 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1223 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1224 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1225 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1226 ;;Total ram usage:       23 bytes
  1227 ;; Hardware stack levels used:    1
  1228 ;; Hardware stack levels required when called:    8
  1229 ;; This function calls:
  1230 ;;		_atoi
  1231 ;;		_fputc
  1232 ;;		_isdigit
  1233 ;;		_strncmp
  1234 ;;		_xtoa
  1235 ;; This function is called by:
  1236 ;;		_vfprintf
  1237 ;; This function uses a non-reentrant model
  1238 ;;
  1239                           
  1240                           	psect	text7
  1241  001048                     __ptext7:
  1242                           	opt callstack 0
  1243  001048                     _vfpfcnvrt:
  1244                           	opt callstack 20
  1245                           
  1246                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1247                           
  1248                           ; BSR set to: 0
  1249                           ;incstack = 0
  1250  001048  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1251  00104C  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1252  001050  CFDE FFF6          	movff	postinc2,tblptrl
  1253  001054  CFDD FFF7          	movff	postdec2,tblptrh
  1254  001058                     	if	0	;tblptru may be non-zero
  1255  001058                     	endif
  1256  001058                     	if	0	;tblptru may be non-zero
  1257  001058                     	endif
  1258  001058  0008               	tblrd		*
  1259  00105A  50F5               	movf	tablat,w,c
  1260  00105C  0A25               	xorlw	37
  1261  00105E  A4D8               	btfss	status,2,c
  1262  001060  D1D2               	goto	l1940
  1263                           
  1264                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1265  001062  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1266  001066  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1267  00106A  2ADE               	incf	postinc2,f,c
  1268  00106C  0E00               	movlw	0
  1269  00106E  22DD               	addwfc	postdec2,f,c
  1270                           
  1271                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1272  001070  0E00               	movlw	0
  1273  001072  0100               	movlb	0	; () banked
  1274  001074  6F83               	movwf	(_width+1)& (0+255),b
  1275  001076  0E00               	movlw	0
  1276  001078  6F82               	movwf	_width& (0+255),b
  1277  00107A  C082  F07E         	movff	_width,_flags
  1278  00107E  C083  F07F         	movff	_width+1,_flags+1
  1279                           
  1280                           ; BSR set to: 0
  1281                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1282  001082  687C               	setf	_prec,c
  1283  001084  687D               	setf	_prec+1,c
  1284                           
  1285                           ; BSR set to: 0
  1286                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  1287  001086  0E00               	movlw	0
  1288  001088  6E52               	movwf	vfpfcnvrt@done+1,c
  1289  00108A  0E00               	movlw	0
  1290  00108C  D014               	goto	L1
  1291  00108E                     l1848:
  1292                           
  1293                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  1294  00108E  807E               	bsf	_flags,0,c
  1295  001090                     l1850:
  1296                           
  1297                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  1298  001090  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1299  001094  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1300  001098  2ADE               	incf	postinc2,f,c
  1301  00109A  0E00               	movlw	0
  1302  00109C  22DD               	addwfc	postdec2,f,c
  1303                           
  1304                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  1305  00109E  D02E               	goto	l1874
  1306  0010A0                     l1852:
  1307                           
  1308                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  1309  0010A0  827E               	bsf	_flags,1,c
  1310  0010A2  D7F6               	goto	l1850
  1311  0010A4                     l1856:
  1312                           
  1313                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  1314  0010A4  847E               	bsf	_flags,2,c
  1315  0010A6  D7F4               	goto	l1850
  1316  0010A8                     l1860:
  1317                           
  1318                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  1319  0010A8  867E               	bsf	_flags,3,c
  1320  0010AA  D7F2               	goto	l1850
  1321  0010AC                     l1864:
  1322                           
  1323                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  1324  0010AC  887E               	bsf	_flags,4,c
  1325  0010AE  D7F0               	goto	l1850
  1326  0010B0                     l1868:
  1327                           
  1328                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  1329  0010B0  0E00               	movlw	0
  1330  0010B2  6E52               	movwf	vfpfcnvrt@done+1,c
  1331  0010B4  0E01               	movlw	1
  1332  0010B6                     L1:
  1333  0010B6  6E51               	movwf	vfpfcnvrt@done,c
  1334                           
  1335                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  1336  0010B8  D021               	goto	l1874
  1337  0010BA                     l1872:
  1338  0010BA  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1339  0010BE  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1340  0010C2  CFDE FFF6          	movff	postinc2,tblptrl
  1341  0010C6  CFDD FFF7          	movff	postdec2,tblptrh
  1342  0010CA                     	if	0	;tblptru may be non-zero
  1343  0010CA                     	endif
  1344  0010CA                     	if	0	;tblptru may be non-zero
  1345  0010CA                     	endif
  1346  0010CA  0008               	tblrd		*
  1347  0010CC  50F5               	movf	tablat,w,c
  1348  0010CE  6E4D               	movwf	??_vfpfcnvrt& (0+255),c
  1349  0010D0  6A4E               	clrf	(??_vfpfcnvrt+1)& (0+255),c
  1350                           
  1351                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1352                           ; Switch size 1, requested type "simple"
  1353                           ; Number of cases is 1, Range of values is 0 to 0
  1354                           ; switch strategies available:
  1355                           ; Name         Instructions Cycles
  1356                           ; simple_byte            4     3 (average)
  1357                           ;	Chosen strategy is simple_byte
  1358  0010D2  504E               	movf	??_vfpfcnvrt+1,w,c
  1359  0010D4  0A00               	xorlw	0	; case 0
  1360  0010D6  A4D8               	btfss	status,2,c
  1361  0010D8  D7EB               	goto	l1868
  1362                           
  1363                           ; Switch size 1, requested type "simple"
  1364                           ; Number of cases is 5, Range of values is 32 to 48
  1365                           ; switch strategies available:
  1366                           ; Name         Instructions Cycles
  1367                           ; simple_byte           16     9 (average)
  1368                           ;	Chosen strategy is simple_byte
  1369  0010DA  504D               	movf	??_vfpfcnvrt,w,c
  1370  0010DC  0A20               	xorlw	32	; case 32
  1371  0010DE  B4D8               	btfsc	status,2,c
  1372  0010E0  D7E3               	goto	l1860
  1373  0010E2  0A03               	xorlw	3	; case 35
  1374  0010E4  B4D8               	btfsc	status,2,c
  1375  0010E6  D7E2               	goto	l1864
  1376  0010E8  0A08               	xorlw	8	; case 43
  1377  0010EA  B4D8               	btfsc	status,2,c
  1378  0010EC  D7DB               	goto	l1856
  1379  0010EE  0A06               	xorlw	6	; case 45
  1380  0010F0  B4D8               	btfsc	status,2,c
  1381  0010F2  D7CD               	goto	l1848
  1382  0010F4  0A1D               	xorlw	29	; case 48
  1383  0010F6  B4D8               	btfsc	status,2,c
  1384  0010F8  D7D3               	goto	l1852
  1385  0010FA  D7DA               	goto	l1868
  1386  0010FC                     l1874:
  1387                           
  1388                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  1389  0010FC  5051               	movf	vfpfcnvrt@done,w,c
  1390  0010FE  1052               	iorwf	vfpfcnvrt@done+1,w,c
  1391  001100  B4D8               	btfsc	status,2,c
  1392  001102  D7DB               	goto	l1872
  1393                           
  1394                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  1395  001104  B07E               	btfsc	_flags,0,c
  1396                           
  1397                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  1398  001106  927E               	bcf	_flags,1,c
  1399                           
  1400                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  1401  001108  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1402  00110C  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1403  001110  CFDE FFF6          	movff	postinc2,tblptrl
  1404  001114  CFDD FFF7          	movff	postdec2,tblptrh
  1405  001118                     	if	0	;tblptru may be non-zero
  1406  001118                     	endif
  1407  001118                     	if	0	;tblptru may be non-zero
  1408  001118                     	endif
  1409  001118  0008               	tblrd		*
  1410  00111A  50F5               	movf	tablat,w,c
  1411  00111C  0A2A               	xorlw	42
  1412  00111E  A4D8               	btfss	status,2,c
  1413  001120  D024               	goto	l1886
  1414                           
  1415                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  1416  001122  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1417  001126  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1418  00112A  2ADE               	incf	postinc2,f,c
  1419  00112C  0E00               	movlw	0
  1420  00112E  22DD               	addwfc	postdec2,f,c
  1421                           
  1422                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1423  001130  C04B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1424  001134  C04C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1425  001138  CFDF F04D          	movff	indf2,??_vfpfcnvrt
  1426  00113C  0E02               	movlw	2
  1427  00113E  26DE               	addwf	postinc2,f,c
  1428  001140  CFDF F04E          	movff	indf2,??_vfpfcnvrt+1
  1429  001144  0E00               	movlw	0
  1430  001146  22DD               	addwfc	postdec2,f,c
  1431  001148  C04D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1432  00114C  C04E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1433  001150  CFDE F082          	movff	postinc2,_width
  1434  001154  CFDD F083          	movff	postdec2,_width+1
  1435                           
  1436                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  1437  001158  0100               	movlb	0	; () banked
  1438  00115A  AF83               	btfss	(_width+1)& (0+255),7,b
  1439  00115C  D03F               	goto	u1390
  1440                           
  1441                           ; BSR set to: 0
  1442                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  1443  00115E  807E               	bsf	_flags,0,c
  1444                           
  1445                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  1446  001160  6D82               	negf	_width& (0+255),b
  1447  001162  1F83               	comf	(_width+1)& (0+255),f,b
  1448  001164  B0D8               	btfsc	status,0,c
  1449  001166  2B83               	incf	(_width+1)& (0+255),f,b
  1450  001168  D039               	goto	u1390
  1451  00116A                     l1886:
  1452                           
  1453                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  1454  00116A  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1455  00116E  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1456  001172  CFDE F008          	movff	postinc2,atoi@s
  1457  001176  CFDD F009          	movff	postdec2,atoi@s+1
  1458  00117A  EC33  F00B         	call	_atoi	;wreg free
  1459  00117E  C008  F082         	movff	?_atoi,_width
  1460  001182  C009  F083         	movff	?_atoi+1,_width+1
  1461                           
  1462                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1463  001186  D007               	goto	l1890
  1464  001188                     l1888:
  1465                           
  1466                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  1467  001188  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1468  00118C  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1469  001190  2ADE               	incf	postinc2,f,c
  1470  001192  0E00               	movlw	0
  1471  001194  22DD               	addwfc	postdec2,f,c
  1472  001196                     l1890:
  1473  001196  0ED0               	movlw	208
  1474  001198  6E4D               	movwf	??_vfpfcnvrt& (0+255),c
  1475  00119A  0EFF               	movlw	255
  1476  00119C  6E4E               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  1477  00119E  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1478  0011A2  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1479  0011A6  CFDE FFF6          	movff	postinc2,tblptrl
  1480  0011AA  CFDD FFF7          	movff	postdec2,tblptrh
  1481  0011AE                     	if	0	;tblptru may be non-zero
  1482  0011AE                     	endif
  1483  0011AE                     	if	0	;tblptru may be non-zero
  1484  0011AE                     	endif
  1485  0011AE  0008               	tblrd		*
  1486  0011B0  50F5               	movf	tablat,w,c
  1487  0011B2  6E4F               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  1488  0011B4  6A50               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  1489  0011B6  504D               	movf	??_vfpfcnvrt,w,c
  1490  0011B8  264F               	addwf	??_vfpfcnvrt+2,f,c
  1491  0011BA  504E               	movf	??_vfpfcnvrt+1,w,c
  1492  0011BC  2250               	addwfc	??_vfpfcnvrt+3,f,c
  1493  0011BE  5050               	movf	??_vfpfcnvrt+3,w,c
  1494  0011C0  E106               	bnz	u1370
  1495  0011C2  0E0A               	movlw	10
  1496  0011C4  5C4F               	subwf	??_vfpfcnvrt+2,w,c
  1497  0011C6  B0D8               	btfsc	status,0,c
  1498  0011C8  D002               	goto	u1370
  1499  0011CA  0E01               	movlw	1
  1500  0011CC  D001               	goto	u1380
  1501  0011CE                     u1370:
  1502  0011CE  0E00               	movlw	0
  1503  0011D0                     u1380:
  1504  0011D0  6E53               	movwf	_vfpfcnvrt$444,c
  1505  0011D2  6A54               	clrf	_vfpfcnvrt$444+1,c
  1506  0011D4  5053               	movf	_vfpfcnvrt$444,w,c
  1507  0011D6  1054               	iorwf	_vfpfcnvrt$444+1,w,c
  1508  0011D8  A4D8               	btfss	status,2,c
  1509  0011DA  D7D6               	goto	l1888
  1510  0011DC                     u1390:
  1511                           
  1512                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1249:      
      +                             if (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hh
      +                          X", ((sizeof("hhX")/sizeof("hhX"[0]))-1))) {
  1513  0011DC  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1514  0011E0  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1515  0011E4  CFDE F001          	movff	postinc2,strncmp@_l
  1516  0011E8  CFDD F002          	movff	postdec2,strncmp@_l+1
  1517  0011EC  0E30               	movlw	low (STR_1+17)
  1518  0011EE  6E03               	movwf	strncmp@_r,c
  1519  0011F0  0E10               	movlw	high (STR_1+17)
  1520  0011F2  6E04               	movwf	strncmp@_r+1,c
  1521  0011F4  0E00               	movlw	0
  1522  0011F6  6E06               	movwf	strncmp@n+1,c
  1523  0011F8  0E03               	movlw	3
  1524  0011FA  6E05               	movwf	strncmp@n,c
  1525  0011FC  EC4C  F00C         	call	_strncmp	;wreg free
  1526  001200  5001               	movf	?_strncmp,w,c
  1527  001202  1002               	iorwf	?_strncmp+1,w,c
  1528  001204  B4D8               	btfsc	status,2,c
  1529  001206  D016               	goto	u1410
  1530  001208  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1531  00120C  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1532  001210  CFDE F001          	movff	postinc2,strncmp@_l
  1533  001214  CFDD F002          	movff	postdec2,strncmp@_l+1
  1534  001218  0E43               	movlw	low STR_7
  1535  00121A  6E03               	movwf	strncmp@_r,c
  1536  00121C  0E10               	movlw	high STR_7
  1537  00121E  6E04               	movwf	strncmp@_r+1,c
  1538  001220  0E00               	movlw	0
  1539  001222  6E06               	movwf	strncmp@n+1,c
  1540  001224  0E03               	movlw	3
  1541  001226  6E05               	movwf	strncmp@n,c
  1542  001228  EC4C  F00C         	call	_strncmp	;wreg free
  1543  00122C  5001               	movf	?_strncmp,w,c
  1544  00122E  1002               	iorwf	?_strncmp+1,w,c
  1545  001230  A4D8               	btfss	status,2,c
  1546  001232  D053               	goto	l1910
  1547  001234                     u1410:
  1548                           
  1549                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1250: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1252:           
      +                            c = (*fmt)[2];
  1550  001234  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1551  001238  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1552  00123C  CFDE F04D          	movff	postinc2,??_vfpfcnvrt
  1553  001240  CFDD F04E          	movff	postdec2,??_vfpfcnvrt+1
  1554  001244  0E02               	movlw	2
  1555  001246  264D               	addwf	??_vfpfcnvrt,f,c
  1556  001248  0E00               	movlw	0
  1557  00124A  224E               	addwfc	??_vfpfcnvrt+1,f,c
  1558  00124C  C04D  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1559  001250  C04E  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1560  001254                     	if	0	;tblptru may be non-zero
  1561  001254                     	endif
  1562  001254                     	if	0	;tblptru may be non-zero
  1563  001254                     	endif
  1564  001254  0008               	tblrd		*
  1565  001256  CFF5 F05D          	movff	tablat,vfpfcnvrt@c
  1566                           
  1567                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1253:      
      +                                 *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
  1568  00125A  0E03               	movlw	3
  1569  00125C  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1570  001260  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1571  001264  26DE               	addwf	postinc2,f,c
  1572  001266  0E00               	movlw	0
  1573  001268  22DD               	addwfc	postdec2,f,c
  1574                           
  1575                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1254:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  1576  00126A  C04B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1577  00126E  C04C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1578  001272  CFDF F04D          	movff	indf2,??_vfpfcnvrt
  1579  001276  0E02               	movlw	2
  1580  001278  26DE               	addwf	postinc2,f,c
  1581  00127A  CFDF F04E          	movff	indf2,??_vfpfcnvrt+1
  1582  00127E  0E00               	movlw	0
  1583  001280  22DD               	addwfc	postdec2,f,c
  1584  001282  C04D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1585  001286  C04E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1586  00128A  50DF               	movf	indf2,w,c
  1587  00128C  6E4F               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  1588  00128E  504F               	movf	??_vfpfcnvrt+2,w,c
  1589  001290  6E55               	movwf	vfpfcnvrt@llu,c
  1590  001292  6A56               	clrf	vfpfcnvrt@llu+1,c
  1591  001294  6A57               	clrf	vfpfcnvrt@llu+2,c
  1592  001296  6A58               	clrf	vfpfcnvrt@llu+3,c
  1593  001298  6A59               	clrf	vfpfcnvrt@llu+4,c
  1594  00129A  6A5A               	clrf	vfpfcnvrt@llu+5,c
  1595  00129C  6A5B               	clrf	vfpfcnvrt@llu+6,c
  1596  00129E  6A5C               	clrf	vfpfcnvrt@llu+7,c
  1597                           
  1598                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1256:      
      +                                 return xtoa(fp, llu, c);
  1599  0012A0  C047  F020         	movff	vfpfcnvrt@fp,xtoa@fp
  1600  0012A4  C048  F021         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  1601  0012A8  C055  F022         	movff	vfpfcnvrt@llu,xtoa@d
  1602  0012AC  C056  F023         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  1603  0012B0  C057  F024         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  1604  0012B4  C058  F025         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  1605  0012B8  C059  F026         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  1606  0012BC  C05A  F027         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  1607  0012C0  C05B  F028         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  1608  0012C4  C05C  F029         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  1609  0012C8  C05D  F02A         	movff	vfpfcnvrt@c,xtoa@x
  1610  0012CC  EC1D  F00A         	call	_xtoa	;wreg free
  1611  0012D0  C020  F047         	movff	?_xtoa,?_vfpfcnvrt
  1612  0012D4  C021  F048         	movff	?_xtoa+1,?_vfpfcnvrt+1
  1613  0012D8  0012               	return	
  1614  0012DA                     l1910:
  1615                           
  1616                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  1617  0012DA  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1618  0012DE  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1619  0012E2  CFDE FFF6          	movff	postinc2,tblptrl
  1620  0012E6  CFDD FFF7          	movff	postdec2,tblptrh
  1621  0012EA                     	if	0	;tblptru may be non-zero
  1622  0012EA                     	endif
  1623  0012EA                     	if	0	;tblptru may be non-zero
  1624  0012EA                     	endif
  1625  0012EA  0008               	tblrd		*
  1626  0012EC  50F5               	movf	tablat,w,c
  1627  0012EE  0A78               	xorlw	120
  1628  0012F0  B4D8               	btfsc	status,2,c
  1629  0012F2  D00D               	goto	u1430
  1630  0012F4  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1631  0012F8  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1632  0012FC  CFDE FFF6          	movff	postinc2,tblptrl
  1633  001300  CFDD FFF7          	movff	postdec2,tblptrh
  1634  001304                     	if	0	;tblptru may be non-zero
  1635  001304                     	endif
  1636  001304                     	if	0	;tblptru may be non-zero
  1637  001304                     	endif
  1638  001304  0008               	tblrd		*
  1639  001306  50F5               	movf	tablat,w,c
  1640  001308  0A58               	xorlw	88
  1641  00130A  A4D8               	btfss	status,2,c
  1642  00130C  D04D               	goto	l1924
  1643  00130E                     u1430:
  1644                           
  1645                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  1646  00130E  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1647  001312  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1648  001316  CFDE FFF6          	movff	postinc2,tblptrl
  1649  00131A  CFDD FFF7          	movff	postdec2,tblptrh
  1650  00131E                     	if	0	;tblptru may be non-zero
  1651  00131E                     	endif
  1652  00131E                     	if	0	;tblptru may be non-zero
  1653  00131E                     	endif
  1654  00131E  0008               	tblrd		*
  1655  001320  CFF5 F05D          	movff	tablat,vfpfcnvrt@c
  1656                           
  1657                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  1658  001324  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1659  001328  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1660  00132C  2ADE               	incf	postinc2,f,c
  1661  00132E  0E00               	movlw	0
  1662  001330  22DD               	addwfc	postdec2,f,c
  1663                           
  1664                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  1665  001332  C04B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1666  001336  C04C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1667  00133A  CFDF F04D          	movff	indf2,??_vfpfcnvrt
  1668  00133E  0E02               	movlw	2
  1669  001340  26DE               	addwf	postinc2,f,c
  1670  001342  CFDF F04E          	movff	indf2,??_vfpfcnvrt+1
  1671  001346  0E00               	movlw	0
  1672  001348  22DD               	addwfc	postdec2,f,c
  1673  00134A  C04D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1674  00134E  C04E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1675  001352  CFDE F04F          	movff	postinc2,??_vfpfcnvrt+2
  1676  001356  CFDD F050          	movff	postdec2,??_vfpfcnvrt+3
  1677  00135A  C04F  F055         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  1678  00135E  C050  F056         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  1679  001362  6A57               	clrf	vfpfcnvrt@llu+2,c
  1680  001364  6A58               	clrf	vfpfcnvrt@llu+3,c
  1681  001366  6A59               	clrf	vfpfcnvrt@llu+4,c
  1682  001368  6A5A               	clrf	vfpfcnvrt@llu+5,c
  1683  00136A  6A5B               	clrf	vfpfcnvrt@llu+6,c
  1684  00136C  6A5C               	clrf	vfpfcnvrt@llu+7,c
  1685                           
  1686                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
  1687  00136E  C047  F020         	movff	vfpfcnvrt@fp,xtoa@fp
  1688  001372  C048  F021         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  1689  001376  C055  F022         	movff	vfpfcnvrt@llu,xtoa@d
  1690  00137A  C056  F023         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  1691  00137E  C057  F024         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  1692  001382  C058  F025         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  1693  001386  C059  F026         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  1694  00138A  C05A  F027         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  1695  00138E  C05B  F028         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  1696  001392  C05C  F029         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  1697  001396  C05D  F02A         	movff	vfpfcnvrt@c,xtoa@x
  1698  00139A  EC1D  F00A         	call	_xtoa	;wreg free
  1699  00139E  C020  F047         	movff	?_xtoa,?_vfpfcnvrt
  1700  0013A2  C021  F048         	movff	?_xtoa+1,?_vfpfcnvrt+1
  1701  0013A6  0012               	return	
  1702  0013A8                     l1924:
  1703                           
  1704                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1705  0013A8  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1706  0013AC  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1707  0013B0  CFDE FFF6          	movff	postinc2,tblptrl
  1708  0013B4  CFDD FFF7          	movff	postdec2,tblptrh
  1709  0013B8                     	if	0	;tblptru may be non-zero
  1710  0013B8                     	endif
  1711  0013B8                     	if	0	;tblptru may be non-zero
  1712  0013B8                     	endif
  1713  0013B8  0008               	tblrd		*
  1714  0013BA  50F5               	movf	tablat,w,c
  1715  0013BC  0A25               	xorlw	37
  1716  0013BE  A4D8               	btfss	status,2,c
  1717  0013C0  D016               	goto	l1934
  1718                           
  1719                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1720  0013C2  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1721  0013C6  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1722  0013CA  2ADE               	incf	postinc2,f,c
  1723  0013CC  0E00               	movlw	0
  1724  0013CE  22DD               	addwfc	postdec2,f,c
  1725                           
  1726                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1727  0013D0  0E00               	movlw	0
  1728  0013D2  6E06               	movwf	fputc@c+1,c
  1729  0013D4  0E25               	movlw	37
  1730  0013D6  6E05               	movwf	fputc@c,c
  1731  0013D8  C047  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1732  0013DC  C048  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1733  0013E0  EC2D  F00D         	call	_fputc	;wreg free
  1734  0013E4                     l1930:
  1735                           
  1736                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1737  0013E4  0E00               	movlw	0
  1738  0013E6  6E48               	movwf	?_vfpfcnvrt+1,c
  1739  0013E8  0E01               	movlw	1
  1740  0013EA  6E47               	movwf	?_vfpfcnvrt,c
  1741  0013EC  0012               	return	
  1742  0013EE                     l1934:
  1743                           
  1744                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1745  0013EE  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1746  0013F2  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1747  0013F6  2ADE               	incf	postinc2,f,c
  1748  0013F8  0E00               	movlw	0
  1749  0013FA  22DD               	addwfc	postdec2,f,c
  1750                           
  1751                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  1752  0013FC  0E00               	movlw	0
  1753  0013FE  6E48               	movwf	?_vfpfcnvrt+1,c
  1754  001400  0E00               	movlw	0
  1755  001402  6E47               	movwf	?_vfpfcnvrt,c
  1756  001404  0012               	return	
  1757  001406                     l1940:
  1758                           
  1759                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  1760  001406  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1761  00140A  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1762  00140E  CFDE FFF6          	movff	postinc2,tblptrl
  1763  001412  CFDD FFF7          	movff	postdec2,tblptrh
  1764  001416                     	if	0	;tblptru may be non-zero
  1765  001416                     	endif
  1766  001416                     	if	0	;tblptru may be non-zero
  1767  001416                     	endif
  1768  001416  0008               	tblrd		*
  1769  001418  50F5               	movf	tablat,w,c
  1770  00141A  6E05               	movwf	fputc@c,c
  1771  00141C  6A06               	clrf	fputc@c+1,c
  1772  00141E  C047  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1773  001422  C048  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1774  001426  EC2D  F00D         	call	_fputc	;wreg free
  1775                           
  1776                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  1777  00142A  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1778  00142E  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1779  001432  2ADE               	incf	postinc2,f,c
  1780  001434  0E00               	movlw	0
  1781  001436  22DD               	addwfc	postdec2,f,c
  1782  001438  D7D5               	goto	l1930
  1783  00143A                     __end_of_vfpfcnvrt:
  1784                           	opt callstack 0
  1785                           
  1786 ;; *************** function _xtoa *****************
  1787 ;; Defined at:
  1788 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1789 ;; Parameters:    Size  Location     Type
  1790 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  1791 ;;		 -> NULL(0), 
  1792 ;;  d               8   33[COMRAM] unsigned long long 
  1793 ;;  x               1   41[COMRAM] unsigned char 
  1794 ;; Auto vars:     Size  Location     Type
  1795 ;;  n               8   58[COMRAM] unsigned long long 
  1796 ;;  c               2   68[COMRAM] int 
  1797 ;;  i               2   66[COMRAM] int 
  1798 ;;  w               2   56[COMRAM] int 
  1799 ;;  p               2   54[COMRAM] int 
  1800 ;; Return value:  Size  Location     Type
  1801 ;;                  2   31[COMRAM] int 
  1802 ;; Registers used:
  1803 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1804 ;; Tracked objects:
  1805 ;;		On entry : 0/0
  1806 ;;		On exit  : 0/0
  1807 ;;		Unchanged: 0/0
  1808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1809 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1810 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1811 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1812 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1813 ;;Total ram usage:       39 bytes
  1814 ;; Hardware stack levels used:    1
  1815 ;; Hardware stack levels required when called:    7
  1816 ;; This function calls:
  1817 ;;		_isalpha
  1818 ;;		_isupper
  1819 ;;		_pad
  1820 ;;		_toupper
  1821 ;; This function is called by:
  1822 ;;		_vfpfcnvrt
  1823 ;; This function uses a non-reentrant model
  1824 ;;
  1825                           
  1826                           	psect	text8
  1827  00143A                     __ptext8:
  1828                           	opt callstack 0
  1829  00143A                     _xtoa:
  1830                           	opt callstack 20
  1831                           
  1832                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  1833                           
  1834                           ;incstack = 0
  1835  00143A  AE7D               	btfss	_prec+1,7,c
  1836                           
  1837                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  1838  00143C  927E               	bcf	_flags,1,c
  1839                           
  1840                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  1841  00143E  BE7D               	btfsc	_prec+1,7,c
  1842  001440  D005               	goto	u1040
  1843  001442  507D               	movf	_prec+1,w,c
  1844  001444  E108               	bnz	l180
  1845  001446  047C               	decf	_prec,w,c
  1846  001448  B0D8               	btfsc	status,0,c
  1847  00144A  D005               	goto	l180
  1848  00144C                     u1040:
  1849  00144C  0E00               	movlw	0
  1850  00144E  6E38               	movwf	xtoa@p+1,c
  1851  001450  0E01               	movlw	1
  1852  001452  6E37               	movwf	xtoa@p,c
  1853  001454  D004               	goto	l182
  1854  001456                     l180:
  1855  001456  C07C  F037         	movff	_prec,xtoa@p
  1856  00145A  C07D  F038         	movff	_prec+1,xtoa@p+1
  1857  00145E                     l182:
  1858                           
  1859                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  1860  00145E  C082  F039         	movff	_width,xtoa@w
  1861  001462  C083  F03A         	movff	_width+1,xtoa@w+1
  1862                           
  1863                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  1864  001466  A87E               	btfss	_flags,4,c
  1865  001468  D004               	goto	l1720
  1866                           
  1867                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  1868  00146A  0EFE               	movlw	254
  1869  00146C  2639               	addwf	xtoa@w,f,c
  1870  00146E  0EFF               	movlw	255
  1871  001470  223A               	addwfc	xtoa@w+1,f,c
  1872  001472                     l1720:
  1873                           
  1874                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  1875  001472  C022  F03B         	movff	xtoa@d,xtoa@n
  1876  001476  C023  F03C         	movff	xtoa@d+1,xtoa@n+1
  1877  00147A  C024  F03D         	movff	xtoa@d+2,xtoa@n+2
  1878  00147E  C025  F03E         	movff	xtoa@d+3,xtoa@n+3
  1879  001482  C026  F03F         	movff	xtoa@d+4,xtoa@n+4
  1880  001486  C027  F040         	movff	xtoa@d+5,xtoa@n+5
  1881  00148A  C028  F041         	movff	xtoa@d+6,xtoa@n+6
  1882  00148E  C029  F042         	movff	xtoa@d+7,xtoa@n+7
  1883                           
  1884                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  1885  001492  0E00               	movlw	0
  1886  001494  6E44               	movwf	xtoa@i+1,c
  1887  001496  0E1F               	movlw	31
  1888  001498  6E43               	movwf	xtoa@i,c
  1889                           
  1890                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  1891  00149A  0E00               	movlw	0
  1892  00149C  0100               	movlb	0	; () banked
  1893  00149E  6FA3               	movwf	(_dbuf+31)& (0+255),b
  1894                           
  1895                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1896  0014A0  D093               	goto	l1756
  1897  0014A2                     l1726:
  1898                           
  1899                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  1900  0014A2  0643               	decf	xtoa@i,f,c
  1901  0014A4  A0D8               	btfss	status,0,c
  1902  0014A6  0644               	decf	xtoa@i+1,f,c
  1903                           
  1904                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  1905  0014A8  0E0F               	movlw	15
  1906  0014AA  143B               	andwf	xtoa@n,w,c
  1907  0014AC  6E45               	movwf	xtoa@c,c
  1908  0014AE  6A46               	clrf	xtoa@c+1,c
  1909                           
  1910                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  1911  0014B0  BE46               	btfsc	xtoa@c+1,7,c
  1912  0014B2  D008               	goto	l1734
  1913  0014B4  5046               	movf	xtoa@c+1,w,c
  1914  0014B6  E104               	bnz	u1060
  1915  0014B8  0E0A               	movlw	10
  1916  0014BA  5C45               	subwf	xtoa@c,w,c
  1917  0014BC  A0D8               	btfss	status,0,c
  1918  0014BE  D002               	goto	l1734
  1919  0014C0                     u1060:
  1920  0014C0  0E57               	movlw	87
  1921  0014C2  D001               	goto	L2
  1922  0014C4                     l1734:
  1923  0014C4  0E30               	movlw	48
  1924  0014C6                     L2:
  1925  0014C6  2445               	addwf	xtoa@c,w,c
  1926  0014C8  6E45               	movwf	xtoa@c,c
  1927  0014CA  0E00               	movlw	0
  1928  0014CC  2046               	addwfc	xtoa@c+1,w,c
  1929  0014CE  6E46               	movwf	xtoa@c+1,c
  1930                           
  1931                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 646:       
      +                            if ((0 ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsi
      +                          gned)(c)|32)-'a') < 26)) {
  1932  0014D0  0EBF               	movlw	191
  1933  0014D2  6E2B               	movwf	??_xtoa& (0+255),c
  1934  0014D4  0EFF               	movlw	255
  1935  0014D6  6E2C               	movwf	(??_xtoa+1)& (0+255),c
  1936  0014D8  502A               	movf	xtoa@x,w,c
  1937  0014DA  6E2D               	movwf	(??_xtoa+2)& (0+255),c
  1938  0014DC  6A2E               	clrf	(??_xtoa+3)& (0+255),c
  1939  0014DE  502B               	movf	??_xtoa,w,c
  1940  0014E0  262D               	addwf	??_xtoa+2,f,c
  1941  0014E2  502C               	movf	??_xtoa+1,w,c
  1942  0014E4  222E               	addwfc	??_xtoa+3,f,c
  1943  0014E6  502E               	movf	??_xtoa+3,w,c
  1944  0014E8  E106               	bnz	u1070
  1945  0014EA  0E1A               	movlw	26
  1946  0014EC  5C2D               	subwf	??_xtoa+2,w,c
  1947  0014EE  B0D8               	btfsc	status,0,c
  1948  0014F0  D002               	goto	u1070
  1949  0014F2  0E01               	movlw	1
  1950  0014F4  D001               	goto	u1080
  1951  0014F6                     u1070:
  1952  0014F6  0E00               	movlw	0
  1953  0014F8                     u1080:
  1954  0014F8  6E33               	movwf	_xtoa$428,c
  1955  0014FA  6A34               	clrf	_xtoa$428+1,c
  1956  0014FC  5033               	movf	_xtoa$428,w,c
  1957  0014FE  1034               	iorwf	_xtoa$428+1,w,c
  1958  001500  B4D8               	btfsc	status,2,c
  1959  001502  D027               	goto	l1748
  1960  001504  0E9F               	movlw	159
  1961  001506  6E2B               	movwf	??_xtoa& (0+255),c
  1962  001508  0EFF               	movlw	255
  1963  00150A  6E2C               	movwf	(??_xtoa+1)& (0+255),c
  1964  00150C  0E20               	movlw	32
  1965  00150E  1045               	iorwf	xtoa@c,w,c
  1966  001510  6E2D               	movwf	(??_xtoa+2)& (0+255),c
  1967  001512  0E00               	movlw	0
  1968  001514  1046               	iorwf	xtoa@c+1,w,c
  1969  001516  6E2E               	movwf	(??_xtoa+3)& (0+255),c
  1970  001518  502B               	movf	??_xtoa,w,c
  1971  00151A  262D               	addwf	??_xtoa+2,f,c
  1972  00151C  502C               	movf	??_xtoa+1,w,c
  1973  00151E  222E               	addwfc	??_xtoa+3,f,c
  1974  001520  502E               	movf	??_xtoa+3,w,c
  1975  001522  E106               	bnz	u1100
  1976  001524  0E1A               	movlw	26
  1977  001526  5C2D               	subwf	??_xtoa+2,w,c
  1978  001528  B0D8               	btfsc	status,0,c
  1979  00152A  D002               	goto	u1100
  1980  00152C  0E01               	movlw	1
  1981  00152E  D001               	goto	u1110
  1982  001530                     u1100:
  1983  001530  0E00               	movlw	0
  1984  001532                     u1110:
  1985  001532  6E35               	movwf	_xtoa$429,c
  1986  001534  6A36               	clrf	_xtoa$429+1,c
  1987  001536  5035               	movf	_xtoa$429,w,c
  1988  001538  1036               	iorwf	_xtoa$429+1,w,c
  1989  00153A  B4D8               	btfsc	status,2,c
  1990  00153C  D00A               	goto	l1748
  1991                           
  1992                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  1993  00153E  C045  F007         	movff	xtoa@c,toupper@c
  1994  001542  C046  F008         	movff	xtoa@c+1,toupper@c+1
  1995  001546  ECF1  F00D         	call	_toupper	;wreg free
  1996  00154A  C007  F045         	movff	?_toupper,xtoa@c
  1997  00154E  C008  F046         	movff	?_toupper+1,xtoa@c+1
  1998  001552                     l1748:
  1999                           
  2000                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  2001  001552  0E84               	movlw	low _dbuf
  2002  001554  2443               	addwf	xtoa@i,w,c
  2003  001556  6ED9               	movwf	fsr2l,c
  2004  001558  0E00               	movlw	high _dbuf
  2005  00155A  2044               	addwfc	xtoa@i+1,w,c
  2006  00155C  6EDA               	movwf	fsr2h,c
  2007  00155E  C045  FFDF         	movff	xtoa@c,indf2
  2008                           
  2009                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  2010  001562  0637               	decf	xtoa@p,f,c
  2011  001564  A0D8               	btfss	status,0,c
  2012  001566  0638               	decf	xtoa@p+1,f,c
  2013                           
  2014                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  2015  001568  0639               	decf	xtoa@w,f,c
  2016  00156A  A0D8               	btfss	status,0,c
  2017  00156C  063A               	decf	xtoa@w+1,f,c
  2018                           
  2019                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  2020  00156E  C03B  F02B         	movff	xtoa@n,??_xtoa
  2021  001572  C03C  F02C         	movff	xtoa@n+1,??_xtoa+1
  2022  001576  C03D  F02D         	movff	xtoa@n+2,??_xtoa+2
  2023  00157A  C03E  F02E         	movff	xtoa@n+3,??_xtoa+3
  2024  00157E  C03F  F02F         	movff	xtoa@n+4,??_xtoa+4
  2025  001582  C040  F030         	movff	xtoa@n+5,??_xtoa+5
  2026  001586  C041  F031         	movff	xtoa@n+6,??_xtoa+6
  2027  00158A  C042  F032         	movff	xtoa@n+7,??_xtoa+7
  2028  00158E  0E05               	movlw	5
  2029  001590  D009               	goto	u1130
  2030  001592                     u1135:
  2031  001592  90D8               	bcf	status,0,c
  2032  001594  3232               	rrcf	??_xtoa+7,f,c
  2033  001596  3231               	rrcf	??_xtoa+6,f,c
  2034  001598  3230               	rrcf	??_xtoa+5,f,c
  2035  00159A  322F               	rrcf	??_xtoa+4,f,c
  2036  00159C  322E               	rrcf	??_xtoa+3,f,c
  2037  00159E  322D               	rrcf	??_xtoa+2,f,c
  2038  0015A0  322C               	rrcf	??_xtoa+1,f,c
  2039  0015A2  322B               	rrcf	??_xtoa,f,c
  2040  0015A4                     u1130:
  2041  0015A4  2EE8               	decfsz	wreg,f,c
  2042  0015A6  D7F5               	goto	u1135
  2043  0015A8  C02B  F03B         	movff	??_xtoa,xtoa@n
  2044  0015AC  C02C  F03C         	movff	??_xtoa+1,xtoa@n+1
  2045  0015B0  C02D  F03D         	movff	??_xtoa+2,xtoa@n+2
  2046  0015B4  C02E  F03E         	movff	??_xtoa+3,xtoa@n+3
  2047  0015B8  C02F  F03F         	movff	??_xtoa+4,xtoa@n+4
  2048  0015BC  C030  F040         	movff	??_xtoa+5,xtoa@n+5
  2049  0015C0  C031  F041         	movff	??_xtoa+6,xtoa@n+6
  2050  0015C4  C032  F042         	movff	??_xtoa+7,xtoa@n+7
  2051  0015C8                     l1756:
  2052                           
  2053                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2054  0015C8  BE44               	btfsc	xtoa@i+1,7,c
  2055  0015CA  D020               	goto	u1180
  2056  0015CC  5044               	movf	xtoa@i+1,w,c
  2057  0015CE  E104               	bnz	u1140
  2058  0015D0  0E02               	movlw	2
  2059  0015D2  5C43               	subwf	xtoa@i,w,c
  2060  0015D4  A0D8               	btfss	status,0,c
  2061  0015D6  D01A               	goto	u1180
  2062  0015D8                     u1140:
  2063  0015D8  503B               	movf	xtoa@n,w,c
  2064  0015DA  103C               	iorwf	xtoa@n+1,w,c
  2065  0015DC  103D               	iorwf	xtoa@n+2,w,c
  2066  0015DE  103E               	iorwf	xtoa@n+3,w,c
  2067  0015E0  103F               	iorwf	xtoa@n+4,w,c
  2068  0015E2  1040               	iorwf	xtoa@n+5,w,c
  2069  0015E4  1041               	iorwf	xtoa@n+6,w,c
  2070  0015E6  1042               	iorwf	xtoa@n+7,w,c
  2071  0015E8  A4D8               	btfss	status,2,c
  2072  0015EA  D75B               	goto	l1726
  2073  0015EC  BE38               	btfsc	xtoa@p+1,7,c
  2074  0015EE  D005               	goto	u1160
  2075  0015F0  5038               	movf	xtoa@p+1,w,c
  2076  0015F2  E102               	bnz	u1161
  2077  0015F4  0437               	decf	xtoa@p,w,c
  2078  0015F6  B0D8               	btfsc	status,0,c
  2079  0015F8                     u1161:
  2080  0015F8  D754               	goto	l1726
  2081  0015FA                     u1160:
  2082  0015FA  BE3A               	btfsc	xtoa@w+1,7,c
  2083  0015FC  D007               	goto	u1180
  2084  0015FE  503A               	movf	xtoa@w+1,w,c
  2085  001600  E103               	bnz	u1170
  2086  001602  0439               	decf	xtoa@w,w,c
  2087  001604  A0D8               	btfss	status,0,c
  2088  001606  D002               	goto	u1180
  2089  001608                     u1170:
  2090  001608  B27E               	btfsc	_flags,1,c
  2091  00160A  D74B               	goto	l1726
  2092  00160C                     u1180:
  2093                           
  2094                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  2095  00160C  A87E               	btfss	_flags,4,c
  2096  00160E  D016               	goto	l1772
  2097                           
  2098                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  2099  001610  0643               	decf	xtoa@i,f,c
  2100  001612  A0D8               	btfss	status,0,c
  2101  001614  0644               	decf	xtoa@i+1,f,c
  2102                           
  2103                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  2104  001616  0E84               	movlw	low _dbuf
  2105  001618  2443               	addwf	xtoa@i,w,c
  2106  00161A  6ED9               	movwf	fsr2l,c
  2107  00161C  0E00               	movlw	high _dbuf
  2108  00161E  2044               	addwfc	xtoa@i+1,w,c
  2109  001620  6EDA               	movwf	fsr2h,c
  2110  001622  C02A  FFDF         	movff	xtoa@x,indf2
  2111                           
  2112                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  2113  001626  0643               	decf	xtoa@i,f,c
  2114  001628  A0D8               	btfss	status,0,c
  2115  00162A  0644               	decf	xtoa@i+1,f,c
  2116                           
  2117                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  2118  00162C  0E84               	movlw	low _dbuf
  2119  00162E  2443               	addwf	xtoa@i,w,c
  2120  001630  6ED9               	movwf	fsr2l,c
  2121  001632  0E00               	movlw	high _dbuf
  2122  001634  2044               	addwfc	xtoa@i+1,w,c
  2123  001636  6EDA               	movwf	fsr2h,c
  2124  001638  0E30               	movlw	48
  2125  00163A  6EDF               	movwf	indf2,c
  2126  00163C                     l1772:
  2127                           
  2128                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  2129  00163C  C020  F015         	movff	xtoa@fp,pad@fp
  2130  001640  C021  F016         	movff	xtoa@fp+1,pad@fp+1
  2131  001644  0E84               	movlw	low _dbuf
  2132  001646  2443               	addwf	xtoa@i,w,c
  2133  001648  6E17               	movwf	pad@buf,c
  2134  00164A  0E00               	movlw	high _dbuf
  2135  00164C  2044               	addwfc	xtoa@i+1,w,c
  2136  00164E  6E18               	movwf	pad@buf+1,c
  2137  001650  C039  F019         	movff	xtoa@w,pad@p
  2138  001654  C03A  F01A         	movff	xtoa@w+1,pad@p+1
  2139  001658  ECA1  F00C         	call	_pad	;wreg free
  2140  00165C  C015  F020         	movff	?_pad,?_xtoa
  2141  001660  C016  F021         	movff	?_pad+1,?_xtoa+1
  2142  001664  0012               	return		;funcret
  2143  001666                     __end_of_xtoa:
  2144                           	opt callstack 0
  2145                           
  2146 ;; *************** function _toupper *****************
  2147 ;; Defined at:
  2148 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  2149 ;; Parameters:    Size  Location     Type
  2150 ;;  c               2    6[COMRAM] int 
  2151 ;; Auto vars:     Size  Location     Type
  2152 ;;		None
  2153 ;; Return value:  Size  Location     Type
  2154 ;;                  2    6[COMRAM] int 
  2155 ;; Registers used:
  2156 ;;		wreg, status,2, status,0
  2157 ;; Tracked objects:
  2158 ;;		On entry : 0/0
  2159 ;;		On exit  : 0/0
  2160 ;;		Unchanged: 0/0
  2161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2162 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2163 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2164 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2165 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2166 ;;Total ram usage:        8 bytes
  2167 ;; Hardware stack levels used:    1
  2168 ;; Hardware stack levels required when called:    1
  2169 ;; This function calls:
  2170 ;;		_islower
  2171 ;; This function is called by:
  2172 ;;		_xtoa
  2173 ;; This function uses a non-reentrant model
  2174 ;;
  2175                           
  2176                           	psect	text9
  2177  001BE2                     __ptext9:
  2178                           	opt callstack 0
  2179  001BE2                     _toupper:
  2180                           	opt callstack 25
  2181                           
  2182                           ;incstack = 0
  2183  001BE2  0E9F               	movlw	159
  2184  001BE4  6E09               	movwf	??_toupper& (0+255),c
  2185  001BE6  0EFF               	movlw	255
  2186  001BE8  6E0A               	movwf	(??_toupper+1)& (0+255),c
  2187  001BEA  C007  F00B         	movff	toupper@c,??_toupper+2
  2188  001BEE  C008  F00C         	movff	toupper@c+1,??_toupper+3
  2189  001BF2  5009               	movf	??_toupper,w,c
  2190  001BF4  260B               	addwf	??_toupper+2,f,c
  2191  001BF6  500A               	movf	??_toupper+1,w,c
  2192  001BF8  220C               	addwfc	??_toupper+3,f,c
  2193  001BFA  500C               	movf	??_toupper+3,w,c
  2194  001BFC  E106               	bnz	u960
  2195  001BFE  0E1A               	movlw	26
  2196  001C00  5C0B               	subwf	??_toupper+2,w,c
  2197  001C02  B0D8               	btfsc	status,0,c
  2198  001C04  D002               	goto	u960
  2199  001C06  0E01               	movlw	1
  2200  001C08  D001               	goto	u970
  2201  001C0A                     u960:
  2202  001C0A  0E00               	movlw	0
  2203  001C0C                     u970:
  2204  001C0C  6E0D               	movwf	_toupper$1006,c
  2205  001C0E  6A0E               	clrf	_toupper$1006+1,c
  2206  001C10  500D               	movf	_toupper$1006,w,c
  2207  001C12  100E               	iorwf	_toupper$1006+1,w,c
  2208  001C14  B4D8               	btfsc	status,2,c
  2209  001C16  D005               	goto	l1022
  2210  001C18  0E5F               	movlw	95
  2211  001C1A  1407               	andwf	toupper@c,w,c
  2212  001C1C  6E07               	movwf	?_toupper,c
  2213  001C1E  6A08               	clrf	?_toupper+1,c
  2214  001C20  0012               	return	
  2215  001C22                     l1022:
  2216  001C22  C007  F007         	movff	toupper@c,?_toupper
  2217  001C26  C008  F008         	movff	toupper@c+1,?_toupper+1
  2218  001C2A  0012               	return		;funcret
  2219  001C2C                     __end_of_toupper:
  2220                           	opt callstack 0
  2221                           
  2222 ;; *************** function _islower *****************
  2223 ;; Defined at:
  2224 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  2225 ;; Parameters:    Size  Location     Type
  2226 ;;  c               2    0[COMRAM] int 
  2227 ;; Auto vars:     Size  Location     Type
  2228 ;;		None
  2229 ;; Return value:  Size  Location     Type
  2230 ;;                  2    0[COMRAM] int 
  2231 ;; Registers used:
  2232 ;;		wreg, status,2, status,0
  2233 ;; Tracked objects:
  2234 ;;		On entry : 0/0
  2235 ;;		On exit  : 0/0
  2236 ;;		Unchanged: 0/0
  2237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2238 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2240 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2241 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2242 ;;Total ram usage:        6 bytes
  2243 ;; Hardware stack levels used:    1
  2244 ;; This function calls:
  2245 ;;		Nothing
  2246 ;; This function is called by:
  2247 ;;		_toupper
  2248 ;; This function uses a non-reentrant model
  2249 ;;
  2250                           
  2251                           	psect	text10
  2252  001D1C                     __ptext10:
  2253                           	opt callstack 0
  2254  001D1C                     _islower:
  2255                           	opt callstack 25
  2256                           
  2257                           ;incstack = 0
  2258  001D1C  0E9F               	movlw	159
  2259  001D1E  6E03               	movwf	??_islower& (0+255),c
  2260  001D20  0EFF               	movlw	255
  2261  001D22  6E04               	movwf	(??_islower+1)& (0+255),c
  2262  001D24  C001  F005         	movff	islower@c,??_islower+2
  2263  001D28  C002  F006         	movff	islower@c+1,??_islower+3
  2264  001D2C  5003               	movf	??_islower,w,c
  2265  001D2E  2605               	addwf	??_islower+2,f,c
  2266  001D30  5004               	movf	??_islower+1,w,c
  2267  001D32  2206               	addwfc	??_islower+3,f,c
  2268  001D34  5006               	movf	??_islower+3,w,c
  2269  001D36  E106               	bnz	u860
  2270  001D38  0E1A               	movlw	26
  2271  001D3A  5C05               	subwf	??_islower+2,w,c
  2272  001D3C  B0D8               	btfsc	status,0,c
  2273  001D3E  D002               	goto	u860
  2274  001D40  0E01               	movlw	1
  2275  001D42  D001               	goto	u870
  2276  001D44                     u860:
  2277  001D44  0E00               	movlw	0
  2278  001D46                     u870:
  2279  001D46  6E01               	movwf	?_islower,c
  2280  001D48  6A02               	clrf	?_islower+1,c
  2281  001D4A  0012               	return		;funcret
  2282  001D4C                     __end_of_islower:
  2283                           	opt callstack 0
  2284                           
  2285 ;; *************** function _pad *****************
  2286 ;; Defined at:
  2287 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2288 ;; Parameters:    Size  Location     Type
  2289 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  2290 ;;		 -> NULL(0), 
  2291 ;;  buf             2   22[COMRAM] PTR unsigned char 
  2292 ;;		 -> dbuf(32), 
  2293 ;;  p               2   24[COMRAM] int 
  2294 ;; Auto vars:     Size  Location     Type
  2295 ;;  w               2   29[COMRAM] int 
  2296 ;;  i               2   27[COMRAM] int 
  2297 ;; Return value:  Size  Location     Type
  2298 ;;                  2   20[COMRAM] int 
  2299 ;; Registers used:
  2300 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2301 ;; Tracked objects:
  2302 ;;		On entry : 0/0
  2303 ;;		On exit  : 0/0
  2304 ;;		Unchanged: 0/0
  2305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2306 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2307 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2308 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2309 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2310 ;;Total ram usage:       11 bytes
  2311 ;; Hardware stack levels used:    1
  2312 ;; Hardware stack levels required when called:    6
  2313 ;; This function calls:
  2314 ;;		_fputc
  2315 ;;		_fputs
  2316 ;;		_strlen
  2317 ;; This function is called by:
  2318 ;;		_xtoa
  2319 ;; This function uses a non-reentrant model
  2320 ;;
  2321                           
  2322                           	psect	text11
  2323  001942                     __ptext11:
  2324                           	opt callstack 0
  2325  001942                     _pad:
  2326                           	opt callstack 20
  2327                           
  2328                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  2329                           
  2330                           ;incstack = 0
  2331  001942  A07E               	btfss	_flags,0,c
  2332  001944  D00A               	goto	l1652
  2333                           
  2334                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  2335  001946  C017  F00E         	movff	pad@buf,fputs@s
  2336  00194A  C018  F00F         	movff	pad@buf+1,fputs@s+1
  2337  00194E  C015  F010         	movff	pad@fp,fputs@fp
  2338  001952  C016  F011         	movff	pad@fp+1,fputs@fp+1
  2339  001956  EC58  F00E         	call	_fputs	;wreg free
  2340  00195A                     l1652:
  2341                           
  2342                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  2343  00195A  BE1A               	btfsc	pad@p+1,7,c
  2344  00195C  D005               	goto	l1656
  2345  00195E  C019  F01E         	movff	pad@p,pad@w
  2346  001962  C01A  F01F         	movff	pad@p+1,pad@w+1
  2347  001966  D004               	goto	l170
  2348  001968                     l1656:
  2349  001968  0E00               	movlw	0
  2350  00196A  6E1F               	movwf	pad@w+1,c
  2351  00196C  0E00               	movlw	0
  2352  00196E  6E1E               	movwf	pad@w,c
  2353  001970                     l170:
  2354                           
  2355                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  2356  001970  0E00               	movlw	0
  2357  001972  6E1D               	movwf	pad@i+1,c
  2358  001974  0E00               	movlw	0
  2359  001976  6E1C               	movwf	pad@i,c
  2360                           
  2361                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2362  001978  D00C               	goto	l1662
  2363  00197A                     l1658:
  2364                           
  2365                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  2366  00197A  0E00               	movlw	0
  2367  00197C  6E06               	movwf	fputc@c+1,c
  2368  00197E  0E20               	movlw	32
  2369  001980  6E05               	movwf	fputc@c,c
  2370  001982  C015  F007         	movff	pad@fp,fputc@fp
  2371  001986  C016  F008         	movff	pad@fp+1,fputc@fp+1
  2372  00198A  EC2D  F00D         	call	_fputc	;wreg free
  2373                           
  2374                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  2375  00198E  4A1C               	infsnz	pad@i,f,c
  2376  001990  2A1D               	incf	pad@i+1,f,c
  2377  001992                     l1662:
  2378                           
  2379                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2380  001992  501E               	movf	pad@w,w,c
  2381  001994  5C1C               	subwf	pad@i,w,c
  2382  001996  501D               	movf	pad@i+1,w,c
  2383  001998  0A80               	xorlw	128
  2384  00199A  6E1B               	movwf	??_pad& (0+255),c
  2385  00199C  501F               	movf	pad@w+1,w,c
  2386  00199E  0A80               	xorlw	128
  2387  0019A0  581B               	subwfb	??_pad& (0+255),w,c
  2388  0019A2  A0D8               	btfss	status,0,c
  2389  0019A4  D7EA               	goto	l1658
  2390                           
  2391                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  2392  0019A6  B07E               	btfsc	_flags,0,c
  2393  0019A8  D00A               	goto	l1666
  2394                           
  2395                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  2396  0019AA  C017  F00E         	movff	pad@buf,fputs@s
  2397  0019AE  C018  F00F         	movff	pad@buf+1,fputs@s+1
  2398  0019B2  C015  F010         	movff	pad@fp,fputs@fp
  2399  0019B6  C016  F011         	movff	pad@fp+1,fputs@fp+1
  2400  0019BA  EC58  F00E         	call	_fputs	;wreg free
  2401  0019BE                     l1666:
  2402                           
  2403                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  2404  0019BE  C017  F001         	movff	pad@buf,strlen@s
  2405  0019C2  C018  F002         	movff	pad@buf+1,strlen@s+1
  2406  0019C6  ECD6  F00E         	call	_strlen	;wreg free
  2407  0019CA  501E               	movf	pad@w,w,c
  2408  0019CC  2401               	addwf	?_strlen,w,c
  2409  0019CE  6E15               	movwf	?_pad,c
  2410  0019D0  501F               	movf	pad@w+1,w,c
  2411  0019D2  2002               	addwfc	?_strlen+1,w,c
  2412  0019D4  6E16               	movwf	?_pad+1,c
  2413  0019D6  0012               	return		;funcret
  2414  0019D8                     __end_of_pad:
  2415                           	opt callstack 0
  2416                           
  2417 ;; *************** function _strlen *****************
  2418 ;; Defined at:
  2419 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  2420 ;; Parameters:    Size  Location     Type
  2421 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2422 ;;		 -> dbuf(32), 
  2423 ;; Auto vars:     Size  Location     Type
  2424 ;;  a               2    2[COMRAM] PTR const unsigned char 
  2425 ;;		 -> dbuf(32), 
  2426 ;; Return value:  Size  Location     Type
  2427 ;;                  2    0[COMRAM] unsigned int 
  2428 ;; Registers used:
  2429 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2430 ;; Tracked objects:
  2431 ;;		On entry : 0/0
  2432 ;;		On exit  : 0/0
  2433 ;;		Unchanged: 0/0
  2434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2435 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2436 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2438 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2439 ;;Total ram usage:        4 bytes
  2440 ;; Hardware stack levels used:    1
  2441 ;; This function calls:
  2442 ;;		Nothing
  2443 ;; This function is called by:
  2444 ;;		_pad
  2445 ;; This function uses a non-reentrant model
  2446 ;;
  2447                           
  2448                           	psect	text12
  2449  001DAC                     __ptext12:
  2450                           	opt callstack 0
  2451  001DAC                     _strlen:
  2452                           	opt callstack 25
  2453                           
  2454                           ;incstack = 0
  2455  001DAC  C001  F003         	movff	strlen@s,strlen@a
  2456  001DB0  C002  F004         	movff	strlen@s+1,strlen@a+1
  2457  001DB4  D002               	goto	l1638
  2458  001DB6                     l1636:
  2459  001DB6  4A01               	infsnz	strlen@s,f,c
  2460  001DB8  2A02               	incf	strlen@s+1,f,c
  2461  001DBA                     l1638:
  2462  001DBA  C001  FFD9         	movff	strlen@s,fsr2l
  2463  001DBE  C002  FFDA         	movff	strlen@s+1,fsr2h
  2464  001DC2  50DF               	movf	indf2,w,c
  2465  001DC4  A4D8               	btfss	status,2,c
  2466  001DC6  D7F7               	goto	l1636
  2467  001DC8  5003               	movf	strlen@a,w,c
  2468  001DCA  5C01               	subwf	strlen@s,w,c
  2469  001DCC  6E01               	movwf	?_strlen,c
  2470  001DCE  5004               	movf	strlen@a+1,w,c
  2471  001DD0  5802               	subwfb	strlen@s+1,w,c
  2472  001DD2  6E02               	movwf	?_strlen+1,c
  2473  001DD4  0012               	return		;funcret
  2474  001DD6                     __end_of_strlen:
  2475                           	opt callstack 0
  2476                           
  2477 ;; *************** function _fputs *****************
  2478 ;; Defined at:
  2479 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  2480 ;; Parameters:    Size  Location     Type
  2481 ;;  s               2   13[COMRAM] PTR const unsigned char 
  2482 ;;		 -> dbuf(32), 
  2483 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  2484 ;;		 -> NULL(0), 
  2485 ;; Auto vars:     Size  Location     Type
  2486 ;;  i               2   18[COMRAM] int 
  2487 ;;  c               1   17[COMRAM] unsigned char 
  2488 ;; Return value:  Size  Location     Type
  2489 ;;                  2   13[COMRAM] int 
  2490 ;; Registers used:
  2491 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2492 ;; Tracked objects:
  2493 ;;		On entry : 0/0
  2494 ;;		On exit  : 0/0
  2495 ;;		Unchanged: 0/0
  2496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2497 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2498 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2500 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2501 ;;Total ram usage:        7 bytes
  2502 ;; Hardware stack levels used:    1
  2503 ;; Hardware stack levels required when called:    5
  2504 ;; This function calls:
  2505 ;;		_fputc
  2506 ;; This function is called by:
  2507 ;;		_pad
  2508 ;; This function uses a non-reentrant model
  2509 ;;
  2510                           
  2511                           	psect	text13
  2512  001CB0                     __ptext13:
  2513                           	opt callstack 0
  2514  001CB0                     _fputs:
  2515                           	opt callstack 20
  2516                           
  2517                           ;incstack = 0
  2518  001CB0  0E00               	movlw	0
  2519  001CB2  6E14               	movwf	fputs@i+1,c
  2520  001CB4  0E00               	movlw	0
  2521  001CB6  6E13               	movwf	fputs@i,c
  2522  001CB8  D00B               	goto	l1632
  2523  001CBA                     l1628:
  2524  001CBA  C012  F005         	movff	fputs@c,fputc@c
  2525  001CBE  6A06               	clrf	fputc@c+1,c
  2526  001CC0  C010  F007         	movff	fputs@fp,fputc@fp
  2527  001CC4  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  2528  001CC8  EC2D  F00D         	call	_fputc	;wreg free
  2529  001CCC  4A13               	infsnz	fputs@i,f,c
  2530  001CCE  2A14               	incf	fputs@i+1,f,c
  2531  001CD0                     l1632:
  2532  001CD0  5013               	movf	fputs@i,w,c
  2533  001CD2  240E               	addwf	fputs@s,w,c
  2534  001CD4  6ED9               	movwf	fsr2l,c
  2535  001CD6  5014               	movf	fputs@i+1,w,c
  2536  001CD8  200F               	addwfc	fputs@s+1,w,c
  2537  001CDA  6EDA               	movwf	fsr2h,c
  2538  001CDC  50DF               	movf	indf2,w,c
  2539  001CDE  6E12               	movwf	fputs@c,c
  2540  001CE0  5012               	movf	fputs@c,w,c
  2541  001CE2  B4D8               	btfsc	status,2,c
  2542  001CE4  0012               	return	
  2543  001CE6  D7E9               	goto	l1628
  2544  001CE8                     __end_of_fputs:
  2545                           	opt callstack 0
  2546                           
  2547 ;; *************** function _fputc *****************
  2548 ;; Defined at:
  2549 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  2550 ;; Parameters:    Size  Location     Type
  2551 ;;  c               2    4[COMRAM] int 
  2552 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  2553 ;;		 -> NULL(0), 
  2554 ;; Auto vars:     Size  Location     Type
  2555 ;;		None
  2556 ;; Return value:  Size  Location     Type
  2557 ;;                  2    4[COMRAM] int 
  2558 ;; Registers used:
  2559 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2560 ;; Tracked objects:
  2561 ;;		On entry : 0/0
  2562 ;;		On exit  : 0/0
  2563 ;;		Unchanged: 0/0
  2564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2565 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2567 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2568 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2569 ;;Total ram usage:        9 bytes
  2570 ;; Hardware stack levels used:    1
  2571 ;; Hardware stack levels required when called:    4
  2572 ;; This function calls:
  2573 ;;		_putch
  2574 ;; This function is called by:
  2575 ;;		_pad
  2576 ;;		_vfpfcnvrt
  2577 ;;		_fputs
  2578 ;; This function uses a non-reentrant model
  2579 ;;
  2580                           
  2581                           	psect	text14
  2582  001A5A                     __ptext14:
  2583                           	opt callstack 0
  2584  001A5A                     _fputc:
  2585                           	opt callstack 20
  2586                           
  2587                           ;incstack = 0
  2588  001A5A  5007               	movf	fputc@fp,w,c
  2589  001A5C  1008               	iorwf	fputc@fp+1,w,c
  2590  001A5E  B4D8               	btfsc	status,2,c
  2591  001A60  D004               	goto	u810
  2592  001A62  5007               	movf	fputc@fp,w,c
  2593  001A64  1008               	iorwf	fputc@fp+1,w,c
  2594  001A66  A4D8               	btfss	status,2,c
  2595  001A68  D004               	goto	l1618
  2596  001A6A                     u810:
  2597  001A6A  5005               	movf	fputc@c,w,c
  2598  001A6C  EC64  F00F         	call	_putch
  2599  001A70  0012               	return	
  2600  001A72                     l1618:
  2601  001A72  EE20 F004          	lfsr	2,4
  2602  001A76  5007               	movf	fputc@fp,w,c
  2603  001A78  26D9               	addwf	fsr2l,f,c
  2604  001A7A  5008               	movf	fputc@fp+1,w,c
  2605  001A7C  22DA               	addwfc	fsr2h,f,c
  2606  001A7E  50DE               	movf	postinc2,w,c
  2607  001A80  10DE               	iorwf	postinc2,w,c
  2608  001A82  B4D8               	btfsc	status,2,c
  2609  001A84  D016               	goto	u830
  2610  001A86  EE20 F004          	lfsr	2,4
  2611  001A8A  5007               	movf	fputc@fp,w,c
  2612  001A8C  26D9               	addwf	fsr2l,f,c
  2613  001A8E  5008               	movf	fputc@fp+1,w,c
  2614  001A90  22DA               	addwfc	fsr2h,f,c
  2615  001A92  EE10 F002          	lfsr	1,2
  2616  001A96  5007               	movf	fputc@fp,w,c
  2617  001A98  26E1               	addwf	fsr1l,f,c
  2618  001A9A  5008               	movf	fputc@fp+1,w,c
  2619  001A9C  22E2               	addwfc	fsr1h,f,c
  2620  001A9E  50DE               	movf	postinc2,w,c
  2621  001AA0  5CE6               	subwf	postinc1,w,c
  2622  001AA2  50E6               	movf	postinc1,w,c
  2623  001AA4  0A80               	xorlw	128
  2624  001AA6  6E0D               	movwf	(??_fputc+4)& (0+255),c
  2625  001AA8  50DE               	movf	postinc2,w,c
  2626  001AAA  0A80               	xorlw	128
  2627  001AAC  580D               	subwfb	(??_fputc+4)& (0+255),w,c
  2628  001AAE  B0D8               	btfsc	status,0,c
  2629  001AB0  0012               	return	
  2630  001AB2                     u830:
  2631  001AB2  EE20 F002          	lfsr	2,2
  2632  001AB6  5007               	movf	fputc@fp,w,c
  2633  001AB8  26D9               	addwf	fsr2l,f,c
  2634  001ABA  5008               	movf	fputc@fp+1,w,c
  2635  001ABC  22DA               	addwfc	fsr2h,f,c
  2636  001ABE  2ADE               	incf	postinc2,f,c
  2637  001AC0  0E00               	movlw	0
  2638  001AC2  22DD               	addwfc	postdec2,f,c
  2639  001AC4  0012               	return		;funcret
  2640  001AC6                     __end_of_fputc:
  2641                           	opt callstack 0
  2642                           
  2643 ;; *************** function _putch *****************
  2644 ;; Defined at:
  2645 ;;		line 102 in file "lcd.c"
  2646 ;; Parameters:    Size  Location     Type
  2647 ;;  data            1    wreg     unsigned char 
  2648 ;; Auto vars:     Size  Location     Type
  2649 ;;  data            1    3[COMRAM] unsigned char 
  2650 ;; Return value:  Size  Location     Type
  2651 ;;                  1    wreg      void 
  2652 ;; Registers used:
  2653 ;;		wreg, status,2, status,0, cstack
  2654 ;; Tracked objects:
  2655 ;;		On entry : 0/0
  2656 ;;		On exit  : 0/0
  2657 ;;		Unchanged: 0/0
  2658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2660 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2662 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2663 ;;Total ram usage:        1 bytes
  2664 ;; Hardware stack levels used:    1
  2665 ;; Hardware stack levels required when called:    3
  2666 ;; This function calls:
  2667 ;;		_send_byte
  2668 ;; This function is called by:
  2669 ;;		_fputc
  2670 ;; This function uses a non-reentrant model
  2671 ;;
  2672                           
  2673                           	psect	text15
  2674  001EC8                     __ptext15:
  2675                           	opt callstack 0
  2676  001EC8                     _putch:
  2677                           	opt callstack 20
  2678                           
  2679                           ;incstack = 0
  2680                           ;putch@data stored from wreg
  2681  001EC8  6E04               	movwf	putch@data,c
  2682                           
  2683                           ;lcd.c: 103:     LATDbits.LATD2 = 1;
  2684  001ECA  848C               	bsf	3980,2,c	;volatile
  2685                           
  2686                           ;lcd.c: 104:     send_byte((unsigned char)data);
  2687  001ECC  5004               	movf	putch@data,w,c
  2688  001ECE  EC52  F00F         	call	_send_byte
  2689  001ED2  0012               	return		;funcret
  2690  001ED4                     __end_of_putch:
  2691                           	opt callstack 0
  2692                           
  2693 ;; *************** function _isupper *****************
  2694 ;; Defined at:
  2695 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  2696 ;; Parameters:    Size  Location     Type
  2697 ;;  c               2    0[COMRAM] int 
  2698 ;; Auto vars:     Size  Location     Type
  2699 ;;		None
  2700 ;; Return value:  Size  Location     Type
  2701 ;;                  2    0[COMRAM] int 
  2702 ;; Registers used:
  2703 ;;		wreg, status,2, status,0
  2704 ;; Tracked objects:
  2705 ;;		On entry : 0/0
  2706 ;;		On exit  : 0/0
  2707 ;;		Unchanged: 0/0
  2708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2709 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2711 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2712 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2713 ;;Total ram usage:        6 bytes
  2714 ;; Hardware stack levels used:    1
  2715 ;; This function calls:
  2716 ;;		Nothing
  2717 ;; This function is called by:
  2718 ;;		_xtoa
  2719 ;; This function uses a non-reentrant model
  2720 ;;
  2721                           
  2722                           	psect	text16
  2723  001D4C                     __ptext16:
  2724                           	opt callstack 0
  2725  001D4C                     _isupper:
  2726                           	opt callstack 26
  2727                           
  2728                           ;incstack = 0
  2729  001D4C  0EBF               	movlw	191
  2730  001D4E  6E03               	movwf	??_isupper& (0+255),c
  2731  001D50  0EFF               	movlw	255
  2732  001D52  6E04               	movwf	(??_isupper+1)& (0+255),c
  2733  001D54  C001  F005         	movff	isupper@c,??_isupper+2
  2734  001D58  C002  F006         	movff	isupper@c+1,??_isupper+3
  2735  001D5C  5003               	movf	??_isupper,w,c
  2736  001D5E  2605               	addwf	??_isupper+2,f,c
  2737  001D60  5004               	movf	??_isupper+1,w,c
  2738  001D62  2206               	addwfc	??_isupper+3,f,c
  2739  001D64  5006               	movf	??_isupper+3,w,c
  2740  001D66  E106               	bnz	u920
  2741  001D68  0E1A               	movlw	26
  2742  001D6A  5C05               	subwf	??_isupper+2,w,c
  2743  001D6C  B0D8               	btfsc	status,0,c
  2744  001D6E  D002               	goto	u920
  2745  001D70  0E01               	movlw	1
  2746  001D72  D001               	goto	u930
  2747  001D74                     u920:
  2748  001D74  0E00               	movlw	0
  2749  001D76                     u930:
  2750  001D76  6E01               	movwf	?_isupper,c
  2751  001D78  6A02               	clrf	?_isupper+1,c
  2752  001D7A  0012               	return		;funcret
  2753  001D7C                     __end_of_isupper:
  2754                           	opt callstack 0
  2755                           
  2756 ;; *************** function _isalpha *****************
  2757 ;; Defined at:
  2758 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  2759 ;; Parameters:    Size  Location     Type
  2760 ;;  c               2    0[COMRAM] int 
  2761 ;; Auto vars:     Size  Location     Type
  2762 ;;		None
  2763 ;; Return value:  Size  Location     Type
  2764 ;;                  2    0[COMRAM] int 
  2765 ;; Registers used:
  2766 ;;		wreg, status,2, status,0
  2767 ;; Tracked objects:
  2768 ;;		On entry : 0/0
  2769 ;;		On exit  : 0/0
  2770 ;;		Unchanged: 0/0
  2771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2772 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2774 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2775 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2776 ;;Total ram usage:        6 bytes
  2777 ;; Hardware stack levels used:    1
  2778 ;; This function calls:
  2779 ;;		Nothing
  2780 ;; This function is called by:
  2781 ;;		_xtoa
  2782 ;; This function uses a non-reentrant model
  2783 ;;
  2784                           
  2785                           	psect	text17
  2786  001CE8                     __ptext17:
  2787                           	opt callstack 0
  2788  001CE8                     _isalpha:
  2789                           	opt callstack 26
  2790                           
  2791                           ;incstack = 0
  2792  001CE8  0E9F               	movlw	159
  2793  001CEA  6E03               	movwf	??_isalpha& (0+255),c
  2794  001CEC  0EFF               	movlw	255
  2795  001CEE  6E04               	movwf	(??_isalpha+1)& (0+255),c
  2796  001CF0  0E20               	movlw	32
  2797  001CF2  1001               	iorwf	isalpha@c,w,c
  2798  001CF4  6E05               	movwf	(??_isalpha+2)& (0+255),c
  2799  001CF6  0E00               	movlw	0
  2800  001CF8  1002               	iorwf	isalpha@c+1,w,c
  2801  001CFA  6E06               	movwf	(??_isalpha+3)& (0+255),c
  2802  001CFC  5003               	movf	??_isalpha,w,c
  2803  001CFE  2605               	addwf	??_isalpha+2,f,c
  2804  001D00  5004               	movf	??_isalpha+1,w,c
  2805  001D02  2206               	addwfc	??_isalpha+3,f,c
  2806  001D04  5006               	movf	??_isalpha+3,w,c
  2807  001D06  E106               	bnz	u940
  2808  001D08  0E1A               	movlw	26
  2809  001D0A  5C05               	subwf	??_isalpha+2,w,c
  2810  001D0C  B0D8               	btfsc	status,0,c
  2811  001D0E  D002               	goto	u940
  2812  001D10  0E01               	movlw	1
  2813  001D12  D001               	goto	u950
  2814  001D14                     u940:
  2815  001D14  0E00               	movlw	0
  2816  001D16                     u950:
  2817  001D16  6E01               	movwf	?_isalpha,c
  2818  001D18  6A02               	clrf	?_isalpha+1,c
  2819  001D1A  0012               	return		;funcret
  2820  001D1C                     __end_of_isalpha:
  2821                           	opt callstack 0
  2822                           
  2823 ;; *************** function _strncmp *****************
  2824 ;; Defined at:
  2825 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  2826 ;; Parameters:    Size  Location     Type
  2827 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  2828 ;;		 -> STR_2(15), STR_1(21), 
  2829 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  2830 ;;		 -> STR_9(4), STR_5(4), 
  2831 ;;  n               2    4[COMRAM] unsigned int 
  2832 ;; Auto vars:     Size  Location     Type
  2833 ;;  r               2    9[COMRAM] PTR const unsigned char 
  2834 ;;		 -> STR_9(4), STR_5(4), 
  2835 ;;  l               2    7[COMRAM] PTR const unsigned char 
  2836 ;;		 -> STR_2(15), STR_1(21), 
  2837 ;; Return value:  Size  Location     Type
  2838 ;;                  2    0[COMRAM] int 
  2839 ;; Registers used:
  2840 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  2841 ;; Tracked objects:
  2842 ;;		On entry : 0/0
  2843 ;;		On exit  : 0/0
  2844 ;;		Unchanged: 0/0
  2845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2846 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2847 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2848 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2849 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2850 ;;Total ram usage:       11 bytes
  2851 ;; Hardware stack levels used:    1
  2852 ;; This function calls:
  2853 ;;		Nothing
  2854 ;; This function is called by:
  2855 ;;		_vfpfcnvrt
  2856 ;; This function uses a non-reentrant model
  2857 ;;
  2858                           
  2859                           	psect	text18
  2860  001898                     __ptext18:
  2861                           	opt callstack 0
  2862  001898                     _strncmp:
  2863                           	opt callstack 27
  2864                           
  2865                           ;incstack = 0
  2866  001898  C001  F008         	movff	strncmp@_l,strncmp@l
  2867  00189C  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  2868  0018A0  C003  F00A         	movff	strncmp@_r,strncmp@r
  2869  0018A4  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  2870  0018A8  0605               	decf	strncmp@n,f,c
  2871  0018AA  A0D8               	btfss	status,0,c
  2872  0018AC  0606               	decf	strncmp@n+1,f,c
  2873  0018AE  2805               	incf	strncmp@n,w,c
  2874  0018B0  E10F               	bnz	l1826
  2875  0018B2  2806               	incf	strncmp@n+1,w,c
  2876  0018B4  A4D8               	btfss	status,2,c
  2877  0018B6  D00C               	goto	l1826
  2878  0018B8  0E00               	movlw	0
  2879  0018BA  6E02               	movwf	?_strncmp+1,c
  2880  0018BC  0E00               	movlw	0
  2881  0018BE  6E01               	movwf	?_strncmp,c
  2882  0018C0  0012               	return	
  2883  0018C2                     l1824:
  2884  0018C2  4A08               	infsnz	strncmp@l,f,c
  2885  0018C4  2A09               	incf	strncmp@l+1,f,c
  2886  0018C6  4A0A               	infsnz	strncmp@r,f,c
  2887  0018C8  2A0B               	incf	strncmp@r+1,f,c
  2888  0018CA  0605               	decf	strncmp@n,f,c
  2889  0018CC  A0D8               	btfss	status,0,c
  2890  0018CE  0606               	decf	strncmp@n+1,f,c
  2891  0018D0                     l1826:
  2892  0018D0  C008  FFF6         	movff	strncmp@l,tblptrl
  2893  0018D4  C009  FFF7         	movff	strncmp@l+1,tblptrh
  2894  0018D8                     	if	0	;tblptru may be non-zero
  2895  0018D8                     	endif
  2896  0018D8                     	if	0	;tblptru may be non-zero
  2897  0018D8                     	endif
  2898  0018D8  0008               	tblrd		*
  2899  0018DA  50F5               	movf	tablat,w,c
  2900  0018DC  0900               	iorlw	0
  2901  0018DE  B4D8               	btfsc	status,2,c
  2902  0018E0  D01D               	goto	u1310
  2903  0018E2  C00A  FFF6         	movff	strncmp@r,tblptrl
  2904  0018E6  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2905  0018EA                     	if	0	;tblptru may be non-zero
  2906  0018EA                     	endif
  2907  0018EA                     	if	0	;tblptru may be non-zero
  2908  0018EA                     	endif
  2909  0018EA  0008               	tblrd		*
  2910  0018EC  50F5               	movf	tablat,w,c
  2911  0018EE  0900               	iorlw	0
  2912  0018F0  B4D8               	btfsc	status,2,c
  2913  0018F2  D014               	goto	u1310
  2914  0018F4  5005               	movf	strncmp@n,w,c
  2915  0018F6  1006               	iorwf	strncmp@n+1,w,c
  2916  0018F8  B4D8               	btfsc	status,2,c
  2917  0018FA  D010               	goto	u1310
  2918  0018FC  C008  FFF6         	movff	strncmp@l,tblptrl
  2919  001900  C009  FFF7         	movff	strncmp@l+1,tblptrh
  2920  001904                     	if	0	;tblptru may be non-zero
  2921  001904                     	endif
  2922  001904                     	if	0	;tblptru may be non-zero
  2923  001904                     	endif
  2924  001904  0008               	tblrd		*
  2925  001906  CFF5 F007          	movff	tablat,??_strncmp
  2926  00190A  C00A  FFF6         	movff	strncmp@r,tblptrl
  2927  00190E  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2928  001912                     	if	0	;tblptru may be non-zero
  2929  001912                     	endif
  2930  001912                     	if	0	;tblptru may be non-zero
  2931  001912                     	endif
  2932  001912  0008               	tblrd		*
  2933  001914  50F5               	movf	tablat,w,c
  2934  001916  1807               	xorwf	??_strncmp,w,c
  2935  001918  B4D8               	btfsc	status,2,c
  2936  00191A  D7D3               	goto	l1824
  2937  00191C                     u1310:
  2938  00191C  C008  FFF6         	movff	strncmp@l,tblptrl
  2939  001920  C009  FFF7         	movff	strncmp@l+1,tblptrh
  2940  001924                     	if	0	;tblptru may be non-zero
  2941  001924                     	endif
  2942  001924                     	if	0	;tblptru may be non-zero
  2943  001924                     	endif
  2944  001924  0008               	tblrd		*
  2945  001926  CFF5 F007          	movff	tablat,??_strncmp
  2946  00192A  C00A  FFF6         	movff	strncmp@r,tblptrl
  2947  00192E  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2948  001932                     	if	0	;tblptru may be non-zero
  2949  001932                     	endif
  2950  001932                     	if	0	;tblptru may be non-zero
  2951  001932                     	endif
  2952  001932  0008               	tblrd		*
  2953  001934  50F5               	movf	tablat,w,c
  2954  001936  5C07               	subwf	??_strncmp,w,c
  2955  001938  6E01               	movwf	?_strncmp,c
  2956  00193A  6A02               	clrf	?_strncmp+1,c
  2957  00193C  A0D8               	btfss	status,0,c
  2958  00193E  0602               	decf	?_strncmp+1,f,c
  2959  001940  0012               	return		;funcret
  2960  001942                     __end_of_strncmp:
  2961                           	opt callstack 0
  2962                           
  2963 ;; *************** function _atoi *****************
  2964 ;; Defined at:
  2965 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
  2966 ;; Parameters:    Size  Location     Type
  2967 ;;  s               2    7[COMRAM] PTR const unsigned char 
  2968 ;;		 -> STR_2(15), STR_1(21), 
  2969 ;; Auto vars:     Size  Location     Type
  2970 ;;  n               2   20[COMRAM] int 
  2971 ;;  neg             2   13[COMRAM] int 
  2972 ;; Return value:  Size  Location     Type
  2973 ;;                  2    7[COMRAM] int 
  2974 ;; Registers used:
  2975 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2976 ;; Tracked objects:
  2977 ;;		On entry : 0/0
  2978 ;;		On exit  : 0/0
  2979 ;;		Unchanged: 0/0
  2980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2981 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2982 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2983 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2984 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2985 ;;Total ram usage:       15 bytes
  2986 ;; Hardware stack levels used:    1
  2987 ;; Hardware stack levels required when called:    1
  2988 ;; This function calls:
  2989 ;;		___wmul
  2990 ;;		_isdigit
  2991 ;;		_isspace
  2992 ;; This function is called by:
  2993 ;;		_vfpfcnvrt
  2994 ;; This function uses a non-reentrant model
  2995 ;;
  2996                           
  2997                           	psect	text19
  2998  001666                     __ptext19:
  2999                           	opt callstack 0
  3000  001666                     _atoi:
  3001                           	opt callstack 26
  3002                           
  3003                           ;incstack = 0
  3004  001666  0E00               	movlw	0
  3005  001668  6E16               	movwf	atoi@n+1,c
  3006  00166A  0E00               	movlw	0
  3007  00166C  6E15               	movwf	atoi@n,c
  3008  00166E  0E00               	movlw	0
  3009  001670  6E0F               	movwf	atoi@neg+1,c
  3010  001672  0E00               	movlw	0
  3011  001674  6E0E               	movwf	atoi@neg,c
  3012  001676  D002               	goto	l1780
  3013  001678                     l1778:
  3014  001678  4A08               	infsnz	atoi@s,f,c
  3015  00167A  2A09               	incf	atoi@s+1,f,c
  3016  00167C                     l1780:
  3017  00167C  0E01               	movlw	1
  3018  00167E  6E14               	movwf	_atoi$909,c
  3019  001680  C008  FFF6         	movff	atoi@s,tblptrl
  3020  001684  C009  FFF7         	movff	atoi@s+1,tblptrh
  3021  001688                     	if	0	;tblptru may be non-zero
  3022  001688                     	endif
  3023  001688                     	if	0	;tblptru may be non-zero
  3024  001688                     	endif
  3025  001688  0008               	tblrd		*
  3026  00168A  50F5               	movf	tablat,w,c
  3027  00168C  0A20               	xorlw	32
  3028  00168E  B4D8               	btfsc	status,2,c
  3029  001690  D018               	goto	l1788
  3030  001692  0EF7               	movlw	247
  3031  001694  6E0A               	movwf	??_atoi& (0+255),c
  3032  001696  0EFF               	movlw	255
  3033  001698  6E0B               	movwf	(??_atoi+1)& (0+255),c
  3034  00169A  C008  FFF6         	movff	atoi@s,tblptrl
  3035  00169E  C009  FFF7         	movff	atoi@s+1,tblptrh
  3036  0016A2                     	if	0	;tblptru may be non-zero
  3037  0016A2                     	endif
  3038  0016A2                     	if	0	;tblptru may be non-zero
  3039  0016A2                     	endif
  3040  0016A2  0008               	tblrd		*
  3041  0016A4  50F5               	movf	tablat,w,c
  3042  0016A6  6E0C               	movwf	(??_atoi+2)& (0+255),c
  3043  0016A8  6A0D               	clrf	(??_atoi+3)& (0+255),c
  3044  0016AA  500A               	movf	??_atoi,w,c
  3045  0016AC  260C               	addwf	??_atoi+2,f,c
  3046  0016AE  500B               	movf	??_atoi+1,w,c
  3047  0016B0  220D               	addwfc	??_atoi+3,f,c
  3048  0016B2  500D               	movf	??_atoi+3,w,c
  3049  0016B4  E104               	bnz	u1210
  3050  0016B6  0E05               	movlw	5
  3051  0016B8  5C0C               	subwf	??_atoi+2,w,c
  3052  0016BA  A0D8               	btfss	status,0,c
  3053  0016BC  D002               	goto	l1788
  3054  0016BE                     u1210:
  3055  0016BE  0E00               	movlw	0
  3056  0016C0  6E14               	movwf	_atoi$909,c
  3057  0016C2                     l1788:
  3058  0016C2  C014  F010         	movff	_atoi$909,_atoi$908
  3059  0016C6  6A11               	clrf	_atoi$908+1,c
  3060  0016C8  5010               	movf	_atoi$908,w,c
  3061  0016CA  1011               	iorwf	_atoi$908+1,w,c
  3062  0016CC  B4D8               	btfsc	status,2,c
  3063  0016CE  D008               	goto	l1798
  3064  0016D0  D7D3               	goto	l1778
  3065  0016D2                     l1794:
  3066  0016D2  0E00               	movlw	0
  3067  0016D4  6E0F               	movwf	atoi@neg+1,c
  3068  0016D6  0E01               	movlw	1
  3069  0016D8  6E0E               	movwf	atoi@neg,c
  3070  0016DA                     l1796:
  3071  0016DA  4A08               	infsnz	atoi@s,f,c
  3072  0016DC  2A09               	incf	atoi@s+1,f,c
  3073  0016DE  D02E               	goto	l1804
  3074  0016E0                     l1798:
  3075  0016E0  C008  FFF6         	movff	atoi@s,tblptrl
  3076  0016E4  C009  FFF7         	movff	atoi@s+1,tblptrh
  3077  0016E8                     	if	0	;tblptru may be non-zero
  3078  0016E8                     	endif
  3079  0016E8                     	if	0	;tblptru may be non-zero
  3080  0016E8                     	endif
  3081  0016E8  0008               	tblrd		*
  3082  0016EA  50F5               	movf	tablat,w,c
  3083  0016EC  6E0A               	movwf	??_atoi& (0+255),c
  3084  0016EE  6A0B               	clrf	(??_atoi+1)& (0+255),c
  3085                           
  3086                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3087                           ; Switch size 1, requested type "simple"
  3088                           ; Number of cases is 1, Range of values is 0 to 0
  3089                           ; switch strategies available:
  3090                           ; Name         Instructions Cycles
  3091                           ; simple_byte            4     3 (average)
  3092                           ;	Chosen strategy is simple_byte
  3093  0016F0  500B               	movf	??_atoi+1,w,c
  3094  0016F2  0A00               	xorlw	0	; case 0
  3095  0016F4  A4D8               	btfss	status,2,c
  3096  0016F6  D022               	goto	l1804
  3097                           
  3098                           ; Switch size 1, requested type "simple"
  3099                           ; Number of cases is 2, Range of values is 43 to 45
  3100                           ; switch strategies available:
  3101                           ; Name         Instructions Cycles
  3102                           ; simple_byte            7     4 (average)
  3103                           ;	Chosen strategy is simple_byte
  3104  0016F8  500A               	movf	??_atoi,w,c
  3105  0016FA  0A2B               	xorlw	43	; case 43
  3106  0016FC  B4D8               	btfsc	status,2,c
  3107  0016FE  D7ED               	goto	l1796
  3108  001700  0A06               	xorlw	6	; case 45
  3109  001702  B4D8               	btfsc	status,2,c
  3110  001704  D7E6               	goto	l1794
  3111  001706  D01A               	goto	l1804
  3112  001708                     l1800:
  3113  001708  C015  F001         	movff	atoi@n,___wmul@multiplier
  3114  00170C  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  3115  001710  0E00               	movlw	0
  3116  001712  6E04               	movwf	___wmul@multiplicand+1,c
  3117  001714  0E0A               	movlw	10
  3118  001716  6E03               	movwf	___wmul@multiplicand,c
  3119  001718  EC13  F00F         	call	___wmul	;wreg free
  3120  00171C  C008  FFF6         	movff	atoi@s,tblptrl
  3121  001720  C009  FFF7         	movff	atoi@s+1,tblptrh
  3122  001724                     	if	0	;tblptru may be non-zero
  3123  001724                     	endif
  3124  001724                     	if	0	;tblptru may be non-zero
  3125  001724                     	endif
  3126  001724  0008               	tblrd		*
  3127  001726  50F5               	movf	tablat,w,c
  3128  001728  5E01               	subwf	?___wmul,f,c
  3129  00172A  0E00               	movlw	0
  3130  00172C  5A02               	subwfb	?___wmul+1,f,c
  3131  00172E  0E30               	movlw	48
  3132  001730  2401               	addwf	?___wmul,w,c
  3133  001732  6E15               	movwf	atoi@n,c
  3134  001734  0E00               	movlw	0
  3135  001736  2002               	addwfc	?___wmul+1,w,c
  3136  001738  6E16               	movwf	atoi@n+1,c
  3137  00173A  D7CF               	goto	l1796
  3138  00173C                     l1804:
  3139  00173C  0ED0               	movlw	208
  3140  00173E  6E0A               	movwf	??_atoi& (0+255),c
  3141  001740  0EFF               	movlw	255
  3142  001742  6E0B               	movwf	(??_atoi+1)& (0+255),c
  3143  001744  C008  FFF6         	movff	atoi@s,tblptrl
  3144  001748  C009  FFF7         	movff	atoi@s+1,tblptrh
  3145  00174C                     	if	0	;tblptru may be non-zero
  3146  00174C                     	endif
  3147  00174C                     	if	0	;tblptru may be non-zero
  3148  00174C                     	endif
  3149  00174C  0008               	tblrd		*
  3150  00174E  50F5               	movf	tablat,w,c
  3151  001750  6E0C               	movwf	(??_atoi+2)& (0+255),c
  3152  001752  6A0D               	clrf	(??_atoi+3)& (0+255),c
  3153  001754  500A               	movf	??_atoi,w,c
  3154  001756  260C               	addwf	??_atoi+2,f,c
  3155  001758  500B               	movf	??_atoi+1,w,c
  3156  00175A  220D               	addwfc	??_atoi+3,f,c
  3157  00175C  500D               	movf	??_atoi+3,w,c
  3158  00175E  E106               	bnz	u1230
  3159  001760  0E0A               	movlw	10
  3160  001762  5C0C               	subwf	??_atoi+2,w,c
  3161  001764  B0D8               	btfsc	status,0,c
  3162  001766  D002               	goto	u1230
  3163  001768  0E01               	movlw	1
  3164  00176A  D001               	goto	u1240
  3165  00176C                     u1230:
  3166  00176C  0E00               	movlw	0
  3167  00176E                     u1240:
  3168  00176E  6E12               	movwf	_atoi$910,c
  3169  001770  6A13               	clrf	_atoi$910+1,c
  3170  001772  5012               	movf	_atoi$910,w,c
  3171  001774  1013               	iorwf	_atoi$910+1,w,c
  3172  001776  A4D8               	btfss	status,2,c
  3173  001778  D7C7               	goto	l1800
  3174  00177A  500E               	movf	atoi@neg,w,c
  3175  00177C  100F               	iorwf	atoi@neg+1,w,c
  3176  00177E  A4D8               	btfss	status,2,c
  3177  001780  D00D               	goto	l946
  3178  001782  C015  F00A         	movff	atoi@n,??_atoi
  3179  001786  C016  F00B         	movff	atoi@n+1,??_atoi+1
  3180  00178A  1E0A               	comf	??_atoi,f,c
  3181  00178C  1E0B               	comf	??_atoi+1,f,c
  3182  00178E  4A0A               	infsnz	??_atoi,f,c
  3183  001790  2A0B               	incf	??_atoi+1,f,c
  3184  001792  C00A  F008         	movff	??_atoi,?_atoi
  3185  001796  C00B  F009         	movff	??_atoi+1,?_atoi+1
  3186  00179A  0012               	return	
  3187  00179C                     l946:
  3188  00179C  C015  F008         	movff	atoi@n,?_atoi
  3189  0017A0  C016  F009         	movff	atoi@n+1,?_atoi+1
  3190  0017A4  0012               	return		;funcret
  3191  0017A6                     __end_of_atoi:
  3192                           	opt callstack 0
  3193                           
  3194 ;; *************** function _isspace *****************
  3195 ;; Defined at:
  3196 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
  3197 ;; Parameters:    Size  Location     Type
  3198 ;;  c               2    0[COMRAM] int 
  3199 ;; Auto vars:     Size  Location     Type
  3200 ;;		None
  3201 ;; Return value:  Size  Location     Type
  3202 ;;                  2    0[COMRAM] int 
  3203 ;; Registers used:
  3204 ;;		wreg, status,2, status,0
  3205 ;; Tracked objects:
  3206 ;;		On entry : 0/0
  3207 ;;		On exit  : 0/0
  3208 ;;		Unchanged: 0/0
  3209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3210 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3211 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3212 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3213 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3214 ;;Total ram usage:        7 bytes
  3215 ;; Hardware stack levels used:    1
  3216 ;; This function calls:
  3217 ;;		Nothing
  3218 ;; This function is called by:
  3219 ;;		_atoi
  3220 ;; This function uses a non-reentrant model
  3221 ;;
  3222                           
  3223                           	psect	text20
  3224  001C72                     __ptext20:
  3225                           	opt callstack 0
  3226  001C72                     _isspace:
  3227                           	opt callstack 26
  3228                           
  3229                           ;incstack = 0
  3230  001C72  0E01               	movlw	1
  3231  001C74  6E07               	movwf	_isspace$935,c
  3232  001C76  0E20               	movlw	32
  3233  001C78  1801               	xorwf	isspace@c,w,c
  3234  001C7A  1002               	iorwf	isspace@c+1,w,c
  3235  001C7C  B4D8               	btfsc	status,2,c
  3236  001C7E  D014               	goto	l1706
  3237  001C80  0EF7               	movlw	247
  3238  001C82  6E03               	movwf	??_isspace& (0+255),c
  3239  001C84  0EFF               	movlw	255
  3240  001C86  6E04               	movwf	(??_isspace+1)& (0+255),c
  3241  001C88  C001  F005         	movff	isspace@c,??_isspace+2
  3242  001C8C  C002  F006         	movff	isspace@c+1,??_isspace+3
  3243  001C90  5003               	movf	??_isspace,w,c
  3244  001C92  2605               	addwf	??_isspace+2,f,c
  3245  001C94  5004               	movf	??_isspace+1,w,c
  3246  001C96  2206               	addwfc	??_isspace+3,f,c
  3247  001C98  5006               	movf	??_isspace+3,w,c
  3248  001C9A  E104               	bnz	u1020
  3249  001C9C  0E05               	movlw	5
  3250  001C9E  5C05               	subwf	??_isspace+2,w,c
  3251  001CA0  A0D8               	btfss	status,0,c
  3252  001CA2  D002               	goto	l1706
  3253  001CA4                     u1020:
  3254  001CA4  0E00               	movlw	0
  3255  001CA6  6E07               	movwf	_isspace$935,c
  3256  001CA8                     l1706:
  3257  001CA8  C007  F001         	movff	_isspace$935,?_isspace
  3258  001CAC  6A02               	clrf	?_isspace+1,c
  3259  001CAE  0012               	return		;funcret
  3260  001CB0                     __end_of_isspace:
  3261                           	opt callstack 0
  3262                           
  3263 ;; *************** function _isdigit *****************
  3264 ;; Defined at:
  3265 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
  3266 ;; Parameters:    Size  Location     Type
  3267 ;;  c               2    0[COMRAM] int 
  3268 ;; Auto vars:     Size  Location     Type
  3269 ;;		None
  3270 ;; Return value:  Size  Location     Type
  3271 ;;                  2    0[COMRAM] int 
  3272 ;; Registers used:
  3273 ;;		wreg, status,2, status,0
  3274 ;; Tracked objects:
  3275 ;;		On entry : 0/0
  3276 ;;		On exit  : 0/0
  3277 ;;		Unchanged: 0/0
  3278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3279 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3281 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3282 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3283 ;;Total ram usage:        6 bytes
  3284 ;; Hardware stack levels used:    1
  3285 ;; This function calls:
  3286 ;;		Nothing
  3287 ;; This function is called by:
  3288 ;;		_vfpfcnvrt
  3289 ;;		_atoi
  3290 ;; This function uses a non-reentrant model
  3291 ;;
  3292                           
  3293                           	psect	text21
  3294  001D7C                     __ptext21:
  3295                           	opt callstack 0
  3296  001D7C                     _isdigit:
  3297                           	opt callstack 27
  3298                           
  3299                           ;incstack = 0
  3300  001D7C  0ED0               	movlw	208
  3301  001D7E  6E03               	movwf	??_isdigit& (0+255),c
  3302  001D80  0EFF               	movlw	255
  3303  001D82  6E04               	movwf	(??_isdigit+1)& (0+255),c
  3304  001D84  C001  F005         	movff	isdigit@c,??_isdigit+2
  3305  001D88  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  3306  001D8C  5003               	movf	??_isdigit,w,c
  3307  001D8E  2605               	addwf	??_isdigit+2,f,c
  3308  001D90  5004               	movf	??_isdigit+1,w,c
  3309  001D92  2206               	addwfc	??_isdigit+3,f,c
  3310  001D94  5006               	movf	??_isdigit+3,w,c
  3311  001D96  E106               	bnz	u990
  3312  001D98  0E0A               	movlw	10
  3313  001D9A  5C05               	subwf	??_isdigit+2,w,c
  3314  001D9C  B0D8               	btfsc	status,0,c
  3315  001D9E  D002               	goto	u990
  3316  001DA0  0E01               	movlw	1
  3317  001DA2  D001               	goto	u1000
  3318  001DA4                     u990:
  3319  001DA4  0E00               	movlw	0
  3320  001DA6                     u1000:
  3321  001DA6  6E01               	movwf	?_isdigit,c
  3322  001DA8  6A02               	clrf	?_isdigit+1,c
  3323  001DAA  0012               	return		;funcret
  3324  001DAC                     __end_of_isdigit:
  3325                           	opt callstack 0
  3326                           
  3327 ;; *************** function ___wmul *****************
  3328 ;; Defined at:
  3329 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  3330 ;; Parameters:    Size  Location     Type
  3331 ;;  multiplier      2    0[COMRAM] unsigned int 
  3332 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3333 ;; Auto vars:     Size  Location     Type
  3334 ;;  product         2    4[COMRAM] unsigned int 
  3335 ;; Return value:  Size  Location     Type
  3336 ;;                  2    0[COMRAM] unsigned int 
  3337 ;; Registers used:
  3338 ;;		wreg, status,2, status,0, prodl, prodh
  3339 ;; Tracked objects:
  3340 ;;		On entry : 0/0
  3341 ;;		On exit  : 0/0
  3342 ;;		Unchanged: 0/0
  3343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3344 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3345 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3347 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3348 ;;Total ram usage:        6 bytes
  3349 ;; Hardware stack levels used:    1
  3350 ;; This function calls:
  3351 ;;		Nothing
  3352 ;; This function is called by:
  3353 ;;		_atoi
  3354 ;; This function uses a non-reentrant model
  3355 ;;
  3356                           
  3357                           	psect	text22
  3358  001E26                     __ptext22:
  3359                           	opt callstack 0
  3360  001E26                     ___wmul:
  3361                           	opt callstack 26
  3362                           
  3363                           ;incstack = 0
  3364  001E26  5001               	movf	___wmul@multiplier,w,c
  3365  001E28  0203               	mulwf	___wmul@multiplicand,c
  3366  001E2A  CFF3 F005          	movff	prodl,___wmul@product
  3367  001E2E  CFF4 F006          	movff	prodh,___wmul@product+1
  3368  001E32  5001               	movf	___wmul@multiplier,w,c
  3369  001E34  0204               	mulwf	___wmul@multiplicand+1,c
  3370  001E36  50F3               	movf	prodl,w,c
  3371  001E38  2606               	addwf	___wmul@product+1,f,c
  3372  001E3A  5002               	movf	___wmul@multiplier+1,w,c
  3373  001E3C  0203               	mulwf	___wmul@multiplicand,c
  3374  001E3E  50F3               	movf	prodl,w,c
  3375  001E40  2606               	addwf	___wmul@product+1,f,c
  3376  001E42  C005  F001         	movff	___wmul@product,?___wmul
  3377  001E46  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3378  001E4A  0012               	return		;funcret
  3379  001E4C                     __end_of___wmul:
  3380                           	opt callstack 0
  3381                           
  3382 ;; *************** function _initLCD *****************
  3383 ;; Defined at:
  3384 ;;		line 69 in file "lcd.c"
  3385 ;; Parameters:    Size  Location     Type
  3386 ;;		None
  3387 ;; Auto vars:     Size  Location     Type
  3388 ;;		None
  3389 ;; Return value:  Size  Location     Type
  3390 ;;                  1    wreg      void 
  3391 ;; Registers used:
  3392 ;;		wreg, status,2, status,0, cstack
  3393 ;; Tracked objects:
  3394 ;;		On entry : 0/0
  3395 ;;		On exit  : 0/0
  3396 ;;		Unchanged: 0/0
  3397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3400 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3401 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3402 ;;Total ram usage:        1 bytes
  3403 ;; Hardware stack levels used:    1
  3404 ;; Hardware stack levels required when called:    4
  3405 ;; This function calls:
  3406 ;;		_lcdInst
  3407 ;;		_send_byte
  3408 ;;		_send_nibble
  3409 ;; This function is called by:
  3410 ;;		_main
  3411 ;; This function uses a non-reentrant model
  3412 ;;
  3413                           
  3414                           	psect	text23
  3415  001AC6                     __ptext23:
  3416                           	opt callstack 0
  3417  001AC6                     _initLCD:
  3418                           	opt callstack 26
  3419                           
  3420                           ;lcd.c: 70:     _delay((unsigned long)((15)*(10000000/4000.0)));
  3421                           
  3422                           ;incstack = 0
  3423  001AC6  0E31               	movlw	49
  3424  001AC8  6E05               	movwf	??_initLCD& (0+255),c
  3425  001ACA  0EB2               	movlw	178
  3426  001ACC                     u1567:
  3427  001ACC  2EE8               	decfsz	wreg,f,c
  3428  001ACE  D7FE               	bra	u1567
  3429  001AD0  2E05               	decfsz	??_initLCD& (0+255),f,c
  3430  001AD2  D7FC               	bra	u1567
  3431  001AD4  D000               	nop2	
  3432                           
  3433                           ;lcd.c: 72:     LATDbits.LATD2 = 0;
  3434  001AD6  948C               	bcf	3980,2,c	;volatile
  3435                           
  3436                           ;lcd.c: 74:     send_nibble(0b0011);
  3437  001AD8  0E03               	movlw	3
  3438  001ADA  EC47  F00F         	call	_send_nibble
  3439                           
  3440                           ;lcd.c: 75:     _delay((unsigned long)((5)*(10000000/4000.0)));
  3441  001ADE  0E11               	movlw	17
  3442  001AE0  6E05               	movwf	??_initLCD& (0+255),c
  3443  001AE2  0E3A               	movlw	58
  3444  001AE4                     u1577:
  3445  001AE4  2EE8               	decfsz	wreg,f,c
  3446  001AE6  D7FE               	bra	u1577
  3447  001AE8  2E05               	decfsz	??_initLCD& (0+255),f,c
  3448  001AEA  D7FC               	bra	u1577
  3449  001AEC  D000               	nop2	
  3450                           
  3451                           ;lcd.c: 76:     send_nibble(0b0011);
  3452  001AEE  0E03               	movlw	3
  3453  001AF0  EC47  F00F         	call	_send_nibble
  3454                           
  3455                           ;lcd.c: 77:     _delay((unsigned long)((150)*(10000000/4000000.0)));
  3456  001AF4  0E7D               	movlw	125
  3457  001AF6                     u1587:
  3458  001AF6  2EE8               	decfsz	wreg,f,c
  3459  001AF8  D7FE               	bra	u1587
  3460                           
  3461                           ;lcd.c: 78:     send_byte(0b00110010);
  3462  001AFA  0E32               	movlw	50
  3463  001AFC  EC52  F00F         	call	_send_byte
  3464                           
  3465                           ;lcd.c: 80:     send_byte(0b00101000);
  3466  001B00  0E28               	movlw	40
  3467  001B02  EC52  F00F         	call	_send_byte
  3468                           
  3469                           ;lcd.c: 81:     send_byte(0b00001000);
  3470  001B06  0E08               	movlw	8
  3471  001B08  EC52  F00F         	call	_send_byte
  3472                           
  3473                           ;lcd.c: 82:     send_byte(0b00000001);
  3474  001B0C  0E01               	movlw	1
  3475  001B0E  EC52  F00F         	call	_send_byte
  3476                           
  3477                           ;lcd.c: 83:     _delay((unsigned long)((5)*(10000000/4000.0)));
  3478  001B12  0E11               	movlw	17
  3479  001B14  6E05               	movwf	??_initLCD& (0+255),c
  3480  001B16  0E3A               	movlw	58
  3481  001B18                     u1597:
  3482  001B18  2EE8               	decfsz	wreg,f,c
  3483  001B1A  D7FE               	bra	u1597
  3484  001B1C  2E05               	decfsz	??_initLCD& (0+255),f,c
  3485  001B1E  D7FC               	bra	u1597
  3486  001B20  D000               	nop2	
  3487                           
  3488                           ;lcd.c: 84:     send_byte(0b00000110);
  3489  001B22  0E06               	movlw	6
  3490  001B24  EC52  F00F         	call	_send_byte
  3491                           
  3492                           ;lcd.c: 87:     { lcdInst( (unsigned char)(8 | (1 << 2) | (1 << 1) | 1) );};
  3493  001B28  0E0F               	movlw	15
  3494  001B2A  EC6A  F00F         	call	_lcdInst
  3495  001B2E  0012               	return		;funcret
  3496  001B30                     __end_of_initLCD:
  3497                           	opt callstack 0
  3498                           
  3499 ;; *************** function _lcdInst *****************
  3500 ;; Defined at:
  3501 ;;		line 64 in file "lcd.c"
  3502 ;; Parameters:    Size  Location     Type
  3503 ;;  data            1    wreg     unsigned char 
  3504 ;; Auto vars:     Size  Location     Type
  3505 ;;  data            1    3[COMRAM] unsigned char 
  3506 ;; Return value:  Size  Location     Type
  3507 ;;                  1    wreg      void 
  3508 ;; Registers used:
  3509 ;;		wreg, status,2, status,0, cstack
  3510 ;; Tracked objects:
  3511 ;;		On entry : 0/0
  3512 ;;		On exit  : 0/0
  3513 ;;		Unchanged: 0/0
  3514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3516 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3518 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3519 ;;Total ram usage:        1 bytes
  3520 ;; Hardware stack levels used:    1
  3521 ;; Hardware stack levels required when called:    3
  3522 ;; This function calls:
  3523 ;;		_send_byte
  3524 ;; This function is called by:
  3525 ;;		_main
  3526 ;;		_initLCD
  3527 ;;		_lcd_shift_cursor
  3528 ;;		_lcd_shift_display
  3529 ;; This function uses a non-reentrant model
  3530 ;;
  3531                           
  3532                           	psect	text24
  3533  001ED4                     __ptext24:
  3534                           	opt callstack 0
  3535  001ED4                     _lcdInst:
  3536                           	opt callstack 27
  3537                           
  3538                           ;incstack = 0
  3539                           ;lcdInst@data stored from wreg
  3540  001ED4  6E04               	movwf	lcdInst@data,c
  3541                           
  3542                           ;lcd.c: 65:     LATDbits.LATD2 = 0;
  3543  001ED6  948C               	bcf	3980,2,c	;volatile
  3544                           
  3545                           ;lcd.c: 66:     send_byte(data);
  3546  001ED8  5004               	movf	lcdInst@data,w,c
  3547  001EDA  EC52  F00F         	call	_send_byte
  3548  001EDE  0012               	return		;funcret
  3549  001EE0                     __end_of_lcdInst:
  3550                           	opt callstack 0
  3551                           
  3552 ;; *************** function _send_byte *****************
  3553 ;; Defined at:
  3554 ;;		line 55 in file "lcd.c"
  3555 ;; Parameters:    Size  Location     Type
  3556 ;;  data            1    wreg     unsigned char 
  3557 ;; Auto vars:     Size  Location     Type
  3558 ;;  data            1    2[COMRAM] unsigned char 
  3559 ;; Return value:  Size  Location     Type
  3560 ;;                  1    wreg      void 
  3561 ;; Registers used:
  3562 ;;		wreg, status,2, status,0, cstack
  3563 ;; Tracked objects:
  3564 ;;		On entry : 0/0
  3565 ;;		On exit  : 0/0
  3566 ;;		Unchanged: 0/0
  3567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3569 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3571 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3572 ;;Total ram usage:        1 bytes
  3573 ;; Hardware stack levels used:    1
  3574 ;; Hardware stack levels required when called:    2
  3575 ;; This function calls:
  3576 ;;		_send_nibble
  3577 ;; This function is called by:
  3578 ;;		_lcdInst
  3579 ;;		_initLCD
  3580 ;;		_putch
  3581 ;; This function uses a non-reentrant model
  3582 ;;
  3583                           
  3584                           	psect	text25
  3585  001EA4                     __ptext25:
  3586                           	opt callstack 0
  3587  001EA4                     _send_byte:
  3588                           	opt callstack 20
  3589                           
  3590                           ;incstack = 0
  3591                           ;send_byte@data stored from wreg
  3592  001EA4  6E03               	movwf	send_byte@data,c
  3593                           
  3594                           ;lcd.c: 57:     send_nibble(data >> 4);
  3595  001EA6  3803               	swapf	send_byte@data,w,c
  3596  001EA8  0B0F               	andlw	15
  3597  001EAA  EC47  F00F         	call	_send_nibble
  3598                           
  3599                           ;lcd.c: 60:     send_nibble(data);
  3600  001EAE  5003               	movf	send_byte@data,w,c
  3601  001EB0  EC47  F00F         	call	_send_nibble
  3602  001EB4  0012               	return		;funcret
  3603  001EB6                     __end_of_send_byte:
  3604                           	opt callstack 0
  3605                           
  3606 ;; *************** function _send_nibble *****************
  3607 ;; Defined at:
  3608 ;;		line 44 in file "lcd.c"
  3609 ;; Parameters:    Size  Location     Type
  3610 ;;  data            1    wreg     unsigned char 
  3611 ;; Auto vars:     Size  Location     Type
  3612 ;;  data            1    1[COMRAM] unsigned char 
  3613 ;; Return value:  Size  Location     Type
  3614 ;;                  1    wreg      void 
  3615 ;; Registers used:
  3616 ;;		wreg, status,2, status,0, cstack
  3617 ;; Tracked objects:
  3618 ;;		On entry : 0/0
  3619 ;;		On exit  : 0/0
  3620 ;;		Unchanged: 0/0
  3621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3623 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3625 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3626 ;;Total ram usage:        1 bytes
  3627 ;; Hardware stack levels used:    1
  3628 ;; Hardware stack levels required when called:    1
  3629 ;; This function calls:
  3630 ;;		_pulse_e
  3631 ;; This function is called by:
  3632 ;;		_send_byte
  3633 ;;		_initLCD
  3634 ;; This function uses a non-reentrant model
  3635 ;;
  3636                           
  3637                           	psect	text26
  3638  001E8E                     __ptext26:
  3639                           	opt callstack 0
  3640  001E8E                     _send_nibble:
  3641                           	opt callstack 20
  3642                           
  3643                           ;incstack = 0
  3644                           ;send_nibble@data stored from wreg
  3645  001E8E  6E02               	movwf	send_nibble@data,c
  3646                           
  3647                           ;lcd.c: 46:     LATD = (unsigned char)(LATD & 0x0F);
  3648  001E90  508C               	movf	3980,w,c	;volatile
  3649  001E92  0B0F               	andlw	15
  3650  001E94  6E8C               	movwf	3980,c	;volatile
  3651                           
  3652                           ;lcd.c: 47:     LATD = (unsigned char)((data << 4) | LATD);
  3653  001E96  3802               	swapf	send_nibble@data,w,c
  3654  001E98  0BF0               	andlw	240
  3655  001E9A  108C               	iorwf	3980,w,c	;volatile
  3656  001E9C  6E8C               	movwf	3980,c	;volatile
  3657                           
  3658                           ;lcd.c: 48:     pulse_e();
  3659  001E9E  ECEB  F00E         	call	_pulse_e	;wreg free
  3660  001EA2  0012               	return		;funcret
  3661  001EA4                     __end_of_send_nibble:
  3662                           	opt callstack 0
  3663                           
  3664 ;; *************** function _pulse_e *****************
  3665 ;; Defined at:
  3666 ;;		line 28 in file "lcd.c"
  3667 ;; Parameters:    Size  Location     Type
  3668 ;;		None
  3669 ;; Auto vars:     Size  Location     Type
  3670 ;;  interruptSta    1    0[COMRAM] unsigned char 
  3671 ;; Return value:  Size  Location     Type
  3672 ;;                  1    wreg      void 
  3673 ;; Registers used:
  3674 ;;		wreg
  3675 ;; Tracked objects:
  3676 ;;		On entry : 0/0
  3677 ;;		On exit  : 0/0
  3678 ;;		Unchanged: 0/0
  3679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3681 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3683 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3684 ;;Total ram usage:        1 bytes
  3685 ;; Hardware stack levels used:    1
  3686 ;; This function calls:
  3687 ;;		Nothing
  3688 ;; This function is called by:
  3689 ;;		_send_nibble
  3690 ;; This function uses a non-reentrant model
  3691 ;;
  3692                           
  3693                           	psect	text27
  3694  001DD6                     __ptext27:
  3695                           	opt callstack 0
  3696  001DD6                     _pulse_e:
  3697                           	opt callstack 20
  3698                           
  3699                           ;lcd.c: 29:     unsigned char interruptState = INTCONbits.GIE;
  3700                           
  3701                           ;incstack = 0
  3702  001DD6  0E00               	movlw	0
  3703  001DD8  BEF2               	btfsc	4082,7,c	;volatile
  3704  001DDA  0E01               	movlw	1
  3705  001DDC  6E01               	movwf	pulse_e@interruptState,c
  3706                           
  3707                           ;lcd.c: 30:     (INTCONbits.GIE = 0);
  3708  001DDE  9EF2               	bcf	4082,7,c	;volatile
  3709                           
  3710                           ;lcd.c: 31:     LATDbits.LATD3 = 1;
  3711  001DE0  868C               	bsf	3980,3,c	;volatile
  3712                           
  3713                           ;lcd.c: 34:     _delay((unsigned long)((25)*(10000000/4000000.0)));
  3714  001DE2  0E14               	movlw	20
  3715  001DE4                     u1607:
  3716  001DE4  2EE8               	decfsz	wreg,f,c
  3717  001DE6  D7FE               	bra	u1607
  3718  001DE8  D000               	nop2	
  3719                           
  3720                           ;lcd.c: 35:     LATDbits.LATD3 = 0;
  3721  001DEA  968C               	bcf	3980,3,c	;volatile
  3722                           
  3723                           ;lcd.c: 36:     _delay((unsigned long)((100)*(10000000/4000000.0)));
  3724  001DEC  0E53               	movlw	83
  3725  001DEE                     u1617:
  3726  001DEE  2EE8               	decfsz	wreg,f,c
  3727  001DF0  D7FE               	bra	u1617
  3728  001DF2  F000               	nop	
  3729                           
  3730                           ;lcd.c: 37:     INTCONbits.GIE = interruptState;
  3731  001DF4  B001               	btfsc	pulse_e@interruptState,0,c
  3732  001DF6  D002               	bra	u795
  3733  001DF8  9EF2               	bcf	4082,7,c	;volatile
  3734  001DFA  D001               	bra	u796
  3735  001DFC                     u795:
  3736  001DFC  8EF2               	bsf	4082,7,c	;volatile
  3737  001DFE                     u796:
  3738  001DFE  0012               	return		;funcret
  3739  001E00                     __end_of_pulse_e:
  3740                           	opt callstack 0
  3741                           
  3742 ;; *************** function _I2C_Master_Read *****************
  3743 ;; Defined at:
  3744 ;;		line 77 in file "I2C.c"
  3745 ;; Parameters:    Size  Location     Type
  3746 ;;  ackBit          1    wreg     unsigned char 
  3747 ;; Auto vars:     Size  Location     Type
  3748 ;;  ackBit          1    1[COMRAM] unsigned char 
  3749 ;;  receivedByte    1    2[COMRAM] unsigned char 
  3750 ;; Return value:  Size  Location     Type
  3751 ;;                  1    wreg      unsigned char 
  3752 ;; Registers used:
  3753 ;;		wreg, status,2, status,0, cstack
  3754 ;; Tracked objects:
  3755 ;;		On entry : 0/0
  3756 ;;		On exit  : 0/0
  3757 ;;		Unchanged: 0/0
  3758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3760 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3762 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3763 ;;Total ram usage:        2 bytes
  3764 ;; Hardware stack levels used:    1
  3765 ;; Hardware stack levels required when called:    1
  3766 ;; This function calls:
  3767 ;;		_I2C_Master_Wait
  3768 ;; This function is called by:
  3769 ;;		_main
  3770 ;; This function uses a non-reentrant model
  3771 ;;
  3772                           
  3773                           	psect	text28
  3774  001E4C                     __ptext28:
  3775                           	opt callstack 0
  3776  001E4C                     _I2C_Master_Read:
  3777                           	opt callstack 29
  3778                           
  3779                           ;incstack = 0
  3780                           ;I2C_Master_Read@ackBit stored from wreg
  3781  001E4C  6E02               	movwf	I2C_Master_Read@ackBit,c
  3782                           
  3783                           ;I2C.c: 78:     I2C_Master_Wait();
  3784  001E4E  EC5B  F00F         	call	_I2C_Master_Wait	;wreg free
  3785                           
  3786                           ;I2C.c: 79:     SSPCON2bits.RCEN = 1;
  3787  001E52  86C5               	bsf	4037,3,c	;volatile
  3788                           
  3789                           ;I2C.c: 81:     I2C_Master_Wait();
  3790  001E54  EC5B  F00F         	call	_I2C_Master_Wait	;wreg free
  3791                           
  3792                           ;I2C.c: 84:     unsigned char receivedByte = SSPBUF;
  3793  001E58  CFC9 F003          	movff	4041,I2C_Master_Read@receivedByte	;volatile
  3794                           
  3795                           ;I2C.c: 86:     I2C_Master_Wait();
  3796  001E5C  EC5B  F00F         	call	_I2C_Master_Wait	;wreg free
  3797                           
  3798                           ;I2C.c: 87:     SSPCON2bits.ACKDT = ackBit;
  3799  001E60  B002               	btfsc	I2C_Master_Read@ackBit,0,c
  3800  001E62  D002               	bra	u755
  3801  001E64  9AC5               	bcf	4037,5,c	;volatile
  3802  001E66  D001               	bra	u756
  3803  001E68                     u755:
  3804  001E68  8AC5               	bsf	4037,5,c	;volatile
  3805  001E6A                     u756:
  3806                           
  3807                           ;I2C.c: 88:     SSPCON2bits.ACKEN = 1;
  3808  001E6A  88C5               	bsf	4037,4,c	;volatile
  3809                           
  3810                           ;I2C.c: 90:     return receivedByte;
  3811  001E6C  5003               	movf	I2C_Master_Read@receivedByte,w,c
  3812  001E6E  0012               	return		;funcret
  3813  001E70                     __end_of_I2C_Master_Read:
  3814                           	opt callstack 0
  3815                           
  3816 ;; *************** function _I2C_Master_Wait *****************
  3817 ;; Defined at:
  3818 ;;		line 21 in file "I2C.c"
  3819 ;; Parameters:    Size  Location     Type
  3820 ;;		None
  3821 ;; Auto vars:     Size  Location     Type
  3822 ;;		None
  3823 ;; Return value:  Size  Location     Type
  3824 ;;                  1    wreg      void 
  3825 ;; Registers used:
  3826 ;;		wreg, status,2, status,0
  3827 ;; Tracked objects:
  3828 ;;		On entry : 0/0
  3829 ;;		On exit  : 0/0
  3830 ;;		Unchanged: 0/0
  3831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3834 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3835 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3836 ;;Total ram usage:        1 bytes
  3837 ;; Hardware stack levels used:    1
  3838 ;; This function calls:
  3839 ;;		Nothing
  3840 ;; This function is called by:
  3841 ;;		_I2C_Master_Start
  3842 ;;		_I2C_Master_Stop
  3843 ;;		_I2C_Master_Write
  3844 ;;		_I2C_Master_Read
  3845 ;;		_I2C_Master_RepeatedStart
  3846 ;; This function uses a non-reentrant model
  3847 ;;
  3848                           
  3849                           	psect	text29
  3850  001EB6                     __ptext29:
  3851                           	opt callstack 0
  3852  001EB6                     _I2C_Master_Wait:
  3853                           	opt callstack 28
  3854                           
  3855                           ;I2C.c: 26:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F)){
  3856                           
  3857                           ;I2C.c: 28:     }
  3858                           
  3859                           ;incstack = 0
  3860  001EB6  B4C7               	btfsc	4039,2,c	;volatile
  3861  001EB8  D7FE               	goto	_I2C_Master_Wait
  3862  001EBA  CFC5 F001          	movff	4037,??_I2C_Master_Wait	;volatile
  3863  001EBE  0E1F               	movlw	31
  3864  001EC0  1601               	andwf	??_I2C_Master_Wait,f,c
  3865  001EC2  B4D8               	btfsc	status,2,c
  3866  001EC4  0012               	return	
  3867  001EC6  D7F7               	goto	_I2C_Master_Wait
  3868  001EC8                     __end_of_I2C_Master_Wait:
  3869                           	opt callstack 0
  3870                           
  3871 ;; *************** function _I2C_Master_Init *****************
  3872 ;; Defined at:
  3873 ;;		line 32 in file "I2C.c"
  3874 ;; Parameters:    Size  Location     Type
  3875 ;;  clockFreq       4   13[COMRAM] const unsigned long 
  3876 ;; Auto vars:     Size  Location     Type
  3877 ;;		None
  3878 ;; Return value:  Size  Location     Type
  3879 ;;                  1    wreg      void 
  3880 ;; Registers used:
  3881 ;;		wreg, status,2, status,0, cstack
  3882 ;; Tracked objects:
  3883 ;;		On entry : 0/0
  3884 ;;		On exit  : 0/0
  3885 ;;		Unchanged: 0/0
  3886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3887 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3889 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3890 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3891 ;;Total ram usage:        8 bytes
  3892 ;; Hardware stack levels used:    1
  3893 ;; Hardware stack levels required when called:    1
  3894 ;; This function calls:
  3895 ;;		___lldiv
  3896 ;; This function is called by:
  3897 ;;		_main
  3898 ;; This function uses a non-reentrant model
  3899 ;;
  3900                           
  3901                           	psect	text30
  3902  001B30                     __ptext30:
  3903                           	opt callstack 0
  3904  001B30                     _I2C_Master_Init:
  3905                           	opt callstack 29
  3906                           
  3907                           ;I2C.c: 34:     SSPCON1bits.SSPEN = 0;
  3908                           
  3909                           ;incstack = 0
  3910  001B30  9AC6               	bcf	4038,5,c	;volatile
  3911                           
  3912                           ;I2C.c: 37:     TRISCbits.TRISC3 = 1;
  3913  001B32  8694               	bsf	3988,3,c	;volatile
  3914                           
  3915                           ;I2C.c: 38:     TRISCbits.TRISC4 = 1;
  3916  001B34  8894               	bsf	3988,4,c	;volatile
  3917                           
  3918                           ;I2C.c: 43:     SSPADD = (10000000 / (4 * clockFreq)) - 1;
  3919  001B36  0E80               	movlw	128
  3920  001B38  6E01               	movwf	___lldiv@dividend,c
  3921  001B3A  0E96               	movlw	150
  3922  001B3C  6E02               	movwf	___lldiv@dividend+1,c
  3923  001B3E  0E98               	movlw	152
  3924  001B40  6E03               	movwf	___lldiv@dividend+2,c
  3925  001B42  0E00               	movlw	0
  3926  001B44  6E04               	movwf	___lldiv@dividend+3,c
  3927  001B46  C00E  F012         	movff	I2C_Master_Init@clockFreq,??_I2C_Master_Init
  3928  001B4A  C00F  F013         	movff	I2C_Master_Init@clockFreq+1,??_I2C_Master_Init+1
  3929  001B4E  C010  F014         	movff	I2C_Master_Init@clockFreq+2,??_I2C_Master_Init+2
  3930  001B52  C011  F015         	movff	I2C_Master_Init@clockFreq+3,??_I2C_Master_Init+3
  3931  001B56  0E02               	movlw	2
  3932  001B58                     u1495:
  3933  001B58  90D8               	bcf	status,0,c
  3934  001B5A  3612               	rlcf	??_I2C_Master_Init,f,c
  3935  001B5C  3613               	rlcf	??_I2C_Master_Init+1,f,c
  3936  001B5E  3614               	rlcf	??_I2C_Master_Init+2,f,c
  3937  001B60  3615               	rlcf	??_I2C_Master_Init+3,f,c
  3938  001B62  2EE8               	decfsz	wreg,f,c
  3939  001B64  D7F9               	goto	u1495
  3940  001B66  C012  F005         	movff	??_I2C_Master_Init,___lldiv@divisor
  3941  001B6A  C013  F006         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
  3942  001B6E  C014  F007         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
  3943  001B72  C015  F008         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
  3944  001B76  ECEC  F00C         	call	___lldiv	;wreg free
  3945  001B7A  0401               	decf	?___lldiv,w,c
  3946  001B7C  6EC8               	movwf	4040,c	;volatile
  3947                           
  3948                           ;I2C.c: 46:     SSPSTAT = 0b10000000;
  3949  001B7E  0E80               	movlw	128
  3950  001B80  6EC7               	movwf	4039,c	;volatile
  3951                           
  3952                           ;I2C.c: 49:     SSPCON1 = 0b00101000;
  3953  001B82  0E28               	movlw	40
  3954  001B84  6EC6               	movwf	4038,c	;volatile
  3955                           
  3956                           ;I2C.c: 52:     SSPCON2 = 0b00000000;
  3957  001B86  0E00               	movlw	0
  3958  001B88  6EC5               	movwf	4037,c	;volatile
  3959  001B8A  0012               	return		;funcret
  3960  001B8C                     __end_of_I2C_Master_Init:
  3961                           	opt callstack 0
  3962                           
  3963 ;; *************** function ___lldiv *****************
  3964 ;; Defined at:
  3965 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__lldiv.c"
  3966 ;; Parameters:    Size  Location     Type
  3967 ;;  dividend        4    0[COMRAM] unsigned long 
  3968 ;;  divisor         4    4[COMRAM] unsigned long 
  3969 ;; Auto vars:     Size  Location     Type
  3970 ;;  quotient        4    8[COMRAM] unsigned long 
  3971 ;;  counter         1   12[COMRAM] unsigned char 
  3972 ;; Return value:  Size  Location     Type
  3973 ;;                  4    0[COMRAM] unsigned long 
  3974 ;; Registers used:
  3975 ;;		wreg, status,2, status,0
  3976 ;; Tracked objects:
  3977 ;;		On entry : 0/0
  3978 ;;		On exit  : 0/0
  3979 ;;		Unchanged: 0/0
  3980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3981 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3982 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3984 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3985 ;;Total ram usage:       13 bytes
  3986 ;; Hardware stack levels used:    1
  3987 ;; This function calls:
  3988 ;;		Nothing
  3989 ;; This function is called by:
  3990 ;;		_I2C_Master_Init
  3991 ;; This function uses a non-reentrant model
  3992 ;;
  3993                           
  3994                           	psect	text31
  3995  0019D8                     __ptext31:
  3996                           	opt callstack 0
  3997  0019D8                     ___lldiv:
  3998                           	opt callstack 29
  3999                           
  4000                           ;incstack = 0
  4001  0019D8  0E00               	movlw	0
  4002  0019DA  6E09               	movwf	___lldiv@quotient,c
  4003  0019DC  0E00               	movlw	0
  4004  0019DE  6E0A               	movwf	___lldiv@quotient+1,c
  4005  0019E0  0E00               	movlw	0
  4006  0019E2  6E0B               	movwf	___lldiv@quotient+2,c
  4007  0019E4  0E00               	movlw	0
  4008  0019E6  6E0C               	movwf	___lldiv@quotient+3,c
  4009  0019E8  5005               	movf	___lldiv@divisor,w,c
  4010  0019EA  1006               	iorwf	___lldiv@divisor+1,w,c
  4011  0019EC  1007               	iorwf	___lldiv@divisor+2,w,c
  4012  0019EE  1008               	iorwf	___lldiv@divisor+3,w,c
  4013  0019F0  B4D8               	btfsc	status,2,c
  4014  0019F2  D02A               	goto	l274
  4015  0019F4  0E01               	movlw	1
  4016  0019F6  6E0D               	movwf	___lldiv@counter,c
  4017  0019F8  D006               	goto	l1976
  4018  0019FA                     l1974:
  4019  0019FA  90D8               	bcf	status,0,c
  4020  0019FC  3605               	rlcf	___lldiv@divisor,f,c
  4021  0019FE  3606               	rlcf	___lldiv@divisor+1,f,c
  4022  001A00  3607               	rlcf	___lldiv@divisor+2,f,c
  4023  001A02  3608               	rlcf	___lldiv@divisor+3,f,c
  4024  001A04  2A0D               	incf	___lldiv@counter,f,c
  4025  001A06                     l1976:
  4026  001A06  AE08               	btfss	___lldiv@divisor+3,7,c
  4027  001A08  D7F8               	goto	l1974
  4028  001A0A                     u1470:
  4029  001A0A  90D8               	bcf	status,0,c
  4030  001A0C  3609               	rlcf	___lldiv@quotient,f,c
  4031  001A0E  360A               	rlcf	___lldiv@quotient+1,f,c
  4032  001A10  360B               	rlcf	___lldiv@quotient+2,f,c
  4033  001A12  360C               	rlcf	___lldiv@quotient+3,f,c
  4034  001A14  5005               	movf	___lldiv@divisor,w,c
  4035  001A16  5C01               	subwf	___lldiv@dividend,w,c
  4036  001A18  5006               	movf	___lldiv@divisor+1,w,c
  4037  001A1A  5802               	subwfb	___lldiv@dividend+1,w,c
  4038  001A1C  5007               	movf	___lldiv@divisor+2,w,c
  4039  001A1E  5803               	subwfb	___lldiv@dividend+2,w,c
  4040  001A20  5008               	movf	___lldiv@divisor+3,w,c
  4041  001A22  5804               	subwfb	___lldiv@dividend+3,w,c
  4042  001A24  A0D8               	btfss	status,0,c
  4043  001A26  D009               	goto	l1986
  4044  001A28  5005               	movf	___lldiv@divisor,w,c
  4045  001A2A  5E01               	subwf	___lldiv@dividend,f,c
  4046  001A2C  5006               	movf	___lldiv@divisor+1,w,c
  4047  001A2E  5A02               	subwfb	___lldiv@dividend+1,f,c
  4048  001A30  5007               	movf	___lldiv@divisor+2,w,c
  4049  001A32  5A03               	subwfb	___lldiv@dividend+2,f,c
  4050  001A34  5008               	movf	___lldiv@divisor+3,w,c
  4051  001A36  5A04               	subwfb	___lldiv@dividend+3,f,c
  4052  001A38  8009               	bsf	___lldiv@quotient,0,c
  4053  001A3A                     l1986:
  4054  001A3A  90D8               	bcf	status,0,c
  4055  001A3C  3208               	rrcf	___lldiv@divisor+3,f,c
  4056  001A3E  3207               	rrcf	___lldiv@divisor+2,f,c
  4057  001A40  3206               	rrcf	___lldiv@divisor+1,f,c
  4058  001A42  3205               	rrcf	___lldiv@divisor,f,c
  4059  001A44  2E0D               	decfsz	___lldiv@counter,f,c
  4060  001A46  D7E1               	goto	u1470
  4061  001A48                     l274:
  4062  001A48  C009  F001         	movff	___lldiv@quotient,?___lldiv
  4063  001A4C  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  4064  001A50  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  4065  001A54  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  4066  001A58  0012               	return		;funcret
  4067  001A5A                     __end_of___lldiv:
  4068                           	opt callstack 0
  4069                           
  4070                           	psect	rparam
  4071  0000                     tosu	equ	0xFFF
  4072                           tosh	equ	0xFFE
  4073                           tosl	equ	0xFFD
  4074                           stkptr	equ	0xFFC
  4075                           pclatu	equ	0xFFB
  4076                           pclath	equ	0xFFA
  4077                           pcl	equ	0xFF9
  4078                           tblptru	equ	0xFF8
  4079                           tblptrh	equ	0xFF7
  4080                           tblptrl	equ	0xFF6
  4081                           tablat	equ	0xFF5
  4082                           prodh	equ	0xFF4
  4083                           prodl	equ	0xFF3
  4084                           indf0	equ	0xFEF
  4085                           postinc0	equ	0xFEE
  4086                           postdec0	equ	0xFED
  4087                           preinc0	equ	0xFEC
  4088                           plusw0	equ	0xFEB
  4089                           fsr0h	equ	0xFEA
  4090                           fsr0l	equ	0xFE9
  4091                           wreg	equ	0xFE8
  4092                           indf1	equ	0xFE7
  4093                           postinc1	equ	0xFE6
  4094                           postdec1	equ	0xFE5
  4095                           preinc1	equ	0xFE4
  4096                           plusw1	equ	0xFE3
  4097                           fsr1h	equ	0xFE2
  4098                           fsr1l	equ	0xFE1
  4099                           bsr	equ	0xFE0
  4100                           indf2	equ	0xFDF
  4101                           postinc2	equ	0xFDE
  4102                           postdec2	equ	0xFDD
  4103                           preinc2	equ	0xFDC
  4104                           plusw2	equ	0xFDB
  4105                           fsr2h	equ	0xFDA
  4106                           fsr2l	equ	0xFD9
  4107                           status	equ	0xFD8


Data Sizes:
    Strings     40
    Constant    30
    Data        0
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    123     127
    BANK0           128      0      36
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_9(CODE[4]), STR_5(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_9(CODE[4]), STR_5(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_2(CODE[15]), STR_1(CODE[21]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_2(CODE[15]), STR_1(CODE[21]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_2(CODE[15]), STR_1(CODE[21]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S948_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_2(CODE[15]), STR_1(CODE[21]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_2(CODE[15]), STR_1(CODE[21]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 21
		 -> STR_2(CODE[15]), STR_1(CODE[21]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _rtc_set_time->_I2C_Master_Write
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_send_byte
    _atoi->_isspace
    _initLCD->_lcdInst
    _lcdInst->_send_byte
    _send_byte->_send_nibble
    _send_nibble->_pulse_e
    _I2C_Master_Read->_I2C_Master_Wait
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0   11402
                                            113 COMRAM    10    10      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _initLCD
                            _lcdInst
                             _printf
                       _rtc_set_time
 ---------------------------------------------------------------------------------
 (1) _rtc_set_time                                         1     1      0     546
                                              3 COMRAM     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     478
                                              1 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _printf                                              12     4      8    9327
                                            101 COMRAM    12     4      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    9117
                                             93 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    40      6    8738
                                             70 COMRAM    23    17      6
                               _atoi
                              _fputc
                            _isdigit
                            _strncmp
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    4581
                                             31 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2799
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1280
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     879
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0     111
                                              3 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     681
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1244
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     245
                                              4 COMRAM     1     1      0
                            _lcdInst
                          _send_byte
                        _send_nibble
 ---------------------------------------------------------------------------------
 (1) _lcdInst                                              1     1      0     111
                                              3 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (9) _send_byte                                            1     1      0      89
                                              2 COMRAM     1     1      0
                        _send_nibble
 ---------------------------------------------------------------------------------
 (10) _send_nibble                                         1     1      0      45
                                              1 COMRAM     1     1      0
                            _pulse_e
 ---------------------------------------------------------------------------------
 (11) _pulse_e                                             1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      2     2      0      30
                                              1 COMRAM     2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                             13 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _initLCD
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _send_byte
       _send_nibble
         _pulse_e
     _send_nibble
       _pulse_e
   _lcdInst
     _send_byte
       _send_nibble
         _pulse_e
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _fputc
           _putch
             _send_byte
               _send_nibble
                 _pulse_e
         _isdigit
         _strncmp
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
           _toupper
             _islower
   _rtc_set_time
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      24       5       28.1%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     7B      7F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A3      34        0.0%
DATA                 0      0      A3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Apr 06 21:32:56 2019

                __CFG_CPD$ON 000000          ___wmul@multiplicand 0003                  __CFG_BORV$3 000000  
               __CFG_CP0$OFF 000000                 __CFG_CP1$OFF 000000                 __CFG_CP2$OFF 000000  
               __CFG_CP3$OFF 000000                  __CFG_OSC$HS 000000                          l170 1970  
                        l180 1456                          l182 145E                          l274 1A48  
                        l946 179C                 __CFG_CPB$OFF 000000                          u810 1A6A  
                        u830 1AB2                          u920 1D74                          u930 1D76  
                        u755 1E68                          u756 1E6A                          u940 1D14  
                        u860 1D44                          u950 1D16                          u870 1D46  
                        u960 1C0A                          u970 1C0C                          u795 1DFC  
                        u796 1DFE                          u990 1DA4                          _pad 1942  
                        wreg 000FE8                 __CFG_LVP$OFF 000000                 __CFG_WDT$OFF 000000  
                       l1022 1C22                         l2050 17CA                         l2028 1C4C  
                       l2068 17FE                         l1800 1708                         l1632 1CD0  
                       l1720 1472                         l1706 1CA8                         l1618 1A72  
                       l1804 173C                         l1628 1CBA                         l1636 1DB6  
                       l1652 195A                         l1638 1DBA                         l1662 1992  
                       l1734 14C4                         l1726 14A2                         l1910 12DA  
                       l1824 18C2                         l1656 1968                         l1826 18D0  
                       l1666 19BE                         l1658 197A                         l1930 13E4  
                       l1850 1090                         l1780 167C                         l1772 163C  
                       l1748 1552                         l1756 15C8                         l1924 13A8  
                       l1860 10A8                         l1852 10A0                         l1940 1406  
                       l1934 13EE                         l1872 10BA                         l1864 10AC  
                       l1856 10A4                         l1848 108E                         l1794 16D2  
                       l1778 1678                         l1890 1196                         l1874 10FC  
                       l1796 16DA                         l1788 16C2                         l1868 10B0  
                       l1964 1BA0                         l1974 19FA                         l1798 16E0  
                       l1886 116A                         l1966 1BC6                         ?_pad 0015  
                       l1976 1A06                         l1888 1188                         l1986 1A3A  
                       STR_1 101F                         STR_2 1034                         STR_5 1030  
                       STR_7 1043                         STR_9 1043                         u1000 1DA6  
                       u1020 1CA4                         u1100 1530                         u1110 1532  
                       u1040 144C                         u1210 16BE                         u1130 15A4  
                       u1140 15D8                         u1060 14C0                         u1230 176C  
                       u1310 191C                         u1070 14F6                         u1135 1592  
                       u1240 176E                         u1160 15FA                         u1080 14F8  
                       u1161 15F8                         u1170 1608                         u1410 1234  
                       u1180 160C                         u1430 130E                         _LATD 000F8C  
                       u1370 11CE                         u1380 11D0                         u1470 1A0A  
                       u1390 11DC                         u1607 1DE4                         u1617 1DEE  
                       u1547 1832                         u1557 1888                         u1495 1B58  
                       u1567 1ACC                         u1577 1AE4                         u1587 1AF6  
                       u1597 1B18                         _dbuf 0084                         _atoi 1666  
                       _main 17A6                         _keys 1001                         _prec 007C  
                       _nout 0080                         pad@i 001C                         pad@p 0019  
                       fsr1h 000FE2                         fsr2h 000FDA                         indf2 000FDF  
                       fsr1l 000FE1                         pad@w 001E                         fsr2l 000FD9  
                       _xtoa 143A                         prodh 000FF4                         prodl 000FF3  
                       start 0000                __CFG_IESO$OFF 000000                __CFG_MCLRE$ON 000000  
               ___param_bank 000000                        ??_pad 001B        I2C_Master_Read@ackBit 0002  
           ?_I2C_Master_Init 000E             ?_I2C_Master_Read 0001             ?_I2C_Master_Wait 0001  
           ?_I2C_Master_Stop 0001                        ?_atoi 0008                        ?_main 0001  
            __end_of___lldiv 1A5A                        ?_xtoa 0020                 vfpfcnvrt@fmt 0049  
               vfpfcnvrt@llu 0055                        _TRISD 000F95                __CFG_PWRT$OFF 000000  
              __CFG_WRT0$OFF 000000                __CFG_WRT1$OFF 000000                __CFG_WRT2$OFF 000000  
              __CFG_WRT3$OFF 000000              __end_of_lcdInst 1EE0               __CFG_EBTR0$OFF 000000  
             __CFG_FCMEN$OFF 000000               __CFG_EBTR1$OFF 000000               __CFG_EBTR2$OFF 000000  
             __CFG_EBTR3$OFF 000000                __CFG_WRTB$OFF 000000                __CFG_WRTC$OFF 000000  
              __CFG_WRTD$OFF 000000              __end_of_initLCD 1B30               __CFG_EBTRB$OFF 000000  
                      _flags 007E                        _fputc 1A5A              __end_of_isalpha 1D1C  
                      _fputs 1CB0              __end_of_isdigit 1DAC                        atoi@n 0015  
                      pad@fp 0015                        atoi@s 0008                        _width 0082  
                      _putch 1EC8                        main@i 007B              __end_of_islower 1D4C  
            __end_of_isspace 1CB0              __end_of_isupper 1D7C                        tablat 000FF5  
              rtc_set_time@i 0004              send_nibble@data 0002              __end_of_pulse_e 1E00  
                      status 000FD8  I2C_Master_Read@receivedByte 0003                        xtoa@c 0045  
                      xtoa@d 0022                        xtoa@i 0043                        xtoa@n 003B  
                      xtoa@p 0037                        xtoa@w 0039                        xtoa@x 002A  
            __end_of_strncmp 1942              __end_of_toupper 1C2C               __CFG_PBADEN$ON 000000  
               _toupper$1006 000D              __initialization 1E70                 __end_of_atoi 17A6  
               __end_of_main 1898                 __end_of_keys 1012                 __end_of_xtoa 1666  
                     ??_atoi 000A                       ??_main 0072                       ??_xtoa 002B  
              __activetblptr 000002            ?_I2C_Master_Start 0001            ?_I2C_Master_Write 0002  
         ??_I2C_Master_Start 0002           ??_I2C_Master_Write 0004                 ?_send_nibble 0001  
                     ?_fputc 0005                       ?_fputs 000E                       ?_putch 0001  
              vfpfcnvrt@done 0051                       _SSPADD 000FC8                       _SSPBUF 000FC9  
             __CFG_XINST$OFF 000000                 vfprintf@cfmt 0064                       ___wmul 1E26  
             __CFG_STVREN$ON 000000                    ??___lldiv 0009                       clear_0 1E76  
                  ??_lcdInst 0004                       _printf 1E00                       pad@buf 0017  
                     _strlen 1DAC                    ??_initLCD 0005                       fputc@c 0005  
                     fputs@c 0012                       fputs@i 0013                       fputs@s 000E  
                  ??_isalpha 0003                    ??_isdigit 0003                    ??_islower 0003  
               __mediumconst 0000                    ??_isspace 0003                       tblptrh 000FF7  
                  ??_isupper 0003                       tblptrl 000FF6                       tblptru 000FF8  
           __end_of_vfprintf 1BE2                    ??_pulse_e 0001                       xtoa@fp 0020  
                  ??_strncmp 0007                    ??_toupper 0009        pulse_e@interruptState 0001  
                 __accesstop 0080      __end_of__initialization 1E84                ___rparam_used 000001  
       __end_of_happynewyear 1019               __pcstackCOMRAM 0001                __end_of_fputc 1AC6  
              __end_of_fputs 1CE8                __end_of_putch 1ED4                      ??_fputc 0009  
                    ??_fputs 0012                      ??_putch 0004                   __pbssBANK0 0080  
                    ?___wmul 0001           __size_of_send_byte 0012                      ?_printf 0066  
                    ?_strlen 0001           __size_of_vfpfcnvrt 03F2                      _SSPCON1 000FC6  
                    _SSPCON2 000FC5                      _SSPSTAT 000FC7         __size_of_send_nibble 0016  
                    __Hparam 0000                      __Lparam 0000                      ___lldiv 19D8  
            __size_of___wmul 0026                    ?_vfprintf 005E                 __psmallconst 1000  
                    __pcinit 1E70                      __ramtop 1000                      _lcdInst 1ED4  
                    __ptext0 17A6                      __ptext1 1C2C                      __ptext2 1EE0  
                    __ptext3 1EEA                      __ptext4 1EF2                      __ptext5 1E00  
                    __ptext6 1B8C                      __ptext7 1048                      __ptext8 143A  
                    __ptext9 1BE2              __size_of_printf 0026              __size_of_strlen 002A  
                    _initLCD 1AC6                 __size_of_pad 0096                      _isalpha 1CE8  
                    _isdigit 1D7C                      _islower 1D1C                      _isspace 1C72  
                    _isupper 1D4C     __size_of_I2C_Master_Init 005C     __size_of_I2C_Master_Read 0024  
   __size_of_I2C_Master_Wait 0012     __size_of_I2C_Master_Stop 0008                      atoi@neg 000E  
                    _pulse_e 1DD6                      _strncmp 1898                      _toupper 1BE2  
       end_of_initialization 1E84        __end_of_LCD_SIZE_HORZ 101E            __end_of_send_byte 1EB6  
      __end_of_LCD_SIZE_VERT 101D                      fputc@fp 0007                __Lmediumconst 0000  
                    fputs@fp 0010    __size_of_I2C_Master_Start 0008    __size_of_I2C_Master_Write 000A  
            ___lldiv@divisor 0005              ___lldiv@counter 000D            __end_of_vfpfcnvrt 143A  
                    postdec2 000FDD                      postinc0 000FEE                      postinc1 000FE6  
                    postinc2 000FDE                   ??_vfprintf 0064                      strlen@a 0003  
                    strlen@s 0001                ?_rtc_set_time 0001                    _TRISCbits 000F94  
               _happynewyear 1012                send_byte@data 0003                  vfpfcnvrt@ap 004B  
                vfpfcnvrt@fp 0047               __end_of___wmul 1E4C               ??_rtc_set_time 0004  
             __end_of_printf 1E26               __end_of_strlen 1DD6          start_initialization 1E70  
                __end_of_pad 19D8            ??_I2C_Master_Init 0012            ??_I2C_Master_Read 0002  
          ??_I2C_Master_Wait 0001            ??_I2C_Master_Stop 0002                  vfprintf@fmt 0060  
                   ??___wmul 0005     I2C_Master_Init@clockFreq 000E             __CFG_LPT1OSC$OFF 000000  
                   ??_printf 006E                     ??_strlen 0003                  __pbssCOMRAM 007C  
           _I2C_Master_Start 1EF2             _I2C_Master_Write 1EE0            __CFG_CCP2MX$PORTC 000000  
                   ?___lldiv 0001                     ?_lcdInst 0001            __size_of_vfprintf 0056  
                   ?_initLCD 0001                  __smallconst 1000                     ?_isalpha 0001  
                   ?_isdigit 0001                     ?_islower 0001                     ?_isspace 0001  
                   ?_isupper 0001                ??_send_nibble 0002                     ?_pulse_e 0001  
             __size_of_fputc 006C               __size_of_fputs 0038                     ?_strncmp 0001  
                   ?_toupper 0007               __size_of_putch 000C               ___wmul@product 0005  
                   _LATDbits 000F8C         __end_of_rtc_set_time 1C72                    _send_byte 1EA4  
             _LCD_LINE1_ADDR 101B               _LCD_LINE2_ADDR 101E               _LCD_LINE3_ADDR 101A  
             _LCD_LINE4_ADDR 1019             __CFG_WDTPS$32768 000000                    _vfpfcnvrt 1048  
          ___wmul@multiplier 0001                   vfpfcnvrt@c 005D       __end_of_LCD_LINE1_ADDR 101C  
     __end_of_LCD_LINE2_ADDR 101F       __end_of_LCD_LINE3_ADDR 101B       __end_of_LCD_LINE4_ADDR 101A  
        __end_of_send_nibble 1EA4                   ?_send_byte 0001                     __Hrparam 0000  
                 vfprintf@ap 0062                     __Lrparam 0000                   vfprintf@fp 005E  
         __CFG_BOREN$SBORDIS 000000             __size_of___lldiv 0082                   ?_vfpfcnvrt 0047  
           __size_of_lcdInst 000C              _I2C_Master_Init 1B30              _I2C_Master_Read 1E4C  
           __size_of_initLCD 006A              _I2C_Master_Wait 1EB6                     _atoi$910 0012  
                   _atoi$908 0010                     _atoi$909 0014              _I2C_Master_Stop 1EEA  
           __size_of_isalpha 0034             __size_of_isdigit 0030             __size_of_islower 0030  
           __size_of_isspace 003E                     __ptext10 1D1C                     __ptext11 1942  
                   __ptext20 1C72                     __ptext12 1DAC                     __ptext21 1D7C  
                   __ptext13 1CB0                     __ptext30 1B30                     __ptext22 1E26  
                   __ptext14 1A5A                     __ptext31 19D8                     __ptext23 1AC6  
                   __ptext15 1EC8                     __ptext24 1ED4                     __ptext16 1D4C  
                   __ptext25 1EA4                     __ptext17 1CE8                     __ptext26 1E8E  
                   __ptext18 1898                     __ptext27 1DD6                     __ptext19 1666  
                   __ptext28 1E4C                     __ptext29 1EB6             __size_of_isupper 0030  
           __size_of_pulse_e 002A             __size_of_strncmp 00AA             __size_of_toupper 004A  
              __size_of_atoi 0140                __size_of_main 00F2                __size_of_xtoa 022C  
                   _xtoa$428 0033                     _xtoa$429 0035                     _vfprintf 1B8C  
                  printf@fmt 0066                     main@time 0074                  _isspace$935 0007  
I2C_Master_Write@byteToWrite 0002                    putch@data 0004     __end_of_I2C_Master_Start 1EFA  
   __end_of_I2C_Master_Write 1EEA                   _INTCONbits 000FF2                     isalpha@c 0001  
                   isdigit@c 0001                  _send_nibble 1E8E        __size_of_rtc_set_time 0046  
              _LCD_SIZE_HORZ 101D                     islower@c 0001                _LCD_SIZE_VERT 101C  
                   isspace@c 0001             ___lldiv@dividend 0001                  ??_send_byte 0003  
                   isupper@c 0001                    strncmp@_l 0001                    strncmp@_r 0003  
                   printf@ap 0070      __end_of_I2C_Master_Init 1B8C      __end_of_I2C_Master_Read 1E70  
    __end_of_I2C_Master_Wait 1EC8      __end_of_I2C_Master_Stop 1EF2                  ??_vfpfcnvrt 004D  
                lcdInst@data 0004                _vfpfcnvrt$444 0053             ___lldiv@quotient 0009  
               _rtc_set_time 1C2C                     strncmp@l 0008                     strncmp@n 0005  
                   strncmp@r 000A                     toupper@c 0007                  _SSPCON1bits 000FC6  
                _SSPCON2bits 000FC5  
