

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Apr 09 13:38:04 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1,inline
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1,inline
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    43  0000                     
    44                           ; Version 2.05
    45                           ; Generated 20/12/2018 GMT
    46                           ; 
    47                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC18F4620 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     
    79                           	psect	smallconst
    80  001000                     __psmallconst:
    81                           	opt callstack 0
    82  001000  00                 	db	0
    83  001001                     _keys:
    84                           	opt callstack 0
    85  001001  31                 	db	49
    86  001002  32                 	db	50
    87  001003  33                 	db	51
    88  001004  41                 	db	65
    89  001005  34                 	db	52
    90  001006  35                 	db	53
    91  001007  36                 	db	54
    92  001008  42                 	db	66
    93  001009  37                 	db	55
    94  00100A  38                 	db	56
    95  00100B  39                 	db	57
    96  00100C  43                 	db	67
    97  00100D  2A                 	db	42
    98  00100E  30                 	db	48
    99  00100F  23                 	db	35
   100  001010  44                 	db	68
   101  001011  00                 	db	0
   102  001012                     __end_of_keys:
   103                           	opt callstack 0
   104  001012                     _happynewyear:
   105                           	opt callstack 0
   106  001012  20                 	db	32
   107  001013  38                 	db	56
   108  001014  13                 	db	19
   109  001015  00                 	db	0
   110  001016  09                 	db	9
   111  001017  04                 	db	4
   112  001018  19                 	db	25
   113  001019                     __end_of_happynewyear:
   114                           	opt callstack 0
   115  001019                     _LCD_LINE4_ADDR:
   116                           	opt callstack 0
   117  001019  50                 	db	80
   118  00101A                     __end_of_LCD_LINE4_ADDR:
   119                           	opt callstack 0
   120  00101A                     _LCD_LINE3_ADDR:
   121                           	opt callstack 0
   122  00101A  10                 	db	16
   123  00101B                     __end_of_LCD_LINE3_ADDR:
   124                           	opt callstack 0
   125  00101B                     _LCD_LINE1_ADDR:
   126                           	opt callstack 0
   127  00101B  00                 	db	0
   128  00101C                     __end_of_LCD_LINE1_ADDR:
   129                           	opt callstack 0
   130  00101C                     _LCD_SIZE_VERT:
   131                           	opt callstack 0
   132  00101C  04                 	db	4
   133  00101D                     __end_of_LCD_SIZE_VERT:
   134                           	opt callstack 0
   135  00101D                     _LCD_SIZE_HORZ:
   136                           	opt callstack 0
   137  00101D  10                 	db	16
   138  00101E                     __end_of_LCD_SIZE_HORZ:
   139                           	opt callstack 0
   140  00101E  40                 	db	64
   141  00101F                     __end_of_LCD_LINE2_ADDR:
   142                           	opt callstack 0
   143  0000                     _LATDbits	set	3980
   144  0000                     _INTCONbits	set	4082
   145  0000                     _SSPBUF	set	4041
   146  0000                     _SSPCON2bits	set	4037
   147  0000                     _SSPCON1	set	4038
   148  0000                     _SSPADD	set	4040
   149  0000                     _TRISCbits	set	3988
   150  0000                     _SSPCON1bits	set	4038
   151  0000                     _SSPCON2	set	4037
   152  0000                     _SSPSTAT	set	4039
   153  0000                     _TRISD	set	3989
   154  0000                     _LATD	set	3980
   155  00101F                     STR_1:
   156  00101F  25                 	db	37
   157  001020  30                 	db	48	;'0'
   158  001021  32                 	db	50	;'2'
   159  001022  78                 	db	120	;'x'
   160  001023  2F                 	db	47
   161  001024  25                 	db	37
   162  001025  30                 	db	48	;'0'
   163  001026  32                 	db	50	;'2'
   164  001027  78                 	db	120	;'x'
   165  001028  2F                 	db	47
   166  001029  25                 	db	37
   167  00102A  30                 	db	48	;'0'
   168  00102B  32                 	db	50	;'2'
   169  00102C  78                 	db	120	;'x'
   170  00102D  00                 	db	0
   171  00102E                     STR_2:
   172  00102E  25                 	db	37
   173  00102F  30                 	db	48	;'0'
   174  001030  32                 	db	50	;'2'
   175  001031  78                 	db	120	;'x'
   176  001032  3A                 	db	58	;':'
   177  001033  25                 	db	37
   178  001034  30                 	db	48	;'0'
   179  001035  32                 	db	50	;'2'
   180  001036  78                 	db	120	;'x'
   181  001037  3A                 	db	58	;':'
   182  001038  25                 	db	37
   183  001039  30                 	db	48	;'0'
   184  00103A  32                 	db	50	;'2'
   185  00103B  78                 	db	120	;'x'
   186  00103C  00                 	db	0
   187                           
   188                           ; #config settings
   189  00103D  00                 	db	0	; dummy byte at the end
   190  0000                     
   191                           	psect	cinit
   192  001CBE                     __pcinit:
   193                           	opt callstack 0
   194  001CBE                     start_initialization:
   195                           	opt callstack 0
   196  001CBE                     __initialization:
   197                           	opt callstack 0
   198                           
   199                           ; Clear objects allocated to BANK0 (36 bytes)
   200  001CBE  EE00  F080         	lfsr	0,__pbssBANK0
   201  001CC2  0E24               	movlw	36
   202  001CC4                     clear_0:
   203  001CC4  6AEE               	clrf	postinc0,c
   204  001CC6  06E8               	decf	wreg,f,c
   205  001CC8  E1FD               	bnz	clear_0
   206                           
   207                           ; Clear objects allocated to COMRAM (4 bytes)
   208  001CCA  6A7F               	clrf	(__pbssCOMRAM+3)& (0+255),c
   209  001CCC  6A7E               	clrf	(__pbssCOMRAM+2)& (0+255),c
   210  001CCE  6A7D               	clrf	(__pbssCOMRAM+1)& (0+255),c
   211  001CD0  6A7C               	clrf	__pbssCOMRAM& (0+255),c
   212  001CD2                     end_of_initialization:
   213                           	opt callstack 0
   214  001CD2                     __end_of__initialization:
   215                           	opt callstack 0
   216  001CD2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   217  001CD4  6EF8               	movwf	tblptru,c
   218  001CD6  0100               	movlb	0
   219  001CD8  EF4F  F00B         	goto	_main	;jump to C main() function
   220                           
   221                           	psect	bssCOMRAM
   222  00007C                     __pbssCOMRAM:
   223                           	opt callstack 0
   224  00007C                     _prec:
   225                           	opt callstack 0
   226  00007C                     	ds	2
   227  00007E                     _flags:
   228                           	opt callstack 0
   229  00007E                     	ds	2
   230                           
   231                           	psect	bssBANK0
   232  000080                     __pbssBANK0:
   233                           	opt callstack 0
   234  000080                     _nout:
   235                           	opt callstack 0
   236  000080                     	ds	2
   237  000082                     _width:
   238                           	opt callstack 0
   239  000082                     	ds	2
   240  000084                     _dbuf:
   241                           	opt callstack 0
   242  000084                     	ds	32
   243                           
   244                           	psect	cstackCOMRAM
   245  000001                     __pcstackCOMRAM:
   246                           	opt callstack 0
   247  000001                     ??_I2C_Master_Wait:
   248  000001                     ?_strlen:
   249                           	opt callstack 0
   250  000001                     ?_isupper:
   251                           	opt callstack 0
   252  000001                     ?_isalpha:
   253                           	opt callstack 0
   254  000001                     ?_isdigit:
   255                           	opt callstack 0
   256  000001                     ?_isspace:
   257                           	opt callstack 0
   258  000001                     ?_islower:
   259                           	opt callstack 0
   260  000001                     ?___wmul:
   261                           	opt callstack 0
   262  000001                     ?___lldiv:
   263                           	opt callstack 0
   264  000001                     pulse_e@interruptState:
   265                           	opt callstack 0
   266  000001                     ___wmul@multiplier:
   267                           	opt callstack 0
   268  000001                     isalpha@c:
   269                           	opt callstack 0
   270  000001                     isdigit@c:
   271                           	opt callstack 0
   272  000001                     isspace@c:
   273                           	opt callstack 0
   274  000001                     isupper@c:
   275                           	opt callstack 0
   276  000001                     strlen@s:
   277                           	opt callstack 0
   278  000001                     islower@c:
   279                           	opt callstack 0
   280  000001                     ___lldiv@dividend:
   281                           	opt callstack 0
   282                           
   283                           ; 4 bytes @ 0x0
   284  000001                     	ds	1
   285  000002                     I2C_Master_Read@ackBit:
   286                           	opt callstack 0
   287  000002                     send_nibble@data:
   288                           	opt callstack 0
   289  000002                     I2C_Master_Write@byteToWrite:
   290                           	opt callstack 0
   291                           
   292                           ; 2 bytes @ 0x1
   293  000002                     	ds	1
   294  000003                     ??_isupper:
   295  000003                     ??_isalpha:
   296  000003                     ??_isdigit:
   297  000003                     ??_isspace:
   298  000003                     ??_islower:
   299  000003                     I2C_Master_Read@receivedByte:
   300                           	opt callstack 0
   301  000003                     send_byte@data:
   302                           	opt callstack 0
   303  000003                     ___wmul@multiplicand:
   304                           	opt callstack 0
   305  000003                     strlen@a:
   306                           	opt callstack 0
   307                           
   308                           ; 2 bytes @ 0x2
   309  000003                     	ds	1
   310  000004                     rtc_set_time@i:
   311                           	opt callstack 0
   312  000004                     lcdInst@data:
   313                           	opt callstack 0
   314  000004                     putch@data:
   315                           	opt callstack 0
   316                           
   317                           ; 1 bytes @ 0x3
   318  000004                     	ds	1
   319  000005                     ??_initLCD:
   320  000005                     ___wmul@product:
   321                           	opt callstack 0
   322  000005                     fputc@c:
   323                           	opt callstack 0
   324  000005                     ___lldiv@divisor:
   325                           	opt callstack 0
   326                           
   327                           ; 4 bytes @ 0x4
   328  000005                     	ds	2
   329  000007                     ?_toupper:
   330                           	opt callstack 0
   331  000007                     _isspace$919:
   332                           	opt callstack 0
   333  000007                     fputc@fp:
   334                           	opt callstack 0
   335  000007                     toupper@c:
   336                           	opt callstack 0
   337                           
   338                           ; 2 bytes @ 0x6
   339  000007                     	ds	1
   340  000008                     ?_atoi:
   341                           	opt callstack 0
   342  000008                     atoi@s:
   343                           	opt callstack 0
   344                           
   345                           ; 2 bytes @ 0x7
   346  000008                     	ds	1
   347  000009                     ??_fputc:
   348  000009                     ??_toupper:
   349  000009                     ___lldiv@quotient:
   350                           	opt callstack 0
   351                           
   352                           ; 4 bytes @ 0x8
   353  000009                     	ds	1
   354  00000A                     ??_atoi:
   355                           
   356                           ; 1 bytes @ 0x9
   357  00000A                     	ds	3
   358  00000D                     ___lldiv@counter:
   359                           	opt callstack 0
   360  00000D                     _toupper$984:
   361                           	opt callstack 0
   362                           
   363                           ; 2 bytes @ 0xC
   364  00000D                     	ds	1
   365  00000E                     atoi@neg:
   366                           	opt callstack 0
   367  00000E                     fputs@s:
   368                           	opt callstack 0
   369  00000E                     I2C_Master_Init@clockFreq:
   370                           	opt callstack 0
   371                           
   372                           ; 4 bytes @ 0xD
   373  00000E                     	ds	2
   374  000010                     _atoi$892:
   375                           	opt callstack 0
   376  000010                     fputs@fp:
   377                           	opt callstack 0
   378                           
   379                           ; 2 bytes @ 0xF
   380  000010                     	ds	2
   381  000012                     ??_I2C_Master_Init:
   382  000012                     fputs@c:
   383                           	opt callstack 0
   384  000012                     _atoi$894:
   385                           	opt callstack 0
   386                           
   387                           ; 2 bytes @ 0x11
   388  000012                     	ds	1
   389  000013                     fputs@i:
   390                           	opt callstack 0
   391                           
   392                           ; 2 bytes @ 0x12
   393  000013                     	ds	1
   394  000014                     _atoi$893:
   395                           	opt callstack 0
   396                           
   397                           ; 1 bytes @ 0x13
   398  000014                     	ds	1
   399  000015                     ?_pad:
   400                           	opt callstack 0
   401  000015                     pad@fp:
   402                           	opt callstack 0
   403  000015                     atoi@n:
   404                           	opt callstack 0
   405                           
   406                           ; 2 bytes @ 0x14
   407  000015                     	ds	2
   408  000017                     pad@buf:
   409                           	opt callstack 0
   410                           
   411                           ; 2 bytes @ 0x16
   412  000017                     	ds	2
   413  000019                     pad@p:
   414                           	opt callstack 0
   415                           
   416                           ; 2 bytes @ 0x18
   417  000019                     	ds	2
   418  00001B                     ??_pad:
   419                           
   420                           ; 1 bytes @ 0x1A
   421  00001B                     	ds	1
   422  00001C                     pad@i:
   423                           	opt callstack 0
   424                           
   425                           ; 2 bytes @ 0x1B
   426  00001C                     	ds	2
   427  00001E                     pad@w:
   428                           	opt callstack 0
   429                           
   430                           ; 2 bytes @ 0x1D
   431  00001E                     	ds	2
   432  000020                     ?_xtoa:
   433                           	opt callstack 0
   434  000020                     xtoa@fp:
   435                           	opt callstack 0
   436                           
   437                           ; 2 bytes @ 0x1F
   438  000020                     	ds	2
   439  000022                     xtoa@d:
   440                           	opt callstack 0
   441                           
   442                           ; 8 bytes @ 0x21
   443  000022                     	ds	8
   444  00002A                     xtoa@x:
   445                           	opt callstack 0
   446                           
   447                           ; 1 bytes @ 0x29
   448  00002A                     	ds	1
   449  00002B                     ??_xtoa:
   450                           
   451                           ; 1 bytes @ 0x2A
   452  00002B                     	ds	8
   453  000033                     _xtoa$421:
   454                           	opt callstack 0
   455                           
   456                           ; 2 bytes @ 0x32
   457  000033                     	ds	2
   458  000035                     _xtoa$422:
   459                           	opt callstack 0
   460                           
   461                           ; 2 bytes @ 0x34
   462  000035                     	ds	2
   463  000037                     xtoa@p:
   464                           	opt callstack 0
   465                           
   466                           ; 2 bytes @ 0x36
   467  000037                     	ds	2
   468  000039                     xtoa@w:
   469                           	opt callstack 0
   470                           
   471                           ; 2 bytes @ 0x38
   472  000039                     	ds	2
   473  00003B                     xtoa@n:
   474                           	opt callstack 0
   475                           
   476                           ; 8 bytes @ 0x3A
   477  00003B                     	ds	8
   478  000043                     xtoa@i:
   479                           	opt callstack 0
   480                           
   481                           ; 2 bytes @ 0x42
   482  000043                     	ds	2
   483  000045                     xtoa@c:
   484                           	opt callstack 0
   485                           
   486                           ; 2 bytes @ 0x44
   487  000045                     	ds	2
   488  000047                     ?_vfpfcnvrt:
   489                           	opt callstack 0
   490  000047                     vfpfcnvrt@fp:
   491                           	opt callstack 0
   492                           
   493                           ; 2 bytes @ 0x46
   494  000047                     	ds	2
   495  000049                     vfpfcnvrt@fmt:
   496                           	opt callstack 0
   497                           
   498                           ; 2 bytes @ 0x48
   499  000049                     	ds	2
   500  00004B                     vfpfcnvrt@ap:
   501                           	opt callstack 0
   502                           
   503                           ; 2 bytes @ 0x4A
   504  00004B                     	ds	2
   505  00004D                     ??_vfpfcnvrt:
   506                           
   507                           ; 1 bytes @ 0x4C
   508  00004D                     	ds	4
   509  000051                     vfpfcnvrt@llu:
   510                           	opt callstack 0
   511                           
   512                           ; 8 bytes @ 0x50
   513  000051                     	ds	8
   514  000059                     vfpfcnvrt@done:
   515                           	opt callstack 0
   516                           
   517                           ; 2 bytes @ 0x58
   518  000059                     	ds	2
   519  00005B                     _vfpfcnvrt$437:
   520                           	opt callstack 0
   521                           
   522                           ; 2 bytes @ 0x5A
   523  00005B                     	ds	2
   524  00005D                     vfpfcnvrt@c:
   525                           	opt callstack 0
   526                           
   527                           ; 1 bytes @ 0x5C
   528  00005D                     	ds	1
   529  00005E                     ?_vfprintf:
   530                           	opt callstack 0
   531  00005E                     vfprintf@fp:
   532                           	opt callstack 0
   533                           
   534                           ; 2 bytes @ 0x5D
   535  00005E                     	ds	2
   536  000060                     vfprintf@fmt:
   537                           	opt callstack 0
   538                           
   539                           ; 2 bytes @ 0x5F
   540  000060                     	ds	2
   541  000062                     vfprintf@ap:
   542                           	opt callstack 0
   543                           
   544                           ; 2 bytes @ 0x61
   545  000062                     	ds	2
   546  000064                     vfprintf@cfmt:
   547                           	opt callstack 0
   548                           
   549                           ; 2 bytes @ 0x63
   550  000064                     	ds	2
   551  000066                     ?_printf:
   552                           	opt callstack 0
   553  000066                     printf@fmt:
   554                           	opt callstack 0
   555                           
   556                           ; 2 bytes @ 0x65
   557  000066                     	ds	8
   558  00006E                     
   559                           ; 1 bytes @ 0x6D
   560  00006E                     	ds	2
   561  000070                     printf@ap:
   562                           	opt callstack 0
   563                           
   564                           ; 2 bytes @ 0x6F
   565  000070                     	ds	2
   566  000072                     ??_main:
   567                           
   568                           ; 1 bytes @ 0x71
   569  000072                     	ds	2
   570  000074                     main@time:
   571                           	opt callstack 0
   572                           
   573                           ; 7 bytes @ 0x73
   574  000074                     	ds	7
   575  00007B                     main@i:
   576                           	opt callstack 0
   577                           
   578                           ; 1 bytes @ 0x7A
   579  00007B                     	ds	1
   580                           
   581 ;;
   582 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   583 ;;
   584 ;; *************** function _main *****************
   585 ;; Defined at:
   586 ;;		line 38 in file "main.c"
   587 ;; Parameters:    Size  Location     Type
   588 ;;		None
   589 ;; Auto vars:     Size  Location     Type
   590 ;;  i               1  122[COMRAM] unsigned char 
   591 ;;  time            7  115[COMRAM] unsigned char [7]
   592 ;; Return value:  Size  Location     Type
   593 ;;                  1    wreg      void 
   594 ;; Registers used:
   595 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   596 ;; Tracked objects:
   597 ;;		On entry : 0/0
   598 ;;		On exit  : 0/0
   599 ;;		Unchanged: 0/0
   600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   602 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   603 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   604 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   605 ;;Total ram usage:       10 bytes
   606 ;; Hardware stack levels required when called:   11
   607 ;; This function calls:
   608 ;;		_I2C_Master_Init
   609 ;;		_I2C_Master_Read
   610 ;;		_I2C_Master_Start
   611 ;;		_I2C_Master_Stop
   612 ;;		_I2C_Master_Write
   613 ;;		_initLCD
   614 ;;		_lcdInst
   615 ;;		_printf
   616 ;;		_rtc_set_time
   617 ;; This function is called by:
   618 ;;		Startup code after reset
   619 ;; This function uses a non-reentrant model
   620 ;;
   621                           
   622                           	psect	text0
   623  00169E                     __ptext0:
   624                           	opt callstack 0
   625  00169E                     _main:
   626                           	opt callstack 20
   627                           
   628                           ;main.c: 42:     LATD = 0x00;
   629                           
   630                           ;incstack = 0
   631  00169E  0E00               	movlw	0
   632  0016A0  6E8C               	movwf	3980,c	;volatile
   633                           
   634                           ;main.c: 43:     TRISD = 0x00;
   635  0016A2  0E00               	movlw	0
   636  0016A4  6E95               	movwf	3989,c	;volatile
   637                           
   638                           ;main.c: 45:     initLCD();
   639  0016A6  EC8A  F00C         	call	_initLCD	;wreg free
   640                           
   641                           ;main.c: 48:     I2C_Master_Init(100000);
   642  0016AA  0EA0               	movlw	160
   643  0016AC  6E0E               	movwf	I2C_Master_Init@clockFreq,c
   644  0016AE  0E86               	movlw	134
   645  0016B0  6E0F               	movwf	I2C_Master_Init@clockFreq+1,c
   646  0016B2  0E01               	movlw	1
   647  0016B4  6E10               	movwf	I2C_Master_Init@clockFreq+2,c
   648  0016B6  0E00               	movlw	0
   649  0016B8  6E11               	movwf	I2C_Master_Init@clockFreq+3,c
   650  0016BA  ECBF  F00C         	call	_I2C_Master_Init	;wreg free
   651                           
   652                           ;main.c: 52:     rtc_set_time();
   653  0016BE  EC3D  F00D         	call	_rtc_set_time	;wreg free
   654  0016C2                     l1968:
   655                           
   656                           ;main.c: 58:         I2C_Master_Start();
   657  0016C2  ECA0  F00E         	call	_I2C_Master_Start	;wreg free
   658                           
   659                           ;main.c: 59:         I2C_Master_Write(0b11010000);
   660  0016C6  0E00               	movlw	0
   661  0016C8  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
   662  0016CA  0ED0               	movlw	208
   663  0016CC  6E02               	movwf	I2C_Master_Write@byteToWrite,c
   664  0016CE  EC97  F00E         	call	_I2C_Master_Write	;wreg free
   665                           
   666                           ;main.c: 60:         I2C_Master_Write(0x00);
   667  0016D2  0E00               	movlw	0
   668  0016D4  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
   669  0016D6  0E00               	movlw	0
   670  0016D8  6E02               	movwf	I2C_Master_Write@byteToWrite,c
   671  0016DA  EC97  F00E         	call	_I2C_Master_Write	;wreg free
   672                           
   673                           ;main.c: 61:         I2C_Master_Stop();
   674  0016DE  EC9C  F00E         	call	_I2C_Master_Stop	;wreg free
   675                           
   676                           ;main.c: 64:         I2C_Master_Start();
   677  0016E2  ECA0  F00E         	call	_I2C_Master_Start	;wreg free
   678                           
   679                           ;main.c: 65:         I2C_Master_Write(0b11010001);
   680  0016E6  0E00               	movlw	0
   681  0016E8  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
   682  0016EA  0ED1               	movlw	209
   683  0016EC  6E02               	movwf	I2C_Master_Write@byteToWrite,c
   684  0016EE  EC97  F00E         	call	_I2C_Master_Write	;wreg free
   685                           
   686                           ;main.c: 66:         for(unsigned char i = 0; i < 6; i++){
   687  0016F2  0E00               	movlw	0
   688  0016F4  6E7B               	movwf	main@i,c
   689  0016F6                     l1986:
   690                           
   691                           ;main.c: 67:             time[i] = I2C_Master_Read(0);
   692  0016F6  0E74               	movlw	low main@time
   693  0016F8  247B               	addwf	main@i,w,c
   694  0016FA  6ED9               	movwf	fsr2l,c
   695  0016FC  6ADA               	clrf	fsr2h,c
   696  0016FE  0E00               	movlw	high main@time
   697  001700  22DA               	addwfc	fsr2h,f,c
   698  001702  0E00               	movlw	0
   699  001704  EC4D  F00E         	call	_I2C_Master_Read
   700  001708  6EDF               	movwf	indf2,c
   701                           
   702                           ;main.c: 68:         }
   703  00170A  2A7B               	incf	main@i,f,c
   704  00170C  0E05               	movlw	5
   705  00170E  647B               	cpfsgt	main@i,c
   706  001710  D7F2               	goto	l1986
   707                           
   708                           ;main.c: 69:         time[6] = I2C_Master_Read(1);
   709  001712  0E01               	movlw	1
   710  001714  EC4D  F00E         	call	_I2C_Master_Read
   711  001718  6E7A               	movwf	main@time+6,c
   712                           
   713                           ;main.c: 70:         I2C_Master_Stop();
   714  00171A  EC9C  F00E         	call	_I2C_Master_Stop	;wreg free
   715                           
   716                           ;main.c: 73:         { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.0)));};
   717  00171E  0E80               	movlw	128
   718  001720  EC91  F00E         	call	_lcdInst
   719  001724  0E07               	movlw	7
   720  001726  6E72               	movwf	??_main& (0+255),c
   721  001728  0E7D               	movlw	125
   722  00172A                     u1407:
   723  00172A  2EE8               	decfsz	wreg,f,c
   724  00172C  D7FE               	bra	u1407
   725  00172E  2E72               	decfsz	??_main& (0+255),f,c
   726  001730  D7FC               	bra	u1407
   727  001732  F000               	nop	
   728                           
   729                           ;main.c: 74:         printf("%02x/%02x/%02x", time[6],time[5],time[4]);
   730  001734  0E1F               	movlw	low STR_1
   731  001736  6E66               	movwf	printf@fmt,c
   732  001738  0E10               	movlw	high STR_1
   733  00173A  6E67               	movwf	printf@fmt+1,c
   734  00173C  C07A  F068         	movff	main@time+6,?_printf+2
   735  001740  6A69               	clrf	?_printf+3,c
   736  001742  C079  F06A         	movff	main@time+5,?_printf+4
   737  001746  6A6B               	clrf	?_printf+5,c
   738  001748  C078  F06C         	movff	main@time+4,?_printf+6
   739  00174C  6A6D               	clrf	?_printf+7,c
   740  00174E  EC27  F00E         	call	_printf	;wreg free
   741  001752  0EC0               	movlw	192
   742  001754  EC91  F00E         	call	_lcdInst
   743                           
   744                           ;main.c: 76:         printf("%02x:%02x:%02x", time[2],time[1],time[0]);
   745  001758  0E2E               	movlw	low STR_2
   746  00175A  6E66               	movwf	printf@fmt,c
   747  00175C  0E10               	movlw	high STR_2
   748  00175E  6E67               	movwf	printf@fmt+1,c
   749  001760  C076  F068         	movff	main@time+2,?_printf+2
   750  001764  6A69               	clrf	?_printf+3,c
   751  001766  C075  F06A         	movff	main@time+1,?_printf+4
   752  00176A  6A6B               	clrf	?_printf+5,c
   753  00176C  C074  F06C         	movff	main@time,?_printf+6
   754  001770  6A6D               	clrf	?_printf+7,c
   755  001772  EC27  F00E         	call	_printf	;wreg free
   756                           
   757                           ;main.c: 80:         _delay((unsigned long)((1000)*(10000000/4000.0)));
   758  001776  0E0D               	movlw	13
   759  001778  6E73               	movwf	(??_main+1)& (0+255),c
   760  00177A  0EAF               	movlw	175
   761  00177C  6E72               	movwf	??_main& (0+255),c
   762  00177E  0EB6               	movlw	182
   763  001780                     u1417:
   764  001780  2EE8               	decfsz	wreg,f,c
   765  001782  D7FE               	bra	u1417
   766  001784  2E72               	decfsz	??_main& (0+255),f,c
   767  001786  D7FC               	bra	u1417
   768  001788  2E73               	decfsz	(??_main+1)& (0+255),f,c
   769  00178A  D7FA               	bra	u1417
   770  00178C  D000               	nop2	
   771  00178E  D799               	goto	l1968
   772  001790                     __end_of_main:
   773                           	opt callstack 0
   774                           
   775 ;; *************** function _rtc_set_time *****************
   776 ;; Defined at:
   777 ;;		line 85 in file "main.c"
   778 ;; Parameters:    Size  Location     Type
   779 ;;		None
   780 ;; Auto vars:     Size  Location     Type
   781 ;;  i               1    3[COMRAM] unsigned char 
   782 ;; Return value:  Size  Location     Type
   783 ;;                  1    wreg      void 
   784 ;; Registers used:
   785 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   786 ;; Tracked objects:
   787 ;;		On entry : 0/0
   788 ;;		On exit  : 0/0
   789 ;;		Unchanged: 0/0
   790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   792 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   794 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   795 ;;Total ram usage:        1 bytes
   796 ;; Hardware stack levels used:    1
   797 ;; Hardware stack levels required when called:    2
   798 ;; This function calls:
   799 ;;		_I2C_Master_Start
   800 ;;		_I2C_Master_Stop
   801 ;;		_I2C_Master_Write
   802 ;; This function is called by:
   803 ;;		_main
   804 ;; This function uses a non-reentrant model
   805 ;;
   806                           
   807                           	psect	text1
   808  001A7A                     __ptext1:
   809                           	opt callstack 0
   810  001A7A                     _rtc_set_time:
   811                           	opt callstack 28
   812                           
   813                           ;main.c: 86:     I2C_Master_Start();
   814                           
   815                           ;incstack = 0
   816  001A7A  ECA0  F00E         	call	_I2C_Master_Start	;wreg free
   817                           
   818                           ;main.c: 87:     I2C_Master_Write(0b11010000);
   819  001A7E  0E00               	movlw	0
   820  001A80  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
   821  001A82  0ED0               	movlw	208
   822  001A84  6E02               	movwf	I2C_Master_Write@byteToWrite,c
   823  001A86  EC97  F00E         	call	_I2C_Master_Write	;wreg free
   824                           
   825                           ;main.c: 88:     I2C_Master_Write(0x00);
   826  001A8A  0E00               	movlw	0
   827  001A8C  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
   828  001A8E  0E00               	movlw	0
   829  001A90  6E02               	movwf	I2C_Master_Write@byteToWrite,c
   830  001A92  EC97  F00E         	call	_I2C_Master_Write	;wreg free
   831                           
   832                           ;main.c: 91:     for(char i=0; i < 7; i++){
   833  001A96  0E00               	movlw	0
   834  001A98  6E04               	movwf	rtc_set_time@i,c
   835  001A9A                     l1946:
   836                           
   837                           ;main.c: 92:         I2C_Master_Write(happynewyear[i]);
   838  001A9A  0E12               	movlw	low _happynewyear
   839  001A9C  2404               	addwf	rtc_set_time@i,w,c
   840  001A9E  6EF6               	movwf	tblptrl,c
   841  001AA0  6AF7               	clrf	tblptrh,c
   842  001AA2  0E10               	movlw	high _happynewyear
   843  001AA4  22F7               	addwfc	tblptrh,f,c
   844  001AA6                     	if	0	;There are less than 3 active tblptr bytes
   845  001AA6                     	endif
   846  001AA6  0008               	tblrd		*
   847  001AA8  50F5               	movf	tablat,w,c
   848  001AAA  6E02               	movwf	I2C_Master_Write@byteToWrite,c
   849  001AAC  6A03               	clrf	I2C_Master_Write@byteToWrite+1,c
   850  001AAE  EC97  F00E         	call	_I2C_Master_Write	;wreg free
   851                           
   852                           ;main.c: 93:     }
   853  001AB2  2A04               	incf	rtc_set_time@i,f,c
   854  001AB4  0E06               	movlw	6
   855  001AB6  6404               	cpfsgt	rtc_set_time@i,c
   856  001AB8  D7F0               	goto	l1946
   857                           
   858                           ;main.c: 95:     I2C_Master_Stop();
   859  001ABA  EC9C  F00E         	call	_I2C_Master_Stop	;wreg free
   860  001ABE  0012               	return		;funcret
   861  001AC0                     __end_of_rtc_set_time:
   862                           	opt callstack 0
   863                           
   864 ;; *************** function _I2C_Master_Write *****************
   865 ;; Defined at:
   866 ;;		line 70 in file "I2C.c"
   867 ;; Parameters:    Size  Location     Type
   868 ;;  byteToWrite     2    1[COMRAM] unsigned int 
   869 ;; Auto vars:     Size  Location     Type
   870 ;;		None
   871 ;; Return value:  Size  Location     Type
   872 ;;                  1    wreg      void 
   873 ;; Registers used:
   874 ;;		wreg, status,2, status,0, cstack
   875 ;; Tracked objects:
   876 ;;		On entry : 0/0
   877 ;;		On exit  : 0/0
   878 ;;		Unchanged: 0/0
   879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   880 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   883 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   884 ;;Total ram usage:        2 bytes
   885 ;; Hardware stack levels used:    1
   886 ;; Hardware stack levels required when called:    1
   887 ;; This function calls:
   888 ;;		_I2C_Master_Wait
   889 ;; This function is called by:
   890 ;;		_main
   891 ;;		_rtc_set_time
   892 ;; This function uses a non-reentrant model
   893 ;;
   894                           
   895                           	psect	text2
   896  001D2E                     __ptext2:
   897                           	opt callstack 0
   898  001D2E                     _I2C_Master_Write:
   899                           	opt callstack 28
   900                           
   901                           ;I2C.c: 71:     I2C_Master_Wait();
   902                           
   903                           ;incstack = 0
   904  001D2E  EC82  F00E         	call	_I2C_Master_Wait	;wreg free
   905                           
   906                           ;I2C.c: 74:     SSPBUF = byteToWrite;
   907  001D32  C002  FFC9         	movff	I2C_Master_Write@byteToWrite,4041	;volatile
   908  001D36  0012               	return		;funcret
   909  001D38                     __end_of_I2C_Master_Write:
   910                           	opt callstack 0
   911                           
   912 ;; *************** function _I2C_Master_Stop *****************
   913 ;; Defined at:
   914 ;;		line 65 in file "I2C.c"
   915 ;; Parameters:    Size  Location     Type
   916 ;;		None
   917 ;; Auto vars:     Size  Location     Type
   918 ;;		None
   919 ;; Return value:  Size  Location     Type
   920 ;;                  1    wreg      void 
   921 ;; Registers used:
   922 ;;		wreg, status,2, status,0, cstack
   923 ;; Tracked objects:
   924 ;;		On entry : 0/0
   925 ;;		On exit  : 0/0
   926 ;;		Unchanged: 0/0
   927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   932 ;;Total ram usage:        0 bytes
   933 ;; Hardware stack levels used:    1
   934 ;; Hardware stack levels required when called:    1
   935 ;; This function calls:
   936 ;;		_I2C_Master_Wait
   937 ;; This function is called by:
   938 ;;		_main
   939 ;;		_rtc_set_time
   940 ;; This function uses a non-reentrant model
   941 ;;
   942                           
   943                           	psect	text3
   944  001D38                     __ptext3:
   945                           	opt callstack 0
   946  001D38                     _I2C_Master_Stop:
   947                           	opt callstack 28
   948                           
   949                           ;I2C.c: 66:     I2C_Master_Wait();
   950                           
   951                           ;incstack = 0
   952  001D38  EC82  F00E         	call	_I2C_Master_Wait	;wreg free
   953                           
   954                           ;I2C.c: 67:     SSPCON2bits.PEN = 1;
   955  001D3C  84C5               	bsf	4037,2,c	;volatile
   956  001D3E  0012               	return		;funcret
   957  001D40                     __end_of_I2C_Master_Stop:
   958                           	opt callstack 0
   959                           
   960 ;; *************** function _I2C_Master_Start *****************
   961 ;; Defined at:
   962 ;;		line 55 in file "I2C.c"
   963 ;; Parameters:    Size  Location     Type
   964 ;;		None
   965 ;; Auto vars:     Size  Location     Type
   966 ;;		None
   967 ;; Return value:  Size  Location     Type
   968 ;;                  1    wreg      void 
   969 ;; Registers used:
   970 ;;		wreg, status,2, status,0, cstack
   971 ;; Tracked objects:
   972 ;;		On entry : 0/0
   973 ;;		On exit  : 0/0
   974 ;;		Unchanged: 0/0
   975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   980 ;;Total ram usage:        0 bytes
   981 ;; Hardware stack levels used:    1
   982 ;; Hardware stack levels required when called:    1
   983 ;; This function calls:
   984 ;;		_I2C_Master_Wait
   985 ;; This function is called by:
   986 ;;		_main
   987 ;;		_rtc_set_time
   988 ;; This function uses a non-reentrant model
   989 ;;
   990                           
   991                           	psect	text4
   992  001D40                     __ptext4:
   993                           	opt callstack 0
   994  001D40                     _I2C_Master_Start:
   995                           	opt callstack 28
   996                           
   997                           ;I2C.c: 56:     I2C_Master_Wait();
   998                           
   999                           ;incstack = 0
  1000  001D40  EC82  F00E         	call	_I2C_Master_Wait	;wreg free
  1001                           
  1002                           ;I2C.c: 57:     SSPCON2bits.SEN = 1;
  1003  001D44  80C5               	bsf	4037,0,c	;volatile
  1004  001D46  0012               	return		;funcret
  1005  001D48                     __end_of_I2C_Master_Start:
  1006                           	opt callstack 0
  1007                           
  1008 ;; *************** function _printf *****************
  1009 ;; Defined at:
  1010 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  1011 ;; Parameters:    Size  Location     Type
  1012 ;;  fmt             2  101[COMRAM] PTR const unsigned char 
  1013 ;;		 -> STR_2(15), STR_1(15), 
  1014 ;; Auto vars:     Size  Location     Type
  1015 ;;  ap              2  111[COMRAM] PTR void [1]
  1016 ;;		 -> ?_printf(2), 
  1017 ;;  ret             2    0        int 
  1018 ;; Return value:  Size  Location     Type
  1019 ;;                  2  101[COMRAM] int 
  1020 ;; Registers used:
  1021 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1022 ;; Tracked objects:
  1023 ;;		On entry : 0/0
  1024 ;;		On exit  : 0/0
  1025 ;;		Unchanged: 0/0
  1026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1027 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1028 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1030 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1031 ;;Total ram usage:       12 bytes
  1032 ;; Hardware stack levels used:    1
  1033 ;; Hardware stack levels required when called:   10
  1034 ;; This function calls:
  1035 ;;		_vfprintf
  1036 ;; This function is called by:
  1037 ;;		_main
  1038 ;; This function uses a non-reentrant model
  1039 ;;
  1040                           
  1041                           	psect	text5
  1042  001C4E                     __ptext5:
  1043                           	opt callstack 0
  1044  001C4E                     _printf:
  1045                           	opt callstack 20
  1046                           
  1047                           ;incstack = 0
  1048  001C4E  0E68               	movlw	low (?_printf+2)
  1049  001C50  6E70               	movwf	printf@ap,c
  1050  001C52  0E00               	movlw	high (?_printf+2)
  1051  001C54  6E71               	movwf	printf@ap+1,c
  1052  001C56  0E00               	movlw	0
  1053  001C58  6E5E               	movwf	vfprintf@fp,c
  1054  001C5A  0E00               	movlw	0
  1055  001C5C  6E5F               	movwf	vfprintf@fp+1,c
  1056  001C5E  C066  F060         	movff	printf@fmt,vfprintf@fmt
  1057  001C62  C067  F061         	movff	printf@fmt+1,vfprintf@fmt+1
  1058  001C66  0E70               	movlw	low printf@ap
  1059  001C68  6E62               	movwf	vfprintf@ap,c
  1060  001C6A  0E00               	movlw	high printf@ap
  1061  001C6C  6E63               	movwf	vfprintf@ap+1,c
  1062  001C6E  ECED  F00C         	call	_vfprintf	;wreg free
  1063  001C72  0012               	return		;funcret
  1064  001C74                     __end_of_printf:
  1065                           	opt callstack 0
  1066                           
  1067 ;; *************** function _vfprintf *****************
  1068 ;; Defined at:
  1069 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1070 ;; Parameters:    Size  Location     Type
  1071 ;;  fp              2   93[COMRAM] PTR struct _IO_FILE
  1072 ;;		 -> NULL(0), 
  1073 ;;  fmt             2   95[COMRAM] PTR const unsigned char 
  1074 ;;		 -> STR_2(15), STR_1(15), 
  1075 ;;  ap              2   97[COMRAM] PTR PTR void 
  1076 ;;		 -> printf@ap(2), 
  1077 ;; Auto vars:     Size  Location     Type
  1078 ;;  cfmt            2   99[COMRAM] PTR unsigned char 
  1079 ;;		 -> STR_2(15), STR_1(15), 
  1080 ;; Return value:  Size  Location     Type
  1081 ;;                  2   93[COMRAM] int 
  1082 ;; Registers used:
  1083 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1084 ;; Tracked objects:
  1085 ;;		On entry : 0/0
  1086 ;;		On exit  : 0/0
  1087 ;;		Unchanged: 0/0
  1088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1089 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1090 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1092 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1093 ;;Total ram usage:        8 bytes
  1094 ;; Hardware stack levels used:    1
  1095 ;; Hardware stack levels required when called:    9
  1096 ;; This function calls:
  1097 ;;		_vfpfcnvrt
  1098 ;; This function is called by:
  1099 ;;		_printf
  1100 ;; This function uses a non-reentrant model
  1101 ;;
  1102                           
  1103                           	psect	text6
  1104  0019DA                     __ptext6:
  1105                           	opt callstack 0
  1106  0019DA                     _vfprintf:
  1107                           	opt callstack 20
  1108                           
  1109                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1110                           
  1111                           ;incstack = 0
  1112  0019DA  C060  F064         	movff	vfprintf@fmt,vfprintf@cfmt
  1113  0019DE  C061  F065         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1114                           
  1115                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1116  0019E2  0E00               	movlw	0
  1117  0019E4  0100               	movlb	0	; () banked
  1118  0019E6  6F81               	movwf	(_nout+1)& (0+255),b
  1119  0019E8  0E00               	movlw	0
  1120  0019EA  6F80               	movwf	_nout& (0+255),b
  1121                           
  1122                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1123  0019EC  D013               	goto	l1884
  1124  0019EE                     l1882:
  1125                           
  1126                           ; BSR set to: 0
  1127                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1128  0019EE  C05E  F047         	movff	vfprintf@fp,vfpfcnvrt@fp
  1129  0019F2  C05F  F048         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1130  0019F6  0E64               	movlw	low vfprintf@cfmt
  1131  0019F8  6E49               	movwf	vfpfcnvrt@fmt,c
  1132  0019FA  0E00               	movlw	high vfprintf@cfmt
  1133  0019FC  6E4A               	movwf	vfpfcnvrt@fmt+1,c
  1134  0019FE  C062  F04B         	movff	vfprintf@ap,vfpfcnvrt@ap
  1135  001A02  C063  F04C         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1136  001A06  EC1F  F008         	call	_vfpfcnvrt	;wreg free
  1137  001A0A  5047               	movf	?_vfpfcnvrt,w,c
  1138  001A0C  0100               	movlb	0	; () banked
  1139  001A0E  2780               	addwf	_nout& (0+255),f,b
  1140  001A10  5048               	movf	?_vfpfcnvrt+1,w,c
  1141  001A12  2381               	addwfc	(_nout+1)& (0+255),f,b
  1142  001A14                     l1884:
  1143                           
  1144                           ; BSR set to: 0
  1145                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1146  001A14  C064  FFF6         	movff	vfprintf@cfmt,tblptrl
  1147  001A18  C065  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1148  001A1C                     	if	0	;tblptru may be non-zero
  1149  001A1C                     	endif
  1150  001A1C                     	if	0	;tblptru may be non-zero
  1151  001A1C                     	endif
  1152  001A1C  0008               	tblrd		*
  1153  001A1E  50F5               	movf	tablat,w,c
  1154  001A20  0900               	iorlw	0
  1155  001A22  A4D8               	btfss	status,2,c
  1156  001A24  D7E4               	goto	l1882
  1157                           
  1158                           ; BSR set to: 0
  1159                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1160  001A26  C080  F05E         	movff	_nout,?_vfprintf
  1161  001A2A  C081  F05F         	movff	_nout+1,?_vfprintf+1
  1162                           
  1163                           ; BSR set to: 0
  1164  001A2E  0012               	return		;funcret
  1165  001A30                     __end_of_vfprintf:
  1166                           	opt callstack 0
  1167                           
  1168 ;; *************** function _vfpfcnvrt *****************
  1169 ;; Defined at:
  1170 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1171 ;; Parameters:    Size  Location     Type
  1172 ;;  fp              2   70[COMRAM] PTR struct _IO_FILE
  1173 ;;		 -> NULL(0), 
  1174 ;;  fmt             2   72[COMRAM] PTR PTR unsigned char 
  1175 ;;		 -> vfprintf@cfmt(2), 
  1176 ;;  ap              2   74[COMRAM] PTR PTR void 
  1177 ;;		 -> printf@ap(2), 
  1178 ;; Auto vars:     Size  Location     Type
  1179 ;;  llu             8   80[COMRAM] unsigned long long 
  1180 ;;  ll              8    0        long long 
  1181 ;;  f               4    0        long long 
  1182 ;;  vp              3    0        PTR void 
  1183 ;;  ct              3    0        unsigned char [3]
  1184 ;;  cp              3    0        PTR unsigned char 
  1185 ;;  done            2   88[COMRAM] int 
  1186 ;;  i               2    0        int 
  1187 ;;  c               1   92[COMRAM] unsigned char 
  1188 ;; Return value:  Size  Location     Type
  1189 ;;                  2   70[COMRAM] int 
  1190 ;; Registers used:
  1191 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1192 ;; Tracked objects:
  1193 ;;		On entry : 0/0
  1194 ;;		On exit  : 0/0
  1195 ;;		Unchanged: 0/0
  1196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1197 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1198 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1199 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1200 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1201 ;;Total ram usage:       23 bytes
  1202 ;; Hardware stack levels used:    1
  1203 ;; Hardware stack levels required when called:    8
  1204 ;; This function calls:
  1205 ;;		_atoi
  1206 ;;		_fputc
  1207 ;;		_isdigit
  1208 ;;		_xtoa
  1209 ;; This function is called by:
  1210 ;;		_vfprintf
  1211 ;; This function uses a non-reentrant model
  1212 ;;
  1213                           
  1214                           	psect	text7
  1215  00103E                     __ptext7:
  1216                           	opt callstack 0
  1217  00103E                     _vfpfcnvrt:
  1218                           	opt callstack 20
  1219                           
  1220                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1221                           
  1222                           ; BSR set to: 0
  1223                           ;incstack = 0
  1224  00103E  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1225  001042  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1226  001046  CFDE FFF6          	movff	postinc2,tblptrl
  1227  00104A  CFDD FFF7          	movff	postdec2,tblptrh
  1228  00104E                     	if	0	;tblptru may be non-zero
  1229  00104E                     	endif
  1230  00104E                     	if	0	;tblptru may be non-zero
  1231  00104E                     	endif
  1232  00104E  0008               	tblrd		*
  1233  001050  50F5               	movf	tablat,w,c
  1234  001052  0A25               	xorlw	37
  1235  001054  A4D8               	btfss	status,2,c
  1236  001056  D153               	goto	l1858
  1237                           
  1238                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1239  001058  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1240  00105C  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1241  001060  2ADE               	incf	postinc2,f,c
  1242  001062  0E00               	movlw	0
  1243  001064  22DD               	addwfc	postdec2,f,c
  1244                           
  1245                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1246  001066  0E00               	movlw	0
  1247  001068  0100               	movlb	0	; () banked
  1248  00106A  6F83               	movwf	(_width+1)& (0+255),b
  1249  00106C  0E00               	movlw	0
  1250  00106E  6F82               	movwf	_width& (0+255),b
  1251  001070  C082  F07E         	movff	_width,_flags
  1252  001074  C083  F07F         	movff	_width+1,_flags+1
  1253                           
  1254                           ; BSR set to: 0
  1255                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1256  001078  687C               	setf	_prec,c
  1257  00107A  687D               	setf	_prec+1,c
  1258                           
  1259                           ; BSR set to: 0
  1260                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  1261  00107C  0E00               	movlw	0
  1262  00107E  6E5A               	movwf	vfpfcnvrt@done+1,c
  1263  001080  0E00               	movlw	0
  1264  001082  D014               	goto	L1
  1265  001084                     l1780:
  1266                           
  1267                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  1268  001084  807E               	bsf	_flags,0,c
  1269  001086                     l1782:
  1270                           
  1271                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  1272  001086  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1273  00108A  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1274  00108E  2ADE               	incf	postinc2,f,c
  1275  001090  0E00               	movlw	0
  1276  001092  22DD               	addwfc	postdec2,f,c
  1277                           
  1278                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  1279  001094  D02E               	goto	l1806
  1280  001096                     l1784:
  1281                           
  1282                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  1283  001096  827E               	bsf	_flags,1,c
  1284  001098  D7F6               	goto	l1782
  1285  00109A                     l1788:
  1286                           
  1287                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  1288  00109A  847E               	bsf	_flags,2,c
  1289  00109C  D7F4               	goto	l1782
  1290  00109E                     l1792:
  1291                           
  1292                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  1293  00109E  867E               	bsf	_flags,3,c
  1294  0010A0  D7F2               	goto	l1782
  1295  0010A2                     l1796:
  1296                           
  1297                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  1298  0010A2  887E               	bsf	_flags,4,c
  1299  0010A4  D7F0               	goto	l1782
  1300  0010A6                     l1800:
  1301                           
  1302                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  1303  0010A6  0E00               	movlw	0
  1304  0010A8  6E5A               	movwf	vfpfcnvrt@done+1,c
  1305  0010AA  0E01               	movlw	1
  1306  0010AC                     L1:
  1307  0010AC  6E59               	movwf	vfpfcnvrt@done,c
  1308                           
  1309                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  1310  0010AE  D021               	goto	l1806
  1311  0010B0                     l1804:
  1312  0010B0  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1313  0010B4  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1314  0010B8  CFDE FFF6          	movff	postinc2,tblptrl
  1315  0010BC  CFDD FFF7          	movff	postdec2,tblptrh
  1316  0010C0                     	if	0	;tblptru may be non-zero
  1317  0010C0                     	endif
  1318  0010C0                     	if	0	;tblptru may be non-zero
  1319  0010C0                     	endif
  1320  0010C0  0008               	tblrd		*
  1321  0010C2  50F5               	movf	tablat,w,c
  1322  0010C4  6E4D               	movwf	??_vfpfcnvrt& (0+255),c
  1323  0010C6  6A4E               	clrf	(??_vfpfcnvrt+1)& (0+255),c
  1324                           
  1325                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1326                           ; Switch size 1, requested type "simple"
  1327                           ; Number of cases is 1, Range of values is 0 to 0
  1328                           ; switch strategies available:
  1329                           ; Name         Instructions Cycles
  1330                           ; simple_byte            4     3 (average)
  1331                           ;	Chosen strategy is simple_byte
  1332  0010C8  504E               	movf	??_vfpfcnvrt+1,w,c
  1333  0010CA  0A00               	xorlw	0	; case 0
  1334  0010CC  A4D8               	btfss	status,2,c
  1335  0010CE  D7EB               	goto	l1800
  1336                           
  1337                           ; Switch size 1, requested type "simple"
  1338                           ; Number of cases is 5, Range of values is 32 to 48
  1339                           ; switch strategies available:
  1340                           ; Name         Instructions Cycles
  1341                           ; simple_byte           16     9 (average)
  1342                           ;	Chosen strategy is simple_byte
  1343  0010D0  504D               	movf	??_vfpfcnvrt,w,c
  1344  0010D2  0A20               	xorlw	32	; case 32
  1345  0010D4  B4D8               	btfsc	status,2,c
  1346  0010D6  D7E3               	goto	l1792
  1347  0010D8  0A03               	xorlw	3	; case 35
  1348  0010DA  B4D8               	btfsc	status,2,c
  1349  0010DC  D7E2               	goto	l1796
  1350  0010DE  0A08               	xorlw	8	; case 43
  1351  0010E0  B4D8               	btfsc	status,2,c
  1352  0010E2  D7DB               	goto	l1788
  1353  0010E4  0A06               	xorlw	6	; case 45
  1354  0010E6  B4D8               	btfsc	status,2,c
  1355  0010E8  D7CD               	goto	l1780
  1356  0010EA  0A1D               	xorlw	29	; case 48
  1357  0010EC  B4D8               	btfsc	status,2,c
  1358  0010EE  D7D3               	goto	l1784
  1359  0010F0  D7DA               	goto	l1800
  1360  0010F2                     l1806:
  1361                           
  1362                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  1363  0010F2  5059               	movf	vfpfcnvrt@done,w,c
  1364  0010F4  105A               	iorwf	vfpfcnvrt@done+1,w,c
  1365  0010F6  B4D8               	btfsc	status,2,c
  1366  0010F8  D7DB               	goto	l1804
  1367                           
  1368                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  1369  0010FA  B07E               	btfsc	_flags,0,c
  1370                           
  1371                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  1372  0010FC  927E               	bcf	_flags,1,c
  1373                           
  1374                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  1375  0010FE  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1376  001102  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1377  001106  CFDE FFF6          	movff	postinc2,tblptrl
  1378  00110A  CFDD FFF7          	movff	postdec2,tblptrh
  1379  00110E                     	if	0	;tblptru may be non-zero
  1380  00110E                     	endif
  1381  00110E                     	if	0	;tblptru may be non-zero
  1382  00110E                     	endif
  1383  00110E  0008               	tblrd		*
  1384  001110  50F5               	movf	tablat,w,c
  1385  001112  0A2A               	xorlw	42
  1386  001114  A4D8               	btfss	status,2,c
  1387  001116  D024               	goto	l1818
  1388                           
  1389                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  1390  001118  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1391  00111C  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1392  001120  2ADE               	incf	postinc2,f,c
  1393  001122  0E00               	movlw	0
  1394  001124  22DD               	addwfc	postdec2,f,c
  1395                           
  1396                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1397  001126  C04B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1398  00112A  C04C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1399  00112E  CFDF F04D          	movff	indf2,??_vfpfcnvrt
  1400  001132  0E02               	movlw	2
  1401  001134  26DE               	addwf	postinc2,f,c
  1402  001136  CFDF F04E          	movff	indf2,??_vfpfcnvrt+1
  1403  00113A  0E00               	movlw	0
  1404  00113C  22DD               	addwfc	postdec2,f,c
  1405  00113E  C04D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1406  001142  C04E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1407  001146  CFDE F082          	movff	postinc2,_width
  1408  00114A  CFDD F083          	movff	postdec2,_width+1
  1409                           
  1410                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  1411  00114E  0100               	movlb	0	; () banked
  1412  001150  AF83               	btfss	(_width+1)& (0+255),7,b
  1413  001152  D03F               	goto	u1270
  1414                           
  1415                           ; BSR set to: 0
  1416                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  1417  001154  807E               	bsf	_flags,0,c
  1418                           
  1419                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  1420  001156  6D82               	negf	_width& (0+255),b
  1421  001158  1F83               	comf	(_width+1)& (0+255),f,b
  1422  00115A  B0D8               	btfsc	status,0,c
  1423  00115C  2B83               	incf	(_width+1)& (0+255),f,b
  1424  00115E  D039               	goto	u1270
  1425  001160                     l1818:
  1426                           
  1427                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  1428  001160  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1429  001164  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1430  001168  CFDE F008          	movff	postinc2,atoi@s
  1431  00116C  CFDD F009          	movff	postdec2,atoi@s+1
  1432  001170  ECAF  F00A         	call	_atoi	;wreg free
  1433  001174  C008  F082         	movff	?_atoi,_width
  1434  001178  C009  F083         	movff	?_atoi+1,_width+1
  1435                           
  1436                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1437  00117C  D007               	goto	l1822
  1438  00117E                     l1820:
  1439                           
  1440                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  1441  00117E  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1442  001182  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1443  001186  2ADE               	incf	postinc2,f,c
  1444  001188  0E00               	movlw	0
  1445  00118A  22DD               	addwfc	postdec2,f,c
  1446  00118C                     l1822:
  1447  00118C  0ED0               	movlw	208
  1448  00118E  6E4D               	movwf	??_vfpfcnvrt& (0+255),c
  1449  001190  0EFF               	movlw	255
  1450  001192  6E4E               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  1451  001194  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1452  001198  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1453  00119C  CFDE FFF6          	movff	postinc2,tblptrl
  1454  0011A0  CFDD FFF7          	movff	postdec2,tblptrh
  1455  0011A4                     	if	0	;tblptru may be non-zero
  1456  0011A4                     	endif
  1457  0011A4                     	if	0	;tblptru may be non-zero
  1458  0011A4                     	endif
  1459  0011A4  0008               	tblrd		*
  1460  0011A6  50F5               	movf	tablat,w,c
  1461  0011A8  6E4F               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  1462  0011AA  6A50               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  1463  0011AC  504D               	movf	??_vfpfcnvrt,w,c
  1464  0011AE  264F               	addwf	??_vfpfcnvrt+2,f,c
  1465  0011B0  504E               	movf	??_vfpfcnvrt+1,w,c
  1466  0011B2  2250               	addwfc	??_vfpfcnvrt+3,f,c
  1467  0011B4  5050               	movf	??_vfpfcnvrt+3,w,c
  1468  0011B6  E106               	bnz	u1250
  1469  0011B8  0E0A               	movlw	10
  1470  0011BA  5C4F               	subwf	??_vfpfcnvrt+2,w,c
  1471  0011BC  B0D8               	btfsc	status,0,c
  1472  0011BE  D002               	goto	u1250
  1473  0011C0  0E01               	movlw	1
  1474  0011C2  D001               	goto	u1260
  1475  0011C4                     u1250:
  1476  0011C4  0E00               	movlw	0
  1477  0011C6                     u1260:
  1478  0011C6  6E5B               	movwf	_vfpfcnvrt$437,c
  1479  0011C8  6A5C               	clrf	_vfpfcnvrt$437+1,c
  1480  0011CA  505B               	movf	_vfpfcnvrt$437,w,c
  1481  0011CC  105C               	iorwf	_vfpfcnvrt$437+1,w,c
  1482  0011CE  A4D8               	btfss	status,2,c
  1483  0011D0  D7D6               	goto	l1820
  1484  0011D2                     u1270:
  1485                           
  1486                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  1487  0011D2  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1488  0011D6  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1489  0011DA  CFDE FFF6          	movff	postinc2,tblptrl
  1490  0011DE  CFDD FFF7          	movff	postdec2,tblptrh
  1491  0011E2                     	if	0	;tblptru may be non-zero
  1492  0011E2                     	endif
  1493  0011E2                     	if	0	;tblptru may be non-zero
  1494  0011E2                     	endif
  1495  0011E2  0008               	tblrd		*
  1496  0011E4  50F5               	movf	tablat,w,c
  1497  0011E6  0A78               	xorlw	120
  1498  0011E8  B4D8               	btfsc	status,2,c
  1499  0011EA  D00D               	goto	u1290
  1500  0011EC  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1501  0011F0  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1502  0011F4  CFDE FFF6          	movff	postinc2,tblptrl
  1503  0011F8  CFDD FFF7          	movff	postdec2,tblptrh
  1504  0011FC                     	if	0	;tblptru may be non-zero
  1505  0011FC                     	endif
  1506  0011FC                     	if	0	;tblptru may be non-zero
  1507  0011FC                     	endif
  1508  0011FC  0008               	tblrd		*
  1509  0011FE  50F5               	movf	tablat,w,c
  1510  001200  0A58               	xorlw	88
  1511  001202  A4D8               	btfss	status,2,c
  1512  001204  D04D               	goto	l1842
  1513  001206                     u1290:
  1514                           
  1515                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  1516  001206  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1517  00120A  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1518  00120E  CFDE FFF6          	movff	postinc2,tblptrl
  1519  001212  CFDD FFF7          	movff	postdec2,tblptrh
  1520  001216                     	if	0	;tblptru may be non-zero
  1521  001216                     	endif
  1522  001216                     	if	0	;tblptru may be non-zero
  1523  001216                     	endif
  1524  001216  0008               	tblrd		*
  1525  001218  CFF5 F05D          	movff	tablat,vfpfcnvrt@c
  1526                           
  1527                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  1528  00121C  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1529  001220  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1530  001224  2ADE               	incf	postinc2,f,c
  1531  001226  0E00               	movlw	0
  1532  001228  22DD               	addwfc	postdec2,f,c
  1533                           
  1534                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  1535  00122A  C04B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1536  00122E  C04C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1537  001232  CFDF F04D          	movff	indf2,??_vfpfcnvrt
  1538  001236  0E02               	movlw	2
  1539  001238  26DE               	addwf	postinc2,f,c
  1540  00123A  CFDF F04E          	movff	indf2,??_vfpfcnvrt+1
  1541  00123E  0E00               	movlw	0
  1542  001240  22DD               	addwfc	postdec2,f,c
  1543  001242  C04D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1544  001246  C04E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1545  00124A  CFDE F04F          	movff	postinc2,??_vfpfcnvrt+2
  1546  00124E  CFDD F050          	movff	postdec2,??_vfpfcnvrt+3
  1547  001252  C04F  F051         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  1548  001256  C050  F052         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  1549  00125A  6A53               	clrf	vfpfcnvrt@llu+2,c
  1550  00125C  6A54               	clrf	vfpfcnvrt@llu+3,c
  1551  00125E  6A55               	clrf	vfpfcnvrt@llu+4,c
  1552  001260  6A56               	clrf	vfpfcnvrt@llu+5,c
  1553  001262  6A57               	clrf	vfpfcnvrt@llu+6,c
  1554  001264  6A58               	clrf	vfpfcnvrt@llu+7,c
  1555                           
  1556                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
  1557  001266  C047  F020         	movff	vfpfcnvrt@fp,xtoa@fp
  1558  00126A  C048  F021         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  1559  00126E  C051  F022         	movff	vfpfcnvrt@llu,xtoa@d
  1560  001272  C052  F023         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  1561  001276  C053  F024         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  1562  00127A  C054  F025         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  1563  00127E  C055  F026         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  1564  001282  C056  F027         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  1565  001286  C057  F028         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  1566  00128A  C058  F029         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  1567  00128E  C05D  F02A         	movff	vfpfcnvrt@c,xtoa@x
  1568  001292  EC99  F009         	call	_xtoa	;wreg free
  1569  001296  C020  F047         	movff	?_xtoa,?_vfpfcnvrt
  1570  00129A  C021  F048         	movff	?_xtoa+1,?_vfpfcnvrt+1
  1571  00129E  0012               	return	
  1572  0012A0                     l1842:
  1573                           
  1574                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1575  0012A0  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1576  0012A4  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1577  0012A8  CFDE FFF6          	movff	postinc2,tblptrl
  1578  0012AC  CFDD FFF7          	movff	postdec2,tblptrh
  1579  0012B0                     	if	0	;tblptru may be non-zero
  1580  0012B0                     	endif
  1581  0012B0                     	if	0	;tblptru may be non-zero
  1582  0012B0                     	endif
  1583  0012B0  0008               	tblrd		*
  1584  0012B2  50F5               	movf	tablat,w,c
  1585  0012B4  0A25               	xorlw	37
  1586  0012B6  A4D8               	btfss	status,2,c
  1587  0012B8  D016               	goto	l1852
  1588                           
  1589                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1590  0012BA  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1591  0012BE  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1592  0012C2  2ADE               	incf	postinc2,f,c
  1593  0012C4  0E00               	movlw	0
  1594  0012C6  22DD               	addwfc	postdec2,f,c
  1595                           
  1596                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1597  0012C8  0E00               	movlw	0
  1598  0012CA  6E06               	movwf	fputc@c+1,c
  1599  0012CC  0E25               	movlw	37
  1600  0012CE  6E05               	movwf	fputc@c,c
  1601  0012D0  C047  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1602  0012D4  C048  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1603  0012D8  EC54  F00C         	call	_fputc	;wreg free
  1604  0012DC                     l1848:
  1605                           
  1606                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1607  0012DC  0E00               	movlw	0
  1608  0012DE  6E48               	movwf	?_vfpfcnvrt+1,c
  1609  0012E0  0E01               	movlw	1
  1610  0012E2  6E47               	movwf	?_vfpfcnvrt,c
  1611  0012E4  0012               	return	
  1612  0012E6                     l1852:
  1613                           
  1614                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1615  0012E6  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1616  0012EA  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1617  0012EE  2ADE               	incf	postinc2,f,c
  1618  0012F0  0E00               	movlw	0
  1619  0012F2  22DD               	addwfc	postdec2,f,c
  1620                           
  1621                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  1622  0012F4  0E00               	movlw	0
  1623  0012F6  6E48               	movwf	?_vfpfcnvrt+1,c
  1624  0012F8  0E00               	movlw	0
  1625  0012FA  6E47               	movwf	?_vfpfcnvrt,c
  1626  0012FC  0012               	return	
  1627  0012FE                     l1858:
  1628                           
  1629                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  1630  0012FE  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1631  001302  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1632  001306  CFDE FFF6          	movff	postinc2,tblptrl
  1633  00130A  CFDD FFF7          	movff	postdec2,tblptrh
  1634  00130E                     	if	0	;tblptru may be non-zero
  1635  00130E                     	endif
  1636  00130E                     	if	0	;tblptru may be non-zero
  1637  00130E                     	endif
  1638  00130E  0008               	tblrd		*
  1639  001310  50F5               	movf	tablat,w,c
  1640  001312  6E05               	movwf	fputc@c,c
  1641  001314  6A06               	clrf	fputc@c+1,c
  1642  001316  C047  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1643  00131A  C048  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1644  00131E  EC54  F00C         	call	_fputc	;wreg free
  1645                           
  1646                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  1647  001322  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1648  001326  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1649  00132A  2ADE               	incf	postinc2,f,c
  1650  00132C  0E00               	movlw	0
  1651  00132E  22DD               	addwfc	postdec2,f,c
  1652  001330  D7D5               	goto	l1848
  1653  001332                     __end_of_vfpfcnvrt:
  1654                           	opt callstack 0
  1655                           
  1656 ;; *************** function _xtoa *****************
  1657 ;; Defined at:
  1658 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1659 ;; Parameters:    Size  Location     Type
  1660 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  1661 ;;		 -> NULL(0), 
  1662 ;;  d               8   33[COMRAM] unsigned long long 
  1663 ;;  x               1   41[COMRAM] unsigned char 
  1664 ;; Auto vars:     Size  Location     Type
  1665 ;;  n               8   58[COMRAM] unsigned long long 
  1666 ;;  c               2   68[COMRAM] int 
  1667 ;;  i               2   66[COMRAM] int 
  1668 ;;  w               2   56[COMRAM] int 
  1669 ;;  p               2   54[COMRAM] int 
  1670 ;; Return value:  Size  Location     Type
  1671 ;;                  2   31[COMRAM] int 
  1672 ;; Registers used:
  1673 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1674 ;; Tracked objects:
  1675 ;;		On entry : 0/0
  1676 ;;		On exit  : 0/0
  1677 ;;		Unchanged: 0/0
  1678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1679 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1680 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1681 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1682 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1683 ;;Total ram usage:       39 bytes
  1684 ;; Hardware stack levels used:    1
  1685 ;; Hardware stack levels required when called:    7
  1686 ;; This function calls:
  1687 ;;		_isalpha
  1688 ;;		_isupper
  1689 ;;		_pad
  1690 ;;		_toupper
  1691 ;; This function is called by:
  1692 ;;		_vfpfcnvrt
  1693 ;; This function uses a non-reentrant model
  1694 ;;
  1695                           
  1696                           	psect	text8
  1697  001332                     __ptext8:
  1698                           	opt callstack 0
  1699  001332                     _xtoa:
  1700                           	opt callstack 20
  1701                           
  1702                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  1703                           
  1704                           ;incstack = 0
  1705  001332  AE7D               	btfss	_prec+1,7,c
  1706                           
  1707                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  1708  001334  927E               	bcf	_flags,1,c
  1709                           
  1710                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  1711  001336  BE7D               	btfsc	_prec+1,7,c
  1712  001338  D005               	goto	u970
  1713  00133A  507D               	movf	_prec+1,w,c
  1714  00133C  E108               	bnz	l178
  1715  00133E  047C               	decf	_prec,w,c
  1716  001340  B0D8               	btfsc	status,0,c
  1717  001342  D005               	goto	l178
  1718  001344                     u970:
  1719  001344  0E00               	movlw	0
  1720  001346  6E38               	movwf	xtoa@p+1,c
  1721  001348  0E01               	movlw	1
  1722  00134A  6E37               	movwf	xtoa@p,c
  1723  00134C  D004               	goto	l180
  1724  00134E                     l178:
  1725  00134E  C07C  F037         	movff	_prec,xtoa@p
  1726  001352  C07D  F038         	movff	_prec+1,xtoa@p+1
  1727  001356                     l180:
  1728                           
  1729                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  1730  001356  C082  F039         	movff	_width,xtoa@w
  1731  00135A  C083  F03A         	movff	_width+1,xtoa@w+1
  1732                           
  1733                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  1734  00135E  A87E               	btfss	_flags,4,c
  1735  001360  D004               	goto	l1672
  1736                           
  1737                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  1738  001362  0EFE               	movlw	254
  1739  001364  2639               	addwf	xtoa@w,f,c
  1740  001366  0EFF               	movlw	255
  1741  001368  223A               	addwfc	xtoa@w+1,f,c
  1742  00136A                     l1672:
  1743                           
  1744                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  1745  00136A  C022  F03B         	movff	xtoa@d,xtoa@n
  1746  00136E  C023  F03C         	movff	xtoa@d+1,xtoa@n+1
  1747  001372  C024  F03D         	movff	xtoa@d+2,xtoa@n+2
  1748  001376  C025  F03E         	movff	xtoa@d+3,xtoa@n+3
  1749  00137A  C026  F03F         	movff	xtoa@d+4,xtoa@n+4
  1750  00137E  C027  F040         	movff	xtoa@d+5,xtoa@n+5
  1751  001382  C028  F041         	movff	xtoa@d+6,xtoa@n+6
  1752  001386  C029  F042         	movff	xtoa@d+7,xtoa@n+7
  1753                           
  1754                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  1755  00138A  0E00               	movlw	0
  1756  00138C  6E44               	movwf	xtoa@i+1,c
  1757  00138E  0E1F               	movlw	31
  1758  001390  6E43               	movwf	xtoa@i,c
  1759                           
  1760                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  1761  001392  0E00               	movlw	0
  1762  001394  0100               	movlb	0	; () banked
  1763  001396  6FA3               	movwf	(_dbuf+31)& (0+255),b
  1764                           
  1765                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1766  001398  D093               	goto	l1708
  1767  00139A                     l1678:
  1768                           
  1769                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  1770  00139A  0643               	decf	xtoa@i,f,c
  1771  00139C  A0D8               	btfss	status,0,c
  1772  00139E  0644               	decf	xtoa@i+1,f,c
  1773                           
  1774                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  1775  0013A0  0E0F               	movlw	15
  1776  0013A2  143B               	andwf	xtoa@n,w,c
  1777  0013A4  6E45               	movwf	xtoa@c,c
  1778  0013A6  6A46               	clrf	xtoa@c+1,c
  1779                           
  1780                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  1781  0013A8  BE46               	btfsc	xtoa@c+1,7,c
  1782  0013AA  D008               	goto	l1686
  1783  0013AC  5046               	movf	xtoa@c+1,w,c
  1784  0013AE  E104               	bnz	u990
  1785  0013B0  0E0A               	movlw	10
  1786  0013B2  5C45               	subwf	xtoa@c,w,c
  1787  0013B4  A0D8               	btfss	status,0,c
  1788  0013B6  D002               	goto	l1686
  1789  0013B8                     u990:
  1790  0013B8  0E57               	movlw	87
  1791  0013BA  D001               	goto	L2
  1792  0013BC                     l1686:
  1793  0013BC  0E30               	movlw	48
  1794  0013BE                     L2:
  1795  0013BE  2445               	addwf	xtoa@c,w,c
  1796  0013C0  6E45               	movwf	xtoa@c,c
  1797  0013C2  0E00               	movlw	0
  1798  0013C4  2046               	addwfc	xtoa@c+1,w,c
  1799  0013C6  6E46               	movwf	xtoa@c+1,c
  1800                           
  1801                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 646:       
      +                            if ((0 ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsi
      +                          gned)(c)|32)-'a') < 26)) {
  1802  0013C8  0EBF               	movlw	191
  1803  0013CA  6E2B               	movwf	??_xtoa& (0+255),c
  1804  0013CC  0EFF               	movlw	255
  1805  0013CE  6E2C               	movwf	(??_xtoa+1)& (0+255),c
  1806  0013D0  502A               	movf	xtoa@x,w,c
  1807  0013D2  6E2D               	movwf	(??_xtoa+2)& (0+255),c
  1808  0013D4  6A2E               	clrf	(??_xtoa+3)& (0+255),c
  1809  0013D6  502B               	movf	??_xtoa,w,c
  1810  0013D8  262D               	addwf	??_xtoa+2,f,c
  1811  0013DA  502C               	movf	??_xtoa+1,w,c
  1812  0013DC  222E               	addwfc	??_xtoa+3,f,c
  1813  0013DE  502E               	movf	??_xtoa+3,w,c
  1814  0013E0  E106               	bnz	u1000
  1815  0013E2  0E1A               	movlw	26
  1816  0013E4  5C2D               	subwf	??_xtoa+2,w,c
  1817  0013E6  B0D8               	btfsc	status,0,c
  1818  0013E8  D002               	goto	u1000
  1819  0013EA  0E01               	movlw	1
  1820  0013EC  D001               	goto	u1010
  1821  0013EE                     u1000:
  1822  0013EE  0E00               	movlw	0
  1823  0013F0                     u1010:
  1824  0013F0  6E33               	movwf	_xtoa$421,c
  1825  0013F2  6A34               	clrf	_xtoa$421+1,c
  1826  0013F4  5033               	movf	_xtoa$421,w,c
  1827  0013F6  1034               	iorwf	_xtoa$421+1,w,c
  1828  0013F8  B4D8               	btfsc	status,2,c
  1829  0013FA  D027               	goto	l1700
  1830  0013FC  0E9F               	movlw	159
  1831  0013FE  6E2B               	movwf	??_xtoa& (0+255),c
  1832  001400  0EFF               	movlw	255
  1833  001402  6E2C               	movwf	(??_xtoa+1)& (0+255),c
  1834  001404  0E20               	movlw	32
  1835  001406  1045               	iorwf	xtoa@c,w,c
  1836  001408  6E2D               	movwf	(??_xtoa+2)& (0+255),c
  1837  00140A  0E00               	movlw	0
  1838  00140C  1046               	iorwf	xtoa@c+1,w,c
  1839  00140E  6E2E               	movwf	(??_xtoa+3)& (0+255),c
  1840  001410  502B               	movf	??_xtoa,w,c
  1841  001412  262D               	addwf	??_xtoa+2,f,c
  1842  001414  502C               	movf	??_xtoa+1,w,c
  1843  001416  222E               	addwfc	??_xtoa+3,f,c
  1844  001418  502E               	movf	??_xtoa+3,w,c
  1845  00141A  E106               	bnz	u1030
  1846  00141C  0E1A               	movlw	26
  1847  00141E  5C2D               	subwf	??_xtoa+2,w,c
  1848  001420  B0D8               	btfsc	status,0,c
  1849  001422  D002               	goto	u1030
  1850  001424  0E01               	movlw	1
  1851  001426  D001               	goto	u1040
  1852  001428                     u1030:
  1853  001428  0E00               	movlw	0
  1854  00142A                     u1040:
  1855  00142A  6E35               	movwf	_xtoa$422,c
  1856  00142C  6A36               	clrf	_xtoa$422+1,c
  1857  00142E  5035               	movf	_xtoa$422,w,c
  1858  001430  1036               	iorwf	_xtoa$422+1,w,c
  1859  001432  B4D8               	btfsc	status,2,c
  1860  001434  D00A               	goto	l1700
  1861                           
  1862                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  1863  001436  C045  F007         	movff	xtoa@c,toupper@c
  1864  00143A  C046  F008         	movff	xtoa@c+1,toupper@c+1
  1865  00143E  EC18  F00D         	call	_toupper	;wreg free
  1866  001442  C007  F045         	movff	?_toupper,xtoa@c
  1867  001446  C008  F046         	movff	?_toupper+1,xtoa@c+1
  1868  00144A                     l1700:
  1869                           
  1870                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  1871  00144A  0E84               	movlw	low _dbuf
  1872  00144C  2443               	addwf	xtoa@i,w,c
  1873  00144E  6ED9               	movwf	fsr2l,c
  1874  001450  0E00               	movlw	high _dbuf
  1875  001452  2044               	addwfc	xtoa@i+1,w,c
  1876  001454  6EDA               	movwf	fsr2h,c
  1877  001456  C045  FFDF         	movff	xtoa@c,indf2
  1878                           
  1879                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  1880  00145A  0637               	decf	xtoa@p,f,c
  1881  00145C  A0D8               	btfss	status,0,c
  1882  00145E  0638               	decf	xtoa@p+1,f,c
  1883                           
  1884                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  1885  001460  0639               	decf	xtoa@w,f,c
  1886  001462  A0D8               	btfss	status,0,c
  1887  001464  063A               	decf	xtoa@w+1,f,c
  1888                           
  1889                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  1890  001466  C03B  F02B         	movff	xtoa@n,??_xtoa
  1891  00146A  C03C  F02C         	movff	xtoa@n+1,??_xtoa+1
  1892  00146E  C03D  F02D         	movff	xtoa@n+2,??_xtoa+2
  1893  001472  C03E  F02E         	movff	xtoa@n+3,??_xtoa+3
  1894  001476  C03F  F02F         	movff	xtoa@n+4,??_xtoa+4
  1895  00147A  C040  F030         	movff	xtoa@n+5,??_xtoa+5
  1896  00147E  C041  F031         	movff	xtoa@n+6,??_xtoa+6
  1897  001482  C042  F032         	movff	xtoa@n+7,??_xtoa+7
  1898  001486  0E05               	movlw	5
  1899  001488  D009               	goto	u1060
  1900  00148A                     u1065:
  1901  00148A  90D8               	bcf	status,0,c
  1902  00148C  3232               	rrcf	??_xtoa+7,f,c
  1903  00148E  3231               	rrcf	??_xtoa+6,f,c
  1904  001490  3230               	rrcf	??_xtoa+5,f,c
  1905  001492  322F               	rrcf	??_xtoa+4,f,c
  1906  001494  322E               	rrcf	??_xtoa+3,f,c
  1907  001496  322D               	rrcf	??_xtoa+2,f,c
  1908  001498  322C               	rrcf	??_xtoa+1,f,c
  1909  00149A  322B               	rrcf	??_xtoa,f,c
  1910  00149C                     u1060:
  1911  00149C  2EE8               	decfsz	wreg,f,c
  1912  00149E  D7F5               	goto	u1065
  1913  0014A0  C02B  F03B         	movff	??_xtoa,xtoa@n
  1914  0014A4  C02C  F03C         	movff	??_xtoa+1,xtoa@n+1
  1915  0014A8  C02D  F03D         	movff	??_xtoa+2,xtoa@n+2
  1916  0014AC  C02E  F03E         	movff	??_xtoa+3,xtoa@n+3
  1917  0014B0  C02F  F03F         	movff	??_xtoa+4,xtoa@n+4
  1918  0014B4  C030  F040         	movff	??_xtoa+5,xtoa@n+5
  1919  0014B8  C031  F041         	movff	??_xtoa+6,xtoa@n+6
  1920  0014BC  C032  F042         	movff	??_xtoa+7,xtoa@n+7
  1921  0014C0                     l1708:
  1922                           
  1923                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1924  0014C0  BE44               	btfsc	xtoa@i+1,7,c
  1925  0014C2  D020               	goto	u1110
  1926  0014C4  5044               	movf	xtoa@i+1,w,c
  1927  0014C6  E104               	bnz	u1070
  1928  0014C8  0E02               	movlw	2
  1929  0014CA  5C43               	subwf	xtoa@i,w,c
  1930  0014CC  A0D8               	btfss	status,0,c
  1931  0014CE  D01A               	goto	u1110
  1932  0014D0                     u1070:
  1933  0014D0  503B               	movf	xtoa@n,w,c
  1934  0014D2  103C               	iorwf	xtoa@n+1,w,c
  1935  0014D4  103D               	iorwf	xtoa@n+2,w,c
  1936  0014D6  103E               	iorwf	xtoa@n+3,w,c
  1937  0014D8  103F               	iorwf	xtoa@n+4,w,c
  1938  0014DA  1040               	iorwf	xtoa@n+5,w,c
  1939  0014DC  1041               	iorwf	xtoa@n+6,w,c
  1940  0014DE  1042               	iorwf	xtoa@n+7,w,c
  1941  0014E0  A4D8               	btfss	status,2,c
  1942  0014E2  D75B               	goto	l1678
  1943  0014E4  BE38               	btfsc	xtoa@p+1,7,c
  1944  0014E6  D005               	goto	u1090
  1945  0014E8  5038               	movf	xtoa@p+1,w,c
  1946  0014EA  E102               	bnz	u1091
  1947  0014EC  0437               	decf	xtoa@p,w,c
  1948  0014EE  B0D8               	btfsc	status,0,c
  1949  0014F0                     u1091:
  1950  0014F0  D754               	goto	l1678
  1951  0014F2                     u1090:
  1952  0014F2  BE3A               	btfsc	xtoa@w+1,7,c
  1953  0014F4  D007               	goto	u1110
  1954  0014F6  503A               	movf	xtoa@w+1,w,c
  1955  0014F8  E103               	bnz	u1100
  1956  0014FA  0439               	decf	xtoa@w,w,c
  1957  0014FC  A0D8               	btfss	status,0,c
  1958  0014FE  D002               	goto	u1110
  1959  001500                     u1100:
  1960  001500  B27E               	btfsc	_flags,1,c
  1961  001502  D74B               	goto	l1678
  1962  001504                     u1110:
  1963                           
  1964                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  1965  001504  A87E               	btfss	_flags,4,c
  1966  001506  D016               	goto	l1724
  1967                           
  1968                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  1969  001508  0643               	decf	xtoa@i,f,c
  1970  00150A  A0D8               	btfss	status,0,c
  1971  00150C  0644               	decf	xtoa@i+1,f,c
  1972                           
  1973                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  1974  00150E  0E84               	movlw	low _dbuf
  1975  001510  2443               	addwf	xtoa@i,w,c
  1976  001512  6ED9               	movwf	fsr2l,c
  1977  001514  0E00               	movlw	high _dbuf
  1978  001516  2044               	addwfc	xtoa@i+1,w,c
  1979  001518  6EDA               	movwf	fsr2h,c
  1980  00151A  C02A  FFDF         	movff	xtoa@x,indf2
  1981                           
  1982                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  1983  00151E  0643               	decf	xtoa@i,f,c
  1984  001520  A0D8               	btfss	status,0,c
  1985  001522  0644               	decf	xtoa@i+1,f,c
  1986                           
  1987                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  1988  001524  0E84               	movlw	low _dbuf
  1989  001526  2443               	addwf	xtoa@i,w,c
  1990  001528  6ED9               	movwf	fsr2l,c
  1991  00152A  0E00               	movlw	high _dbuf
  1992  00152C  2044               	addwfc	xtoa@i+1,w,c
  1993  00152E  6EDA               	movwf	fsr2h,c
  1994  001530  0E30               	movlw	48
  1995  001532  6EDF               	movwf	indf2,c
  1996  001534                     l1724:
  1997                           
  1998                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  1999  001534  C020  F015         	movff	xtoa@fp,pad@fp
  2000  001538  C021  F016         	movff	xtoa@fp+1,pad@fp+1
  2001  00153C  0E84               	movlw	low _dbuf
  2002  00153E  2443               	addwf	xtoa@i,w,c
  2003  001540  6E17               	movwf	pad@buf,c
  2004  001542  0E00               	movlw	high _dbuf
  2005  001544  2044               	addwfc	xtoa@i+1,w,c
  2006  001546  6E18               	movwf	pad@buf+1,c
  2007  001548  C039  F019         	movff	xtoa@w,pad@p
  2008  00154C  C03A  F01A         	movff	xtoa@w+1,pad@p+1
  2009  001550  ECC8  F00B         	call	_pad	;wreg free
  2010  001554  C015  F020         	movff	?_pad,?_xtoa
  2011  001558  C016  F021         	movff	?_pad+1,?_xtoa+1
  2012  00155C  0012               	return		;funcret
  2013  00155E                     __end_of_xtoa:
  2014                           	opt callstack 0
  2015                           
  2016 ;; *************** function _toupper *****************
  2017 ;; Defined at:
  2018 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  2019 ;; Parameters:    Size  Location     Type
  2020 ;;  c               2    6[COMRAM] int 
  2021 ;; Auto vars:     Size  Location     Type
  2022 ;;		None
  2023 ;; Return value:  Size  Location     Type
  2024 ;;                  2    6[COMRAM] int 
  2025 ;; Registers used:
  2026 ;;		wreg, status,2, status,0
  2027 ;; Tracked objects:
  2028 ;;		On entry : 0/0
  2029 ;;		On exit  : 0/0
  2030 ;;		Unchanged: 0/0
  2031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2032 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2033 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2034 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2035 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2036 ;;Total ram usage:        8 bytes
  2037 ;; Hardware stack levels used:    1
  2038 ;; Hardware stack levels required when called:    1
  2039 ;; This function calls:
  2040 ;;		_islower
  2041 ;; This function is called by:
  2042 ;;		_xtoa
  2043 ;; This function uses a non-reentrant model
  2044 ;;
  2045                           
  2046                           	psect	text9
  2047  001A30                     __ptext9:
  2048                           	opt callstack 0
  2049  001A30                     _toupper:
  2050                           	opt callstack 25
  2051                           
  2052                           ;incstack = 0
  2053  001A30  0E9F               	movlw	159
  2054  001A32  6E09               	movwf	??_toupper& (0+255),c
  2055  001A34  0EFF               	movlw	255
  2056  001A36  6E0A               	movwf	(??_toupper+1)& (0+255),c
  2057  001A38  C007  F00B         	movff	toupper@c,??_toupper+2
  2058  001A3C  C008  F00C         	movff	toupper@c+1,??_toupper+3
  2059  001A40  5009               	movf	??_toupper,w,c
  2060  001A42  260B               	addwf	??_toupper+2,f,c
  2061  001A44  500A               	movf	??_toupper+1,w,c
  2062  001A46  220C               	addwfc	??_toupper+3,f,c
  2063  001A48  500C               	movf	??_toupper+3,w,c
  2064  001A4A  E106               	bnz	u890
  2065  001A4C  0E1A               	movlw	26
  2066  001A4E  5C0B               	subwf	??_toupper+2,w,c
  2067  001A50  B0D8               	btfsc	status,0,c
  2068  001A52  D002               	goto	u890
  2069  001A54  0E01               	movlw	1
  2070  001A56  D001               	goto	u900
  2071  001A58                     u890:
  2072  001A58  0E00               	movlw	0
  2073  001A5A                     u900:
  2074  001A5A  6E0D               	movwf	_toupper$984,c
  2075  001A5C  6A0E               	clrf	_toupper$984+1,c
  2076  001A5E  500D               	movf	_toupper$984,w,c
  2077  001A60  100E               	iorwf	_toupper$984+1,w,c
  2078  001A62  B4D8               	btfsc	status,2,c
  2079  001A64  D005               	goto	l1008
  2080  001A66  0E5F               	movlw	95
  2081  001A68  1407               	andwf	toupper@c,w,c
  2082  001A6A  6E07               	movwf	?_toupper,c
  2083  001A6C  6A08               	clrf	?_toupper+1,c
  2084  001A6E  0012               	return	
  2085  001A70                     l1008:
  2086  001A70  C007  F007         	movff	toupper@c,?_toupper
  2087  001A74  C008  F008         	movff	toupper@c+1,?_toupper+1
  2088  001A78  0012               	return		;funcret
  2089  001A7A                     __end_of_toupper:
  2090                           	opt callstack 0
  2091                           
  2092 ;; *************** function _islower *****************
  2093 ;; Defined at:
  2094 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  2095 ;; Parameters:    Size  Location     Type
  2096 ;;  c               2    0[COMRAM] int 
  2097 ;; Auto vars:     Size  Location     Type
  2098 ;;		None
  2099 ;; Return value:  Size  Location     Type
  2100 ;;                  2    0[COMRAM] int 
  2101 ;; Registers used:
  2102 ;;		wreg, status,2, status,0
  2103 ;; Tracked objects:
  2104 ;;		On entry : 0/0
  2105 ;;		On exit  : 0/0
  2106 ;;		Unchanged: 0/0
  2107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2108 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2110 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2111 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2112 ;;Total ram usage:        6 bytes
  2113 ;; Hardware stack levels used:    1
  2114 ;; This function calls:
  2115 ;;		Nothing
  2116 ;; This function is called by:
  2117 ;;		_toupper
  2118 ;; This function uses a non-reentrant model
  2119 ;;
  2120                           
  2121                           	psect	text10
  2122  001B6A                     __ptext10:
  2123                           	opt callstack 0
  2124  001B6A                     _islower:
  2125                           	opt callstack 25
  2126                           
  2127                           ;incstack = 0
  2128  001B6A  0E9F               	movlw	159
  2129  001B6C  6E03               	movwf	??_islower& (0+255),c
  2130  001B6E  0EFF               	movlw	255
  2131  001B70  6E04               	movwf	(??_islower+1)& (0+255),c
  2132  001B72  C001  F005         	movff	islower@c,??_islower+2
  2133  001B76  C002  F006         	movff	islower@c+1,??_islower+3
  2134  001B7A  5003               	movf	??_islower,w,c
  2135  001B7C  2605               	addwf	??_islower+2,f,c
  2136  001B7E  5004               	movf	??_islower+1,w,c
  2137  001B80  2206               	addwfc	??_islower+3,f,c
  2138  001B82  5006               	movf	??_islower+3,w,c
  2139  001B84  E106               	bnz	u790
  2140  001B86  0E1A               	movlw	26
  2141  001B88  5C05               	subwf	??_islower+2,w,c
  2142  001B8A  B0D8               	btfsc	status,0,c
  2143  001B8C  D002               	goto	u790
  2144  001B8E  0E01               	movlw	1
  2145  001B90  D001               	goto	u800
  2146  001B92                     u790:
  2147  001B92  0E00               	movlw	0
  2148  001B94                     u800:
  2149  001B94  6E01               	movwf	?_islower,c
  2150  001B96  6A02               	clrf	?_islower+1,c
  2151  001B98  0012               	return		;funcret
  2152  001B9A                     __end_of_islower:
  2153                           	opt callstack 0
  2154                           
  2155 ;; *************** function _pad *****************
  2156 ;; Defined at:
  2157 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2158 ;; Parameters:    Size  Location     Type
  2159 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  2160 ;;		 -> NULL(0), 
  2161 ;;  buf             2   22[COMRAM] PTR unsigned char 
  2162 ;;		 -> dbuf(32), 
  2163 ;;  p               2   24[COMRAM] int 
  2164 ;; Auto vars:     Size  Location     Type
  2165 ;;  w               2   29[COMRAM] int 
  2166 ;;  i               2   27[COMRAM] int 
  2167 ;; Return value:  Size  Location     Type
  2168 ;;                  2   20[COMRAM] int 
  2169 ;; Registers used:
  2170 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2171 ;; Tracked objects:
  2172 ;;		On entry : 0/0
  2173 ;;		On exit  : 0/0
  2174 ;;		Unchanged: 0/0
  2175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2176 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2177 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2178 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2179 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2180 ;;Total ram usage:       11 bytes
  2181 ;; Hardware stack levels used:    1
  2182 ;; Hardware stack levels required when called:    6
  2183 ;; This function calls:
  2184 ;;		_fputc
  2185 ;;		_fputs
  2186 ;;		_strlen
  2187 ;; This function is called by:
  2188 ;;		_xtoa
  2189 ;; This function uses a non-reentrant model
  2190 ;;
  2191                           
  2192                           	psect	text11
  2193  001790                     __ptext11:
  2194                           	opt callstack 0
  2195  001790                     _pad:
  2196                           	opt callstack 20
  2197                           
  2198                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  2199                           
  2200                           ;incstack = 0
  2201  001790  A07E               	btfss	_flags,0,c
  2202  001792  D00A               	goto	l1604
  2203                           
  2204                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  2205  001794  C017  F00E         	movff	pad@buf,fputs@s
  2206  001798  C018  F00F         	movff	pad@buf+1,fputs@s+1
  2207  00179C  C015  F010         	movff	pad@fp,fputs@fp
  2208  0017A0  C016  F011         	movff	pad@fp+1,fputs@fp+1
  2209  0017A4  EC7F  F00D         	call	_fputs	;wreg free
  2210  0017A8                     l1604:
  2211                           
  2212                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  2213  0017A8  BE1A               	btfsc	pad@p+1,7,c
  2214  0017AA  D005               	goto	l1608
  2215  0017AC  C019  F01E         	movff	pad@p,pad@w
  2216  0017B0  C01A  F01F         	movff	pad@p+1,pad@w+1
  2217  0017B4  D004               	goto	l168
  2218  0017B6                     l1608:
  2219  0017B6  0E00               	movlw	0
  2220  0017B8  6E1F               	movwf	pad@w+1,c
  2221  0017BA  0E00               	movlw	0
  2222  0017BC  6E1E               	movwf	pad@w,c
  2223  0017BE                     l168:
  2224                           
  2225                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  2226  0017BE  0E00               	movlw	0
  2227  0017C0  6E1D               	movwf	pad@i+1,c
  2228  0017C2  0E00               	movlw	0
  2229  0017C4  6E1C               	movwf	pad@i,c
  2230                           
  2231                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2232  0017C6  D00C               	goto	l1614
  2233  0017C8                     l1610:
  2234                           
  2235                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  2236  0017C8  0E00               	movlw	0
  2237  0017CA  6E06               	movwf	fputc@c+1,c
  2238  0017CC  0E20               	movlw	32
  2239  0017CE  6E05               	movwf	fputc@c,c
  2240  0017D0  C015  F007         	movff	pad@fp,fputc@fp
  2241  0017D4  C016  F008         	movff	pad@fp+1,fputc@fp+1
  2242  0017D8  EC54  F00C         	call	_fputc	;wreg free
  2243                           
  2244                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  2245  0017DC  4A1C               	infsnz	pad@i,f,c
  2246  0017DE  2A1D               	incf	pad@i+1,f,c
  2247  0017E0                     l1614:
  2248                           
  2249                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2250  0017E0  501E               	movf	pad@w,w,c
  2251  0017E2  5C1C               	subwf	pad@i,w,c
  2252  0017E4  501D               	movf	pad@i+1,w,c
  2253  0017E6  0A80               	xorlw	128
  2254  0017E8  6E1B               	movwf	??_pad& (0+255),c
  2255  0017EA  501F               	movf	pad@w+1,w,c
  2256  0017EC  0A80               	xorlw	128
  2257  0017EE  581B               	subwfb	??_pad& (0+255),w,c
  2258  0017F0  A0D8               	btfss	status,0,c
  2259  0017F2  D7EA               	goto	l1610
  2260                           
  2261                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  2262  0017F4  B07E               	btfsc	_flags,0,c
  2263  0017F6  D00A               	goto	l1618
  2264                           
  2265                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  2266  0017F8  C017  F00E         	movff	pad@buf,fputs@s
  2267  0017FC  C018  F00F         	movff	pad@buf+1,fputs@s+1
  2268  001800  C015  F010         	movff	pad@fp,fputs@fp
  2269  001804  C016  F011         	movff	pad@fp+1,fputs@fp+1
  2270  001808  EC7F  F00D         	call	_fputs	;wreg free
  2271  00180C                     l1618:
  2272                           
  2273                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  2274  00180C  C017  F001         	movff	pad@buf,strlen@s
  2275  001810  C018  F002         	movff	pad@buf+1,strlen@s+1
  2276  001814  ECFD  F00D         	call	_strlen	;wreg free
  2277  001818  501E               	movf	pad@w,w,c
  2278  00181A  2401               	addwf	?_strlen,w,c
  2279  00181C  6E15               	movwf	?_pad,c
  2280  00181E  501F               	movf	pad@w+1,w,c
  2281  001820  2002               	addwfc	?_strlen+1,w,c
  2282  001822  6E16               	movwf	?_pad+1,c
  2283  001824  0012               	return		;funcret
  2284  001826                     __end_of_pad:
  2285                           	opt callstack 0
  2286                           
  2287 ;; *************** function _strlen *****************
  2288 ;; Defined at:
  2289 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  2290 ;; Parameters:    Size  Location     Type
  2291 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2292 ;;		 -> dbuf(32), 
  2293 ;; Auto vars:     Size  Location     Type
  2294 ;;  a               2    2[COMRAM] PTR const unsigned char 
  2295 ;;		 -> dbuf(32), 
  2296 ;; Return value:  Size  Location     Type
  2297 ;;                  2    0[COMRAM] unsigned int 
  2298 ;; Registers used:
  2299 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2300 ;; Tracked objects:
  2301 ;;		On entry : 0/0
  2302 ;;		On exit  : 0/0
  2303 ;;		Unchanged: 0/0
  2304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2305 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2306 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2308 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2309 ;;Total ram usage:        4 bytes
  2310 ;; Hardware stack levels used:    1
  2311 ;; This function calls:
  2312 ;;		Nothing
  2313 ;; This function is called by:
  2314 ;;		_pad
  2315 ;; This function uses a non-reentrant model
  2316 ;;
  2317                           
  2318                           	psect	text12
  2319  001BFA                     __ptext12:
  2320                           	opt callstack 0
  2321  001BFA                     _strlen:
  2322                           	opt callstack 25
  2323                           
  2324                           ;incstack = 0
  2325  001BFA  C001  F003         	movff	strlen@s,strlen@a
  2326  001BFE  C002  F004         	movff	strlen@s+1,strlen@a+1
  2327  001C02  D002               	goto	l1590
  2328  001C04                     l1588:
  2329  001C04  4A01               	infsnz	strlen@s,f,c
  2330  001C06  2A02               	incf	strlen@s+1,f,c
  2331  001C08                     l1590:
  2332  001C08  C001  FFD9         	movff	strlen@s,fsr2l
  2333  001C0C  C002  FFDA         	movff	strlen@s+1,fsr2h
  2334  001C10  50DF               	movf	indf2,w,c
  2335  001C12  A4D8               	btfss	status,2,c
  2336  001C14  D7F7               	goto	l1588
  2337  001C16  5003               	movf	strlen@a,w,c
  2338  001C18  5C01               	subwf	strlen@s,w,c
  2339  001C1A  6E01               	movwf	?_strlen,c
  2340  001C1C  5004               	movf	strlen@a+1,w,c
  2341  001C1E  5802               	subwfb	strlen@s+1,w,c
  2342  001C20  6E02               	movwf	?_strlen+1,c
  2343  001C22  0012               	return		;funcret
  2344  001C24                     __end_of_strlen:
  2345                           	opt callstack 0
  2346                           
  2347 ;; *************** function _fputs *****************
  2348 ;; Defined at:
  2349 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  2350 ;; Parameters:    Size  Location     Type
  2351 ;;  s               2   13[COMRAM] PTR const unsigned char 
  2352 ;;		 -> dbuf(32), 
  2353 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  2354 ;;		 -> NULL(0), 
  2355 ;; Auto vars:     Size  Location     Type
  2356 ;;  i               2   18[COMRAM] int 
  2357 ;;  c               1   17[COMRAM] unsigned char 
  2358 ;; Return value:  Size  Location     Type
  2359 ;;                  2   13[COMRAM] int 
  2360 ;; Registers used:
  2361 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2362 ;; Tracked objects:
  2363 ;;		On entry : 0/0
  2364 ;;		On exit  : 0/0
  2365 ;;		Unchanged: 0/0
  2366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2367 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2368 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2370 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2371 ;;Total ram usage:        7 bytes
  2372 ;; Hardware stack levels used:    1
  2373 ;; Hardware stack levels required when called:    5
  2374 ;; This function calls:
  2375 ;;		_fputc
  2376 ;; This function is called by:
  2377 ;;		_pad
  2378 ;; This function uses a non-reentrant model
  2379 ;;
  2380                           
  2381                           	psect	text13
  2382  001AFE                     __ptext13:
  2383                           	opt callstack 0
  2384  001AFE                     _fputs:
  2385                           	opt callstack 20
  2386                           
  2387                           ;incstack = 0
  2388  001AFE  0E00               	movlw	0
  2389  001B00  6E14               	movwf	fputs@i+1,c
  2390  001B02  0E00               	movlw	0
  2391  001B04  6E13               	movwf	fputs@i,c
  2392  001B06  D00B               	goto	l1584
  2393  001B08                     l1580:
  2394  001B08  C012  F005         	movff	fputs@c,fputc@c
  2395  001B0C  6A06               	clrf	fputc@c+1,c
  2396  001B0E  C010  F007         	movff	fputs@fp,fputc@fp
  2397  001B12  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  2398  001B16  EC54  F00C         	call	_fputc	;wreg free
  2399  001B1A  4A13               	infsnz	fputs@i,f,c
  2400  001B1C  2A14               	incf	fputs@i+1,f,c
  2401  001B1E                     l1584:
  2402  001B1E  5013               	movf	fputs@i,w,c
  2403  001B20  240E               	addwf	fputs@s,w,c
  2404  001B22  6ED9               	movwf	fsr2l,c
  2405  001B24  5014               	movf	fputs@i+1,w,c
  2406  001B26  200F               	addwfc	fputs@s+1,w,c
  2407  001B28  6EDA               	movwf	fsr2h,c
  2408  001B2A  50DF               	movf	indf2,w,c
  2409  001B2C  6E12               	movwf	fputs@c,c
  2410  001B2E  5012               	movf	fputs@c,w,c
  2411  001B30  B4D8               	btfsc	status,2,c
  2412  001B32  0012               	return	
  2413  001B34  D7E9               	goto	l1580
  2414  001B36                     __end_of_fputs:
  2415                           	opt callstack 0
  2416                           
  2417 ;; *************** function _fputc *****************
  2418 ;; Defined at:
  2419 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  2420 ;; Parameters:    Size  Location     Type
  2421 ;;  c               2    4[COMRAM] int 
  2422 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  2423 ;;		 -> NULL(0), 
  2424 ;; Auto vars:     Size  Location     Type
  2425 ;;		None
  2426 ;; Return value:  Size  Location     Type
  2427 ;;                  2    4[COMRAM] int 
  2428 ;; Registers used:
  2429 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2430 ;; Tracked objects:
  2431 ;;		On entry : 0/0
  2432 ;;		On exit  : 0/0
  2433 ;;		Unchanged: 0/0
  2434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2435 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2437 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2438 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2439 ;;Total ram usage:        9 bytes
  2440 ;; Hardware stack levels used:    1
  2441 ;; Hardware stack levels required when called:    4
  2442 ;; This function calls:
  2443 ;;		_putch
  2444 ;; This function is called by:
  2445 ;;		_pad
  2446 ;;		_vfpfcnvrt
  2447 ;;		_fputs
  2448 ;; This function uses a non-reentrant model
  2449 ;;
  2450                           
  2451                           	psect	text14
  2452  0018A8                     __ptext14:
  2453                           	opt callstack 0
  2454  0018A8                     _fputc:
  2455                           	opt callstack 20
  2456                           
  2457                           ;incstack = 0
  2458  0018A8  5007               	movf	fputc@fp,w,c
  2459  0018AA  1008               	iorwf	fputc@fp+1,w,c
  2460  0018AC  B4D8               	btfsc	status,2,c
  2461  0018AE  D004               	goto	u740
  2462  0018B0  5007               	movf	fputc@fp,w,c
  2463  0018B2  1008               	iorwf	fputc@fp+1,w,c
  2464  0018B4  A4D8               	btfss	status,2,c
  2465  0018B6  D004               	goto	l1570
  2466  0018B8                     u740:
  2467  0018B8  5005               	movf	fputc@c,w,c
  2468  0018BA  EC8B  F00E         	call	_putch
  2469  0018BE  0012               	return	
  2470  0018C0                     l1570:
  2471  0018C0  EE20 F004          	lfsr	2,4
  2472  0018C4  5007               	movf	fputc@fp,w,c
  2473  0018C6  26D9               	addwf	fsr2l,f,c
  2474  0018C8  5008               	movf	fputc@fp+1,w,c
  2475  0018CA  22DA               	addwfc	fsr2h,f,c
  2476  0018CC  50DE               	movf	postinc2,w,c
  2477  0018CE  10DE               	iorwf	postinc2,w,c
  2478  0018D0  B4D8               	btfsc	status,2,c
  2479  0018D2  D016               	goto	u760
  2480  0018D4  EE20 F004          	lfsr	2,4
  2481  0018D8  5007               	movf	fputc@fp,w,c
  2482  0018DA  26D9               	addwf	fsr2l,f,c
  2483  0018DC  5008               	movf	fputc@fp+1,w,c
  2484  0018DE  22DA               	addwfc	fsr2h,f,c
  2485  0018E0  EE10 F002          	lfsr	1,2
  2486  0018E4  5007               	movf	fputc@fp,w,c
  2487  0018E6  26E1               	addwf	fsr1l,f,c
  2488  0018E8  5008               	movf	fputc@fp+1,w,c
  2489  0018EA  22E2               	addwfc	fsr1h,f,c
  2490  0018EC  50DE               	movf	postinc2,w,c
  2491  0018EE  5CE6               	subwf	postinc1,w,c
  2492  0018F0  50E6               	movf	postinc1,w,c
  2493  0018F2  0A80               	xorlw	128
  2494  0018F4  6E0D               	movwf	(??_fputc+4)& (0+255),c
  2495  0018F6  50DE               	movf	postinc2,w,c
  2496  0018F8  0A80               	xorlw	128
  2497  0018FA  580D               	subwfb	(??_fputc+4)& (0+255),w,c
  2498  0018FC  B0D8               	btfsc	status,0,c
  2499  0018FE  0012               	return	
  2500  001900                     u760:
  2501  001900  EE20 F002          	lfsr	2,2
  2502  001904  5007               	movf	fputc@fp,w,c
  2503  001906  26D9               	addwf	fsr2l,f,c
  2504  001908  5008               	movf	fputc@fp+1,w,c
  2505  00190A  22DA               	addwfc	fsr2h,f,c
  2506  00190C  2ADE               	incf	postinc2,f,c
  2507  00190E  0E00               	movlw	0
  2508  001910  22DD               	addwfc	postdec2,f,c
  2509  001912  0012               	return		;funcret
  2510  001914                     __end_of_fputc:
  2511                           	opt callstack 0
  2512                           
  2513 ;; *************** function _putch *****************
  2514 ;; Defined at:
  2515 ;;		line 102 in file "lcd.c"
  2516 ;; Parameters:    Size  Location     Type
  2517 ;;  data            1    wreg     unsigned char 
  2518 ;; Auto vars:     Size  Location     Type
  2519 ;;  data            1    3[COMRAM] unsigned char 
  2520 ;; Return value:  Size  Location     Type
  2521 ;;                  1    wreg      void 
  2522 ;; Registers used:
  2523 ;;		wreg, status,2, status,0, cstack
  2524 ;; Tracked objects:
  2525 ;;		On entry : 0/0
  2526 ;;		On exit  : 0/0
  2527 ;;		Unchanged: 0/0
  2528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2530 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2532 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2533 ;;Total ram usage:        1 bytes
  2534 ;; Hardware stack levels used:    1
  2535 ;; Hardware stack levels required when called:    3
  2536 ;; This function calls:
  2537 ;;		_send_byte
  2538 ;; This function is called by:
  2539 ;;		_fputc
  2540 ;; This function uses a non-reentrant model
  2541 ;;
  2542                           
  2543                           	psect	text15
  2544  001D16                     __ptext15:
  2545                           	opt callstack 0
  2546  001D16                     _putch:
  2547                           	opt callstack 20
  2548                           
  2549                           ;incstack = 0
  2550                           ;putch@data stored from wreg
  2551  001D16  6E04               	movwf	putch@data,c
  2552                           
  2553                           ;lcd.c: 103:     LATDbits.LATD2 = 1;
  2554  001D18  848C               	bsf	3980,2,c	;volatile
  2555                           
  2556                           ;lcd.c: 104:     send_byte((unsigned char)data);
  2557  001D1A  5004               	movf	putch@data,w,c
  2558  001D1C  EC79  F00E         	call	_send_byte
  2559  001D20  0012               	return		;funcret
  2560  001D22                     __end_of_putch:
  2561                           	opt callstack 0
  2562                           
  2563 ;; *************** function _isupper *****************
  2564 ;; Defined at:
  2565 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  2566 ;; Parameters:    Size  Location     Type
  2567 ;;  c               2    0[COMRAM] int 
  2568 ;; Auto vars:     Size  Location     Type
  2569 ;;		None
  2570 ;; Return value:  Size  Location     Type
  2571 ;;                  2    0[COMRAM] int 
  2572 ;; Registers used:
  2573 ;;		wreg, status,2, status,0
  2574 ;; Tracked objects:
  2575 ;;		On entry : 0/0
  2576 ;;		On exit  : 0/0
  2577 ;;		Unchanged: 0/0
  2578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2579 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2581 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2582 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2583 ;;Total ram usage:        6 bytes
  2584 ;; Hardware stack levels used:    1
  2585 ;; This function calls:
  2586 ;;		Nothing
  2587 ;; This function is called by:
  2588 ;;		_xtoa
  2589 ;; This function uses a non-reentrant model
  2590 ;;
  2591                           
  2592                           	psect	text16
  2593  001B9A                     __ptext16:
  2594                           	opt callstack 0
  2595  001B9A                     _isupper:
  2596                           	opt callstack 26
  2597                           
  2598                           ;incstack = 0
  2599  001B9A  0EBF               	movlw	191
  2600  001B9C  6E03               	movwf	??_isupper& (0+255),c
  2601  001B9E  0EFF               	movlw	255
  2602  001BA0  6E04               	movwf	(??_isupper+1)& (0+255),c
  2603  001BA2  C001  F005         	movff	isupper@c,??_isupper+2
  2604  001BA6  C002  F006         	movff	isupper@c+1,??_isupper+3
  2605  001BAA  5003               	movf	??_isupper,w,c
  2606  001BAC  2605               	addwf	??_isupper+2,f,c
  2607  001BAE  5004               	movf	??_isupper+1,w,c
  2608  001BB0  2206               	addwfc	??_isupper+3,f,c
  2609  001BB2  5006               	movf	??_isupper+3,w,c
  2610  001BB4  E106               	bnz	u850
  2611  001BB6  0E1A               	movlw	26
  2612  001BB8  5C05               	subwf	??_isupper+2,w,c
  2613  001BBA  B0D8               	btfsc	status,0,c
  2614  001BBC  D002               	goto	u850
  2615  001BBE  0E01               	movlw	1
  2616  001BC0  D001               	goto	u860
  2617  001BC2                     u850:
  2618  001BC2  0E00               	movlw	0
  2619  001BC4                     u860:
  2620  001BC4  6E01               	movwf	?_isupper,c
  2621  001BC6  6A02               	clrf	?_isupper+1,c
  2622  001BC8  0012               	return		;funcret
  2623  001BCA                     __end_of_isupper:
  2624                           	opt callstack 0
  2625                           
  2626 ;; *************** function _isalpha *****************
  2627 ;; Defined at:
  2628 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  2629 ;; Parameters:    Size  Location     Type
  2630 ;;  c               2    0[COMRAM] int 
  2631 ;; Auto vars:     Size  Location     Type
  2632 ;;		None
  2633 ;; Return value:  Size  Location     Type
  2634 ;;                  2    0[COMRAM] int 
  2635 ;; Registers used:
  2636 ;;		wreg, status,2, status,0
  2637 ;; Tracked objects:
  2638 ;;		On entry : 0/0
  2639 ;;		On exit  : 0/0
  2640 ;;		Unchanged: 0/0
  2641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2642 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2644 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2645 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2646 ;;Total ram usage:        6 bytes
  2647 ;; Hardware stack levels used:    1
  2648 ;; This function calls:
  2649 ;;		Nothing
  2650 ;; This function is called by:
  2651 ;;		_xtoa
  2652 ;; This function uses a non-reentrant model
  2653 ;;
  2654                           
  2655                           	psect	text17
  2656  001B36                     __ptext17:
  2657                           	opt callstack 0
  2658  001B36                     _isalpha:
  2659                           	opt callstack 26
  2660                           
  2661                           ;incstack = 0
  2662  001B36  0E9F               	movlw	159
  2663  001B38  6E03               	movwf	??_isalpha& (0+255),c
  2664  001B3A  0EFF               	movlw	255
  2665  001B3C  6E04               	movwf	(??_isalpha+1)& (0+255),c
  2666  001B3E  0E20               	movlw	32
  2667  001B40  1001               	iorwf	isalpha@c,w,c
  2668  001B42  6E05               	movwf	(??_isalpha+2)& (0+255),c
  2669  001B44  0E00               	movlw	0
  2670  001B46  1002               	iorwf	isalpha@c+1,w,c
  2671  001B48  6E06               	movwf	(??_isalpha+3)& (0+255),c
  2672  001B4A  5003               	movf	??_isalpha,w,c
  2673  001B4C  2605               	addwf	??_isalpha+2,f,c
  2674  001B4E  5004               	movf	??_isalpha+1,w,c
  2675  001B50  2206               	addwfc	??_isalpha+3,f,c
  2676  001B52  5006               	movf	??_isalpha+3,w,c
  2677  001B54  E106               	bnz	u870
  2678  001B56  0E1A               	movlw	26
  2679  001B58  5C05               	subwf	??_isalpha+2,w,c
  2680  001B5A  B0D8               	btfsc	status,0,c
  2681  001B5C  D002               	goto	u870
  2682  001B5E  0E01               	movlw	1
  2683  001B60  D001               	goto	u880
  2684  001B62                     u870:
  2685  001B62  0E00               	movlw	0
  2686  001B64                     u880:
  2687  001B64  6E01               	movwf	?_isalpha,c
  2688  001B66  6A02               	clrf	?_isalpha+1,c
  2689  001B68  0012               	return		;funcret
  2690  001B6A                     __end_of_isalpha:
  2691                           	opt callstack 0
  2692                           
  2693 ;; *************** function _atoi *****************
  2694 ;; Defined at:
  2695 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
  2696 ;; Parameters:    Size  Location     Type
  2697 ;;  s               2    7[COMRAM] PTR const unsigned char 
  2698 ;;		 -> STR_2(15), STR_1(15), 
  2699 ;; Auto vars:     Size  Location     Type
  2700 ;;  n               2   20[COMRAM] int 
  2701 ;;  neg             2   13[COMRAM] int 
  2702 ;; Return value:  Size  Location     Type
  2703 ;;                  2    7[COMRAM] int 
  2704 ;; Registers used:
  2705 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2706 ;; Tracked objects:
  2707 ;;		On entry : 0/0
  2708 ;;		On exit  : 0/0
  2709 ;;		Unchanged: 0/0
  2710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2711 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2712 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2713 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2714 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2715 ;;Total ram usage:       15 bytes
  2716 ;; Hardware stack levels used:    1
  2717 ;; Hardware stack levels required when called:    1
  2718 ;; This function calls:
  2719 ;;		___wmul
  2720 ;;		_isdigit
  2721 ;;		_isspace
  2722 ;; This function is called by:
  2723 ;;		_vfpfcnvrt
  2724 ;; This function uses a non-reentrant model
  2725 ;;
  2726                           
  2727                           	psect	text18
  2728  00155E                     __ptext18:
  2729                           	opt callstack 0
  2730  00155E                     _atoi:
  2731                           	opt callstack 26
  2732                           
  2733                           ;incstack = 0
  2734  00155E  0E00               	movlw	0
  2735  001560  6E16               	movwf	atoi@n+1,c
  2736  001562  0E00               	movlw	0
  2737  001564  6E15               	movwf	atoi@n,c
  2738  001566  0E00               	movlw	0
  2739  001568  6E0F               	movwf	atoi@neg+1,c
  2740  00156A  0E00               	movlw	0
  2741  00156C  6E0E               	movwf	atoi@neg,c
  2742  00156E  D002               	goto	l1732
  2743  001570                     l1730:
  2744  001570  4A08               	infsnz	atoi@s,f,c
  2745  001572  2A09               	incf	atoi@s+1,f,c
  2746  001574                     l1732:
  2747  001574  0E01               	movlw	1
  2748  001576  6E14               	movwf	_atoi$893,c
  2749  001578  C008  FFF6         	movff	atoi@s,tblptrl
  2750  00157C  C009  FFF7         	movff	atoi@s+1,tblptrh
  2751  001580                     	if	0	;tblptru may be non-zero
  2752  001580                     	endif
  2753  001580                     	if	0	;tblptru may be non-zero
  2754  001580                     	endif
  2755  001580  0008               	tblrd		*
  2756  001582  50F5               	movf	tablat,w,c
  2757  001584  0A20               	xorlw	32
  2758  001586  B4D8               	btfsc	status,2,c
  2759  001588  D018               	goto	l1740
  2760  00158A  0EF7               	movlw	247
  2761  00158C  6E0A               	movwf	??_atoi& (0+255),c
  2762  00158E  0EFF               	movlw	255
  2763  001590  6E0B               	movwf	(??_atoi+1)& (0+255),c
  2764  001592  C008  FFF6         	movff	atoi@s,tblptrl
  2765  001596  C009  FFF7         	movff	atoi@s+1,tblptrh
  2766  00159A                     	if	0	;tblptru may be non-zero
  2767  00159A                     	endif
  2768  00159A                     	if	0	;tblptru may be non-zero
  2769  00159A                     	endif
  2770  00159A  0008               	tblrd		*
  2771  00159C  50F5               	movf	tablat,w,c
  2772  00159E  6E0C               	movwf	(??_atoi+2)& (0+255),c
  2773  0015A0  6A0D               	clrf	(??_atoi+3)& (0+255),c
  2774  0015A2  500A               	movf	??_atoi,w,c
  2775  0015A4  260C               	addwf	??_atoi+2,f,c
  2776  0015A6  500B               	movf	??_atoi+1,w,c
  2777  0015A8  220D               	addwfc	??_atoi+3,f,c
  2778  0015AA  500D               	movf	??_atoi+3,w,c
  2779  0015AC  E104               	bnz	u1140
  2780  0015AE  0E05               	movlw	5
  2781  0015B0  5C0C               	subwf	??_atoi+2,w,c
  2782  0015B2  A0D8               	btfss	status,0,c
  2783  0015B4  D002               	goto	l1740
  2784  0015B6                     u1140:
  2785  0015B6  0E00               	movlw	0
  2786  0015B8  6E14               	movwf	_atoi$893,c
  2787  0015BA                     l1740:
  2788  0015BA  C014  F010         	movff	_atoi$893,_atoi$892
  2789  0015BE  6A11               	clrf	_atoi$892+1,c
  2790  0015C0  5010               	movf	_atoi$892,w,c
  2791  0015C2  1011               	iorwf	_atoi$892+1,w,c
  2792  0015C4  B4D8               	btfsc	status,2,c
  2793  0015C6  D008               	goto	l1750
  2794  0015C8  D7D3               	goto	l1730
  2795  0015CA                     l1746:
  2796  0015CA  0E00               	movlw	0
  2797  0015CC  6E0F               	movwf	atoi@neg+1,c
  2798  0015CE  0E01               	movlw	1
  2799  0015D0  6E0E               	movwf	atoi@neg,c
  2800  0015D2                     l1748:
  2801  0015D2  4A08               	infsnz	atoi@s,f,c
  2802  0015D4  2A09               	incf	atoi@s+1,f,c
  2803  0015D6  D02E               	goto	l1756
  2804  0015D8                     l1750:
  2805  0015D8  C008  FFF6         	movff	atoi@s,tblptrl
  2806  0015DC  C009  FFF7         	movff	atoi@s+1,tblptrh
  2807  0015E0                     	if	0	;tblptru may be non-zero
  2808  0015E0                     	endif
  2809  0015E0                     	if	0	;tblptru may be non-zero
  2810  0015E0                     	endif
  2811  0015E0  0008               	tblrd		*
  2812  0015E2  50F5               	movf	tablat,w,c
  2813  0015E4  6E0A               	movwf	??_atoi& (0+255),c
  2814  0015E6  6A0B               	clrf	(??_atoi+1)& (0+255),c
  2815                           
  2816                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2817                           ; Switch size 1, requested type "simple"
  2818                           ; Number of cases is 1, Range of values is 0 to 0
  2819                           ; switch strategies available:
  2820                           ; Name         Instructions Cycles
  2821                           ; simple_byte            4     3 (average)
  2822                           ;	Chosen strategy is simple_byte
  2823  0015E8  500B               	movf	??_atoi+1,w,c
  2824  0015EA  0A00               	xorlw	0	; case 0
  2825  0015EC  A4D8               	btfss	status,2,c
  2826  0015EE  D022               	goto	l1756
  2827                           
  2828                           ; Switch size 1, requested type "simple"
  2829                           ; Number of cases is 2, Range of values is 43 to 45
  2830                           ; switch strategies available:
  2831                           ; Name         Instructions Cycles
  2832                           ; simple_byte            7     4 (average)
  2833                           ;	Chosen strategy is simple_byte
  2834  0015F0  500A               	movf	??_atoi,w,c
  2835  0015F2  0A2B               	xorlw	43	; case 43
  2836  0015F4  B4D8               	btfsc	status,2,c
  2837  0015F6  D7ED               	goto	l1748
  2838  0015F8  0A06               	xorlw	6	; case 45
  2839  0015FA  B4D8               	btfsc	status,2,c
  2840  0015FC  D7E6               	goto	l1746
  2841  0015FE  D01A               	goto	l1756
  2842  001600                     l1752:
  2843  001600  C015  F001         	movff	atoi@n,___wmul@multiplier
  2844  001604  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  2845  001608  0E00               	movlw	0
  2846  00160A  6E04               	movwf	___wmul@multiplicand+1,c
  2847  00160C  0E0A               	movlw	10
  2848  00160E  6E03               	movwf	___wmul@multiplicand,c
  2849  001610  EC3A  F00E         	call	___wmul	;wreg free
  2850  001614  C008  FFF6         	movff	atoi@s,tblptrl
  2851  001618  C009  FFF7         	movff	atoi@s+1,tblptrh
  2852  00161C                     	if	0	;tblptru may be non-zero
  2853  00161C                     	endif
  2854  00161C                     	if	0	;tblptru may be non-zero
  2855  00161C                     	endif
  2856  00161C  0008               	tblrd		*
  2857  00161E  50F5               	movf	tablat,w,c
  2858  001620  5E01               	subwf	?___wmul,f,c
  2859  001622  0E00               	movlw	0
  2860  001624  5A02               	subwfb	?___wmul+1,f,c
  2861  001626  0E30               	movlw	48
  2862  001628  2401               	addwf	?___wmul,w,c
  2863  00162A  6E15               	movwf	atoi@n,c
  2864  00162C  0E00               	movlw	0
  2865  00162E  2002               	addwfc	?___wmul+1,w,c
  2866  001630  6E16               	movwf	atoi@n+1,c
  2867  001632  D7CF               	goto	l1748
  2868  001634                     l1756:
  2869  001634  0ED0               	movlw	208
  2870  001636  6E0A               	movwf	??_atoi& (0+255),c
  2871  001638  0EFF               	movlw	255
  2872  00163A  6E0B               	movwf	(??_atoi+1)& (0+255),c
  2873  00163C  C008  FFF6         	movff	atoi@s,tblptrl
  2874  001640  C009  FFF7         	movff	atoi@s+1,tblptrh
  2875  001644                     	if	0	;tblptru may be non-zero
  2876  001644                     	endif
  2877  001644                     	if	0	;tblptru may be non-zero
  2878  001644                     	endif
  2879  001644  0008               	tblrd		*
  2880  001646  50F5               	movf	tablat,w,c
  2881  001648  6E0C               	movwf	(??_atoi+2)& (0+255),c
  2882  00164A  6A0D               	clrf	(??_atoi+3)& (0+255),c
  2883  00164C  500A               	movf	??_atoi,w,c
  2884  00164E  260C               	addwf	??_atoi+2,f,c
  2885  001650  500B               	movf	??_atoi+1,w,c
  2886  001652  220D               	addwfc	??_atoi+3,f,c
  2887  001654  500D               	movf	??_atoi+3,w,c
  2888  001656  E106               	bnz	u1160
  2889  001658  0E0A               	movlw	10
  2890  00165A  5C0C               	subwf	??_atoi+2,w,c
  2891  00165C  B0D8               	btfsc	status,0,c
  2892  00165E  D002               	goto	u1160
  2893  001660  0E01               	movlw	1
  2894  001662  D001               	goto	u1170
  2895  001664                     u1160:
  2896  001664  0E00               	movlw	0
  2897  001666                     u1170:
  2898  001666  6E12               	movwf	_atoi$894,c
  2899  001668  6A13               	clrf	_atoi$894+1,c
  2900  00166A  5012               	movf	_atoi$894,w,c
  2901  00166C  1013               	iorwf	_atoi$894+1,w,c
  2902  00166E  A4D8               	btfss	status,2,c
  2903  001670  D7C7               	goto	l1752
  2904  001672  500E               	movf	atoi@neg,w,c
  2905  001674  100F               	iorwf	atoi@neg+1,w,c
  2906  001676  A4D8               	btfss	status,2,c
  2907  001678  D00D               	goto	l941
  2908  00167A  C015  F00A         	movff	atoi@n,??_atoi
  2909  00167E  C016  F00B         	movff	atoi@n+1,??_atoi+1
  2910  001682  1E0A               	comf	??_atoi,f,c
  2911  001684  1E0B               	comf	??_atoi+1,f,c
  2912  001686  4A0A               	infsnz	??_atoi,f,c
  2913  001688  2A0B               	incf	??_atoi+1,f,c
  2914  00168A  C00A  F008         	movff	??_atoi,?_atoi
  2915  00168E  C00B  F009         	movff	??_atoi+1,?_atoi+1
  2916  001692  0012               	return	
  2917  001694                     l941:
  2918  001694  C015  F008         	movff	atoi@n,?_atoi
  2919  001698  C016  F009         	movff	atoi@n+1,?_atoi+1
  2920  00169C  0012               	return		;funcret
  2921  00169E                     __end_of_atoi:
  2922                           	opt callstack 0
  2923                           
  2924 ;; *************** function _isspace *****************
  2925 ;; Defined at:
  2926 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
  2927 ;; Parameters:    Size  Location     Type
  2928 ;;  c               2    0[COMRAM] int 
  2929 ;; Auto vars:     Size  Location     Type
  2930 ;;		None
  2931 ;; Return value:  Size  Location     Type
  2932 ;;                  2    0[COMRAM] int 
  2933 ;; Registers used:
  2934 ;;		wreg, status,2, status,0
  2935 ;; Tracked objects:
  2936 ;;		On entry : 0/0
  2937 ;;		On exit  : 0/0
  2938 ;;		Unchanged: 0/0
  2939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2940 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2941 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2942 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2943 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2944 ;;Total ram usage:        7 bytes
  2945 ;; Hardware stack levels used:    1
  2946 ;; This function calls:
  2947 ;;		Nothing
  2948 ;; This function is called by:
  2949 ;;		_atoi
  2950 ;; This function uses a non-reentrant model
  2951 ;;
  2952                           
  2953                           	psect	text19
  2954  001AC0                     __ptext19:
  2955                           	opt callstack 0
  2956  001AC0                     _isspace:
  2957                           	opt callstack 26
  2958                           
  2959                           ;incstack = 0
  2960  001AC0  0E01               	movlw	1
  2961  001AC2  6E07               	movwf	_isspace$919,c
  2962  001AC4  0E20               	movlw	32
  2963  001AC6  1801               	xorwf	isspace@c,w,c
  2964  001AC8  1002               	iorwf	isspace@c+1,w,c
  2965  001ACA  B4D8               	btfsc	status,2,c
  2966  001ACC  D014               	goto	l1658
  2967  001ACE  0EF7               	movlw	247
  2968  001AD0  6E03               	movwf	??_isspace& (0+255),c
  2969  001AD2  0EFF               	movlw	255
  2970  001AD4  6E04               	movwf	(??_isspace+1)& (0+255),c
  2971  001AD6  C001  F005         	movff	isspace@c,??_isspace+2
  2972  001ADA  C002  F006         	movff	isspace@c+1,??_isspace+3
  2973  001ADE  5003               	movf	??_isspace,w,c
  2974  001AE0  2605               	addwf	??_isspace+2,f,c
  2975  001AE2  5004               	movf	??_isspace+1,w,c
  2976  001AE4  2206               	addwfc	??_isspace+3,f,c
  2977  001AE6  5006               	movf	??_isspace+3,w,c
  2978  001AE8  E104               	bnz	u950
  2979  001AEA  0E05               	movlw	5
  2980  001AEC  5C05               	subwf	??_isspace+2,w,c
  2981  001AEE  A0D8               	btfss	status,0,c
  2982  001AF0  D002               	goto	l1658
  2983  001AF2                     u950:
  2984  001AF2  0E00               	movlw	0
  2985  001AF4  6E07               	movwf	_isspace$919,c
  2986  001AF6                     l1658:
  2987  001AF6  C007  F001         	movff	_isspace$919,?_isspace
  2988  001AFA  6A02               	clrf	?_isspace+1,c
  2989  001AFC  0012               	return		;funcret
  2990  001AFE                     __end_of_isspace:
  2991                           	opt callstack 0
  2992                           
  2993 ;; *************** function _isdigit *****************
  2994 ;; Defined at:
  2995 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
  2996 ;; Parameters:    Size  Location     Type
  2997 ;;  c               2    0[COMRAM] int 
  2998 ;; Auto vars:     Size  Location     Type
  2999 ;;		None
  3000 ;; Return value:  Size  Location     Type
  3001 ;;                  2    0[COMRAM] int 
  3002 ;; Registers used:
  3003 ;;		wreg, status,2, status,0
  3004 ;; Tracked objects:
  3005 ;;		On entry : 0/0
  3006 ;;		On exit  : 0/0
  3007 ;;		Unchanged: 0/0
  3008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3009 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3011 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3012 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3013 ;;Total ram usage:        6 bytes
  3014 ;; Hardware stack levels used:    1
  3015 ;; This function calls:
  3016 ;;		Nothing
  3017 ;; This function is called by:
  3018 ;;		_vfpfcnvrt
  3019 ;;		_atoi
  3020 ;; This function uses a non-reentrant model
  3021 ;;
  3022                           
  3023                           	psect	text20
  3024  001BCA                     __ptext20:
  3025                           	opt callstack 0
  3026  001BCA                     _isdigit:
  3027                           	opt callstack 27
  3028                           
  3029                           ;incstack = 0
  3030  001BCA  0ED0               	movlw	208
  3031  001BCC  6E03               	movwf	??_isdigit& (0+255),c
  3032  001BCE  0EFF               	movlw	255
  3033  001BD0  6E04               	movwf	(??_isdigit+1)& (0+255),c
  3034  001BD2  C001  F005         	movff	isdigit@c,??_isdigit+2
  3035  001BD6  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  3036  001BDA  5003               	movf	??_isdigit,w,c
  3037  001BDC  2605               	addwf	??_isdigit+2,f,c
  3038  001BDE  5004               	movf	??_isdigit+1,w,c
  3039  001BE0  2206               	addwfc	??_isdigit+3,f,c
  3040  001BE2  5006               	movf	??_isdigit+3,w,c
  3041  001BE4  E106               	bnz	u920
  3042  001BE6  0E0A               	movlw	10
  3043  001BE8  5C05               	subwf	??_isdigit+2,w,c
  3044  001BEA  B0D8               	btfsc	status,0,c
  3045  001BEC  D002               	goto	u920
  3046  001BEE  0E01               	movlw	1
  3047  001BF0  D001               	goto	u930
  3048  001BF2                     u920:
  3049  001BF2  0E00               	movlw	0
  3050  001BF4                     u930:
  3051  001BF4  6E01               	movwf	?_isdigit,c
  3052  001BF6  6A02               	clrf	?_isdigit+1,c
  3053  001BF8  0012               	return		;funcret
  3054  001BFA                     __end_of_isdigit:
  3055                           	opt callstack 0
  3056                           
  3057 ;; *************** function ___wmul *****************
  3058 ;; Defined at:
  3059 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  3060 ;; Parameters:    Size  Location     Type
  3061 ;;  multiplier      2    0[COMRAM] unsigned int 
  3062 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3063 ;; Auto vars:     Size  Location     Type
  3064 ;;  product         2    4[COMRAM] unsigned int 
  3065 ;; Return value:  Size  Location     Type
  3066 ;;                  2    0[COMRAM] unsigned int 
  3067 ;; Registers used:
  3068 ;;		wreg, status,2, status,0, prodl, prodh
  3069 ;; Tracked objects:
  3070 ;;		On entry : 0/0
  3071 ;;		On exit  : 0/0
  3072 ;;		Unchanged: 0/0
  3073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3074 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3075 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3077 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3078 ;;Total ram usage:        6 bytes
  3079 ;; Hardware stack levels used:    1
  3080 ;; This function calls:
  3081 ;;		Nothing
  3082 ;; This function is called by:
  3083 ;;		_atoi
  3084 ;; This function uses a non-reentrant model
  3085 ;;
  3086                           
  3087                           	psect	text21
  3088  001C74                     __ptext21:
  3089                           	opt callstack 0
  3090  001C74                     ___wmul:
  3091                           	opt callstack 26
  3092                           
  3093                           ;incstack = 0
  3094  001C74  5001               	movf	___wmul@multiplier,w,c
  3095  001C76  0203               	mulwf	___wmul@multiplicand,c
  3096  001C78  CFF3 F005          	movff	prodl,___wmul@product
  3097  001C7C  CFF4 F006          	movff	prodh,___wmul@product+1
  3098  001C80  5001               	movf	___wmul@multiplier,w,c
  3099  001C82  0204               	mulwf	___wmul@multiplicand+1,c
  3100  001C84  50F3               	movf	prodl,w,c
  3101  001C86  2606               	addwf	___wmul@product+1,f,c
  3102  001C88  5002               	movf	___wmul@multiplier+1,w,c
  3103  001C8A  0203               	mulwf	___wmul@multiplicand,c
  3104  001C8C  50F3               	movf	prodl,w,c
  3105  001C8E  2606               	addwf	___wmul@product+1,f,c
  3106  001C90  C005  F001         	movff	___wmul@product,?___wmul
  3107  001C94  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3108  001C98  0012               	return		;funcret
  3109  001C9A                     __end_of___wmul:
  3110                           	opt callstack 0
  3111                           
  3112 ;; *************** function _initLCD *****************
  3113 ;; Defined at:
  3114 ;;		line 69 in file "lcd.c"
  3115 ;; Parameters:    Size  Location     Type
  3116 ;;		None
  3117 ;; Auto vars:     Size  Location     Type
  3118 ;;		None
  3119 ;; Return value:  Size  Location     Type
  3120 ;;                  1    wreg      void 
  3121 ;; Registers used:
  3122 ;;		wreg, status,2, status,0, cstack
  3123 ;; Tracked objects:
  3124 ;;		On entry : 0/0
  3125 ;;		On exit  : 0/0
  3126 ;;		Unchanged: 0/0
  3127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3130 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3131 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3132 ;;Total ram usage:        1 bytes
  3133 ;; Hardware stack levels used:    1
  3134 ;; Hardware stack levels required when called:    4
  3135 ;; This function calls:
  3136 ;;		_lcdInst
  3137 ;;		_send_byte
  3138 ;;		_send_nibble
  3139 ;; This function is called by:
  3140 ;;		_main
  3141 ;; This function uses a non-reentrant model
  3142 ;;
  3143                           
  3144                           	psect	text22
  3145  001914                     __ptext22:
  3146                           	opt callstack 0
  3147  001914                     _initLCD:
  3148                           	opt callstack 26
  3149                           
  3150                           ;lcd.c: 70:     _delay((unsigned long)((15)*(10000000/4000.0)));
  3151                           
  3152                           ;incstack = 0
  3153  001914  0E31               	movlw	49
  3154  001916  6E05               	movwf	??_initLCD& (0+255),c
  3155  001918  0EB2               	movlw	178
  3156  00191A                     u1427:
  3157  00191A  2EE8               	decfsz	wreg,f,c
  3158  00191C  D7FE               	bra	u1427
  3159  00191E  2E05               	decfsz	??_initLCD& (0+255),f,c
  3160  001920  D7FC               	bra	u1427
  3161  001922  D000               	nop2	
  3162                           
  3163                           ;lcd.c: 72:     LATDbits.LATD2 = 0;
  3164  001924  948C               	bcf	3980,2,c	;volatile
  3165                           
  3166                           ;lcd.c: 74:     send_nibble(0b0011);
  3167  001926  0E03               	movlw	3
  3168  001928  EC6E  F00E         	call	_send_nibble
  3169                           
  3170                           ;lcd.c: 75:     _delay((unsigned long)((5)*(10000000/4000.0)));
  3171  00192C  0E11               	movlw	17
  3172  00192E  6E05               	movwf	??_initLCD& (0+255),c
  3173  001930  0E3A               	movlw	58
  3174  001932                     u1437:
  3175  001932  2EE8               	decfsz	wreg,f,c
  3176  001934  D7FE               	bra	u1437
  3177  001936  2E05               	decfsz	??_initLCD& (0+255),f,c
  3178  001938  D7FC               	bra	u1437
  3179  00193A  D000               	nop2	
  3180                           
  3181                           ;lcd.c: 76:     send_nibble(0b0011);
  3182  00193C  0E03               	movlw	3
  3183  00193E  EC6E  F00E         	call	_send_nibble
  3184                           
  3185                           ;lcd.c: 77:     _delay((unsigned long)((150)*(10000000/4000000.0)));
  3186  001942  0E7D               	movlw	125
  3187  001944                     u1447:
  3188  001944  2EE8               	decfsz	wreg,f,c
  3189  001946  D7FE               	bra	u1447
  3190                           
  3191                           ;lcd.c: 78:     send_byte(0b00110010);
  3192  001948  0E32               	movlw	50
  3193  00194A  EC79  F00E         	call	_send_byte
  3194                           
  3195                           ;lcd.c: 80:     send_byte(0b00101000);
  3196  00194E  0E28               	movlw	40
  3197  001950  EC79  F00E         	call	_send_byte
  3198                           
  3199                           ;lcd.c: 81:     send_byte(0b00001000);
  3200  001954  0E08               	movlw	8
  3201  001956  EC79  F00E         	call	_send_byte
  3202                           
  3203                           ;lcd.c: 82:     send_byte(0b00000001);
  3204  00195A  0E01               	movlw	1
  3205  00195C  EC79  F00E         	call	_send_byte
  3206                           
  3207                           ;lcd.c: 83:     _delay((unsigned long)((5)*(10000000/4000.0)));
  3208  001960  0E11               	movlw	17
  3209  001962  6E05               	movwf	??_initLCD& (0+255),c
  3210  001964  0E3A               	movlw	58
  3211  001966                     u1457:
  3212  001966  2EE8               	decfsz	wreg,f,c
  3213  001968  D7FE               	bra	u1457
  3214  00196A  2E05               	decfsz	??_initLCD& (0+255),f,c
  3215  00196C  D7FC               	bra	u1457
  3216  00196E  D000               	nop2	
  3217                           
  3218                           ;lcd.c: 84:     send_byte(0b00000110);
  3219  001970  0E06               	movlw	6
  3220  001972  EC79  F00E         	call	_send_byte
  3221                           
  3222                           ;lcd.c: 87:     { lcdInst( (unsigned char)(8 | (1 << 2) | (1 << 1) | 1) );};
  3223  001976  0E0F               	movlw	15
  3224  001978  EC91  F00E         	call	_lcdInst
  3225  00197C  0012               	return		;funcret
  3226  00197E                     __end_of_initLCD:
  3227                           	opt callstack 0
  3228                           
  3229 ;; *************** function _lcdInst *****************
  3230 ;; Defined at:
  3231 ;;		line 64 in file "lcd.c"
  3232 ;; Parameters:    Size  Location     Type
  3233 ;;  data            1    wreg     unsigned char 
  3234 ;; Auto vars:     Size  Location     Type
  3235 ;;  data            1    3[COMRAM] unsigned char 
  3236 ;; Return value:  Size  Location     Type
  3237 ;;                  1    wreg      void 
  3238 ;; Registers used:
  3239 ;;		wreg, status,2, status,0, cstack
  3240 ;; Tracked objects:
  3241 ;;		On entry : 0/0
  3242 ;;		On exit  : 0/0
  3243 ;;		Unchanged: 0/0
  3244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3246 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3248 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3249 ;;Total ram usage:        1 bytes
  3250 ;; Hardware stack levels used:    1
  3251 ;; Hardware stack levels required when called:    3
  3252 ;; This function calls:
  3253 ;;		_send_byte
  3254 ;; This function is called by:
  3255 ;;		_main
  3256 ;;		_initLCD
  3257 ;;		_lcd_shift_cursor
  3258 ;;		_lcd_shift_display
  3259 ;; This function uses a non-reentrant model
  3260 ;;
  3261                           
  3262                           	psect	text23
  3263  001D22                     __ptext23:
  3264                           	opt callstack 0
  3265  001D22                     _lcdInst:
  3266                           	opt callstack 27
  3267                           
  3268                           ;incstack = 0
  3269                           ;lcdInst@data stored from wreg
  3270  001D22  6E04               	movwf	lcdInst@data,c
  3271                           
  3272                           ;lcd.c: 65:     LATDbits.LATD2 = 0;
  3273  001D24  948C               	bcf	3980,2,c	;volatile
  3274                           
  3275                           ;lcd.c: 66:     send_byte(data);
  3276  001D26  5004               	movf	lcdInst@data,w,c
  3277  001D28  EC79  F00E         	call	_send_byte
  3278  001D2C  0012               	return		;funcret
  3279  001D2E                     __end_of_lcdInst:
  3280                           	opt callstack 0
  3281                           
  3282 ;; *************** function _send_byte *****************
  3283 ;; Defined at:
  3284 ;;		line 55 in file "lcd.c"
  3285 ;; Parameters:    Size  Location     Type
  3286 ;;  data            1    wreg     unsigned char 
  3287 ;; Auto vars:     Size  Location     Type
  3288 ;;  data            1    2[COMRAM] unsigned char 
  3289 ;; Return value:  Size  Location     Type
  3290 ;;                  1    wreg      void 
  3291 ;; Registers used:
  3292 ;;		wreg, status,2, status,0, cstack
  3293 ;; Tracked objects:
  3294 ;;		On entry : 0/0
  3295 ;;		On exit  : 0/0
  3296 ;;		Unchanged: 0/0
  3297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3299 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3301 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3302 ;;Total ram usage:        1 bytes
  3303 ;; Hardware stack levels used:    1
  3304 ;; Hardware stack levels required when called:    2
  3305 ;; This function calls:
  3306 ;;		_send_nibble
  3307 ;; This function is called by:
  3308 ;;		_lcdInst
  3309 ;;		_initLCD
  3310 ;;		_putch
  3311 ;; This function uses a non-reentrant model
  3312 ;;
  3313                           
  3314                           	psect	text24
  3315  001CF2                     __ptext24:
  3316                           	opt callstack 0
  3317  001CF2                     _send_byte:
  3318                           	opt callstack 20
  3319                           
  3320                           ;incstack = 0
  3321                           ;send_byte@data stored from wreg
  3322  001CF2  6E03               	movwf	send_byte@data,c
  3323                           
  3324                           ;lcd.c: 57:     send_nibble(data >> 4);
  3325  001CF4  3803               	swapf	send_byte@data,w,c
  3326  001CF6  0B0F               	andlw	15
  3327  001CF8  EC6E  F00E         	call	_send_nibble
  3328                           
  3329                           ;lcd.c: 60:     send_nibble(data);
  3330  001CFC  5003               	movf	send_byte@data,w,c
  3331  001CFE  EC6E  F00E         	call	_send_nibble
  3332  001D02  0012               	return		;funcret
  3333  001D04                     __end_of_send_byte:
  3334                           	opt callstack 0
  3335                           
  3336 ;; *************** function _send_nibble *****************
  3337 ;; Defined at:
  3338 ;;		line 44 in file "lcd.c"
  3339 ;; Parameters:    Size  Location     Type
  3340 ;;  data            1    wreg     unsigned char 
  3341 ;; Auto vars:     Size  Location     Type
  3342 ;;  data            1    1[COMRAM] unsigned char 
  3343 ;; Return value:  Size  Location     Type
  3344 ;;                  1    wreg      void 
  3345 ;; Registers used:
  3346 ;;		wreg, status,2, status,0, cstack
  3347 ;; Tracked objects:
  3348 ;;		On entry : 0/0
  3349 ;;		On exit  : 0/0
  3350 ;;		Unchanged: 0/0
  3351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3353 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3355 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3356 ;;Total ram usage:        1 bytes
  3357 ;; Hardware stack levels used:    1
  3358 ;; Hardware stack levels required when called:    1
  3359 ;; This function calls:
  3360 ;;		_pulse_e
  3361 ;; This function is called by:
  3362 ;;		_send_byte
  3363 ;;		_initLCD
  3364 ;; This function uses a non-reentrant model
  3365 ;;
  3366                           
  3367                           	psect	text25
  3368  001CDC                     __ptext25:
  3369                           	opt callstack 0
  3370  001CDC                     _send_nibble:
  3371                           	opt callstack 20
  3372                           
  3373                           ;incstack = 0
  3374                           ;send_nibble@data stored from wreg
  3375  001CDC  6E02               	movwf	send_nibble@data,c
  3376                           
  3377                           ;lcd.c: 46:     LATD = (unsigned char)(LATD & 0x0F);
  3378  001CDE  508C               	movf	3980,w,c	;volatile
  3379  001CE0  0B0F               	andlw	15
  3380  001CE2  6E8C               	movwf	3980,c	;volatile
  3381                           
  3382                           ;lcd.c: 47:     LATD = (unsigned char)((data << 4) | LATD);
  3383  001CE4  3802               	swapf	send_nibble@data,w,c
  3384  001CE6  0BF0               	andlw	240
  3385  001CE8  108C               	iorwf	3980,w,c	;volatile
  3386  001CEA  6E8C               	movwf	3980,c	;volatile
  3387                           
  3388                           ;lcd.c: 48:     pulse_e();
  3389  001CEC  EC12  F00E         	call	_pulse_e	;wreg free
  3390  001CF0  0012               	return		;funcret
  3391  001CF2                     __end_of_send_nibble:
  3392                           	opt callstack 0
  3393                           
  3394 ;; *************** function _pulse_e *****************
  3395 ;; Defined at:
  3396 ;;		line 28 in file "lcd.c"
  3397 ;; Parameters:    Size  Location     Type
  3398 ;;		None
  3399 ;; Auto vars:     Size  Location     Type
  3400 ;;  interruptSta    1    0[COMRAM] unsigned char 
  3401 ;; Return value:  Size  Location     Type
  3402 ;;                  1    wreg      void 
  3403 ;; Registers used:
  3404 ;;		wreg
  3405 ;; Tracked objects:
  3406 ;;		On entry : 0/0
  3407 ;;		On exit  : 0/0
  3408 ;;		Unchanged: 0/0
  3409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3411 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3413 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3414 ;;Total ram usage:        1 bytes
  3415 ;; Hardware stack levels used:    1
  3416 ;; This function calls:
  3417 ;;		Nothing
  3418 ;; This function is called by:
  3419 ;;		_send_nibble
  3420 ;; This function uses a non-reentrant model
  3421 ;;
  3422                           
  3423                           	psect	text26
  3424  001C24                     __ptext26:
  3425                           	opt callstack 0
  3426  001C24                     _pulse_e:
  3427                           	opt callstack 20
  3428                           
  3429                           ;lcd.c: 29:     unsigned char interruptState = INTCONbits.GIE;
  3430                           
  3431                           ;incstack = 0
  3432  001C24  0E00               	movlw	0
  3433  001C26  BEF2               	btfsc	4082,7,c	;volatile
  3434  001C28  0E01               	movlw	1
  3435  001C2A  6E01               	movwf	pulse_e@interruptState,c
  3436                           
  3437                           ;lcd.c: 30:     (INTCONbits.GIE = 0);
  3438  001C2C  9EF2               	bcf	4082,7,c	;volatile
  3439                           
  3440                           ;lcd.c: 31:     LATDbits.LATD3 = 1;
  3441  001C2E  868C               	bsf	3980,3,c	;volatile
  3442                           
  3443                           ;lcd.c: 34:     _delay((unsigned long)((25)*(10000000/4000000.0)));
  3444  001C30  0E14               	movlw	20
  3445  001C32                     u1467:
  3446  001C32  2EE8               	decfsz	wreg,f,c
  3447  001C34  D7FE               	bra	u1467
  3448  001C36  D000               	nop2	
  3449                           
  3450                           ;lcd.c: 35:     LATDbits.LATD3 = 0;
  3451  001C38  968C               	bcf	3980,3,c	;volatile
  3452                           
  3453                           ;lcd.c: 36:     _delay((unsigned long)((100)*(10000000/4000000.0)));
  3454  001C3A  0E53               	movlw	83
  3455  001C3C                     u1477:
  3456  001C3C  2EE8               	decfsz	wreg,f,c
  3457  001C3E  D7FE               	bra	u1477
  3458  001C40  F000               	nop	
  3459                           
  3460                           ;lcd.c: 37:     INTCONbits.GIE = interruptState;
  3461  001C42  B001               	btfsc	pulse_e@interruptState,0,c
  3462  001C44  D002               	bra	u725
  3463  001C46  9EF2               	bcf	4082,7,c	;volatile
  3464  001C48  D001               	bra	u726
  3465  001C4A                     u725:
  3466  001C4A  8EF2               	bsf	4082,7,c	;volatile
  3467  001C4C                     u726:
  3468  001C4C  0012               	return		;funcret
  3469  001C4E                     __end_of_pulse_e:
  3470                           	opt callstack 0
  3471                           
  3472 ;; *************** function _I2C_Master_Read *****************
  3473 ;; Defined at:
  3474 ;;		line 77 in file "I2C.c"
  3475 ;; Parameters:    Size  Location     Type
  3476 ;;  ackBit          1    wreg     unsigned char 
  3477 ;; Auto vars:     Size  Location     Type
  3478 ;;  ackBit          1    1[COMRAM] unsigned char 
  3479 ;;  receivedByte    1    2[COMRAM] unsigned char 
  3480 ;; Return value:  Size  Location     Type
  3481 ;;                  1    wreg      unsigned char 
  3482 ;; Registers used:
  3483 ;;		wreg, status,2, status,0, cstack
  3484 ;; Tracked objects:
  3485 ;;		On entry : 0/0
  3486 ;;		On exit  : 0/0
  3487 ;;		Unchanged: 0/0
  3488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3490 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3492 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3493 ;;Total ram usage:        2 bytes
  3494 ;; Hardware stack levels used:    1
  3495 ;; Hardware stack levels required when called:    1
  3496 ;; This function calls:
  3497 ;;		_I2C_Master_Wait
  3498 ;; This function is called by:
  3499 ;;		_main
  3500 ;; This function uses a non-reentrant model
  3501 ;;
  3502                           
  3503                           	psect	text27
  3504  001C9A                     __ptext27:
  3505                           	opt callstack 0
  3506  001C9A                     _I2C_Master_Read:
  3507                           	opt callstack 29
  3508                           
  3509                           ;incstack = 0
  3510                           ;I2C_Master_Read@ackBit stored from wreg
  3511  001C9A  6E02               	movwf	I2C_Master_Read@ackBit,c
  3512                           
  3513                           ;I2C.c: 78:     I2C_Master_Wait();
  3514  001C9C  EC82  F00E         	call	_I2C_Master_Wait	;wreg free
  3515                           
  3516                           ;I2C.c: 79:     SSPCON2bits.RCEN = 1;
  3517  001CA0  86C5               	bsf	4037,3,c	;volatile
  3518                           
  3519                           ;I2C.c: 81:     I2C_Master_Wait();
  3520  001CA2  EC82  F00E         	call	_I2C_Master_Wait	;wreg free
  3521                           
  3522                           ;I2C.c: 84:     unsigned char receivedByte = SSPBUF;
  3523  001CA6  CFC9 F003          	movff	4041,I2C_Master_Read@receivedByte	;volatile
  3524                           
  3525                           ;I2C.c: 86:     I2C_Master_Wait();
  3526  001CAA  EC82  F00E         	call	_I2C_Master_Wait	;wreg free
  3527                           
  3528                           ;I2C.c: 87:     SSPCON2bits.ACKDT = ackBit;
  3529  001CAE  B002               	btfsc	I2C_Master_Read@ackBit,0,c
  3530  001CB0  D002               	bra	u685
  3531  001CB2  9AC5               	bcf	4037,5,c	;volatile
  3532  001CB4  D001               	bra	u686
  3533  001CB6                     u685:
  3534  001CB6  8AC5               	bsf	4037,5,c	;volatile
  3535  001CB8                     u686:
  3536                           
  3537                           ;I2C.c: 88:     SSPCON2bits.ACKEN = 1;
  3538  001CB8  88C5               	bsf	4037,4,c	;volatile
  3539                           
  3540                           ;I2C.c: 90:     return receivedByte;
  3541  001CBA  5003               	movf	I2C_Master_Read@receivedByte,w,c
  3542  001CBC  0012               	return		;funcret
  3543  001CBE                     __end_of_I2C_Master_Read:
  3544                           	opt callstack 0
  3545                           
  3546 ;; *************** function _I2C_Master_Wait *****************
  3547 ;; Defined at:
  3548 ;;		line 21 in file "I2C.c"
  3549 ;; Parameters:    Size  Location     Type
  3550 ;;		None
  3551 ;; Auto vars:     Size  Location     Type
  3552 ;;		None
  3553 ;; Return value:  Size  Location     Type
  3554 ;;                  1    wreg      void 
  3555 ;; Registers used:
  3556 ;;		wreg, status,2, status,0
  3557 ;; Tracked objects:
  3558 ;;		On entry : 0/0
  3559 ;;		On exit  : 0/0
  3560 ;;		Unchanged: 0/0
  3561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3564 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3565 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3566 ;;Total ram usage:        1 bytes
  3567 ;; Hardware stack levels used:    1
  3568 ;; This function calls:
  3569 ;;		Nothing
  3570 ;; This function is called by:
  3571 ;;		_I2C_Master_Start
  3572 ;;		_I2C_Master_Stop
  3573 ;;		_I2C_Master_Write
  3574 ;;		_I2C_Master_Read
  3575 ;;		_I2C_Master_RepeatedStart
  3576 ;; This function uses a non-reentrant model
  3577 ;;
  3578                           
  3579                           	psect	text28
  3580  001D04                     __ptext28:
  3581                           	opt callstack 0
  3582  001D04                     _I2C_Master_Wait:
  3583                           	opt callstack 28
  3584                           
  3585                           ;I2C.c: 26:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F)){
  3586                           
  3587                           ;I2C.c: 28:     }
  3588                           
  3589                           ;incstack = 0
  3590  001D04  B4C7               	btfsc	4039,2,c	;volatile
  3591  001D06  D7FE               	goto	_I2C_Master_Wait
  3592  001D08  CFC5 F001          	movff	4037,??_I2C_Master_Wait	;volatile
  3593  001D0C  0E1F               	movlw	31
  3594  001D0E  1601               	andwf	??_I2C_Master_Wait,f,c
  3595  001D10  B4D8               	btfsc	status,2,c
  3596  001D12  0012               	return	
  3597  001D14  D7F7               	goto	_I2C_Master_Wait
  3598  001D16                     __end_of_I2C_Master_Wait:
  3599                           	opt callstack 0
  3600                           
  3601 ;; *************** function _I2C_Master_Init *****************
  3602 ;; Defined at:
  3603 ;;		line 32 in file "I2C.c"
  3604 ;; Parameters:    Size  Location     Type
  3605 ;;  clockFreq       4   13[COMRAM] const unsigned long 
  3606 ;; Auto vars:     Size  Location     Type
  3607 ;;		None
  3608 ;; Return value:  Size  Location     Type
  3609 ;;                  1    wreg      void 
  3610 ;; Registers used:
  3611 ;;		wreg, status,2, status,0, cstack
  3612 ;; Tracked objects:
  3613 ;;		On entry : 0/0
  3614 ;;		On exit  : 0/0
  3615 ;;		Unchanged: 0/0
  3616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3617 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3619 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3620 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3621 ;;Total ram usage:        8 bytes
  3622 ;; Hardware stack levels used:    1
  3623 ;; Hardware stack levels required when called:    1
  3624 ;; This function calls:
  3625 ;;		___lldiv
  3626 ;; This function is called by:
  3627 ;;		_main
  3628 ;; This function uses a non-reentrant model
  3629 ;;
  3630                           
  3631                           	psect	text29
  3632  00197E                     __ptext29:
  3633                           	opt callstack 0
  3634  00197E                     _I2C_Master_Init:
  3635                           	opt callstack 29
  3636                           
  3637                           ;I2C.c: 34:     SSPCON1bits.SSPEN = 0;
  3638                           
  3639                           ;incstack = 0
  3640  00197E  9AC6               	bcf	4038,5,c	;volatile
  3641                           
  3642                           ;I2C.c: 37:     TRISCbits.TRISC3 = 1;
  3643  001980  8694               	bsf	3988,3,c	;volatile
  3644                           
  3645                           ;I2C.c: 38:     TRISCbits.TRISC4 = 1;
  3646  001982  8894               	bsf	3988,4,c	;volatile
  3647                           
  3648                           ;I2C.c: 43:     SSPADD = (10000000 / (4 * clockFreq)) - 1;
  3649  001984  0E80               	movlw	128
  3650  001986  6E01               	movwf	___lldiv@dividend,c
  3651  001988  0E96               	movlw	150
  3652  00198A  6E02               	movwf	___lldiv@dividend+1,c
  3653  00198C  0E98               	movlw	152
  3654  00198E  6E03               	movwf	___lldiv@dividend+2,c
  3655  001990  0E00               	movlw	0
  3656  001992  6E04               	movwf	___lldiv@dividend+3,c
  3657  001994  C00E  F012         	movff	I2C_Master_Init@clockFreq,??_I2C_Master_Init
  3658  001998  C00F  F013         	movff	I2C_Master_Init@clockFreq+1,??_I2C_Master_Init+1
  3659  00199C  C010  F014         	movff	I2C_Master_Init@clockFreq+2,??_I2C_Master_Init+2
  3660  0019A0  C011  F015         	movff	I2C_Master_Init@clockFreq+3,??_I2C_Master_Init+3
  3661  0019A4  0E02               	movlw	2
  3662  0019A6                     u1355:
  3663  0019A6  90D8               	bcf	status,0,c
  3664  0019A8  3612               	rlcf	??_I2C_Master_Init,f,c
  3665  0019AA  3613               	rlcf	??_I2C_Master_Init+1,f,c
  3666  0019AC  3614               	rlcf	??_I2C_Master_Init+2,f,c
  3667  0019AE  3615               	rlcf	??_I2C_Master_Init+3,f,c
  3668  0019B0  2EE8               	decfsz	wreg,f,c
  3669  0019B2  D7F9               	goto	u1355
  3670  0019B4  C012  F005         	movff	??_I2C_Master_Init,___lldiv@divisor
  3671  0019B8  C013  F006         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
  3672  0019BC  C014  F007         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
  3673  0019C0  C015  F008         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
  3674  0019C4  EC13  F00C         	call	___lldiv	;wreg free
  3675  0019C8  0401               	decf	?___lldiv,w,c
  3676  0019CA  6EC8               	movwf	4040,c	;volatile
  3677                           
  3678                           ;I2C.c: 46:     SSPSTAT = 0b10000000;
  3679  0019CC  0E80               	movlw	128
  3680  0019CE  6EC7               	movwf	4039,c	;volatile
  3681                           
  3682                           ;I2C.c: 49:     SSPCON1 = 0b00101000;
  3683  0019D0  0E28               	movlw	40
  3684  0019D2  6EC6               	movwf	4038,c	;volatile
  3685                           
  3686                           ;I2C.c: 52:     SSPCON2 = 0b00000000;
  3687  0019D4  0E00               	movlw	0
  3688  0019D6  6EC5               	movwf	4037,c	;volatile
  3689  0019D8  0012               	return		;funcret
  3690  0019DA                     __end_of_I2C_Master_Init:
  3691                           	opt callstack 0
  3692                           
  3693 ;; *************** function ___lldiv *****************
  3694 ;; Defined at:
  3695 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__lldiv.c"
  3696 ;; Parameters:    Size  Location     Type
  3697 ;;  dividend        4    0[COMRAM] unsigned long 
  3698 ;;  divisor         4    4[COMRAM] unsigned long 
  3699 ;; Auto vars:     Size  Location     Type
  3700 ;;  quotient        4    8[COMRAM] unsigned long 
  3701 ;;  counter         1   12[COMRAM] unsigned char 
  3702 ;; Return value:  Size  Location     Type
  3703 ;;                  4    0[COMRAM] unsigned long 
  3704 ;; Registers used:
  3705 ;;		wreg, status,2, status,0
  3706 ;; Tracked objects:
  3707 ;;		On entry : 0/0
  3708 ;;		On exit  : 0/0
  3709 ;;		Unchanged: 0/0
  3710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3711 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3712 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3714 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3715 ;;Total ram usage:       13 bytes
  3716 ;; Hardware stack levels used:    1
  3717 ;; This function calls:
  3718 ;;		Nothing
  3719 ;; This function is called by:
  3720 ;;		_I2C_Master_Init
  3721 ;; This function uses a non-reentrant model
  3722 ;;
  3723                           
  3724                           	psect	text30
  3725  001826                     __ptext30:
  3726                           	opt callstack 0
  3727  001826                     ___lldiv:
  3728                           	opt callstack 29
  3729                           
  3730                           ;incstack = 0
  3731  001826  0E00               	movlw	0
  3732  001828  6E09               	movwf	___lldiv@quotient,c
  3733  00182A  0E00               	movlw	0
  3734  00182C  6E0A               	movwf	___lldiv@quotient+1,c
  3735  00182E  0E00               	movlw	0
  3736  001830  6E0B               	movwf	___lldiv@quotient+2,c
  3737  001832  0E00               	movlw	0
  3738  001834  6E0C               	movwf	___lldiv@quotient+3,c
  3739  001836  5005               	movf	___lldiv@divisor,w,c
  3740  001838  1006               	iorwf	___lldiv@divisor+1,w,c
  3741  00183A  1007               	iorwf	___lldiv@divisor+2,w,c
  3742  00183C  1008               	iorwf	___lldiv@divisor+3,w,c
  3743  00183E  B4D8               	btfsc	status,2,c
  3744  001840  D02A               	goto	l269
  3745  001842  0E01               	movlw	1
  3746  001844  6E0D               	movwf	___lldiv@counter,c
  3747  001846  D006               	goto	l1894
  3748  001848                     l1892:
  3749  001848  90D8               	bcf	status,0,c
  3750  00184A  3605               	rlcf	___lldiv@divisor,f,c
  3751  00184C  3606               	rlcf	___lldiv@divisor+1,f,c
  3752  00184E  3607               	rlcf	___lldiv@divisor+2,f,c
  3753  001850  3608               	rlcf	___lldiv@divisor+3,f,c
  3754  001852  2A0D               	incf	___lldiv@counter,f,c
  3755  001854                     l1894:
  3756  001854  AE08               	btfss	___lldiv@divisor+3,7,c
  3757  001856  D7F8               	goto	l1892
  3758  001858                     u1330:
  3759  001858  90D8               	bcf	status,0,c
  3760  00185A  3609               	rlcf	___lldiv@quotient,f,c
  3761  00185C  360A               	rlcf	___lldiv@quotient+1,f,c
  3762  00185E  360B               	rlcf	___lldiv@quotient+2,f,c
  3763  001860  360C               	rlcf	___lldiv@quotient+3,f,c
  3764  001862  5005               	movf	___lldiv@divisor,w,c
  3765  001864  5C01               	subwf	___lldiv@dividend,w,c
  3766  001866  5006               	movf	___lldiv@divisor+1,w,c
  3767  001868  5802               	subwfb	___lldiv@dividend+1,w,c
  3768  00186A  5007               	movf	___lldiv@divisor+2,w,c
  3769  00186C  5803               	subwfb	___lldiv@dividend+2,w,c
  3770  00186E  5008               	movf	___lldiv@divisor+3,w,c
  3771  001870  5804               	subwfb	___lldiv@dividend+3,w,c
  3772  001872  A0D8               	btfss	status,0,c
  3773  001874  D009               	goto	l1904
  3774  001876  5005               	movf	___lldiv@divisor,w,c
  3775  001878  5E01               	subwf	___lldiv@dividend,f,c
  3776  00187A  5006               	movf	___lldiv@divisor+1,w,c
  3777  00187C  5A02               	subwfb	___lldiv@dividend+1,f,c
  3778  00187E  5007               	movf	___lldiv@divisor+2,w,c
  3779  001880  5A03               	subwfb	___lldiv@dividend+2,f,c
  3780  001882  5008               	movf	___lldiv@divisor+3,w,c
  3781  001884  5A04               	subwfb	___lldiv@dividend+3,f,c
  3782  001886  8009               	bsf	___lldiv@quotient,0,c
  3783  001888                     l1904:
  3784  001888  90D8               	bcf	status,0,c
  3785  00188A  3208               	rrcf	___lldiv@divisor+3,f,c
  3786  00188C  3207               	rrcf	___lldiv@divisor+2,f,c
  3787  00188E  3206               	rrcf	___lldiv@divisor+1,f,c
  3788  001890  3205               	rrcf	___lldiv@divisor,f,c
  3789  001892  2E0D               	decfsz	___lldiv@counter,f,c
  3790  001894  D7E1               	goto	u1330
  3791  001896                     l269:
  3792  001896  C009  F001         	movff	___lldiv@quotient,?___lldiv
  3793  00189A  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  3794  00189E  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  3795  0018A2  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  3796  0018A6  0012               	return		;funcret
  3797  0018A8                     __end_of___lldiv:
  3798                           	opt callstack 0
  3799                           
  3800                           	psect	rparam
  3801  0000                     tosu	equ	0xFFF
  3802                           tosh	equ	0xFFE
  3803                           tosl	equ	0xFFD
  3804                           stkptr	equ	0xFFC
  3805                           pclatu	equ	0xFFB
  3806                           pclath	equ	0xFFA
  3807                           pcl	equ	0xFF9
  3808                           tblptru	equ	0xFF8
  3809                           tblptrh	equ	0xFF7
  3810                           tblptrl	equ	0xFF6
  3811                           tablat	equ	0xFF5
  3812                           prodh	equ	0xFF4
  3813                           prodl	equ	0xFF3
  3814                           indf0	equ	0xFEF
  3815                           postinc0	equ	0xFEE
  3816                           postdec0	equ	0xFED
  3817                           preinc0	equ	0xFEC
  3818                           plusw0	equ	0xFEB
  3819                           fsr0h	equ	0xFEA
  3820                           fsr0l	equ	0xFE9
  3821                           wreg	equ	0xFE8
  3822                           indf1	equ	0xFE7
  3823                           postinc1	equ	0xFE6
  3824                           postdec1	equ	0xFE5
  3825                           preinc1	equ	0xFE4
  3826                           plusw1	equ	0xFE3
  3827                           fsr1h	equ	0xFE2
  3828                           fsr1l	equ	0xFE1
  3829                           bsr	equ	0xFE0
  3830                           indf2	equ	0xFDF
  3831                           postinc2	equ	0xFDE
  3832                           postdec2	equ	0xFDD
  3833                           preinc2	equ	0xFDC
  3834                           plusw2	equ	0xFDB
  3835                           fsr2h	equ	0xFDA
  3836                           fsr2l	equ	0xFD9
  3837                           status	equ	0xFD8


Data Sizes:
    Strings     30
    Constant    30
    Data        0
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    123     127
    BANK0           128      0      36
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[15]), STR_1(CODE[15]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S932_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[15]), STR_1(CODE[15]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[15]), STR_1(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[15]), STR_1(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _rtc_set_time->_I2C_Master_Write
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_send_byte
    _atoi->_isspace
    _initLCD->_lcdInst
    _lcdInst->_send_byte
    _send_byte->_send_nibble
    _send_nibble->_pulse_e
    _I2C_Master_Read->_I2C_Master_Wait
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0   10308
                                            113 COMRAM    10    10      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _initLCD
                            _lcdInst
                             _printf
                       _rtc_set_time
 ---------------------------------------------------------------------------------
 (1) _rtc_set_time                                         1     1      0     546
                                              3 COMRAM     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     478
                                              1 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _printf                                              12     4      8    8233
                                            101 COMRAM    12     4      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    8025
                                             93 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    40      6    7651
                                             70 COMRAM    23    17      6
                               _atoi
                              _fputc
                            _isdigit
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    4353
                                             31 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2799
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1280
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     879
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0     111
                                              3 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1244
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     245
                                              4 COMRAM     1     1      0
                            _lcdInst
                          _send_byte
                        _send_nibble
 ---------------------------------------------------------------------------------
 (1) _lcdInst                                              1     1      0     111
                                              3 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (9) _send_byte                                            1     1      0      89
                                              2 COMRAM     1     1      0
                        _send_nibble
 ---------------------------------------------------------------------------------
 (10) _send_nibble                                         1     1      0      45
                                              1 COMRAM     1     1      0
                            _pulse_e
 ---------------------------------------------------------------------------------
 (11) _pulse_e                                             1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      2     2      0      30
                                              1 COMRAM     2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                             13 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _initLCD
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _send_byte
       _send_nibble
         _pulse_e
     _send_nibble
       _pulse_e
   _lcdInst
     _send_byte
       _send_nibble
         _pulse_e
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _fputc
           _putch
             _send_byte
               _send_nibble
                 _pulse_e
         _isdigit
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
           _toupper
             _islower
   _rtc_set_time
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      24       5       28.1%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     7B      7F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A3      34        0.0%
DATA                 0      0      A3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Apr 09 13:38:04 2019

                __CFG_CPD$ON 000000          ___wmul@multiplicand 0003                  __CFG_BORV$3 000000  
               __CFG_CP0$OFF 000000                 __CFG_CP1$OFF 000000                 __CFG_CP2$OFF 000000  
               __CFG_CP3$OFF 000000                  __CFG_OSC$HS 000000                          l180 1356  
                        l168 17BE                          l178 134E                          l269 1896  
                        l941 1694                 __CFG_CPB$OFF 000000                          u800 1B94  
                        u740 18B8                          u900 1A5A                          u725 1C4A  
                        u726 1C4C                          u920 1BF2                          u760 1900  
                        u930 1BF4                          u850 1BC2                          u860 1BC4  
                        u685 1CB6                          u686 1CB8                          u950 1AF2  
                        u870 1B62                          u790 1B92                          u880 1B64  
                        u890 1A58                          u970 1344                          u990 13B8  
                        _pad 1790                          wreg 000FE8                 __CFG_LVP$OFF 000000  
               __CFG_WDT$OFF 000000                         l1008 1A70                         l1610 17C8  
                       l1604 17A8                         l1700 144A                         l1614 17E0  
                       l1608 17B6                         l1800 10A6                         l1730 1570  
                       l1570 18C0                         l1618 180C                         l1740 15BA  
                       l1732 1574                         l1580 1B08                         l1724 1534  
                       l1708 14C0                         l1820 117E                         l1804 10B0  
                       l1750 15D8                         l1590 1C08                         l1822 118C  
                       l1806 10F2                         l1904 1888                         l1752 1600  
                       l1584 1B1E                         l1672 136A                         l1658 1AF6  
                       l1746 15CA                         l1842 12A0                         l1818 1160  
                       l1756 1634                         l1748 15D2                         l1588 1C04  
                       l1852 12E6                         l1780 1084                         l1686 13BC  
                       l1678 139A                         l1782 1086                         l1848 12DC  
                       l1792 109E                         l1784 1096                         l1858 12FE  
                       l1882 19EE                         l1946 1A9A                         l1892 1848  
                       l1796 10A2                         l1788 109A                         l1884 1A14  
                       l1894 1854                         ?_pad 0015                         l1968 16C2  
                       l1986 16F6                         STR_1 101F                         STR_2 102E  
                       u1000 13EE                         u1010 13F0                         u1100 1500  
                       u1110 1504                         u1030 1428                         u1040 142A  
                       u1140 15B6                         u1060 149C                         u1070 14D0  
                       u1160 1664                         u1065 148A                         u1330 1858  
                       u1170 1666                         u1090 14F2                         u1250 11C4  
                       u1091 14F0                         u1260 11C6                         u1270 11D2  
                       u1407 172A                         _LATD 000F8C                         u1417 1780  
                       u1290 1206                         u1355 19A6                         u1427 191A  
                       u1437 1932                         u1447 1944                         u1457 1966  
                       u1467 1C32                         u1477 1C3C                         _dbuf 0084  
                       _atoi 155E                         _main 169E                         _keys 1001  
                       _prec 007C                         _nout 0080                         pad@i 001C  
                       pad@p 0019                         fsr1h 000FE2                         fsr2h 000FDA  
                       indf2 000FDF                         fsr1l 000FE1                         pad@w 001E  
                       fsr2l 000FD9                         _xtoa 1332                         prodh 000FF4  
                       prodl 000FF3                         start 0000                __CFG_IESO$OFF 000000  
              __CFG_MCLRE$ON 000000                  _toupper$984 000D                 ___param_bank 000000  
                      ??_pad 001B        I2C_Master_Read@ackBit 0002             ?_I2C_Master_Init 000E  
           ?_I2C_Master_Read 0001             ?_I2C_Master_Wait 0001             ?_I2C_Master_Stop 0001  
                      ?_atoi 0008                        ?_main 0001              __end_of___lldiv 18A8  
                      ?_xtoa 0020                 vfpfcnvrt@fmt 0049                 vfpfcnvrt@llu 0051  
                      _TRISD 000F95                __CFG_PWRT$OFF 000000                __CFG_WRT0$OFF 000000  
              __CFG_WRT1$OFF 000000                __CFG_WRT2$OFF 000000                __CFG_WRT3$OFF 000000  
            __end_of_lcdInst 1D2E               __CFG_EBTR0$OFF 000000               __CFG_FCMEN$OFF 000000  
             __CFG_EBTR1$OFF 000000               __CFG_EBTR2$OFF 000000               __CFG_EBTR3$OFF 000000  
              __CFG_WRTB$OFF 000000                __CFG_WRTC$OFF 000000                __CFG_WRTD$OFF 000000  
            __end_of_initLCD 197E               __CFG_EBTRB$OFF 000000                        _flags 007E  
                      _fputc 18A8              __end_of_isalpha 1B6A                        _fputs 1AFE  
            __end_of_isdigit 1BFA                        atoi@n 0015                        pad@fp 0015  
                      atoi@s 0008                        _width 0082                        _putch 1D16  
                      main@i 007B              __end_of_islower 1B9A              __end_of_isspace 1AFE  
            __end_of_isupper 1BCA                        tablat 000FF5                rtc_set_time@i 0004  
            send_nibble@data 0002              __end_of_pulse_e 1C4E                        status 000FD8  
I2C_Master_Read@receivedByte 0003                        xtoa@c 0045                        xtoa@d 0022  
                      xtoa@i 0043                        xtoa@n 003B                        xtoa@p 0037  
                      xtoa@w 0039                        xtoa@x 002A              __end_of_toupper 1A7A  
             __CFG_PBADEN$ON 000000              __initialization 1CBE                 __end_of_atoi 169E  
               __end_of_main 1790                 __end_of_keys 1012                 __end_of_xtoa 155E  
                     ??_atoi 000A                       ??_main 0072                       ??_xtoa 002B  
              __activetblptr 000002            ?_I2C_Master_Start 0001            ?_I2C_Master_Write 0002  
         ??_I2C_Master_Start 0002           ??_I2C_Master_Write 0004                 ?_send_nibble 0001  
                     ?_fputc 0005                       ?_fputs 000E                       ?_putch 0001  
              vfpfcnvrt@done 0059                       _SSPADD 000FC8                       _SSPBUF 000FC9  
             __CFG_XINST$OFF 000000                 vfprintf@cfmt 0064                       ___wmul 1C74  
             __CFG_STVREN$ON 000000                    ??___lldiv 0009                       clear_0 1CC4  
                  ??_lcdInst 0004                       _printf 1C4E                       pad@buf 0017  
                     _strlen 1BFA                    ??_initLCD 0005                       fputc@c 0005  
                     fputs@c 0012                       fputs@i 0013                       fputs@s 000E  
                  ??_isalpha 0003                    ??_isdigit 0003                    ??_islower 0003  
               __mediumconst 0000                    ??_isspace 0003                       tblptrh 000FF7  
                  ??_isupper 0003                       tblptrl 000FF6                       tblptru 000FF8  
           __end_of_vfprintf 1A30                    ??_pulse_e 0001                       xtoa@fp 0020  
                  ??_toupper 0009        pulse_e@interruptState 0001                   __accesstop 0080  
    __end_of__initialization 1CD2                ___rparam_used 000001         __end_of_happynewyear 1019  
             __pcstackCOMRAM 0001                __end_of_fputc 1914                __end_of_fputs 1B36  
              __end_of_putch 1D22                      ??_fputc 0009                      ??_fputs 0012  
                    ??_putch 0004                   __pbssBANK0 0080                      ?___wmul 0001  
         __size_of_send_byte 0012                      ?_printf 0066                      ?_strlen 0001  
         __size_of_vfpfcnvrt 02F4                      _SSPCON1 000FC6                      _SSPCON2 000FC5  
                    _SSPSTAT 000FC7         __size_of_send_nibble 0016                      __Hparam 0000  
                    __Lparam 0000                      ___lldiv 1826              __size_of___wmul 0026  
                  ?_vfprintf 005E                 __psmallconst 1000                      __pcinit 1CBE  
                    __ramtop 1000                      _lcdInst 1D22                      __ptext0 169E  
                    __ptext1 1A7A                      __ptext2 1D2E                      __ptext3 1D38  
                    __ptext4 1D40                      __ptext5 1C4E                      __ptext6 19DA  
                    __ptext7 103E                      __ptext8 1332                      __ptext9 1A30  
            __size_of_printf 0026              __size_of_strlen 002A                      _initLCD 1914  
               __size_of_pad 0096                      _isalpha 1B36                      _isdigit 1BCA  
                    _islower 1B6A                      _isspace 1AC0                      _isupper 1B9A  
   __size_of_I2C_Master_Init 005C     __size_of_I2C_Master_Read 0024     __size_of_I2C_Master_Wait 0012  
   __size_of_I2C_Master_Stop 0008                      atoi@neg 000E                      _pulse_e 1C24  
                    _toupper 1A30         end_of_initialization 1CD2        __end_of_LCD_SIZE_HORZ 101E  
          __end_of_send_byte 1D04        __end_of_LCD_SIZE_VERT 101D                      fputc@fp 0007  
              __Lmediumconst 0000                      fputs@fp 0010    __size_of_I2C_Master_Start 0008  
  __size_of_I2C_Master_Write 000A              ___lldiv@divisor 0005              ___lldiv@counter 000D  
          __end_of_vfpfcnvrt 1332                      postdec2 000FDD                      postinc0 000FEE  
                    postinc1 000FE6                      postinc2 000FDE                   ??_vfprintf 0064  
                    strlen@a 0003                      strlen@s 0001                ?_rtc_set_time 0001  
                  _TRISCbits 000F94                 _happynewyear 1012                send_byte@data 0003  
                vfpfcnvrt@ap 004B                  vfpfcnvrt@fp 0047               __end_of___wmul 1C9A  
             ??_rtc_set_time 0004               __end_of_printf 1C74               __end_of_strlen 1C24  
        start_initialization 1CBE                  __end_of_pad 1826            ??_I2C_Master_Init 0012  
          ??_I2C_Master_Read 0002            ??_I2C_Master_Wait 0001            ??_I2C_Master_Stop 0002  
                vfprintf@fmt 0060                     ??___wmul 0005     I2C_Master_Init@clockFreq 000E  
           __CFG_LPT1OSC$OFF 000000                     ??_printf 006E                     ??_strlen 0003  
                __pbssCOMRAM 007C             _I2C_Master_Start 1D40             _I2C_Master_Write 1D2E  
          __CFG_CCP2MX$PORTC 000000                     ?___lldiv 0001                     ?_lcdInst 0001  
          __size_of_vfprintf 0056                     ?_initLCD 0001                  __smallconst 1000  
                   ?_isalpha 0001                     ?_isdigit 0001                     ?_islower 0001  
                   ?_isspace 0001                     ?_isupper 0001                ??_send_nibble 0002  
                   ?_pulse_e 0001               __size_of_fputc 006C               __size_of_fputs 0038  
                   ?_toupper 0007               __size_of_putch 000C               ___wmul@product 0005  
                   _LATDbits 000F8C         __end_of_rtc_set_time 1AC0                    _send_byte 1CF2  
             _LCD_LINE1_ADDR 101B               _LCD_LINE2_ADDR 101E               _LCD_LINE3_ADDR 101A  
             _LCD_LINE4_ADDR 1019             __CFG_WDTPS$32768 000000                    _vfpfcnvrt 103E  
          ___wmul@multiplier 0001                   vfpfcnvrt@c 005D       __end_of_LCD_LINE1_ADDR 101C  
     __end_of_LCD_LINE2_ADDR 101F       __end_of_LCD_LINE3_ADDR 101B       __end_of_LCD_LINE4_ADDR 101A  
        __end_of_send_nibble 1CF2                   ?_send_byte 0001                     __Hrparam 0000  
                 vfprintf@ap 0062                     __Lrparam 0000                   vfprintf@fp 005E  
         __CFG_BOREN$SBORDIS 000000             __size_of___lldiv 0082                   ?_vfpfcnvrt 0047  
           __size_of_lcdInst 000C              _I2C_Master_Init 197E              _I2C_Master_Read 1C9A  
           __size_of_initLCD 006A              _I2C_Master_Wait 1D04                     _atoi$892 0010  
                   _atoi$893 0014                     _atoi$894 0012              _I2C_Master_Stop 1D38  
           __size_of_isalpha 0034             __size_of_isdigit 0030             __size_of_islower 0030  
           __size_of_isspace 003E                     __ptext10 1B6A                     __ptext11 1790  
                   __ptext20 1BCA                     __ptext12 1BFA                     __ptext21 1C74  
                   __ptext13 1AFE                     __ptext30 1826                     __ptext22 1914  
                   __ptext14 18A8                     __ptext23 1D22                     __ptext15 1D16  
                   __ptext24 1CF2                     __ptext16 1B9A                     __ptext25 1CDC  
                   __ptext17 1B36                     __ptext26 1C24                     __ptext18 155E  
                   __ptext27 1C9A                     __ptext19 1AC0                     __ptext28 1D04  
                   __ptext29 197E             __size_of_isupper 0030             __size_of_pulse_e 002A  
           __size_of_toupper 004A                __size_of_atoi 0140                __size_of_main 00F2  
              __size_of_xtoa 022C                     _xtoa$421 0033                     _xtoa$422 0035  
                   _vfprintf 19DA                    printf@fmt 0066                     main@time 0074  
                _isspace$919 0007  I2C_Master_Write@byteToWrite 0002                    putch@data 0004  
   __end_of_I2C_Master_Start 1D48     __end_of_I2C_Master_Write 1D38                   _INTCONbits 000FF2  
                   isalpha@c 0001                     isdigit@c 0001                  _send_nibble 1CDC  
      __size_of_rtc_set_time 0046                _LCD_SIZE_HORZ 101D                     islower@c 0001  
              _LCD_SIZE_VERT 101C                     isspace@c 0001             ___lldiv@dividend 0001  
                ??_send_byte 0003                     isupper@c 0001                     printf@ap 0070  
    __end_of_I2C_Master_Init 19DA      __end_of_I2C_Master_Read 1CBE      __end_of_I2C_Master_Wait 1D16  
    __end_of_I2C_Master_Stop 1D40                  ??_vfpfcnvrt 004D                  lcdInst@data 0004  
              _vfpfcnvrt$437 005B             ___lldiv@quotient 0009                 _rtc_set_time 1A7A  
                   toupper@c 0007                  _SSPCON1bits 000FC6                  _SSPCON2bits 000FC5  
