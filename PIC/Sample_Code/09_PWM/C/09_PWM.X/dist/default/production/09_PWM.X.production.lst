

Microchip Technology PIC18 LITE Macro Assembler V1.43 build -156212558 
                                                                                               Tue Dec 11 01:21:54 2018

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31  0000                     
    32                           ; Version 1.43
    33                           ; Generated 25/07/2017 GMT
    34                           ; 
    35                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F4620 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     
    67                           	psect	smallconst
    68  001000                     __psmallconst:
    69                           	opt stack 0
    70  001000  00                 	db	0
    71  001001                     sin@coeff_a:
    72                           	opt stack 0
    73  001001  F4                 	db	244
    74  001002  4A                 	db	74
    75  001003  48                 	db	72
    76  001004  95                 	db	149
    77  001005  95                 	db	149
    78  001006  C7                 	db	199
    79  001007  C1                 	db	193
    80  001008  DC                 	db	220
    81  001009  45                 	db	69
    82  00100A  DC                 	db	220
    83  00100B  6D                 	db	109
    84  00100C  C3                 	db	195
    85  00100D  B3                 	db	179
    86  00100E  33                 	db	51
    87  00100F  40                 	db	64
    88  001010                     __end_ofsin@coeff_a:
    89                           	opt stack 0
    90  001010                     sin@coeff_b:
    91                           	opt stack 0
    92  001010  34                 	db	52
    93  001011  01                 	db	1
    94  001012  48                 	db	72
    95  001013  9D                 	db	157
    96  001014  B0                 	db	176
    97  001015  45                 	db	69
    98  001016  00                 	db	0
    99  001017  DA                 	db	218
   100  001018  42                 	db	66
   101  001019  00                 	db	0
   102  00101A  80                 	db	128
   103  00101B  3F                 	db	63
   104  00101C                     __end_ofsin@coeff_b:
   105                           	opt stack 0
   106  0000                     _TRISCbits	set	3988
   107  0000                     _OSCTUNEbits	set	3995
   108  0000                     _OSCCON	set	4051
   109  0000                     _CCPR1L	set	4030
   110  0000                     _PR2	set	4043
   111  0000                     _TMR2ON	set	32338
   112  0000                     _T2CKPS1	set	32337
   113  0000                     _T2CKPS0	set	32336
   114  0000                     _CCP1M0	set	32232
   115  0000                     _CCP1M1	set	32233
   116  0000                     _CCP1M2	set	32234
   117  0000                     _CCP1M3	set	32235
   118  0000                     _P1M0	set	32238
   119  0000                     _P1M1	set	32239
   120  0000                     _CCP1Y	set	32236
   121  0000                     _CCP1X	set	32237
   122                           
   123                           ; #config settings
   124  00101C  00                 	db	0	; dummy byte at the end
   125  0000                     
   126                           	psect	cinit
   127  001EEC                     __pcinit:
   128                           	opt stack 0
   129  001EEC                     start_initialization:
   130                           	opt stack 0
   131  001EEC                     __initialization:
   132                           	opt stack 0
   133                           
   134                           ; Clear objects allocated to COMRAM (2 bytes)
   135  001EEC  6A7B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   136  001EEE  6A7A               	clrf	__pbssCOMRAM& (0+255),c
   137  001EF0                     end_of_initialization:
   138                           	opt stack 0
   139  001EF0                     __end_of__initialization:
   140                           	opt stack 0
   141  001EF0  0E00               	movlw	low (__Lsmallconst shr (0+16))
   142  001EF2  6EF8               	movwf	tblptru,c
   143  001EF4  0E10               	movlw	high __Lsmallconst
   144  001EF6  6EF7               	movwf	tblptrh,c
   145  001EF8  0100               	movlb	0
   146  001EFA  EF0F  F00A         	goto	_main	;jump to C main() function
   147                           tblptru	equ	0xFF8
   148                           tblptrh	equ	0xFF7
   149                           
   150                           	psect	bssCOMRAM
   151  00007A                     __pbssCOMRAM:
   152                           	opt stack 0
   153  00007A                     _errno:
   154                           	opt stack 0
   155  00007A                     	ds	2
   156                           tblptru	equ	0xFF8
   157                           tblptrh	equ	0xFF7
   158                           
   159                           	psect	cstackCOMRAM
   160  000001                     __pcstackCOMRAM:
   161                           	opt stack 0
   162  000001                     ?___wmul:
   163                           	opt stack 0
   164  000001                     ?___ftpack:
   165                           	opt stack 0
   166  000001                     ?___ftneg:
   167                           	opt stack 0
   168  000001                     ?___lmul:
   169                           	opt stack 0
   170  000001                     ___wmul@multiplier:
   171                           	opt stack 0
   172  000001                     ___ftpack@arg:
   173                           	opt stack 0
   174  000001                     ___ftge@ff1:
   175                           	opt stack 0
   176  000001                     ___ftneg@f1:
   177                           	opt stack 0
   178  000001                     frexp@value:
   179                           	opt stack 0
   180  000001                     ___lmul@multiplier:
   181                           	opt stack 0
   182                           
   183                           ; 4 bytes @ 0x0
   184  000001                     	ds	2
   185  000003                     ___wmul@multiplicand:
   186                           	opt stack 0
   187                           
   188                           ; 2 bytes @ 0x2
   189  000003                     	ds	1
   190  000004                     ___ftpack@exp:
   191                           	opt stack 0
   192  000004                     frexp@eptr:
   193                           	opt stack 0
   194  000004                     ___ftge@ff2:
   195                           	opt stack 0
   196                           
   197                           ; 3 bytes @ 0x3
   198  000004                     	ds	1
   199  000005                     ___ftpack@sign:
   200                           	opt stack 0
   201  000005                     ___wmul@product:
   202                           	opt stack 0
   203  000005                     ___lmul@multiplicand:
   204                           	opt stack 0
   205                           
   206                           ; 4 bytes @ 0x4
   207  000005                     	ds	1
   208  000006                     ??___ftpack:
   209  000006                     ??_frexp:
   210                           
   211                           ; 1 bytes @ 0x5
   212  000006                     	ds	1
   213  000007                     ??___ftge:
   214                           
   215                           ; 1 bytes @ 0x6
   216  000007                     	ds	2
   217  000009                     ?___lltoft:
   218                           	opt stack 0
   219  000009                     ?___lwtoft:
   220                           	opt stack 0
   221  000009                     ___lwtoft@c:
   222                           	opt stack 0
   223  000009                     ___lmul@product:
   224                           	opt stack 0
   225  000009                     ___lltoft@c:
   226                           	opt stack 0
   227                           
   228                           ; 4 bytes @ 0x8
   229  000009                     	ds	3
   230  00000C                     
   231                           ; 1 bytes @ 0xB
   232  00000C                     	ds	1
   233  00000D                     ??___lltoft:
   234  00000D                     ?___lldiv:
   235                           	opt stack 0
   236  00000D                     ___lldiv@dividend:
   237                           	opt stack 0
   238                           
   239                           ; 4 bytes @ 0xC
   240  00000D                     	ds	4
   241  000011                     ___lltoft@exp:
   242                           	opt stack 0
   243  000011                     ___lldiv@divisor:
   244                           	opt stack 0
   245                           
   246                           ; 4 bytes @ 0x10
   247  000011                     	ds	1
   248  000012                     ?___ftmul:
   249                           	opt stack 0
   250  000012                     ___ftmul@f1:
   251                           	opt stack 0
   252                           
   253                           ; 3 bytes @ 0x11
   254  000012                     	ds	3
   255  000015                     ___ftmul@f2:
   256                           	opt stack 0
   257  000015                     ___lldiv@quotient:
   258                           	opt stack 0
   259                           
   260                           ; 4 bytes @ 0x14
   261  000015                     	ds	3
   262  000018                     ??___ftmul:
   263                           
   264                           ; 1 bytes @ 0x17
   265  000018                     	ds	1
   266  000019                     ___lldiv@counter:
   267                           	opt stack 0
   268                           
   269                           ; 1 bytes @ 0x18
   270  000019                     	ds	2
   271  00001B                     ___ftmul@exp:
   272                           	opt stack 0
   273                           
   274                           ; 1 bytes @ 0x1A
   275  00001B                     	ds	1
   276  00001C                     ___ftmul@f3_as_product:
   277                           	opt stack 0
   278                           
   279                           ; 3 bytes @ 0x1B
   280  00001C                     	ds	3
   281  00001F                     ___ftmul@cntr:
   282                           	opt stack 0
   283                           
   284                           ; 1 bytes @ 0x1E
   285  00001F                     	ds	1
   286  000020                     ___ftmul@sign:
   287                           	opt stack 0
   288                           
   289                           ; 1 bytes @ 0x1F
   290  000020                     	ds	1
   291  000021                     ?___ftdiv:
   292                           	opt stack 0
   293  000021                     ___ftdiv@f1:
   294                           	opt stack 0
   295                           
   296                           ; 3 bytes @ 0x20
   297  000021                     	ds	3
   298  000024                     ___ftdiv@f2:
   299                           	opt stack 0
   300                           
   301                           ; 3 bytes @ 0x23
   302  000024                     	ds	3
   303  000027                     ??___ftdiv:
   304                           
   305                           ; 1 bytes @ 0x26
   306  000027                     	ds	3
   307  00002A                     ___ftdiv@cntr:
   308                           	opt stack 0
   309                           
   310                           ; 1 bytes @ 0x29
   311  00002A                     	ds	1
   312  00002B                     ___ftdiv@f3:
   313                           	opt stack 0
   314                           
   315                           ; 3 bytes @ 0x2A
   316  00002B                     	ds	3
   317  00002E                     ___ftdiv@exp:
   318                           	opt stack 0
   319                           
   320                           ; 1 bytes @ 0x2D
   321  00002E                     	ds	1
   322  00002F                     ___ftdiv@sign:
   323                           	opt stack 0
   324                           
   325                           ; 1 bytes @ 0x2E
   326  00002F                     	ds	1
   327  000030                     ?___ftadd:
   328                           	opt stack 0
   329  000030                     ?___fttol:
   330                           	opt stack 0
   331  000030                     ___ftadd@f1:
   332                           	opt stack 0
   333  000030                     ___fttol@f1:
   334                           	opt stack 0
   335                           
   336                           ; 3 bytes @ 0x2F
   337  000030                     	ds	3
   338  000033                     ___ftadd@f2:
   339                           	opt stack 0
   340                           
   341                           ; 3 bytes @ 0x32
   342  000033                     	ds	1
   343  000034                     ??___fttol:
   344                           
   345                           ; 1 bytes @ 0x33
   346  000034                     	ds	2
   347  000036                     ??___ftadd:
   348                           
   349                           ; 1 bytes @ 0x35
   350  000036                     	ds	3
   351  000039                     ___ftadd@sign:
   352                           	opt stack 0
   353  000039                     ___fttol@sign1:
   354                           	opt stack 0
   355                           
   356                           ; 1 bytes @ 0x38
   357  000039                     	ds	1
   358  00003A                     ___ftadd@exp2:
   359                           	opt stack 0
   360  00003A                     ___fttol@lval:
   361                           	opt stack 0
   362                           
   363                           ; 4 bytes @ 0x39
   364  00003A                     	ds	1
   365  00003B                     ___ftadd@exp1:
   366                           	opt stack 0
   367                           
   368                           ; 1 bytes @ 0x3A
   369  00003B                     	ds	1
   370  00003C                     ?_eval_poly:
   371                           	opt stack 0
   372  00003C                     eval_poly@x:
   373                           	opt stack 0
   374                           
   375                           ; 3 bytes @ 0x3B
   376  00003C                     	ds	2
   377  00003E                     ___fttol@exp1:
   378                           	opt stack 0
   379                           
   380                           ; 1 bytes @ 0x3D
   381  00003E                     	ds	1
   382  00003F                     ?___altoft:
   383                           	opt stack 0
   384  00003F                     eval_poly@d:
   385                           	opt stack 0
   386  00003F                     set_pwm_duty_cycle@duty:
   387                           	opt stack 0
   388  00003F                     ___altoft@c:
   389                           	opt stack 0
   390                           
   391                           ; 4 bytes @ 0x3E
   392  00003F                     	ds	2
   393  000041                     eval_poly@n:
   394                           	opt stack 0
   395                           
   396                           ; 2 bytes @ 0x40
   397  000041                     	ds	1
   398  000042                     ??_set_pwm_duty_cycle:
   399                           
   400                           ; 1 bytes @ 0x41
   401  000042                     	ds	1
   402  000043                     ??_eval_poly:
   403  000043                     ??___altoft:
   404                           
   405                           ; 1 bytes @ 0x42
   406  000043                     	ds	1
   407  000044                     set_pwm_duty_cycle@max_duty_val:
   408                           	opt stack 0
   409                           
   410                           ; 2 bytes @ 0x43
   411  000044                     	ds	1
   412  000045                     eval_poly@res:
   413                           	opt stack 0
   414                           
   415                           ; 3 bytes @ 0x44
   416  000045                     	ds	1
   417  000046                     set_pwm_duty_cycle@duty_val:
   418                           	opt stack 0
   419                           
   420                           ; 2 bytes @ 0x45
   421  000046                     	ds	1
   422  000047                     ___altoft@exp:
   423                           	opt stack 0
   424                           
   425                           ; 1 bytes @ 0x46
   426  000047                     	ds	1
   427  000048                     ___altoft@sign:
   428                           	opt stack 0
   429                           
   430                           ; 1 bytes @ 0x47
   431  000048                     	ds	1
   432  000049                     ?_floor:
   433                           	opt stack 0
   434  000049                     floor@x:
   435                           	opt stack 0
   436                           
   437                           ; 3 bytes @ 0x48
   438  000049                     	ds	3
   439  00004C                     floor@i:
   440                           	opt stack 0
   441                           
   442                           ; 3 bytes @ 0x4B
   443  00004C                     	ds	3
   444  00004F                     floor@expon:
   445                           	opt stack 0
   446                           
   447                           ; 2 bytes @ 0x4E
   448  00004F                     	ds	2
   449  000051                     ?___ftsub:
   450                           	opt stack 0
   451  000051                     ___ftsub@f1:
   452                           	opt stack 0
   453                           
   454                           ; 3 bytes @ 0x50
   455  000051                     	ds	3
   456  000054                     ___ftsub@f2:
   457                           	opt stack 0
   458                           
   459                           ; 3 bytes @ 0x53
   460  000054                     	ds	3
   461  000057                     ?_sin:
   462                           	opt stack 0
   463  000057                     sin@f:
   464                           	opt stack 0
   465                           
   466                           ; 3 bytes @ 0x56
   467  000057                     	ds	3
   468  00005A                     sin@y:
   469                           	opt stack 0
   470                           
   471                           ; 3 bytes @ 0x59
   472  00005A                     	ds	3
   473  00005D                     _sin$737:
   474                           	opt stack 0
   475                           
   476                           ; 3 bytes @ 0x5C
   477  00005D                     	ds	3
   478  000060                     sin@x2:
   479                           	opt stack 0
   480                           
   481                           ; 3 bytes @ 0x5F
   482  000060                     	ds	3
   483  000063                     sin@sgn:
   484                           	opt stack 0
   485                           
   486                           ; 1 bytes @ 0x62
   487  000063                     	ds	1
   488  000064                     ??_main:
   489                           
   490                           ; 1 bytes @ 0x63
   491  000064                     	ds	4
   492  000068                     main@FREQUENCY:
   493                           	opt stack 0
   494                           
   495                           ; 4 bytes @ 0x67
   496  000068                     	ds	4
   497  00006C                     main@val:
   498                           	opt stack 0
   499                           
   500                           ; 3 bytes @ 0x6B
   501  00006C                     	ds	3
   502  00006F                     _main$735:
   503                           	opt stack 0
   504                           
   505                           ; 3 bytes @ 0x6E
   506  00006F                     	ds	3
   507  000072                     _main$736:
   508                           	opt stack 0
   509                           
   510                           ; 3 bytes @ 0x71
   511  000072                     	ds	3
   512  000075                     main@tick:
   513                           	opt stack 0
   514                           
   515                           ; 4 bytes @ 0x74
   516  000075                     	ds	4
   517  000079                     main@TIMER2_PRESCALER:
   518                           	opt stack 0
   519                           
   520                           ; 1 bytes @ 0x78
   521  000079                     	ds	1
   522                           tblptru	equ	0xFF8
   523                           tblptrh	equ	0xFF7
   524                           
   525 ;;
   526 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   527 ;;
   528 ;; *************** function _main *****************
   529 ;; Defined at:
   530 ;;		line 99 in file "main.c"
   531 ;; Parameters:    Size  Location     Type
   532 ;;		None
   533 ;; Auto vars:     Size  Location     Type
   534 ;;  val             3  107[COMRAM] float 
   535 ;;  tick            4  116[COMRAM] unsigned long 
   536 ;;  FREQUENCY       4  103[COMRAM] const unsigned long 
   537 ;;  TIMER2_PRESC    1  120[COMRAM] const unsigned char 
   538 ;; Return value:  Size  Location     Type
   539 ;;                  1    wreg      void 
   540 ;; Registers used:
   541 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   542 ;; Tracked objects:
   543 ;;		On entry : 0/0
   544 ;;		On exit  : 0/0
   545 ;;		Unchanged: 0/0
   546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   548 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   549 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   550 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   551 ;;Total ram usage:       22 bytes
   552 ;; Hardware stack levels required when called:    4
   553 ;; This function calls:
   554 ;;		___ftadd
   555 ;;		___ftdiv
   556 ;;		___ftmul
   557 ;;		___lldiv
   558 ;;		___lltoft
   559 ;;		___lmul
   560 ;;		_set_pwm_duty_cycle
   561 ;;		_sin
   562 ;; This function is called by:
   563 ;;		Startup code after reset
   564 ;; This function uses a non-reentrant model
   565 ;;
   566                           
   567                           	psect	text0
   568  00141E                     __ptext0:
   569                           	opt stack 0
   570  00141E                     _main:
   571                           	opt stack 27
   572                           
   573                           ;main.c: 101: OSCCON = OSCCON | 0b01110000;
   574                           
   575                           ;incstack = 0
   576  00141E  50D3               	movf	4051,w,c	;volatile
   577  001420  0970               	iorlw	112
   578  001422  6ED3               	movwf	4051,c	;volatile
   579                           
   580                           ;main.c: 104: OSCTUNEbits.PLLEN = 1;
   581  001424  8C9B               	bsf	3995,6,c	;volatile
   582                           
   583                           ;main.c: 107: TRISCbits.TRISC2 = 1;
   584  001426  8494               	bsf	3988,2,c	;volatile
   585                           
   586                           ;main.c: 110: const unsigned long FREQUENCY = 3100;
   587  001428  0E1C               	movlw	28
   588  00142A  6E68               	movwf	main@FREQUENCY,c
   589  00142C  0E0C               	movlw	12
   590  00142E  6E69               	movwf	main@FREQUENCY+1,c
   591  001430  0E00               	movlw	0
   592  001432  6E6A               	movwf	main@FREQUENCY+2,c
   593  001434  0E00               	movlw	0
   594  001436  6E6B               	movwf	main@FREQUENCY+3,c
   595                           
   596                           ;main.c: 111: const unsigned char TIMER2_PRESCALER = 16;
   597  001438  0E10               	movlw	16
   598  00143A  6E79               	movwf	main@TIMER2_PRESCALER,c
   599                           
   600                           ;main.c: 112: PR2 = (32000000 / (FREQUENCY * 4 * TIMER2_PRESCALER)) - 1;
   601  00143C  0E00               	movlw	0
   602  00143E  6E0D               	movwf	___lldiv@dividend,c
   603  001440  0E48               	movlw	72
   604  001442  6E0E               	movwf	___lldiv@dividend+1,c
   605  001444  0EE8               	movlw	232
   606  001446  6E0F               	movwf	___lldiv@dividend+2,c
   607  001448  0E01               	movlw	1
   608  00144A  6E10               	movwf	___lldiv@dividend+3,c
   609  00144C  C068  F064         	movff	main@FREQUENCY,??_main
   610  001450  C069  F065         	movff	main@FREQUENCY+1,??_main+1
   611  001454  C06A  F066         	movff	main@FREQUENCY+2,??_main+2
   612  001458  C06B  F067         	movff	main@FREQUENCY+3,??_main+3
   613  00145C  0E02               	movlw	2
   614  00145E                     u1585:
   615  00145E  90D8               	bcf	status,0,c
   616  001460  3664               	rlcf	??_main,f,c
   617  001462  3665               	rlcf	??_main+1,f,c
   618  001464  3666               	rlcf	??_main+2,f,c
   619  001466  3667               	rlcf	??_main+3,f,c
   620  001468  2EE8               	decfsz	wreg,f,c
   621  00146A  D7F9               	goto	u1585
   622  00146C  C064  F001         	movff	??_main,___lmul@multiplier
   623  001470  C065  F002         	movff	??_main+1,___lmul@multiplier+1
   624  001474  C066  F003         	movff	??_main+2,___lmul@multiplier+2
   625  001478  C067  F004         	movff	??_main+3,___lmul@multiplier+3
   626  00147C  5079               	movf	main@TIMER2_PRESCALER,w,c
   627  00147E  6E05               	movwf	___lmul@multiplicand,c
   628  001480  6A06               	clrf	___lmul@multiplicand+1,c
   629  001482  6A07               	clrf	___lmul@multiplicand+2,c
   630  001484  6A08               	clrf	___lmul@multiplicand+3,c
   631  001486  ECF4  F00E         	call	___lmul	;wreg free
   632  00148A  C001  F011         	movff	?___lmul,___lldiv@divisor
   633  00148E  C002  F012         	movff	?___lmul+1,___lldiv@divisor+1
   634  001492  C003  F013         	movff	?___lmul+2,___lldiv@divisor+2
   635  001496  C004  F014         	movff	?___lmul+3,___lldiv@divisor+3
   636  00149A  EC0D  F00E         	call	___lldiv	;wreg free
   637  00149E  040D               	decf	?___lldiv,w,c
   638  0014A0  6ECB               	movwf	4043,c	;volatile
   639                           
   640                           ;main.c: 115: P1M1 = 0;
   641  0014A2  9EBD               	bcf	4029,7,c	;volatile
   642                           
   643                           ;main.c: 116: P1M0 = 0;
   644  0014A4  9CBD               	bcf	4029,6,c	;volatile
   645                           
   646                           ;main.c: 117: CCP1M3 = 1;
   647  0014A6  86BD               	bsf	4029,3,c	;volatile
   648                           
   649                           ;main.c: 118: CCP1M2 = 1;
   650  0014A8  84BD               	bsf	4029,2,c	;volatile
   651                           
   652                           ;main.c: 119: CCP1M1 = 0;
   653  0014AA  92BD               	bcf	4029,1,c	;volatile
   654                           
   655                           ;main.c: 120: CCP1M0 = 0;
   656  0014AC  90BD               	bcf	4029,0,c	;volatile
   657                           
   658                           ;main.c: 123: T2CKPS0 = 1;
   659  0014AE  80CA               	bsf	4042,0,c	;volatile
   660                           
   661                           ;main.c: 124: T2CKPS1 = 1;
   662  0014B0  82CA               	bsf	4042,1,c	;volatile
   663                           
   664                           ;main.c: 127: TMR2ON = 1;
   665  0014B2  84CA               	bsf	4042,2,c	;volatile
   666                           
   667                           ;main.c: 130: TRISCbits.TRISC2 = 0;
   668  0014B4  9494               	bcf	3988,2,c	;volatile
   669                           
   670                           ;main.c: 134: unsigned long tick = 0;
   671  0014B6  0E00               	movlw	0
   672  0014B8  6E75               	movwf	main@tick,c
   673  0014BA  0E00               	movlw	0
   674  0014BC  6E76               	movwf	main@tick+1,c
   675  0014BE  0E00               	movlw	0
   676  0014C0  6E77               	movwf	main@tick+2,c
   677  0014C2  0E00               	movlw	0
   678  0014C4  6E78               	movwf	main@tick+3,c
   679  0014C6                     
   680                           ;main.c: 136: float val = 0.5 * (sin(2.0 * 3.14159265358979323846 * tick / 1000.0) + 1) 
      +                          * 100.0;
   681  0014C6  0E00               	movlw	0
   682  0014C8  6E24               	movwf	___ftdiv@f2,c
   683  0014CA  0E7A               	movlw	122
   684  0014CC  6E25               	movwf	___ftdiv@f2+1,c
   685  0014CE  0E44               	movlw	68
   686  0014D0  6E26               	movwf	___ftdiv@f2+2,c
   687  0014D2  0E10               	movlw	16
   688  0014D4  6E15               	movwf	___ftmul@f2,c
   689  0014D6  0EC9               	movlw	201
   690  0014D8  6E16               	movwf	___ftmul@f2+1,c
   691  0014DA  0E40               	movlw	64
   692  0014DC  6E17               	movwf	___ftmul@f2+2,c
   693  0014DE  C075  F009         	movff	main@tick,___lltoft@c
   694  0014E2  C076  F00A         	movff	main@tick+1,___lltoft@c+1
   695  0014E6  C077  F00B         	movff	main@tick+2,___lltoft@c+2
   696  0014EA  C078  F00C         	movff	main@tick+3,___lltoft@c+3
   697  0014EE  ECC6  F00E         	call	___lltoft	;wreg free
   698  0014F2  C009  F012         	movff	?___lltoft,___ftmul@f1
   699  0014F6  C00A  F013         	movff	?___lltoft+1,___ftmul@f1+1
   700  0014FA  C00B  F014         	movff	?___lltoft+2,___ftmul@f1+2
   701  0014FE  EC50  F00B         	call	___ftmul	;wreg free
   702  001502  C012  F021         	movff	?___ftmul,___ftdiv@f1
   703  001506  C013  F022         	movff	?___ftmul+1,___ftdiv@f1+1
   704  00150A  C014  F023         	movff	?___ftmul+2,___ftdiv@f1+2
   705  00150E  ECCA  F00B         	call	___ftdiv	;wreg free
   706  001512  C021  F06F         	movff	?___ftdiv,_main$735
   707  001516  C022  F070         	movff	?___ftdiv+1,_main$735+1
   708  00151A  C023  F071         	movff	?___ftdiv+2,_main$735+2
   709                           
   710                           ;main.c: 136: float val = 0.5 * (sin(2.0 * 3.14159265358979323846 * tick / 1000.0) + 1) 
      +                          * 100.0;
   711  00151E  C06F  F057         	movff	_main$735,sin@f
   712  001522  C070  F058         	movff	_main$735+1,sin@f+1
   713  001526  C071  F059         	movff	_main$735+2,sin@f+2
   714  00152A  EC0F  F008         	call	_sin	;wreg free
   715  00152E  C057  F072         	movff	?_sin,_main$736
   716  001532  C058  F073         	movff	?_sin+1,_main$736+1
   717  001536  C059  F074         	movff	?_sin+2,_main$736+2
   718                           
   719                           ;main.c: 136: float val = 0.5 * (sin(2.0 * 3.14159265358979323846 * tick / 1000.0) + 1) 
      +                          * 100.0;
   720  00153A  0E00               	movlw	0
   721  00153C  6E33               	movwf	___ftadd@f2,c
   722  00153E  0E80               	movlw	128
   723  001540  6E34               	movwf	___ftadd@f2+1,c
   724  001542  0E3F               	movlw	63
   725  001544  6E35               	movwf	___ftadd@f2+2,c
   726  001546  C072  F030         	movff	_main$736,___ftadd@f1
   727  00154A  C073  F031         	movff	_main$736+1,___ftadd@f1+1
   728  00154E  C074  F032         	movff	_main$736+2,___ftadd@f1+2
   729  001552  EC39  F009         	call	___ftadd	;wreg free
   730  001556  C030  F012         	movff	?___ftadd,___ftmul@f1
   731  00155A  C031  F013         	movff	?___ftadd+1,___ftmul@f1+1
   732  00155E  C032  F014         	movff	?___ftadd+2,___ftmul@f1+2
   733  001562  0E00               	movlw	0
   734  001564  6E15               	movwf	___ftmul@f2,c
   735  001566  0E48               	movlw	72
   736  001568  6E16               	movwf	___ftmul@f2+1,c
   737  00156A  0E42               	movlw	66
   738  00156C  6E17               	movwf	___ftmul@f2+2,c
   739  00156E  EC50  F00B         	call	___ftmul	;wreg free
   740  001572  C012  F06C         	movff	?___ftmul,main@val
   741  001576  C013  F06D         	movff	?___ftmul+1,main@val+1
   742  00157A  C014  F06E         	movff	?___ftmul+2,main@val+2
   743                           
   744                           ;main.c: 137: set_pwm_duty_cycle(val);
   745  00157E  C06C  F03F         	movff	main@val,set_pwm_duty_cycle@duty
   746  001582  C06D  F040         	movff	main@val+1,set_pwm_duty_cycle@duty+1
   747  001586  C06E  F041         	movff	main@val+2,set_pwm_duty_cycle@duty+2
   748  00158A  EC15  F00D         	call	_set_pwm_duty_cycle	;wreg free
   749                           
   750                           ;main.c: 138: tick++;
   751  00158E  0E01               	movlw	1
   752  001590  2675               	addwf	main@tick,f,c
   753  001592  0E00               	movlw	0
   754  001594  2276               	addwfc	main@tick+1,f,c
   755  001596  2277               	addwfc	main@tick+2,f,c
   756  001598  2278               	addwfc	main@tick+3,f,c
   757                           
   758                           ;main.c: 139: _delay((unsigned long)((1)*(32000000/4000.0)));
   759  00159A  0E0B               	movlw	11
   760  00159C  6E64               	movwf	??_main& (0+255),c
   761  00159E  0E62               	movlw	98
   762  0015A0                     u1597:
   763  0015A0  2EE8               	decfsz	wreg,f,c
   764  0015A2  D7FE               	bra	u1597
   765  0015A4  2E64               	decfsz	??_main& (0+255),f,c
   766  0015A6  D7FC               	bra	u1597
   767  0015A8  D000               	nop2	
   768  0015AA  D78D               	goto	l45
   769  0015AC                     __end_of_main:
   770                           	opt stack 0
   771                           tblptru	equ	0xFF8
   772                           tblptrh	equ	0xFF7
   773                           wreg	equ	0xFE8
   774                           status	equ	0xFD8
   775                           
   776 ;; *************** function _sin *****************
   777 ;; Defined at:
   778 ;;		line 13 in file "D:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\sin.c"
   779 ;; Parameters:    Size  Location     Type
   780 ;;  f               3   86[COMRAM] void 
   781 ;; Auto vars:     Size  Location     Type
   782 ;;  x2              3   95[COMRAM] void 
   783 ;;  y               3   89[COMRAM] void 
   784 ;;  sgn             1   98[COMRAM] unsigned char 
   785 ;; Return value:  Size  Location     Type
   786 ;;                  3   86[COMRAM] unsigned char 
   787 ;; Registers used:
   788 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   789 ;; Tracked objects:
   790 ;;		On entry : 0/0
   791 ;;		On exit  : 0/0
   792 ;;		Unchanged: 0/0
   793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   794 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   795 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   797 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   798 ;;Total ram usage:       13 bytes
   799 ;; Hardware stack levels used:    1
   800 ;; Hardware stack levels required when called:    3
   801 ;; This function calls:
   802 ;;		___ftadd
   803 ;;		___ftdiv
   804 ;;		___ftge
   805 ;;		___ftmul
   806 ;;		___ftneg
   807 ;;		___ftsub
   808 ;;		_eval_poly
   809 ;;		_floor
   810 ;; This function is called by:
   811 ;;		_main
   812 ;; This function uses a non-reentrant model
   813 ;;
   814                           
   815                           	psect	text1
   816  00101E                     __ptext1:
   817                           	opt stack 0
   818  00101E                     _sin:
   819                           	opt stack 27
   820                           
   821                           ;incstack = 0
   822  00101E  0E00               	movlw	0
   823  001020  6E63               	movwf	sin@sgn,c
   824  001022  AE59               	btfss	sin@f+2,7,c
   825  001024  D010               	goto	l484
   826  001026  C057  F001         	movff	sin@f,___ftneg@f1
   827  00102A  C058  F002         	movff	sin@f+1,___ftneg@f1+1
   828  00102E  C059  F003         	movff	sin@f+2,___ftneg@f1+2
   829  001032  EC52  F00F         	call	___ftneg	;wreg free
   830  001036  C001  F057         	movff	?___ftneg,sin@f
   831  00103A  C002  F058         	movff	?___ftneg+1,sin@f+1
   832  00103E  C003  F059         	movff	?___ftneg+2,sin@f+2
   833  001042  0E01               	movlw	1
   834  001044  6E63               	movwf	sin@sgn,c
   835  001046                     l484:
   836  001046  C057  F012         	movff	sin@f,___ftmul@f1
   837  00104A  C058  F013         	movff	sin@f+1,___ftmul@f1+1
   838  00104E  C059  F014         	movff	sin@f+2,___ftmul@f1+2
   839  001052  0EFA               	movlw	250
   840  001054  6E15               	movwf	___ftmul@f2,c
   841  001056  0E22               	movlw	34
   842  001058  6E16               	movwf	___ftmul@f2+1,c
   843  00105A  0E3E               	movlw	62
   844  00105C  6E17               	movwf	___ftmul@f2+2,c
   845  00105E  EC50  F00B         	call	___ftmul	;wreg free
   846  001062  C012  F057         	movff	?___ftmul,sin@f
   847  001066  C013  F058         	movff	?___ftmul+1,sin@f+1
   848  00106A  C014  F059         	movff	?___ftmul+2,sin@f+2
   849  00106E  C057  F051         	movff	sin@f,___ftsub@f1
   850  001072  C058  F052         	movff	sin@f+1,___ftsub@f1+1
   851  001076  C059  F053         	movff	sin@f+2,___ftsub@f1+2
   852  00107A  C057  F049         	movff	sin@f,floor@x
   853  00107E  C058  F04A         	movff	sin@f+1,floor@x+1
   854  001082  C059  F04B         	movff	sin@f+2,floor@x+2
   855  001086  EC3D  F00C         	call	_floor	;wreg free
   856  00108A  C049  F054         	movff	?_floor,___ftsub@f2
   857  00108E  C04A  F055         	movff	?_floor+1,___ftsub@f2+1
   858  001092  C04B  F056         	movff	?_floor+2,___ftsub@f2+2
   859  001096  EC1F  F00F         	call	___ftsub	;wreg free
   860  00109A  C051  F057         	movff	?___ftsub,sin@f
   861  00109E  C052  F058         	movff	?___ftsub+1,sin@f+1
   862  0010A2  C053  F059         	movff	?___ftsub+2,sin@f+2
   863  0010A6  C057  F012         	movff	sin@f,___ftmul@f1
   864  0010AA  C058  F013         	movff	sin@f+1,___ftmul@f1+1
   865  0010AE  C059  F014         	movff	sin@f+2,___ftmul@f1+2
   866  0010B2  0E00               	movlw	0
   867  0010B4  6E15               	movwf	___ftmul@f2,c
   868  0010B6  0E80               	movlw	128
   869  0010B8  6E16               	movwf	___ftmul@f2+1,c
   870  0010BA  0E40               	movlw	64
   871  0010BC  6E17               	movwf	___ftmul@f2+2,c
   872  0010BE  EC50  F00B         	call	___ftmul	;wreg free
   873  0010C2  C012  F057         	movff	?___ftmul,sin@f
   874  0010C6  C013  F058         	movff	?___ftmul+1,sin@f+1
   875  0010CA  C014  F059         	movff	?___ftmul+2,sin@f+2
   876  0010CE  0E00               	movlw	0
   877  0010D0  6E01               	movwf	___ftge@ff1,c
   878  0010D2  0E00               	movlw	0
   879  0010D4  6E02               	movwf	___ftge@ff1+1,c
   880  0010D6  0E40               	movlw	64
   881  0010D8  6E03               	movwf	___ftge@ff1+2,c
   882  0010DA  C057  F004         	movff	sin@f,___ftge@ff2
   883  0010DE  C058  F005         	movff	sin@f+1,___ftge@ff2+1
   884  0010E2  C059  F006         	movff	sin@f+2,___ftge@ff2+2
   885  0010E6  ECC5  F00D         	call	___ftge	;wreg free
   886  0010EA  B0D8               	btfsc	status,0,c
   887  0010EC  D01B               	goto	l485
   888  0010EE  C057  F051         	movff	sin@f,___ftsub@f1
   889  0010F2  C058  F052         	movff	sin@f+1,___ftsub@f1+1
   890  0010F6  C059  F053         	movff	sin@f+2,___ftsub@f1+2
   891  0010FA  0E00               	movlw	0
   892  0010FC  6E54               	movwf	___ftsub@f2,c
   893  0010FE  0E00               	movlw	0
   894  001100  6E55               	movwf	___ftsub@f2+1,c
   895  001102  0E40               	movlw	64
   896  001104  6E56               	movwf	___ftsub@f2+2,c
   897  001106  EC1F  F00F         	call	___ftsub	;wreg free
   898  00110A  C051  F057         	movff	?___ftsub,sin@f
   899  00110E  C052  F058         	movff	?___ftsub+1,sin@f+1
   900  001112  C053  F059         	movff	?___ftsub+2,sin@f+2
   901  001116  5063               	movf	sin@sgn,w,c
   902  001118  A4D8               	btfss	status,2,c
   903  00111A  D002               	goto	u1480
   904  00111C  0E01               	movlw	1
   905  00111E  D001               	goto	u1490
   906  001120                     u1480:
   907  001120  0E00               	movlw	0
   908  001122                     u1490:
   909  001122  6E63               	movwf	sin@sgn,c
   910  001124                     l485:
   911  001124  0E00               	movlw	0
   912  001126  6E01               	movwf	___ftge@ff1,c
   913  001128  0E80               	movlw	128
   914  00112A  6E02               	movwf	___ftge@ff1+1,c
   915  00112C  0E3F               	movlw	63
   916  00112E  6E03               	movwf	___ftge@ff1+2,c
   917  001130  C057  F004         	movff	sin@f,___ftge@ff2
   918  001134  C058  F005         	movff	sin@f+1,___ftge@ff2+1
   919  001138  C059  F006         	movff	sin@f+2,___ftge@ff2+2
   920  00113C  ECC5  F00D         	call	___ftge	;wreg free
   921  001140  B0D8               	btfsc	status,0,c
   922  001142  D01C               	goto	l486
   923  001144  C057  F001         	movff	sin@f,___ftneg@f1
   924  001148  C058  F002         	movff	sin@f+1,___ftneg@f1+1
   925  00114C  C059  F003         	movff	sin@f+2,___ftneg@f1+2
   926  001150  EC52  F00F         	call	___ftneg	;wreg free
   927  001154  C001  F030         	movff	?___ftneg,___ftadd@f1
   928  001158  C002  F031         	movff	?___ftneg+1,___ftadd@f1+1
   929  00115C  C003  F032         	movff	?___ftneg+2,___ftadd@f1+2
   930  001160  0E00               	movlw	0
   931  001162  6E33               	movwf	___ftadd@f2,c
   932  001164  0E00               	movlw	0
   933  001166  6E34               	movwf	___ftadd@f2+1,c
   934  001168  0E40               	movlw	64
   935  00116A  6E35               	movwf	___ftadd@f2+2,c
   936  00116C  EC39  F009         	call	___ftadd	;wreg free
   937  001170  C030  F057         	movff	?___ftadd,sin@f
   938  001174  C031  F058         	movff	?___ftadd+1,sin@f+1
   939  001178  C032  F059         	movff	?___ftadd+2,sin@f+2
   940  00117C                     l486:
   941  00117C  C057  F012         	movff	sin@f,___ftmul@f1
   942  001180  C058  F013         	movff	sin@f+1,___ftmul@f1+1
   943  001184  C059  F014         	movff	sin@f+2,___ftmul@f1+2
   944  001188  C057  F015         	movff	sin@f,___ftmul@f2
   945  00118C  C058  F016         	movff	sin@f+1,___ftmul@f2+1
   946  001190  C059  F017         	movff	sin@f+2,___ftmul@f2+2
   947  001194  EC50  F00B         	call	___ftmul	;wreg free
   948  001198  C012  F060         	movff	?___ftmul,sin@x2
   949  00119C  C013  F061         	movff	?___ftmul+1,sin@x2+1
   950  0011A0  C014  F062         	movff	?___ftmul+2,sin@x2+2
   951  0011A4  C060  F03C         	movff	sin@x2,eval_poly@x
   952  0011A8  C061  F03D         	movff	sin@x2+1,eval_poly@x+1
   953  0011AC  C062  F03E         	movff	sin@x2+2,eval_poly@x+2
   954  0011B0  0E10               	movlw	low sin@coeff_b
   955  0011B2  6E3F               	movwf	eval_poly@d,c
   956  0011B4  0E10               	movlw	high sin@coeff_b
   957  0011B6  6E40               	movwf	eval_poly@d+1,c
   958  0011B8  0E00               	movlw	0
   959  0011BA  6E42               	movwf	eval_poly@n+1,c
   960  0011BC  0E03               	movlw	3
   961  0011BE  6E41               	movwf	eval_poly@n,c
   962  0011C0  ECAC  F00C         	call	_eval_poly	;wreg free
   963  0011C4  C03C  F05A         	movff	?_eval_poly,sin@y
   964  0011C8  C03D  F05B         	movff	?_eval_poly+1,sin@y+1
   965  0011CC  C03E  F05C         	movff	?_eval_poly+2,sin@y+2
   966  0011D0  C05A  F024         	movff	sin@y,___ftdiv@f2
   967  0011D4  C05B  F025         	movff	sin@y+1,___ftdiv@f2+1
   968  0011D8  C05C  F026         	movff	sin@y+2,___ftdiv@f2+2
   969  0011DC  0E00               	movlw	0
   970  0011DE  6E42               	movwf	eval_poly@n+1,c
   971  0011E0  0E04               	movlw	4
   972  0011E2  6E41               	movwf	eval_poly@n,c
   973  0011E4  0E01               	movlw	low sin@coeff_a
   974  0011E6  6E3F               	movwf	eval_poly@d,c
   975  0011E8  0E10               	movlw	high sin@coeff_a
   976  0011EA  6E40               	movwf	eval_poly@d+1,c
   977  0011EC  C060  F03C         	movff	sin@x2,eval_poly@x
   978  0011F0  C061  F03D         	movff	sin@x2+1,eval_poly@x+1
   979  0011F4  C062  F03E         	movff	sin@x2+2,eval_poly@x+2
   980  0011F8  ECAC  F00C         	call	_eval_poly	;wreg free
   981  0011FC  C03C  F021         	movff	?_eval_poly,___ftdiv@f1
   982  001200  C03D  F022         	movff	?_eval_poly+1,___ftdiv@f1+1
   983  001204  C03E  F023         	movff	?_eval_poly+2,___ftdiv@f1+2
   984  001208  ECCA  F00B         	call	___ftdiv	;wreg free
   985  00120C  C021  F05D         	movff	?___ftdiv,_sin$737
   986  001210  C022  F05E         	movff	?___ftdiv+1,_sin$737+1
   987  001214  C023  F05F         	movff	?___ftdiv+2,_sin$737+2
   988  001218  C057  F012         	movff	sin@f,___ftmul@f1
   989  00121C  C058  F013         	movff	sin@f+1,___ftmul@f1+1
   990  001220  C059  F014         	movff	sin@f+2,___ftmul@f1+2
   991  001224  C05D  F015         	movff	_sin$737,___ftmul@f2
   992  001228  C05E  F016         	movff	_sin$737+1,___ftmul@f2+1
   993  00122C  C05F  F017         	movff	_sin$737+2,___ftmul@f2+2
   994  001230  EC50  F00B         	call	___ftmul	;wreg free
   995  001234  C012  F057         	movff	?___ftmul,sin@f
   996  001238  C013  F058         	movff	?___ftmul+1,sin@f+1
   997  00123C  C014  F059         	movff	?___ftmul+2,sin@f+2
   998  001240  5063               	movf	sin@sgn,w,c
   999  001242  B4D8               	btfsc	status,2,c
  1000  001244  D00F               	goto	l487
  1001  001246  C057  F001         	movff	sin@f,___ftneg@f1
  1002  00124A  C058  F002         	movff	sin@f+1,___ftneg@f1+1
  1003  00124E  C059  F003         	movff	sin@f+2,___ftneg@f1+2
  1004  001252  EC52  F00F         	call	___ftneg	;wreg free
  1005  001256  C001  F057         	movff	?___ftneg,?_sin
  1006  00125A  C002  F058         	movff	?___ftneg+1,?_sin+1
  1007  00125E  C003  F059         	movff	?___ftneg+2,?_sin+2
  1008  001262  0012               	return	
  1009  001264                     l487:
  1010  001264  C057  F057         	movff	sin@f,?_sin
  1011  001268  C058  F058         	movff	sin@f+1,?_sin+1
  1012  00126C  C059  F059         	movff	sin@f+2,?_sin+2
  1013  001270  0012               	return		;funcret
  1014  001272                     __end_of_sin:
  1015                           	opt stack 0
  1016                           tblptru	equ	0xFF8
  1017                           tblptrh	equ	0xFF7
  1018                           wreg	equ	0xFE8
  1019                           status	equ	0xFD8
  1020                           
  1021 ;; *************** function _floor *****************
  1022 ;; Defined at:
  1023 ;;		line 13 in file "D:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\floor.c"
  1024 ;; Parameters:    Size  Location     Type
  1025 ;;  x               3   72[COMRAM] unsigned char 
  1026 ;; Auto vars:     Size  Location     Type
  1027 ;;  i               3   75[COMRAM] unsigned char 
  1028 ;;  expon           2   78[COMRAM] int 
  1029 ;; Return value:  Size  Location     Type
  1030 ;;                  3   72[COMRAM] int 
  1031 ;; Registers used:
  1032 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1033 ;; Tracked objects:
  1034 ;;		On entry : 0/0
  1035 ;;		On exit  : 0/0
  1036 ;;		Unchanged: 0/0
  1037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1038 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1039 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1041 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1042 ;;Total ram usage:        8 bytes
  1043 ;; Hardware stack levels used:    1
  1044 ;; Hardware stack levels required when called:    2
  1045 ;; This function calls:
  1046 ;;		___altoft
  1047 ;;		___ftadd
  1048 ;;		___ftge
  1049 ;;		___fttol
  1050 ;;		_frexp
  1051 ;; This function is called by:
  1052 ;;		_sin
  1053 ;; This function uses a non-reentrant model
  1054 ;;
  1055                           
  1056                           	psect	text2
  1057  00187A                     __ptext2:
  1058                           	opt stack 0
  1059  00187A                     _floor:
  1060                           	opt stack 27
  1061                           
  1062                           ;incstack = 0
  1063  00187A  C049  F001         	movff	floor@x,frexp@value
  1064  00187E  C04A  F002         	movff	floor@x+1,frexp@value+1
  1065  001882  C04B  F003         	movff	floor@x+2,frexp@value+2
  1066  001886  0E4F               	movlw	low floor@expon
  1067  001888  6E04               	movwf	frexp@eptr,c
  1068  00188A  0E00               	movlw	high floor@expon
  1069  00188C  6E05               	movwf	frexp@eptr+1,c
  1070  00188E  EC4E  F00E         	call	_frexp	;wreg free
  1071  001892  AE50               	btfss	floor@expon+1,7,c
  1072  001894  D010               	goto	l638
  1073  001896  AE4B               	btfss	floor@x+2,7,c
  1074  001898  D007               	goto	l639
  1075  00189A  0E00               	movlw	0
  1076  00189C  6E49               	movwf	?_floor,c
  1077  00189E  0E80               	movlw	128
  1078  0018A0  6E4A               	movwf	?_floor+1,c
  1079  0018A2  0EBF               	movlw	191
  1080  0018A4  6E4B               	movwf	?_floor+2,c
  1081  0018A6  0012               	return	
  1082  0018A8                     l639:
  1083  0018A8  0E00               	movlw	0
  1084  0018AA  6E49               	movwf	?_floor,c
  1085  0018AC  0E00               	movlw	0
  1086  0018AE  6E4A               	movwf	?_floor+1,c
  1087  0018B0  0E00               	movlw	0
  1088  0018B2  6E4B               	movwf	?_floor+2,c
  1089  0018B4  0012               	return	
  1090  0018B6                     l638:
  1091  0018B6  5050               	movf	floor@expon+1,w,c
  1092  0018B8  E104               	bnz	u1390
  1093  0018BA  0E15               	movlw	21
  1094  0018BC  5C4F               	subwf	floor@expon,w,c
  1095  0018BE  A0D8               	btfss	status,0,c
  1096  0018C0  D007               	goto	l641
  1097  0018C2                     u1390:
  1098  0018C2  C049  F049         	movff	floor@x,?_floor
  1099  0018C6  C04A  F04A         	movff	floor@x+1,?_floor+1
  1100  0018CA  C04B  F04B         	movff	floor@x+2,?_floor+2
  1101  0018CE  0012               	return	
  1102  0018D0                     l641:
  1103  0018D0  C049  F030         	movff	floor@x,___fttol@f1
  1104  0018D4  C04A  F031         	movff	floor@x+1,___fttol@f1+1
  1105  0018D8  C04B  F032         	movff	floor@x+2,___fttol@f1+2
  1106  0018DC  ECD6  F00A         	call	___fttol	;wreg free
  1107  0018E0  C030  F03F         	movff	?___fttol,___altoft@c
  1108  0018E4  C031  F040         	movff	?___fttol+1,___altoft@c+1
  1109  0018E8  C032  F041         	movff	?___fttol+2,___altoft@c+2
  1110  0018EC  C033  F042         	movff	?___fttol+3,___altoft@c+3
  1111  0018F0  EC8A  F00E         	call	___altoft	;wreg free
  1112  0018F4  C03F  F04C         	movff	?___altoft,floor@i
  1113  0018F8  C040  F04D         	movff	?___altoft+1,floor@i+1
  1114  0018FC  C041  F04E         	movff	?___altoft+2,floor@i+2
  1115  001900  C049  F001         	movff	floor@x,___ftge@ff1
  1116  001904  C04A  F002         	movff	floor@x+1,___ftge@ff1+1
  1117  001908  C04B  F003         	movff	floor@x+2,___ftge@ff1+2
  1118  00190C  C04C  F004         	movff	floor@i,___ftge@ff2
  1119  001910  C04D  F005         	movff	floor@i+1,___ftge@ff2+1
  1120  001914  C04E  F006         	movff	floor@i+2,___ftge@ff2+2
  1121  001918  ECC5  F00D         	call	___ftge	;wreg free
  1122  00191C  B0D8               	btfsc	status,0,c
  1123  00191E  D015               	goto	l642
  1124  001920  C04C  F030         	movff	floor@i,___ftadd@f1
  1125  001924  C04D  F031         	movff	floor@i+1,___ftadd@f1+1
  1126  001928  C04E  F032         	movff	floor@i+2,___ftadd@f1+2
  1127  00192C  0E00               	movlw	0
  1128  00192E  6E33               	movwf	___ftadd@f2,c
  1129  001930  0E80               	movlw	128
  1130  001932  6E34               	movwf	___ftadd@f2+1,c
  1131  001934  0EBF               	movlw	191
  1132  001936  6E35               	movwf	___ftadd@f2+2,c
  1133  001938  EC39  F009         	call	___ftadd	;wreg free
  1134  00193C  C030  F049         	movff	?___ftadd,?_floor
  1135  001940  C031  F04A         	movff	?___ftadd+1,?_floor+1
  1136  001944  C032  F04B         	movff	?___ftadd+2,?_floor+2
  1137  001948  0012               	return	
  1138  00194A                     l642:
  1139  00194A  C04C  F049         	movff	floor@i,?_floor
  1140  00194E  C04D  F04A         	movff	floor@i+1,?_floor+1
  1141  001952  C04E  F04B         	movff	floor@i+2,?_floor+2
  1142  001956  0012               	return		;funcret
  1143  001958                     __end_of_floor:
  1144                           	opt stack 0
  1145                           tblptru	equ	0xFF8
  1146                           tblptrh	equ	0xFF7
  1147                           wreg	equ	0xFE8
  1148                           status	equ	0xFD8
  1149                           
  1150 ;; *************** function _frexp *****************
  1151 ;; Defined at:
  1152 ;;		line 254 in file "D:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\frexp.c"
  1153 ;; Parameters:    Size  Location     Type
  1154 ;;  value           3    0[COMRAM] int 
  1155 ;;  eptr            2    3[COMRAM] PTR int 
  1156 ;;		 -> floor@expon(2), 
  1157 ;; Auto vars:     Size  Location     Type
  1158 ;;		None
  1159 ;; Return value:  Size  Location     Type
  1160 ;;                  3    0[COMRAM] PTR int 
  1161 ;; Registers used:
  1162 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1163 ;; Tracked objects:
  1164 ;;		On entry : 0/0
  1165 ;;		On exit  : 0/0
  1166 ;;		Unchanged: 0/0
  1167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1168 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1170 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1171 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1172 ;;Total ram usage:        7 bytes
  1173 ;; Hardware stack levels used:    1
  1174 ;; This function calls:
  1175 ;;		Nothing
  1176 ;; This function is called by:
  1177 ;;		_floor
  1178 ;; This function uses a non-reentrant model
  1179 ;;
  1180                           
  1181                           	psect	text3
  1182  001C9C                     __ptext3:
  1183                           	opt stack 0
  1184  001C9C                     _frexp:
  1185                           	opt stack 28
  1186                           
  1187                           ;incstack = 0
  1188  001C9C  5001               	movf	frexp@value,w,c
  1189  001C9E  1002               	iorwf	frexp@value+1,w,c
  1190  001CA0  1003               	iorwf	frexp@value+2,w,c
  1191  001CA2  A4D8               	btfss	status,2,c
  1192  001CA4  D009               	goto	l647
  1193  001CA6  C004  FFD9         	movff	frexp@eptr,fsr2l
  1194  001CAA  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  1195  001CAE  0E00               	movlw	0
  1196  001CB0  6EDE               	movwf	postinc2,c
  1197  001CB2  0E00               	movlw	0
  1198  001CB4  6EDD               	movwf	postdec2,c
  1199                           
  1200                           ;	Return value of _frexp is never used
  1201  001CB6  0012               	return	
  1202  001CB8                     l647:
  1203  001CB8  5003               	movf	frexp@value+2,w,c
  1204  001CBA  0B7F               	andlw	127
  1205  001CBC  6E06               	movwf	??_frexp& (0+255),c
  1206  001CBE  6A07               	clrf	(??_frexp+1)& (0+255),c
  1207  001CC0  90D8               	bcf	status,0,c
  1208  001CC2  3606               	rlcf	??_frexp,f,c
  1209  001CC4  3607               	rlcf	??_frexp+1,f,c
  1210  001CC6  C004  FFD9         	movff	frexp@eptr,fsr2l
  1211  001CCA  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  1212  001CCE  C006  FFDE         	movff	??_frexp,postinc2
  1213  001CD2  C007  FFDD         	movff	??_frexp+1,postdec2
  1214  001CD6  AE02               	btfss	frexp@value+1,7,c
  1215  001CD8  D003               	goto	u1290
  1216  001CDA  6A06               	clrf	??_frexp& (0+255),c
  1217  001CDC  2A06               	incf	??_frexp& (0+255),f,c
  1218  001CDE  D001               	goto	u1298
  1219  001CE0                     u1290:
  1220  001CE0  6A06               	clrf	??_frexp& (0+255),c
  1221  001CE2                     u1298:
  1222  001CE2  5006               	movf	??_frexp,w,c
  1223  001CE4  C004  FFD9         	movff	frexp@eptr,fsr2l
  1224  001CE8  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  1225  001CEC  12DE               	iorwf	postinc2,f,c
  1226  001CEE  0E00               	movlw	0
  1227  001CF0  12DD               	iorwf	postdec2,f,c
  1228  001CF2  C004  FFD9         	movff	frexp@eptr,fsr2l
  1229  001CF6  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  1230  001CFA  0E82               	movlw	130
  1231  001CFC  26DE               	addwf	postinc2,f,c
  1232  001CFE  0EFF               	movlw	255
  1233  001D00  22DD               	addwfc	postdec2,f,c
  1234  001D02  8003               	bsf	frexp@value+2,0,c
  1235  001D04  8203               	bsf	frexp@value+2,1,c
  1236  001D06  8403               	bsf	frexp@value+2,2,c
  1237  001D08  8603               	bsf	frexp@value+2,3,c
  1238  001D0A  8803               	bsf	frexp@value+2,4,c
  1239  001D0C  8A03               	bsf	frexp@value+2,5,c
  1240  001D0E  9C03               	bcf	frexp@value+2,6,c
  1241  001D10  9E02               	bcf	frexp@value+1,7,c
  1242  001D12  0012               	return	
  1243  001D14                     __end_of_frexp:
  1244                           	opt stack 0
  1245                           tblptru	equ	0xFF8
  1246                           tblptrh	equ	0xFF7
  1247                           wreg	equ	0xFE8
  1248                           postinc2	equ	0xFDE
  1249                           postdec2	equ	0xFDD
  1250                           fsr2h	equ	0xFDA
  1251                           fsr2l	equ	0xFD9
  1252                           status	equ	0xFD8
  1253                           
  1254 ;; *************** function ___altoft *****************
  1255 ;; Defined at:
  1256 ;;		line 42 in file "D:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\altoft.c"
  1257 ;; Parameters:    Size  Location     Type
  1258 ;;  c               4   62[COMRAM] long 
  1259 ;; Auto vars:     Size  Location     Type
  1260 ;;  sign            1   71[COMRAM] unsigned char 
  1261 ;;  exp             1   70[COMRAM] unsigned char 
  1262 ;; Return value:  Size  Location     Type
  1263 ;;                  3   62[COMRAM] float 
  1264 ;; Registers used:
  1265 ;;		wreg, status,2, status,0, cstack
  1266 ;; Tracked objects:
  1267 ;;		On entry : 0/0
  1268 ;;		On exit  : 0/0
  1269 ;;		Unchanged: 0/0
  1270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1271 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1272 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1273 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1274 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1275 ;;Total ram usage:       10 bytes
  1276 ;; Hardware stack levels used:    1
  1277 ;; Hardware stack levels required when called:    1
  1278 ;; This function calls:
  1279 ;;		___ftpack
  1280 ;; This function is called by:
  1281 ;;		_floor
  1282 ;; This function uses a non-reentrant model
  1283 ;;
  1284                           
  1285                           	psect	text4
  1286  001D14                     __ptext4:
  1287                           	opt stack 0
  1288  001D14                     ___altoft:
  1289                           	opt stack 27
  1290                           
  1291                           ;incstack = 0
  1292  001D14  0E00               	movlw	0
  1293  001D16  6E48               	movwf	___altoft@sign,c
  1294  001D18  0E8E               	movlw	142
  1295  001D1A  6E47               	movwf	___altoft@exp,c
  1296  001D1C  AE42               	btfss	___altoft@c+3,7,c
  1297  001D1E  D011               	goto	l133
  1298  001D20  1E42               	comf	___altoft@c+3,f,c
  1299  001D22  1E41               	comf	___altoft@c+2,f,c
  1300  001D24  1E40               	comf	___altoft@c+1,f,c
  1301  001D26  6C3F               	negf	___altoft@c,c
  1302  001D28  0E00               	movlw	0
  1303  001D2A  2240               	addwfc	___altoft@c+1,f,c
  1304  001D2C  2241               	addwfc	___altoft@c+2,f,c
  1305  001D2E  2242               	addwfc	___altoft@c+3,f,c
  1306  001D30  0E01               	movlw	1
  1307  001D32  6E48               	movwf	___altoft@sign,c
  1308  001D34  D006               	goto	l133
  1309  001D36  90D8               	bcf	status,0,c
  1310  001D38  3242               	rrcf	___altoft@c+3,f,c
  1311  001D3A  3241               	rrcf	___altoft@c+2,f,c
  1312  001D3C  3240               	rrcf	___altoft@c+1,f,c
  1313  001D3E  323F               	rrcf	___altoft@c,f,c
  1314  001D40  2A47               	incf	___altoft@exp,f,c
  1315  001D42                     l133:
  1316  001D42  0E00               	movlw	0
  1317  001D44  143F               	andwf	___altoft@c,w,c
  1318  001D46  6E43               	movwf	??___altoft& (0+255),c
  1319  001D48  0E00               	movlw	0
  1320  001D4A  1440               	andwf	___altoft@c+1,w,c
  1321  001D4C  6E44               	movwf	(??___altoft+1)& (0+255),c
  1322  001D4E  0E00               	movlw	0
  1323  001D50  1441               	andwf	___altoft@c+2,w,c
  1324  001D52  6E45               	movwf	(??___altoft+2)& (0+255),c
  1325  001D54  0EFF               	movlw	255
  1326  001D56  1442               	andwf	___altoft@c+3,w,c
  1327  001D58  6E46               	movwf	(??___altoft+3)& (0+255),c
  1328  001D5A  5043               	movf	??___altoft,w,c
  1329  001D5C  1044               	iorwf	??___altoft+1,w,c
  1330  001D5E  1045               	iorwf	??___altoft+2,w,c
  1331  001D60  1046               	iorwf	??___altoft+3,w,c
  1332  001D62  A4D8               	btfss	status,2,c
  1333  001D64  D7E8               	goto	l134
  1334  001D66  C03F  F001         	movff	___altoft@c,___ftpack@arg
  1335  001D6A  C040  F002         	movff	___altoft@c+1,___ftpack@arg+1
  1336  001D6E  C041  F003         	movff	___altoft@c+2,___ftpack@arg+2
  1337  001D72  C047  F004         	movff	___altoft@exp,___ftpack@exp
  1338  001D76  C048  F005         	movff	___altoft@sign,___ftpack@sign
  1339  001D7A  EC6E  F00D         	call	___ftpack	;wreg free
  1340  001D7E  C001  F03F         	movff	?___ftpack,?___altoft
  1341  001D82  C002  F040         	movff	?___ftpack+1,?___altoft+1
  1342  001D86  C003  F041         	movff	?___ftpack+2,?___altoft+2
  1343  001D8A  0012               	return	
  1344  001D8C                     __end_of___altoft:
  1345                           	opt stack 0
  1346                           tblptru	equ	0xFF8
  1347                           tblptrh	equ	0xFF7
  1348                           wreg	equ	0xFE8
  1349                           postinc2	equ	0xFDE
  1350                           postdec2	equ	0xFDD
  1351                           fsr2h	equ	0xFDA
  1352                           fsr2l	equ	0xFD9
  1353                           status	equ	0xFD8
  1354                           
  1355 ;; *************** function _eval_poly *****************
  1356 ;; Defined at:
  1357 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\evalpoly.c"
  1358 ;; Parameters:    Size  Location     Type
  1359 ;;  x               3   59[COMRAM] float 
  1360 ;;  d               2   62[COMRAM] PTR const 
  1361 ;;		 -> sin@coeff_a(15), sin@coeff_b(12), 
  1362 ;;  n               2   64[COMRAM] int 
  1363 ;; Auto vars:     Size  Location     Type
  1364 ;;  res             3   68[COMRAM] int 
  1365 ;; Return value:  Size  Location     Type
  1366 ;;                  3   59[COMRAM] int 
  1367 ;; Registers used:
  1368 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1369 ;; Tracked objects:
  1370 ;;		On entry : 0/0
  1371 ;;		On exit  : 0/0
  1372 ;;		Unchanged: 0/0
  1373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1374 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1375 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1376 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1377 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1378 ;;Total ram usage:       12 bytes
  1379 ;; Hardware stack levels used:    1
  1380 ;; Hardware stack levels required when called:    2
  1381 ;; This function calls:
  1382 ;;		___ftadd
  1383 ;;		___ftmul
  1384 ;;		___wmul
  1385 ;; This function is called by:
  1386 ;;		_sin
  1387 ;; This function uses a non-reentrant model
  1388 ;;
  1389                           
  1390                           	psect	text5
  1391  001958                     __ptext5:
  1392                           	opt stack 0
  1393  001958                     _eval_poly:
  1394                           	opt stack 27
  1395                           
  1396                           ;incstack = 0
  1397  001958  C041  F001         	movff	eval_poly@n,___wmul@multiplier
  1398  00195C  C042  F002         	movff	eval_poly@n+1,___wmul@multiplier+1
  1399  001960  0E00               	movlw	0
  1400  001962  6E04               	movwf	___wmul@multiplicand+1,c
  1401  001964  0E03               	movlw	3
  1402  001966  6E03               	movwf	___wmul@multiplicand,c
  1403  001968  EC3F  F00F         	call	___wmul	;wreg free
  1404  00196C  C03F  F043         	movff	eval_poly@d,??_eval_poly
  1405  001970  C040  F044         	movff	eval_poly@d+1,??_eval_poly+1
  1406  001974  5001               	movf	?___wmul,w,c
  1407  001976  2643               	addwf	??_eval_poly,f,c
  1408  001978  5002               	movf	?___wmul+1,w,c
  1409  00197A  2244               	addwfc	??_eval_poly+1,f,c
  1410  00197C  C043  FFF6         	movff	??_eval_poly,tblptrl
  1411  001980  C044  FFF7         	movff	??_eval_poly+1,tblptrh
  1412  001984                     	if	0	;tblptru may be non-zero
  1413  001984                     	endif
  1414  001984                     	if	0	;tblptru may be non-zero
  1415  001984                     	endif
  1416  001984  0009               	tblrd		*+
  1417  001986  CFF5 F045          	movff	tablat,eval_poly@res
  1418  00198A  0009               	tblrd		*+
  1419  00198C  CFF5 F046          	movff	tablat,eval_poly@res+1
  1420  001990  000A               	tblrd		*-
  1421  001992  CFF5 F047          	movff	tablat,eval_poly@res+2
  1422  001996  D03E               	goto	l630
  1423  001998  C045  F015         	movff	eval_poly@res,___ftmul@f2
  1424  00199C  C046  F016         	movff	eval_poly@res+1,___ftmul@f2+1
  1425  0019A0  C047  F017         	movff	eval_poly@res+2,___ftmul@f2+2
  1426  0019A4  C03C  F012         	movff	eval_poly@x,___ftmul@f1
  1427  0019A8  C03D  F013         	movff	eval_poly@x+1,___ftmul@f1+1
  1428  0019AC  C03E  F014         	movff	eval_poly@x+2,___ftmul@f1+2
  1429  0019B0  EC50  F00B         	call	___ftmul	;wreg free
  1430  0019B4  C012  F030         	movff	?___ftmul,___ftadd@f1
  1431  0019B8  C013  F031         	movff	?___ftmul+1,___ftadd@f1+1
  1432  0019BC  C014  F032         	movff	?___ftmul+2,___ftadd@f1+2
  1433  0019C0  0E00               	movlw	0
  1434  0019C2  6E04               	movwf	___wmul@multiplicand+1,c
  1435  0019C4  0E03               	movlw	3
  1436  0019C6  6E03               	movwf	___wmul@multiplicand,c
  1437  0019C8  0641               	decf	eval_poly@n,f,c
  1438  0019CA  A0D8               	btfss	status,0,c
  1439  0019CC  0642               	decf	eval_poly@n+1,f,c
  1440  0019CE  C041  F001         	movff	eval_poly@n,___wmul@multiplier
  1441  0019D2  C042  F002         	movff	eval_poly@n+1,___wmul@multiplier+1
  1442  0019D6  EC3F  F00F         	call	___wmul	;wreg free
  1443  0019DA  C03F  F043         	movff	eval_poly@d,??_eval_poly
  1444  0019DE  C040  F044         	movff	eval_poly@d+1,??_eval_poly+1
  1445  0019E2  5001               	movf	?___wmul,w,c
  1446  0019E4  2643               	addwf	??_eval_poly,f,c
  1447  0019E6  5002               	movf	?___wmul+1,w,c
  1448  0019E8  2244               	addwfc	??_eval_poly+1,f,c
  1449  0019EA  C043  FFF6         	movff	??_eval_poly,tblptrl
  1450  0019EE  C044  FFF7         	movff	??_eval_poly+1,tblptrh
  1451  0019F2                     	if	0	;tblptru may be non-zero
  1452  0019F2                     	endif
  1453  0019F2                     	if	0	;tblptru may be non-zero
  1454  0019F2                     	endif
  1455  0019F2  0009               	tblrd		*+
  1456  0019F4  CFF5 F033          	movff	tablat,___ftadd@f2
  1457  0019F8  0009               	tblrd		*+
  1458  0019FA  CFF5 F034          	movff	tablat,___ftadd@f2+1
  1459  0019FE  000A               	tblrd		*-
  1460  001A00  CFF5 F035          	movff	tablat,___ftadd@f2+2
  1461  001A04  EC39  F009         	call	___ftadd	;wreg free
  1462  001A08  C030  F045         	movff	?___ftadd,eval_poly@res
  1463  001A0C  C031  F046         	movff	?___ftadd+1,eval_poly@res+1
  1464  001A10  C032  F047         	movff	?___ftadd+2,eval_poly@res+2
  1465  001A14                     l630:
  1466  001A14  5041               	movf	eval_poly@n,w,c
  1467  001A16  1042               	iorwf	eval_poly@n+1,w,c
  1468  001A18  A4D8               	btfss	status,2,c
  1469  001A1A  D7BE               	goto	l631
  1470  001A1C  C045  F03C         	movff	eval_poly@res,?_eval_poly
  1471  001A20  C046  F03D         	movff	eval_poly@res+1,?_eval_poly+1
  1472  001A24  C047  F03E         	movff	eval_poly@res+2,?_eval_poly+2
  1473  001A28  0012               	return		;funcret
  1474  001A2A                     __end_of_eval_poly:
  1475                           	opt stack 0
  1476                           tblptru	equ	0xFF8
  1477                           tblptrh	equ	0xFF7
  1478                           tblptrl	equ	0xFF6
  1479                           tablat	equ	0xFF5
  1480                           wreg	equ	0xFE8
  1481                           postinc2	equ	0xFDE
  1482                           postdec2	equ	0xFDD
  1483                           fsr2h	equ	0xFDA
  1484                           fsr2l	equ	0xFD9
  1485                           status	equ	0xFD8
  1486                           
  1487 ;; *************** function ___wmul *****************
  1488 ;; Defined at:
  1489 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul16.c"
  1490 ;; Parameters:    Size  Location     Type
  1491 ;;  multiplier      2    0[COMRAM] unsigned int 
  1492 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1493 ;; Auto vars:     Size  Location     Type
  1494 ;;  product         2    4[COMRAM] unsigned int 
  1495 ;; Return value:  Size  Location     Type
  1496 ;;                  2    0[COMRAM] unsigned int 
  1497 ;; Registers used:
  1498 ;;		wreg, status,2, status,0, prodl, prodh
  1499 ;; Tracked objects:
  1500 ;;		On entry : 0/0
  1501 ;;		On exit  : 0/0
  1502 ;;		Unchanged: 0/0
  1503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1504 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1505 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1507 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1508 ;;Total ram usage:        6 bytes
  1509 ;; Hardware stack levels used:    1
  1510 ;; This function calls:
  1511 ;;		Nothing
  1512 ;; This function is called by:
  1513 ;;		_eval_poly
  1514 ;; This function uses a non-reentrant model
  1515 ;;
  1516                           
  1517                           	psect	text6
  1518  001E7E                     __ptext6:
  1519                           	opt stack 0
  1520  001E7E                     ___wmul:
  1521                           	opt stack 28
  1522                           
  1523                           ;incstack = 0
  1524  001E7E  5001               	movf	___wmul@multiplier,w,c
  1525  001E80  0203               	mulwf	___wmul@multiplicand,c
  1526  001E82  CFF3 F005          	movff	prodl,___wmul@product
  1527  001E86  CFF4 F006          	movff	prodh,___wmul@product+1
  1528  001E8A  5001               	movf	___wmul@multiplier,w,c
  1529  001E8C  0204               	mulwf	___wmul@multiplicand+1,c
  1530  001E8E  50F3               	movf	prodl,w,c
  1531  001E90  2606               	addwf	___wmul@product+1,f,c
  1532  001E92  5002               	movf	___wmul@multiplier+1,w,c
  1533  001E94  0203               	mulwf	___wmul@multiplicand,c
  1534  001E96  50F3               	movf	prodl,w,c
  1535  001E98  2606               	addwf	___wmul@product+1,f,c
  1536  001E9A  C005  F001         	movff	___wmul@product,?___wmul
  1537  001E9E  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1538  001EA2  0012               	return	
  1539  001EA4                     __end_of___wmul:
  1540                           	opt stack 0
  1541                           tblptru	equ	0xFF8
  1542                           tblptrh	equ	0xFF7
  1543                           tblptrl	equ	0xFF6
  1544                           tablat	equ	0xFF5
  1545                           prodh	equ	0xFF4
  1546                           prodl	equ	0xFF3
  1547                           wreg	equ	0xFE8
  1548                           postinc2	equ	0xFDE
  1549                           postdec2	equ	0xFDD
  1550                           fsr2h	equ	0xFDA
  1551                           fsr2l	equ	0xFD9
  1552                           status	equ	0xFD8
  1553                           
  1554 ;; *************** function ___ftsub *****************
  1555 ;; Defined at:
  1556 ;;		line 20 in file "D:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftsub.c"
  1557 ;; Parameters:    Size  Location     Type
  1558 ;;  f1              3   80[COMRAM] float 
  1559 ;;  f2              3   83[COMRAM] float 
  1560 ;; Auto vars:     Size  Location     Type
  1561 ;;		None
  1562 ;; Return value:  Size  Location     Type
  1563 ;;                  3   80[COMRAM] float 
  1564 ;; Registers used:
  1565 ;;		wreg, status,2, status,0, cstack
  1566 ;; Tracked objects:
  1567 ;;		On entry : 0/0
  1568 ;;		On exit  : 0/0
  1569 ;;		Unchanged: 0/0
  1570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1571 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1574 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1575 ;;Total ram usage:        6 bytes
  1576 ;; Hardware stack levels used:    1
  1577 ;; Hardware stack levels required when called:    2
  1578 ;; This function calls:
  1579 ;;		___ftadd
  1580 ;; This function is called by:
  1581 ;;		_sin
  1582 ;; This function uses a non-reentrant model
  1583 ;;
  1584                           
  1585                           	psect	text7
  1586  001E3E                     __ptext7:
  1587                           	opt stack 0
  1588  001E3E                     ___ftsub:
  1589                           	opt stack 27
  1590                           
  1591                           ;incstack = 0
  1592  001E3E  5054               	movf	___ftsub@f2,w,c
  1593  001E40  1055               	iorwf	___ftsub@f2+1,w,c
  1594  001E42  1056               	iorwf	___ftsub@f2+2,w,c
  1595  001E44  B4D8               	btfsc	status,2,c
  1596  001E46  D006               	goto	l359
  1597  001E48  0E00               	movlw	0
  1598  001E4A  1A54               	xorwf	___ftsub@f2,f,c
  1599  001E4C  0E00               	movlw	0
  1600  001E4E  1A55               	xorwf	___ftsub@f2+1,f,c
  1601  001E50  0E80               	movlw	128
  1602  001E52  1A56               	xorwf	___ftsub@f2+2,f,c
  1603  001E54                     l359:
  1604  001E54  C051  F030         	movff	___ftsub@f1,___ftadd@f1
  1605  001E58  C052  F031         	movff	___ftsub@f1+1,___ftadd@f1+1
  1606  001E5C  C053  F032         	movff	___ftsub@f1+2,___ftadd@f1+2
  1607  001E60  C054  F033         	movff	___ftsub@f2,___ftadd@f2
  1608  001E64  C055  F034         	movff	___ftsub@f2+1,___ftadd@f2+1
  1609  001E68  C056  F035         	movff	___ftsub@f2+2,___ftadd@f2+2
  1610  001E6C  EC39  F009         	call	___ftadd	;wreg free
  1611  001E70  C030  F051         	movff	?___ftadd,?___ftsub
  1612  001E74  C031  F052         	movff	?___ftadd+1,?___ftsub+1
  1613  001E78  C032  F053         	movff	?___ftadd+2,?___ftsub+2
  1614  001E7C  0012               	return	
  1615  001E7E                     __end_of___ftsub:
  1616                           	opt stack 0
  1617                           tblptru	equ	0xFF8
  1618                           tblptrh	equ	0xFF7
  1619                           tblptrl	equ	0xFF6
  1620                           tablat	equ	0xFF5
  1621                           prodh	equ	0xFF4
  1622                           prodl	equ	0xFF3
  1623                           wreg	equ	0xFE8
  1624                           postinc2	equ	0xFDE
  1625                           postdec2	equ	0xFDD
  1626                           fsr2h	equ	0xFDA
  1627                           fsr2l	equ	0xFD9
  1628                           status	equ	0xFD8
  1629                           
  1630 ;; *************** function ___ftadd *****************
  1631 ;; Defined at:
  1632 ;;		line 86 in file "D:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftadd.c"
  1633 ;; Parameters:    Size  Location     Type
  1634 ;;  f1              3   47[COMRAM] float 
  1635 ;;  f2              3   50[COMRAM] float 
  1636 ;; Auto vars:     Size  Location     Type
  1637 ;;  exp1            1   58[COMRAM] unsigned char 
  1638 ;;  exp2            1   57[COMRAM] unsigned char 
  1639 ;;  sign            1   56[COMRAM] unsigned char 
  1640 ;; Return value:  Size  Location     Type
  1641 ;;                  3   47[COMRAM] float 
  1642 ;; Registers used:
  1643 ;;		wreg, status,2, status,0, cstack
  1644 ;; Tracked objects:
  1645 ;;		On entry : 0/0
  1646 ;;		On exit  : 0/0
  1647 ;;		Unchanged: 0/0
  1648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1649 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1650 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1651 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1652 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1653 ;;Total ram usage:       12 bytes
  1654 ;; Hardware stack levels used:    1
  1655 ;; Hardware stack levels required when called:    1
  1656 ;; This function calls:
  1657 ;;		___ftpack
  1658 ;; This function is called by:
  1659 ;;		_main
  1660 ;;		___ftsub
  1661 ;;		_sin
  1662 ;;		_eval_poly
  1663 ;;		_floor
  1664 ;; This function uses a non-reentrant model
  1665 ;;
  1666                           
  1667                           	psect	text8
  1668  001272                     __ptext8:
  1669                           	opt stack 0
  1670  001272                     ___ftadd:
  1671                           	opt stack 27
  1672                           
  1673                           ;incstack = 0
  1674  001272  C032  F036         	movff	___ftadd@f1+2,??___ftadd
  1675  001276  6A37               	clrf	(??___ftadd+1)& (0+255),c
  1676  001278  6A38               	clrf	(??___ftadd+2)& (0+255),c
  1677  00127A  3431               	rlcf	___ftadd@f1+1,w,c
  1678  00127C  3636               	rlcf	??___ftadd& (0+255),f,c
  1679  00127E  E301               	bnc	u901
  1680  001280  8037               	bsf	(??___ftadd+1)& (0+255),0,c
  1681  001282                     u901:
  1682  001282  5036               	movf	??___ftadd,w,c
  1683  001284  6E3B               	movwf	___ftadd@exp1,c
  1684  001286  C035  F036         	movff	___ftadd@f2+2,??___ftadd
  1685  00128A  6A37               	clrf	(??___ftadd+1)& (0+255),c
  1686  00128C  6A38               	clrf	(??___ftadd+2)& (0+255),c
  1687  00128E  3434               	rlcf	___ftadd@f2+1,w,c
  1688  001290  3636               	rlcf	??___ftadd& (0+255),f,c
  1689  001292  E301               	bnc	u911
  1690  001294  8037               	bsf	(??___ftadd+1)& (0+255),0,c
  1691  001296                     u911:
  1692  001296  5036               	movf	??___ftadd,w,c
  1693  001298  6E3A               	movwf	___ftadd@exp2,c
  1694  00129A  503B               	movf	___ftadd@exp1,w,c
  1695  00129C  B4D8               	btfsc	status,2,c
  1696  00129E  D00B               	goto	u940
  1697  0012A0  503A               	movf	___ftadd@exp2,w,c
  1698  0012A2  5C3B               	subwf	___ftadd@exp1,w,c
  1699  0012A4  B0D8               	btfsc	status,0,c
  1700  0012A6  D00E               	goto	l294
  1701  0012A8  503B               	movf	___ftadd@exp1,w,c
  1702  0012AA  0800               	sublw	0
  1703  0012AC  243A               	addwf	___ftadd@exp2,w,c
  1704  0012AE  6E36               	movwf	??___ftadd& (0+255),c
  1705  0012B0  0E18               	movlw	24
  1706  0012B2  6436               	cpfsgt	??___ftadd,c
  1707  0012B4  D007               	goto	l294
  1708  0012B6                     u940:
  1709  0012B6  C033  F030         	movff	___ftadd@f2,?___ftadd
  1710  0012BA  C034  F031         	movff	___ftadd@f2+1,?___ftadd+1
  1711  0012BE  C035  F032         	movff	___ftadd@f2+2,?___ftadd+2
  1712  0012C2  0012               	return	
  1713  0012C4                     l294:
  1714  0012C4  503A               	movf	___ftadd@exp2,w,c
  1715  0012C6  B4D8               	btfsc	status,2,c
  1716  0012C8  D00B               	goto	u970
  1717  0012CA  503B               	movf	___ftadd@exp1,w,c
  1718  0012CC  5C3A               	subwf	___ftadd@exp2,w,c
  1719  0012CE  B0D8               	btfsc	status,0,c
  1720  0012D0  D00E               	goto	l298
  1721  0012D2  503A               	movf	___ftadd@exp2,w,c
  1722  0012D4  0800               	sublw	0
  1723  0012D6  243B               	addwf	___ftadd@exp1,w,c
  1724  0012D8  6E36               	movwf	??___ftadd& (0+255),c
  1725  0012DA  0E18               	movlw	24
  1726  0012DC  6436               	cpfsgt	??___ftadd,c
  1727  0012DE  D007               	goto	l298
  1728  0012E0                     u970:
  1729  0012E0  C030  F030         	movff	___ftadd@f1,?___ftadd
  1730  0012E4  C031  F031         	movff	___ftadd@f1+1,?___ftadd+1
  1731  0012E8  C032  F032         	movff	___ftadd@f1+2,?___ftadd+2
  1732  0012EC  0012               	return	
  1733  0012EE                     l298:
  1734  0012EE  0E06               	movlw	6
  1735  0012F0  6E39               	movwf	___ftadd@sign,c
  1736  0012F2  BE32               	btfsc	___ftadd@f1+2,7,c
  1737  0012F4  8E39               	bsf	___ftadd@sign,7,c
  1738  0012F6  BE35               	btfsc	___ftadd@f2+2,7,c
  1739  0012F8  8C39               	bsf	___ftadd@sign,6,c
  1740  0012FA  8E31               	bsf	___ftadd@f1+1,7,c
  1741  0012FC  0EFF               	movlw	255
  1742  0012FE  1630               	andwf	___ftadd@f1,f,c
  1743  001300  0EFF               	movlw	255
  1744  001302  1631               	andwf	___ftadd@f1+1,f,c
  1745  001304  0E00               	movlw	0
  1746  001306  1632               	andwf	___ftadd@f1+2,f,c
  1747  001308  8E34               	bsf	___ftadd@f2+1,7,c
  1748  00130A  0EFF               	movlw	255
  1749  00130C  1633               	andwf	___ftadd@f2,f,c
  1750  00130E  0EFF               	movlw	255
  1751  001310  1634               	andwf	___ftadd@f2+1,f,c
  1752  001312  0E00               	movlw	0
  1753  001314  1635               	andwf	___ftadd@f2+2,f,c
  1754  001316  503A               	movf	___ftadd@exp2,w,c
  1755  001318  5C3B               	subwf	___ftadd@exp1,w,c
  1756  00131A  B0D8               	btfsc	status,0,c
  1757  00131C  D01B               	goto	l303
  1758  00131E                     u1000:
  1759  00131E  90D8               	bcf	status,0,c
  1760  001320  3633               	rlcf	___ftadd@f2,f,c
  1761  001322  3634               	rlcf	___ftadd@f2+1,f,c
  1762  001324  3635               	rlcf	___ftadd@f2+2,f,c
  1763  001326  063A               	decf	___ftadd@exp2,f,c
  1764  001328  503B               	movf	___ftadd@exp1,w,c
  1765  00132A  183A               	xorwf	___ftadd@exp2,w,c
  1766  00132C  B4D8               	btfsc	status,2,c
  1767  00132E  D00D               	goto	l308
  1768  001330  0639               	decf	___ftadd@sign,f,c
  1769  001332  C039  F036         	movff	___ftadd@sign,??___ftadd
  1770  001336  0E07               	movlw	7
  1771  001338  1636               	andwf	??___ftadd,f,c
  1772  00133A  B4D8               	btfsc	status,2,c
  1773  00133C  D006               	goto	l308
  1774  00133E  D7EF               	goto	u1000
  1775  001340  90D8               	bcf	status,0,c
  1776  001342  3232               	rrcf	___ftadd@f1+2,f,c
  1777  001344  3231               	rrcf	___ftadd@f1+1,f,c
  1778  001346  3230               	rrcf	___ftadd@f1,f,c
  1779  001348  2A3B               	incf	___ftadd@exp1,f,c
  1780  00134A                     l308:
  1781  00134A  503A               	movf	___ftadd@exp2,w,c
  1782  00134C  183B               	xorwf	___ftadd@exp1,w,c
  1783  00134E  B4D8               	btfsc	status,2,c
  1784  001350  D01F               	goto	u1070
  1785  001352  D7F6               	goto	l309
  1786  001354                     l303:
  1787  001354  503B               	movf	___ftadd@exp1,w,c
  1788  001356  5C3A               	subwf	___ftadd@exp2,w,c
  1789  001358  B0D8               	btfsc	status,0,c
  1790  00135A  D01A               	goto	u1070
  1791  00135C                     u1040:
  1792  00135C  90D8               	bcf	status,0,c
  1793  00135E  3630               	rlcf	___ftadd@f1,f,c
  1794  001360  3631               	rlcf	___ftadd@f1+1,f,c
  1795  001362  3632               	rlcf	___ftadd@f1+2,f,c
  1796  001364  063B               	decf	___ftadd@exp1,f,c
  1797  001366  503B               	movf	___ftadd@exp1,w,c
  1798  001368  183A               	xorwf	___ftadd@exp2,w,c
  1799  00136A  B4D8               	btfsc	status,2,c
  1800  00136C  D00D               	goto	l317
  1801  00136E  0639               	decf	___ftadd@sign,f,c
  1802  001370  C039  F036         	movff	___ftadd@sign,??___ftadd
  1803  001374  0E07               	movlw	7
  1804  001376  1636               	andwf	??___ftadd,f,c
  1805  001378  B4D8               	btfsc	status,2,c
  1806  00137A  D006               	goto	l317
  1807  00137C  D7EF               	goto	u1040
  1808  00137E  90D8               	bcf	status,0,c
  1809  001380  3235               	rrcf	___ftadd@f2+2,f,c
  1810  001382  3234               	rrcf	___ftadd@f2+1,f,c
  1811  001384  3233               	rrcf	___ftadd@f2,f,c
  1812  001386  2A3A               	incf	___ftadd@exp2,f,c
  1813  001388                     l317:
  1814  001388  503A               	movf	___ftadd@exp2,w,c
  1815  00138A  183B               	xorwf	___ftadd@exp1,w,c
  1816  00138C  A4D8               	btfss	status,2,c
  1817  00138E  D7F7               	goto	l318
  1818  001390                     u1070:
  1819  001390  AE39               	btfss	___ftadd@sign,7,c
  1820  001392  D00C               	goto	l320
  1821  001394  0EFF               	movlw	255
  1822  001396  1A30               	xorwf	___ftadd@f1,f,c
  1823  001398  0EFF               	movlw	255
  1824  00139A  1A31               	xorwf	___ftadd@f1+1,f,c
  1825  00139C  0EFF               	movlw	255
  1826  00139E  1A32               	xorwf	___ftadd@f1+2,f,c
  1827  0013A0  0E01               	movlw	1
  1828  0013A2  2630               	addwf	___ftadd@f1,f,c
  1829  0013A4  0E00               	movlw	0
  1830  0013A6  2231               	addwfc	___ftadd@f1+1,f,c
  1831  0013A8  0E00               	movlw	0
  1832  0013AA  2232               	addwfc	___ftadd@f1+2,f,c
  1833  0013AC                     l320:
  1834  0013AC  AC39               	btfss	___ftadd@sign,6,c
  1835  0013AE  D00C               	goto	l321
  1836  0013B0  0EFF               	movlw	255
  1837  0013B2  1A33               	xorwf	___ftadd@f2,f,c
  1838  0013B4  0EFF               	movlw	255
  1839  0013B6  1A34               	xorwf	___ftadd@f2+1,f,c
  1840  0013B8  0EFF               	movlw	255
  1841  0013BA  1A35               	xorwf	___ftadd@f2+2,f,c
  1842  0013BC  0E01               	movlw	1
  1843  0013BE  2633               	addwf	___ftadd@f2,f,c
  1844  0013C0  0E00               	movlw	0
  1845  0013C2  2234               	addwfc	___ftadd@f2+1,f,c
  1846  0013C4  0E00               	movlw	0
  1847  0013C6  2235               	addwfc	___ftadd@f2+2,f,c
  1848  0013C8                     l321:
  1849  0013C8  0E00               	movlw	0
  1850  0013CA  6E39               	movwf	___ftadd@sign,c
  1851  0013CC  5030               	movf	___ftadd@f1,w,c
  1852  0013CE  2633               	addwf	___ftadd@f2,f,c
  1853  0013D0  5031               	movf	___ftadd@f1+1,w,c
  1854  0013D2  2234               	addwfc	___ftadd@f2+1,f,c
  1855  0013D4  5032               	movf	___ftadd@f1+2,w,c
  1856  0013D6  2235               	addwfc	___ftadd@f2+2,f,c
  1857  0013D8  AE35               	btfss	___ftadd@f2+2,7,c
  1858  0013DA  D00E               	goto	l322
  1859  0013DC  0EFF               	movlw	255
  1860  0013DE  1A33               	xorwf	___ftadd@f2,f,c
  1861  0013E0  0EFF               	movlw	255
  1862  0013E2  1A34               	xorwf	___ftadd@f2+1,f,c
  1863  0013E4  0EFF               	movlw	255
  1864  0013E6  1A35               	xorwf	___ftadd@f2+2,f,c
  1865  0013E8  0E01               	movlw	1
  1866  0013EA  2633               	addwf	___ftadd@f2,f,c
  1867  0013EC  0E00               	movlw	0
  1868  0013EE  2234               	addwfc	___ftadd@f2+1,f,c
  1869  0013F0  0E00               	movlw	0
  1870  0013F2  2235               	addwfc	___ftadd@f2+2,f,c
  1871  0013F4  0E01               	movlw	1
  1872  0013F6  6E39               	movwf	___ftadd@sign,c
  1873  0013F8                     l322:
  1874  0013F8  C033  F001         	movff	___ftadd@f2,___ftpack@arg
  1875  0013FC  C034  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  1876  001400  C035  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  1877  001404  C03B  F004         	movff	___ftadd@exp1,___ftpack@exp
  1878  001408  C039  F005         	movff	___ftadd@sign,___ftpack@sign
  1879  00140C  EC6E  F00D         	call	___ftpack	;wreg free
  1880  001410  C001  F030         	movff	?___ftpack,?___ftadd
  1881  001414  C002  F031         	movff	?___ftpack+1,?___ftadd+1
  1882  001418  C003  F032         	movff	?___ftpack+2,?___ftadd+2
  1883  00141C  0012               	return	
  1884  00141E                     __end_of___ftadd:
  1885                           	opt stack 0
  1886                           tblptru	equ	0xFF8
  1887                           tblptrh	equ	0xFF7
  1888                           tblptrl	equ	0xFF6
  1889                           tablat	equ	0xFF5
  1890                           prodh	equ	0xFF4
  1891                           prodl	equ	0xFF3
  1892                           wreg	equ	0xFE8
  1893                           postinc2	equ	0xFDE
  1894                           postdec2	equ	0xFDD
  1895                           fsr2h	equ	0xFDA
  1896                           fsr2l	equ	0xFD9
  1897                           status	equ	0xFD8
  1898                           
  1899 ;; *************** function ___ftneg *****************
  1900 ;; Defined at:
  1901 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftneg.c"
  1902 ;; Parameters:    Size  Location     Type
  1903 ;;  f1              3    0[COMRAM] float 
  1904 ;; Auto vars:     Size  Location     Type
  1905 ;;		None
  1906 ;; Return value:  Size  Location     Type
  1907 ;;                  3    0[COMRAM] float 
  1908 ;; Registers used:
  1909 ;;		wreg, status,2, status,0
  1910 ;; Tracked objects:
  1911 ;;		On entry : 0/0
  1912 ;;		On exit  : 0/0
  1913 ;;		Unchanged: 0/0
  1914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1915 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1918 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1919 ;;Total ram usage:        3 bytes
  1920 ;; Hardware stack levels used:    1
  1921 ;; This function calls:
  1922 ;;		Nothing
  1923 ;; This function is called by:
  1924 ;;		_sin
  1925 ;; This function uses a non-reentrant model
  1926 ;;
  1927                           
  1928                           	psect	text9
  1929  001EA4                     __ptext9:
  1930                           	opt stack 0
  1931  001EA4                     ___ftneg:
  1932                           	opt stack 29
  1933                           
  1934                           ;incstack = 0
  1935  001EA4  5001               	movf	___ftneg@f1,w,c
  1936  001EA6  1002               	iorwf	___ftneg@f1+1,w,c
  1937  001EA8  1003               	iorwf	___ftneg@f1+2,w,c
  1938  001EAA  B4D8               	btfsc	status,2,c
  1939  001EAC  D006               	goto	l353
  1940  001EAE  0E00               	movlw	0
  1941  001EB0  1A01               	xorwf	___ftneg@f1,f,c
  1942  001EB2  0E00               	movlw	0
  1943  001EB4  1A02               	xorwf	___ftneg@f1+1,f,c
  1944  001EB6  0E80               	movlw	128
  1945  001EB8  1A03               	xorwf	___ftneg@f1+2,f,c
  1946  001EBA                     l353:
  1947  001EBA  C001  F001         	movff	___ftneg@f1,?___ftneg
  1948  001EBE  C002  F002         	movff	___ftneg@f1+1,?___ftneg+1
  1949  001EC2  C003  F003         	movff	___ftneg@f1+2,?___ftneg+2
  1950  001EC6  0012               	return		;funcret
  1951  001EC8                     __end_of___ftneg:
  1952                           	opt stack 0
  1953                           tblptru	equ	0xFF8
  1954                           tblptrh	equ	0xFF7
  1955                           tblptrl	equ	0xFF6
  1956                           tablat	equ	0xFF5
  1957                           prodh	equ	0xFF4
  1958                           prodl	equ	0xFF3
  1959                           wreg	equ	0xFE8
  1960                           postinc2	equ	0xFDE
  1961                           postdec2	equ	0xFDD
  1962                           fsr2h	equ	0xFDA
  1963                           fsr2l	equ	0xFD9
  1964                           status	equ	0xFD8
  1965                           
  1966 ;; *************** function _set_pwm_duty_cycle *****************
  1967 ;; Defined at:
  1968 ;;		line 81 in file "main.c"
  1969 ;; Parameters:    Size  Location     Type
  1970 ;;  duty            3   62[COMRAM] float 
  1971 ;; Auto vars:     Size  Location     Type
  1972 ;;  duty_val        2   69[COMRAM] unsigned short 
  1973 ;;  max_duty_val    2   67[COMRAM] unsigned short 
  1974 ;; Return value:  Size  Location     Type
  1975 ;;                  1    wreg      void 
  1976 ;; Registers used:
  1977 ;;		wreg, status,2, status,0, cstack
  1978 ;; Tracked objects:
  1979 ;;		On entry : 0/0
  1980 ;;		On exit  : 0/0
  1981 ;;		Unchanged: 0/0
  1982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1983 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1984 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1985 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1986 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1987 ;;Total ram usage:        9 bytes
  1988 ;; Hardware stack levels used:    1
  1989 ;; Hardware stack levels required when called:    2
  1990 ;; This function calls:
  1991 ;;		___ftdiv
  1992 ;;		___ftge
  1993 ;;		___ftmul
  1994 ;;		___fttol
  1995 ;;		___lwtoft
  1996 ;; This function is called by:
  1997 ;;		_main
  1998 ;; This function uses a non-reentrant model
  1999 ;;
  2000                           
  2001                           	psect	text10
  2002  001A2A                     __ptext10:
  2003                           	opt stack 0
  2004  001A2A                     _set_pwm_duty_cycle:
  2005                           	opt stack 28
  2006                           
  2007                           ;main.c: 82: if((duty >= 0) && (duty <= 100.0)){
  2008                           
  2009                           ;incstack = 0
  2010  001A2A  BE41               	btfsc	set_pwm_duty_cycle@duty+2,7,c
  2011  001A2C  0012               	return	
  2012  001A2E  0E00               	movlw	0
  2013  001A30  6E01               	movwf	___ftge@ff1,c
  2014  001A32  0EC8               	movlw	200
  2015  001A34  6E02               	movwf	___ftge@ff1+1,c
  2016  001A36  0E42               	movlw	66
  2017  001A38  6E03               	movwf	___ftge@ff1+2,c
  2018  001A3A  C03F  F004         	movff	set_pwm_duty_cycle@duty,___ftge@ff2
  2019  001A3E  C040  F005         	movff	set_pwm_duty_cycle@duty+1,___ftge@ff2+1
  2020  001A42  C041  F006         	movff	set_pwm_duty_cycle@duty+2,___ftge@ff2+2
  2021  001A46  ECC5  F00D         	call	___ftge	;wreg free
  2022  001A4A  A0D8               	btfss	status,0,c
  2023  001A4C  0012               	return	
  2024                           
  2025                           ;main.c: 87: unsigned short max_duty_val = PR2 + 1;
  2026  001A4E  0E01               	movlw	1
  2027  001A50  24CB               	addwf	4043,w,c	;volatile
  2028  001A52  6E44               	movwf	set_pwm_duty_cycle@max_duty_val,c
  2029  001A54  6A45               	clrf	set_pwm_duty_cycle@max_duty_val+1,c
  2030  001A56  0E00               	movlw	0
  2031  001A58  2245               	addwfc	set_pwm_duty_cycle@max_duty_val+1,f,c
  2032                           
  2033                           ;main.c: 88: unsigned short duty_val = (unsigned short)(
  2034                           ;main.c: 89: (duty / 100.0) * (float)max_duty_val
  2035                           ;main.c: 90: );
  2036  001A5A  C044  F009         	movff	set_pwm_duty_cycle@max_duty_val,___lwtoft@c
  2037  001A5E  C045  F00A         	movff	set_pwm_duty_cycle@max_duty_val+1,___lwtoft@c+1
  2038  001A62  EC64  F00F         	call	___lwtoft	;wreg free
  2039  001A66  C009  F015         	movff	?___lwtoft,___ftmul@f2
  2040  001A6A  C00A  F016         	movff	?___lwtoft+1,___ftmul@f2+1
  2041  001A6E  C00B  F017         	movff	?___lwtoft+2,___ftmul@f2+2
  2042  001A72  0E00               	movlw	0
  2043  001A74  6E24               	movwf	___ftdiv@f2,c
  2044  001A76  0EC8               	movlw	200
  2045  001A78  6E25               	movwf	___ftdiv@f2+1,c
  2046  001A7A  0E42               	movlw	66
  2047  001A7C  6E26               	movwf	___ftdiv@f2+2,c
  2048  001A7E  C03F  F021         	movff	set_pwm_duty_cycle@duty,___ftdiv@f1
  2049  001A82  C040  F022         	movff	set_pwm_duty_cycle@duty+1,___ftdiv@f1+1
  2050  001A86  C041  F023         	movff	set_pwm_duty_cycle@duty+2,___ftdiv@f1+2
  2051  001A8A  ECCA  F00B         	call	___ftdiv	;wreg free
  2052  001A8E  C021  F012         	movff	?___ftdiv,___ftmul@f1
  2053  001A92  C022  F013         	movff	?___ftdiv+1,___ftmul@f1+1
  2054  001A96  C023  F014         	movff	?___ftdiv+2,___ftmul@f1+2
  2055  001A9A  EC50  F00B         	call	___ftmul	;wreg free
  2056  001A9E  C012  F030         	movff	?___ftmul,___fttol@f1
  2057  001AA2  C013  F031         	movff	?___ftmul+1,___fttol@f1+1
  2058  001AA6  C014  F032         	movff	?___ftmul+2,___fttol@f1+2
  2059  001AAA  ECD6  F00A         	call	___fttol	;wreg free
  2060  001AAE  C030  F046         	movff	?___fttol,set_pwm_duty_cycle@duty_val
  2061  001AB2  C031  F047         	movff	?___fttol+1,set_pwm_duty_cycle@duty_val+1
  2062                           
  2063                           ;main.c: 93: CCP1X = duty_val & 2;
  2064  001AB6  9ABD               	bcf	4029,5,c	;volatile
  2065                           
  2066                           ;main.c: 94: CCP1Y = duty_val & 1;
  2067  001AB8  A046               	btfss	set_pwm_duty_cycle@duty_val,0,c
  2068  001ABA  D002               	goto	u1440
  2069  001ABC  88BD               	bsf	4029,4,c	;volatile
  2070  001ABE  D001               	goto	u1455
  2071  001AC0                     u1440:
  2072  001AC0  98BD               	bcf	4029,4,c	;volatile
  2073  001AC2                     u1455:
  2074                           
  2075                           ;main.c: 95: CCPR1L = duty_val >> 2;
  2076  001AC2  C046  F042         	movff	set_pwm_duty_cycle@duty_val,??_set_pwm_duty_cycle
  2077  001AC6  C047  F043         	movff	set_pwm_duty_cycle@duty_val+1,??_set_pwm_duty_cycle+1
  2078  001ACA  90D8               	bcf	status,0,c
  2079  001ACC  3243               	rrcf	??_set_pwm_duty_cycle+1,f,c
  2080  001ACE  3242               	rrcf	??_set_pwm_duty_cycle,f,c
  2081  001AD0  90D8               	bcf	status,0,c
  2082  001AD2  3243               	rrcf	??_set_pwm_duty_cycle+1,f,c
  2083  001AD4  3242               	rrcf	??_set_pwm_duty_cycle,f,c
  2084  001AD6  5042               	movf	??_set_pwm_duty_cycle,w,c
  2085  001AD8  6EBE               	movwf	4030,c	;volatile
  2086  001ADA  0012               	return	
  2087  001ADC                     __end_of_set_pwm_duty_cycle:
  2088                           	opt stack 0
  2089                           tblptru	equ	0xFF8
  2090                           tblptrh	equ	0xFF7
  2091                           tblptrl	equ	0xFF6
  2092                           tablat	equ	0xFF5
  2093                           prodh	equ	0xFF4
  2094                           prodl	equ	0xFF3
  2095                           wreg	equ	0xFE8
  2096                           postinc2	equ	0xFDE
  2097                           postdec2	equ	0xFDD
  2098                           fsr2h	equ	0xFDA
  2099                           fsr2l	equ	0xFD9
  2100                           status	equ	0xFD8
  2101                           
  2102 ;; *************** function ___lwtoft *****************
  2103 ;; Defined at:
  2104 ;;		line 28 in file "D:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwtoft.c"
  2105 ;; Parameters:    Size  Location     Type
  2106 ;;  c               2    8[COMRAM] unsigned int 
  2107 ;; Auto vars:     Size  Location     Type
  2108 ;;		None
  2109 ;; Return value:  Size  Location     Type
  2110 ;;                  3    8[COMRAM] float 
  2111 ;; Registers used:
  2112 ;;		wreg, status,2, status,0, cstack
  2113 ;; Tracked objects:
  2114 ;;		On entry : 0/0
  2115 ;;		On exit  : 0/0
  2116 ;;		Unchanged: 0/0
  2117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2118 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2121 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2122 ;;Total ram usage:        3 bytes
  2123 ;; Hardware stack levels used:    1
  2124 ;; Hardware stack levels required when called:    1
  2125 ;; This function calls:
  2126 ;;		___ftpack
  2127 ;; This function is called by:
  2128 ;;		_set_pwm_duty_cycle
  2129 ;; This function uses a non-reentrant model
  2130 ;;
  2131                           
  2132                           	psect	text11
  2133  001EC8                     __ptext11:
  2134                           	opt stack 0
  2135  001EC8                     ___lwtoft:
  2136                           	opt stack 28
  2137                           
  2138                           ;incstack = 0
  2139  001EC8  C009  F001         	movff	___lwtoft@c,___ftpack@arg
  2140  001ECC  C00A  F002         	movff	___lwtoft@c+1,___ftpack@arg+1
  2141  001ED0  6A03               	clrf	___ftpack@arg+2,c
  2142  001ED2  0E8E               	movlw	142
  2143  001ED4  6E04               	movwf	___ftpack@exp,c
  2144  001ED6  0E00               	movlw	0
  2145  001ED8  6E05               	movwf	___ftpack@sign,c
  2146  001EDA  EC6E  F00D         	call	___ftpack	;wreg free
  2147  001EDE  C001  F009         	movff	?___ftpack,?___lwtoft
  2148  001EE2  C002  F00A         	movff	?___ftpack+1,?___lwtoft+1
  2149  001EE6  C003  F00B         	movff	?___ftpack+2,?___lwtoft+2
  2150  001EEA  0012               	return	
  2151  001EEC                     __end_of___lwtoft:
  2152                           	opt stack 0
  2153                           tblptru	equ	0xFF8
  2154                           tblptrh	equ	0xFF7
  2155                           tblptrl	equ	0xFF6
  2156                           tablat	equ	0xFF5
  2157                           prodh	equ	0xFF4
  2158                           prodl	equ	0xFF3
  2159                           wreg	equ	0xFE8
  2160                           postinc2	equ	0xFDE
  2161                           postdec2	equ	0xFDD
  2162                           fsr2h	equ	0xFDA
  2163                           fsr2l	equ	0xFD9
  2164                           status	equ	0xFD8
  2165                           
  2166 ;; *************** function ___fttol *****************
  2167 ;; Defined at:
  2168 ;;		line 44 in file "D:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\fttol.c"
  2169 ;; Parameters:    Size  Location     Type
  2170 ;;  f1              3   47[COMRAM] float 
  2171 ;; Auto vars:     Size  Location     Type
  2172 ;;  lval            4   57[COMRAM] unsigned long 
  2173 ;;  exp1            1   61[COMRAM] unsigned char 
  2174 ;;  sign1           1   56[COMRAM] unsigned char 
  2175 ;; Return value:  Size  Location     Type
  2176 ;;                  4   47[COMRAM] long 
  2177 ;; Registers used:
  2178 ;;		wreg, status,2, status,0
  2179 ;; Tracked objects:
  2180 ;;		On entry : 0/0
  2181 ;;		On exit  : 0/0
  2182 ;;		Unchanged: 0/0
  2183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2184 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2185 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2186 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2187 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2188 ;;Total ram usage:       15 bytes
  2189 ;; Hardware stack levels used:    1
  2190 ;; This function calls:
  2191 ;;		Nothing
  2192 ;; This function is called by:
  2193 ;;		_set_pwm_duty_cycle
  2194 ;;		_floor
  2195 ;; This function uses a non-reentrant model
  2196 ;;
  2197                           
  2198                           	psect	text12
  2199  0015AC                     __ptext12:
  2200                           	opt stack 0
  2201  0015AC                     ___fttol:
  2202                           	opt stack 28
  2203                           
  2204                           ;incstack = 0
  2205  0015AC  C032  F034         	movff	___fttol@f1+2,??___fttol
  2206  0015B0  6A35               	clrf	(??___fttol+1)& (0+255),c
  2207  0015B2  6A36               	clrf	(??___fttol+2)& (0+255),c
  2208  0015B4  3431               	rlcf	___fttol@f1+1,w,c
  2209  0015B6  3634               	rlcf	??___fttol& (0+255),f,c
  2210  0015B8  E301               	bnc	u1201
  2211  0015BA  8035               	bsf	(??___fttol+1)& (0+255),0,c
  2212  0015BC                     u1201:
  2213  0015BC  5034               	movf	??___fttol,w,c
  2214  0015BE  6E3E               	movwf	___fttol@exp1,c
  2215  0015C0  503E               	movf	___fttol@exp1,w,c
  2216  0015C2  A4D8               	btfss	status,2,c
  2217  0015C4  D009               	goto	l363
  2218  0015C6  0E00               	movlw	0
  2219  0015C8  6E30               	movwf	?___fttol,c
  2220  0015CA  0E00               	movlw	0
  2221  0015CC  6E31               	movwf	?___fttol+1,c
  2222  0015CE  0E00               	movlw	0
  2223  0015D0  6E32               	movwf	?___fttol+2,c
  2224  0015D2  0E00               	movlw	0
  2225  0015D4  6E33               	movwf	?___fttol+3,c
  2226  0015D6  0012               	return	
  2227  0015D8                     l363:
  2228  0015D8  0E17               	movlw	23
  2229  0015DA  6E34               	movwf	??___fttol& (0+255),c
  2230  0015DC  C030  F035         	movff	___fttol@f1,??___fttol+1
  2231  0015E0  C031  F036         	movff	___fttol@f1+1,??___fttol+2
  2232  0015E4  C032  F037         	movff	___fttol@f1+2,??___fttol+3
  2233  0015E8  2834               	incf	??___fttol,w,c
  2234  0015EA  6E38               	movwf	(??___fttol+4)& (0+255),c
  2235  0015EC  D004               	goto	u1220
  2236  0015EE                     u1225:
  2237  0015EE  90D8               	bcf	status,0,c
  2238  0015F0  3237               	rrcf	??___fttol+3,f,c
  2239  0015F2  3236               	rrcf	??___fttol+2,f,c
  2240  0015F4  3235               	rrcf	??___fttol+1,f,c
  2241  0015F6                     u1220:
  2242  0015F6  2E38               	decfsz	(??___fttol+4)& (0+255),f,c
  2243  0015F8  D7FA               	goto	u1225
  2244  0015FA  5035               	movf	??___fttol+1,w,c
  2245  0015FC  6E39               	movwf	___fttol@sign1,c
  2246  0015FE  8E31               	bsf	___fttol@f1+1,7,c
  2247  001600  0EFF               	movlw	255
  2248  001602  1630               	andwf	___fttol@f1,f,c
  2249  001604  0EFF               	movlw	255
  2250  001606  1631               	andwf	___fttol@f1+1,f,c
  2251  001608  0E00               	movlw	0
  2252  00160A  1632               	andwf	___fttol@f1+2,f,c
  2253  00160C  5030               	movf	___fttol@f1,w,c
  2254  00160E  6E3A               	movwf	___fttol@lval,c
  2255  001610  5031               	movf	___fttol@f1+1,w,c
  2256  001612  6E3B               	movwf	___fttol@lval+1,c
  2257  001614  5032               	movf	___fttol@f1+2,w,c
  2258  001616  6E3C               	movwf	___fttol@lval+2,c
  2259  001618  6A3D               	clrf	___fttol@lval+3,c
  2260  00161A  0E8E               	movlw	142
  2261  00161C  5E3E               	subwf	___fttol@exp1,f,c
  2262  00161E  AE3E               	btfss	___fttol@exp1,7,c
  2263  001620  D016               	goto	l365
  2264  001622  503E               	movf	___fttol@exp1,w,c
  2265  001624  0A80               	xorlw	128
  2266  001626  0F8F               	addlw	143
  2267  001628  B0D8               	btfsc	status,0,c
  2268  00162A  D009               	goto	l366
  2269  00162C  0E00               	movlw	0
  2270  00162E  6E30               	movwf	?___fttol,c
  2271  001630  0E00               	movlw	0
  2272  001632  6E31               	movwf	?___fttol+1,c
  2273  001634  0E00               	movlw	0
  2274  001636  6E32               	movwf	?___fttol+2,c
  2275  001638  0E00               	movlw	0
  2276  00163A  6E33               	movwf	?___fttol+3,c
  2277  00163C  0012               	return	
  2278  00163E                     l366:
  2279  00163E  90D8               	bcf	status,0,c
  2280  001640  323D               	rrcf	___fttol@lval+3,f,c
  2281  001642  323C               	rrcf	___fttol@lval+2,f,c
  2282  001644  323B               	rrcf	___fttol@lval+1,f,c
  2283  001646  323A               	rrcf	___fttol@lval,f,c
  2284  001648  3E3E               	incfsz	___fttol@exp1,f,c
  2285  00164A  D7F9               	goto	l366
  2286  00164C  D015               	goto	u1260
  2287  00164E                     l365:
  2288  00164E  0E17               	movlw	23
  2289  001650  643E               	cpfsgt	___fttol@exp1,c
  2290  001652  D00F               	goto	l371
  2291  001654  0E00               	movlw	0
  2292  001656  6E30               	movwf	?___fttol,c
  2293  001658  0E00               	movlw	0
  2294  00165A  6E31               	movwf	?___fttol+1,c
  2295  00165C  0E00               	movlw	0
  2296  00165E  6E32               	movwf	?___fttol+2,c
  2297  001660  0E00               	movlw	0
  2298  001662  6E33               	movwf	?___fttol+3,c
  2299  001664  0012               	return	
  2300  001666  90D8               	bcf	status,0,c
  2301  001668  363A               	rlcf	___fttol@lval,f,c
  2302  00166A  363B               	rlcf	___fttol@lval+1,f,c
  2303  00166C  363C               	rlcf	___fttol@lval+2,f,c
  2304  00166E  363D               	rlcf	___fttol@lval+3,f,c
  2305  001670  063E               	decf	___fttol@exp1,f,c
  2306  001672                     l371:
  2307  001672  503E               	movf	___fttol@exp1,w,c
  2308  001674  A4D8               	btfss	status,2,c
  2309  001676  D7F7               	goto	l372
  2310  001678                     u1260:
  2311  001678  5039               	movf	___fttol@sign1,w,c
  2312  00167A  B4D8               	btfsc	status,2,c
  2313  00167C  D008               	goto	l374
  2314  00167E  1E3D               	comf	___fttol@lval+3,f,c
  2315  001680  1E3C               	comf	___fttol@lval+2,f,c
  2316  001682  1E3B               	comf	___fttol@lval+1,f,c
  2317  001684  6C3A               	negf	___fttol@lval,c
  2318  001686  0E00               	movlw	0
  2319  001688  223B               	addwfc	___fttol@lval+1,f,c
  2320  00168A  223C               	addwfc	___fttol@lval+2,f,c
  2321  00168C  223D               	addwfc	___fttol@lval+3,f,c
  2322  00168E                     l374:
  2323  00168E  C03A  F030         	movff	___fttol@lval,?___fttol
  2324  001692  C03B  F031         	movff	___fttol@lval+1,?___fttol+1
  2325  001696  C03C  F032         	movff	___fttol@lval+2,?___fttol+2
  2326  00169A  C03D  F033         	movff	___fttol@lval+3,?___fttol+3
  2327  00169E  0012               	return	
  2328  0016A0                     __end_of___fttol:
  2329                           	opt stack 0
  2330                           tblptru	equ	0xFF8
  2331                           tblptrh	equ	0xFF7
  2332                           tblptrl	equ	0xFF6
  2333                           tablat	equ	0xFF5
  2334                           prodh	equ	0xFF4
  2335                           prodl	equ	0xFF3
  2336                           wreg	equ	0xFE8
  2337                           postinc2	equ	0xFDE
  2338                           postdec2	equ	0xFDD
  2339                           fsr2h	equ	0xFDA
  2340                           fsr2l	equ	0xFD9
  2341                           status	equ	0xFD8
  2342                           
  2343 ;; *************** function ___ftmul *****************
  2344 ;; Defined at:
  2345 ;;		line 62 in file "D:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftmul.c"
  2346 ;; Parameters:    Size  Location     Type
  2347 ;;  f1              3   17[COMRAM] float 
  2348 ;;  f2              3   20[COMRAM] float 
  2349 ;; Auto vars:     Size  Location     Type
  2350 ;;  f3_as_produc    3   27[COMRAM] unsigned um
  2351 ;;  sign            1   31[COMRAM] unsigned char 
  2352 ;;  cntr            1   30[COMRAM] unsigned char 
  2353 ;;  exp             1   26[COMRAM] unsigned char 
  2354 ;; Return value:  Size  Location     Type
  2355 ;;                  3   17[COMRAM] float 
  2356 ;; Registers used:
  2357 ;;		wreg, status,2, status,0, cstack
  2358 ;; Tracked objects:
  2359 ;;		On entry : 0/0
  2360 ;;		On exit  : 0/0
  2361 ;;		Unchanged: 0/0
  2362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2363 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2364 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2365 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2366 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2367 ;;Total ram usage:       15 bytes
  2368 ;; Hardware stack levels used:    1
  2369 ;; Hardware stack levels required when called:    1
  2370 ;; This function calls:
  2371 ;;		___ftpack
  2372 ;; This function is called by:
  2373 ;;		_set_pwm_duty_cycle
  2374 ;;		_main
  2375 ;;		_sin
  2376 ;;		_eval_poly
  2377 ;; This function uses a non-reentrant model
  2378 ;;
  2379                           
  2380                           	psect	text13
  2381  0016A0                     __ptext13:
  2382                           	opt stack 0
  2383  0016A0                     ___ftmul:
  2384                           	opt stack 27
  2385                           
  2386                           ;incstack = 0
  2387  0016A0  C014  F018         	movff	___ftmul@f1+2,??___ftmul
  2388  0016A4  6A19               	clrf	(??___ftmul+1)& (0+255),c
  2389  0016A6  6A1A               	clrf	(??___ftmul+2)& (0+255),c
  2390  0016A8  3413               	rlcf	___ftmul@f1+1,w,c
  2391  0016AA  3618               	rlcf	??___ftmul& (0+255),f,c
  2392  0016AC  E301               	bnc	u1111
  2393  0016AE  8019               	bsf	(??___ftmul+1)& (0+255),0,c
  2394  0016B0                     u1111:
  2395  0016B0  5018               	movf	??___ftmul,w,c
  2396  0016B2  6E1B               	movwf	___ftmul@exp,c
  2397  0016B4  501B               	movf	___ftmul@exp,w,c
  2398  0016B6  A4D8               	btfss	status,2,c
  2399  0016B8  D007               	goto	l342
  2400  0016BA  0E00               	movlw	0
  2401  0016BC  6E12               	movwf	?___ftmul,c
  2402  0016BE  0E00               	movlw	0
  2403  0016C0  6E13               	movwf	?___ftmul+1,c
  2404  0016C2  0E00               	movlw	0
  2405  0016C4  6E14               	movwf	?___ftmul+2,c
  2406  0016C6  0012               	return	
  2407  0016C8                     l342:
  2408  0016C8  C017  F018         	movff	___ftmul@f2+2,??___ftmul
  2409  0016CC  6A19               	clrf	(??___ftmul+1)& (0+255),c
  2410  0016CE  6A1A               	clrf	(??___ftmul+2)& (0+255),c
  2411  0016D0  3416               	rlcf	___ftmul@f2+1,w,c
  2412  0016D2  3618               	rlcf	??___ftmul& (0+255),f,c
  2413  0016D4  E301               	bnc	u1131
  2414  0016D6  8019               	bsf	(??___ftmul+1)& (0+255),0,c
  2415  0016D8                     u1131:
  2416  0016D8  5018               	movf	??___ftmul,w,c
  2417  0016DA  6E20               	movwf	___ftmul@sign,c
  2418  0016DC  5020               	movf	___ftmul@sign,w,c
  2419  0016DE  A4D8               	btfss	status,2,c
  2420  0016E0  D007               	goto	l344
  2421  0016E2  0E00               	movlw	0
  2422  0016E4  6E12               	movwf	?___ftmul,c
  2423  0016E6  0E00               	movlw	0
  2424  0016E8  6E13               	movwf	?___ftmul+1,c
  2425  0016EA  0E00               	movlw	0
  2426  0016EC  6E14               	movwf	?___ftmul+2,c
  2427  0016EE  0012               	return	
  2428  0016F0                     l344:
  2429  0016F0  5020               	movf	___ftmul@sign,w,c
  2430  0016F2  0F7B               	addlw	123
  2431  0016F4  261B               	addwf	___ftmul@exp,f,c
  2432  0016F6  C014  F020         	movff	___ftmul@f1+2,___ftmul@sign
  2433  0016FA  5017               	movf	___ftmul@f2+2,w,c
  2434  0016FC  1A20               	xorwf	___ftmul@sign,f,c
  2435  0016FE  0E80               	movlw	128
  2436  001700  1620               	andwf	___ftmul@sign,f,c
  2437  001702  8E13               	bsf	___ftmul@f1+1,7,c
  2438  001704  8E16               	bsf	___ftmul@f2+1,7,c
  2439  001706  0EFF               	movlw	255
  2440  001708  1615               	andwf	___ftmul@f2,f,c
  2441  00170A  0EFF               	movlw	255
  2442  00170C  1616               	andwf	___ftmul@f2+1,f,c
  2443  00170E  0E00               	movlw	0
  2444  001710  1617               	andwf	___ftmul@f2+2,f,c
  2445  001712  0E00               	movlw	0
  2446  001714  6E1C               	movwf	___ftmul@f3_as_product,c
  2447  001716  0E00               	movlw	0
  2448  001718  6E1D               	movwf	___ftmul@f3_as_product+1,c
  2449  00171A  0E00               	movlw	0
  2450  00171C  6E1E               	movwf	___ftmul@f3_as_product+2,c
  2451  00171E  0E07               	movlw	7
  2452  001720  6E1F               	movwf	___ftmul@cntr,c
  2453  001722  A012               	btfss	___ftmul@f1,0,c
  2454  001724  D006               	goto	l346
  2455  001726  5015               	movf	___ftmul@f2,w,c
  2456  001728  261C               	addwf	___ftmul@f3_as_product,f,c
  2457  00172A  5016               	movf	___ftmul@f2+1,w,c
  2458  00172C  221D               	addwfc	___ftmul@f3_as_product+1,f,c
  2459  00172E  5017               	movf	___ftmul@f2+2,w,c
  2460  001730  221E               	addwfc	___ftmul@f3_as_product+2,f,c
  2461  001732                     l346:
  2462  001732  90D8               	bcf	status,0,c
  2463  001734  3214               	rrcf	___ftmul@f1+2,f,c
  2464  001736  3213               	rrcf	___ftmul@f1+1,f,c
  2465  001738  3212               	rrcf	___ftmul@f1,f,c
  2466  00173A  90D8               	bcf	status,0,c
  2467  00173C  3615               	rlcf	___ftmul@f2,f,c
  2468  00173E  3616               	rlcf	___ftmul@f2+1,f,c
  2469  001740  3617               	rlcf	___ftmul@f2+2,f,c
  2470  001742  2E1F               	decfsz	___ftmul@cntr,f,c
  2471  001744  D7EE               	goto	l345
  2472  001746  0E09               	movlw	9
  2473  001748  6E1F               	movwf	___ftmul@cntr,c
  2474  00174A  A012               	btfss	___ftmul@f1,0,c
  2475  00174C  D006               	goto	l349
  2476  00174E  5015               	movf	___ftmul@f2,w,c
  2477  001750  261C               	addwf	___ftmul@f3_as_product,f,c
  2478  001752  5016               	movf	___ftmul@f2+1,w,c
  2479  001754  221D               	addwfc	___ftmul@f3_as_product+1,f,c
  2480  001756  5017               	movf	___ftmul@f2+2,w,c
  2481  001758  221E               	addwfc	___ftmul@f3_as_product+2,f,c
  2482  00175A                     l349:
  2483  00175A  90D8               	bcf	status,0,c
  2484  00175C  3214               	rrcf	___ftmul@f1+2,f,c
  2485  00175E  3213               	rrcf	___ftmul@f1+1,f,c
  2486  001760  3212               	rrcf	___ftmul@f1,f,c
  2487  001762  90D8               	bcf	status,0,c
  2488  001764  321E               	rrcf	___ftmul@f3_as_product+2,f,c
  2489  001766  321D               	rrcf	___ftmul@f3_as_product+1,f,c
  2490  001768  321C               	rrcf	___ftmul@f3_as_product,f,c
  2491  00176A  2E1F               	decfsz	___ftmul@cntr,f,c
  2492  00176C  D7EE               	goto	l348
  2493  00176E  C01C  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  2494  001772  C01D  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2495  001776  C01E  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2496  00177A  C01B  F004         	movff	___ftmul@exp,___ftpack@exp
  2497  00177E  C020  F005         	movff	___ftmul@sign,___ftpack@sign
  2498  001782  EC6E  F00D         	call	___ftpack	;wreg free
  2499  001786  C001  F012         	movff	?___ftpack,?___ftmul
  2500  00178A  C002  F013         	movff	?___ftpack+1,?___ftmul+1
  2501  00178E  C003  F014         	movff	?___ftpack+2,?___ftmul+2
  2502  001792  0012               	return	
  2503  001794                     __end_of___ftmul:
  2504                           	opt stack 0
  2505                           tblptru	equ	0xFF8
  2506                           tblptrh	equ	0xFF7
  2507                           tblptrl	equ	0xFF6
  2508                           tablat	equ	0xFF5
  2509                           prodh	equ	0xFF4
  2510                           prodl	equ	0xFF3
  2511                           wreg	equ	0xFE8
  2512                           postinc2	equ	0xFDE
  2513                           postdec2	equ	0xFDD
  2514                           fsr2h	equ	0xFDA
  2515                           fsr2l	equ	0xFD9
  2516                           status	equ	0xFD8
  2517                           
  2518 ;; *************** function ___ftge *****************
  2519 ;; Defined at:
  2520 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftge.c"
  2521 ;; Parameters:    Size  Location     Type
  2522 ;;  ff1             3    0[COMRAM] float 
  2523 ;;  ff2             3    3[COMRAM] float 
  2524 ;; Auto vars:     Size  Location     Type
  2525 ;;		None
  2526 ;; Return value:  Size  Location     Type
  2527 ;;		None               void
  2528 ;; Registers used:
  2529 ;;		wreg, status,2, status,0
  2530 ;; Tracked objects:
  2531 ;;		On entry : 0/0
  2532 ;;		On exit  : 0/0
  2533 ;;		Unchanged: 0/0
  2534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2535 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2537 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2538 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2539 ;;Total ram usage:        9 bytes
  2540 ;; Hardware stack levels used:    1
  2541 ;; This function calls:
  2542 ;;		Nothing
  2543 ;; This function is called by:
  2544 ;;		_set_pwm_duty_cycle
  2545 ;;		_sin
  2546 ;;		_floor
  2547 ;; This function uses a non-reentrant model
  2548 ;;
  2549                           
  2550                           	psect	text14
  2551  001B8A                     __ptext14:
  2552                           	opt stack 0
  2553  001B8A                     ___ftge:
  2554                           	opt stack 28
  2555                           
  2556                           ;incstack = 0
  2557  001B8A  AE03               	btfss	___ftge@ff1+2,7,c
  2558  001B8C  D016               	goto	l335
  2559  001B8E  C001  F007         	movff	___ftge@ff1,??___ftge
  2560  001B92  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  2561  001B96  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  2562  001B9A  1E07               	comf	??___ftge,f,c
  2563  001B9C  1E08               	comf	??___ftge+1,f,c
  2564  001B9E  1E09               	comf	??___ftge+2,f,c
  2565  001BA0  2A07               	incf	??___ftge,f,c
  2566  001BA2  0E00               	movlw	0
  2567  001BA4  2208               	addwfc	??___ftge+1,f,c
  2568  001BA6  2209               	addwfc	??___ftge+2,f,c
  2569  001BA8  0E00               	movlw	0
  2570  001BAA  2407               	addwf	??___ftge,w,c
  2571  001BAC  6E01               	movwf	___ftge@ff1,c
  2572  001BAE  0E00               	movlw	0
  2573  001BB0  2008               	addwfc	??___ftge+1,w,c
  2574  001BB2  6E02               	movwf	___ftge@ff1+1,c
  2575  001BB4  0E80               	movlw	128
  2576  001BB6  2009               	addwfc	??___ftge+2,w,c
  2577  001BB8  6E03               	movwf	___ftge@ff1+2,c
  2578  001BBA                     l335:
  2579  001BBA  AE06               	btfss	___ftge@ff2+2,7,c
  2580  001BBC  D016               	goto	l336
  2581  001BBE  C004  F007         	movff	___ftge@ff2,??___ftge
  2582  001BC2  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  2583  001BC6  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  2584  001BCA  1E07               	comf	??___ftge,f,c
  2585  001BCC  1E08               	comf	??___ftge+1,f,c
  2586  001BCE  1E09               	comf	??___ftge+2,f,c
  2587  001BD0  2A07               	incf	??___ftge,f,c
  2588  001BD2  0E00               	movlw	0
  2589  001BD4  2208               	addwfc	??___ftge+1,f,c
  2590  001BD6  2209               	addwfc	??___ftge+2,f,c
  2591  001BD8  0E00               	movlw	0
  2592  001BDA  2407               	addwf	??___ftge,w,c
  2593  001BDC  6E04               	movwf	___ftge@ff2,c
  2594  001BDE  0E00               	movlw	0
  2595  001BE0  2008               	addwfc	??___ftge+1,w,c
  2596  001BE2  6E05               	movwf	___ftge@ff2+1,c
  2597  001BE4  0E80               	movlw	128
  2598  001BE6  2009               	addwfc	??___ftge+2,w,c
  2599  001BE8  6E06               	movwf	___ftge@ff2+2,c
  2600  001BEA                     l336:
  2601  001BEA  0E00               	movlw	0
  2602  001BEC  1A01               	xorwf	___ftge@ff1,f,c
  2603  001BEE  0E00               	movlw	0
  2604  001BF0  1A02               	xorwf	___ftge@ff1+1,f,c
  2605  001BF2  0E80               	movlw	128
  2606  001BF4  1A03               	xorwf	___ftge@ff1+2,f,c
  2607  001BF6  0E00               	movlw	0
  2608  001BF8  1A04               	xorwf	___ftge@ff2,f,c
  2609  001BFA  0E00               	movlw	0
  2610  001BFC  1A05               	xorwf	___ftge@ff2+1,f,c
  2611  001BFE  0E80               	movlw	128
  2612  001C00  1A06               	xorwf	___ftge@ff2+2,f,c
  2613  001C02  5004               	movf	___ftge@ff2,w,c
  2614  001C04  5C01               	subwf	___ftge@ff1,w,c
  2615  001C06  5005               	movf	___ftge@ff2+1,w,c
  2616  001C08  5802               	subwfb	___ftge@ff1+1,w,c
  2617  001C0A  5006               	movf	___ftge@ff2+2,w,c
  2618  001C0C  5803               	subwfb	___ftge@ff1+2,w,c
  2619  001C0E  B0D8               	btfsc	status,0,c
  2620  001C10  D002               	goto	l1214
  2621  001C12  90D8               	bcf	status,0,c
  2622  001C14  0012               	return	
  2623  001C16                     l1214:
  2624  001C16  80D8               	bsf	status,0,c
  2625  001C18  0012               	return	
  2626  001C1A                     __end_of___ftge:
  2627                           	opt stack 0
  2628                           tblptru	equ	0xFF8
  2629                           tblptrh	equ	0xFF7
  2630                           tblptrl	equ	0xFF6
  2631                           tablat	equ	0xFF5
  2632                           prodh	equ	0xFF4
  2633                           prodl	equ	0xFF3
  2634                           wreg	equ	0xFE8
  2635                           postinc2	equ	0xFDE
  2636                           postdec2	equ	0xFDD
  2637                           fsr2h	equ	0xFDA
  2638                           fsr2l	equ	0xFD9
  2639                           status	equ	0xFD8
  2640                           
  2641 ;; *************** function ___ftdiv *****************
  2642 ;; Defined at:
  2643 ;;		line 54 in file "D:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftdiv.c"
  2644 ;; Parameters:    Size  Location     Type
  2645 ;;  f1              3   32[COMRAM] float 
  2646 ;;  f2              3   35[COMRAM] float 
  2647 ;; Auto vars:     Size  Location     Type
  2648 ;;  f3              3   42[COMRAM] float 
  2649 ;;  sign            1   46[COMRAM] unsigned char 
  2650 ;;  exp             1   45[COMRAM] unsigned char 
  2651 ;;  cntr            1   41[COMRAM] unsigned char 
  2652 ;; Return value:  Size  Location     Type
  2653 ;;                  3   32[COMRAM] float 
  2654 ;; Registers used:
  2655 ;;		wreg, status,2, status,0, cstack
  2656 ;; Tracked objects:
  2657 ;;		On entry : 0/0
  2658 ;;		On exit  : 0/0
  2659 ;;		Unchanged: 0/0
  2660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2661 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2662 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2663 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2664 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2665 ;;Total ram usage:       15 bytes
  2666 ;; Hardware stack levels used:    1
  2667 ;; Hardware stack levels required when called:    1
  2668 ;; This function calls:
  2669 ;;		___ftpack
  2670 ;; This function is called by:
  2671 ;;		_set_pwm_duty_cycle
  2672 ;;		_main
  2673 ;;		_sin
  2674 ;; This function uses a non-reentrant model
  2675 ;;
  2676                           
  2677                           	psect	text15
  2678  001794                     __ptext15:
  2679                           	opt stack 0
  2680  001794                     ___ftdiv:
  2681                           	opt stack 28
  2682                           
  2683                           ;incstack = 0
  2684  001794  C023  F027         	movff	___ftdiv@f1+2,??___ftdiv
  2685  001798  6A28               	clrf	(??___ftdiv+1)& (0+255),c
  2686  00179A  6A29               	clrf	(??___ftdiv+2)& (0+255),c
  2687  00179C  3422               	rlcf	___ftdiv@f1+1,w,c
  2688  00179E  3627               	rlcf	??___ftdiv& (0+255),f,c
  2689  0017A0  E301               	bnc	u1301
  2690  0017A2  8028               	bsf	(??___ftdiv+1)& (0+255),0,c
  2691  0017A4                     u1301:
  2692  0017A4  5027               	movf	??___ftdiv,w,c
  2693  0017A6  6E2E               	movwf	___ftdiv@exp,c
  2694  0017A8  502E               	movf	___ftdiv@exp,w,c
  2695  0017AA  A4D8               	btfss	status,2,c
  2696  0017AC  D007               	goto	l327
  2697  0017AE  0E00               	movlw	0
  2698  0017B0  6E21               	movwf	?___ftdiv,c
  2699  0017B2  0E00               	movlw	0
  2700  0017B4  6E22               	movwf	?___ftdiv+1,c
  2701  0017B6  0E00               	movlw	0
  2702  0017B8  6E23               	movwf	?___ftdiv+2,c
  2703  0017BA  0012               	return	
  2704  0017BC                     l327:
  2705  0017BC  C026  F027         	movff	___ftdiv@f2+2,??___ftdiv
  2706  0017C0  6A28               	clrf	(??___ftdiv+1)& (0+255),c
  2707  0017C2  6A29               	clrf	(??___ftdiv+2)& (0+255),c
  2708  0017C4  3425               	rlcf	___ftdiv@f2+1,w,c
  2709  0017C6  3627               	rlcf	??___ftdiv& (0+255),f,c
  2710  0017C8  E301               	bnc	u1321
  2711  0017CA  8028               	bsf	(??___ftdiv+1)& (0+255),0,c
  2712  0017CC                     u1321:
  2713  0017CC  5027               	movf	??___ftdiv,w,c
  2714  0017CE  6E2F               	movwf	___ftdiv@sign,c
  2715  0017D0  502F               	movf	___ftdiv@sign,w,c
  2716  0017D2  A4D8               	btfss	status,2,c
  2717  0017D4  D007               	goto	l329
  2718  0017D6  0E00               	movlw	0
  2719  0017D8  6E21               	movwf	?___ftdiv,c
  2720  0017DA  0E00               	movlw	0
  2721  0017DC  6E22               	movwf	?___ftdiv+1,c
  2722  0017DE  0E00               	movlw	0
  2723  0017E0  6E23               	movwf	?___ftdiv+2,c
  2724  0017E2  0012               	return	
  2725  0017E4                     l329:
  2726  0017E4  0E00               	movlw	0
  2727  0017E6  6E2B               	movwf	___ftdiv@f3,c
  2728  0017E8  0E00               	movlw	0
  2729  0017EA  6E2C               	movwf	___ftdiv@f3+1,c
  2730  0017EC  0E00               	movlw	0
  2731  0017EE  6E2D               	movwf	___ftdiv@f3+2,c
  2732  0017F0  502F               	movf	___ftdiv@sign,w,c
  2733  0017F2  0F89               	addlw	137
  2734  0017F4  5E2E               	subwf	___ftdiv@exp,f,c
  2735  0017F6  C023  F02F         	movff	___ftdiv@f1+2,___ftdiv@sign
  2736  0017FA  5026               	movf	___ftdiv@f2+2,w,c
  2737  0017FC  1A2F               	xorwf	___ftdiv@sign,f,c
  2738  0017FE  0E80               	movlw	128
  2739  001800  162F               	andwf	___ftdiv@sign,f,c
  2740  001802  8E22               	bsf	___ftdiv@f1+1,7,c
  2741  001804  0EFF               	movlw	255
  2742  001806  1621               	andwf	___ftdiv@f1,f,c
  2743  001808  0EFF               	movlw	255
  2744  00180A  1622               	andwf	___ftdiv@f1+1,f,c
  2745  00180C  0E00               	movlw	0
  2746  00180E  1623               	andwf	___ftdiv@f1+2,f,c
  2747  001810  8E25               	bsf	___ftdiv@f2+1,7,c
  2748  001812  0EFF               	movlw	255
  2749  001814  1624               	andwf	___ftdiv@f2,f,c
  2750  001816  0EFF               	movlw	255
  2751  001818  1625               	andwf	___ftdiv@f2+1,f,c
  2752  00181A  0E00               	movlw	0
  2753  00181C  1626               	andwf	___ftdiv@f2+2,f,c
  2754  00181E  0E18               	movlw	24
  2755  001820  6E2A               	movwf	___ftdiv@cntr,c
  2756  001822  90D8               	bcf	status,0,c
  2757  001824  362B               	rlcf	___ftdiv@f3,f,c
  2758  001826  362C               	rlcf	___ftdiv@f3+1,f,c
  2759  001828  362D               	rlcf	___ftdiv@f3+2,f,c
  2760  00182A  5024               	movf	___ftdiv@f2,w,c
  2761  00182C  5C21               	subwf	___ftdiv@f1,w,c
  2762  00182E  5025               	movf	___ftdiv@f2+1,w,c
  2763  001830  5822               	subwfb	___ftdiv@f1+1,w,c
  2764  001832  5026               	movf	___ftdiv@f2+2,w,c
  2765  001834  5823               	subwfb	___ftdiv@f1+2,w,c
  2766  001836  A0D8               	btfss	status,0,c
  2767  001838  D007               	goto	l331
  2768  00183A  5024               	movf	___ftdiv@f2,w,c
  2769  00183C  5E21               	subwf	___ftdiv@f1,f,c
  2770  00183E  5025               	movf	___ftdiv@f2+1,w,c
  2771  001840  5A22               	subwfb	___ftdiv@f1+1,f,c
  2772  001842  5026               	movf	___ftdiv@f2+2,w,c
  2773  001844  5A23               	subwfb	___ftdiv@f1+2,f,c
  2774  001846  802B               	bsf	___ftdiv@f3,0,c
  2775  001848                     l331:
  2776  001848  90D8               	bcf	status,0,c
  2777  00184A  3621               	rlcf	___ftdiv@f1,f,c
  2778  00184C  3622               	rlcf	___ftdiv@f1+1,f,c
  2779  00184E  3623               	rlcf	___ftdiv@f1+2,f,c
  2780  001850  2E2A               	decfsz	___ftdiv@cntr,f,c
  2781  001852  D7E7               	goto	l330
  2782  001854  C02B  F001         	movff	___ftdiv@f3,___ftpack@arg
  2783  001858  C02C  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2784  00185C  C02D  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2785  001860  C02E  F004         	movff	___ftdiv@exp,___ftpack@exp
  2786  001864  C02F  F005         	movff	___ftdiv@sign,___ftpack@sign
  2787  001868  EC6E  F00D         	call	___ftpack	;wreg free
  2788  00186C  C001  F021         	movff	?___ftpack,?___ftdiv
  2789  001870  C002  F022         	movff	?___ftpack+1,?___ftdiv+1
  2790  001874  C003  F023         	movff	?___ftpack+2,?___ftdiv+2
  2791  001878  0012               	return	
  2792  00187A                     __end_of___ftdiv:
  2793                           	opt stack 0
  2794                           tblptru	equ	0xFF8
  2795                           tblptrh	equ	0xFF7
  2796                           tblptrl	equ	0xFF6
  2797                           tablat	equ	0xFF5
  2798                           prodh	equ	0xFF4
  2799                           prodl	equ	0xFF3
  2800                           wreg	equ	0xFE8
  2801                           postinc2	equ	0xFDE
  2802                           postdec2	equ	0xFDD
  2803                           fsr2h	equ	0xFDA
  2804                           fsr2l	equ	0xFD9
  2805                           status	equ	0xFD8
  2806                           
  2807 ;; *************** function ___lmul *****************
  2808 ;; Defined at:
  2809 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul32.c"
  2810 ;; Parameters:    Size  Location     Type
  2811 ;;  multiplier      4    0[COMRAM] unsigned long 
  2812 ;;  multiplicand    4    4[COMRAM] unsigned long 
  2813 ;; Auto vars:     Size  Location     Type
  2814 ;;  product         4    8[COMRAM] unsigned long 
  2815 ;; Return value:  Size  Location     Type
  2816 ;;                  4    0[COMRAM] unsigned long 
  2817 ;; Registers used:
  2818 ;;		wreg, status,2, status,0
  2819 ;; Tracked objects:
  2820 ;;		On entry : 0/0
  2821 ;;		On exit  : 0/0
  2822 ;;		Unchanged: 0/0
  2823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2824 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2825 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2827 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2828 ;;Total ram usage:       12 bytes
  2829 ;; Hardware stack levels used:    1
  2830 ;; This function calls:
  2831 ;;		Nothing
  2832 ;; This function is called by:
  2833 ;;		_main
  2834 ;; This function uses a non-reentrant model
  2835 ;;
  2836                           
  2837                           	psect	text16
  2838  001DE8                     __ptext16:
  2839                           	opt stack 0
  2840  001DE8                     ___lmul:
  2841                           	opt stack 30
  2842                           
  2843                           ;incstack = 0
  2844  001DE8  0E00               	movlw	0
  2845  001DEA  6E09               	movwf	___lmul@product,c
  2846  001DEC  0E00               	movlw	0
  2847  001DEE  6E0A               	movwf	___lmul@product+1,c
  2848  001DF0  0E00               	movlw	0
  2849  001DF2  6E0B               	movwf	___lmul@product+2,c
  2850  001DF4  0E00               	movlw	0
  2851  001DF6  6E0C               	movwf	___lmul@product+3,c
  2852  001DF8  A001               	btfss	___lmul@multiplier,0,c
  2853  001DFA  D008               	goto	l61
  2854  001DFC  5005               	movf	___lmul@multiplicand,w,c
  2855  001DFE  2609               	addwf	___lmul@product,f,c
  2856  001E00  5006               	movf	___lmul@multiplicand+1,w,c
  2857  001E02  220A               	addwfc	___lmul@product+1,f,c
  2858  001E04  5007               	movf	___lmul@multiplicand+2,w,c
  2859  001E06  220B               	addwfc	___lmul@product+2,f,c
  2860  001E08  5008               	movf	___lmul@multiplicand+3,w,c
  2861  001E0A  220C               	addwfc	___lmul@product+3,f,c
  2862  001E0C                     l61:
  2863  001E0C  90D8               	bcf	status,0,c
  2864  001E0E  3605               	rlcf	___lmul@multiplicand,f,c
  2865  001E10  3606               	rlcf	___lmul@multiplicand+1,f,c
  2866  001E12  3607               	rlcf	___lmul@multiplicand+2,f,c
  2867  001E14  3608               	rlcf	___lmul@multiplicand+3,f,c
  2868  001E16  90D8               	bcf	status,0,c
  2869  001E18  3204               	rrcf	___lmul@multiplier+3,f,c
  2870  001E1A  3203               	rrcf	___lmul@multiplier+2,f,c
  2871  001E1C  3202               	rrcf	___lmul@multiplier+1,f,c
  2872  001E1E  3201               	rrcf	___lmul@multiplier,f,c
  2873  001E20  5001               	movf	___lmul@multiplier,w,c
  2874  001E22  1002               	iorwf	___lmul@multiplier+1,w,c
  2875  001E24  1003               	iorwf	___lmul@multiplier+2,w,c
  2876  001E26  1004               	iorwf	___lmul@multiplier+3,w,c
  2877  001E28  A4D8               	btfss	status,2,c
  2878  001E2A  D7E6               	goto	l60
  2879  001E2C  C009  F001         	movff	___lmul@product,?___lmul
  2880  001E30  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  2881  001E34  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  2882  001E38  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  2883  001E3C  0012               	return		;funcret
  2884  001E3E                     __end_of___lmul:
  2885                           	opt stack 0
  2886                           tblptru	equ	0xFF8
  2887                           tblptrh	equ	0xFF7
  2888                           tblptrl	equ	0xFF6
  2889                           tablat	equ	0xFF5
  2890                           prodh	equ	0xFF4
  2891                           prodl	equ	0xFF3
  2892                           wreg	equ	0xFE8
  2893                           postinc2	equ	0xFDE
  2894                           postdec2	equ	0xFDD
  2895                           fsr2h	equ	0xFDA
  2896                           fsr2l	equ	0xFD9
  2897                           status	equ	0xFD8
  2898                           
  2899 ;; *************** function ___lltoft *****************
  2900 ;; Defined at:
  2901 ;;		line 35 in file "D:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lltoft.c"
  2902 ;; Parameters:    Size  Location     Type
  2903 ;;  c               4    8[COMRAM] unsigned long 
  2904 ;; Auto vars:     Size  Location     Type
  2905 ;;  exp             1   16[COMRAM] unsigned char 
  2906 ;; Return value:  Size  Location     Type
  2907 ;;                  3    8[COMRAM] float 
  2908 ;; Registers used:
  2909 ;;		wreg, status,2, status,0, cstack
  2910 ;; Tracked objects:
  2911 ;;		On entry : 0/0
  2912 ;;		On exit  : 0/0
  2913 ;;		Unchanged: 0/0
  2914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2915 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2916 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2917 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2918 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2919 ;;Total ram usage:        9 bytes
  2920 ;; Hardware stack levels used:    1
  2921 ;; Hardware stack levels required when called:    1
  2922 ;; This function calls:
  2923 ;;		___ftpack
  2924 ;; This function is called by:
  2925 ;;		_main
  2926 ;; This function uses a non-reentrant model
  2927 ;;
  2928                           
  2929                           	psect	text17
  2930  001D8C                     __ptext17:
  2931                           	opt stack 0
  2932  001D8C                     ___lltoft:
  2933                           	opt stack 29
  2934                           
  2935                           ;incstack = 0
  2936  001D8C  0E8E               	movlw	142
  2937  001D8E  6E11               	movwf	___lltoft@exp,c
  2938  001D90  D006               	goto	l420
  2939  001D92  90D8               	bcf	status,0,c
  2940  001D94  320C               	rrcf	___lltoft@c+3,f,c
  2941  001D96  320B               	rrcf	___lltoft@c+2,f,c
  2942  001D98  320A               	rrcf	___lltoft@c+1,f,c
  2943  001D9A  3209               	rrcf	___lltoft@c,f,c
  2944  001D9C  2A11               	incf	___lltoft@exp,f,c
  2945  001D9E                     l420:
  2946  001D9E  0E00               	movlw	0
  2947  001DA0  1409               	andwf	___lltoft@c,w,c
  2948  001DA2  6E0D               	movwf	??___lltoft& (0+255),c
  2949  001DA4  0E00               	movlw	0
  2950  001DA6  140A               	andwf	___lltoft@c+1,w,c
  2951  001DA8  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  2952  001DAA  0E00               	movlw	0
  2953  001DAC  140B               	andwf	___lltoft@c+2,w,c
  2954  001DAE  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  2955  001DB0  0EFF               	movlw	255
  2956  001DB2  140C               	andwf	___lltoft@c+3,w,c
  2957  001DB4  6E10               	movwf	(??___lltoft+3)& (0+255),c
  2958  001DB6  500D               	movf	??___lltoft,w,c
  2959  001DB8  100E               	iorwf	??___lltoft+1,w,c
  2960  001DBA  100F               	iorwf	??___lltoft+2,w,c
  2961  001DBC  1010               	iorwf	??___lltoft+3,w,c
  2962  001DBE  A4D8               	btfss	status,2,c
  2963  001DC0  D7E8               	goto	l421
  2964  001DC2  C009  F001         	movff	___lltoft@c,___ftpack@arg
  2965  001DC6  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  2966  001DCA  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  2967  001DCE  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  2968  001DD2  0E00               	movlw	0
  2969  001DD4  6E05               	movwf	___ftpack@sign,c
  2970  001DD6  EC6E  F00D         	call	___ftpack	;wreg free
  2971  001DDA  C001  F009         	movff	?___ftpack,?___lltoft
  2972  001DDE  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  2973  001DE2  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  2974  001DE6  0012               	return	
  2975  001DE8                     __end_of___lltoft:
  2976                           	opt stack 0
  2977                           tblptru	equ	0xFF8
  2978                           tblptrh	equ	0xFF7
  2979                           tblptrl	equ	0xFF6
  2980                           tablat	equ	0xFF5
  2981                           prodh	equ	0xFF4
  2982                           prodl	equ	0xFF3
  2983                           wreg	equ	0xFE8
  2984                           postinc2	equ	0xFDE
  2985                           postdec2	equ	0xFDD
  2986                           fsr2h	equ	0xFDA
  2987                           fsr2l	equ	0xFD9
  2988                           status	equ	0xFD8
  2989                           
  2990 ;; *************** function ___ftpack *****************
  2991 ;; Defined at:
  2992 ;;		line 62 in file "D:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\float.c"
  2993 ;; Parameters:    Size  Location     Type
  2994 ;;  arg             3    0[COMRAM] unsigned um
  2995 ;;  exp             1    3[COMRAM] unsigned char 
  2996 ;;  sign            1    4[COMRAM] unsigned char 
  2997 ;; Auto vars:     Size  Location     Type
  2998 ;;		None
  2999 ;; Return value:  Size  Location     Type
  3000 ;;                  3    0[COMRAM] float 
  3001 ;; Registers used:
  3002 ;;		wreg, status,2, status,0
  3003 ;; Tracked objects:
  3004 ;;		On entry : 0/0
  3005 ;;		On exit  : 0/0
  3006 ;;		Unchanged: 0/0
  3007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3008 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3010 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3011 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3012 ;;Total ram usage:        8 bytes
  3013 ;; Hardware stack levels used:    1
  3014 ;; This function calls:
  3015 ;;		Nothing
  3016 ;; This function is called by:
  3017 ;;		___altoft
  3018 ;;		___ftadd
  3019 ;;		___ftdiv
  3020 ;;		___ftmul
  3021 ;;		___lltoft
  3022 ;;		___lwtoft
  3023 ;; This function uses a non-reentrant model
  3024 ;;
  3025                           
  3026                           	psect	text18
  3027  001ADC                     __ptext18:
  3028                           	opt stack 0
  3029  001ADC                     ___ftpack:
  3030                           	opt stack 27
  3031                           
  3032                           ;incstack = 0
  3033  001ADC  5004               	movf	___ftpack@exp,w,c
  3034  001ADE  B4D8               	btfsc	status,2,c
  3035  001AE0  D005               	goto	u810
  3036  001AE2  5001               	movf	___ftpack@arg,w,c
  3037  001AE4  1002               	iorwf	___ftpack@arg+1,w,c
  3038  001AE6  1003               	iorwf	___ftpack@arg+2,w,c
  3039  001AE8  A4D8               	btfss	status,2,c
  3040  001AEA  D00C               	goto	l263
  3041  001AEC                     u810:
  3042  001AEC  0E00               	movlw	0
  3043  001AEE  6E01               	movwf	?___ftpack,c
  3044  001AF0  0E00               	movlw	0
  3045  001AF2  6E02               	movwf	?___ftpack+1,c
  3046  001AF4  0E00               	movlw	0
  3047  001AF6  6E03               	movwf	?___ftpack+2,c
  3048  001AF8  0012               	return	
  3049  001AFA  2A04               	incf	___ftpack@exp,f,c
  3050  001AFC  90D8               	bcf	status,0,c
  3051  001AFE  3203               	rrcf	___ftpack@arg+2,f,c
  3052  001B00  3202               	rrcf	___ftpack@arg+1,f,c
  3053  001B02  3201               	rrcf	___ftpack@arg,f,c
  3054  001B04                     l263:
  3055  001B04  0E00               	movlw	0
  3056  001B06  1401               	andwf	___ftpack@arg,w,c
  3057  001B08  6E06               	movwf	??___ftpack& (0+255),c
  3058  001B0A  0E00               	movlw	0
  3059  001B0C  1402               	andwf	___ftpack@arg+1,w,c
  3060  001B0E  6E07               	movwf	(??___ftpack+1)& (0+255),c
  3061  001B10  0EFE               	movlw	254
  3062  001B12  1403               	andwf	___ftpack@arg+2,w,c
  3063  001B14  6E08               	movwf	(??___ftpack+2)& (0+255),c
  3064  001B16  5006               	movf	??___ftpack,w,c
  3065  001B18  1007               	iorwf	??___ftpack+1,w,c
  3066  001B1A  1008               	iorwf	??___ftpack+2,w,c
  3067  001B1C  B4D8               	btfsc	status,2,c
  3068  001B1E  D00C               	goto	l266
  3069  001B20  D7EC               	goto	l264
  3070  001B22  2A04               	incf	___ftpack@exp,f,c
  3071  001B24  0E01               	movlw	1
  3072  001B26  2601               	addwf	___ftpack@arg,f,c
  3073  001B28  0E00               	movlw	0
  3074  001B2A  2202               	addwfc	___ftpack@arg+1,f,c
  3075  001B2C  0E00               	movlw	0
  3076  001B2E  2203               	addwfc	___ftpack@arg+2,f,c
  3077  001B30  90D8               	bcf	status,0,c
  3078  001B32  3203               	rrcf	___ftpack@arg+2,f,c
  3079  001B34  3202               	rrcf	___ftpack@arg+1,f,c
  3080  001B36  3201               	rrcf	___ftpack@arg,f,c
  3081  001B38                     l266:
  3082  001B38  0E00               	movlw	0
  3083  001B3A  1401               	andwf	___ftpack@arg,w,c
  3084  001B3C  6E06               	movwf	??___ftpack& (0+255),c
  3085  001B3E  0E00               	movlw	0
  3086  001B40  1402               	andwf	___ftpack@arg+1,w,c
  3087  001B42  6E07               	movwf	(??___ftpack+1)& (0+255),c
  3088  001B44  0EFF               	movlw	255
  3089  001B46  1403               	andwf	___ftpack@arg+2,w,c
  3090  001B48  6E08               	movwf	(??___ftpack+2)& (0+255),c
  3091  001B4A  5006               	movf	??___ftpack,w,c
  3092  001B4C  1007               	iorwf	??___ftpack+1,w,c
  3093  001B4E  1008               	iorwf	??___ftpack+2,w,c
  3094  001B50  B4D8               	btfsc	status,2,c
  3095  001B52  D006               	goto	l269
  3096  001B54  D7E6               	goto	l267
  3097  001B56  0604               	decf	___ftpack@exp,f,c
  3098  001B58  90D8               	bcf	status,0,c
  3099  001B5A  3601               	rlcf	___ftpack@arg,f,c
  3100  001B5C  3602               	rlcf	___ftpack@arg+1,f,c
  3101  001B5E  3603               	rlcf	___ftpack@arg+2,f,c
  3102  001B60                     l269:
  3103  001B60  BE02               	btfsc	___ftpack@arg+1,7,c
  3104  001B62  D003               	goto	u850
  3105  001B64  0E02               	movlw	2
  3106  001B66  6004               	cpfslt	___ftpack@exp,c
  3107  001B68  D7F6               	goto	l270
  3108  001B6A                     u850:
  3109  001B6A  A004               	btfss	___ftpack@exp,0,c
  3110  001B6C  9E02               	bcf	___ftpack@arg+1,7,c
  3111  001B6E  90D8               	bcf	status,0,c
  3112  001B70  3204               	rrcf	___ftpack@exp,f,c
  3113  001B72  5004               	movf	___ftpack@exp,w,c
  3114  001B74  1203               	iorwf	___ftpack@arg+2,f,c
  3115  001B76  5005               	movf	___ftpack@sign,w,c
  3116  001B78  A4D8               	btfss	status,2,c
  3117  001B7A  8E03               	bsf	___ftpack@arg+2,7,c
  3118  001B7C  C001  F001         	movff	___ftpack@arg,?___ftpack
  3119  001B80  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  3120  001B84  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  3121  001B88  0012               	return	
  3122  001B8A                     __end_of___ftpack:
  3123                           	opt stack 0
  3124                           tblptru	equ	0xFF8
  3125                           tblptrh	equ	0xFF7
  3126                           tblptrl	equ	0xFF6
  3127                           tablat	equ	0xFF5
  3128                           prodh	equ	0xFF4
  3129                           prodl	equ	0xFF3
  3130                           wreg	equ	0xFE8
  3131                           postinc2	equ	0xFDE
  3132                           postdec2	equ	0xFDD
  3133                           fsr2h	equ	0xFDA
  3134                           fsr2l	equ	0xFD9
  3135                           status	equ	0xFD8
  3136                           
  3137 ;; *************** function ___lldiv *****************
  3138 ;; Defined at:
  3139 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lldiv.c"
  3140 ;; Parameters:    Size  Location     Type
  3141 ;;  dividend        4   12[COMRAM] unsigned long 
  3142 ;;  divisor         4   16[COMRAM] unsigned long 
  3143 ;; Auto vars:     Size  Location     Type
  3144 ;;  quotient        4   20[COMRAM] unsigned long 
  3145 ;;  counter         1   24[COMRAM] unsigned char 
  3146 ;; Return value:  Size  Location     Type
  3147 ;;                  4   12[COMRAM] unsigned long 
  3148 ;; Registers used:
  3149 ;;		wreg, status,2, status,0
  3150 ;; Tracked objects:
  3151 ;;		On entry : 0/0
  3152 ;;		On exit  : 0/0
  3153 ;;		Unchanged: 0/0
  3154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3155 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3156 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3158 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3159 ;;Total ram usage:       13 bytes
  3160 ;; Hardware stack levels used:    1
  3161 ;; This function calls:
  3162 ;;		Nothing
  3163 ;; This function is called by:
  3164 ;;		_main
  3165 ;; This function uses a non-reentrant model
  3166 ;;
  3167                           
  3168                           	psect	text19
  3169  001C1A                     __ptext19:
  3170                           	opt stack 0
  3171  001C1A                     ___lldiv:
  3172                           	opt stack 30
  3173                           
  3174                           ;incstack = 0
  3175  001C1A  0E00               	movlw	0
  3176  001C1C  6E15               	movwf	___lldiv@quotient,c
  3177  001C1E  0E00               	movlw	0
  3178  001C20  6E16               	movwf	___lldiv@quotient+1,c
  3179  001C22  0E00               	movlw	0
  3180  001C24  6E17               	movwf	___lldiv@quotient+2,c
  3181  001C26  0E00               	movlw	0
  3182  001C28  6E18               	movwf	___lldiv@quotient+3,c
  3183  001C2A  5011               	movf	___lldiv@divisor,w,c
  3184  001C2C  1012               	iorwf	___lldiv@divisor+1,w,c
  3185  001C2E  1013               	iorwf	___lldiv@divisor+2,w,c
  3186  001C30  1014               	iorwf	___lldiv@divisor+3,w,c
  3187  001C32  B4D8               	btfsc	status,2,c
  3188  001C34  D02A               	goto	l404
  3189  001C36  0E01               	movlw	1
  3190  001C38  6E19               	movwf	___lldiv@counter,c
  3191  001C3A  D006               	goto	l399
  3192  001C3C  90D8               	bcf	status,0,c
  3193  001C3E  3611               	rlcf	___lldiv@divisor,f,c
  3194  001C40  3612               	rlcf	___lldiv@divisor+1,f,c
  3195  001C42  3613               	rlcf	___lldiv@divisor+2,f,c
  3196  001C44  3614               	rlcf	___lldiv@divisor+3,f,c
  3197  001C46  2A19               	incf	___lldiv@counter,f,c
  3198  001C48                     l399:
  3199  001C48  AE14               	btfss	___lldiv@divisor+3,7,c
  3200  001C4A  D7F8               	goto	l400
  3201  001C4C                     u1550:
  3202  001C4C  90D8               	bcf	status,0,c
  3203  001C4E  3615               	rlcf	___lldiv@quotient,f,c
  3204  001C50  3616               	rlcf	___lldiv@quotient+1,f,c
  3205  001C52  3617               	rlcf	___lldiv@quotient+2,f,c
  3206  001C54  3618               	rlcf	___lldiv@quotient+3,f,c
  3207  001C56  5011               	movf	___lldiv@divisor,w,c
  3208  001C58  5C0D               	subwf	___lldiv@dividend,w,c
  3209  001C5A  5012               	movf	___lldiv@divisor+1,w,c
  3210  001C5C  580E               	subwfb	___lldiv@dividend+1,w,c
  3211  001C5E  5013               	movf	___lldiv@divisor+2,w,c
  3212  001C60  580F               	subwfb	___lldiv@dividend+2,w,c
  3213  001C62  5014               	movf	___lldiv@divisor+3,w,c
  3214  001C64  5810               	subwfb	___lldiv@dividend+3,w,c
  3215  001C66  A0D8               	btfss	status,0,c
  3216  001C68  D009               	goto	l403
  3217  001C6A  5011               	movf	___lldiv@divisor,w,c
  3218  001C6C  5E0D               	subwf	___lldiv@dividend,f,c
  3219  001C6E  5012               	movf	___lldiv@divisor+1,w,c
  3220  001C70  5A0E               	subwfb	___lldiv@dividend+1,f,c
  3221  001C72  5013               	movf	___lldiv@divisor+2,w,c
  3222  001C74  5A0F               	subwfb	___lldiv@dividend+2,f,c
  3223  001C76  5014               	movf	___lldiv@divisor+3,w,c
  3224  001C78  5A10               	subwfb	___lldiv@dividend+3,f,c
  3225  001C7A  8015               	bsf	___lldiv@quotient,0,c
  3226  001C7C                     l403:
  3227  001C7C  90D8               	bcf	status,0,c
  3228  001C7E  3214               	rrcf	___lldiv@divisor+3,f,c
  3229  001C80  3213               	rrcf	___lldiv@divisor+2,f,c
  3230  001C82  3212               	rrcf	___lldiv@divisor+1,f,c
  3231  001C84  3211               	rrcf	___lldiv@divisor,f,c
  3232  001C86  2E19               	decfsz	___lldiv@counter,f,c
  3233  001C88  D7E1               	goto	u1550
  3234  001C8A                     l404:
  3235  001C8A  C015  F00D         	movff	___lldiv@quotient,?___lldiv
  3236  001C8E  C016  F00E         	movff	___lldiv@quotient+1,?___lldiv+1
  3237  001C92  C017  F00F         	movff	___lldiv@quotient+2,?___lldiv+2
  3238  001C96  C018  F010         	movff	___lldiv@quotient+3,?___lldiv+3
  3239  001C9A  0012               	return		;funcret
  3240  001C9C                     __end_of___lldiv:
  3241                           	opt stack 0
  3242                           tblptru	equ	0xFF8
  3243                           tblptrh	equ	0xFF7
  3244                           tblptrl	equ	0xFF6
  3245                           tablat	equ	0xFF5
  3246                           prodh	equ	0xFF4
  3247                           prodl	equ	0xFF3
  3248                           wreg	equ	0xFE8
  3249                           postinc2	equ	0xFDE
  3250                           postdec2	equ	0xFDD
  3251                           fsr2h	equ	0xFDA
  3252                           fsr2l	equ	0xFD9
  3253                           status	equ	0xFD8
  3254                           tblptru	equ	0xFF8
  3255                           tblptrh	equ	0xFF7
  3256                           tblptrl	equ	0xFF6
  3257                           tablat	equ	0xFF5
  3258                           prodh	equ	0xFF4
  3259                           prodl	equ	0xFF3
  3260                           wreg	equ	0xFE8
  3261                           postinc2	equ	0xFDE
  3262                           postdec2	equ	0xFDD
  3263                           fsr2h	equ	0xFDA
  3264                           fsr2l	equ	0xFD9
  3265                           status	equ	0xFD8
  3266                           
  3267                           	psect	rparam
  3268  0000                     tblptru	equ	0xFF8
  3269                           tblptrh	equ	0xFF7
  3270                           tblptrl	equ	0xFF6
  3271                           tablat	equ	0xFF5
  3272                           prodh	equ	0xFF4
  3273                           prodl	equ	0xFF3
  3274                           wreg	equ	0xFE8
  3275                           postinc2	equ	0xFDE
  3276                           postdec2	equ	0xFDD
  3277                           fsr2h	equ	0xFDA
  3278                           fsr2l	equ	0xFD9
  3279                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    27
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    121     123
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(COMRAM[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 15
		 -> sin@coeff_a(CODE[15]), sin@coeff_b(CODE[12]), 


Critical Paths under _main in COMRAM

    _main->_sin
    _sin->___ftsub
    _floor->___altoft
    ___altoft->___fttol
    _eval_poly->___ftadd
    ___ftsub->_floor
    ___ftadd->___ftdiv
    _set_pwm_duty_cycle->___fttol
    ___lwtoft->___ftpack
    ___fttol->___ftdiv
    ___ftmul->___lltoft
    ___ftdiv->___ftmul
    ___lltoft->___ftpack
    ___lldiv->___lmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0   63683
                                             99 COMRAM    22    22      0
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___lldiv
                           ___lltoft
                             ___lmul
                 _set_pwm_duty_cycle
                                _sin
 ---------------------------------------------------------------------------------
 (1) _sin                                                 13    10      3   36665
                                             86 COMRAM    13    10      3
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                           ___lltoft (ARG)
                          _eval_poly
                              _floor
 ---------------------------------------------------------------------------------
 (2) _floor                                                8     5      3    8863
                                             72 COMRAM     8     5      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                7     2      5     360
                                              0 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (3) ___altoft                                            10     6      4    2758
                                             62 COMRAM    10     6      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) _eval_poly                                           12     5      7    9579
                                             59 COMRAM    12     5      7
                            ___ftadd
                            ___ftdiv (ARG)
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     463
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    4767
                                             80 COMRAM     6     0      6
                            ___ftadd
                              _floor (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    4270
                                             47 COMRAM    12     6      6
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lltoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     273
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _set_pwm_duty_cycle                                   9     6      3   11618
                                             62 COMRAM     9     6      3
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2642
                                              8 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     404
                                             47 COMRAM    15    11      4
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    4212
                                             17 COMRAM    15     9      6
                           ___ftpack
                           ___ftpack (ARG)
                           ___lltoft (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     744
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3406
                                             32 COMRAM    15     9      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                           ___lltoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___lltoft                                             9     5      4    2689
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2544
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8     314
                                             12 COMRAM    13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___ftadd
     ___ftdiv (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lltoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___lltoft (ARG)
         ___ftpack
       ___wmul (ARG)
     ___ftmul (ARG)
       ___ftpack
       ___ftpack (ARG)
       ___lltoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftneg (ARG)
     ___ftpack (ARG)
     ___lltoft (ARG)
       ___ftpack
     ___wmul (ARG)
   ___ftdiv
     ___ftmul (ARG)
       ___ftpack
       ___ftpack (ARG)
       ___lltoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___ftpack (ARG)
     ___lltoft (ARG)
       ___ftpack
     ___wmul (ARG)
   ___ftmul
     ___ftpack
     ___ftpack (ARG)
     ___lltoft (ARG)
       ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___lldiv
     ___lmul (ARG)
   ___lltoft
     ___ftpack
   ___lmul
   _set_pwm_duty_cycle
     ___ftdiv
       ___ftmul (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lltoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___lltoft (ARG)
         ___ftpack
       ___wmul (ARG)
     ___ftge
     ___ftmul
       ___ftpack
       ___ftpack (ARG)
       ___lltoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lltoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lltoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lltoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
   _sin
     ___ftadd
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lltoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lltoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lltoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lltoft (ARG)
         ___ftpack
       ___wmul (ARG)
     ___ftdiv
       ___ftmul (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lltoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___lltoft (ARG)
         ___ftpack
       ___wmul (ARG)
     ___ftge
     ___ftmul
       ___ftpack
       ___ftpack (ARG)
       ___lltoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___ftpack (ARG)
             ___lltoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lltoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lltoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lltoft (ARG)
           ___ftpack
         ___wmul (ARG)
       _floor (ARG)
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___ftpack
                 ___ftpack (ARG)
                 ___lltoft (ARG)
                   ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lltoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___ftpack (ARG)
               ___lltoft (ARG)
                 ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
         ___ftadd
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___ftpack (ARG)
               ___lltoft (ARG)
                 ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lltoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___ftpack (ARG)
             ___lltoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___lltoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftge
         ___fttol
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___ftpack (ARG)
               ___lltoft (ARG)
                 ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lltoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___ftpack (ARG)
             ___lltoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         _frexp
     ___lltoft (ARG)
       ___ftpack
     _eval_poly (ARG)
       ___ftadd
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___ftpack (ARG)
             ___lltoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lltoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lltoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lltoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lltoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lltoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lltoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___wmul (ARG)
     _floor (ARG)
       ___altoft
         ___ftpack
         ___fttol (ARG)
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___ftpack (ARG)
               ___lltoft (ARG)
                 ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lltoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___ftpack (ARG)
             ___lltoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
       ___ftadd
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___ftpack (ARG)
             ___lltoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lltoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lltoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lltoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___ftge
       ___fttol
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___ftpack (ARG)
             ___lltoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lltoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lltoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       _frexp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     79      7B       1       96.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      7B      34        0.0%
DATA                 0      0      7B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Tue Dec 11 01:21:54 2018

                  ___altoft@exp 0047                   ___altoft@sign 0048                              l60 1DF8  
                            l61 1E0C                              l45 14C6             ___wmul@multiplicand 0003  
                   __CFG_BORV$3 000000                    __CFG_CP0$OFF 000000                    __CFG_CP1$OFF 000000  
                  __CFG_CP2$OFF 000000                    __CFG_CP3$OFF 000000                    ___ftadd@exp1 003B  
                  ___ftadd@exp2 003A                    ___ftadd@sign 0039                             l133 1D42  
                           l134 1D36                             l303 1354                             l400 1C3C  
                           l320 13AC                             l321 13C8                             l330 1822  
                           l322 13F8                             l403 1C7C                             l331 1848  
                           l404 1C8A                             l420 1D9E                             l308 134A  
                           l421 1D92                             l317 1388                             l309 1340  
                           l270 1B56                             l342 16C8                             l318 137E  
                           l263 1B04                             l327 17BC                             l335 1BBA  
                           l264 1AFA                             l336 1BEA                             l344 16F0  
                           l329 17E4                             l345 1722                             l353 1EBA  
                           l266 1B38                             l346 1732                             l267 1B22  
                           l371 1672                             l363 15D8                             l348 174A  
                           l372 1666                             l269 1B60                             l349 175A  
                           l365 164E                             l374 168E                             l366 163E  
                           l294 12C4                             l630 1A14                             l359 1E54  
                           l631 1998                             l641 18D0                             l298 12EE  
                           l642 194A                             l484 1046                             l485 1124  
                           l638 18B6                             l486 117C                             l399 1C48  
                           l647 1CB8                             l639 18A8                             l487 1264  
                  __CFG_CPB$OFF 000000                             _PR2 000FCB                    __CFG_CPD$OFF 000000  
                           u810 1AEC                             u901 1282                             u911 1296  
                           u850 1B6A                             u940 12B6                             u970 12E0  
                           _sin 101E                             wreg 000FE8                    __CFG_LVP$OFF 000000  
                  ___ftdiv@cntr 002A                    ___ftdiv@sign 002F                    __CFG_WDT$OFF 000000  
                          l1214 1C16                            ?_sin 0057                            _P1M0 007DEE  
                          _P1M1 007DEF                            u1000 131E                            u1111 16B0  
                          u1040 135C                            u1201 15BC                            u1131 16D8  
                          u1220 15F6                            u1301 17A4                            u1070 1390  
                          u1321 17CC                            u1225 15EE                            u1260 1678  
                          u1440 1AC0                            u1290 1CE0                            u1550 1C4C  
                          u1390 18C2                            u1455 1AC2                            u1480 1120  
                          u1298 1CE2                            u1490 1122                            u1585 145E  
                          u1597 15A0      set_pwm_duty_cycle@duty_val 0046                            _main 141E  
                  ___ftpack@arg 0001                    ___ftpack@exp 0004                            fsr2h 000FDA  
                          fsr2l 000FD9                            sin@f 0057                            sin@y 005A  
                          prodh 000FF4                            prodl 000FF3                            start 0000  
                 __CFG_IESO$OFF 000000                   __CFG_MCLRE$ON 000000                    ___ftmul@cntr 001F  
                  ___param_bank 000000                    ___ftmul@sign 0020                    ___fttol@exp1 003E  
                  ___fttol@lval 003A                           ??_sin 005A          set_pwm_duty_cycle@duty 003F  
                         ?_main 0001                           _CCP1X 007DED                           _CCP1Y 007DEC  
               __end_of___ftadd 141E                 __end_of___ftdiv 187A                 __end_of___ftneg 1EC8  
               __end_of___lldiv 1C9C                 __end_of___ftmul 1794                 __end_of___ftsub 1E7E  
               __end_of___fttol 16A0              __end_ofsin@coeff_a 1010              __end_ofsin@coeff_b 101C  
                 __CFG_PWRT$OFF 000000                   __CFG_WRT0$OFF 000000                   __CFG_WRT1$OFF 000000  
                 __CFG_WRT2$OFF 000000             ___lmul@multiplicand 0005                   __CFG_WRT3$OFF 000000  
                  ___lltoft@exp 0011                  __CFG_EBTR0$OFF 000000                  __CFG_FCMEN$OFF 000000  
                __CFG_EBTR1$OFF 000000                  __CFG_EBTR2$OFF 000000                  __CFG_EBTR3$OFF 000000  
                 __CFG_WRTB$OFF 000000                   __CFG_WRTC$OFF 000000                   __CFG_WRTD$OFF 000000  
                __CFG_EBTRB$OFF 000000                           _floor 187A                           _frexp 1C9C  
                         _errno 007A                   ___ftpack@sign 0005                           sin@x2 0060  
                         tablat 000FF5                           status 000FD8                  __CFG_PBADEN$ON 000000  
               __initialization 1EEC                    __end_of_main 15AC                          ??_main 0064  
                 ___fttol@sign1 0039                   __activetblptr 000001                          _CCP1M0 007DE8  
                        _CCP1M1 007DE9                          _CCP1M2 007DEA                          _CCP1M3 007DEB  
                        ?_floor 0049                          ?_frexp 0001                __end_of___altoft 1D8C  
                        _CCPR1L 000FBE                __end_of___ftpack 1B8A                __end_of___lltoft 1DE8  
            _set_pwm_duty_cycle 1A2A                __end_of___lwtoft 1EEC                          _OSCCON 000FD3  
                        _TMR2ON 007E52             ?_set_pwm_duty_cycle 003F                  __CFG_XINST$OFF 000000  
                        ___ftge 1B8A                          ___lmul 1DE8                          ___wmul 1E7E  
                     ??___ftadd 0036                  __CFG_STVREN$ON 000000                       ??___ftdiv 0027  
                     ??___ftneg 0004                       ??___lldiv 0015                       ??___ftmul 0018  
                     ??___ftsub 0057                       ??___fttol 0034                          floor@i 004C  
                        floor@x 0049           ___ftmul@f3_as_product 001C                          sin@sgn 0063  
          ??_set_pwm_duty_cycle 0042                    __mediumconst 0000                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8            main@TIMER2_PRESCALER 0079  
                    __accesstop 0080         __end_of__initialization 1EF0                      ___altoft@c 003F  
                    ___ftadd@f1 0030                      ___ftadd@f2 0033                      ___ftge@ff1 0001  
                    ___ftge@ff2 0004                    eval_poly@res 0045                   ___rparam_used 000001  
                    ___ftdiv@f1 0021                      ___ftdiv@f2 0024                      ___ftdiv@f3 002B  
                    ___ftneg@f1 0001                      ___ftmul@f1 0012                      ___ftmul@f2 0015  
                    ___ftsub@f1 0051                      ___ftsub@f2 0054                      ___fttol@f1 0030  
                __pcstackCOMRAM 0001                      ___lltoft@c 0009                   __end_of_floor 1958  
                 __end_of_frexp 1D14                      ___lwtoft@c 0009                 __CFG_OSC$INTIO7 000000  
                       ??_floor 004C                         ??_frexp 0006              __size_of_eval_poly 00D2  
                       ?___ftge 0001                         ?___lmul 0001                         ?___wmul 0001  
                     ?___altoft 003F                  ___lmul@product 0009                       ?___ftpack 0001  
                     ?___lltoft 0009                         _T2CKPS0 007E50                         _T2CKPS1 007E51  
                     ?___lwtoft 0009                         __Hparam 0000                         __Lparam 0000  
               __size_of___ftge 0090                 __size_of___lmul 0056                         ___ftadd 1272  
                       ___ftdiv 1794                         ___ftneg 1EA4                         ___lldiv 1C1A  
               __size_of___wmul 0026                         ___ftmul 16A0                         ___ftsub 1E3E  
                       ___fttol 15AC                    __psmallconst 1000                      ??___altoft 0043  
                       __pcinit 1EEC                      ??___ftpack 0006               __end_of_eval_poly 1A2A  
                       __ramtop 1000                      ??___lltoft 000D                         __ptext0 141E  
                       __ptext1 101E                         __ptext2 187A                         __ptext3 1C9C  
                       __ptext4 1D14                         __ptext5 1958                         __ptext6 1E7E  
                       __ptext7 1E3E                         __ptext8 1272                         __ptext9 1EA4  
                       _sin$737 005D                      ??___lwtoft 000C                    __size_of_sin 0254  
                       main@val 006C            end_of_initialization 1EF0                 ___lldiv@divisor 0011  
               ___lldiv@counter 0019                         postdec2 000FDD                         postinc2 000FDE  
                     _TRISCbits 000F94                     ___ftdiv@exp 002E                     ___ftmul@exp 001B  
                __end_of___ftge 1C1A                  __end_of___lmul 1E3E                  __end_of___wmul 1EA4  
                    floor@expon 004F             start_initialization 1EEC                      eval_poly@d 003F  
                    eval_poly@n 0041                      eval_poly@x 003C     __size_of_set_pwm_duty_cycle 00B2  
                   __end_of_sin 1272                      frexp@value 0001                        ??___ftge 0007  
                      ??___lmul 0009                        ??___wmul 0005                __CFG_LPT1OSC$OFF 000000  
             __size_of___altoft 0078               __size_of___ftpack 00AE               __size_of___lltoft 005C  
                   __pbssCOMRAM 007A               __size_of___lwtoft 0024                      sin@coeff_a 1001  
                    sin@coeff_b 1010               __CFG_CCP2MX$PORTC 000000                        ?___ftadd 0030  
                      ?___ftdiv 0021                        ?___ftneg 0001                        ?___lldiv 000D  
                      ?___ftmul 0012                        ?___ftsub 0051                        ?___fttol 0030  
                   __smallconst 1000                       _eval_poly 1958                  __size_of_floor 00DE  
                __size_of_frexp 0078                  ___wmul@product 0005                __CFG_WDTPS$32768 000000  
             ___wmul@multiplier 0001                      ?_eval_poly 003C               ___lmul@multiplier 0001  
                     frexp@eptr 0004                        __Hrparam 0000                        __Lrparam 0000  
                  __Lsmallconst 1000              __CFG_BOREN$SBORDIS 000000                __size_of___ftadd 01AC  
              __size_of___ftdiv 00E6                __size_of___ftneg 0024                __size_of___lldiv 0082  
                      ___altoft 1D14                __size_of___ftmul 00F4                __size_of___ftsub 0040  
              __size_of___fttol 00F4                        ___ftpack 1ADC                        ___lltoft 1D8C  
                      ___lwtoft 1EC8                        _main$735 006F                        _main$736 0072  
                      __ptext10 1A2A                        __ptext11 1EC8                        __ptext12 15AC  
                      __ptext13 16A0                        __ptext14 1B8A                        __ptext15 1794  
                      __ptext16 1DE8                        __ptext17 1D8C                        __ptext18 1ADC  
                      __ptext19 1C1A                   __size_of_main 018E  set_pwm_duty_cycle@max_duty_val 0044  
                      main@tick 0075      __end_of_set_pwm_duty_cycle 1ADC                     _OSCTUNEbits 000F9B  
                   ??_eval_poly 0043                   main@FREQUENCY 0068                ___lldiv@dividend 000D  
              ___lldiv@quotient 0015  
