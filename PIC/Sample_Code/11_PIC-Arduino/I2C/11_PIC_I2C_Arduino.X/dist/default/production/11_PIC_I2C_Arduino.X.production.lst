

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Apr 09 00:36:40 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1,inline
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1,inline
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    38  0000                     
    39                           ; Version 2.05
    40                           ; Generated 20/12/2018 GMT
    41                           ; 
    42                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC18F4620 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     
    74                           	psect	smallconst
    75  001000                     __psmallconst:
    76                           	opt callstack 0
    77  001000  00                 	db	0
    78  001001                     _keys:
    79                           	opt callstack 0
    80  001001  31                 	db	49
    81  001002  32                 	db	50
    82  001003  33                 	db	51
    83  001004  41                 	db	65
    84  001005  34                 	db	52
    85  001006  35                 	db	53
    86  001007  36                 	db	54
    87  001008  42                 	db	66
    88  001009  37                 	db	55
    89  00100A  38                 	db	56
    90  00100B  39                 	db	57
    91  00100C  43                 	db	67
    92  00100D  2A                 	db	42
    93  00100E  30                 	db	48
    94  00100F  23                 	db	35
    95  001010  44                 	db	68
    96  001011  00                 	db	0
    97  001012                     __end_of_keys:
    98                           	opt callstack 0
    99  001012                     _LCD_LINE4_ADDR:
   100                           	opt callstack 0
   101  001012  50                 	db	80
   102  001013                     __end_of_LCD_LINE4_ADDR:
   103                           	opt callstack 0
   104  001013                     _LCD_LINE1_ADDR:
   105                           	opt callstack 0
   106  001013  00                 	db	0
   107  001014                     __end_of_LCD_LINE1_ADDR:
   108                           	opt callstack 0
   109  001014                     _LCD_SIZE_VERT:
   110                           	opt callstack 0
   111  001014  04                 	db	4
   112  001015                     __end_of_LCD_SIZE_VERT:
   113                           	opt callstack 0
   114  001015                     _LCD_SIZE_HORZ:
   115                           	opt callstack 0
   116  001015  10                 	db	16
   117  001016                     __end_of_LCD_SIZE_HORZ:
   118                           	opt callstack 0
   119  001016  10                 	db	16
   120  001017                     __end_of_LCD_LINE3_ADDR:
   121                           	opt callstack 0
   122  001017  40                 	db	64
   123  001018                     __end_of_LCD_LINE2_ADDR:
   124                           	opt callstack 0
   125  0000                     _LATDbits	set	3980
   126  0000                     _INTCONbits	set	4082
   127  0000                     _SSPBUF	set	4041
   128  0000                     _SSPCON2bits	set	4037
   129  0000                     _SSPCON1	set	4038
   130  0000                     _SSPADD	set	4040
   131  0000                     _TRISCbits	set	3988
   132  0000                     _SSPCON1bits	set	4038
   133  0000                     _SSPCON2	set	4037
   134  0000                     _SSPSTAT	set	4039
   135  0000                     _ADCON1	set	4033
   136  0000                     _TRISD	set	3989
   137  0000                     _LATD	set	3980
   138  0000                     _TRISB	set	3987
   139  0000                     _LATB	set	3978
   140  001018                     STR_1:
   141  001018  64                 	db	100	;'d'
   142  001019  61                 	db	97	;'a'
   143  00101A  74                 	db	116	;'t'
   144  00101B  61                 	db	97	;'a'
   145  00101C  5B                 	db	91	;'['
   146  00101D  30                 	db	48	;'0'
   147  00101E  5D                 	db	93	;']'
   148  00101F  2C                 	db	44
   149  001020  20                 	db	32
   150  001021  25                 	db	37
   151  001022  64                 	db	100	;'d'
   152  001023  00                 	db	0
   153  001024                     STR_2:
   154  001024  64                 	db	100	;'d'
   155  001025  61                 	db	97	;'a'
   156  001026  74                 	db	116	;'t'
   157  001027  61                 	db	97	;'a'
   158  001028  5B                 	db	91	;'['
   159  001029  31                 	db	49	;'1'
   160  00102A  5D                 	db	93	;']'
   161  00102B  2C                 	db	44
   162  00102C  20                 	db	32
   163  00102D  25                 	db	37
   164  00102E  64                 	db	100	;'d'
   165  00102F  00                 	db	0
   166  001030                     STR_3:
   167  001030  64                 	db	100	;'d'
   168  001031  61                 	db	97	;'a'
   169  001032  74                 	db	116	;'t'
   170  001033  61                 	db	97	;'a'
   171  001034  5F                 	db	95	;'_'
   172  001035  67                 	db	103	;'g'
   173  001036  2C                 	db	44
   174  001037  20                 	db	32
   175  001038  25                 	db	37
   176  001039  64                 	db	100	;'d'
   177  00103A  00                 	db	0
   178                           
   179                           ; #config settings
   180  00103B  00                 	db	0	; dummy byte at the end
   181  0000                     
   182                           	psect	cinit
   183  001AE8                     __pcinit:
   184                           	opt callstack 0
   185  001AE8                     start_initialization:
   186                           	opt callstack 0
   187  001AE8                     __initialization:
   188                           	opt callstack 0
   189                           
   190                           ; Clear objects allocated to BANK0 (32 bytes)
   191  001AE8  EE00  F080         	lfsr	0,__pbssBANK0
   192  001AEC  0E20               	movlw	32
   193  001AEE                     clear_0:
   194  001AEE  6AEE               	clrf	postinc0,c
   195  001AF0  06E8               	decf	wreg,f,c
   196  001AF2  E1FD               	bnz	clear_0
   197                           
   198                           ; Clear objects allocated to COMRAM (8 bytes)
   199  001AF4  EE00  F071         	lfsr	0,__pbssCOMRAM
   200  001AF8  0E08               	movlw	8
   201  001AFA                     clear_1:
   202  001AFA  6AEE               	clrf	postinc0,c
   203  001AFC  06E8               	decf	wreg,f,c
   204  001AFE  E1FD               	bnz	clear_1
   205  001B00                     end_of_initialization:
   206                           	opt callstack 0
   207  001B00                     __end_of__initialization:
   208                           	opt callstack 0
   209  001B00  0E00               	movlw	low (__Lsmallconst shr (0+16))
   210  001B02  6EF8               	movwf	tblptru,c
   211  001B04  0E10               	movlw	high __Lsmallconst
   212  001B06  6EF7               	movwf	tblptrh,c
   213  001B08  0100               	movlb	0
   214  001B0A  EFA3  F00A         	goto	_main	;jump to C main() function
   215                           
   216                           	psect	bssCOMRAM
   217  000071                     __pbssCOMRAM:
   218                           	opt callstack 0
   219  000071                     _nout:
   220                           	opt callstack 0
   221  000071                     	ds	2
   222  000073                     _width:
   223                           	opt callstack 0
   224  000073                     	ds	2
   225  000075                     _prec:
   226                           	opt callstack 0
   227  000075                     	ds	2
   228  000077                     _flags:
   229                           	opt callstack 0
   230  000077                     	ds	2
   231                           
   232                           	psect	bssBANK0
   233  000080                     __pbssBANK0:
   234                           	opt callstack 0
   235  000080                     _dbuf:
   236                           	opt callstack 0
   237  000080                     	ds	32
   238                           
   239                           	psect	cstackCOMRAM
   240  000001                     __pcstackCOMRAM:
   241                           	opt callstack 0
   242  000001                     ??_I2C_Master_Wait:
   243  000001                     ?_strlen:
   244                           	opt callstack 0
   245  000001                     ?___lldiv:
   246                           	opt callstack 0
   247  000001                     ?___aodiv:
   248                           	opt callstack 0
   249  000001                     ?___aomod:
   250                           	opt callstack 0
   251  000001                     pulse_e@interruptState:
   252                           	opt callstack 0
   253  000001                     strlen@s:
   254                           	opt callstack 0
   255  000001                     ___lldiv@dividend:
   256                           	opt callstack 0
   257  000001                     ___aodiv@dividend:
   258                           	opt callstack 0
   259  000001                     ___aomod@dividend:
   260                           	opt callstack 0
   261                           
   262                           ; 8 bytes @ 0x0
   263  000001                     	ds	1
   264  000002                     I2C_Master_Read@ackBit:
   265                           	opt callstack 0
   266  000002                     send_nibble@data:
   267                           	opt callstack 0
   268  000002                     I2C_Master_Write@byteToWrite:
   269                           	opt callstack 0
   270                           
   271                           ; 2 bytes @ 0x1
   272  000002                     	ds	1
   273  000003                     I2C_Master_Read@receivedByte:
   274                           	opt callstack 0
   275  000003                     send_byte@data:
   276                           	opt callstack 0
   277  000003                     strlen@a:
   278                           	opt callstack 0
   279                           
   280                           ; 2 bytes @ 0x2
   281  000003                     	ds	1
   282  000004                     lcdInst@data:
   283                           	opt callstack 0
   284  000004                     putch@data:
   285                           	opt callstack 0
   286                           
   287                           ; 1 bytes @ 0x3
   288  000004                     	ds	1
   289  000005                     ??_initLCD:
   290  000005                     fputc@c:
   291                           	opt callstack 0
   292  000005                     ___lldiv@divisor:
   293                           	opt callstack 0
   294                           
   295                           ; 4 bytes @ 0x4
   296  000005                     	ds	2
   297  000007                     fputc@fp:
   298                           	opt callstack 0
   299                           
   300                           ; 2 bytes @ 0x6
   301  000007                     	ds	2
   302  000009                     ??_fputc:
   303  000009                     ___lldiv@quotient:
   304                           	opt callstack 0
   305  000009                     ___aodiv@divisor:
   306                           	opt callstack 0
   307  000009                     ___aomod@divisor:
   308                           	opt callstack 0
   309                           
   310                           ; 8 bytes @ 0x8
   311  000009                     	ds	4
   312  00000D                     ___lldiv@counter:
   313                           	opt callstack 0
   314                           
   315                           ; 1 bytes @ 0xC
   316  00000D                     	ds	1
   317  00000E                     fputs@s:
   318                           	opt callstack 0
   319  00000E                     I2C_Master_Init@clockFreq:
   320                           	opt callstack 0
   321                           
   322                           ; 4 bytes @ 0xD
   323  00000E                     	ds	2
   324  000010                     fputs@fp:
   325                           	opt callstack 0
   326                           
   327                           ; 2 bytes @ 0xF
   328  000010                     	ds	1
   329  000011                     ___aodiv@counter:
   330                           	opt callstack 0
   331  000011                     ___aomod@counter:
   332                           	opt callstack 0
   333                           
   334                           ; 1 bytes @ 0x10
   335  000011                     	ds	1
   336  000012                     ??_I2C_Master_Init:
   337  000012                     ___aodiv@sign:
   338                           	opt callstack 0
   339  000012                     ___aomod@sign:
   340                           	opt callstack 0
   341  000012                     fputs@c:
   342                           	opt callstack 0
   343                           
   344                           ; 1 bytes @ 0x11
   345  000012                     	ds	1
   346  000013                     ?_abs:
   347                           	opt callstack 0
   348  000013                     abs@a:
   349                           	opt callstack 0
   350  000013                     fputs@i:
   351                           	opt callstack 0
   352  000013                     ___aodiv@quotient:
   353                           	opt callstack 0
   354                           
   355                           ; 8 bytes @ 0x12
   356  000013                     	ds	2
   357  000015                     ??_abs:
   358  000015                     ?_pad:
   359                           	opt callstack 0
   360  000015                     pad@fp:
   361                           	opt callstack 0
   362                           
   363                           ; 2 bytes @ 0x14
   364  000015                     	ds	2
   365  000017                     pad@buf:
   366                           	opt callstack 0
   367                           
   368                           ; 2 bytes @ 0x16
   369  000017                     	ds	2
   370  000019                     pad@p:
   371                           	opt callstack 0
   372                           
   373                           ; 2 bytes @ 0x18
   374  000019                     	ds	2
   375  00001B                     ??_pad:
   376                           
   377                           ; 1 bytes @ 0x1A
   378  00001B                     	ds	1
   379  00001C                     pad@i:
   380                           	opt callstack 0
   381                           
   382                           ; 2 bytes @ 0x1B
   383  00001C                     	ds	2
   384  00001E                     pad@w:
   385                           	opt callstack 0
   386                           
   387                           ; 2 bytes @ 0x1D
   388  00001E                     	ds	2
   389  000020                     ?_dtoa:
   390                           	opt callstack 0
   391  000020                     dtoa@fp:
   392                           	opt callstack 0
   393                           
   394                           ; 2 bytes @ 0x1F
   395  000020                     	ds	2
   396  000022                     dtoa@d:
   397                           	opt callstack 0
   398                           
   399                           ; 8 bytes @ 0x21
   400  000022                     	ds	8
   401  00002A                     ??_dtoa:
   402                           
   403                           ; 1 bytes @ 0x29
   404  00002A                     	ds	8
   405  000032                     _dtoa$408:
   406                           	opt callstack 0
   407                           
   408                           ; 2 bytes @ 0x31
   409  000032                     	ds	2
   410  000034                     dtoa@p:
   411                           	opt callstack 0
   412                           
   413                           ; 2 bytes @ 0x33
   414  000034                     	ds	2
   415  000036                     dtoa@w:
   416                           	opt callstack 0
   417                           
   418                           ; 2 bytes @ 0x35
   419  000036                     	ds	2
   420  000038                     dtoa@s:
   421                           	opt callstack 0
   422                           
   423                           ; 2 bytes @ 0x37
   424  000038                     	ds	2
   425  00003A                     dtoa@n:
   426                           	opt callstack 0
   427                           
   428                           ; 8 bytes @ 0x39
   429  00003A                     	ds	8
   430  000042                     dtoa@i:
   431                           	opt callstack 0
   432                           
   433                           ; 2 bytes @ 0x41
   434  000042                     	ds	2
   435  000044                     ?_vfpfcnvrt:
   436                           	opt callstack 0
   437  000044                     vfpfcnvrt@fp:
   438                           	opt callstack 0
   439                           
   440                           ; 2 bytes @ 0x43
   441  000044                     	ds	2
   442  000046                     vfpfcnvrt@fmt:
   443                           	opt callstack 0
   444                           
   445                           ; 2 bytes @ 0x45
   446  000046                     	ds	2
   447  000048                     vfpfcnvrt@ap:
   448                           	opt callstack 0
   449                           
   450                           ; 2 bytes @ 0x47
   451  000048                     	ds	2
   452  00004A                     ??_vfpfcnvrt:
   453                           
   454                           ; 1 bytes @ 0x49
   455  00004A                     	ds	2
   456  00004C                     vfpfcnvrt@ll:
   457                           	opt callstack 0
   458                           
   459                           ; 8 bytes @ 0x4B
   460  00004C                     	ds	8
   461  000054                     ?_vfprintf:
   462                           	opt callstack 0
   463  000054                     vfprintf@fp:
   464                           	opt callstack 0
   465                           
   466                           ; 2 bytes @ 0x53
   467  000054                     	ds	2
   468  000056                     vfprintf@fmt:
   469                           	opt callstack 0
   470                           
   471                           ; 2 bytes @ 0x55
   472  000056                     	ds	2
   473  000058                     vfprintf@ap:
   474                           	opt callstack 0
   475                           
   476                           ; 2 bytes @ 0x57
   477  000058                     	ds	2
   478  00005A                     vfprintf@cfmt:
   479                           	opt callstack 0
   480                           
   481                           ; 2 bytes @ 0x59
   482  00005A                     	ds	2
   483  00005C                     ?_printf:
   484                           	opt callstack 0
   485  00005C                     printf@fmt:
   486                           	opt callstack 0
   487                           
   488                           ; 2 bytes @ 0x5B
   489  00005C                     	ds	4
   490  000060                     
   491                           ; 1 bytes @ 0x5F
   492  000060                     	ds	2
   493  000062                     printf@ap:
   494                           	opt callstack 0
   495                           
   496                           ; 2 bytes @ 0x61
   497  000062                     	ds	2
   498  000064                     ??_main:
   499                           
   500                           ; 1 bytes @ 0x63
   501  000064                     	ds	4
   502  000068                     _main$91:
   503                           	opt callstack 0
   504                           
   505                           ; 1 bytes @ 0x67
   506  000068                     	ds	1
   507  000069                     main@data_g:
   508                           	opt callstack 0
   509                           
   510                           ; 2 bytes @ 0x68
   511  000069                     	ds	2
   512  00006B                     main@data:
   513                           	opt callstack 0
   514                           
   515                           ; 6 bytes @ 0x6A
   516  00006B                     	ds	6
   517                           
   518 ;;
   519 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   520 ;;
   521 ;; *************** function _main *****************
   522 ;; Defined at:
   523 ;;		line 33 in file "main.c"
   524 ;; Parameters:    Size  Location     Type
   525 ;;		None
   526 ;; Auto vars:     Size  Location     Type
   527 ;;  data            6  106[COMRAM] int [3]
   528 ;;  mem             3    0        unsigned char [3]
   529 ;;  data_g          2  104[COMRAM] unsigned int 
   530 ;;  send            1    0        _Bool 
   531 ;;  counter         1    0        unsigned char 
   532 ;;  dataa           1    0        unsigned char 
   533 ;;  keypress        1    0        unsigned char 
   534 ;; Return value:  Size  Location     Type
   535 ;;                  1    wreg      void 
   536 ;; Registers used:
   537 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   538 ;; Tracked objects:
   539 ;;		On entry : 0/0
   540 ;;		On exit  : 0/0
   541 ;;		Unchanged: 0/0
   542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   544 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   545 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   546 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   547 ;;Total ram usage:       13 bytes
   548 ;; Hardware stack levels required when called:   11
   549 ;; This function calls:
   550 ;;		_I2C_Master_Init
   551 ;;		_I2C_Master_Read
   552 ;;		_I2C_Master_RepeatedStart
   553 ;;		_I2C_Master_Start
   554 ;;		_I2C_Master_Stop
   555 ;;		_I2C_Master_Write
   556 ;;		_initLCD
   557 ;;		_lcdInst
   558 ;;		_printf
   559 ;; This function is called by:
   560 ;;		Startup code after reset
   561 ;; This function uses a non-reentrant model
   562 ;;
   563                           
   564                           	psect	text0
   565  001546                     __ptext0:
   566                           	opt callstack 0
   567  001546                     _main:
   568                           	opt callstack 20
   569                           
   570                           ;main.c: 35:     LATB = 0x00;
   571                           
   572                           ;incstack = 0
   573  001546  0E00               	movlw	0
   574  001548  6E8A               	movwf	3978,c	;volatile
   575                           
   576                           ;main.c: 36:     TRISB = 0b11110010;
   577  00154A  0EF2               	movlw	242
   578  00154C  6E93               	movwf	3987,c	;volatile
   579                           
   580                           ;main.c: 41:     LATD = 0x00;
   581  00154E  0E00               	movlw	0
   582  001550  6E8C               	movwf	3980,c	;volatile
   583                           
   584                           ;main.c: 42:     TRISD = 0x00;
   585  001552  0E00               	movlw	0
   586  001554  6E95               	movwf	3989,c	;volatile
   587                           
   588                           ;main.c: 45:     ADCON1 = 0b00001111;
   589  001556  0E0F               	movlw	15
   590  001558  6EC1               	movwf	4033,c	;volatile
   591                           
   592                           ;main.c: 47:     initLCD();
   593  00155A  EC89  F00C         	call	_initLCD	;wreg free
   594                           
   595                           ;main.c: 54:     I2C_Master_Init(100000);
   596  00155E  0EA0               	movlw	160
   597  001560  6E0E               	movwf	I2C_Master_Init@clockFreq,c
   598  001562  0E86               	movlw	134
   599  001564  6E0F               	movwf	I2C_Master_Init@clockFreq+1,c
   600  001566  0E01               	movlw	1
   601  001568  6E10               	movwf	I2C_Master_Init@clockFreq+2,c
   602  00156A  0E00               	movlw	0
   603  00156C  6E11               	movwf	I2C_Master_Init@clockFreq+3,c
   604  00156E  ECBE  F00C         	call	_I2C_Master_Init	;wreg free
   605                           
   606                           ;main.c: 55:     I2C_Master_Start();
   607  001572  ECDE  F00D         	call	_I2C_Master_Start	;wreg free
   608                           
   609                           ;main.c: 56:     I2C_Master_Write(0b00010000);
   610  001576  0E00               	movlw	0
   611  001578  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
   612  00157A  0E10               	movlw	16
   613  00157C  6E02               	movwf	I2C_Master_Write@byteToWrite,c
   614  00157E  ECD5  F00D         	call	_I2C_Master_Write	;wreg free
   615                           
   616                           ;main.c: 57:     I2C_Master_Stop();
   617  001582  ECDA  F00D         	call	_I2C_Master_Stop	;wreg free
   618  001586                     
   619                           ;main.c: 101:             I2C_Master_RepeatedStart();
   620  001586  ECE2  F00D         	call	_I2C_Master_RepeatedStart	;wreg free
   621                           
   622                           ;main.c: 102:             I2C_Master_Write(0b00010001);
   623  00158A  0E00               	movlw	0
   624  00158C  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
   625  00158E  0E11               	movlw	17
   626  001590  6E02               	movwf	I2C_Master_Write@byteToWrite,c
   627  001592  ECD5  F00D         	call	_I2C_Master_Write	;wreg free
   628                           
   629                           ;main.c: 103:             data[0] = I2C_Master_Read(0);
   630  001596  0E00               	movlw	0
   631  001598  EC9A  F00D         	call	_I2C_Master_Read
   632  00159C  6E64               	movwf	??_main& (0+255),c
   633  00159E  5064               	movf	??_main,w,c
   634  0015A0  6E6B               	movwf	main@data,c
   635  0015A2  6A6C               	clrf	main@data+1,c
   636                           
   637                           ;main.c: 104:             data[1] = I2C_Master_Read(1);
   638  0015A4  0E01               	movlw	1
   639  0015A6  EC9A  F00D         	call	_I2C_Master_Read
   640  0015AA  6E64               	movwf	??_main& (0+255),c
   641  0015AC  5064               	movf	??_main,w,c
   642  0015AE  6E6D               	movwf	main@data+2,c
   643  0015B0  6A6E               	clrf	main@data+3,c
   644                           
   645                           ;main.c: 106:             data_g = data[0];
   646  0015B2  C06B  F069         	movff	main@data,main@data_g
   647  0015B6  C06C  F06A         	movff	main@data+1,main@data_g+1
   648                           
   649                           ;main.c: 107:             data_g = (data_g<<8)||(data[1]);
   650  0015BA  0E01               	movlw	1
   651  0015BC  6E68               	movwf	_main$91,c
   652  0015BE  5069               	movf	main@data_g,w,c
   653  0015C0  6E65               	movwf	(??_main+1)& (0+255),c
   654  0015C2  6A64               	clrf	??_main& (0+255),c
   655  0015C4  5064               	movf	??_main,w,c
   656  0015C6  1065               	iorwf	??_main+1,w,c
   657  0015C8  A4D8               	btfss	status,2,c
   658  0015CA  D006               	goto	l1771
   659  0015CC  506D               	movf	main@data+2,w,c
   660  0015CE  106E               	iorwf	main@data+3,w,c
   661  0015D0  A4D8               	btfss	status,2,c
   662  0015D2  D002               	goto	l1771
   663  0015D4  0E00               	movlw	0
   664  0015D6  6E68               	movwf	_main$91,c
   665  0015D8                     l1771:
   666  0015D8  C068  F069         	movff	_main$91,main@data_g
   667  0015DC  6A6A               	clrf	main@data_g+1,c
   668                           
   669                           ;main.c: 110:             I2C_Master_Stop();
   670  0015DE  ECDA  F00D         	call	_I2C_Master_Stop	;wreg free
   671                           
   672                           ;main.c: 113:             if(data[0]&&data[1]){
   673  0015E2  506B               	movf	main@data,w,c
   674  0015E4  106C               	iorwf	main@data+1,w,c
   675  0015E6  B4D8               	btfsc	status,2,c
   676  0015E8  D7CE               	goto	l1749
   677  0015EA  506D               	movf	main@data+2,w,c
   678  0015EC  106E               	iorwf	main@data+3,w,c
   679  0015EE  B4D8               	btfsc	status,2,c
   680  0015F0  D7CA               	goto	l1749
   681                           
   682                           ;main.c: 114:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
   683  0015F2  0E01               	movlw	1
   684  0015F4  ECCF  F00D         	call	_lcdInst
   685  0015F8  0E11               	movlw	17
   686  0015FA  6E64               	movwf	??_main& (0+255),c
   687  0015FC  0E3A               	movlw	58
   688  0015FE                     u1177:
   689  0015FE  2EE8               	decfsz	wreg,f,c
   690  001600  D7FE               	bra	u1177
   691  001602  2E64               	decfsz	??_main& (0+255),f,c
   692  001604  D7FC               	bra	u1177
   693  001606  D000               	nop2	
   694                           
   695                           ;main.c: 115:                 printf("data[0], %d", data[0]);
   696  001608  0E18               	movlw	low STR_1
   697  00160A  6E5C               	movwf	printf@fmt,c
   698  00160C  0E10               	movlw	high STR_1
   699  00160E  6E5D               	movwf	printf@fmt+1,c
   700  001610  C06B  F05E         	movff	main@data,?_printf+2
   701  001614  C06C  F05F         	movff	main@data+1,?_printf+3
   702  001618  EC87  F00D         	call	_printf	;wreg free
   703  00161C  0EC0               	movlw	192
   704  00161E  ECCF  F00D         	call	_lcdInst
   705                           
   706                           ;main.c: 117:                 printf("data[1], %d", data[1]);
   707  001622  0E24               	movlw	low STR_2
   708  001624  6E5C               	movwf	printf@fmt,c
   709  001626  0E10               	movlw	high STR_2
   710  001628  6E5D               	movwf	printf@fmt+1,c
   711  00162A  C06D  F05E         	movff	main@data+2,?_printf+2
   712  00162E  C06E  F05F         	movff	main@data+3,?_printf+3
   713  001632  EC87  F00D         	call	_printf	;wreg free
   714  001636  0E90               	movlw	144
   715  001638  ECCF  F00D         	call	_lcdInst
   716                           
   717                           ;main.c: 119:                 printf("data_g, %d", data_g);
   718  00163C  0E30               	movlw	low STR_3
   719  00163E  6E5C               	movwf	printf@fmt,c
   720  001640  0E10               	movlw	high STR_3
   721  001642  6E5D               	movwf	printf@fmt+1,c
   722  001644  C069  F05E         	movff	main@data_g,?_printf+2
   723  001648  C06A  F05F         	movff	main@data_g+1,?_printf+3
   724  00164C  EC87  F00D         	call	_printf	;wreg free
   725                           
   726                           ;main.c: 120:                 _delay((unsigned long)((1000)*(10000000/4000.0)));
   727  001650  0E0D               	movlw	13
   728  001652  6E65               	movwf	(??_main+1)& (0+255),c
   729  001654  0EAF               	movlw	175
   730  001656  6E64               	movwf	??_main& (0+255),c
   731  001658  0EB6               	movlw	182
   732  00165A                     u1187:
   733  00165A  2EE8               	decfsz	wreg,f,c
   734  00165C  D7FE               	bra	u1187
   735  00165E  2E64               	decfsz	??_main& (0+255),f,c
   736  001660  D7FC               	bra	u1187
   737  001662  2E65               	decfsz	(??_main+1)& (0+255),f,c
   738  001664  D7FA               	bra	u1187
   739  001666  D000               	nop2	
   740  001668  D78E               	goto	l1749
   741  00166A                     __end_of_main:
   742                           	opt callstack 0
   743                           
   744 ;; *************** function _printf *****************
   745 ;; Defined at:
   746 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
   747 ;; Parameters:    Size  Location     Type
   748 ;;  fmt             2   91[COMRAM] PTR const unsigned char 
   749 ;;		 -> STR_3(11), STR_2(12), STR_1(12), 
   750 ;; Auto vars:     Size  Location     Type
   751 ;;  ap              2   97[COMRAM] PTR void [1]
   752 ;;		 -> ?_printf(2), 
   753 ;;  ret             2    0        int 
   754 ;; Return value:  Size  Location     Type
   755 ;;                  2   91[COMRAM] int 
   756 ;; Registers used:
   757 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   758 ;; Tracked objects:
   759 ;;		On entry : 0/0
   760 ;;		On exit  : 0/0
   761 ;;		Unchanged: 0/0
   762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   763 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   764 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   766 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   767 ;;Total ram usage:        8 bytes
   768 ;; Hardware stack levels used:    1
   769 ;; Hardware stack levels required when called:   10
   770 ;; This function calls:
   771 ;;		_vfprintf
   772 ;; This function is called by:
   773 ;;		_main
   774 ;; This function uses a non-reentrant model
   775 ;;
   776                           
   777                           	psect	text1
   778  001B0E                     __ptext1:
   779                           	opt callstack 0
   780  001B0E                     _printf:
   781                           	opt callstack 20
   782                           
   783                           ;incstack = 0
   784  001B0E  0E5E               	movlw	low (?_printf+2)
   785  001B10  6E62               	movwf	printf@ap,c
   786  001B12  0E00               	movlw	high (?_printf+2)
   787  001B14  6E63               	movwf	printf@ap+1,c
   788  001B16  0E00               	movlw	0
   789  001B18  6E54               	movwf	vfprintf@fp,c
   790  001B1A  0E00               	movlw	0
   791  001B1C  6E55               	movwf	vfprintf@fp+1,c
   792  001B1E  C05C  F056         	movff	printf@fmt,vfprintf@fmt
   793  001B22  C05D  F057         	movff	printf@fmt+1,vfprintf@fmt+1
   794  001B26  0E62               	movlw	low printf@ap
   795  001B28  6E58               	movwf	vfprintf@ap,c
   796  001B2A  0E00               	movlw	high printf@ap
   797  001B2C  6E59               	movwf	vfprintf@ap+1,c
   798  001B2E  ECEC  F00C         	call	_vfprintf	;wreg free
   799  001B32  0012               	return		;funcret
   800  001B34                     __end_of_printf:
   801                           	opt callstack 0
   802                           
   803 ;; *************** function _vfprintf *****************
   804 ;; Defined at:
   805 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
   806 ;; Parameters:    Size  Location     Type
   807 ;;  fp              2   83[COMRAM] PTR struct _IO_FILE
   808 ;;		 -> NULL(0), 
   809 ;;  fmt             2   85[COMRAM] PTR const unsigned char 
   810 ;;		 -> STR_3(11), STR_2(12), STR_1(12), 
   811 ;;  ap              2   87[COMRAM] PTR PTR void 
   812 ;;		 -> printf@ap(2), 
   813 ;; Auto vars:     Size  Location     Type
   814 ;;  cfmt            2   89[COMRAM] PTR unsigned char 
   815 ;;		 -> STR_3(11), STR_2(12), STR_1(12), 
   816 ;; Return value:  Size  Location     Type
   817 ;;                  2   83[COMRAM] int 
   818 ;; Registers used:
   819 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   820 ;; Tracked objects:
   821 ;;		On entry : 0/0
   822 ;;		On exit  : 0/0
   823 ;;		Unchanged: 0/0
   824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   825 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   826 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   828 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   829 ;;Total ram usage:        8 bytes
   830 ;; Hardware stack levels used:    1
   831 ;; Hardware stack levels required when called:    9
   832 ;; This function calls:
   833 ;;		_vfpfcnvrt
   834 ;; This function is called by:
   835 ;;		_printf
   836 ;; This function uses a non-reentrant model
   837 ;;
   838                           
   839                           	psect	text2
   840  0019D8                     __ptext2:
   841                           	opt callstack 0
   842  0019D8                     _vfprintf:
   843                           	opt callstack 20
   844                           
   845                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
   846                           
   847                           ;incstack = 0
   848  0019D8  C056  F05A         	movff	vfprintf@fmt,vfprintf@cfmt
   849  0019DC  C057  F05B         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   850                           
   851                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
   852  0019E0  0E00               	movlw	0
   853  0019E2  6E72               	movwf	_nout+1,c
   854  0019E4  0E00               	movlw	0
   855  0019E6  6E71               	movwf	_nout,c
   856                           
   857                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
   858  0019E8  D012               	goto	l1647
   859  0019EA                     l1645:
   860                           
   861                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
   862  0019EA  C054  F044         	movff	vfprintf@fp,vfpfcnvrt@fp
   863  0019EE  C055  F045         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   864  0019F2  0E5A               	movlw	low vfprintf@cfmt
   865  0019F4  6E46               	movwf	vfpfcnvrt@fmt,c
   866  0019F6  0E00               	movlw	high vfprintf@cfmt
   867  0019F8  6E47               	movwf	vfpfcnvrt@fmt+1,c
   868  0019FA  C058  F048         	movff	vfprintf@ap,vfpfcnvrt@ap
   869  0019FE  C059  F049         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   870  001A02  EC3F  F009         	call	_vfpfcnvrt	;wreg free
   871  001A06  5044               	movf	?_vfpfcnvrt,w,c
   872  001A08  2671               	addwf	_nout,f,c
   873  001A0A  5045               	movf	?_vfpfcnvrt+1,w,c
   874  001A0C  2272               	addwfc	_nout+1,f,c
   875  001A0E                     l1647:
   876                           
   877                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
   878  001A0E  C05A  FFF6         	movff	vfprintf@cfmt,tblptrl
   879  001A12  C05B  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   880  001A16                     	if	0	;tblptru may be non-zero
   881  001A16                     	endif
   882  001A16                     	if	0	;tblptru may be non-zero
   883  001A16                     	endif
   884  001A16  0008               	tblrd		*
   885  001A18  50F5               	movf	tablat,w,c
   886  001A1A  0900               	iorlw	0
   887  001A1C  A4D8               	btfss	status,2,c
   888  001A1E  D7E5               	goto	l1645
   889                           
   890                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
   891  001A20  C071  F054         	movff	_nout,?_vfprintf
   892  001A24  C072  F055         	movff	_nout+1,?_vfprintf+1
   893  001A28  0012               	return		;funcret
   894  001A2A                     __end_of_vfprintf:
   895                           	opt callstack 0
   896                           
   897 ;; *************** function _vfpfcnvrt *****************
   898 ;; Defined at:
   899 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
   900 ;; Parameters:    Size  Location     Type
   901 ;;  fp              2   67[COMRAM] PTR struct _IO_FILE
   902 ;;		 -> NULL(0), 
   903 ;;  fmt             2   69[COMRAM] PTR PTR unsigned char 
   904 ;;		 -> vfprintf@cfmt(2), 
   905 ;;  ap              2   71[COMRAM] PTR PTR void 
   906 ;;		 -> printf@ap(2), 
   907 ;; Auto vars:     Size  Location     Type
   908 ;;  ll              8   75[COMRAM] long long 
   909 ;;  llu             8    0        unsigned long long 
   910 ;;  f               4    0        unsigned long long 
   911 ;;  vp              3    0        PTR void 
   912 ;;  ct              3    0        unsigned char [3]
   913 ;;  cp              3    0        PTR unsigned char 
   914 ;;  i               2    0        int 
   915 ;;  done            2    0        int 
   916 ;;  c               1    0        unsigned char 
   917 ;; Return value:  Size  Location     Type
   918 ;;                  2   67[COMRAM] int 
   919 ;; Registers used:
   920 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   921 ;; Tracked objects:
   922 ;;		On entry : 0/0
   923 ;;		On exit  : 0/0
   924 ;;		Unchanged: 0/0
   925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   926 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   927 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   928 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   929 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   930 ;;Total ram usage:       16 bytes
   931 ;; Hardware stack levels used:    1
   932 ;; Hardware stack levels required when called:    8
   933 ;; This function calls:
   934 ;;		_dtoa
   935 ;;		_fputc
   936 ;; This function is called by:
   937 ;;		_vfprintf
   938 ;; This function uses a non-reentrant model
   939 ;;
   940                           
   941                           	psect	text3
   942  00127E                     __ptext3:
   943                           	opt callstack 0
   944  00127E                     _vfpfcnvrt:
   945                           	opt callstack 20
   946                           
   947                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
   948                           
   949                           ;incstack = 0
   950  00127E  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   951  001282  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   952  001286  CFDE FFF6          	movff	postinc2,tblptrl
   953  00128A  CFDD FFF7          	movff	postdec2,tblptrh
   954  00128E                     	if	0	;tblptru may be non-zero
   955  00128E                     	endif
   956  00128E                     	if	0	;tblptru may be non-zero
   957  00128E                     	endif
   958  00128E  0008               	tblrd		*
   959  001290  50F5               	movf	tablat,w,c
   960  001292  0A25               	xorlw	37
   961  001294  A4D8               	btfss	status,2,c
   962  001296  D099               	goto	l1625
   963                           
   964                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
   965  001298  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   966  00129C  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   967  0012A0  2ADE               	incf	postinc2,f,c
   968  0012A2  0E00               	movlw	0
   969  0012A4  22DD               	addwfc	postdec2,f,c
   970                           
   971                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
   972  0012A6  0E00               	movlw	0
   973  0012A8  6E74               	movwf	_width+1,c
   974  0012AA  0E00               	movlw	0
   975  0012AC  6E73               	movwf	_width,c
   976  0012AE  C073  F077         	movff	_width,_flags
   977  0012B2  C074  F078         	movff	_width+1,_flags+1
   978                           
   979                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
   980  0012B6  6875               	setf	_prec,c
   981  0012B8  6876               	setf	_prec+1,c
   982                           
   983                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
   984  0012BA  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   985  0012BE  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   986  0012C2  CFDE FFF6          	movff	postinc2,tblptrl
   987  0012C6  CFDD FFF7          	movff	postdec2,tblptrh
   988  0012CA                     	if	0	;tblptru may be non-zero
   989  0012CA                     	endif
   990  0012CA                     	if	0	;tblptru may be non-zero
   991  0012CA                     	endif
   992  0012CA  0008               	tblrd		*
   993  0012CC  50F5               	movf	tablat,w,c
   994  0012CE  0A64               	xorlw	100
   995  0012D0  B4D8               	btfsc	status,2,c
   996  0012D2  D00D               	goto	u1010
   997  0012D4  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   998  0012D8  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   999  0012DC  CFDE FFF6          	movff	postinc2,tblptrl
  1000  0012E0  CFDD FFF7          	movff	postdec2,tblptrh
  1001  0012E4                     	if	0	;tblptru may be non-zero
  1002  0012E4                     	endif
  1003  0012E4                     	if	0	;tblptru may be non-zero
  1004  0012E4                     	endif
  1005  0012E4  0008               	tblrd		*
  1006  0012E6  50F5               	movf	tablat,w,c
  1007  0012E8  0A69               	xorlw	105
  1008  0012EA  A4D8               	btfss	status,2,c
  1009  0012EC  D03F               	goto	l1609
  1010  0012EE                     u1010:
  1011                           
  1012                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  1013  0012EE  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1014  0012F2  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1015  0012F6  2ADE               	incf	postinc2,f,c
  1016  0012F8  0E00               	movlw	0
  1017  0012FA  22DD               	addwfc	postdec2,f,c
  1018                           
  1019                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1020  0012FC  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1021  001300  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1022  001304  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  1023  001308  0E02               	movlw	2
  1024  00130A  26DE               	addwf	postinc2,f,c
  1025  00130C  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  1026  001310  0E00               	movlw	0
  1027  001312  22DD               	addwfc	postdec2,f,c
  1028  001314  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1029  001318  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1030  00131C  CFDE F04C          	movff	postinc2,vfpfcnvrt@ll
  1031  001320  CFDD F04D          	movff	postdec2,vfpfcnvrt@ll+1
  1032  001324  0E00               	movlw	0
  1033  001326  BE4D               	btfsc	vfpfcnvrt@ll+1,7,c
  1034  001328  0EFF               	movlw	-1
  1035  00132A  6E4E               	movwf	vfpfcnvrt@ll+2,c
  1036  00132C  6E4F               	movwf	vfpfcnvrt@ll+3,c
  1037  00132E  6E50               	movwf	vfpfcnvrt@ll+4,c
  1038  001330  6E51               	movwf	vfpfcnvrt@ll+5,c
  1039  001332  6E52               	movwf	vfpfcnvrt@ll+6,c
  1040  001334  6E53               	movwf	vfpfcnvrt@ll+7,c
  1041                           
  1042                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  1043  001336  C044  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  1044  00133A  C045  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1045  00133E  C04C  F022         	movff	vfpfcnvrt@ll,dtoa@d
  1046  001342  C04D  F023         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1047  001346  C04E  F024         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1048  00134A  C04F  F025         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1049  00134E  C050  F026         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1050  001352  C051  F027         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1051  001356  C052  F028         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1052  00135A  C053  F029         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1053  00135E  EC1E  F008         	call	_dtoa	;wreg free
  1054  001362  C020  F044         	movff	?_dtoa,?_vfpfcnvrt
  1055  001366  C021  F045         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1056  00136A  0012               	return	
  1057  00136C                     l1609:
  1058                           
  1059                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1060  00136C  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1061  001370  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1062  001374  CFDE FFF6          	movff	postinc2,tblptrl
  1063  001378  CFDD FFF7          	movff	postdec2,tblptrh
  1064  00137C                     	if	0	;tblptru may be non-zero
  1065  00137C                     	endif
  1066  00137C                     	if	0	;tblptru may be non-zero
  1067  00137C                     	endif
  1068  00137C  0008               	tblrd		*
  1069  00137E  50F5               	movf	tablat,w,c
  1070  001380  0A25               	xorlw	37
  1071  001382  A4D8               	btfss	status,2,c
  1072  001384  D016               	goto	l1619
  1073                           
  1074                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1075  001386  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1076  00138A  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1077  00138E  2ADE               	incf	postinc2,f,c
  1078  001390  0E00               	movlw	0
  1079  001392  22DD               	addwfc	postdec2,f,c
  1080                           
  1081                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1082  001394  0E00               	movlw	0
  1083  001396  6E06               	movwf	fputc@c+1,c
  1084  001398  0E25               	movlw	37
  1085  00139A  6E05               	movwf	fputc@c,c
  1086  00139C  C044  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1087  0013A0  C045  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1088  0013A4  EC53  F00C         	call	_fputc	;wreg free
  1089  0013A8                     l1615:
  1090                           
  1091                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1092  0013A8  0E00               	movlw	0
  1093  0013AA  6E45               	movwf	?_vfpfcnvrt+1,c
  1094  0013AC  0E01               	movlw	1
  1095  0013AE  6E44               	movwf	?_vfpfcnvrt,c
  1096  0013B0  0012               	return	
  1097  0013B2                     l1619:
  1098                           
  1099                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1100  0013B2  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1101  0013B6  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1102  0013BA  2ADE               	incf	postinc2,f,c
  1103  0013BC  0E00               	movlw	0
  1104  0013BE  22DD               	addwfc	postdec2,f,c
  1105                           
  1106                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  1107  0013C0  0E00               	movlw	0
  1108  0013C2  6E45               	movwf	?_vfpfcnvrt+1,c
  1109  0013C4  0E00               	movlw	0
  1110  0013C6  6E44               	movwf	?_vfpfcnvrt,c
  1111  0013C8  0012               	return	
  1112  0013CA                     l1625:
  1113                           
  1114                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  1115  0013CA  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1116  0013CE  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1117  0013D2  CFDE FFF6          	movff	postinc2,tblptrl
  1118  0013D6  CFDD FFF7          	movff	postdec2,tblptrh
  1119  0013DA                     	if	0	;tblptru may be non-zero
  1120  0013DA                     	endif
  1121  0013DA                     	if	0	;tblptru may be non-zero
  1122  0013DA                     	endif
  1123  0013DA  0008               	tblrd		*
  1124  0013DC  50F5               	movf	tablat,w,c
  1125  0013DE  6E05               	movwf	fputc@c,c
  1126  0013E0  6A06               	clrf	fputc@c+1,c
  1127  0013E2  C044  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1128  0013E6  C045  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1129  0013EA  EC53  F00C         	call	_fputc	;wreg free
  1130                           
  1131                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  1132  0013EE  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1133  0013F2  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1134  0013F6  2ADE               	incf	postinc2,f,c
  1135  0013F8  0E00               	movlw	0
  1136  0013FA  22DD               	addwfc	postdec2,f,c
  1137  0013FC  D7D5               	goto	l1615
  1138  0013FE                     __end_of_vfpfcnvrt:
  1139                           	opt callstack 0
  1140                           
  1141 ;; *************** function _dtoa *****************
  1142 ;; Defined at:
  1143 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1144 ;; Parameters:    Size  Location     Type
  1145 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  1146 ;;		 -> NULL(0), 
  1147 ;;  d               8   33[COMRAM] long long 
  1148 ;; Auto vars:     Size  Location     Type
  1149 ;;  n               8   57[COMRAM] long long 
  1150 ;;  i               2   65[COMRAM] int 
  1151 ;;  s               2   55[COMRAM] int 
  1152 ;;  w               2   53[COMRAM] int 
  1153 ;;  p               2   51[COMRAM] int 
  1154 ;; Return value:  Size  Location     Type
  1155 ;;                  2   31[COMRAM] int 
  1156 ;; Registers used:
  1157 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1158 ;; Tracked objects:
  1159 ;;		On entry : 0/0
  1160 ;;		On exit  : 0/0
  1161 ;;		Unchanged: 0/0
  1162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1163 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1164 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1165 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1166 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1167 ;;Total ram usage:       36 bytes
  1168 ;; Hardware stack levels used:    1
  1169 ;; Hardware stack levels required when called:    7
  1170 ;; This function calls:
  1171 ;;		___aodiv
  1172 ;;		___aomod
  1173 ;;		_abs
  1174 ;;		_pad
  1175 ;; This function is called by:
  1176 ;;		_vfpfcnvrt
  1177 ;; This function uses a non-reentrant model
  1178 ;;
  1179                           
  1180                           	psect	text4
  1181  00103C                     __ptext4:
  1182                           	opt callstack 0
  1183  00103C                     _dtoa:
  1184                           	opt callstack 20
  1185                           
  1186                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  1187                           
  1188                           ;incstack = 0
  1189  00103C  C022  F03A         	movff	dtoa@d,dtoa@n
  1190  001040  C023  F03B         	movff	dtoa@d+1,dtoa@n+1
  1191  001044  C024  F03C         	movff	dtoa@d+2,dtoa@n+2
  1192  001048  C025  F03D         	movff	dtoa@d+3,dtoa@n+3
  1193  00104C  C026  F03E         	movff	dtoa@d+4,dtoa@n+4
  1194  001050  C027  F03F         	movff	dtoa@d+5,dtoa@n+5
  1195  001054  C028  F040         	movff	dtoa@d+6,dtoa@n+6
  1196  001058  C029  F041         	movff	dtoa@d+7,dtoa@n+7
  1197                           
  1198                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  1199  00105C  AE41               	btfss	dtoa@n+7,7,c
  1200  00105E  D002               	goto	u840
  1201  001060  0E01               	movlw	1
  1202  001062  D001               	goto	u850
  1203  001064                     u840:
  1204  001064  0E00               	movlw	0
  1205  001066                     u850:
  1206  001066  6E38               	movwf	dtoa@s,c
  1207  001068  6A39               	clrf	dtoa@s+1,c
  1208                           
  1209                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  1210  00106A  5038               	movf	dtoa@s,w,c
  1211  00106C  1039               	iorwf	dtoa@s+1,w,c
  1212  00106E  B4D8               	btfsc	status,2,c
  1213  001070  D010               	goto	l1535
  1214                           
  1215                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  1216  001072  1E41               	comf	dtoa@n+7,f,c
  1217  001074  1E40               	comf	dtoa@n+6,f,c
  1218  001076  1E3F               	comf	dtoa@n+5,f,c
  1219  001078  1E3E               	comf	dtoa@n+4,f,c
  1220  00107A  1E3D               	comf	dtoa@n+3,f,c
  1221  00107C  1E3C               	comf	dtoa@n+2,f,c
  1222  00107E  1E3B               	comf	dtoa@n+1,f,c
  1223  001080  6C3A               	negf	dtoa@n,c
  1224  001082  0E00               	movlw	0
  1225  001084  223B               	addwfc	dtoa@n+1,f,c
  1226  001086  223C               	addwfc	dtoa@n+2,f,c
  1227  001088  223D               	addwfc	dtoa@n+3,f,c
  1228  00108A  223E               	addwfc	dtoa@n+4,f,c
  1229  00108C  223F               	addwfc	dtoa@n+5,f,c
  1230  00108E  2240               	addwfc	dtoa@n+6,f,c
  1231  001090  2241               	addwfc	dtoa@n+7,f,c
  1232  001092                     l1535:
  1233                           
  1234                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  1235  001092  AE76               	btfss	_prec+1,7,c
  1236                           
  1237                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  1238  001094  9277               	bcf	_flags,1,c
  1239                           
  1240                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  1241  001096  BE76               	btfsc	_prec+1,7,c
  1242  001098  D005               	goto	u880
  1243  00109A  5076               	movf	_prec+1,w,c
  1244  00109C  E108               	bnz	l173
  1245  00109E  0475               	decf	_prec,w,c
  1246  0010A0  B0D8               	btfsc	status,0,c
  1247  0010A2  D005               	goto	l173
  1248  0010A4                     u880:
  1249  0010A4  0E00               	movlw	0
  1250  0010A6  6E35               	movwf	dtoa@p+1,c
  1251  0010A8  0E01               	movlw	1
  1252  0010AA  6E34               	movwf	dtoa@p,c
  1253  0010AC  D004               	goto	l175
  1254  0010AE                     l173:
  1255  0010AE  C075  F034         	movff	_prec,dtoa@p
  1256  0010B2  C076  F035         	movff	_prec+1,dtoa@p+1
  1257  0010B6                     l175:
  1258                           
  1259                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  1260  0010B6  C073  F036         	movff	_width,dtoa@w
  1261  0010BA  C074  F037         	movff	_width+1,dtoa@w+1
  1262                           
  1263                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  1264  0010BE  5038               	movf	dtoa@s,w,c
  1265  0010C0  1039               	iorwf	dtoa@s+1,w,c
  1266  0010C2  A4D8               	btfss	status,2,c
  1267  0010C4  D002               	goto	u900
  1268  0010C6  A477               	btfss	_flags,2,c
  1269  0010C8  D003               	goto	l1549
  1270  0010CA                     u900:
  1271                           
  1272                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  1273  0010CA  0636               	decf	dtoa@w,f,c
  1274  0010CC  A0D8               	btfss	status,0,c
  1275  0010CE  0637               	decf	dtoa@w+1,f,c
  1276  0010D0                     l1549:
  1277                           
  1278                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  1279  0010D0  0E00               	movlw	0
  1280  0010D2  6E43               	movwf	dtoa@i+1,c
  1281  0010D4  0E1F               	movlw	31
  1282  0010D6  6E42               	movwf	dtoa@i,c
  1283                           
  1284                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  1285  0010D8  0E00               	movlw	0
  1286  0010DA  0100               	movlb	0	; () banked
  1287  0010DC  6F9F               	movwf	(_dbuf+31)& (0+255),b
  1288                           
  1289                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1290  0010DE  D07C               	goto	l1563
  1291  0010E0                     l1553:
  1292                           
  1293                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  1294  0010E0  0642               	decf	dtoa@i,f,c
  1295  0010E2  A0D8               	btfss	status,0,c
  1296  0010E4  0643               	decf	dtoa@i+1,f,c
  1297                           
  1298                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  1299  0010E6  0E80               	movlw	low _dbuf
  1300  0010E8  2442               	addwf	dtoa@i,w,c
  1301  0010EA  6ED9               	movwf	fsr2l,c
  1302  0010EC  0E00               	movlw	high _dbuf
  1303  0010EE  2043               	addwfc	dtoa@i+1,w,c
  1304  0010F0  6EDA               	movwf	fsr2h,c
  1305  0010F2  C03A  F001         	movff	dtoa@n,___aomod@dividend
  1306  0010F6  C03B  F002         	movff	dtoa@n+1,___aomod@dividend+1
  1307  0010FA  C03C  F003         	movff	dtoa@n+2,___aomod@dividend+2
  1308  0010FE  C03D  F004         	movff	dtoa@n+3,___aomod@dividend+3
  1309  001102  C03E  F005         	movff	dtoa@n+4,___aomod@dividend+4
  1310  001106  C03F  F006         	movff	dtoa@n+5,___aomod@dividend+5
  1311  00110A  C040  F007         	movff	dtoa@n+6,___aomod@dividend+6
  1312  00110E  C041  F008         	movff	dtoa@n+7,___aomod@dividend+7
  1313  001112  0E0A               	movlw	10
  1314  001114  6E09               	movwf	___aomod@divisor,c
  1315  001116  0E00               	movlw	0
  1316  001118  6E0A               	movwf	___aomod@divisor+1,c
  1317  00111A  0E00               	movlw	0
  1318  00111C  6E0B               	movwf	___aomod@divisor+2,c
  1319  00111E  0E00               	movlw	0
  1320  001120  6E0C               	movwf	___aomod@divisor+3,c
  1321  001122  0E00               	movlw	0
  1322  001124  6E0D               	movwf	___aomod@divisor+4,c
  1323  001126  0E00               	movlw	0
  1324  001128  6E0E               	movwf	___aomod@divisor+5,c
  1325  00112A  0E00               	movlw	0
  1326  00112C  6E0F               	movwf	___aomod@divisor+6,c
  1327  00112E  0E00               	movlw	0
  1328  001130  6E10               	movwf	___aomod@divisor+7,c
  1329  001132  EC35  F00B         	call	___aomod	;wreg free
  1330  001136  C001  F02A         	movff	?___aomod,??_dtoa
  1331  00113A  C002  F02B         	movff	?___aomod+1,??_dtoa+1
  1332  00113E  C003  F02C         	movff	?___aomod+2,??_dtoa+2
  1333  001142  C004  F02D         	movff	?___aomod+3,??_dtoa+3
  1334  001146  C005  F02E         	movff	?___aomod+4,??_dtoa+4
  1335  00114A  C006  F02F         	movff	?___aomod+5,??_dtoa+5
  1336  00114E  C007  F030         	movff	?___aomod+6,??_dtoa+6
  1337  001152  C008  F031         	movff	?___aomod+7,??_dtoa+7
  1338  001156  C02A  F013         	movff	??_dtoa,abs@a
  1339  00115A  C02C  F014         	movff	??_dtoa+2,abs@a+1
  1340  00115E  EC31  F00D         	call	_abs	;wreg free
  1341  001162  5013               	movf	?_abs,w,c
  1342  001164  0F30               	addlw	48
  1343  001166  6EDF               	movwf	indf2,c
  1344                           
  1345                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  1346  001168  0634               	decf	dtoa@p,f,c
  1347  00116A  A0D8               	btfss	status,0,c
  1348  00116C  0635               	decf	dtoa@p+1,f,c
  1349                           
  1350                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  1351  00116E  0636               	decf	dtoa@w,f,c
  1352  001170  A0D8               	btfss	status,0,c
  1353  001172  0637               	decf	dtoa@w+1,f,c
  1354                           
  1355                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  1356  001174  C03A  F001         	movff	dtoa@n,___aodiv@dividend
  1357  001178  C03B  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  1358  00117C  C03C  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  1359  001180  C03D  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  1360  001184  C03E  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  1361  001188  C03F  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  1362  00118C  C040  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  1363  001190  C041  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  1364  001194  0E0A               	movlw	10
  1365  001196  6E09               	movwf	___aodiv@divisor,c
  1366  001198  0E00               	movlw	0
  1367  00119A  6E0A               	movwf	___aodiv@divisor+1,c
  1368  00119C  0E00               	movlw	0
  1369  00119E  6E0B               	movwf	___aodiv@divisor+2,c
  1370  0011A0  0E00               	movlw	0
  1371  0011A2  6E0C               	movwf	___aodiv@divisor+3,c
  1372  0011A4  0E00               	movlw	0
  1373  0011A6  6E0D               	movwf	___aodiv@divisor+4,c
  1374  0011A8  0E00               	movlw	0
  1375  0011AA  6E0E               	movwf	___aodiv@divisor+5,c
  1376  0011AC  0E00               	movlw	0
  1377  0011AE  6E0F               	movwf	___aodiv@divisor+6,c
  1378  0011B0  0E00               	movlw	0
  1379  0011B2  6E10               	movwf	___aodiv@divisor+7,c
  1380  0011B4  ECFF  F009         	call	___aodiv	;wreg free
  1381  0011B8  C001  F03A         	movff	?___aodiv,dtoa@n
  1382  0011BC  C002  F03B         	movff	?___aodiv+1,dtoa@n+1
  1383  0011C0  C003  F03C         	movff	?___aodiv+2,dtoa@n+2
  1384  0011C4  C004  F03D         	movff	?___aodiv+3,dtoa@n+3
  1385  0011C8  C005  F03E         	movff	?___aodiv+4,dtoa@n+4
  1386  0011CC  C006  F03F         	movff	?___aodiv+5,dtoa@n+5
  1387  0011D0  C007  F040         	movff	?___aodiv+6,dtoa@n+6
  1388  0011D4  C008  F041         	movff	?___aodiv+7,dtoa@n+7
  1389  0011D8                     l1563:
  1390                           
  1391                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1392  0011D8  BE43               	btfsc	dtoa@i+1,7,c
  1393  0011DA  D01F               	goto	u950
  1394  0011DC  5043               	movf	dtoa@i+1,w,c
  1395  0011DE  E103               	bnz	u910
  1396  0011E0  0442               	decf	dtoa@i,w,c
  1397  0011E2  A0D8               	btfss	status,0,c
  1398  0011E4  D01A               	goto	u950
  1399  0011E6                     u910:
  1400  0011E6  503A               	movf	dtoa@n,w,c
  1401  0011E8  103B               	iorwf	dtoa@n+1,w,c
  1402  0011EA  103C               	iorwf	dtoa@n+2,w,c
  1403  0011EC  103D               	iorwf	dtoa@n+3,w,c
  1404  0011EE  103E               	iorwf	dtoa@n+4,w,c
  1405  0011F0  103F               	iorwf	dtoa@n+5,w,c
  1406  0011F2  1040               	iorwf	dtoa@n+6,w,c
  1407  0011F4  1041               	iorwf	dtoa@n+7,w,c
  1408  0011F6  A4D8               	btfss	status,2,c
  1409  0011F8  D773               	goto	l1553
  1410  0011FA  BE35               	btfsc	dtoa@p+1,7,c
  1411  0011FC  D005               	goto	u930
  1412  0011FE  5035               	movf	dtoa@p+1,w,c
  1413  001200  E102               	bnz	u931
  1414  001202  0434               	decf	dtoa@p,w,c
  1415  001204  B0D8               	btfsc	status,0,c
  1416  001206                     u931:
  1417  001206  D76C               	goto	l1553
  1418  001208                     u930:
  1419  001208  BE37               	btfsc	dtoa@w+1,7,c
  1420  00120A  D007               	goto	u950
  1421  00120C  5037               	movf	dtoa@w+1,w,c
  1422  00120E  E103               	bnz	u940
  1423  001210  0436               	decf	dtoa@w,w,c
  1424  001212  A0D8               	btfss	status,0,c
  1425  001214  D002               	goto	u950
  1426  001216                     u940:
  1427  001216  B277               	btfsc	_flags,1,c
  1428  001218  D763               	goto	l1553
  1429  00121A                     u950:
  1430                           
  1431                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  1432  00121A  5038               	movf	dtoa@s,w,c
  1433  00121C  1039               	iorwf	dtoa@s+1,w,c
  1434  00121E  A4D8               	btfss	status,2,c
  1435  001220  D002               	goto	u970
  1436  001222  A477               	btfss	_flags,2,c
  1437  001224  D017               	goto	l1587
  1438  001226                     u970:
  1439                           
  1440                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  1441  001226  0642               	decf	dtoa@i,f,c
  1442  001228  A0D8               	btfss	status,0,c
  1443  00122A  0643               	decf	dtoa@i+1,f,c
  1444                           
  1445                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  1446  00122C  5038               	movf	dtoa@s,w,c
  1447  00122E  1039               	iorwf	dtoa@s+1,w,c
  1448  001230  A4D8               	btfss	status,2,c
  1449  001232  D004               	goto	l1583
  1450  001234  0E00               	movlw	0
  1451  001236  6E33               	movwf	_dtoa$408+1,c
  1452  001238  0E2B               	movlw	43
  1453  00123A  D003               	goto	L1
  1454  00123C                     l1583:
  1455  00123C  0E00               	movlw	0
  1456  00123E  6E33               	movwf	_dtoa$408+1,c
  1457  001240  0E2D               	movlw	45
  1458  001242                     L1:
  1459  001242  6E32               	movwf	_dtoa$408,c
  1460  001244  0E80               	movlw	low _dbuf
  1461  001246  2442               	addwf	dtoa@i,w,c
  1462  001248  6ED9               	movwf	fsr2l,c
  1463  00124A  0E00               	movlw	high _dbuf
  1464  00124C  2043               	addwfc	dtoa@i+1,w,c
  1465  00124E  6EDA               	movwf	fsr2h,c
  1466  001250  C032  FFDF         	movff	_dtoa$408,indf2
  1467  001254                     l1587:
  1468                           
  1469                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  1470  001254  C020  F015         	movff	dtoa@fp,pad@fp
  1471  001258  C021  F016         	movff	dtoa@fp+1,pad@fp+1
  1472  00125C  0E80               	movlw	low _dbuf
  1473  00125E  2442               	addwf	dtoa@i,w,c
  1474  001260  6E17               	movwf	pad@buf,c
  1475  001262  0E00               	movlw	high _dbuf
  1476  001264  2043               	addwfc	dtoa@i+1,w,c
  1477  001266  6E18               	movwf	pad@buf+1,c
  1478  001268  C036  F019         	movff	dtoa@w,pad@p
  1479  00126C  C037  F01A         	movff	dtoa@w+1,pad@p+1
  1480  001270  ECC7  F00B         	call	_pad	;wreg free
  1481  001274  C015  F020         	movff	?_pad,?_dtoa
  1482  001278  C016  F021         	movff	?_pad+1,?_dtoa+1
  1483  00127C  0012               	return		;funcret
  1484  00127E                     __end_of_dtoa:
  1485                           	opt callstack 0
  1486                           
  1487 ;; *************** function _pad *****************
  1488 ;; Defined at:
  1489 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1490 ;; Parameters:    Size  Location     Type
  1491 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  1492 ;;		 -> NULL(0), 
  1493 ;;  buf             2   22[COMRAM] PTR unsigned char 
  1494 ;;		 -> dbuf(32), 
  1495 ;;  p               2   24[COMRAM] int 
  1496 ;; Auto vars:     Size  Location     Type
  1497 ;;  w               2   29[COMRAM] int 
  1498 ;;  i               2   27[COMRAM] int 
  1499 ;; Return value:  Size  Location     Type
  1500 ;;                  2   20[COMRAM] int 
  1501 ;; Registers used:
  1502 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1503 ;; Tracked objects:
  1504 ;;		On entry : 0/0
  1505 ;;		On exit  : 0/0
  1506 ;;		Unchanged: 0/0
  1507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1508 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1509 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1510 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1511 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1512 ;;Total ram usage:       11 bytes
  1513 ;; Hardware stack levels used:    1
  1514 ;; Hardware stack levels required when called:    6
  1515 ;; This function calls:
  1516 ;;		_fputc
  1517 ;;		_fputs
  1518 ;;		_strlen
  1519 ;; This function is called by:
  1520 ;;		_dtoa
  1521 ;; This function uses a non-reentrant model
  1522 ;;
  1523                           
  1524                           	psect	text5
  1525  00178E                     __ptext5:
  1526                           	opt callstack 0
  1527  00178E                     _pad:
  1528                           	opt callstack 20
  1529                           
  1530                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  1531                           
  1532                           ;incstack = 0
  1533  00178E  A077               	btfss	_flags,0,c
  1534  001790  D00A               	goto	l1427
  1535                           
  1536                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  1537  001792  C017  F00E         	movff	pad@buf,fputs@s
  1538  001796  C018  F00F         	movff	pad@buf+1,fputs@s+1
  1539  00179A  C015  F010         	movff	pad@fp,fputs@fp
  1540  00179E  C016  F011         	movff	pad@fp+1,fputs@fp+1
  1541  0017A2  EC15  F00D         	call	_fputs	;wreg free
  1542  0017A6                     l1427:
  1543                           
  1544                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  1545  0017A6  BE1A               	btfsc	pad@p+1,7,c
  1546  0017A8  D005               	goto	l1431
  1547  0017AA  C019  F01E         	movff	pad@p,pad@w
  1548  0017AE  C01A  F01F         	movff	pad@p+1,pad@w+1
  1549  0017B2  D004               	goto	l162
  1550  0017B4                     l1431:
  1551  0017B4  0E00               	movlw	0
  1552  0017B6  6E1F               	movwf	pad@w+1,c
  1553  0017B8  0E00               	movlw	0
  1554  0017BA  6E1E               	movwf	pad@w,c
  1555  0017BC                     l162:
  1556                           
  1557                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  1558  0017BC  0E00               	movlw	0
  1559  0017BE  6E1D               	movwf	pad@i+1,c
  1560  0017C0  0E00               	movlw	0
  1561  0017C2  6E1C               	movwf	pad@i,c
  1562                           
  1563                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  1564  0017C4  D00C               	goto	l1437
  1565  0017C6                     l1433:
  1566                           
  1567                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  1568  0017C6  0E00               	movlw	0
  1569  0017C8  6E06               	movwf	fputc@c+1,c
  1570  0017CA  0E20               	movlw	32
  1571  0017CC  6E05               	movwf	fputc@c,c
  1572  0017CE  C015  F007         	movff	pad@fp,fputc@fp
  1573  0017D2  C016  F008         	movff	pad@fp+1,fputc@fp+1
  1574  0017D6  EC53  F00C         	call	_fputc	;wreg free
  1575                           
  1576                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  1577  0017DA  4A1C               	infsnz	pad@i,f,c
  1578  0017DC  2A1D               	incf	pad@i+1,f,c
  1579  0017DE                     l1437:
  1580                           
  1581                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  1582  0017DE  501E               	movf	pad@w,w,c
  1583  0017E0  5C1C               	subwf	pad@i,w,c
  1584  0017E2  501D               	movf	pad@i+1,w,c
  1585  0017E4  0A80               	xorlw	128
  1586  0017E6  6E1B               	movwf	??_pad& (0+255),c
  1587  0017E8  501F               	movf	pad@w+1,w,c
  1588  0017EA  0A80               	xorlw	128
  1589  0017EC  581B               	subwfb	??_pad& (0+255),w,c
  1590  0017EE  A0D8               	btfss	status,0,c
  1591  0017F0  D7EA               	goto	l1433
  1592                           
  1593                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  1594  0017F2  B077               	btfsc	_flags,0,c
  1595  0017F4  D00A               	goto	l1441
  1596                           
  1597                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  1598  0017F6  C017  F00E         	movff	pad@buf,fputs@s
  1599  0017FA  C018  F00F         	movff	pad@buf+1,fputs@s+1
  1600  0017FE  C015  F010         	movff	pad@fp,fputs@fp
  1601  001802  C016  F011         	movff	pad@fp+1,fputs@fp+1
  1602  001806  EC15  F00D         	call	_fputs	;wreg free
  1603  00180A                     l1441:
  1604                           
  1605                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  1606  00180A  C017  F001         	movff	pad@buf,strlen@s
  1607  00180E  C018  F002         	movff	pad@buf+1,strlen@s+1
  1608  001812  EC4A  F00D         	call	_strlen	;wreg free
  1609  001816  501E               	movf	pad@w,w,c
  1610  001818  2401               	addwf	?_strlen,w,c
  1611  00181A  6E15               	movwf	?_pad,c
  1612  00181C  501F               	movf	pad@w+1,w,c
  1613  00181E  2002               	addwfc	?_strlen+1,w,c
  1614  001820  6E16               	movwf	?_pad+1,c
  1615  001822  0012               	return		;funcret
  1616  001824                     __end_of_pad:
  1617                           	opt callstack 0
  1618                           
  1619 ;; *************** function _strlen *****************
  1620 ;; Defined at:
  1621 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;  s               2    0[COMRAM] PTR const unsigned char 
  1624 ;;		 -> dbuf(32), 
  1625 ;; Auto vars:     Size  Location     Type
  1626 ;;  a               2    2[COMRAM] PTR const unsigned char 
  1627 ;;		 -> dbuf(32), 
  1628 ;; Return value:  Size  Location     Type
  1629 ;;                  2    0[COMRAM] unsigned int 
  1630 ;; Registers used:
  1631 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1632 ;; Tracked objects:
  1633 ;;		On entry : 0/0
  1634 ;;		On exit  : 0/0
  1635 ;;		Unchanged: 0/0
  1636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1637 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1638 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1640 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1641 ;;Total ram usage:        4 bytes
  1642 ;; Hardware stack levels used:    1
  1643 ;; This function calls:
  1644 ;;		Nothing
  1645 ;; This function is called by:
  1646 ;;		_pad
  1647 ;; This function uses a non-reentrant model
  1648 ;;
  1649                           
  1650                           	psect	text6
  1651  001A94                     __ptext6:
  1652                           	opt callstack 0
  1653  001A94                     _strlen:
  1654                           	opt callstack 25
  1655                           
  1656                           ;incstack = 0
  1657  001A94  C001  F003         	movff	strlen@s,strlen@a
  1658  001A98  C002  F004         	movff	strlen@s+1,strlen@a+1
  1659  001A9C  D002               	goto	l1417
  1660  001A9E                     l1415:
  1661  001A9E  4A01               	infsnz	strlen@s,f,c
  1662  001AA0  2A02               	incf	strlen@s+1,f,c
  1663  001AA2                     l1417:
  1664  001AA2  C001  FFD9         	movff	strlen@s,fsr2l
  1665  001AA6  C002  FFDA         	movff	strlen@s+1,fsr2h
  1666  001AAA  50DF               	movf	indf2,w,c
  1667  001AAC  A4D8               	btfss	status,2,c
  1668  001AAE  D7F7               	goto	l1415
  1669  001AB0  5003               	movf	strlen@a,w,c
  1670  001AB2  5C01               	subwf	strlen@s,w,c
  1671  001AB4  6E01               	movwf	?_strlen,c
  1672  001AB6  5004               	movf	strlen@a+1,w,c
  1673  001AB8  5802               	subwfb	strlen@s+1,w,c
  1674  001ABA  6E02               	movwf	?_strlen+1,c
  1675  001ABC  0012               	return		;funcret
  1676  001ABE                     __end_of_strlen:
  1677                           	opt callstack 0
  1678                           
  1679 ;; *************** function _fputs *****************
  1680 ;; Defined at:
  1681 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  1682 ;; Parameters:    Size  Location     Type
  1683 ;;  s               2   13[COMRAM] PTR const unsigned char 
  1684 ;;		 -> dbuf(32), 
  1685 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  1686 ;;		 -> NULL(0), 
  1687 ;; Auto vars:     Size  Location     Type
  1688 ;;  i               2   18[COMRAM] int 
  1689 ;;  c               1   17[COMRAM] unsigned char 
  1690 ;; Return value:  Size  Location     Type
  1691 ;;                  2   13[COMRAM] int 
  1692 ;; Registers used:
  1693 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1694 ;; Tracked objects:
  1695 ;;		On entry : 0/0
  1696 ;;		On exit  : 0/0
  1697 ;;		Unchanged: 0/0
  1698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1699 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1700 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1702 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1703 ;;Total ram usage:        7 bytes
  1704 ;; Hardware stack levels used:    1
  1705 ;; Hardware stack levels required when called:    5
  1706 ;; This function calls:
  1707 ;;		_fputc
  1708 ;; This function is called by:
  1709 ;;		_pad
  1710 ;; This function uses a non-reentrant model
  1711 ;;
  1712                           
  1713                           	psect	text7
  1714  001A2A                     __ptext7:
  1715                           	opt callstack 0
  1716  001A2A                     _fputs:
  1717                           	opt callstack 20
  1718                           
  1719                           ;incstack = 0
  1720  001A2A  0E00               	movlw	0
  1721  001A2C  6E14               	movwf	fputs@i+1,c
  1722  001A2E  0E00               	movlw	0
  1723  001A30  6E13               	movwf	fputs@i,c
  1724  001A32  D00B               	goto	l1411
  1725  001A34                     l1407:
  1726  001A34  C012  F005         	movff	fputs@c,fputc@c
  1727  001A38  6A06               	clrf	fputc@c+1,c
  1728  001A3A  C010  F007         	movff	fputs@fp,fputc@fp
  1729  001A3E  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  1730  001A42  EC53  F00C         	call	_fputc	;wreg free
  1731  001A46  4A13               	infsnz	fputs@i,f,c
  1732  001A48  2A14               	incf	fputs@i+1,f,c
  1733  001A4A                     l1411:
  1734  001A4A  5013               	movf	fputs@i,w,c
  1735  001A4C  240E               	addwf	fputs@s,w,c
  1736  001A4E  6ED9               	movwf	fsr2l,c
  1737  001A50  5014               	movf	fputs@i+1,w,c
  1738  001A52  200F               	addwfc	fputs@s+1,w,c
  1739  001A54  6EDA               	movwf	fsr2h,c
  1740  001A56  50DF               	movf	indf2,w,c
  1741  001A58  6E12               	movwf	fputs@c,c
  1742  001A5A  5012               	movf	fputs@c,w,c
  1743  001A5C  B4D8               	btfsc	status,2,c
  1744  001A5E  0012               	return	
  1745  001A60  D7E9               	goto	l1407
  1746  001A62                     __end_of_fputs:
  1747                           	opt callstack 0
  1748                           
  1749 ;; *************** function _fputc *****************
  1750 ;; Defined at:
  1751 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  1752 ;; Parameters:    Size  Location     Type
  1753 ;;  c               2    4[COMRAM] int 
  1754 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  1755 ;;		 -> NULL(0), 
  1756 ;; Auto vars:     Size  Location     Type
  1757 ;;		None
  1758 ;; Return value:  Size  Location     Type
  1759 ;;                  2    4[COMRAM] int 
  1760 ;; Registers used:
  1761 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1762 ;; Tracked objects:
  1763 ;;		On entry : 0/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1767 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1769 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1770 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1771 ;;Total ram usage:        9 bytes
  1772 ;; Hardware stack levels used:    1
  1773 ;; Hardware stack levels required when called:    4
  1774 ;; This function calls:
  1775 ;;		_putch
  1776 ;; This function is called by:
  1777 ;;		_pad
  1778 ;;		_vfpfcnvrt
  1779 ;;		_fputs
  1780 ;; This function uses a non-reentrant model
  1781 ;;
  1782                           
  1783                           	psect	text8
  1784  0018A6                     __ptext8:
  1785                           	opt callstack 0
  1786  0018A6                     _fputc:
  1787                           	opt callstack 23
  1788                           
  1789                           ;incstack = 0
  1790  0018A6  5007               	movf	fputc@fp,w,c
  1791  0018A8  1008               	iorwf	fputc@fp+1,w,c
  1792  0018AA  B4D8               	btfsc	status,2,c
  1793  0018AC  D004               	goto	u610
  1794  0018AE  5007               	movf	fputc@fp,w,c
  1795  0018B0  1008               	iorwf	fputc@fp+1,w,c
  1796  0018B2  A4D8               	btfss	status,2,c
  1797  0018B4  D004               	goto	l1397
  1798  0018B6                     u610:
  1799  0018B6  5005               	movf	fputc@c,w,c
  1800  0018B8  ECC9  F00D         	call	_putch
  1801  0018BC  0012               	return	
  1802  0018BE                     l1397:
  1803  0018BE  EE20 F004          	lfsr	2,4
  1804  0018C2  5007               	movf	fputc@fp,w,c
  1805  0018C4  26D9               	addwf	fsr2l,f,c
  1806  0018C6  5008               	movf	fputc@fp+1,w,c
  1807  0018C8  22DA               	addwfc	fsr2h,f,c
  1808  0018CA  50DE               	movf	postinc2,w,c
  1809  0018CC  10DE               	iorwf	postinc2,w,c
  1810  0018CE  B4D8               	btfsc	status,2,c
  1811  0018D0  D016               	goto	u630
  1812  0018D2  EE20 F004          	lfsr	2,4
  1813  0018D6  5007               	movf	fputc@fp,w,c
  1814  0018D8  26D9               	addwf	fsr2l,f,c
  1815  0018DA  5008               	movf	fputc@fp+1,w,c
  1816  0018DC  22DA               	addwfc	fsr2h,f,c
  1817  0018DE  EE10 F002          	lfsr	1,2
  1818  0018E2  5007               	movf	fputc@fp,w,c
  1819  0018E4  26E1               	addwf	fsr1l,f,c
  1820  0018E6  5008               	movf	fputc@fp+1,w,c
  1821  0018E8  22E2               	addwfc	fsr1h,f,c
  1822  0018EA  50DE               	movf	postinc2,w,c
  1823  0018EC  5CE6               	subwf	postinc1,w,c
  1824  0018EE  50E6               	movf	postinc1,w,c
  1825  0018F0  0A80               	xorlw	128
  1826  0018F2  6E0D               	movwf	(??_fputc+4)& (0+255),c
  1827  0018F4  50DE               	movf	postinc2,w,c
  1828  0018F6  0A80               	xorlw	128
  1829  0018F8  580D               	subwfb	(??_fputc+4)& (0+255),w,c
  1830  0018FA  B0D8               	btfsc	status,0,c
  1831  0018FC  0012               	return	
  1832  0018FE                     u630:
  1833  0018FE  EE20 F002          	lfsr	2,2
  1834  001902  5007               	movf	fputc@fp,w,c
  1835  001904  26D9               	addwf	fsr2l,f,c
  1836  001906  5008               	movf	fputc@fp+1,w,c
  1837  001908  22DA               	addwfc	fsr2h,f,c
  1838  00190A  2ADE               	incf	postinc2,f,c
  1839  00190C  0E00               	movlw	0
  1840  00190E  22DD               	addwfc	postdec2,f,c
  1841  001910  0012               	return		;funcret
  1842  001912                     __end_of_fputc:
  1843                           	opt callstack 0
  1844                           
  1845 ;; *************** function _putch *****************
  1846 ;; Defined at:
  1847 ;;		line 102 in file "lcd.c"
  1848 ;; Parameters:    Size  Location     Type
  1849 ;;  data            1    wreg     unsigned char 
  1850 ;; Auto vars:     Size  Location     Type
  1851 ;;  data            1    3[COMRAM] unsigned char 
  1852 ;; Return value:  Size  Location     Type
  1853 ;;                  1    wreg      void 
  1854 ;; Registers used:
  1855 ;;		wreg, status,2, status,0, cstack
  1856 ;; Tracked objects:
  1857 ;;		On entry : 0/0
  1858 ;;		On exit  : 0/0
  1859 ;;		Unchanged: 0/0
  1860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1862 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1864 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1865 ;;Total ram usage:        1 bytes
  1866 ;; Hardware stack levels used:    1
  1867 ;; Hardware stack levels required when called:    3
  1868 ;; This function calls:
  1869 ;;		_send_byte
  1870 ;; This function is called by:
  1871 ;;		_fputc
  1872 ;; This function uses a non-reentrant model
  1873 ;;
  1874                           
  1875                           	psect	text9
  1876  001B92                     __ptext9:
  1877                           	opt callstack 0
  1878  001B92                     _putch:
  1879                           	opt callstack 23
  1880                           
  1881                           ;incstack = 0
  1882                           ;putch@data stored from wreg
  1883  001B92  6E04               	movwf	putch@data,c
  1884                           
  1885                           ;lcd.c: 103:     LATDbits.LATD2 = 1;
  1886  001B94  848C               	bsf	3980,2,c	;volatile
  1887                           
  1888                           ;lcd.c: 104:     send_byte((unsigned char)data);
  1889  001B96  5004               	movf	putch@data,w,c
  1890  001B98  ECB7  F00D         	call	_send_byte
  1891  001B9C  0012               	return		;funcret
  1892  001B9E                     __end_of_putch:
  1893                           	opt callstack 0
  1894                           
  1895 ;; *************** function _abs *****************
  1896 ;; Defined at:
  1897 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  1898 ;; Parameters:    Size  Location     Type
  1899 ;;  a               2   18[COMRAM] int 
  1900 ;; Auto vars:     Size  Location     Type
  1901 ;;		None
  1902 ;; Return value:  Size  Location     Type
  1903 ;;                  2   18[COMRAM] int 
  1904 ;; Registers used:
  1905 ;;		wreg, status,2, status,0
  1906 ;; Tracked objects:
  1907 ;;		On entry : 0/0
  1908 ;;		On exit  : 0/0
  1909 ;;		Unchanged: 0/0
  1910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1911 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1913 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1914 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1915 ;;Total ram usage:        4 bytes
  1916 ;; Hardware stack levels used:    1
  1917 ;; This function calls:
  1918 ;;		Nothing
  1919 ;; This function is called by:
  1920 ;;		_dtoa
  1921 ;; This function uses a non-reentrant model
  1922 ;;
  1923                           
  1924                           	psect	text10
  1925  001A62                     __ptext10:
  1926                           	opt callstack 0
  1927  001A62                     _abs:
  1928                           	opt callstack 26
  1929                           
  1930                           ;incstack = 0
  1931  001A62  BE14               	btfsc	abs@a+1,7,c
  1932  001A64  D005               	goto	u700
  1933  001A66  5014               	movf	abs@a+1,w,c
  1934  001A68  E110               	bnz	l885
  1935  001A6A  0413               	decf	abs@a,w,c
  1936  001A6C  B0D8               	btfsc	status,0,c
  1937  001A6E  D00D               	goto	l885
  1938  001A70                     u700:
  1939  001A70  C013  F015         	movff	abs@a,??_abs
  1940  001A74  C014  F016         	movff	abs@a+1,??_abs+1
  1941  001A78  1E15               	comf	??_abs,f,c
  1942  001A7A  1E16               	comf	??_abs+1,f,c
  1943  001A7C  4A15               	infsnz	??_abs,f,c
  1944  001A7E  2A16               	incf	??_abs+1,f,c
  1945  001A80  C015  F013         	movff	??_abs,?_abs
  1946  001A84  C016  F014         	movff	??_abs+1,?_abs+1
  1947  001A88  0012               	return	
  1948  001A8A                     l885:
  1949  001A8A  C013  F013         	movff	abs@a,?_abs
  1950  001A8E  C014  F014         	movff	abs@a+1,?_abs+1
  1951  001A92  0012               	return		;funcret
  1952  001A94                     __end_of_abs:
  1953                           	opt callstack 0
  1954                           
  1955 ;; *************** function ___aomod *****************
  1956 ;; Defined at:
  1957 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  1958 ;; Parameters:    Size  Location     Type
  1959 ;;  dividend        8    0[COMRAM] long long 
  1960 ;;  divisor         8    8[COMRAM] long long 
  1961 ;; Auto vars:     Size  Location     Type
  1962 ;;  sign            1   17[COMRAM] unsigned char 
  1963 ;;  counter         1   16[COMRAM] unsigned char 
  1964 ;; Return value:  Size  Location     Type
  1965 ;;                  8    0[COMRAM] long long 
  1966 ;; Registers used:
  1967 ;;		wreg, status,2, status,0
  1968 ;; Tracked objects:
  1969 ;;		On entry : 0/0
  1970 ;;		On exit  : 0/0
  1971 ;;		Unchanged: 0/0
  1972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1973 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1974 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1976 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1977 ;;Total ram usage:       18 bytes
  1978 ;; Hardware stack levels used:    1
  1979 ;; This function calls:
  1980 ;;		Nothing
  1981 ;; This function is called by:
  1982 ;;		_dtoa
  1983 ;; This function uses a non-reentrant model
  1984 ;;
  1985                           
  1986                           	psect	text11
  1987  00166A                     __ptext11:
  1988                           	opt callstack 0
  1989  00166A                     ___aomod:
  1990                           	opt callstack 26
  1991                           
  1992                           ;incstack = 0
  1993  00166A  0E00               	movlw	0
  1994  00166C  6E12               	movwf	___aomod@sign,c
  1995  00166E  AE08               	btfss	___aomod@dividend+7,7,c
  1996  001670  D012               	goto	l1501
  1997  001672  1E08               	comf	___aomod@dividend+7,f,c
  1998  001674  1E07               	comf	___aomod@dividend+6,f,c
  1999  001676  1E06               	comf	___aomod@dividend+5,f,c
  2000  001678  1E05               	comf	___aomod@dividend+4,f,c
  2001  00167A  1E04               	comf	___aomod@dividend+3,f,c
  2002  00167C  1E03               	comf	___aomod@dividend+2,f,c
  2003  00167E  1E02               	comf	___aomod@dividend+1,f,c
  2004  001680  6C01               	negf	___aomod@dividend,c
  2005  001682  0E00               	movlw	0
  2006  001684  2202               	addwfc	___aomod@dividend+1,f,c
  2007  001686  2203               	addwfc	___aomod@dividend+2,f,c
  2008  001688  2204               	addwfc	___aomod@dividend+3,f,c
  2009  00168A  2205               	addwfc	___aomod@dividend+4,f,c
  2010  00168C  2206               	addwfc	___aomod@dividend+5,f,c
  2011  00168E  2207               	addwfc	___aomod@dividend+6,f,c
  2012  001690  2208               	addwfc	___aomod@dividend+7,f,c
  2013  001692  0E01               	movlw	1
  2014  001694  6E12               	movwf	___aomod@sign,c
  2015  001696                     l1501:
  2016  001696  AE10               	btfss	___aomod@divisor+7,7,c
  2017  001698  D010               	goto	l1505
  2018  00169A  1E10               	comf	___aomod@divisor+7,f,c
  2019  00169C  1E0F               	comf	___aomod@divisor+6,f,c
  2020  00169E  1E0E               	comf	___aomod@divisor+5,f,c
  2021  0016A0  1E0D               	comf	___aomod@divisor+4,f,c
  2022  0016A2  1E0C               	comf	___aomod@divisor+3,f,c
  2023  0016A4  1E0B               	comf	___aomod@divisor+2,f,c
  2024  0016A6  1E0A               	comf	___aomod@divisor+1,f,c
  2025  0016A8  6C09               	negf	___aomod@divisor,c
  2026  0016AA  0E00               	movlw	0
  2027  0016AC  220A               	addwfc	___aomod@divisor+1,f,c
  2028  0016AE  220B               	addwfc	___aomod@divisor+2,f,c
  2029  0016B0  220C               	addwfc	___aomod@divisor+3,f,c
  2030  0016B2  220D               	addwfc	___aomod@divisor+4,f,c
  2031  0016B4  220E               	addwfc	___aomod@divisor+5,f,c
  2032  0016B6  220F               	addwfc	___aomod@divisor+6,f,c
  2033  0016B8  2210               	addwfc	___aomod@divisor+7,f,c
  2034  0016BA                     l1505:
  2035  0016BA  5009               	movf	___aomod@divisor,w,c
  2036  0016BC  100A               	iorwf	___aomod@divisor+1,w,c
  2037  0016BE  100B               	iorwf	___aomod@divisor+2,w,c
  2038  0016C0  100C               	iorwf	___aomod@divisor+3,w,c
  2039  0016C2  100D               	iorwf	___aomod@divisor+4,w,c
  2040  0016C4  100E               	iorwf	___aomod@divisor+5,w,c
  2041  0016C6  100F               	iorwf	___aomod@divisor+6,w,c
  2042  0016C8  1010               	iorwf	___aomod@divisor+7,w,c
  2043  0016CA  B4D8               	btfsc	status,2,c
  2044  0016CC  D03C               	goto	l1521
  2045  0016CE  0E01               	movlw	1
  2046  0016D0  6E11               	movwf	___aomod@counter,c
  2047  0016D2  D00A               	goto	l1511
  2048  0016D4                     l1509:
  2049  0016D4  90D8               	bcf	status,0,c
  2050  0016D6  3609               	rlcf	___aomod@divisor,f,c
  2051  0016D8  360A               	rlcf	___aomod@divisor+1,f,c
  2052  0016DA  360B               	rlcf	___aomod@divisor+2,f,c
  2053  0016DC  360C               	rlcf	___aomod@divisor+3,f,c
  2054  0016DE  360D               	rlcf	___aomod@divisor+4,f,c
  2055  0016E0  360E               	rlcf	___aomod@divisor+5,f,c
  2056  0016E2  360F               	rlcf	___aomod@divisor+6,f,c
  2057  0016E4  3610               	rlcf	___aomod@divisor+7,f,c
  2058  0016E6  2A11               	incf	___aomod@counter,f,c
  2059  0016E8                     l1511:
  2060  0016E8  AE10               	btfss	___aomod@divisor+7,7,c
  2061  0016EA  D7F4               	goto	l1509
  2062  0016EC                     u810:
  2063  0016EC  5009               	movf	___aomod@divisor,w,c
  2064  0016EE  5C01               	subwf	___aomod@dividend,w,c
  2065  0016F0  500A               	movf	___aomod@divisor+1,w,c
  2066  0016F2  5802               	subwfb	___aomod@dividend+1,w,c
  2067  0016F4  500B               	movf	___aomod@divisor+2,w,c
  2068  0016F6  5803               	subwfb	___aomod@dividend+2,w,c
  2069  0016F8  500C               	movf	___aomod@divisor+3,w,c
  2070  0016FA  5804               	subwfb	___aomod@dividend+3,w,c
  2071  0016FC  500D               	movf	___aomod@divisor+4,w,c
  2072  0016FE  5805               	subwfb	___aomod@dividend+4,w,c
  2073  001700  500E               	movf	___aomod@divisor+5,w,c
  2074  001702  5806               	subwfb	___aomod@dividend+5,w,c
  2075  001704  500F               	movf	___aomod@divisor+6,w,c
  2076  001706  5807               	subwfb	___aomod@dividend+6,w,c
  2077  001708  5010               	movf	___aomod@divisor+7,w,c
  2078  00170A  5808               	subwfb	___aomod@dividend+7,w,c
  2079  00170C  A0D8               	btfss	status,0,c
  2080  00170E  D010               	goto	l1517
  2081  001710  5009               	movf	___aomod@divisor,w,c
  2082  001712  5E01               	subwf	___aomod@dividend,f,c
  2083  001714  500A               	movf	___aomod@divisor+1,w,c
  2084  001716  5A02               	subwfb	___aomod@dividend+1,f,c
  2085  001718  500B               	movf	___aomod@divisor+2,w,c
  2086  00171A  5A03               	subwfb	___aomod@dividend+2,f,c
  2087  00171C  500C               	movf	___aomod@divisor+3,w,c
  2088  00171E  5A04               	subwfb	___aomod@dividend+3,f,c
  2089  001720  500D               	movf	___aomod@divisor+4,w,c
  2090  001722  5A05               	subwfb	___aomod@dividend+4,f,c
  2091  001724  500E               	movf	___aomod@divisor+5,w,c
  2092  001726  5A06               	subwfb	___aomod@dividend+5,f,c
  2093  001728  500F               	movf	___aomod@divisor+6,w,c
  2094  00172A  5A07               	subwfb	___aomod@dividend+6,f,c
  2095  00172C  5010               	movf	___aomod@divisor+7,w,c
  2096  00172E  5A08               	subwfb	___aomod@dividend+7,f,c
  2097  001730                     l1517:
  2098  001730  90D8               	bcf	status,0,c
  2099  001732  3210               	rrcf	___aomod@divisor+7,f,c
  2100  001734  320F               	rrcf	___aomod@divisor+6,f,c
  2101  001736  320E               	rrcf	___aomod@divisor+5,f,c
  2102  001738  320D               	rrcf	___aomod@divisor+4,f,c
  2103  00173A  320C               	rrcf	___aomod@divisor+3,f,c
  2104  00173C  320B               	rrcf	___aomod@divisor+2,f,c
  2105  00173E  320A               	rrcf	___aomod@divisor+1,f,c
  2106  001740  3209               	rrcf	___aomod@divisor,f,c
  2107  001742  2E11               	decfsz	___aomod@counter,f,c
  2108  001744  D7D3               	goto	u810
  2109  001746                     l1521:
  2110  001746  5012               	movf	___aomod@sign,w,c
  2111  001748  B4D8               	btfsc	status,2,c
  2112  00174A  D010               	goto	l1525
  2113  00174C  1E08               	comf	___aomod@dividend+7,f,c
  2114  00174E  1E07               	comf	___aomod@dividend+6,f,c
  2115  001750  1E06               	comf	___aomod@dividend+5,f,c
  2116  001752  1E05               	comf	___aomod@dividend+4,f,c
  2117  001754  1E04               	comf	___aomod@dividend+3,f,c
  2118  001756  1E03               	comf	___aomod@dividend+2,f,c
  2119  001758  1E02               	comf	___aomod@dividend+1,f,c
  2120  00175A  6C01               	negf	___aomod@dividend,c
  2121  00175C  0E00               	movlw	0
  2122  00175E  2202               	addwfc	___aomod@dividend+1,f,c
  2123  001760  2203               	addwfc	___aomod@dividend+2,f,c
  2124  001762  2204               	addwfc	___aomod@dividend+3,f,c
  2125  001764  2205               	addwfc	___aomod@dividend+4,f,c
  2126  001766  2206               	addwfc	___aomod@dividend+5,f,c
  2127  001768  2207               	addwfc	___aomod@dividend+6,f,c
  2128  00176A  2208               	addwfc	___aomod@dividend+7,f,c
  2129  00176C                     l1525:
  2130  00176C  C001  F001         	movff	___aomod@dividend,?___aomod
  2131  001770  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2132  001774  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  2133  001778  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  2134  00177C  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2135  001780  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  2136  001784  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  2137  001788  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  2138  00178C  0012               	return		;funcret
  2139  00178E                     __end_of___aomod:
  2140                           	opt callstack 0
  2141                           
  2142 ;; *************** function ___aodiv *****************
  2143 ;; Defined at:
  2144 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  2145 ;; Parameters:    Size  Location     Type
  2146 ;;  dividend        8    0[COMRAM] long long 
  2147 ;;  divisor         8    8[COMRAM] long long 
  2148 ;; Auto vars:     Size  Location     Type
  2149 ;;  quotient        8   18[COMRAM] long long 
  2150 ;;  sign            1   17[COMRAM] unsigned char 
  2151 ;;  counter         1   16[COMRAM] unsigned char 
  2152 ;; Return value:  Size  Location     Type
  2153 ;;                  8    0[COMRAM] long long 
  2154 ;; Registers used:
  2155 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2156 ;; Tracked objects:
  2157 ;;		On entry : 0/0
  2158 ;;		On exit  : 0/0
  2159 ;;		Unchanged: 0/0
  2160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2161 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2162 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2164 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2165 ;;Total ram usage:       26 bytes
  2166 ;; Hardware stack levels used:    1
  2167 ;; This function calls:
  2168 ;;		Nothing
  2169 ;; This function is called by:
  2170 ;;		_dtoa
  2171 ;; This function uses a non-reentrant model
  2172 ;;
  2173                           
  2174                           	psect	text12
  2175  0013FE                     __ptext12:
  2176                           	opt callstack 0
  2177  0013FE                     ___aodiv:
  2178                           	opt callstack 26
  2179                           
  2180                           ;incstack = 0
  2181  0013FE  0E00               	movlw	0
  2182  001400  6E12               	movwf	___aodiv@sign,c
  2183  001402  AE10               	btfss	___aodiv@divisor+7,7,c
  2184  001404  D012               	goto	l1457
  2185  001406  1E10               	comf	___aodiv@divisor+7,f,c
  2186  001408  1E0F               	comf	___aodiv@divisor+6,f,c
  2187  00140A  1E0E               	comf	___aodiv@divisor+5,f,c
  2188  00140C  1E0D               	comf	___aodiv@divisor+4,f,c
  2189  00140E  1E0C               	comf	___aodiv@divisor+3,f,c
  2190  001410  1E0B               	comf	___aodiv@divisor+2,f,c
  2191  001412  1E0A               	comf	___aodiv@divisor+1,f,c
  2192  001414  6C09               	negf	___aodiv@divisor,c
  2193  001416  0E00               	movlw	0
  2194  001418  220A               	addwfc	___aodiv@divisor+1,f,c
  2195  00141A  220B               	addwfc	___aodiv@divisor+2,f,c
  2196  00141C  220C               	addwfc	___aodiv@divisor+3,f,c
  2197  00141E  220D               	addwfc	___aodiv@divisor+4,f,c
  2198  001420  220E               	addwfc	___aodiv@divisor+5,f,c
  2199  001422  220F               	addwfc	___aodiv@divisor+6,f,c
  2200  001424  2210               	addwfc	___aodiv@divisor+7,f,c
  2201  001426  0E01               	movlw	1
  2202  001428  6E12               	movwf	___aodiv@sign,c
  2203  00142A                     l1457:
  2204  00142A  AE08               	btfss	___aodiv@dividend+7,7,c
  2205  00142C  D012               	goto	l1463
  2206  00142E  1E08               	comf	___aodiv@dividend+7,f,c
  2207  001430  1E07               	comf	___aodiv@dividend+6,f,c
  2208  001432  1E06               	comf	___aodiv@dividend+5,f,c
  2209  001434  1E05               	comf	___aodiv@dividend+4,f,c
  2210  001436  1E04               	comf	___aodiv@dividend+3,f,c
  2211  001438  1E03               	comf	___aodiv@dividend+2,f,c
  2212  00143A  1E02               	comf	___aodiv@dividend+1,f,c
  2213  00143C  6C01               	negf	___aodiv@dividend,c
  2214  00143E  0E00               	movlw	0
  2215  001440  2202               	addwfc	___aodiv@dividend+1,f,c
  2216  001442  2203               	addwfc	___aodiv@dividend+2,f,c
  2217  001444  2204               	addwfc	___aodiv@dividend+3,f,c
  2218  001446  2205               	addwfc	___aodiv@dividend+4,f,c
  2219  001448  2206               	addwfc	___aodiv@dividend+5,f,c
  2220  00144A  2207               	addwfc	___aodiv@dividend+6,f,c
  2221  00144C  2208               	addwfc	___aodiv@dividend+7,f,c
  2222  00144E  0E01               	movlw	1
  2223  001450  1A12               	xorwf	___aodiv@sign,f,c
  2224  001452                     l1463:
  2225  001452  EE20  F013         	lfsr	2,___aodiv@quotient
  2226  001456  0E07               	movlw	7
  2227  001458                     u731:
  2228  001458  6ADE               	clrf	postinc2,c
  2229  00145A  06E8               	decf	wreg,f,c
  2230  00145C  E2FD               	bc	u731
  2231  00145E  5009               	movf	___aodiv@divisor,w,c
  2232  001460  100A               	iorwf	___aodiv@divisor+1,w,c
  2233  001462  100B               	iorwf	___aodiv@divisor+2,w,c
  2234  001464  100C               	iorwf	___aodiv@divisor+3,w,c
  2235  001466  100D               	iorwf	___aodiv@divisor+4,w,c
  2236  001468  100E               	iorwf	___aodiv@divisor+5,w,c
  2237  00146A  100F               	iorwf	___aodiv@divisor+6,w,c
  2238  00146C  1010               	iorwf	___aodiv@divisor+7,w,c
  2239  00146E  B4D8               	btfsc	status,2,c
  2240  001470  D046               	goto	l1485
  2241  001472  0E01               	movlw	1
  2242  001474  6E11               	movwf	___aodiv@counter,c
  2243  001476  D00A               	goto	l1471
  2244  001478                     l1469:
  2245  001478  90D8               	bcf	status,0,c
  2246  00147A  3609               	rlcf	___aodiv@divisor,f,c
  2247  00147C  360A               	rlcf	___aodiv@divisor+1,f,c
  2248  00147E  360B               	rlcf	___aodiv@divisor+2,f,c
  2249  001480  360C               	rlcf	___aodiv@divisor+3,f,c
  2250  001482  360D               	rlcf	___aodiv@divisor+4,f,c
  2251  001484  360E               	rlcf	___aodiv@divisor+5,f,c
  2252  001486  360F               	rlcf	___aodiv@divisor+6,f,c
  2253  001488  3610               	rlcf	___aodiv@divisor+7,f,c
  2254  00148A  2A11               	incf	___aodiv@counter,f,c
  2255  00148C                     l1471:
  2256  00148C  AE10               	btfss	___aodiv@divisor+7,7,c
  2257  00148E  D7F4               	goto	l1469
  2258  001490                     u750:
  2259  001490  90D8               	bcf	status,0,c
  2260  001492  3613               	rlcf	___aodiv@quotient,f,c
  2261  001494  3614               	rlcf	___aodiv@quotient+1,f,c
  2262  001496  3615               	rlcf	___aodiv@quotient+2,f,c
  2263  001498  3616               	rlcf	___aodiv@quotient+3,f,c
  2264  00149A  3617               	rlcf	___aodiv@quotient+4,f,c
  2265  00149C  3618               	rlcf	___aodiv@quotient+5,f,c
  2266  00149E  3619               	rlcf	___aodiv@quotient+6,f,c
  2267  0014A0  361A               	rlcf	___aodiv@quotient+7,f,c
  2268  0014A2  5009               	movf	___aodiv@divisor,w,c
  2269  0014A4  5C01               	subwf	___aodiv@dividend,w,c
  2270  0014A6  500A               	movf	___aodiv@divisor+1,w,c
  2271  0014A8  5802               	subwfb	___aodiv@dividend+1,w,c
  2272  0014AA  500B               	movf	___aodiv@divisor+2,w,c
  2273  0014AC  5803               	subwfb	___aodiv@dividend+2,w,c
  2274  0014AE  500C               	movf	___aodiv@divisor+3,w,c
  2275  0014B0  5804               	subwfb	___aodiv@dividend+3,w,c
  2276  0014B2  500D               	movf	___aodiv@divisor+4,w,c
  2277  0014B4  5805               	subwfb	___aodiv@dividend+4,w,c
  2278  0014B6  500E               	movf	___aodiv@divisor+5,w,c
  2279  0014B8  5806               	subwfb	___aodiv@dividend+5,w,c
  2280  0014BA  500F               	movf	___aodiv@divisor+6,w,c
  2281  0014BC  5807               	subwfb	___aodiv@dividend+6,w,c
  2282  0014BE  5010               	movf	___aodiv@divisor+7,w,c
  2283  0014C0  5808               	subwfb	___aodiv@dividend+7,w,c
  2284  0014C2  A0D8               	btfss	status,0,c
  2285  0014C4  D011               	goto	l1481
  2286  0014C6  5009               	movf	___aodiv@divisor,w,c
  2287  0014C8  5E01               	subwf	___aodiv@dividend,f,c
  2288  0014CA  500A               	movf	___aodiv@divisor+1,w,c
  2289  0014CC  5A02               	subwfb	___aodiv@dividend+1,f,c
  2290  0014CE  500B               	movf	___aodiv@divisor+2,w,c
  2291  0014D0  5A03               	subwfb	___aodiv@dividend+2,f,c
  2292  0014D2  500C               	movf	___aodiv@divisor+3,w,c
  2293  0014D4  5A04               	subwfb	___aodiv@dividend+3,f,c
  2294  0014D6  500D               	movf	___aodiv@divisor+4,w,c
  2295  0014D8  5A05               	subwfb	___aodiv@dividend+4,f,c
  2296  0014DA  500E               	movf	___aodiv@divisor+5,w,c
  2297  0014DC  5A06               	subwfb	___aodiv@dividend+5,f,c
  2298  0014DE  500F               	movf	___aodiv@divisor+6,w,c
  2299  0014E0  5A07               	subwfb	___aodiv@dividend+6,f,c
  2300  0014E2  5010               	movf	___aodiv@divisor+7,w,c
  2301  0014E4  5A08               	subwfb	___aodiv@dividend+7,f,c
  2302  0014E6  8013               	bsf	___aodiv@quotient,0,c
  2303  0014E8                     l1481:
  2304  0014E8  90D8               	bcf	status,0,c
  2305  0014EA  3210               	rrcf	___aodiv@divisor+7,f,c
  2306  0014EC  320F               	rrcf	___aodiv@divisor+6,f,c
  2307  0014EE  320E               	rrcf	___aodiv@divisor+5,f,c
  2308  0014F0  320D               	rrcf	___aodiv@divisor+4,f,c
  2309  0014F2  320C               	rrcf	___aodiv@divisor+3,f,c
  2310  0014F4  320B               	rrcf	___aodiv@divisor+2,f,c
  2311  0014F6  320A               	rrcf	___aodiv@divisor+1,f,c
  2312  0014F8  3209               	rrcf	___aodiv@divisor,f,c
  2313  0014FA  2E11               	decfsz	___aodiv@counter,f,c
  2314  0014FC  D7C9               	goto	u750
  2315  0014FE                     l1485:
  2316  0014FE  5012               	movf	___aodiv@sign,w,c
  2317  001500  B4D8               	btfsc	status,2,c
  2318  001502  D010               	goto	l1489
  2319  001504  1E1A               	comf	___aodiv@quotient+7,f,c
  2320  001506  1E19               	comf	___aodiv@quotient+6,f,c
  2321  001508  1E18               	comf	___aodiv@quotient+5,f,c
  2322  00150A  1E17               	comf	___aodiv@quotient+4,f,c
  2323  00150C  1E16               	comf	___aodiv@quotient+3,f,c
  2324  00150E  1E15               	comf	___aodiv@quotient+2,f,c
  2325  001510  1E14               	comf	___aodiv@quotient+1,f,c
  2326  001512  6C13               	negf	___aodiv@quotient,c
  2327  001514  0E00               	movlw	0
  2328  001516  2214               	addwfc	___aodiv@quotient+1,f,c
  2329  001518  2215               	addwfc	___aodiv@quotient+2,f,c
  2330  00151A  2216               	addwfc	___aodiv@quotient+3,f,c
  2331  00151C  2217               	addwfc	___aodiv@quotient+4,f,c
  2332  00151E  2218               	addwfc	___aodiv@quotient+5,f,c
  2333  001520  2219               	addwfc	___aodiv@quotient+6,f,c
  2334  001522  221A               	addwfc	___aodiv@quotient+7,f,c
  2335  001524                     l1489:
  2336  001524  C013  F001         	movff	___aodiv@quotient,?___aodiv
  2337  001528  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  2338  00152C  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  2339  001530  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  2340  001534  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  2341  001538  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  2342  00153C  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  2343  001540  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  2344  001544  0012               	return		;funcret
  2345  001546                     __end_of___aodiv:
  2346                           	opt callstack 0
  2347                           
  2348 ;; *************** function _initLCD *****************
  2349 ;; Defined at:
  2350 ;;		line 69 in file "lcd.c"
  2351 ;; Parameters:    Size  Location     Type
  2352 ;;		None
  2353 ;; Auto vars:     Size  Location     Type
  2354 ;;		None
  2355 ;; Return value:  Size  Location     Type
  2356 ;;                  1    wreg      void 
  2357 ;; Registers used:
  2358 ;;		wreg, status,2, status,0, cstack
  2359 ;; Tracked objects:
  2360 ;;		On entry : 0/0
  2361 ;;		On exit  : 0/0
  2362 ;;		Unchanged: 0/0
  2363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2366 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2367 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2368 ;;Total ram usage:        1 bytes
  2369 ;; Hardware stack levels used:    1
  2370 ;; Hardware stack levels required when called:    4
  2371 ;; This function calls:
  2372 ;;		_lcdInst
  2373 ;;		_send_byte
  2374 ;;		_send_nibble
  2375 ;; This function is called by:
  2376 ;;		_main
  2377 ;; This function uses a non-reentrant model
  2378 ;;
  2379                           
  2380                           	psect	text13
  2381  001912                     __ptext13:
  2382                           	opt callstack 0
  2383  001912                     _initLCD:
  2384                           	opt callstack 26
  2385                           
  2386                           ;lcd.c: 70:     _delay((unsigned long)((15)*(10000000/4000.0)));
  2387                           
  2388                           ;incstack = 0
  2389  001912  0E31               	movlw	49
  2390  001914  6E05               	movwf	??_initLCD& (0+255),c
  2391  001916  0EB2               	movlw	178
  2392  001918                     u1197:
  2393  001918  2EE8               	decfsz	wreg,f,c
  2394  00191A  D7FE               	bra	u1197
  2395  00191C  2E05               	decfsz	??_initLCD& (0+255),f,c
  2396  00191E  D7FC               	bra	u1197
  2397  001920  D000               	nop2	
  2398                           
  2399                           ;lcd.c: 72:     LATDbits.LATD2 = 0;
  2400  001922  948C               	bcf	3980,2,c	;volatile
  2401                           
  2402                           ;lcd.c: 74:     send_nibble(0b0011);
  2403  001924  0E03               	movlw	3
  2404  001926  ECAC  F00D         	call	_send_nibble
  2405                           
  2406                           ;lcd.c: 75:     _delay((unsigned long)((5)*(10000000/4000.0)));
  2407  00192A  0E11               	movlw	17
  2408  00192C  6E05               	movwf	??_initLCD& (0+255),c
  2409  00192E  0E3A               	movlw	58
  2410  001930                     u1207:
  2411  001930  2EE8               	decfsz	wreg,f,c
  2412  001932  D7FE               	bra	u1207
  2413  001934  2E05               	decfsz	??_initLCD& (0+255),f,c
  2414  001936  D7FC               	bra	u1207
  2415  001938  D000               	nop2	
  2416                           
  2417                           ;lcd.c: 76:     send_nibble(0b0011);
  2418  00193A  0E03               	movlw	3
  2419  00193C  ECAC  F00D         	call	_send_nibble
  2420                           
  2421                           ;lcd.c: 77:     _delay((unsigned long)((150)*(10000000/4000000.0)));
  2422  001940  0E7D               	movlw	125
  2423  001942                     u1217:
  2424  001942  2EE8               	decfsz	wreg,f,c
  2425  001944  D7FE               	bra	u1217
  2426                           
  2427                           ;lcd.c: 78:     send_byte(0b00110010);
  2428  001946  0E32               	movlw	50
  2429  001948  ECB7  F00D         	call	_send_byte
  2430                           
  2431                           ;lcd.c: 80:     send_byte(0b00101000);
  2432  00194C  0E28               	movlw	40
  2433  00194E  ECB7  F00D         	call	_send_byte
  2434                           
  2435                           ;lcd.c: 81:     send_byte(0b00001000);
  2436  001952  0E08               	movlw	8
  2437  001954  ECB7  F00D         	call	_send_byte
  2438                           
  2439                           ;lcd.c: 82:     send_byte(0b00000001);
  2440  001958  0E01               	movlw	1
  2441  00195A  ECB7  F00D         	call	_send_byte
  2442                           
  2443                           ;lcd.c: 83:     _delay((unsigned long)((5)*(10000000/4000.0)));
  2444  00195E  0E11               	movlw	17
  2445  001960  6E05               	movwf	??_initLCD& (0+255),c
  2446  001962  0E3A               	movlw	58
  2447  001964                     u1227:
  2448  001964  2EE8               	decfsz	wreg,f,c
  2449  001966  D7FE               	bra	u1227
  2450  001968  2E05               	decfsz	??_initLCD& (0+255),f,c
  2451  00196A  D7FC               	bra	u1227
  2452  00196C  D000               	nop2	
  2453                           
  2454                           ;lcd.c: 84:     send_byte(0b00000110);
  2455  00196E  0E06               	movlw	6
  2456  001970  ECB7  F00D         	call	_send_byte
  2457                           
  2458                           ;lcd.c: 87:     { lcdInst( (unsigned char)(8 | (1 << 2) | (1 << 1) | 1) );};
  2459  001974  0E0F               	movlw	15
  2460  001976  ECCF  F00D         	call	_lcdInst
  2461  00197A  0012               	return		;funcret
  2462  00197C                     __end_of_initLCD:
  2463                           	opt callstack 0
  2464                           
  2465 ;; *************** function _lcdInst *****************
  2466 ;; Defined at:
  2467 ;;		line 64 in file "lcd.c"
  2468 ;; Parameters:    Size  Location     Type
  2469 ;;  data            1    wreg     unsigned char 
  2470 ;; Auto vars:     Size  Location     Type
  2471 ;;  data            1    3[COMRAM] unsigned char 
  2472 ;; Return value:  Size  Location     Type
  2473 ;;                  1    wreg      void 
  2474 ;; Registers used:
  2475 ;;		wreg, status,2, status,0, cstack
  2476 ;; Tracked objects:
  2477 ;;		On entry : 0/0
  2478 ;;		On exit  : 0/0
  2479 ;;		Unchanged: 0/0
  2480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2482 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2484 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2485 ;;Total ram usage:        1 bytes
  2486 ;; Hardware stack levels used:    1
  2487 ;; Hardware stack levels required when called:    3
  2488 ;; This function calls:
  2489 ;;		_send_byte
  2490 ;; This function is called by:
  2491 ;;		_main
  2492 ;;		_initLCD
  2493 ;;		_lcd_shift_cursor
  2494 ;;		_lcd_shift_display
  2495 ;; This function uses a non-reentrant model
  2496 ;;
  2497                           
  2498                           	psect	text14
  2499  001B9E                     __ptext14:
  2500                           	opt callstack 0
  2501  001B9E                     _lcdInst:
  2502                           	opt callstack 27
  2503                           
  2504                           ;incstack = 0
  2505                           ;lcdInst@data stored from wreg
  2506  001B9E  6E04               	movwf	lcdInst@data,c
  2507                           
  2508                           ;lcd.c: 65:     LATDbits.LATD2 = 0;
  2509  001BA0  948C               	bcf	3980,2,c	;volatile
  2510                           
  2511                           ;lcd.c: 66:     send_byte(data);
  2512  001BA2  5004               	movf	lcdInst@data,w,c
  2513  001BA4  ECB7  F00D         	call	_send_byte
  2514  001BA8  0012               	return		;funcret
  2515  001BAA                     __end_of_lcdInst:
  2516                           	opt callstack 0
  2517                           
  2518 ;; *************** function _send_byte *****************
  2519 ;; Defined at:
  2520 ;;		line 55 in file "lcd.c"
  2521 ;; Parameters:    Size  Location     Type
  2522 ;;  data            1    wreg     unsigned char 
  2523 ;; Auto vars:     Size  Location     Type
  2524 ;;  data            1    2[COMRAM] unsigned char 
  2525 ;; Return value:  Size  Location     Type
  2526 ;;                  1    wreg      void 
  2527 ;; Registers used:
  2528 ;;		wreg, status,2, status,0, cstack
  2529 ;; Tracked objects:
  2530 ;;		On entry : 0/0
  2531 ;;		On exit  : 0/0
  2532 ;;		Unchanged: 0/0
  2533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2535 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2537 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2538 ;;Total ram usage:        1 bytes
  2539 ;; Hardware stack levels used:    1
  2540 ;; Hardware stack levels required when called:    2
  2541 ;; This function calls:
  2542 ;;		_send_nibble
  2543 ;; This function is called by:
  2544 ;;		_lcdInst
  2545 ;;		_initLCD
  2546 ;;		_putch
  2547 ;; This function uses a non-reentrant model
  2548 ;;
  2549                           
  2550                           	psect	text15
  2551  001B6E                     __ptext15:
  2552                           	opt callstack 0
  2553  001B6E                     _send_byte:
  2554                           	opt callstack 23
  2555                           
  2556                           ;incstack = 0
  2557                           ;send_byte@data stored from wreg
  2558  001B6E  6E03               	movwf	send_byte@data,c
  2559                           
  2560                           ;lcd.c: 57:     send_nibble(data >> 4);
  2561  001B70  3803               	swapf	send_byte@data,w,c
  2562  001B72  0B0F               	andlw	15
  2563  001B74  ECAC  F00D         	call	_send_nibble
  2564                           
  2565                           ;lcd.c: 60:     send_nibble(data);
  2566  001B78  5003               	movf	send_byte@data,w,c
  2567  001B7A  ECAC  F00D         	call	_send_nibble
  2568  001B7E  0012               	return		;funcret
  2569  001B80                     __end_of_send_byte:
  2570                           	opt callstack 0
  2571                           
  2572 ;; *************** function _send_nibble *****************
  2573 ;; Defined at:
  2574 ;;		line 44 in file "lcd.c"
  2575 ;; Parameters:    Size  Location     Type
  2576 ;;  data            1    wreg     unsigned char 
  2577 ;; Auto vars:     Size  Location     Type
  2578 ;;  data            1    1[COMRAM] unsigned char 
  2579 ;; Return value:  Size  Location     Type
  2580 ;;                  1    wreg      void 
  2581 ;; Registers used:
  2582 ;;		wreg, status,2, status,0, cstack
  2583 ;; Tracked objects:
  2584 ;;		On entry : 0/0
  2585 ;;		On exit  : 0/0
  2586 ;;		Unchanged: 0/0
  2587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2589 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2591 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2592 ;;Total ram usage:        1 bytes
  2593 ;; Hardware stack levels used:    1
  2594 ;; Hardware stack levels required when called:    1
  2595 ;; This function calls:
  2596 ;;		_pulse_e
  2597 ;; This function is called by:
  2598 ;;		_send_byte
  2599 ;;		_initLCD
  2600 ;; This function uses a non-reentrant model
  2601 ;;
  2602                           
  2603                           	psect	text16
  2604  001B58                     __ptext16:
  2605                           	opt callstack 0
  2606  001B58                     _send_nibble:
  2607                           	opt callstack 23
  2608                           
  2609                           ;incstack = 0
  2610                           ;send_nibble@data stored from wreg
  2611  001B58  6E02               	movwf	send_nibble@data,c
  2612                           
  2613                           ;lcd.c: 46:     LATD = (unsigned char)(LATD & 0x0F);
  2614  001B5A  508C               	movf	3980,w,c	;volatile
  2615  001B5C  0B0F               	andlw	15
  2616  001B5E  6E8C               	movwf	3980,c	;volatile
  2617                           
  2618                           ;lcd.c: 47:     LATD = (unsigned char)((data << 4) | LATD);
  2619  001B60  3802               	swapf	send_nibble@data,w,c
  2620  001B62  0BF0               	andlw	240
  2621  001B64  108C               	iorwf	3980,w,c	;volatile
  2622  001B66  6E8C               	movwf	3980,c	;volatile
  2623                           
  2624                           ;lcd.c: 48:     pulse_e();
  2625  001B68  EC5F  F00D         	call	_pulse_e	;wreg free
  2626  001B6C  0012               	return		;funcret
  2627  001B6E                     __end_of_send_nibble:
  2628                           	opt callstack 0
  2629                           
  2630 ;; *************** function _pulse_e *****************
  2631 ;; Defined at:
  2632 ;;		line 28 in file "lcd.c"
  2633 ;; Parameters:    Size  Location     Type
  2634 ;;		None
  2635 ;; Auto vars:     Size  Location     Type
  2636 ;;  interruptSta    1    0[COMRAM] unsigned char 
  2637 ;; Return value:  Size  Location     Type
  2638 ;;                  1    wreg      void 
  2639 ;; Registers used:
  2640 ;;		wreg
  2641 ;; Tracked objects:
  2642 ;;		On entry : 0/0
  2643 ;;		On exit  : 0/0
  2644 ;;		Unchanged: 0/0
  2645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2647 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2649 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2650 ;;Total ram usage:        1 bytes
  2651 ;; Hardware stack levels used:    1
  2652 ;; This function calls:
  2653 ;;		Nothing
  2654 ;; This function is called by:
  2655 ;;		_send_nibble
  2656 ;; This function uses a non-reentrant model
  2657 ;;
  2658                           
  2659                           	psect	text17
  2660  001ABE                     __ptext17:
  2661                           	opt callstack 0
  2662  001ABE                     _pulse_e:
  2663                           	opt callstack 23
  2664                           
  2665                           ;lcd.c: 29:     unsigned char interruptState = INTCONbits.GIE;
  2666                           
  2667                           ;incstack = 0
  2668  001ABE  0E00               	movlw	0
  2669  001AC0  BEF2               	btfsc	4082,7,c	;volatile
  2670  001AC2  0E01               	movlw	1
  2671  001AC4  6E01               	movwf	pulse_e@interruptState,c
  2672                           
  2673                           ;lcd.c: 30:     (INTCONbits.GIE = 0);
  2674  001AC6  9EF2               	bcf	4082,7,c	;volatile
  2675                           
  2676                           ;lcd.c: 31:     LATDbits.LATD3 = 1;
  2677  001AC8  868C               	bsf	3980,3,c	;volatile
  2678                           
  2679                           ;lcd.c: 34:     _delay((unsigned long)((25)*(10000000/4000000.0)));
  2680  001ACA  0E14               	movlw	20
  2681  001ACC                     u1237:
  2682  001ACC  2EE8               	decfsz	wreg,f,c
  2683  001ACE  D7FE               	bra	u1237
  2684  001AD0  D000               	nop2	
  2685                           
  2686                           ;lcd.c: 35:     LATDbits.LATD3 = 0;
  2687  001AD2  968C               	bcf	3980,3,c	;volatile
  2688                           
  2689                           ;lcd.c: 36:     _delay((unsigned long)((100)*(10000000/4000000.0)));
  2690  001AD4  0E53               	movlw	83
  2691  001AD6                     u1247:
  2692  001AD6  2EE8               	decfsz	wreg,f,c
  2693  001AD8  D7FE               	bra	u1247
  2694  001ADA  F000               	nop	
  2695                           
  2696                           ;lcd.c: 37:     INTCONbits.GIE = interruptState;
  2697  001ADC  B001               	btfsc	pulse_e@interruptState,0,c
  2698  001ADE  D002               	bra	u595
  2699  001AE0  9EF2               	bcf	4082,7,c	;volatile
  2700  001AE2  D001               	bra	u596
  2701  001AE4                     u595:
  2702  001AE4  8EF2               	bsf	4082,7,c	;volatile
  2703  001AE6                     u596:
  2704  001AE6  0012               	return		;funcret
  2705  001AE8                     __end_of_pulse_e:
  2706                           	opt callstack 0
  2707                           
  2708 ;; *************** function _I2C_Master_Write *****************
  2709 ;; Defined at:
  2710 ;;		line 70 in file "I2C.c"
  2711 ;; Parameters:    Size  Location     Type
  2712 ;;  byteToWrite     2    1[COMRAM] unsigned int 
  2713 ;; Auto vars:     Size  Location     Type
  2714 ;;		None
  2715 ;; Return value:  Size  Location     Type
  2716 ;;                  1    wreg      void 
  2717 ;; Registers used:
  2718 ;;		wreg, status,2, status,0, cstack
  2719 ;; Tracked objects:
  2720 ;;		On entry : 0/0
  2721 ;;		On exit  : 0/0
  2722 ;;		Unchanged: 0/0
  2723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2724 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2727 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2728 ;;Total ram usage:        2 bytes
  2729 ;; Hardware stack levels used:    1
  2730 ;; Hardware stack levels required when called:    1
  2731 ;; This function calls:
  2732 ;;		_I2C_Master_Wait
  2733 ;; This function is called by:
  2734 ;;		_main
  2735 ;; This function uses a non-reentrant model
  2736 ;;
  2737                           
  2738                           	psect	text18
  2739  001BAA                     __ptext18:
  2740                           	opt callstack 0
  2741  001BAA                     _I2C_Master_Write:
  2742                           	opt callstack 29
  2743                           
  2744                           ;I2C.c: 71:     I2C_Master_Wait();
  2745                           
  2746                           ;incstack = 0
  2747  001BAA  ECC0  F00D         	call	_I2C_Master_Wait	;wreg free
  2748                           
  2749                           ;I2C.c: 74:     SSPBUF = byteToWrite;
  2750  001BAE  C002  FFC9         	movff	I2C_Master_Write@byteToWrite,4041	;volatile
  2751  001BB2  0012               	return		;funcret
  2752  001BB4                     __end_of_I2C_Master_Write:
  2753                           	opt callstack 0
  2754                           
  2755 ;; *************** function _I2C_Master_Stop *****************
  2756 ;; Defined at:
  2757 ;;		line 65 in file "I2C.c"
  2758 ;; Parameters:    Size  Location     Type
  2759 ;;		None
  2760 ;; Auto vars:     Size  Location     Type
  2761 ;;		None
  2762 ;; Return value:  Size  Location     Type
  2763 ;;                  1    wreg      void 
  2764 ;; Registers used:
  2765 ;;		wreg, status,2, status,0, cstack
  2766 ;; Tracked objects:
  2767 ;;		On entry : 0/0
  2768 ;;		On exit  : 0/0
  2769 ;;		Unchanged: 0/0
  2770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2775 ;;Total ram usage:        0 bytes
  2776 ;; Hardware stack levels used:    1
  2777 ;; Hardware stack levels required when called:    1
  2778 ;; This function calls:
  2779 ;;		_I2C_Master_Wait
  2780 ;; This function is called by:
  2781 ;;		_main
  2782 ;; This function uses a non-reentrant model
  2783 ;;
  2784                           
  2785                           	psect	text19
  2786  001BB4                     __ptext19:
  2787                           	opt callstack 0
  2788  001BB4                     _I2C_Master_Stop:
  2789                           	opt callstack 29
  2790                           
  2791                           ;I2C.c: 66:     I2C_Master_Wait();
  2792                           
  2793                           ;incstack = 0
  2794  001BB4  ECC0  F00D         	call	_I2C_Master_Wait	;wreg free
  2795                           
  2796                           ;I2C.c: 67:     SSPCON2bits.PEN = 1;
  2797  001BB8  84C5               	bsf	4037,2,c	;volatile
  2798  001BBA  0012               	return		;funcret
  2799  001BBC                     __end_of_I2C_Master_Stop:
  2800                           	opt callstack 0
  2801                           
  2802 ;; *************** function _I2C_Master_Start *****************
  2803 ;; Defined at:
  2804 ;;		line 55 in file "I2C.c"
  2805 ;; Parameters:    Size  Location     Type
  2806 ;;		None
  2807 ;; Auto vars:     Size  Location     Type
  2808 ;;		None
  2809 ;; Return value:  Size  Location     Type
  2810 ;;                  1    wreg      void 
  2811 ;; Registers used:
  2812 ;;		wreg, status,2, status,0, cstack
  2813 ;; Tracked objects:
  2814 ;;		On entry : 0/0
  2815 ;;		On exit  : 0/0
  2816 ;;		Unchanged: 0/0
  2817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2822 ;;Total ram usage:        0 bytes
  2823 ;; Hardware stack levels used:    1
  2824 ;; Hardware stack levels required when called:    1
  2825 ;; This function calls:
  2826 ;;		_I2C_Master_Wait
  2827 ;; This function is called by:
  2828 ;;		_main
  2829 ;; This function uses a non-reentrant model
  2830 ;;
  2831                           
  2832                           	psect	text20
  2833  001BBC                     __ptext20:
  2834                           	opt callstack 0
  2835  001BBC                     _I2C_Master_Start:
  2836                           	opt callstack 29
  2837                           
  2838                           ;I2C.c: 56:     I2C_Master_Wait();
  2839                           
  2840                           ;incstack = 0
  2841  001BBC  ECC0  F00D         	call	_I2C_Master_Wait	;wreg free
  2842                           
  2843                           ;I2C.c: 57:     SSPCON2bits.SEN = 1;
  2844  001BC0  80C5               	bsf	4037,0,c	;volatile
  2845  001BC2  0012               	return		;funcret
  2846  001BC4                     __end_of_I2C_Master_Start:
  2847                           	opt callstack 0
  2848                           
  2849 ;; *************** function _I2C_Master_RepeatedStart *****************
  2850 ;; Defined at:
  2851 ;;		line 60 in file "I2C.c"
  2852 ;; Parameters:    Size  Location     Type
  2853 ;;		None
  2854 ;; Auto vars:     Size  Location     Type
  2855 ;;		None
  2856 ;; Return value:  Size  Location     Type
  2857 ;;                  1    wreg      void 
  2858 ;; Registers used:
  2859 ;;		wreg, status,2, status,0, cstack
  2860 ;; Tracked objects:
  2861 ;;		On entry : 0/0
  2862 ;;		On exit  : 0/0
  2863 ;;		Unchanged: 0/0
  2864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2869 ;;Total ram usage:        0 bytes
  2870 ;; Hardware stack levels used:    1
  2871 ;; Hardware stack levels required when called:    1
  2872 ;; This function calls:
  2873 ;;		_I2C_Master_Wait
  2874 ;; This function is called by:
  2875 ;;		_main
  2876 ;; This function uses a non-reentrant model
  2877 ;;
  2878                           
  2879                           	psect	text21
  2880  001BC4                     __ptext21:
  2881                           	opt callstack 0
  2882  001BC4                     _I2C_Master_RepeatedStart:
  2883                           	opt callstack 29
  2884                           
  2885                           ;I2C.c: 61:     I2C_Master_Wait();
  2886                           
  2887                           ;incstack = 0
  2888  001BC4  ECC0  F00D         	call	_I2C_Master_Wait	;wreg free
  2889                           
  2890                           ;I2C.c: 62:     SSPCON2bits.RSEN = 1;
  2891  001BC8  82C5               	bsf	4037,1,c	;volatile
  2892  001BCA  0012               	return		;funcret
  2893  001BCC                     __end_of_I2C_Master_RepeatedStart:
  2894                           	opt callstack 0
  2895                           
  2896 ;; *************** function _I2C_Master_Read *****************
  2897 ;; Defined at:
  2898 ;;		line 77 in file "I2C.c"
  2899 ;; Parameters:    Size  Location     Type
  2900 ;;  ackBit          1    wreg     unsigned char 
  2901 ;; Auto vars:     Size  Location     Type
  2902 ;;  ackBit          1    1[COMRAM] unsigned char 
  2903 ;;  receivedByte    1    2[COMRAM] unsigned char 
  2904 ;; Return value:  Size  Location     Type
  2905 ;;                  1    wreg      unsigned char 
  2906 ;; Registers used:
  2907 ;;		wreg, status,2, status,0, cstack
  2908 ;; Tracked objects:
  2909 ;;		On entry : 0/0
  2910 ;;		On exit  : 0/0
  2911 ;;		Unchanged: 0/0
  2912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2914 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2916 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2917 ;;Total ram usage:        2 bytes
  2918 ;; Hardware stack levels used:    1
  2919 ;; Hardware stack levels required when called:    1
  2920 ;; This function calls:
  2921 ;;		_I2C_Master_Wait
  2922 ;; This function is called by:
  2923 ;;		_main
  2924 ;; This function uses a non-reentrant model
  2925 ;;
  2926                           
  2927                           	psect	text22
  2928  001B34                     __ptext22:
  2929                           	opt callstack 0
  2930  001B34                     _I2C_Master_Read:
  2931                           	opt callstack 29
  2932                           
  2933                           ;incstack = 0
  2934                           ;I2C_Master_Read@ackBit stored from wreg
  2935  001B34  6E02               	movwf	I2C_Master_Read@ackBit,c
  2936                           
  2937                           ;I2C.c: 78:     I2C_Master_Wait();
  2938  001B36  ECC0  F00D         	call	_I2C_Master_Wait	;wreg free
  2939                           
  2940                           ;I2C.c: 79:     SSPCON2bits.RCEN = 1;
  2941  001B3A  86C5               	bsf	4037,3,c	;volatile
  2942                           
  2943                           ;I2C.c: 81:     I2C_Master_Wait();
  2944  001B3C  ECC0  F00D         	call	_I2C_Master_Wait	;wreg free
  2945                           
  2946                           ;I2C.c: 84:     unsigned char receivedByte = SSPBUF;
  2947  001B40  CFC9 F003          	movff	4041,I2C_Master_Read@receivedByte	;volatile
  2948                           
  2949                           ;I2C.c: 86:     I2C_Master_Wait();
  2950  001B44  ECC0  F00D         	call	_I2C_Master_Wait	;wreg free
  2951                           
  2952                           ;I2C.c: 87:     SSPCON2bits.ACKDT = ackBit;
  2953  001B48  B002               	btfsc	I2C_Master_Read@ackBit,0,c
  2954  001B4A  D002               	bra	u1105
  2955  001B4C  9AC5               	bcf	4037,5,c	;volatile
  2956  001B4E  D001               	bra	u1106
  2957  001B50                     u1105:
  2958  001B50  8AC5               	bsf	4037,5,c	;volatile
  2959  001B52                     u1106:
  2960                           
  2961                           ;I2C.c: 88:     SSPCON2bits.ACKEN = 1;
  2962  001B52  88C5               	bsf	4037,4,c	;volatile
  2963                           
  2964                           ;I2C.c: 90:     return receivedByte;
  2965  001B54  5003               	movf	I2C_Master_Read@receivedByte,w,c
  2966  001B56  0012               	return		;funcret
  2967  001B58                     __end_of_I2C_Master_Read:
  2968                           	opt callstack 0
  2969                           
  2970 ;; *************** function _I2C_Master_Wait *****************
  2971 ;; Defined at:
  2972 ;;		line 21 in file "I2C.c"
  2973 ;; Parameters:    Size  Location     Type
  2974 ;;		None
  2975 ;; Auto vars:     Size  Location     Type
  2976 ;;		None
  2977 ;; Return value:  Size  Location     Type
  2978 ;;                  1    wreg      void 
  2979 ;; Registers used:
  2980 ;;		wreg, status,2, status,0
  2981 ;; Tracked objects:
  2982 ;;		On entry : 0/0
  2983 ;;		On exit  : 0/0
  2984 ;;		Unchanged: 0/0
  2985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2988 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2989 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2990 ;;Total ram usage:        1 bytes
  2991 ;; Hardware stack levels used:    1
  2992 ;; This function calls:
  2993 ;;		Nothing
  2994 ;; This function is called by:
  2995 ;;		_I2C_Master_Start
  2996 ;;		_I2C_Master_RepeatedStart
  2997 ;;		_I2C_Master_Stop
  2998 ;;		_I2C_Master_Write
  2999 ;;		_I2C_Master_Read
  3000 ;; This function uses a non-reentrant model
  3001 ;;
  3002                           
  3003                           	psect	text23
  3004  001B80                     __ptext23:
  3005                           	opt callstack 0
  3006  001B80                     _I2C_Master_Wait:
  3007                           	opt callstack 29
  3008                           
  3009                           ;I2C.c: 26:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F)){
  3010                           
  3011                           ;I2C.c: 28:     }
  3012                           
  3013                           ;incstack = 0
  3014  001B80  B4C7               	btfsc	4039,2,c	;volatile
  3015  001B82  D7FE               	goto	_I2C_Master_Wait
  3016  001B84  CFC5 F001          	movff	4037,??_I2C_Master_Wait	;volatile
  3017  001B88  0E1F               	movlw	31
  3018  001B8A  1601               	andwf	??_I2C_Master_Wait,f,c
  3019  001B8C  B4D8               	btfsc	status,2,c
  3020  001B8E  0012               	return	
  3021  001B90  D7F7               	goto	_I2C_Master_Wait
  3022  001B92                     __end_of_I2C_Master_Wait:
  3023                           	opt callstack 0
  3024                           
  3025 ;; *************** function _I2C_Master_Init *****************
  3026 ;; Defined at:
  3027 ;;		line 32 in file "I2C.c"
  3028 ;; Parameters:    Size  Location     Type
  3029 ;;  clockFreq       4   13[COMRAM] const unsigned long 
  3030 ;; Auto vars:     Size  Location     Type
  3031 ;;		None
  3032 ;; Return value:  Size  Location     Type
  3033 ;;                  1    wreg      void 
  3034 ;; Registers used:
  3035 ;;		wreg, status,2, status,0, cstack
  3036 ;; Tracked objects:
  3037 ;;		On entry : 0/0
  3038 ;;		On exit  : 0/0
  3039 ;;		Unchanged: 0/0
  3040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3041 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3043 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3044 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3045 ;;Total ram usage:        8 bytes
  3046 ;; Hardware stack levels used:    1
  3047 ;; Hardware stack levels required when called:    1
  3048 ;; This function calls:
  3049 ;;		___lldiv
  3050 ;; This function is called by:
  3051 ;;		_main
  3052 ;; This function uses a non-reentrant model
  3053 ;;
  3054                           
  3055                           	psect	text24
  3056  00197C                     __ptext24:
  3057                           	opt callstack 0
  3058  00197C                     _I2C_Master_Init:
  3059                           	opt callstack 29
  3060                           
  3061                           ;I2C.c: 34:     SSPCON1bits.SSPEN = 0;
  3062                           
  3063                           ;incstack = 0
  3064  00197C  9AC6               	bcf	4038,5,c	;volatile
  3065                           
  3066                           ;I2C.c: 37:     TRISCbits.TRISC3 = 1;
  3067  00197E  8694               	bsf	3988,3,c	;volatile
  3068                           
  3069                           ;I2C.c: 38:     TRISCbits.TRISC4 = 1;
  3070  001980  8894               	bsf	3988,4,c	;volatile
  3071                           
  3072                           ;I2C.c: 43:     SSPADD = (10000000 / (4 * clockFreq)) - 1;
  3073  001982  0E80               	movlw	128
  3074  001984  6E01               	movwf	___lldiv@dividend,c
  3075  001986  0E96               	movlw	150
  3076  001988  6E02               	movwf	___lldiv@dividend+1,c
  3077  00198A  0E98               	movlw	152
  3078  00198C  6E03               	movwf	___lldiv@dividend+2,c
  3079  00198E  0E00               	movlw	0
  3080  001990  6E04               	movwf	___lldiv@dividend+3,c
  3081  001992  C00E  F012         	movff	I2C_Master_Init@clockFreq,??_I2C_Master_Init
  3082  001996  C00F  F013         	movff	I2C_Master_Init@clockFreq+1,??_I2C_Master_Init+1
  3083  00199A  C010  F014         	movff	I2C_Master_Init@clockFreq+2,??_I2C_Master_Init+2
  3084  00199E  C011  F015         	movff	I2C_Master_Init@clockFreq+3,??_I2C_Master_Init+3
  3085  0019A2  0E02               	movlw	2
  3086  0019A4                     u1095:
  3087  0019A4  90D8               	bcf	status,0,c
  3088  0019A6  3612               	rlcf	??_I2C_Master_Init,f,c
  3089  0019A8  3613               	rlcf	??_I2C_Master_Init+1,f,c
  3090  0019AA  3614               	rlcf	??_I2C_Master_Init+2,f,c
  3091  0019AC  3615               	rlcf	??_I2C_Master_Init+3,f,c
  3092  0019AE  2EE8               	decfsz	wreg,f,c
  3093  0019B0  D7F9               	goto	u1095
  3094  0019B2  C012  F005         	movff	??_I2C_Master_Init,___lldiv@divisor
  3095  0019B6  C013  F006         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
  3096  0019BA  C014  F007         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
  3097  0019BE  C015  F008         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
  3098  0019C2  EC12  F00C         	call	___lldiv	;wreg free
  3099  0019C6  0401               	decf	?___lldiv,w,c
  3100  0019C8  6EC8               	movwf	4040,c	;volatile
  3101                           
  3102                           ;I2C.c: 46:     SSPSTAT = 0b10000000;
  3103  0019CA  0E80               	movlw	128
  3104  0019CC  6EC7               	movwf	4039,c	;volatile
  3105                           
  3106                           ;I2C.c: 49:     SSPCON1 = 0b00101000;
  3107  0019CE  0E28               	movlw	40
  3108  0019D0  6EC6               	movwf	4038,c	;volatile
  3109                           
  3110                           ;I2C.c: 52:     SSPCON2 = 0b00000000;
  3111  0019D2  0E00               	movlw	0
  3112  0019D4  6EC5               	movwf	4037,c	;volatile
  3113  0019D6  0012               	return		;funcret
  3114  0019D8                     __end_of_I2C_Master_Init:
  3115                           	opt callstack 0
  3116                           
  3117 ;; *************** function ___lldiv *****************
  3118 ;; Defined at:
  3119 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__lldiv.c"
  3120 ;; Parameters:    Size  Location     Type
  3121 ;;  dividend        4    0[COMRAM] unsigned long 
  3122 ;;  divisor         4    4[COMRAM] unsigned long 
  3123 ;; Auto vars:     Size  Location     Type
  3124 ;;  quotient        4    8[COMRAM] unsigned long 
  3125 ;;  counter         1   12[COMRAM] unsigned char 
  3126 ;; Return value:  Size  Location     Type
  3127 ;;                  4    0[COMRAM] unsigned long 
  3128 ;; Registers used:
  3129 ;;		wreg, status,2, status,0
  3130 ;; Tracked objects:
  3131 ;;		On entry : 0/0
  3132 ;;		On exit  : 0/0
  3133 ;;		Unchanged: 0/0
  3134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3135 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3136 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3138 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3139 ;;Total ram usage:       13 bytes
  3140 ;; Hardware stack levels used:    1
  3141 ;; This function calls:
  3142 ;;		Nothing
  3143 ;; This function is called by:
  3144 ;;		_I2C_Master_Init
  3145 ;; This function uses a non-reentrant model
  3146 ;;
  3147                           
  3148                           	psect	text25
  3149  001824                     __ptext25:
  3150                           	opt callstack 0
  3151  001824                     ___lldiv:
  3152                           	opt callstack 29
  3153                           
  3154                           ;incstack = 0
  3155  001824  0E00               	movlw	0
  3156  001826  6E09               	movwf	___lldiv@quotient,c
  3157  001828  0E00               	movlw	0
  3158  00182A  6E0A               	movwf	___lldiv@quotient+1,c
  3159  00182C  0E00               	movlw	0
  3160  00182E  6E0B               	movwf	___lldiv@quotient+2,c
  3161  001830  0E00               	movlw	0
  3162  001832  6E0C               	movwf	___lldiv@quotient+3,c
  3163  001834  5005               	movf	___lldiv@divisor,w,c
  3164  001836  1006               	iorwf	___lldiv@divisor+1,w,c
  3165  001838  1007               	iorwf	___lldiv@divisor+2,w,c
  3166  00183A  1008               	iorwf	___lldiv@divisor+3,w,c
  3167  00183C  B4D8               	btfsc	status,2,c
  3168  00183E  D02A               	goto	l237
  3169  001840  0E01               	movlw	1
  3170  001842  6E0D               	movwf	___lldiv@counter,c
  3171  001844  D006               	goto	l1657
  3172  001846                     l1655:
  3173  001846  90D8               	bcf	status,0,c
  3174  001848  3605               	rlcf	___lldiv@divisor,f,c
  3175  00184A  3606               	rlcf	___lldiv@divisor+1,f,c
  3176  00184C  3607               	rlcf	___lldiv@divisor+2,f,c
  3177  00184E  3608               	rlcf	___lldiv@divisor+3,f,c
  3178  001850  2A0D               	incf	___lldiv@counter,f,c
  3179  001852                     l1657:
  3180  001852  AE08               	btfss	___lldiv@divisor+3,7,c
  3181  001854  D7F8               	goto	l1655
  3182  001856                     u1070:
  3183  001856  90D8               	bcf	status,0,c
  3184  001858  3609               	rlcf	___lldiv@quotient,f,c
  3185  00185A  360A               	rlcf	___lldiv@quotient+1,f,c
  3186  00185C  360B               	rlcf	___lldiv@quotient+2,f,c
  3187  00185E  360C               	rlcf	___lldiv@quotient+3,f,c
  3188  001860  5005               	movf	___lldiv@divisor,w,c
  3189  001862  5C01               	subwf	___lldiv@dividend,w,c
  3190  001864  5006               	movf	___lldiv@divisor+1,w,c
  3191  001866  5802               	subwfb	___lldiv@dividend+1,w,c
  3192  001868  5007               	movf	___lldiv@divisor+2,w,c
  3193  00186A  5803               	subwfb	___lldiv@dividend+2,w,c
  3194  00186C  5008               	movf	___lldiv@divisor+3,w,c
  3195  00186E  5804               	subwfb	___lldiv@dividend+3,w,c
  3196  001870  A0D8               	btfss	status,0,c
  3197  001872  D009               	goto	l1667
  3198  001874  5005               	movf	___lldiv@divisor,w,c
  3199  001876  5E01               	subwf	___lldiv@dividend,f,c
  3200  001878  5006               	movf	___lldiv@divisor+1,w,c
  3201  00187A  5A02               	subwfb	___lldiv@dividend+1,f,c
  3202  00187C  5007               	movf	___lldiv@divisor+2,w,c
  3203  00187E  5A03               	subwfb	___lldiv@dividend+2,f,c
  3204  001880  5008               	movf	___lldiv@divisor+3,w,c
  3205  001882  5A04               	subwfb	___lldiv@dividend+3,f,c
  3206  001884  8009               	bsf	___lldiv@quotient,0,c
  3207  001886                     l1667:
  3208  001886  90D8               	bcf	status,0,c
  3209  001888  3208               	rrcf	___lldiv@divisor+3,f,c
  3210  00188A  3207               	rrcf	___lldiv@divisor+2,f,c
  3211  00188C  3206               	rrcf	___lldiv@divisor+1,f,c
  3212  00188E  3205               	rrcf	___lldiv@divisor,f,c
  3213  001890  2E0D               	decfsz	___lldiv@counter,f,c
  3214  001892  D7E1               	goto	u1070
  3215  001894                     l237:
  3216  001894  C009  F001         	movff	___lldiv@quotient,?___lldiv
  3217  001898  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  3218  00189C  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  3219  0018A0  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  3220  0018A4  0012               	return		;funcret
  3221  0018A6                     __end_of___lldiv:
  3222                           	opt callstack 0
  3223                           
  3224                           	psect	rparam
  3225  0000                     tosu	equ	0xFFF
  3226                           tosh	equ	0xFFE
  3227                           tosl	equ	0xFFD
  3228                           stkptr	equ	0xFFC
  3229                           pclatu	equ	0xFFB
  3230                           pclath	equ	0xFFA
  3231                           pcl	equ	0xFF9
  3232                           tblptru	equ	0xFF8
  3233                           tblptrh	equ	0xFF7
  3234                           tblptrl	equ	0xFF6
  3235                           tablat	equ	0xFF5
  3236                           prodh	equ	0xFF4
  3237                           prodl	equ	0xFF3
  3238                           indf0	equ	0xFEF
  3239                           postinc0	equ	0xFEE
  3240                           postdec0	equ	0xFED
  3241                           preinc0	equ	0xFEC
  3242                           plusw0	equ	0xFEB
  3243                           fsr0h	equ	0xFEA
  3244                           fsr0l	equ	0xFE9
  3245                           wreg	equ	0xFE8
  3246                           indf1	equ	0xFE7
  3247                           postinc1	equ	0xFE6
  3248                           postdec1	equ	0xFE5
  3249                           preinc1	equ	0xFE4
  3250                           plusw1	equ	0xFE3
  3251                           fsr1h	equ	0xFE2
  3252                           fsr1l	equ	0xFE1
  3253                           bsr	equ	0xFE0
  3254                           indf2	equ	0xFDF
  3255                           postinc2	equ	0xFDE
  3256                           postdec2	equ	0xFDD
  3257                           preinc2	equ	0xFDC
  3258                           plusw2	equ	0xFDB
  3259                           fsr2h	equ	0xFDA
  3260                           fsr2l	equ	0xFD9
  3261                           status	equ	0xFD8


Data Sizes:
    Strings     35
    Constant    23
    Data        0
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    112     120
    BANK0           128      0      32
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_3(CODE[11]), STR_2(CODE[12]), STR_1(CODE[12]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S869_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_3(CODE[11]), STR_2(CODE[12]), STR_1(CODE[12]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 12
		 -> STR_3(CODE[11]), STR_2(CODE[12]), STR_1(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_send_byte
    _abs->___aomod
    _initLCD->_lcdInst
    _lcdInst->_send_byte
    _send_byte->_send_nibble
    _send_nibble->_pulse_e
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_RepeatedStart->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0    7741
                                             99 COMRAM    13    13      0
                    _I2C_Master_Init
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _initLCD
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    6522
                                             91 COMRAM     8     4      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6240
                                             83 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    5886
                                             67 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4448
                                             31 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2799
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1280
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     879
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0     111
                                              3 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     245
                                              4 COMRAM     1     1      0
                            _lcdInst
                          _send_byte
                        _send_nibble
 ---------------------------------------------------------------------------------
 (1) _lcdInst                                              1     1      0     111
                                              3 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (6) _send_byte                                            1     1      0      89
                                              2 COMRAM     1     1      0
                        _send_nibble
 ---------------------------------------------------------------------------------
 (7) _send_nibble                                          1     1      0      45
                                              1 COMRAM     1     1      0
                            _pulse_e
 ---------------------------------------------------------------------------------
 (8) _pulse_e                                              1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     174
                                              1 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      2     2      0      45
                                              1 COMRAM     2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                             13 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_RepeatedStart
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _initLCD
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _send_byte
       _send_nibble
         _pulse_e
     _send_nibble
       _pulse_e
   _lcdInst
     _send_byte
       _send_nibble
         _pulse_e
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _fputc
           _putch
             _send_byte
               _send_nibble
                 _pulse_e

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      20       5       25.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     70      78       1       94.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      98      34        0.0%
DATA                 0      0      98       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Apr 09 00:36:40 2019

                      __CFG_CPD$ON 000000                        __CFG_BORV$3 000000  
                     __CFG_CP0$OFF 000000                       __CFG_CP1$OFF 000000  
                     __CFG_CP2$OFF 000000                       __CFG_CP3$OFF 000000  
                      __CFG_OSC$HS 000000                                l162 17BC  
                              l237 1894                                l173 10AE  
                              l175 10B6                                l885 1A8A  
                     __CFG_CPB$OFF 000000                                u610 18B6  
                              u700 1A70                                u630 18FE  
                              u810 16EC                                u731 1458  
                              u900 10CA                                u750 1490  
                              u910 11E6                                u840 1064  
                              u930 1208                                u850 1066  
                              u595 1AE4                                u931 1206  
                              u596 1AE6                                u940 1216  
                              u950 121A                                u880 10A4  
                              u970 1226                                _abs 1A62  
                              _pad 178E                                wreg 000FE8  
                     __CFG_LVP$OFF 000000                       __CFG_WDT$OFF 000000  
                             ?_abs 0013                               l1411 1A4A  
                             l1501 1696                               l1511 16E8  
                             l1407 1A34                               l1415 1A9E  
                             l1431 17B4                               l1521 1746  
                             l1505 16BA                               l1417 1AA2  
                             l1441 180A                               l1433 17C6  
                             l1427 17A6                               l1525 176C  
                             l1517 1730                               l1509 16D4  
                             l1437 17DE                               l1471 148C  
                             l1463 1452                               l1535 1092  
                             l1615 13A8                               l1481 14E8  
                             l1457 142A                               l1553 10E0  
                             l1609 136C                               l1625 13CA  
                             l1563 11D8                               l1619 13B2  
                             l1469 1478                               l1485 14FE  
                             l1397 18BE                               l1549 10D0  
                             l1645 19EA                               l1655 1846  
                             l1583 123C                               l1647 1A0E  
                             l1657 1852                               l1489 1524  
                             l1667 1886                               l1587 1254  
                             l1771 15D8                               l1749 1586  
                             ?_pad 0015                               STR_1 1018  
                             STR_2 1024                               STR_3 1030  
                             u1010 12EE                               u1105 1B50  
                             u1106 1B52                               u1070 1856  
                             u1207 1930                               u1217 1942  
                             u1227 1964                               u1237 1ACC  
                             _LATB 000F8A                               u1095 19A4  
                             u1247 1AD6                               _LATD 000F8C  
                             u1177 15FE                               u1187 165A  
                             u1197 1918                               abs@a 0013  
                             _dbuf 0080   __end_of_I2C_Master_RepeatedStart 1BCC  
                             _main 1546                               _dtoa 103C  
                             _keys 1001                               _prec 0075  
                             _nout 0071                               pad@i 001C  
                             pad@p 0019                               fsr1h 000FE2  
                             fsr2h 000FDA                               indf2 000FDF  
                             fsr1l 000FE1                               pad@w 001E  
                             fsr2l 000FD9                               start 0000  
                    __CFG_IESO$OFF 000000                      __CFG_MCLRE$ON 000000  
                     ___param_bank 000000                              ??_abs 0015  
                            ??_pad 001B              I2C_Master_Read@ackBit 0002  
                 ?_I2C_Master_Init 000E                   ?_I2C_Master_Read 0001  
                 ?_I2C_Master_Wait 0001                   ?_I2C_Master_Stop 0001  
                  __end_of___aodiv 1546                              ?_main 0001  
                            ?_dtoa 0020                    __end_of___aomod 178E  
                  __end_of___lldiv 18A6                       vfpfcnvrt@fmt 0046  
                            _TRISB 000F93                              _TRISD 000F95  
                    __CFG_PWRT$OFF 000000                      __CFG_WRT0$OFF 000000  
                    __CFG_WRT1$OFF 000000                      __CFG_WRT2$OFF 000000  
                    __CFG_WRT3$OFF 000000                    __end_of_lcdInst 1BAA  
                   __CFG_EBTR0$OFF 000000                     __CFG_FCMEN$OFF 000000  
                   __CFG_EBTR1$OFF 000000                     __CFG_EBTR2$OFF 000000  
                   __CFG_EBTR3$OFF 000000                      __CFG_WRTB$OFF 000000  
                    __CFG_WRTC$OFF 000000                      __CFG_WRTD$OFF 000000  
                  __end_of_initLCD 197C                     __CFG_EBTRB$OFF 000000  
                            _flags 0077                              _fputc 18A6  
                            _fputs 1A2A                              pad@fp 0015  
                            _width 0073                              _putch 1B92  
                            dtoa@d 0022                              dtoa@i 0042  
                            dtoa@n 003A                              dtoa@p 0034  
                            dtoa@s 0038                              dtoa@w 0036  
                            tablat 000FF5                    send_nibble@data 0002  
                  __end_of_pulse_e 1AE8                              status 000FD8  
      I2C_Master_Read@receivedByte 0003                     __CFG_PBADEN$ON 000000  
                  __initialization 1AE8                       __end_of_main 166A  
                     __end_of_dtoa 127E                       __end_of_keys 1012  
                           ??_main 0064                             ??_dtoa 002A  
                    __activetblptr 000001                  ?_I2C_Master_Start 0001  
                ?_I2C_Master_Write 0002                 ??_I2C_Master_Start 0002  
                           _ADCON1 000FC1                 ??_I2C_Master_Write 0004  
                     ?_send_nibble 0001                             ?_fputc 0005  
                           ?_fputs 000E                             ?_putch 0001  
                           _SSPADD 000FC8                             _SSPBUF 000FC9  
                   __CFG_XINST$OFF 000000           _I2C_Master_RepeatedStart 1BC4  
                     vfprintf@cfmt 005A                          ??___aodiv 0011  
                        ??___aomod 0011                     __CFG_STVREN$ON 000000  
                        ??___lldiv 0009                             clear_0 1AEE  
                           clear_1 1AFA                          ??_lcdInst 0004  
                           _printf 1B0E                             pad@buf 0017  
                           dtoa@fp 0020                             _strlen 1A94  
                        ??_initLCD 0005                             fputc@c 0005  
                           fputs@c 0012                             fputs@i 0013  
                           fputs@s 000E                       __mediumconst 0000  
                           tblptrh 000FF7                             tblptrl 000FF6  
                           tblptru 000FF8                   __end_of_vfprintf 1A2A  
                        ??_pulse_e 0001              pulse_e@interruptState 0001  
                       __accesstop 0080            __end_of__initialization 1B00  
                    ___rparam_used 000001                     __pcstackCOMRAM 0001  
                    __end_of_fputc 1912                      __end_of_fputs 1A62  
                    __end_of_putch 1B9E                            ??_fputc 0009  
                          ??_fputs 0012                            ??_putch 0004  
                       __pbssBANK0 0080                 __size_of_send_byte 0012  
                          ?_printf 005C                            ?_strlen 0001  
               __size_of_vfpfcnvrt 0180                            _SSPCON1 000FC6  
                          _SSPCON2 000FC5                            _SSPSTAT 000FC7  
             __size_of_send_nibble 0016                            __Hparam 0000  
                          __Lparam 0000                            ___aodiv 13FE  
                          ___aomod 166A                            ___lldiv 1824  
                        ?_vfprintf 0054                       __psmallconst 1000  
                          __pcinit 1AE8                            _main$91 0068  
                          __ramtop 1000                            _lcdInst 1B9E  
                          __ptext0 1546                            __ptext1 1B0E  
                          __ptext2 19D8                            __ptext3 127E  
                          __ptext4 103C                            __ptext5 178E  
                          __ptext6 1A94                            __ptext7 1A2A  
                          __ptext8 18A6                            __ptext9 1B92  
                  __size_of_printf 0026                    __size_of_strlen 002A  
                          _initLCD 1912                       __size_of_abs 0032  
                     __size_of_pad 0096           __size_of_I2C_Master_Init 005C  
         __size_of_I2C_Master_Read 0024           __size_of_I2C_Master_Wait 0012  
         __size_of_I2C_Master_Stop 0008                            _pulse_e 1ABE  
             end_of_initialization 1B00         ??_I2C_Master_RepeatedStart 0002  
            __end_of_LCD_SIZE_HORZ 1016                  __end_of_send_byte 1B80  
            __end_of_LCD_SIZE_VERT 1015                            fputc@fp 0007  
                          fputs@fp 0010          __size_of_I2C_Master_Start 0008  
        __size_of_I2C_Master_Write 000A                    ___lldiv@divisor 0005  
                  ___lldiv@counter 000D                  __end_of_vfpfcnvrt 13FE  
                          postdec2 000FDD                            postinc0 000FEE  
                          postinc1 000FE6                            postinc2 000FDE  
                       ??_vfprintf 005A                            strlen@a 0003  
                          strlen@s 0001                          _TRISCbits 000F94  
                       main@data_g 0069                      send_byte@data 0003  
                      vfpfcnvrt@ap 0048                        vfpfcnvrt@fp 0044  
                      vfpfcnvrt@ll 004C                     __end_of_printf 1B34  
                   __end_of_strlen 1ABE                start_initialization 1AE8  
                      __end_of_abs 1A94                        __end_of_pad 1824  
                ??_I2C_Master_Init 0012                  ??_I2C_Master_Read 0002  
                ??_I2C_Master_Wait 0001                  ??_I2C_Master_Stop 0002  
                      vfprintf@fmt 0056           I2C_Master_Init@clockFreq 000E  
                 __CFG_LPT1OSC$OFF 000000                           ??_printf 0060  
                         ??_strlen 0003                        __pbssCOMRAM 0071  
                 ___aodiv@dividend 0001                   _I2C_Master_Start 1BBC  
                 _I2C_Master_Write 1BAA                  __CFG_CCP2MX$PORTC 000000  
                         ?___aodiv 0001                           ?___aomod 0001  
                 ___aodiv@quotient 0013                           ?___lldiv 0001  
                         ?_lcdInst 0001                  __size_of_vfprintf 0052  
                         ?_initLCD 0001                        __smallconst 1000  
                    ??_send_nibble 0002                           ?_pulse_e 0001  
                   __size_of_fputc 006C                     __size_of_fputs 0038  
                   __size_of_putch 000C                           _LATDbits 000F8C  
                        _send_byte 1B6E                     _LCD_LINE1_ADDR 1013  
                   _LCD_LINE2_ADDR 1017                     _LCD_LINE3_ADDR 1016  
                   _LCD_LINE4_ADDR 1012                   __CFG_WDTPS$32768 000000  
                        _vfpfcnvrt 127E             __end_of_LCD_LINE1_ADDR 1014  
           __end_of_LCD_LINE2_ADDR 1018             __end_of_LCD_LINE3_ADDR 1017  
           __end_of_LCD_LINE4_ADDR 1013                __end_of_send_nibble 1B6E  
                       ?_send_byte 0001                           __Hrparam 0000  
                       vfprintf@ap 0058                           __Lrparam 0000  
                       vfprintf@fp 0054                       __Lsmallconst 1000  
               __CFG_BOREN$SBORDIS 000000                   __size_of___aodiv 0148  
__size_of_I2C_Master_RepeatedStart 0008                   __size_of___aomod 0124  
        ?_I2C_Master_RepeatedStart 0001                   __size_of___lldiv 0082  
                       ?_vfpfcnvrt 0044                    ___aodiv@divisor 0009  
                  ___aodiv@counter 0011                   __size_of_lcdInst 000C  
                  _I2C_Master_Init 197C                    _I2C_Master_Read 1B34  
                 __size_of_initLCD 006A                    _I2C_Master_Wait 1B80  
                  _I2C_Master_Stop 1BB4                           _dtoa$408 0032  
                         __ptext10 1A62                           __ptext11 166A  
                         __ptext20 1BBC                           __ptext12 13FE  
                         __ptext21 1BC4                           __ptext13 1912  
                         __ptext22 1B34                           __ptext14 1B9E  
                         __ptext23 1B80                           __ptext15 1B6E  
                         __ptext24 197C                           __ptext16 1B58  
                         __ptext25 1824                           __ptext17 1ABE  
                         __ptext18 1BAA                           __ptext19 1BB4  
                 __size_of_pulse_e 002A                      __size_of_main 0124  
                    __size_of_dtoa 0242                           _vfprintf 19D8  
                         main@data 006B                          printf@fmt 005C  
      I2C_Master_Write@byteToWrite 0002                   ___aomod@dividend 0001  
                        putch@data 0004           __end_of_I2C_Master_Start 1BC4  
         __end_of_I2C_Master_Write 1BB4                         _INTCONbits 000FF2  
                      _send_nibble 1B58                      _LCD_SIZE_HORZ 1015  
                    _LCD_SIZE_VERT 1014                   ___lldiv@dividend 0001  
                      ??_send_byte 0003                           printf@ap 0062  
          __end_of_I2C_Master_Init 19D8                    ___aomod@divisor 0009  
          __end_of_I2C_Master_Read 1B58            __end_of_I2C_Master_Wait 1B92  
          __end_of_I2C_Master_Stop 1BBC                        ??_vfpfcnvrt 004A  
                      lcdInst@data 0004                    ___aomod@counter 0011  
                 ___lldiv@quotient 0009                        _SSPCON1bits 000FC6  
                      _SSPCON2bits 000FC5                       ___aodiv@sign 0012  
                     ___aomod@sign 0012  
