

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Apr 07 19:30:46 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1,inline
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1,inline
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    38  0000                     
    39                           ; Version 2.05
    40                           ; Generated 20/12/2018 GMT
    41                           ; 
    42                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC18F4620 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     
    74                           	psect	smallconst
    75  001000                     __psmallconst:
    76                           	opt callstack 0
    77  001000  00                 	db	0
    78  001001                     _keys:
    79                           	opt callstack 0
    80  001001  31                 	db	49
    81  001002  32                 	db	50
    82  001003  33                 	db	51
    83  001004  41                 	db	65
    84  001005  34                 	db	52
    85  001006  35                 	db	53
    86  001007  36                 	db	54
    87  001008  42                 	db	66
    88  001009  37                 	db	55
    89  00100A  38                 	db	56
    90  00100B  39                 	db	57
    91  00100C  43                 	db	67
    92  00100D  2A                 	db	42
    93  00100E  30                 	db	48
    94  00100F  23                 	db	35
    95  001010  44                 	db	68
    96  001011  00                 	db	0
    97  001012                     __end_of_keys:
    98                           	opt callstack 0
    99  001012                     _LCD_LINE4_ADDR:
   100                           	opt callstack 0
   101  001012  50                 	db	80
   102  001013                     __end_of_LCD_LINE4_ADDR:
   103                           	opt callstack 0
   104  001013                     _LCD_LINE3_ADDR:
   105                           	opt callstack 0
   106  001013  10                 	db	16
   107  001014                     __end_of_LCD_LINE3_ADDR:
   108                           	opt callstack 0
   109  001014                     _LCD_LINE1_ADDR:
   110                           	opt callstack 0
   111  001014  00                 	db	0
   112  001015                     __end_of_LCD_LINE1_ADDR:
   113                           	opt callstack 0
   114  001015                     _LCD_SIZE_VERT:
   115                           	opt callstack 0
   116  001015  04                 	db	4
   117  001016                     __end_of_LCD_SIZE_VERT:
   118                           	opt callstack 0
   119  001016                     _LCD_SIZE_HORZ:
   120                           	opt callstack 0
   121  001016  10                 	db	16
   122  001017                     __end_of_LCD_SIZE_HORZ:
   123                           	opt callstack 0
   124  001017  40                 	db	64
   125  001018                     __end_of_LCD_LINE2_ADDR:
   126                           	opt callstack 0
   127  0000                     _LATDbits	set	3980
   128  0000                     _INTCONbits	set	4082
   129  0000                     _SSPBUF	set	4041
   130  0000                     _SSPCON2bits	set	4037
   131  0000                     _SSPCON1	set	4038
   132  0000                     _SSPADD	set	4040
   133  0000                     _TRISCbits	set	3988
   134  0000                     _SSPCON1bits	set	4038
   135  0000                     _SSPCON2	set	4037
   136  0000                     _SSPSTAT	set	4039
   137  0000                     _ADCON1	set	4033
   138  0000                     _TRISD	set	3989
   139  0000                     _LATD	set	3980
   140  0000                     _TRISB	set	3987
   141  0000                     _LATB	set	3978
   142  001018                     STR_1:
   143  001018  64                 	db	100	;'d'
   144  001019  61                 	db	97	;'a'
   145  00101A  74                 	db	116	;'t'
   146  00101B  61                 	db	97	;'a'
   147  00101C  5B                 	db	91	;'['
   148  00101D  30                 	db	48	;'0'
   149  00101E  5D                 	db	93	;']'
   150  00101F  2C                 	db	44
   151  001020  20                 	db	32
   152  001021  25                 	db	37
   153  001022  64                 	db	100	;'d'
   154  001023  00                 	db	0
   155  001024                     STR_2:
   156  001024  64                 	db	100	;'d'
   157  001025  61                 	db	97	;'a'
   158  001026  74                 	db	116	;'t'
   159  001027  61                 	db	97	;'a'
   160  001028  5B                 	db	91	;'['
   161  001029  31                 	db	49	;'1'
   162  00102A  5D                 	db	93	;']'
   163  00102B  2C                 	db	44
   164  00102C  20                 	db	32
   165  00102D  25                 	db	37
   166  00102E  64                 	db	100	;'d'
   167  00102F  00                 	db	0
   168                           
   169                           ; #config settings
   170  001030  00                 	db	0	; dummy byte at the end
   171  0000                     
   172                           	psect	cinit
   173  001A90                     __pcinit:
   174                           	opt callstack 0
   175  001A90                     start_initialization:
   176                           	opt callstack 0
   177  001A90                     __initialization:
   178                           	opt callstack 0
   179                           
   180                           ; Clear objects allocated to BANK0 (32 bytes)
   181  001A90  EE00  F080         	lfsr	0,__pbssBANK0
   182  001A94  0E20               	movlw	32
   183  001A96                     clear_0:
   184  001A96  6AEE               	clrf	postinc0,c
   185  001A98  06E8               	decf	wreg,f,c
   186  001A9A  E1FD               	bnz	clear_0
   187                           
   188                           ; Clear objects allocated to COMRAM (8 bytes)
   189  001A9C  EE00  F071         	lfsr	0,__pbssCOMRAM
   190  001AA0  0E08               	movlw	8
   191  001AA2                     clear_1:
   192  001AA2  6AEE               	clrf	postinc0,c
   193  001AA4  06E8               	decf	wreg,f,c
   194  001AA6  E1FD               	bnz	clear_1
   195  001AA8                     end_of_initialization:
   196                           	opt callstack 0
   197  001AA8                     __end_of__initialization:
   198                           	opt callstack 0
   199  001AA8  0E00               	movlw	low (__Lsmallconst shr (0+16))
   200  001AAA  6EF8               	movwf	tblptru,c
   201  001AAC  0E10               	movlw	high __Lsmallconst
   202  001AAE  6EF7               	movwf	tblptrh,c
   203  001AB0  0100               	movlb	0
   204  001AB2  EF30  F00B         	goto	_main	;jump to C main() function
   205                           
   206                           	psect	bssCOMRAM
   207  000071                     __pbssCOMRAM:
   208                           	opt callstack 0
   209  000071                     _nout:
   210                           	opt callstack 0
   211  000071                     	ds	2
   212  000073                     _width:
   213                           	opt callstack 0
   214  000073                     	ds	2
   215  000075                     _prec:
   216                           	opt callstack 0
   217  000075                     	ds	2
   218  000077                     _flags:
   219                           	opt callstack 0
   220  000077                     	ds	2
   221                           
   222                           	psect	bssBANK0
   223  000080                     __pbssBANK0:
   224                           	opt callstack 0
   225  000080                     _dbuf:
   226                           	opt callstack 0
   227  000080                     	ds	32
   228                           
   229                           	psect	cstackCOMRAM
   230  000001                     __pcstackCOMRAM:
   231                           	opt callstack 0
   232  000001                     ??_I2C_Master_Wait:
   233  000001                     ?_strlen:
   234                           	opt callstack 0
   235  000001                     ?___lldiv:
   236                           	opt callstack 0
   237  000001                     ?___aodiv:
   238                           	opt callstack 0
   239  000001                     ?___aomod:
   240                           	opt callstack 0
   241  000001                     pulse_e@interruptState:
   242                           	opt callstack 0
   243  000001                     strlen@s:
   244                           	opt callstack 0
   245  000001                     ___lldiv@dividend:
   246                           	opt callstack 0
   247  000001                     ___aodiv@dividend:
   248                           	opt callstack 0
   249  000001                     ___aomod@dividend:
   250                           	opt callstack 0
   251                           
   252                           ; 8 bytes @ 0x0
   253  000001                     	ds	1
   254  000002                     I2C_Master_Read@ackBit:
   255                           	opt callstack 0
   256  000002                     send_nibble@data:
   257                           	opt callstack 0
   258  000002                     I2C_Master_Write@byteToWrite:
   259                           	opt callstack 0
   260                           
   261                           ; 2 bytes @ 0x1
   262  000002                     	ds	1
   263  000003                     I2C_Master_Read@receivedByte:
   264                           	opt callstack 0
   265  000003                     send_byte@data:
   266                           	opt callstack 0
   267  000003                     strlen@a:
   268                           	opt callstack 0
   269                           
   270                           ; 2 bytes @ 0x2
   271  000003                     	ds	1
   272  000004                     lcdInst@data:
   273                           	opt callstack 0
   274  000004                     putch@data:
   275                           	opt callstack 0
   276                           
   277                           ; 1 bytes @ 0x3
   278  000004                     	ds	1
   279  000005                     ??_initLCD:
   280  000005                     fputc@c:
   281                           	opt callstack 0
   282  000005                     ___lldiv@divisor:
   283                           	opt callstack 0
   284                           
   285                           ; 4 bytes @ 0x4
   286  000005                     	ds	2
   287  000007                     fputc@fp:
   288                           	opt callstack 0
   289                           
   290                           ; 2 bytes @ 0x6
   291  000007                     	ds	2
   292  000009                     ??_fputc:
   293  000009                     ___lldiv@quotient:
   294                           	opt callstack 0
   295  000009                     ___aodiv@divisor:
   296                           	opt callstack 0
   297  000009                     ___aomod@divisor:
   298                           	opt callstack 0
   299                           
   300                           ; 8 bytes @ 0x8
   301  000009                     	ds	4
   302  00000D                     ___lldiv@counter:
   303                           	opt callstack 0
   304                           
   305                           ; 1 bytes @ 0xC
   306  00000D                     	ds	1
   307  00000E                     fputs@s:
   308                           	opt callstack 0
   309  00000E                     I2C_Master_Init@clockFreq:
   310                           	opt callstack 0
   311                           
   312                           ; 4 bytes @ 0xD
   313  00000E                     	ds	2
   314  000010                     fputs@fp:
   315                           	opt callstack 0
   316                           
   317                           ; 2 bytes @ 0xF
   318  000010                     	ds	1
   319  000011                     ___aodiv@counter:
   320                           	opt callstack 0
   321  000011                     ___aomod@counter:
   322                           	opt callstack 0
   323                           
   324                           ; 1 bytes @ 0x10
   325  000011                     	ds	1
   326  000012                     ??_I2C_Master_Init:
   327  000012                     ___aodiv@sign:
   328                           	opt callstack 0
   329  000012                     ___aomod@sign:
   330                           	opt callstack 0
   331  000012                     fputs@c:
   332                           	opt callstack 0
   333                           
   334                           ; 1 bytes @ 0x11
   335  000012                     	ds	1
   336  000013                     ?_abs:
   337                           	opt callstack 0
   338  000013                     abs@a:
   339                           	opt callstack 0
   340  000013                     fputs@i:
   341                           	opt callstack 0
   342  000013                     ___aodiv@quotient:
   343                           	opt callstack 0
   344                           
   345                           ; 8 bytes @ 0x12
   346  000013                     	ds	2
   347  000015                     ??_abs:
   348  000015                     ?_pad:
   349                           	opt callstack 0
   350  000015                     pad@fp:
   351                           	opt callstack 0
   352                           
   353                           ; 2 bytes @ 0x14
   354  000015                     	ds	2
   355  000017                     pad@buf:
   356                           	opt callstack 0
   357                           
   358                           ; 2 bytes @ 0x16
   359  000017                     	ds	2
   360  000019                     pad@p:
   361                           	opt callstack 0
   362                           
   363                           ; 2 bytes @ 0x18
   364  000019                     	ds	2
   365  00001B                     ??_pad:
   366                           
   367                           ; 1 bytes @ 0x1A
   368  00001B                     	ds	1
   369  00001C                     pad@i:
   370                           	opt callstack 0
   371                           
   372                           ; 2 bytes @ 0x1B
   373  00001C                     	ds	2
   374  00001E                     pad@w:
   375                           	opt callstack 0
   376                           
   377                           ; 2 bytes @ 0x1D
   378  00001E                     	ds	2
   379  000020                     ?_dtoa:
   380                           	opt callstack 0
   381  000020                     dtoa@fp:
   382                           	opt callstack 0
   383                           
   384                           ; 2 bytes @ 0x1F
   385  000020                     	ds	2
   386  000022                     dtoa@d:
   387                           	opt callstack 0
   388                           
   389                           ; 8 bytes @ 0x21
   390  000022                     	ds	8
   391  00002A                     ??_dtoa:
   392                           
   393                           ; 1 bytes @ 0x29
   394  00002A                     	ds	8
   395  000032                     _dtoa$404:
   396                           	opt callstack 0
   397                           
   398                           ; 2 bytes @ 0x31
   399  000032                     	ds	2
   400  000034                     dtoa@p:
   401                           	opt callstack 0
   402                           
   403                           ; 2 bytes @ 0x33
   404  000034                     	ds	2
   405  000036                     dtoa@w:
   406                           	opt callstack 0
   407                           
   408                           ; 2 bytes @ 0x35
   409  000036                     	ds	2
   410  000038                     dtoa@s:
   411                           	opt callstack 0
   412                           
   413                           ; 2 bytes @ 0x37
   414  000038                     	ds	2
   415  00003A                     dtoa@n:
   416                           	opt callstack 0
   417                           
   418                           ; 8 bytes @ 0x39
   419  00003A                     	ds	8
   420  000042                     dtoa@i:
   421                           	opt callstack 0
   422                           
   423                           ; 2 bytes @ 0x41
   424  000042                     	ds	2
   425  000044                     ?_vfpfcnvrt:
   426                           	opt callstack 0
   427  000044                     vfpfcnvrt@fp:
   428                           	opt callstack 0
   429                           
   430                           ; 2 bytes @ 0x43
   431  000044                     	ds	2
   432  000046                     vfpfcnvrt@fmt:
   433                           	opt callstack 0
   434                           
   435                           ; 2 bytes @ 0x45
   436  000046                     	ds	2
   437  000048                     vfpfcnvrt@ap:
   438                           	opt callstack 0
   439                           
   440                           ; 2 bytes @ 0x47
   441  000048                     	ds	2
   442  00004A                     ??_vfpfcnvrt:
   443                           
   444                           ; 1 bytes @ 0x49
   445  00004A                     	ds	2
   446  00004C                     vfpfcnvrt@ll:
   447                           	opt callstack 0
   448                           
   449                           ; 8 bytes @ 0x4B
   450  00004C                     	ds	8
   451  000054                     ?_vfprintf:
   452                           	opt callstack 0
   453  000054                     vfprintf@fp:
   454                           	opt callstack 0
   455                           
   456                           ; 2 bytes @ 0x53
   457  000054                     	ds	2
   458  000056                     vfprintf@fmt:
   459                           	opt callstack 0
   460                           
   461                           ; 2 bytes @ 0x55
   462  000056                     	ds	2
   463  000058                     vfprintf@ap:
   464                           	opt callstack 0
   465                           
   466                           ; 2 bytes @ 0x57
   467  000058                     	ds	2
   468  00005A                     vfprintf@cfmt:
   469                           	opt callstack 0
   470                           
   471                           ; 2 bytes @ 0x59
   472  00005A                     	ds	2
   473  00005C                     ?_printf:
   474                           	opt callstack 0
   475  00005C                     printf@fmt:
   476                           	opt callstack 0
   477                           
   478                           ; 2 bytes @ 0x5B
   479  00005C                     	ds	4
   480  000060                     
   481                           ; 1 bytes @ 0x5F
   482  000060                     	ds	2
   483  000062                     printf@ap:
   484                           	opt callstack 0
   485                           
   486                           ; 2 bytes @ 0x61
   487  000062                     	ds	2
   488  000064                     ??_main:
   489                           
   490                           ; 1 bytes @ 0x63
   491  000064                     	ds	4
   492  000068                     main@data_g:
   493                           	opt callstack 0
   494                           
   495                           ; 2 bytes @ 0x67
   496  000068                     	ds	2
   497  00006A                     _main$84:
   498                           	opt callstack 0
   499                           
   500                           ; 1 bytes @ 0x69
   501  00006A                     	ds	1
   502  00006B                     main@data:
   503                           	opt callstack 0
   504                           
   505                           ; 6 bytes @ 0x6A
   506  00006B                     	ds	6
   507                           
   508 ;;
   509 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   510 ;;
   511 ;; *************** function _main *****************
   512 ;; Defined at:
   513 ;;		line 33 in file "main.c"
   514 ;; Parameters:    Size  Location     Type
   515 ;;		None
   516 ;; Auto vars:     Size  Location     Type
   517 ;;  data            6  106[COMRAM] int [3]
   518 ;;  mem             3    0        unsigned char [3]
   519 ;;  data_g          2  103[COMRAM] unsigned int 
   520 ;;  send            1    0        _Bool 
   521 ;;  counter         1    0        unsigned char 
   522 ;;  dataa           1    0        unsigned char 
   523 ;;  keypress        1    0        unsigned char 
   524 ;; Return value:  Size  Location     Type
   525 ;;                  1    wreg      void 
   526 ;; Registers used:
   527 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   528 ;; Tracked objects:
   529 ;;		On entry : 0/0
   530 ;;		On exit  : 0/0
   531 ;;		Unchanged: 0/0
   532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   534 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   535 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   536 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   537 ;;Total ram usage:       13 bytes
   538 ;; Hardware stack levels required when called:   11
   539 ;; This function calls:
   540 ;;		_I2C_Master_Init
   541 ;;		_I2C_Master_Read
   542 ;;		_I2C_Master_RepeatedStart
   543 ;;		_I2C_Master_Start
   544 ;;		_I2C_Master_Stop
   545 ;;		_I2C_Master_Write
   546 ;;		_initLCD
   547 ;;		_lcdInst
   548 ;;		_printf
   549 ;; This function is called by:
   550 ;;		Startup code after reset
   551 ;; This function uses a non-reentrant model
   552 ;;
   553                           
   554                           	psect	text0
   555  001660                     __ptext0:
   556                           	opt callstack 0
   557  001660                     _main:
   558                           	opt callstack 20
   559                           
   560                           ;main.c: 35:     LATB = 0x00;
   561                           
   562                           ;incstack = 0
   563  001660  0E00               	movlw	0
   564  001662  6E8A               	movwf	3978,c	;volatile
   565                           
   566                           ;main.c: 36:     TRISB = 0b11110010;
   567  001664  0EF2               	movlw	242
   568  001666  6E93               	movwf	3987,c	;volatile
   569                           
   570                           ;main.c: 41:     LATD = 0x00;
   571  001668  0E00               	movlw	0
   572  00166A  6E8C               	movwf	3980,c	;volatile
   573                           
   574                           ;main.c: 42:     TRISD = 0x00;
   575  00166C  0E00               	movlw	0
   576  00166E  6E95               	movwf	3989,c	;volatile
   577                           
   578                           ;main.c: 45:     ADCON1 = 0b00001111;
   579  001670  0E0F               	movlw	15
   580  001672  6EC1               	movwf	4033,c	;volatile
   581                           
   582                           ;main.c: 47:     initLCD();
   583  001674  EC5D  F00C         	call	_initLCD	;wreg free
   584                           
   585                           ;main.c: 54:     I2C_Master_Init(100000);
   586  001678  0EA0               	movlw	160
   587  00167A  6E0E               	movwf	I2C_Master_Init@clockFreq,c
   588  00167C  0E86               	movlw	134
   589  00167E  6E0F               	movwf	I2C_Master_Init@clockFreq+1,c
   590  001680  0E01               	movlw	1
   591  001682  6E10               	movwf	I2C_Master_Init@clockFreq+2,c
   592  001684  0E00               	movlw	0
   593  001686  6E11               	movwf	I2C_Master_Init@clockFreq+3,c
   594  001688  EC92  F00C         	call	_I2C_Master_Init	;wreg free
   595                           
   596                           ;main.c: 55:     I2C_Master_Start();
   597  00168C  ECB2  F00D         	call	_I2C_Master_Start	;wreg free
   598                           
   599                           ;main.c: 56:     I2C_Master_Write(0b00010000);
   600  001690  0E00               	movlw	0
   601  001692  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
   602  001694  0E10               	movlw	16
   603  001696  6E02               	movwf	I2C_Master_Write@byteToWrite,c
   604  001698  ECA9  F00D         	call	_I2C_Master_Write	;wreg free
   605                           
   606                           ;main.c: 57:     I2C_Master_Stop();
   607  00169C  ECAE  F00D         	call	_I2C_Master_Stop	;wreg free
   608  0016A0                     
   609                           ;main.c: 101:             I2C_Master_RepeatedStart();
   610  0016A0  ECB6  F00D         	call	_I2C_Master_RepeatedStart	;wreg free
   611                           
   612                           ;main.c: 102:             I2C_Master_Write(0b00010001);
   613  0016A4  0E00               	movlw	0
   614  0016A6  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
   615  0016A8  0E11               	movlw	17
   616  0016AA  6E02               	movwf	I2C_Master_Write@byteToWrite,c
   617  0016AC  ECA9  F00D         	call	_I2C_Master_Write	;wreg free
   618                           
   619                           ;main.c: 103:             data[0] = I2C_Master_Read(0);
   620  0016B0  0E00               	movlw	0
   621  0016B2  EC6E  F00D         	call	_I2C_Master_Read
   622  0016B6  6E64               	movwf	??_main& (0+255),c
   623  0016B8  5064               	movf	??_main,w,c
   624  0016BA  6E6B               	movwf	main@data,c
   625  0016BC  6A6C               	clrf	main@data+1,c
   626                           
   627                           ;main.c: 104:             data[1] = I2C_Master_Read(1);
   628  0016BE  0E01               	movlw	1
   629  0016C0  EC6E  F00D         	call	_I2C_Master_Read
   630  0016C4  6E64               	movwf	??_main& (0+255),c
   631  0016C6  5064               	movf	??_main,w,c
   632  0016C8  6E6D               	movwf	main@data+2,c
   633  0016CA  6A6E               	clrf	main@data+3,c
   634                           
   635                           ;main.c: 106:             data_g = data[0];
   636  0016CC  C06B  F068         	movff	main@data,main@data_g
   637  0016D0  C06C  F069         	movff	main@data+1,main@data_g+1
   638                           
   639                           ;main.c: 107:             data_g = (data_g<<8)||(data[1]);
   640  0016D4  0E01               	movlw	1
   641  0016D6  6E6A               	movwf	_main$84,c
   642  0016D8  5068               	movf	main@data_g,w,c
   643  0016DA  6E65               	movwf	(??_main+1)& (0+255),c
   644  0016DC  6A64               	clrf	??_main& (0+255),c
   645  0016DE  5064               	movf	??_main,w,c
   646  0016E0  1065               	iorwf	??_main+1,w,c
   647  0016E2  A4D8               	btfss	status,2,c
   648  0016E4  D006               	goto	l1757
   649  0016E6  506D               	movf	main@data+2,w,c
   650  0016E8  106E               	iorwf	main@data+3,w,c
   651  0016EA  A4D8               	btfss	status,2,c
   652  0016EC  D002               	goto	l1757
   653  0016EE  0E00               	movlw	0
   654  0016F0  6E6A               	movwf	_main$84,c
   655  0016F2                     l1757:
   656                           
   657                           ;main.c: 110:             I2C_Master_Stop();
   658  0016F2  ECAE  F00D         	call	_I2C_Master_Stop	;wreg free
   659                           
   660                           ;main.c: 113:             if(data[0]&&data[1]){
   661  0016F6  506B               	movf	main@data,w,c
   662  0016F8  106C               	iorwf	main@data+1,w,c
   663  0016FA  B4D8               	btfsc	status,2,c
   664  0016FC  D7D1               	goto	l1735
   665  0016FE  506D               	movf	main@data+2,w,c
   666  001700  106E               	iorwf	main@data+3,w,c
   667  001702  B4D8               	btfsc	status,2,c
   668  001704  D7CD               	goto	l1735
   669                           
   670                           ;main.c: 115:                 printf("data[0], %d", data[0]);
   671  001706  0E18               	movlw	low STR_1
   672  001708  6E5C               	movwf	printf@fmt,c
   673  00170A  0E10               	movlw	high STR_1
   674  00170C  6E5D               	movwf	printf@fmt+1,c
   675  00170E  C06B  F05E         	movff	main@data,?_printf+2
   676  001712  C06C  F05F         	movff	main@data+1,?_printf+3
   677  001716  EC5B  F00D         	call	_printf	;wreg free
   678  00171A  0EC0               	movlw	192
   679  00171C  ECA3  F00D         	call	_lcdInst
   680                           
   681                           ;main.c: 117:                 printf("data[1], %d", data[1]);
   682  001720  0E24               	movlw	low STR_2
   683  001722  6E5C               	movwf	printf@fmt,c
   684  001724  0E10               	movlw	high STR_2
   685  001726  6E5D               	movwf	printf@fmt+1,c
   686  001728  C06D  F05E         	movff	main@data+2,?_printf+2
   687  00172C  C06E  F05F         	movff	main@data+3,?_printf+3
   688  001730  EC5B  F00D         	call	_printf	;wreg free
   689  001734  D7B5               	goto	l1735
   690  001736                     __end_of_main:
   691                           	opt callstack 0
   692                           
   693 ;; *************** function _printf *****************
   694 ;; Defined at:
   695 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
   696 ;; Parameters:    Size  Location     Type
   697 ;;  fmt             2   91[COMRAM] PTR const unsigned char 
   698 ;;		 -> STR_2(12), STR_1(12), 
   699 ;; Auto vars:     Size  Location     Type
   700 ;;  ap              2   97[COMRAM] PTR void [1]
   701 ;;		 -> ?_printf(2), 
   702 ;;  ret             2    0        int 
   703 ;; Return value:  Size  Location     Type
   704 ;;                  2   91[COMRAM] int 
   705 ;; Registers used:
   706 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   707 ;; Tracked objects:
   708 ;;		On entry : 0/0
   709 ;;		On exit  : 0/0
   710 ;;		Unchanged: 0/0
   711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   712 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   713 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   715 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   716 ;;Total ram usage:        8 bytes
   717 ;; Hardware stack levels used:    1
   718 ;; Hardware stack levels required when called:   10
   719 ;; This function calls:
   720 ;;		_vfprintf
   721 ;; This function is called by:
   722 ;;		_main
   723 ;; This function uses a non-reentrant model
   724 ;;
   725                           
   726                           	psect	text1
   727  001AB6                     __ptext1:
   728                           	opt callstack 0
   729  001AB6                     _printf:
   730                           	opt callstack 20
   731                           
   732                           ;incstack = 0
   733  001AB6  0E5E               	movlw	low (?_printf+2)
   734  001AB8  6E62               	movwf	printf@ap,c
   735  001ABA  0E00               	movlw	high (?_printf+2)
   736  001ABC  6E63               	movwf	printf@ap+1,c
   737  001ABE  0E00               	movlw	0
   738  001AC0  6E54               	movwf	vfprintf@fp,c
   739  001AC2  0E00               	movlw	0
   740  001AC4  6E55               	movwf	vfprintf@fp+1,c
   741  001AC6  C05C  F056         	movff	printf@fmt,vfprintf@fmt
   742  001ACA  C05D  F057         	movff	printf@fmt+1,vfprintf@fmt+1
   743  001ACE  0E62               	movlw	low printf@ap
   744  001AD0  6E58               	movwf	vfprintf@ap,c
   745  001AD2  0E00               	movlw	high printf@ap
   746  001AD4  6E59               	movwf	vfprintf@ap+1,c
   747  001AD6  ECC0  F00C         	call	_vfprintf	;wreg free
   748  001ADA  0012               	return		;funcret
   749  001ADC                     __end_of_printf:
   750                           	opt callstack 0
   751                           
   752 ;; *************** function _vfprintf *****************
   753 ;; Defined at:
   754 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
   755 ;; Parameters:    Size  Location     Type
   756 ;;  fp              2   83[COMRAM] PTR struct _IO_FILE
   757 ;;		 -> NULL(0), 
   758 ;;  fmt             2   85[COMRAM] PTR const unsigned char 
   759 ;;		 -> STR_2(12), STR_1(12), 
   760 ;;  ap              2   87[COMRAM] PTR PTR void 
   761 ;;		 -> printf@ap(2), 
   762 ;; Auto vars:     Size  Location     Type
   763 ;;  cfmt            2   89[COMRAM] PTR unsigned char 
   764 ;;		 -> STR_2(12), STR_1(12), 
   765 ;; Return value:  Size  Location     Type
   766 ;;                  2   83[COMRAM] int 
   767 ;; Registers used:
   768 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   769 ;; Tracked objects:
   770 ;;		On entry : 0/0
   771 ;;		On exit  : 0/0
   772 ;;		Unchanged: 0/0
   773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   774 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   775 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   777 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   778 ;;Total ram usage:        8 bytes
   779 ;; Hardware stack levels used:    1
   780 ;; Hardware stack levels required when called:    9
   781 ;; This function calls:
   782 ;;		_vfpfcnvrt
   783 ;; This function is called by:
   784 ;;		_printf
   785 ;; This function uses a non-reentrant model
   786 ;;
   787                           
   788                           	psect	text2
   789  001980                     __ptext2:
   790                           	opt callstack 0
   791  001980                     _vfprintf:
   792                           	opt callstack 20
   793                           
   794                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
   795                           
   796                           ;incstack = 0
   797  001980  C056  F05A         	movff	vfprintf@fmt,vfprintf@cfmt
   798  001984  C057  F05B         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   799                           
   800                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
   801  001988  0E00               	movlw	0
   802  00198A  6E72               	movwf	_nout+1,c
   803  00198C  0E00               	movlw	0
   804  00198E  6E71               	movwf	_nout,c
   805                           
   806                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
   807  001990  D012               	goto	l1633
   808  001992                     l1631:
   809                           
   810                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
   811  001992  C054  F044         	movff	vfprintf@fp,vfpfcnvrt@fp
   812  001996  C055  F045         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   813  00199A  0E5A               	movlw	low vfprintf@cfmt
   814  00199C  6E46               	movwf	vfpfcnvrt@fmt,c
   815  00199E  0E00               	movlw	high vfprintf@cfmt
   816  0019A0  6E47               	movwf	vfpfcnvrt@fmt+1,c
   817  0019A2  C058  F048         	movff	vfprintf@ap,vfpfcnvrt@ap
   818  0019A6  C059  F049         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   819  0019AA  EC3A  F009         	call	_vfpfcnvrt	;wreg free
   820  0019AE  5044               	movf	?_vfpfcnvrt,w,c
   821  0019B0  2671               	addwf	_nout,f,c
   822  0019B2  5045               	movf	?_vfpfcnvrt+1,w,c
   823  0019B4  2272               	addwfc	_nout+1,f,c
   824  0019B6                     l1633:
   825                           
   826                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
   827  0019B6  C05A  FFF6         	movff	vfprintf@cfmt,tblptrl
   828  0019BA  C05B  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   829  0019BE                     	if	0	;tblptru may be non-zero
   830  0019BE                     	endif
   831  0019BE                     	if	0	;tblptru may be non-zero
   832  0019BE                     	endif
   833  0019BE  0008               	tblrd		*
   834  0019C0  50F5               	movf	tablat,w,c
   835  0019C2  0900               	iorlw	0
   836  0019C4  A4D8               	btfss	status,2,c
   837  0019C6  D7E5               	goto	l1631
   838                           
   839                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
   840  0019C8  C071  F054         	movff	_nout,?_vfprintf
   841  0019CC  C072  F055         	movff	_nout+1,?_vfprintf+1
   842  0019D0  0012               	return		;funcret
   843  0019D2                     __end_of_vfprintf:
   844                           	opt callstack 0
   845                           
   846 ;; *************** function _vfpfcnvrt *****************
   847 ;; Defined at:
   848 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
   849 ;; Parameters:    Size  Location     Type
   850 ;;  fp              2   67[COMRAM] PTR struct _IO_FILE
   851 ;;		 -> NULL(0), 
   852 ;;  fmt             2   69[COMRAM] PTR PTR unsigned char 
   853 ;;		 -> vfprintf@cfmt(2), 
   854 ;;  ap              2   71[COMRAM] PTR PTR void 
   855 ;;		 -> printf@ap(2), 
   856 ;; Auto vars:     Size  Location     Type
   857 ;;  ll              8   75[COMRAM] long long 
   858 ;;  llu             8    0        unsigned long long 
   859 ;;  f               4    0        unsigned long long 
   860 ;;  vp              3    0        PTR void 
   861 ;;  ct              3    0        unsigned char [3]
   862 ;;  cp              3    0        PTR unsigned char 
   863 ;;  i               2    0        int 
   864 ;;  done            2    0        int 
   865 ;;  c               1    0        unsigned char 
   866 ;; Return value:  Size  Location     Type
   867 ;;                  2   67[COMRAM] int 
   868 ;; Registers used:
   869 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   870 ;; Tracked objects:
   871 ;;		On entry : 0/0
   872 ;;		On exit  : 0/0
   873 ;;		Unchanged: 0/0
   874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   875 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   876 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   877 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   878 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   879 ;;Total ram usage:       16 bytes
   880 ;; Hardware stack levels used:    1
   881 ;; Hardware stack levels required when called:    8
   882 ;; This function calls:
   883 ;;		_dtoa
   884 ;;		_fputc
   885 ;; This function is called by:
   886 ;;		_vfprintf
   887 ;; This function uses a non-reentrant model
   888 ;;
   889                           
   890                           	psect	text3
   891  001274                     __ptext3:
   892                           	opt callstack 0
   893  001274                     _vfpfcnvrt:
   894                           	opt callstack 20
   895                           
   896                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
   897                           
   898                           ;incstack = 0
   899  001274  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   900  001278  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   901  00127C  CFDE FFF6          	movff	postinc2,tblptrl
   902  001280  CFDD FFF7          	movff	postdec2,tblptrh
   903  001284                     	if	0	;tblptru may be non-zero
   904  001284                     	endif
   905  001284                     	if	0	;tblptru may be non-zero
   906  001284                     	endif
   907  001284  0008               	tblrd		*
   908  001286  50F5               	movf	tablat,w,c
   909  001288  0A25               	xorlw	37
   910  00128A  A4D8               	btfss	status,2,c
   911  00128C  D099               	goto	l1611
   912                           
   913                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
   914  00128E  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   915  001292  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   916  001296  2ADE               	incf	postinc2,f,c
   917  001298  0E00               	movlw	0
   918  00129A  22DD               	addwfc	postdec2,f,c
   919                           
   920                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
   921  00129C  0E00               	movlw	0
   922  00129E  6E74               	movwf	_width+1,c
   923  0012A0  0E00               	movlw	0
   924  0012A2  6E73               	movwf	_width,c
   925  0012A4  C073  F077         	movff	_width,_flags
   926  0012A8  C074  F078         	movff	_width+1,_flags+1
   927                           
   928                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
   929  0012AC  6875               	setf	_prec,c
   930  0012AE  6876               	setf	_prec+1,c
   931                           
   932                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
   933  0012B0  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   934  0012B4  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   935  0012B8  CFDE FFF6          	movff	postinc2,tblptrl
   936  0012BC  CFDD FFF7          	movff	postdec2,tblptrh
   937  0012C0                     	if	0	;tblptru may be non-zero
   938  0012C0                     	endif
   939  0012C0                     	if	0	;tblptru may be non-zero
   940  0012C0                     	endif
   941  0012C0  0008               	tblrd		*
   942  0012C2  50F5               	movf	tablat,w,c
   943  0012C4  0A64               	xorlw	100
   944  0012C6  B4D8               	btfsc	status,2,c
   945  0012C8  D00D               	goto	u1010
   946  0012CA  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   947  0012CE  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   948  0012D2  CFDE FFF6          	movff	postinc2,tblptrl
   949  0012D6  CFDD FFF7          	movff	postdec2,tblptrh
   950  0012DA                     	if	0	;tblptru may be non-zero
   951  0012DA                     	endif
   952  0012DA                     	if	0	;tblptru may be non-zero
   953  0012DA                     	endif
   954  0012DA  0008               	tblrd		*
   955  0012DC  50F5               	movf	tablat,w,c
   956  0012DE  0A69               	xorlw	105
   957  0012E0  A4D8               	btfss	status,2,c
   958  0012E2  D03F               	goto	l1595
   959  0012E4                     u1010:
   960                           
   961                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
   962  0012E4  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   963  0012E8  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   964  0012EC  2ADE               	incf	postinc2,f,c
   965  0012EE  0E00               	movlw	0
   966  0012F0  22DD               	addwfc	postdec2,f,c
   967                           
   968                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
   969  0012F2  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
   970  0012F6  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
   971  0012FA  CFDF F04A          	movff	indf2,??_vfpfcnvrt
   972  0012FE  0E02               	movlw	2
   973  001300  26DE               	addwf	postinc2,f,c
   974  001302  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
   975  001306  0E00               	movlw	0
   976  001308  22DD               	addwfc	postdec2,f,c
   977  00130A  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
   978  00130E  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
   979  001312  CFDE F04C          	movff	postinc2,vfpfcnvrt@ll
   980  001316  CFDD F04D          	movff	postdec2,vfpfcnvrt@ll+1
   981  00131A  0E00               	movlw	0
   982  00131C  BE4D               	btfsc	vfpfcnvrt@ll+1,7,c
   983  00131E  0EFF               	movlw	-1
   984  001320  6E4E               	movwf	vfpfcnvrt@ll+2,c
   985  001322  6E4F               	movwf	vfpfcnvrt@ll+3,c
   986  001324  6E50               	movwf	vfpfcnvrt@ll+4,c
   987  001326  6E51               	movwf	vfpfcnvrt@ll+5,c
   988  001328  6E52               	movwf	vfpfcnvrt@ll+6,c
   989  00132A  6E53               	movwf	vfpfcnvrt@ll+7,c
   990                           
   991                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
   992  00132C  C044  F020         	movff	vfpfcnvrt@fp,dtoa@fp
   993  001330  C045  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
   994  001334  C04C  F022         	movff	vfpfcnvrt@ll,dtoa@d
   995  001338  C04D  F023         	movff	vfpfcnvrt@ll+1,dtoa@d+1
   996  00133C  C04E  F024         	movff	vfpfcnvrt@ll+2,dtoa@d+2
   997  001340  C04F  F025         	movff	vfpfcnvrt@ll+3,dtoa@d+3
   998  001344  C050  F026         	movff	vfpfcnvrt@ll+4,dtoa@d+4
   999  001348  C051  F027         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1000  00134C  C052  F028         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1001  001350  C053  F029         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1002  001354  EC19  F008         	call	_dtoa	;wreg free
  1003  001358  C020  F044         	movff	?_dtoa,?_vfpfcnvrt
  1004  00135C  C021  F045         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1005  001360  0012               	return	
  1006  001362                     l1595:
  1007                           
  1008                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1009  001362  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1010  001366  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1011  00136A  CFDE FFF6          	movff	postinc2,tblptrl
  1012  00136E  CFDD FFF7          	movff	postdec2,tblptrh
  1013  001372                     	if	0	;tblptru may be non-zero
  1014  001372                     	endif
  1015  001372                     	if	0	;tblptru may be non-zero
  1016  001372                     	endif
  1017  001372  0008               	tblrd		*
  1018  001374  50F5               	movf	tablat,w,c
  1019  001376  0A25               	xorlw	37
  1020  001378  A4D8               	btfss	status,2,c
  1021  00137A  D016               	goto	l1605
  1022                           
  1023                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1024  00137C  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1025  001380  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1026  001384  2ADE               	incf	postinc2,f,c
  1027  001386  0E00               	movlw	0
  1028  001388  22DD               	addwfc	postdec2,f,c
  1029                           
  1030                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1031  00138A  0E00               	movlw	0
  1032  00138C  6E06               	movwf	fputc@c+1,c
  1033  00138E  0E25               	movlw	37
  1034  001390  6E05               	movwf	fputc@c,c
  1035  001392  C044  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1036  001396  C045  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1037  00139A  EC27  F00C         	call	_fputc	;wreg free
  1038  00139E                     l1601:
  1039                           
  1040                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1041  00139E  0E00               	movlw	0
  1042  0013A0  6E45               	movwf	?_vfpfcnvrt+1,c
  1043  0013A2  0E01               	movlw	1
  1044  0013A4  6E44               	movwf	?_vfpfcnvrt,c
  1045  0013A6  0012               	return	
  1046  0013A8                     l1605:
  1047                           
  1048                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1049  0013A8  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1050  0013AC  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1051  0013B0  2ADE               	incf	postinc2,f,c
  1052  0013B2  0E00               	movlw	0
  1053  0013B4  22DD               	addwfc	postdec2,f,c
  1054                           
  1055                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  1056  0013B6  0E00               	movlw	0
  1057  0013B8  6E45               	movwf	?_vfpfcnvrt+1,c
  1058  0013BA  0E00               	movlw	0
  1059  0013BC  6E44               	movwf	?_vfpfcnvrt,c
  1060  0013BE  0012               	return	
  1061  0013C0                     l1611:
  1062                           
  1063                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  1064  0013C0  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1065  0013C4  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1066  0013C8  CFDE FFF6          	movff	postinc2,tblptrl
  1067  0013CC  CFDD FFF7          	movff	postdec2,tblptrh
  1068  0013D0                     	if	0	;tblptru may be non-zero
  1069  0013D0                     	endif
  1070  0013D0                     	if	0	;tblptru may be non-zero
  1071  0013D0                     	endif
  1072  0013D0  0008               	tblrd		*
  1073  0013D2  50F5               	movf	tablat,w,c
  1074  0013D4  6E05               	movwf	fputc@c,c
  1075  0013D6  6A06               	clrf	fputc@c+1,c
  1076  0013D8  C044  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1077  0013DC  C045  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1078  0013E0  EC27  F00C         	call	_fputc	;wreg free
  1079                           
  1080                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  1081  0013E4  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1082  0013E8  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1083  0013EC  2ADE               	incf	postinc2,f,c
  1084  0013EE  0E00               	movlw	0
  1085  0013F0  22DD               	addwfc	postdec2,f,c
  1086  0013F2  D7D5               	goto	l1601
  1087  0013F4                     __end_of_vfpfcnvrt:
  1088                           	opt callstack 0
  1089                           
  1090 ;; *************** function _dtoa *****************
  1091 ;; Defined at:
  1092 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1093 ;; Parameters:    Size  Location     Type
  1094 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  1095 ;;		 -> NULL(0), 
  1096 ;;  d               8   33[COMRAM] long long 
  1097 ;; Auto vars:     Size  Location     Type
  1098 ;;  n               8   57[COMRAM] long long 
  1099 ;;  i               2   65[COMRAM] int 
  1100 ;;  s               2   55[COMRAM] int 
  1101 ;;  w               2   53[COMRAM] int 
  1102 ;;  p               2   51[COMRAM] int 
  1103 ;; Return value:  Size  Location     Type
  1104 ;;                  2   31[COMRAM] int 
  1105 ;; Registers used:
  1106 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1107 ;; Tracked objects:
  1108 ;;		On entry : 0/0
  1109 ;;		On exit  : 0/0
  1110 ;;		Unchanged: 0/0
  1111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1112 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1113 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1114 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1115 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1116 ;;Total ram usage:       36 bytes
  1117 ;; Hardware stack levels used:    1
  1118 ;; Hardware stack levels required when called:    7
  1119 ;; This function calls:
  1120 ;;		___aodiv
  1121 ;;		___aomod
  1122 ;;		_abs
  1123 ;;		_pad
  1124 ;; This function is called by:
  1125 ;;		_vfpfcnvrt
  1126 ;; This function uses a non-reentrant model
  1127 ;;
  1128                           
  1129                           	psect	text4
  1130  001032                     __ptext4:
  1131                           	opt callstack 0
  1132  001032                     _dtoa:
  1133                           	opt callstack 20
  1134                           
  1135                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  1136                           
  1137                           ;incstack = 0
  1138  001032  C022  F03A         	movff	dtoa@d,dtoa@n
  1139  001036  C023  F03B         	movff	dtoa@d+1,dtoa@n+1
  1140  00103A  C024  F03C         	movff	dtoa@d+2,dtoa@n+2
  1141  00103E  C025  F03D         	movff	dtoa@d+3,dtoa@n+3
  1142  001042  C026  F03E         	movff	dtoa@d+4,dtoa@n+4
  1143  001046  C027  F03F         	movff	dtoa@d+5,dtoa@n+5
  1144  00104A  C028  F040         	movff	dtoa@d+6,dtoa@n+6
  1145  00104E  C029  F041         	movff	dtoa@d+7,dtoa@n+7
  1146                           
  1147                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  1148  001052  AE41               	btfss	dtoa@n+7,7,c
  1149  001054  D002               	goto	u840
  1150  001056  0E01               	movlw	1
  1151  001058  D001               	goto	u850
  1152  00105A                     u840:
  1153  00105A  0E00               	movlw	0
  1154  00105C                     u850:
  1155  00105C  6E38               	movwf	dtoa@s,c
  1156  00105E  6A39               	clrf	dtoa@s+1,c
  1157                           
  1158                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  1159  001060  5038               	movf	dtoa@s,w,c
  1160  001062  1039               	iorwf	dtoa@s+1,w,c
  1161  001064  B4D8               	btfsc	status,2,c
  1162  001066  D010               	goto	l1521
  1163                           
  1164                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  1165  001068  1E41               	comf	dtoa@n+7,f,c
  1166  00106A  1E40               	comf	dtoa@n+6,f,c
  1167  00106C  1E3F               	comf	dtoa@n+5,f,c
  1168  00106E  1E3E               	comf	dtoa@n+4,f,c
  1169  001070  1E3D               	comf	dtoa@n+3,f,c
  1170  001072  1E3C               	comf	dtoa@n+2,f,c
  1171  001074  1E3B               	comf	dtoa@n+1,f,c
  1172  001076  6C3A               	negf	dtoa@n,c
  1173  001078  0E00               	movlw	0
  1174  00107A  223B               	addwfc	dtoa@n+1,f,c
  1175  00107C  223C               	addwfc	dtoa@n+2,f,c
  1176  00107E  223D               	addwfc	dtoa@n+3,f,c
  1177  001080  223E               	addwfc	dtoa@n+4,f,c
  1178  001082  223F               	addwfc	dtoa@n+5,f,c
  1179  001084  2240               	addwfc	dtoa@n+6,f,c
  1180  001086  2241               	addwfc	dtoa@n+7,f,c
  1181  001088                     l1521:
  1182                           
  1183                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  1184  001088  AE76               	btfss	_prec+1,7,c
  1185                           
  1186                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  1187  00108A  9277               	bcf	_flags,1,c
  1188                           
  1189                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  1190  00108C  BE76               	btfsc	_prec+1,7,c
  1191  00108E  D005               	goto	u880
  1192  001090  5076               	movf	_prec+1,w,c
  1193  001092  E108               	bnz	l169
  1194  001094  0475               	decf	_prec,w,c
  1195  001096  B0D8               	btfsc	status,0,c
  1196  001098  D005               	goto	l169
  1197  00109A                     u880:
  1198  00109A  0E00               	movlw	0
  1199  00109C  6E35               	movwf	dtoa@p+1,c
  1200  00109E  0E01               	movlw	1
  1201  0010A0  6E34               	movwf	dtoa@p,c
  1202  0010A2  D004               	goto	l171
  1203  0010A4                     l169:
  1204  0010A4  C075  F034         	movff	_prec,dtoa@p
  1205  0010A8  C076  F035         	movff	_prec+1,dtoa@p+1
  1206  0010AC                     l171:
  1207                           
  1208                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  1209  0010AC  C073  F036         	movff	_width,dtoa@w
  1210  0010B0  C074  F037         	movff	_width+1,dtoa@w+1
  1211                           
  1212                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  1213  0010B4  5038               	movf	dtoa@s,w,c
  1214  0010B6  1039               	iorwf	dtoa@s+1,w,c
  1215  0010B8  A4D8               	btfss	status,2,c
  1216  0010BA  D002               	goto	u900
  1217  0010BC  A477               	btfss	_flags,2,c
  1218  0010BE  D003               	goto	l1535
  1219  0010C0                     u900:
  1220                           
  1221                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  1222  0010C0  0636               	decf	dtoa@w,f,c
  1223  0010C2  A0D8               	btfss	status,0,c
  1224  0010C4  0637               	decf	dtoa@w+1,f,c
  1225  0010C6                     l1535:
  1226                           
  1227                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  1228  0010C6  0E00               	movlw	0
  1229  0010C8  6E43               	movwf	dtoa@i+1,c
  1230  0010CA  0E1F               	movlw	31
  1231  0010CC  6E42               	movwf	dtoa@i,c
  1232                           
  1233                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  1234  0010CE  0E00               	movlw	0
  1235  0010D0  0100               	movlb	0	; () banked
  1236  0010D2  6F9F               	movwf	(_dbuf+31)& (0+255),b
  1237                           
  1238                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1239  0010D4  D07C               	goto	l1549
  1240  0010D6                     l1539:
  1241                           
  1242                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  1243  0010D6  0642               	decf	dtoa@i,f,c
  1244  0010D8  A0D8               	btfss	status,0,c
  1245  0010DA  0643               	decf	dtoa@i+1,f,c
  1246                           
  1247                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  1248  0010DC  0E80               	movlw	low _dbuf
  1249  0010DE  2442               	addwf	dtoa@i,w,c
  1250  0010E0  6ED9               	movwf	fsr2l,c
  1251  0010E2  0E00               	movlw	high _dbuf
  1252  0010E4  2043               	addwfc	dtoa@i+1,w,c
  1253  0010E6  6EDA               	movwf	fsr2h,c
  1254  0010E8  C03A  F001         	movff	dtoa@n,___aomod@dividend
  1255  0010EC  C03B  F002         	movff	dtoa@n+1,___aomod@dividend+1
  1256  0010F0  C03C  F003         	movff	dtoa@n+2,___aomod@dividend+2
  1257  0010F4  C03D  F004         	movff	dtoa@n+3,___aomod@dividend+3
  1258  0010F8  C03E  F005         	movff	dtoa@n+4,___aomod@dividend+4
  1259  0010FC  C03F  F006         	movff	dtoa@n+5,___aomod@dividend+5
  1260  001100  C040  F007         	movff	dtoa@n+6,___aomod@dividend+6
  1261  001104  C041  F008         	movff	dtoa@n+7,___aomod@dividend+7
  1262  001108  0E0A               	movlw	10
  1263  00110A  6E09               	movwf	___aomod@divisor,c
  1264  00110C  0E00               	movlw	0
  1265  00110E  6E0A               	movwf	___aomod@divisor+1,c
  1266  001110  0E00               	movlw	0
  1267  001112  6E0B               	movwf	___aomod@divisor+2,c
  1268  001114  0E00               	movlw	0
  1269  001116  6E0C               	movwf	___aomod@divisor+3,c
  1270  001118  0E00               	movlw	0
  1271  00111A  6E0D               	movwf	___aomod@divisor+4,c
  1272  00111C  0E00               	movlw	0
  1273  00111E  6E0E               	movwf	___aomod@divisor+5,c
  1274  001120  0E00               	movlw	0
  1275  001122  6E0F               	movwf	___aomod@divisor+6,c
  1276  001124  0E00               	movlw	0
  1277  001126  6E10               	movwf	___aomod@divisor+7,c
  1278  001128  EC9E  F00A         	call	___aomod	;wreg free
  1279  00112C  C001  F02A         	movff	?___aomod,??_dtoa
  1280  001130  C002  F02B         	movff	?___aomod+1,??_dtoa+1
  1281  001134  C003  F02C         	movff	?___aomod+2,??_dtoa+2
  1282  001138  C004  F02D         	movff	?___aomod+3,??_dtoa+3
  1283  00113C  C005  F02E         	movff	?___aomod+4,??_dtoa+4
  1284  001140  C006  F02F         	movff	?___aomod+5,??_dtoa+5
  1285  001144  C007  F030         	movff	?___aomod+6,??_dtoa+6
  1286  001148  C008  F031         	movff	?___aomod+7,??_dtoa+7
  1287  00114C  C02A  F013         	movff	??_dtoa,abs@a
  1288  001150  C02C  F014         	movff	??_dtoa+2,abs@a+1
  1289  001154  EC05  F00D         	call	_abs	;wreg free
  1290  001158  5013               	movf	?_abs,w,c
  1291  00115A  0F30               	addlw	48
  1292  00115C  6EDF               	movwf	indf2,c
  1293                           
  1294                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  1295  00115E  0634               	decf	dtoa@p,f,c
  1296  001160  A0D8               	btfss	status,0,c
  1297  001162  0635               	decf	dtoa@p+1,f,c
  1298                           
  1299                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  1300  001164  0636               	decf	dtoa@w,f,c
  1301  001166  A0D8               	btfss	status,0,c
  1302  001168  0637               	decf	dtoa@w+1,f,c
  1303                           
  1304                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  1305  00116A  C03A  F001         	movff	dtoa@n,___aodiv@dividend
  1306  00116E  C03B  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  1307  001172  C03C  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  1308  001176  C03D  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  1309  00117A  C03E  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  1310  00117E  C03F  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  1311  001182  C040  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  1312  001186  C041  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  1313  00118A  0E0A               	movlw	10
  1314  00118C  6E09               	movwf	___aodiv@divisor,c
  1315  00118E  0E00               	movlw	0
  1316  001190  6E0A               	movwf	___aodiv@divisor+1,c
  1317  001192  0E00               	movlw	0
  1318  001194  6E0B               	movwf	___aodiv@divisor+2,c
  1319  001196  0E00               	movlw	0
  1320  001198  6E0C               	movwf	___aodiv@divisor+3,c
  1321  00119A  0E00               	movlw	0
  1322  00119C  6E0D               	movwf	___aodiv@divisor+4,c
  1323  00119E  0E00               	movlw	0
  1324  0011A0  6E0E               	movwf	___aodiv@divisor+5,c
  1325  0011A2  0E00               	movlw	0
  1326  0011A4  6E0F               	movwf	___aodiv@divisor+6,c
  1327  0011A6  0E00               	movlw	0
  1328  0011A8  6E10               	movwf	___aodiv@divisor+7,c
  1329  0011AA  ECFA  F009         	call	___aodiv	;wreg free
  1330  0011AE  C001  F03A         	movff	?___aodiv,dtoa@n
  1331  0011B2  C002  F03B         	movff	?___aodiv+1,dtoa@n+1
  1332  0011B6  C003  F03C         	movff	?___aodiv+2,dtoa@n+2
  1333  0011BA  C004  F03D         	movff	?___aodiv+3,dtoa@n+3
  1334  0011BE  C005  F03E         	movff	?___aodiv+4,dtoa@n+4
  1335  0011C2  C006  F03F         	movff	?___aodiv+5,dtoa@n+5
  1336  0011C6  C007  F040         	movff	?___aodiv+6,dtoa@n+6
  1337  0011CA  C008  F041         	movff	?___aodiv+7,dtoa@n+7
  1338  0011CE                     l1549:
  1339                           
  1340                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1341  0011CE  BE43               	btfsc	dtoa@i+1,7,c
  1342  0011D0  D01F               	goto	u950
  1343  0011D2  5043               	movf	dtoa@i+1,w,c
  1344  0011D4  E103               	bnz	u910
  1345  0011D6  0442               	decf	dtoa@i,w,c
  1346  0011D8  A0D8               	btfss	status,0,c
  1347  0011DA  D01A               	goto	u950
  1348  0011DC                     u910:
  1349  0011DC  503A               	movf	dtoa@n,w,c
  1350  0011DE  103B               	iorwf	dtoa@n+1,w,c
  1351  0011E0  103C               	iorwf	dtoa@n+2,w,c
  1352  0011E2  103D               	iorwf	dtoa@n+3,w,c
  1353  0011E4  103E               	iorwf	dtoa@n+4,w,c
  1354  0011E6  103F               	iorwf	dtoa@n+5,w,c
  1355  0011E8  1040               	iorwf	dtoa@n+6,w,c
  1356  0011EA  1041               	iorwf	dtoa@n+7,w,c
  1357  0011EC  A4D8               	btfss	status,2,c
  1358  0011EE  D773               	goto	l1539
  1359  0011F0  BE35               	btfsc	dtoa@p+1,7,c
  1360  0011F2  D005               	goto	u930
  1361  0011F4  5035               	movf	dtoa@p+1,w,c
  1362  0011F6  E102               	bnz	u931
  1363  0011F8  0434               	decf	dtoa@p,w,c
  1364  0011FA  B0D8               	btfsc	status,0,c
  1365  0011FC                     u931:
  1366  0011FC  D76C               	goto	l1539
  1367  0011FE                     u930:
  1368  0011FE  BE37               	btfsc	dtoa@w+1,7,c
  1369  001200  D007               	goto	u950
  1370  001202  5037               	movf	dtoa@w+1,w,c
  1371  001204  E103               	bnz	u940
  1372  001206  0436               	decf	dtoa@w,w,c
  1373  001208  A0D8               	btfss	status,0,c
  1374  00120A  D002               	goto	u950
  1375  00120C                     u940:
  1376  00120C  B277               	btfsc	_flags,1,c
  1377  00120E  D763               	goto	l1539
  1378  001210                     u950:
  1379                           
  1380                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  1381  001210  5038               	movf	dtoa@s,w,c
  1382  001212  1039               	iorwf	dtoa@s+1,w,c
  1383  001214  A4D8               	btfss	status,2,c
  1384  001216  D002               	goto	u970
  1385  001218  A477               	btfss	_flags,2,c
  1386  00121A  D017               	goto	l1573
  1387  00121C                     u970:
  1388                           
  1389                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  1390  00121C  0642               	decf	dtoa@i,f,c
  1391  00121E  A0D8               	btfss	status,0,c
  1392  001220  0643               	decf	dtoa@i+1,f,c
  1393                           
  1394                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  1395  001222  5038               	movf	dtoa@s,w,c
  1396  001224  1039               	iorwf	dtoa@s+1,w,c
  1397  001226  A4D8               	btfss	status,2,c
  1398  001228  D004               	goto	l1569
  1399  00122A  0E00               	movlw	0
  1400  00122C  6E33               	movwf	_dtoa$404+1,c
  1401  00122E  0E2B               	movlw	43
  1402  001230  D003               	goto	L1
  1403  001232                     l1569:
  1404  001232  0E00               	movlw	0
  1405  001234  6E33               	movwf	_dtoa$404+1,c
  1406  001236  0E2D               	movlw	45
  1407  001238                     L1:
  1408  001238  6E32               	movwf	_dtoa$404,c
  1409  00123A  0E80               	movlw	low _dbuf
  1410  00123C  2442               	addwf	dtoa@i,w,c
  1411  00123E  6ED9               	movwf	fsr2l,c
  1412  001240  0E00               	movlw	high _dbuf
  1413  001242  2043               	addwfc	dtoa@i+1,w,c
  1414  001244  6EDA               	movwf	fsr2h,c
  1415  001246  C032  FFDF         	movff	_dtoa$404,indf2
  1416  00124A                     l1573:
  1417                           
  1418                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  1419  00124A  C020  F015         	movff	dtoa@fp,pad@fp
  1420  00124E  C021  F016         	movff	dtoa@fp+1,pad@fp+1
  1421  001252  0E80               	movlw	low _dbuf
  1422  001254  2442               	addwf	dtoa@i,w,c
  1423  001256  6E17               	movwf	pad@buf,c
  1424  001258  0E00               	movlw	high _dbuf
  1425  00125A  2043               	addwfc	dtoa@i+1,w,c
  1426  00125C  6E18               	movwf	pad@buf+1,c
  1427  00125E  C036  F019         	movff	dtoa@w,pad@p
  1428  001262  C037  F01A         	movff	dtoa@w+1,pad@p+1
  1429  001266  EC9B  F00B         	call	_pad	;wreg free
  1430  00126A  C015  F020         	movff	?_pad,?_dtoa
  1431  00126E  C016  F021         	movff	?_pad+1,?_dtoa+1
  1432  001272  0012               	return		;funcret
  1433  001274                     __end_of_dtoa:
  1434                           	opt callstack 0
  1435                           
  1436 ;; *************** function _pad *****************
  1437 ;; Defined at:
  1438 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1439 ;; Parameters:    Size  Location     Type
  1440 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  1441 ;;		 -> NULL(0), 
  1442 ;;  buf             2   22[COMRAM] PTR unsigned char 
  1443 ;;		 -> dbuf(32), 
  1444 ;;  p               2   24[COMRAM] int 
  1445 ;; Auto vars:     Size  Location     Type
  1446 ;;  w               2   29[COMRAM] int 
  1447 ;;  i               2   27[COMRAM] int 
  1448 ;; Return value:  Size  Location     Type
  1449 ;;                  2   20[COMRAM] int 
  1450 ;; Registers used:
  1451 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1452 ;; Tracked objects:
  1453 ;;		On entry : 0/0
  1454 ;;		On exit  : 0/0
  1455 ;;		Unchanged: 0/0
  1456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1457 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1458 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1459 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1460 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1461 ;;Total ram usage:       11 bytes
  1462 ;; Hardware stack levels used:    1
  1463 ;; Hardware stack levels required when called:    6
  1464 ;; This function calls:
  1465 ;;		_fputc
  1466 ;;		_fputs
  1467 ;;		_strlen
  1468 ;; This function is called by:
  1469 ;;		_dtoa
  1470 ;; This function uses a non-reentrant model
  1471 ;;
  1472                           
  1473                           	psect	text5
  1474  001736                     __ptext5:
  1475                           	opt callstack 0
  1476  001736                     _pad:
  1477                           	opt callstack 20
  1478                           
  1479                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  1480                           
  1481                           ;incstack = 0
  1482  001736  A077               	btfss	_flags,0,c
  1483  001738  D00A               	goto	l1413
  1484                           
  1485                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  1486  00173A  C017  F00E         	movff	pad@buf,fputs@s
  1487  00173E  C018  F00F         	movff	pad@buf+1,fputs@s+1
  1488  001742  C015  F010         	movff	pad@fp,fputs@fp
  1489  001746  C016  F011         	movff	pad@fp+1,fputs@fp+1
  1490  00174A  ECE9  F00C         	call	_fputs	;wreg free
  1491  00174E                     l1413:
  1492                           
  1493                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  1494  00174E  BE1A               	btfsc	pad@p+1,7,c
  1495  001750  D005               	goto	l1417
  1496  001752  C019  F01E         	movff	pad@p,pad@w
  1497  001756  C01A  F01F         	movff	pad@p+1,pad@w+1
  1498  00175A  D004               	goto	l158
  1499  00175C                     l1417:
  1500  00175C  0E00               	movlw	0
  1501  00175E  6E1F               	movwf	pad@w+1,c
  1502  001760  0E00               	movlw	0
  1503  001762  6E1E               	movwf	pad@w,c
  1504  001764                     l158:
  1505                           
  1506                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  1507  001764  0E00               	movlw	0
  1508  001766  6E1D               	movwf	pad@i+1,c
  1509  001768  0E00               	movlw	0
  1510  00176A  6E1C               	movwf	pad@i,c
  1511                           
  1512                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  1513  00176C  D00C               	goto	l1423
  1514  00176E                     l1419:
  1515                           
  1516                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  1517  00176E  0E00               	movlw	0
  1518  001770  6E06               	movwf	fputc@c+1,c
  1519  001772  0E20               	movlw	32
  1520  001774  6E05               	movwf	fputc@c,c
  1521  001776  C015  F007         	movff	pad@fp,fputc@fp
  1522  00177A  C016  F008         	movff	pad@fp+1,fputc@fp+1
  1523  00177E  EC27  F00C         	call	_fputc	;wreg free
  1524                           
  1525                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  1526  001782  4A1C               	infsnz	pad@i,f,c
  1527  001784  2A1D               	incf	pad@i+1,f,c
  1528  001786                     l1423:
  1529                           
  1530                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  1531  001786  501E               	movf	pad@w,w,c
  1532  001788  5C1C               	subwf	pad@i,w,c
  1533  00178A  501D               	movf	pad@i+1,w,c
  1534  00178C  0A80               	xorlw	128
  1535  00178E  6E1B               	movwf	??_pad& (0+255),c
  1536  001790  501F               	movf	pad@w+1,w,c
  1537  001792  0A80               	xorlw	128
  1538  001794  581B               	subwfb	??_pad& (0+255),w,c
  1539  001796  A0D8               	btfss	status,0,c
  1540  001798  D7EA               	goto	l1419
  1541                           
  1542                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  1543  00179A  B077               	btfsc	_flags,0,c
  1544  00179C  D00A               	goto	l1427
  1545                           
  1546                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  1547  00179E  C017  F00E         	movff	pad@buf,fputs@s
  1548  0017A2  C018  F00F         	movff	pad@buf+1,fputs@s+1
  1549  0017A6  C015  F010         	movff	pad@fp,fputs@fp
  1550  0017AA  C016  F011         	movff	pad@fp+1,fputs@fp+1
  1551  0017AE  ECE9  F00C         	call	_fputs	;wreg free
  1552  0017B2                     l1427:
  1553                           
  1554                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  1555  0017B2  C017  F001         	movff	pad@buf,strlen@s
  1556  0017B6  C018  F002         	movff	pad@buf+1,strlen@s+1
  1557  0017BA  EC1E  F00D         	call	_strlen	;wreg free
  1558  0017BE  501E               	movf	pad@w,w,c
  1559  0017C0  2401               	addwf	?_strlen,w,c
  1560  0017C2  6E15               	movwf	?_pad,c
  1561  0017C4  501F               	movf	pad@w+1,w,c
  1562  0017C6  2002               	addwfc	?_strlen+1,w,c
  1563  0017C8  6E16               	movwf	?_pad+1,c
  1564  0017CA  0012               	return		;funcret
  1565  0017CC                     __end_of_pad:
  1566                           	opt callstack 0
  1567                           
  1568 ;; *************** function _strlen *****************
  1569 ;; Defined at:
  1570 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  1571 ;; Parameters:    Size  Location     Type
  1572 ;;  s               2    0[COMRAM] PTR const unsigned char 
  1573 ;;		 -> dbuf(32), 
  1574 ;; Auto vars:     Size  Location     Type
  1575 ;;  a               2    2[COMRAM] PTR const unsigned char 
  1576 ;;		 -> dbuf(32), 
  1577 ;; Return value:  Size  Location     Type
  1578 ;;                  2    0[COMRAM] unsigned int 
  1579 ;; Registers used:
  1580 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1581 ;; Tracked objects:
  1582 ;;		On entry : 0/0
  1583 ;;		On exit  : 0/0
  1584 ;;		Unchanged: 0/0
  1585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1586 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1587 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1589 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1590 ;;Total ram usage:        4 bytes
  1591 ;; Hardware stack levels used:    1
  1592 ;; This function calls:
  1593 ;;		Nothing
  1594 ;; This function is called by:
  1595 ;;		_pad
  1596 ;; This function uses a non-reentrant model
  1597 ;;
  1598                           
  1599                           	psect	text6
  1600  001A3C                     __ptext6:
  1601                           	opt callstack 0
  1602  001A3C                     _strlen:
  1603                           	opt callstack 25
  1604                           
  1605                           ;incstack = 0
  1606  001A3C  C001  F003         	movff	strlen@s,strlen@a
  1607  001A40  C002  F004         	movff	strlen@s+1,strlen@a+1
  1608  001A44  D002               	goto	l1403
  1609  001A46                     l1401:
  1610  001A46  4A01               	infsnz	strlen@s,f,c
  1611  001A48  2A02               	incf	strlen@s+1,f,c
  1612  001A4A                     l1403:
  1613  001A4A  C001  FFD9         	movff	strlen@s,fsr2l
  1614  001A4E  C002  FFDA         	movff	strlen@s+1,fsr2h
  1615  001A52  50DF               	movf	indf2,w,c
  1616  001A54  A4D8               	btfss	status,2,c
  1617  001A56  D7F7               	goto	l1401
  1618  001A58  5003               	movf	strlen@a,w,c
  1619  001A5A  5C01               	subwf	strlen@s,w,c
  1620  001A5C  6E01               	movwf	?_strlen,c
  1621  001A5E  5004               	movf	strlen@a+1,w,c
  1622  001A60  5802               	subwfb	strlen@s+1,w,c
  1623  001A62  6E02               	movwf	?_strlen+1,c
  1624  001A64  0012               	return		;funcret
  1625  001A66                     __end_of_strlen:
  1626                           	opt callstack 0
  1627                           
  1628 ;; *************** function _fputs *****************
  1629 ;; Defined at:
  1630 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  1631 ;; Parameters:    Size  Location     Type
  1632 ;;  s               2   13[COMRAM] PTR const unsigned char 
  1633 ;;		 -> dbuf(32), 
  1634 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  1635 ;;		 -> NULL(0), 
  1636 ;; Auto vars:     Size  Location     Type
  1637 ;;  i               2   18[COMRAM] int 
  1638 ;;  c               1   17[COMRAM] unsigned char 
  1639 ;; Return value:  Size  Location     Type
  1640 ;;                  2   13[COMRAM] int 
  1641 ;; Registers used:
  1642 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1643 ;; Tracked objects:
  1644 ;;		On entry : 0/0
  1645 ;;		On exit  : 0/0
  1646 ;;		Unchanged: 0/0
  1647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1648 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1649 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1651 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1652 ;;Total ram usage:        7 bytes
  1653 ;; Hardware stack levels used:    1
  1654 ;; Hardware stack levels required when called:    5
  1655 ;; This function calls:
  1656 ;;		_fputc
  1657 ;; This function is called by:
  1658 ;;		_pad
  1659 ;; This function uses a non-reentrant model
  1660 ;;
  1661                           
  1662                           	psect	text7
  1663  0019D2                     __ptext7:
  1664                           	opt callstack 0
  1665  0019D2                     _fputs:
  1666                           	opt callstack 20
  1667                           
  1668                           ;incstack = 0
  1669  0019D2  0E00               	movlw	0
  1670  0019D4  6E14               	movwf	fputs@i+1,c
  1671  0019D6  0E00               	movlw	0
  1672  0019D8  6E13               	movwf	fputs@i,c
  1673  0019DA  D00B               	goto	l1397
  1674  0019DC                     l1393:
  1675  0019DC  C012  F005         	movff	fputs@c,fputc@c
  1676  0019E0  6A06               	clrf	fputc@c+1,c
  1677  0019E2  C010  F007         	movff	fputs@fp,fputc@fp
  1678  0019E6  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  1679  0019EA  EC27  F00C         	call	_fputc	;wreg free
  1680  0019EE  4A13               	infsnz	fputs@i,f,c
  1681  0019F0  2A14               	incf	fputs@i+1,f,c
  1682  0019F2                     l1397:
  1683  0019F2  5013               	movf	fputs@i,w,c
  1684  0019F4  240E               	addwf	fputs@s,w,c
  1685  0019F6  6ED9               	movwf	fsr2l,c
  1686  0019F8  5014               	movf	fputs@i+1,w,c
  1687  0019FA  200F               	addwfc	fputs@s+1,w,c
  1688  0019FC  6EDA               	movwf	fsr2h,c
  1689  0019FE  50DF               	movf	indf2,w,c
  1690  001A00  6E12               	movwf	fputs@c,c
  1691  001A02  5012               	movf	fputs@c,w,c
  1692  001A04  B4D8               	btfsc	status,2,c
  1693  001A06  0012               	return	
  1694  001A08  D7E9               	goto	l1393
  1695  001A0A                     __end_of_fputs:
  1696                           	opt callstack 0
  1697                           
  1698 ;; *************** function _fputc *****************
  1699 ;; Defined at:
  1700 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  1701 ;; Parameters:    Size  Location     Type
  1702 ;;  c               2    4[COMRAM] int 
  1703 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  1704 ;;		 -> NULL(0), 
  1705 ;; Auto vars:     Size  Location     Type
  1706 ;;		None
  1707 ;; Return value:  Size  Location     Type
  1708 ;;                  2    4[COMRAM] int 
  1709 ;; Registers used:
  1710 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1711 ;; Tracked objects:
  1712 ;;		On entry : 0/0
  1713 ;;		On exit  : 0/0
  1714 ;;		Unchanged: 0/0
  1715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1716 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1718 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1719 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1720 ;;Total ram usage:        9 bytes
  1721 ;; Hardware stack levels used:    1
  1722 ;; Hardware stack levels required when called:    4
  1723 ;; This function calls:
  1724 ;;		_putch
  1725 ;; This function is called by:
  1726 ;;		_pad
  1727 ;;		_vfpfcnvrt
  1728 ;;		_fputs
  1729 ;; This function uses a non-reentrant model
  1730 ;;
  1731                           
  1732                           	psect	text8
  1733  00184E                     __ptext8:
  1734                           	opt callstack 0
  1735  00184E                     _fputc:
  1736                           	opt callstack 23
  1737                           
  1738                           ;incstack = 0
  1739  00184E  5007               	movf	fputc@fp,w,c
  1740  001850  1008               	iorwf	fputc@fp+1,w,c
  1741  001852  B4D8               	btfsc	status,2,c
  1742  001854  D004               	goto	u610
  1743  001856  5007               	movf	fputc@fp,w,c
  1744  001858  1008               	iorwf	fputc@fp+1,w,c
  1745  00185A  A4D8               	btfss	status,2,c
  1746  00185C  D004               	goto	l1383
  1747  00185E                     u610:
  1748  00185E  5005               	movf	fputc@c,w,c
  1749  001860  EC9D  F00D         	call	_putch
  1750  001864  0012               	return	
  1751  001866                     l1383:
  1752  001866  EE20 F004          	lfsr	2,4
  1753  00186A  5007               	movf	fputc@fp,w,c
  1754  00186C  26D9               	addwf	fsr2l,f,c
  1755  00186E  5008               	movf	fputc@fp+1,w,c
  1756  001870  22DA               	addwfc	fsr2h,f,c
  1757  001872  50DE               	movf	postinc2,w,c
  1758  001874  10DE               	iorwf	postinc2,w,c
  1759  001876  B4D8               	btfsc	status,2,c
  1760  001878  D016               	goto	u630
  1761  00187A  EE20 F004          	lfsr	2,4
  1762  00187E  5007               	movf	fputc@fp,w,c
  1763  001880  26D9               	addwf	fsr2l,f,c
  1764  001882  5008               	movf	fputc@fp+1,w,c
  1765  001884  22DA               	addwfc	fsr2h,f,c
  1766  001886  EE10 F002          	lfsr	1,2
  1767  00188A  5007               	movf	fputc@fp,w,c
  1768  00188C  26E1               	addwf	fsr1l,f,c
  1769  00188E  5008               	movf	fputc@fp+1,w,c
  1770  001890  22E2               	addwfc	fsr1h,f,c
  1771  001892  50DE               	movf	postinc2,w,c
  1772  001894  5CE6               	subwf	postinc1,w,c
  1773  001896  50E6               	movf	postinc1,w,c
  1774  001898  0A80               	xorlw	128
  1775  00189A  6E0D               	movwf	(??_fputc+4)& (0+255),c
  1776  00189C  50DE               	movf	postinc2,w,c
  1777  00189E  0A80               	xorlw	128
  1778  0018A0  580D               	subwfb	(??_fputc+4)& (0+255),w,c
  1779  0018A2  B0D8               	btfsc	status,0,c
  1780  0018A4  0012               	return	
  1781  0018A6                     u630:
  1782  0018A6  EE20 F002          	lfsr	2,2
  1783  0018AA  5007               	movf	fputc@fp,w,c
  1784  0018AC  26D9               	addwf	fsr2l,f,c
  1785  0018AE  5008               	movf	fputc@fp+1,w,c
  1786  0018B0  22DA               	addwfc	fsr2h,f,c
  1787  0018B2  2ADE               	incf	postinc2,f,c
  1788  0018B4  0E00               	movlw	0
  1789  0018B6  22DD               	addwfc	postdec2,f,c
  1790  0018B8  0012               	return		;funcret
  1791  0018BA                     __end_of_fputc:
  1792                           	opt callstack 0
  1793                           
  1794 ;; *************** function _putch *****************
  1795 ;; Defined at:
  1796 ;;		line 102 in file "lcd.c"
  1797 ;; Parameters:    Size  Location     Type
  1798 ;;  data            1    wreg     unsigned char 
  1799 ;; Auto vars:     Size  Location     Type
  1800 ;;  data            1    3[COMRAM] unsigned char 
  1801 ;; Return value:  Size  Location     Type
  1802 ;;                  1    wreg      void 
  1803 ;; Registers used:
  1804 ;;		wreg, status,2, status,0, cstack
  1805 ;; Tracked objects:
  1806 ;;		On entry : 0/0
  1807 ;;		On exit  : 0/0
  1808 ;;		Unchanged: 0/0
  1809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1811 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1813 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1814 ;;Total ram usage:        1 bytes
  1815 ;; Hardware stack levels used:    1
  1816 ;; Hardware stack levels required when called:    3
  1817 ;; This function calls:
  1818 ;;		_send_byte
  1819 ;; This function is called by:
  1820 ;;		_fputc
  1821 ;; This function uses a non-reentrant model
  1822 ;;
  1823                           
  1824                           	psect	text9
  1825  001B3A                     __ptext9:
  1826                           	opt callstack 0
  1827  001B3A                     _putch:
  1828                           	opt callstack 23
  1829                           
  1830                           ;incstack = 0
  1831                           ;putch@data stored from wreg
  1832  001B3A  6E04               	movwf	putch@data,c
  1833                           
  1834                           ;lcd.c: 103:     LATDbits.LATD2 = 1;
  1835  001B3C  848C               	bsf	3980,2,c	;volatile
  1836                           
  1837                           ;lcd.c: 104:     send_byte((unsigned char)data);
  1838  001B3E  5004               	movf	putch@data,w,c
  1839  001B40  EC8B  F00D         	call	_send_byte
  1840  001B44  0012               	return		;funcret
  1841  001B46                     __end_of_putch:
  1842                           	opt callstack 0
  1843                           
  1844 ;; *************** function _abs *****************
  1845 ;; Defined at:
  1846 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  1847 ;; Parameters:    Size  Location     Type
  1848 ;;  a               2   18[COMRAM] int 
  1849 ;; Auto vars:     Size  Location     Type
  1850 ;;		None
  1851 ;; Return value:  Size  Location     Type
  1852 ;;                  2   18[COMRAM] int 
  1853 ;; Registers used:
  1854 ;;		wreg, status,2, status,0
  1855 ;; Tracked objects:
  1856 ;;		On entry : 0/0
  1857 ;;		On exit  : 0/0
  1858 ;;		Unchanged: 0/0
  1859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1860 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1862 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1863 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1864 ;;Total ram usage:        4 bytes
  1865 ;; Hardware stack levels used:    1
  1866 ;; This function calls:
  1867 ;;		Nothing
  1868 ;; This function is called by:
  1869 ;;		_dtoa
  1870 ;; This function uses a non-reentrant model
  1871 ;;
  1872                           
  1873                           	psect	text10
  1874  001A0A                     __ptext10:
  1875                           	opt callstack 0
  1876  001A0A                     _abs:
  1877                           	opt callstack 26
  1878                           
  1879                           ;incstack = 0
  1880  001A0A  BE14               	btfsc	abs@a+1,7,c
  1881  001A0C  D005               	goto	u700
  1882  001A0E  5014               	movf	abs@a+1,w,c
  1883  001A10  E110               	bnz	l881
  1884  001A12  0413               	decf	abs@a,w,c
  1885  001A14  B0D8               	btfsc	status,0,c
  1886  001A16  D00D               	goto	l881
  1887  001A18                     u700:
  1888  001A18  C013  F015         	movff	abs@a,??_abs
  1889  001A1C  C014  F016         	movff	abs@a+1,??_abs+1
  1890  001A20  1E15               	comf	??_abs,f,c
  1891  001A22  1E16               	comf	??_abs+1,f,c
  1892  001A24  4A15               	infsnz	??_abs,f,c
  1893  001A26  2A16               	incf	??_abs+1,f,c
  1894  001A28  C015  F013         	movff	??_abs,?_abs
  1895  001A2C  C016  F014         	movff	??_abs+1,?_abs+1
  1896  001A30  0012               	return	
  1897  001A32                     l881:
  1898  001A32  C013  F013         	movff	abs@a,?_abs
  1899  001A36  C014  F014         	movff	abs@a+1,?_abs+1
  1900  001A3A  0012               	return		;funcret
  1901  001A3C                     __end_of_abs:
  1902                           	opt callstack 0
  1903                           
  1904 ;; *************** function ___aomod *****************
  1905 ;; Defined at:
  1906 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  1907 ;; Parameters:    Size  Location     Type
  1908 ;;  dividend        8    0[COMRAM] long long 
  1909 ;;  divisor         8    8[COMRAM] long long 
  1910 ;; Auto vars:     Size  Location     Type
  1911 ;;  sign            1   17[COMRAM] unsigned char 
  1912 ;;  counter         1   16[COMRAM] unsigned char 
  1913 ;; Return value:  Size  Location     Type
  1914 ;;                  8    0[COMRAM] long long 
  1915 ;; Registers used:
  1916 ;;		wreg, status,2, status,0
  1917 ;; Tracked objects:
  1918 ;;		On entry : 0/0
  1919 ;;		On exit  : 0/0
  1920 ;;		Unchanged: 0/0
  1921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1922 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1923 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1925 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1926 ;;Total ram usage:       18 bytes
  1927 ;; Hardware stack levels used:    1
  1928 ;; This function calls:
  1929 ;;		Nothing
  1930 ;; This function is called by:
  1931 ;;		_dtoa
  1932 ;; This function uses a non-reentrant model
  1933 ;;
  1934                           
  1935                           	psect	text11
  1936  00153C                     __ptext11:
  1937                           	opt callstack 0
  1938  00153C                     ___aomod:
  1939                           	opt callstack 26
  1940                           
  1941                           ;incstack = 0
  1942  00153C  0E00               	movlw	0
  1943  00153E  6E12               	movwf	___aomod@sign,c
  1944  001540  AE08               	btfss	___aomod@dividend+7,7,c
  1945  001542  D012               	goto	l1487
  1946  001544  1E08               	comf	___aomod@dividend+7,f,c
  1947  001546  1E07               	comf	___aomod@dividend+6,f,c
  1948  001548  1E06               	comf	___aomod@dividend+5,f,c
  1949  00154A  1E05               	comf	___aomod@dividend+4,f,c
  1950  00154C  1E04               	comf	___aomod@dividend+3,f,c
  1951  00154E  1E03               	comf	___aomod@dividend+2,f,c
  1952  001550  1E02               	comf	___aomod@dividend+1,f,c
  1953  001552  6C01               	negf	___aomod@dividend,c
  1954  001554  0E00               	movlw	0
  1955  001556  2202               	addwfc	___aomod@dividend+1,f,c
  1956  001558  2203               	addwfc	___aomod@dividend+2,f,c
  1957  00155A  2204               	addwfc	___aomod@dividend+3,f,c
  1958  00155C  2205               	addwfc	___aomod@dividend+4,f,c
  1959  00155E  2206               	addwfc	___aomod@dividend+5,f,c
  1960  001560  2207               	addwfc	___aomod@dividend+6,f,c
  1961  001562  2208               	addwfc	___aomod@dividend+7,f,c
  1962  001564  0E01               	movlw	1
  1963  001566  6E12               	movwf	___aomod@sign,c
  1964  001568                     l1487:
  1965  001568  AE10               	btfss	___aomod@divisor+7,7,c
  1966  00156A  D010               	goto	l1491
  1967  00156C  1E10               	comf	___aomod@divisor+7,f,c
  1968  00156E  1E0F               	comf	___aomod@divisor+6,f,c
  1969  001570  1E0E               	comf	___aomod@divisor+5,f,c
  1970  001572  1E0D               	comf	___aomod@divisor+4,f,c
  1971  001574  1E0C               	comf	___aomod@divisor+3,f,c
  1972  001576  1E0B               	comf	___aomod@divisor+2,f,c
  1973  001578  1E0A               	comf	___aomod@divisor+1,f,c
  1974  00157A  6C09               	negf	___aomod@divisor,c
  1975  00157C  0E00               	movlw	0
  1976  00157E  220A               	addwfc	___aomod@divisor+1,f,c
  1977  001580  220B               	addwfc	___aomod@divisor+2,f,c
  1978  001582  220C               	addwfc	___aomod@divisor+3,f,c
  1979  001584  220D               	addwfc	___aomod@divisor+4,f,c
  1980  001586  220E               	addwfc	___aomod@divisor+5,f,c
  1981  001588  220F               	addwfc	___aomod@divisor+6,f,c
  1982  00158A  2210               	addwfc	___aomod@divisor+7,f,c
  1983  00158C                     l1491:
  1984  00158C  5009               	movf	___aomod@divisor,w,c
  1985  00158E  100A               	iorwf	___aomod@divisor+1,w,c
  1986  001590  100B               	iorwf	___aomod@divisor+2,w,c
  1987  001592  100C               	iorwf	___aomod@divisor+3,w,c
  1988  001594  100D               	iorwf	___aomod@divisor+4,w,c
  1989  001596  100E               	iorwf	___aomod@divisor+5,w,c
  1990  001598  100F               	iorwf	___aomod@divisor+6,w,c
  1991  00159A  1010               	iorwf	___aomod@divisor+7,w,c
  1992  00159C  B4D8               	btfsc	status,2,c
  1993  00159E  D03C               	goto	l1507
  1994  0015A0  0E01               	movlw	1
  1995  0015A2  6E11               	movwf	___aomod@counter,c
  1996  0015A4  D00A               	goto	l1497
  1997  0015A6                     l1495:
  1998  0015A6  90D8               	bcf	status,0,c
  1999  0015A8  3609               	rlcf	___aomod@divisor,f,c
  2000  0015AA  360A               	rlcf	___aomod@divisor+1,f,c
  2001  0015AC  360B               	rlcf	___aomod@divisor+2,f,c
  2002  0015AE  360C               	rlcf	___aomod@divisor+3,f,c
  2003  0015B0  360D               	rlcf	___aomod@divisor+4,f,c
  2004  0015B2  360E               	rlcf	___aomod@divisor+5,f,c
  2005  0015B4  360F               	rlcf	___aomod@divisor+6,f,c
  2006  0015B6  3610               	rlcf	___aomod@divisor+7,f,c
  2007  0015B8  2A11               	incf	___aomod@counter,f,c
  2008  0015BA                     l1497:
  2009  0015BA  AE10               	btfss	___aomod@divisor+7,7,c
  2010  0015BC  D7F4               	goto	l1495
  2011  0015BE                     u810:
  2012  0015BE  5009               	movf	___aomod@divisor,w,c
  2013  0015C0  5C01               	subwf	___aomod@dividend,w,c
  2014  0015C2  500A               	movf	___aomod@divisor+1,w,c
  2015  0015C4  5802               	subwfb	___aomod@dividend+1,w,c
  2016  0015C6  500B               	movf	___aomod@divisor+2,w,c
  2017  0015C8  5803               	subwfb	___aomod@dividend+2,w,c
  2018  0015CA  500C               	movf	___aomod@divisor+3,w,c
  2019  0015CC  5804               	subwfb	___aomod@dividend+3,w,c
  2020  0015CE  500D               	movf	___aomod@divisor+4,w,c
  2021  0015D0  5805               	subwfb	___aomod@dividend+4,w,c
  2022  0015D2  500E               	movf	___aomod@divisor+5,w,c
  2023  0015D4  5806               	subwfb	___aomod@dividend+5,w,c
  2024  0015D6  500F               	movf	___aomod@divisor+6,w,c
  2025  0015D8  5807               	subwfb	___aomod@dividend+6,w,c
  2026  0015DA  5010               	movf	___aomod@divisor+7,w,c
  2027  0015DC  5808               	subwfb	___aomod@dividend+7,w,c
  2028  0015DE  A0D8               	btfss	status,0,c
  2029  0015E0  D010               	goto	l1503
  2030  0015E2  5009               	movf	___aomod@divisor,w,c
  2031  0015E4  5E01               	subwf	___aomod@dividend,f,c
  2032  0015E6  500A               	movf	___aomod@divisor+1,w,c
  2033  0015E8  5A02               	subwfb	___aomod@dividend+1,f,c
  2034  0015EA  500B               	movf	___aomod@divisor+2,w,c
  2035  0015EC  5A03               	subwfb	___aomod@dividend+2,f,c
  2036  0015EE  500C               	movf	___aomod@divisor+3,w,c
  2037  0015F0  5A04               	subwfb	___aomod@dividend+3,f,c
  2038  0015F2  500D               	movf	___aomod@divisor+4,w,c
  2039  0015F4  5A05               	subwfb	___aomod@dividend+4,f,c
  2040  0015F6  500E               	movf	___aomod@divisor+5,w,c
  2041  0015F8  5A06               	subwfb	___aomod@dividend+5,f,c
  2042  0015FA  500F               	movf	___aomod@divisor+6,w,c
  2043  0015FC  5A07               	subwfb	___aomod@dividend+6,f,c
  2044  0015FE  5010               	movf	___aomod@divisor+7,w,c
  2045  001600  5A08               	subwfb	___aomod@dividend+7,f,c
  2046  001602                     l1503:
  2047  001602  90D8               	bcf	status,0,c
  2048  001604  3210               	rrcf	___aomod@divisor+7,f,c
  2049  001606  320F               	rrcf	___aomod@divisor+6,f,c
  2050  001608  320E               	rrcf	___aomod@divisor+5,f,c
  2051  00160A  320D               	rrcf	___aomod@divisor+4,f,c
  2052  00160C  320C               	rrcf	___aomod@divisor+3,f,c
  2053  00160E  320B               	rrcf	___aomod@divisor+2,f,c
  2054  001610  320A               	rrcf	___aomod@divisor+1,f,c
  2055  001612  3209               	rrcf	___aomod@divisor,f,c
  2056  001614  2E11               	decfsz	___aomod@counter,f,c
  2057  001616  D7D3               	goto	u810
  2058  001618                     l1507:
  2059  001618  5012               	movf	___aomod@sign,w,c
  2060  00161A  B4D8               	btfsc	status,2,c
  2061  00161C  D010               	goto	l1511
  2062  00161E  1E08               	comf	___aomod@dividend+7,f,c
  2063  001620  1E07               	comf	___aomod@dividend+6,f,c
  2064  001622  1E06               	comf	___aomod@dividend+5,f,c
  2065  001624  1E05               	comf	___aomod@dividend+4,f,c
  2066  001626  1E04               	comf	___aomod@dividend+3,f,c
  2067  001628  1E03               	comf	___aomod@dividend+2,f,c
  2068  00162A  1E02               	comf	___aomod@dividend+1,f,c
  2069  00162C  6C01               	negf	___aomod@dividend,c
  2070  00162E  0E00               	movlw	0
  2071  001630  2202               	addwfc	___aomod@dividend+1,f,c
  2072  001632  2203               	addwfc	___aomod@dividend+2,f,c
  2073  001634  2204               	addwfc	___aomod@dividend+3,f,c
  2074  001636  2205               	addwfc	___aomod@dividend+4,f,c
  2075  001638  2206               	addwfc	___aomod@dividend+5,f,c
  2076  00163A  2207               	addwfc	___aomod@dividend+6,f,c
  2077  00163C  2208               	addwfc	___aomod@dividend+7,f,c
  2078  00163E                     l1511:
  2079  00163E  C001  F001         	movff	___aomod@dividend,?___aomod
  2080  001642  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2081  001646  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  2082  00164A  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  2083  00164E  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2084  001652  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  2085  001656  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  2086  00165A  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  2087  00165E  0012               	return		;funcret
  2088  001660                     __end_of___aomod:
  2089                           	opt callstack 0
  2090                           
  2091 ;; *************** function ___aodiv *****************
  2092 ;; Defined at:
  2093 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  2094 ;; Parameters:    Size  Location     Type
  2095 ;;  dividend        8    0[COMRAM] long long 
  2096 ;;  divisor         8    8[COMRAM] long long 
  2097 ;; Auto vars:     Size  Location     Type
  2098 ;;  quotient        8   18[COMRAM] long long 
  2099 ;;  sign            1   17[COMRAM] unsigned char 
  2100 ;;  counter         1   16[COMRAM] unsigned char 
  2101 ;; Return value:  Size  Location     Type
  2102 ;;                  8    0[COMRAM] long long 
  2103 ;; Registers used:
  2104 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2105 ;; Tracked objects:
  2106 ;;		On entry : 0/0
  2107 ;;		On exit  : 0/0
  2108 ;;		Unchanged: 0/0
  2109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2110 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2111 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2113 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2114 ;;Total ram usage:       26 bytes
  2115 ;; Hardware stack levels used:    1
  2116 ;; This function calls:
  2117 ;;		Nothing
  2118 ;; This function is called by:
  2119 ;;		_dtoa
  2120 ;; This function uses a non-reentrant model
  2121 ;;
  2122                           
  2123                           	psect	text12
  2124  0013F4                     __ptext12:
  2125                           	opt callstack 0
  2126  0013F4                     ___aodiv:
  2127                           	opt callstack 26
  2128                           
  2129                           ;incstack = 0
  2130  0013F4  0E00               	movlw	0
  2131  0013F6  6E12               	movwf	___aodiv@sign,c
  2132  0013F8  AE10               	btfss	___aodiv@divisor+7,7,c
  2133  0013FA  D012               	goto	l1443
  2134  0013FC  1E10               	comf	___aodiv@divisor+7,f,c
  2135  0013FE  1E0F               	comf	___aodiv@divisor+6,f,c
  2136  001400  1E0E               	comf	___aodiv@divisor+5,f,c
  2137  001402  1E0D               	comf	___aodiv@divisor+4,f,c
  2138  001404  1E0C               	comf	___aodiv@divisor+3,f,c
  2139  001406  1E0B               	comf	___aodiv@divisor+2,f,c
  2140  001408  1E0A               	comf	___aodiv@divisor+1,f,c
  2141  00140A  6C09               	negf	___aodiv@divisor,c
  2142  00140C  0E00               	movlw	0
  2143  00140E  220A               	addwfc	___aodiv@divisor+1,f,c
  2144  001410  220B               	addwfc	___aodiv@divisor+2,f,c
  2145  001412  220C               	addwfc	___aodiv@divisor+3,f,c
  2146  001414  220D               	addwfc	___aodiv@divisor+4,f,c
  2147  001416  220E               	addwfc	___aodiv@divisor+5,f,c
  2148  001418  220F               	addwfc	___aodiv@divisor+6,f,c
  2149  00141A  2210               	addwfc	___aodiv@divisor+7,f,c
  2150  00141C  0E01               	movlw	1
  2151  00141E  6E12               	movwf	___aodiv@sign,c
  2152  001420                     l1443:
  2153  001420  AE08               	btfss	___aodiv@dividend+7,7,c
  2154  001422  D012               	goto	l1449
  2155  001424  1E08               	comf	___aodiv@dividend+7,f,c
  2156  001426  1E07               	comf	___aodiv@dividend+6,f,c
  2157  001428  1E06               	comf	___aodiv@dividend+5,f,c
  2158  00142A  1E05               	comf	___aodiv@dividend+4,f,c
  2159  00142C  1E04               	comf	___aodiv@dividend+3,f,c
  2160  00142E  1E03               	comf	___aodiv@dividend+2,f,c
  2161  001430  1E02               	comf	___aodiv@dividend+1,f,c
  2162  001432  6C01               	negf	___aodiv@dividend,c
  2163  001434  0E00               	movlw	0
  2164  001436  2202               	addwfc	___aodiv@dividend+1,f,c
  2165  001438  2203               	addwfc	___aodiv@dividend+2,f,c
  2166  00143A  2204               	addwfc	___aodiv@dividend+3,f,c
  2167  00143C  2205               	addwfc	___aodiv@dividend+4,f,c
  2168  00143E  2206               	addwfc	___aodiv@dividend+5,f,c
  2169  001440  2207               	addwfc	___aodiv@dividend+6,f,c
  2170  001442  2208               	addwfc	___aodiv@dividend+7,f,c
  2171  001444  0E01               	movlw	1
  2172  001446  1A12               	xorwf	___aodiv@sign,f,c
  2173  001448                     l1449:
  2174  001448  EE20  F013         	lfsr	2,___aodiv@quotient
  2175  00144C  0E07               	movlw	7
  2176  00144E                     u731:
  2177  00144E  6ADE               	clrf	postinc2,c
  2178  001450  06E8               	decf	wreg,f,c
  2179  001452  E2FD               	bc	u731
  2180  001454  5009               	movf	___aodiv@divisor,w,c
  2181  001456  100A               	iorwf	___aodiv@divisor+1,w,c
  2182  001458  100B               	iorwf	___aodiv@divisor+2,w,c
  2183  00145A  100C               	iorwf	___aodiv@divisor+3,w,c
  2184  00145C  100D               	iorwf	___aodiv@divisor+4,w,c
  2185  00145E  100E               	iorwf	___aodiv@divisor+5,w,c
  2186  001460  100F               	iorwf	___aodiv@divisor+6,w,c
  2187  001462  1010               	iorwf	___aodiv@divisor+7,w,c
  2188  001464  B4D8               	btfsc	status,2,c
  2189  001466  D046               	goto	l1471
  2190  001468  0E01               	movlw	1
  2191  00146A  6E11               	movwf	___aodiv@counter,c
  2192  00146C  D00A               	goto	l1457
  2193  00146E                     l1455:
  2194  00146E  90D8               	bcf	status,0,c
  2195  001470  3609               	rlcf	___aodiv@divisor,f,c
  2196  001472  360A               	rlcf	___aodiv@divisor+1,f,c
  2197  001474  360B               	rlcf	___aodiv@divisor+2,f,c
  2198  001476  360C               	rlcf	___aodiv@divisor+3,f,c
  2199  001478  360D               	rlcf	___aodiv@divisor+4,f,c
  2200  00147A  360E               	rlcf	___aodiv@divisor+5,f,c
  2201  00147C  360F               	rlcf	___aodiv@divisor+6,f,c
  2202  00147E  3610               	rlcf	___aodiv@divisor+7,f,c
  2203  001480  2A11               	incf	___aodiv@counter,f,c
  2204  001482                     l1457:
  2205  001482  AE10               	btfss	___aodiv@divisor+7,7,c
  2206  001484  D7F4               	goto	l1455
  2207  001486                     u750:
  2208  001486  90D8               	bcf	status,0,c
  2209  001488  3613               	rlcf	___aodiv@quotient,f,c
  2210  00148A  3614               	rlcf	___aodiv@quotient+1,f,c
  2211  00148C  3615               	rlcf	___aodiv@quotient+2,f,c
  2212  00148E  3616               	rlcf	___aodiv@quotient+3,f,c
  2213  001490  3617               	rlcf	___aodiv@quotient+4,f,c
  2214  001492  3618               	rlcf	___aodiv@quotient+5,f,c
  2215  001494  3619               	rlcf	___aodiv@quotient+6,f,c
  2216  001496  361A               	rlcf	___aodiv@quotient+7,f,c
  2217  001498  5009               	movf	___aodiv@divisor,w,c
  2218  00149A  5C01               	subwf	___aodiv@dividend,w,c
  2219  00149C  500A               	movf	___aodiv@divisor+1,w,c
  2220  00149E  5802               	subwfb	___aodiv@dividend+1,w,c
  2221  0014A0  500B               	movf	___aodiv@divisor+2,w,c
  2222  0014A2  5803               	subwfb	___aodiv@dividend+2,w,c
  2223  0014A4  500C               	movf	___aodiv@divisor+3,w,c
  2224  0014A6  5804               	subwfb	___aodiv@dividend+3,w,c
  2225  0014A8  500D               	movf	___aodiv@divisor+4,w,c
  2226  0014AA  5805               	subwfb	___aodiv@dividend+4,w,c
  2227  0014AC  500E               	movf	___aodiv@divisor+5,w,c
  2228  0014AE  5806               	subwfb	___aodiv@dividend+5,w,c
  2229  0014B0  500F               	movf	___aodiv@divisor+6,w,c
  2230  0014B2  5807               	subwfb	___aodiv@dividend+6,w,c
  2231  0014B4  5010               	movf	___aodiv@divisor+7,w,c
  2232  0014B6  5808               	subwfb	___aodiv@dividend+7,w,c
  2233  0014B8  A0D8               	btfss	status,0,c
  2234  0014BA  D011               	goto	l1467
  2235  0014BC  5009               	movf	___aodiv@divisor,w,c
  2236  0014BE  5E01               	subwf	___aodiv@dividend,f,c
  2237  0014C0  500A               	movf	___aodiv@divisor+1,w,c
  2238  0014C2  5A02               	subwfb	___aodiv@dividend+1,f,c
  2239  0014C4  500B               	movf	___aodiv@divisor+2,w,c
  2240  0014C6  5A03               	subwfb	___aodiv@dividend+2,f,c
  2241  0014C8  500C               	movf	___aodiv@divisor+3,w,c
  2242  0014CA  5A04               	subwfb	___aodiv@dividend+3,f,c
  2243  0014CC  500D               	movf	___aodiv@divisor+4,w,c
  2244  0014CE  5A05               	subwfb	___aodiv@dividend+4,f,c
  2245  0014D0  500E               	movf	___aodiv@divisor+5,w,c
  2246  0014D2  5A06               	subwfb	___aodiv@dividend+5,f,c
  2247  0014D4  500F               	movf	___aodiv@divisor+6,w,c
  2248  0014D6  5A07               	subwfb	___aodiv@dividend+6,f,c
  2249  0014D8  5010               	movf	___aodiv@divisor+7,w,c
  2250  0014DA  5A08               	subwfb	___aodiv@dividend+7,f,c
  2251  0014DC  8013               	bsf	___aodiv@quotient,0,c
  2252  0014DE                     l1467:
  2253  0014DE  90D8               	bcf	status,0,c
  2254  0014E0  3210               	rrcf	___aodiv@divisor+7,f,c
  2255  0014E2  320F               	rrcf	___aodiv@divisor+6,f,c
  2256  0014E4  320E               	rrcf	___aodiv@divisor+5,f,c
  2257  0014E6  320D               	rrcf	___aodiv@divisor+4,f,c
  2258  0014E8  320C               	rrcf	___aodiv@divisor+3,f,c
  2259  0014EA  320B               	rrcf	___aodiv@divisor+2,f,c
  2260  0014EC  320A               	rrcf	___aodiv@divisor+1,f,c
  2261  0014EE  3209               	rrcf	___aodiv@divisor,f,c
  2262  0014F0  2E11               	decfsz	___aodiv@counter,f,c
  2263  0014F2  D7C9               	goto	u750
  2264  0014F4                     l1471:
  2265  0014F4  5012               	movf	___aodiv@sign,w,c
  2266  0014F6  B4D8               	btfsc	status,2,c
  2267  0014F8  D010               	goto	l1475
  2268  0014FA  1E1A               	comf	___aodiv@quotient+7,f,c
  2269  0014FC  1E19               	comf	___aodiv@quotient+6,f,c
  2270  0014FE  1E18               	comf	___aodiv@quotient+5,f,c
  2271  001500  1E17               	comf	___aodiv@quotient+4,f,c
  2272  001502  1E16               	comf	___aodiv@quotient+3,f,c
  2273  001504  1E15               	comf	___aodiv@quotient+2,f,c
  2274  001506  1E14               	comf	___aodiv@quotient+1,f,c
  2275  001508  6C13               	negf	___aodiv@quotient,c
  2276  00150A  0E00               	movlw	0
  2277  00150C  2214               	addwfc	___aodiv@quotient+1,f,c
  2278  00150E  2215               	addwfc	___aodiv@quotient+2,f,c
  2279  001510  2216               	addwfc	___aodiv@quotient+3,f,c
  2280  001512  2217               	addwfc	___aodiv@quotient+4,f,c
  2281  001514  2218               	addwfc	___aodiv@quotient+5,f,c
  2282  001516  2219               	addwfc	___aodiv@quotient+6,f,c
  2283  001518  221A               	addwfc	___aodiv@quotient+7,f,c
  2284  00151A                     l1475:
  2285  00151A  C013  F001         	movff	___aodiv@quotient,?___aodiv
  2286  00151E  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  2287  001522  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  2288  001526  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  2289  00152A  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  2290  00152E  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  2291  001532  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  2292  001536  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  2293  00153A  0012               	return		;funcret
  2294  00153C                     __end_of___aodiv:
  2295                           	opt callstack 0
  2296                           
  2297 ;; *************** function _initLCD *****************
  2298 ;; Defined at:
  2299 ;;		line 69 in file "lcd.c"
  2300 ;; Parameters:    Size  Location     Type
  2301 ;;		None
  2302 ;; Auto vars:     Size  Location     Type
  2303 ;;		None
  2304 ;; Return value:  Size  Location     Type
  2305 ;;                  1    wreg      void 
  2306 ;; Registers used:
  2307 ;;		wreg, status,2, status,0, cstack
  2308 ;; Tracked objects:
  2309 ;;		On entry : 0/0
  2310 ;;		On exit  : 0/0
  2311 ;;		Unchanged: 0/0
  2312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2315 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2316 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2317 ;;Total ram usage:        1 bytes
  2318 ;; Hardware stack levels used:    1
  2319 ;; Hardware stack levels required when called:    4
  2320 ;; This function calls:
  2321 ;;		_lcdInst
  2322 ;;		_send_byte
  2323 ;;		_send_nibble
  2324 ;; This function is called by:
  2325 ;;		_main
  2326 ;; This function uses a non-reentrant model
  2327 ;;
  2328                           
  2329                           	psect	text13
  2330  0018BA                     __ptext13:
  2331                           	opt callstack 0
  2332  0018BA                     _initLCD:
  2333                           	opt callstack 26
  2334                           
  2335                           ;lcd.c: 70:     _delay((unsigned long)((15)*(10000000/4000.0)));
  2336                           
  2337                           ;incstack = 0
  2338  0018BA  0E31               	movlw	49
  2339  0018BC  6E05               	movwf	??_initLCD& (0+255),c
  2340  0018BE  0EB2               	movlw	178
  2341  0018C0                     u1177:
  2342  0018C0  2EE8               	decfsz	wreg,f,c
  2343  0018C2  D7FE               	bra	u1177
  2344  0018C4  2E05               	decfsz	??_initLCD& (0+255),f,c
  2345  0018C6  D7FC               	bra	u1177
  2346  0018C8  D000               	nop2	
  2347                           
  2348                           ;lcd.c: 72:     LATDbits.LATD2 = 0;
  2349  0018CA  948C               	bcf	3980,2,c	;volatile
  2350                           
  2351                           ;lcd.c: 74:     send_nibble(0b0011);
  2352  0018CC  0E03               	movlw	3
  2353  0018CE  EC80  F00D         	call	_send_nibble
  2354                           
  2355                           ;lcd.c: 75:     _delay((unsigned long)((5)*(10000000/4000.0)));
  2356  0018D2  0E11               	movlw	17
  2357  0018D4  6E05               	movwf	??_initLCD& (0+255),c
  2358  0018D6  0E3A               	movlw	58
  2359  0018D8                     u1187:
  2360  0018D8  2EE8               	decfsz	wreg,f,c
  2361  0018DA  D7FE               	bra	u1187
  2362  0018DC  2E05               	decfsz	??_initLCD& (0+255),f,c
  2363  0018DE  D7FC               	bra	u1187
  2364  0018E0  D000               	nop2	
  2365                           
  2366                           ;lcd.c: 76:     send_nibble(0b0011);
  2367  0018E2  0E03               	movlw	3
  2368  0018E4  EC80  F00D         	call	_send_nibble
  2369                           
  2370                           ;lcd.c: 77:     _delay((unsigned long)((150)*(10000000/4000000.0)));
  2371  0018E8  0E7D               	movlw	125
  2372  0018EA                     u1197:
  2373  0018EA  2EE8               	decfsz	wreg,f,c
  2374  0018EC  D7FE               	bra	u1197
  2375                           
  2376                           ;lcd.c: 78:     send_byte(0b00110010);
  2377  0018EE  0E32               	movlw	50
  2378  0018F0  EC8B  F00D         	call	_send_byte
  2379                           
  2380                           ;lcd.c: 80:     send_byte(0b00101000);
  2381  0018F4  0E28               	movlw	40
  2382  0018F6  EC8B  F00D         	call	_send_byte
  2383                           
  2384                           ;lcd.c: 81:     send_byte(0b00001000);
  2385  0018FA  0E08               	movlw	8
  2386  0018FC  EC8B  F00D         	call	_send_byte
  2387                           
  2388                           ;lcd.c: 82:     send_byte(0b00000001);
  2389  001900  0E01               	movlw	1
  2390  001902  EC8B  F00D         	call	_send_byte
  2391                           
  2392                           ;lcd.c: 83:     _delay((unsigned long)((5)*(10000000/4000.0)));
  2393  001906  0E11               	movlw	17
  2394  001908  6E05               	movwf	??_initLCD& (0+255),c
  2395  00190A  0E3A               	movlw	58
  2396  00190C                     u1207:
  2397  00190C  2EE8               	decfsz	wreg,f,c
  2398  00190E  D7FE               	bra	u1207
  2399  001910  2E05               	decfsz	??_initLCD& (0+255),f,c
  2400  001912  D7FC               	bra	u1207
  2401  001914  D000               	nop2	
  2402                           
  2403                           ;lcd.c: 84:     send_byte(0b00000110);
  2404  001916  0E06               	movlw	6
  2405  001918  EC8B  F00D         	call	_send_byte
  2406                           
  2407                           ;lcd.c: 87:     { lcdInst( (unsigned char)(8 | (1 << 2) | (1 << 1) | 1) );};
  2408  00191C  0E0F               	movlw	15
  2409  00191E  ECA3  F00D         	call	_lcdInst
  2410  001922  0012               	return		;funcret
  2411  001924                     __end_of_initLCD:
  2412                           	opt callstack 0
  2413                           
  2414 ;; *************** function _lcdInst *****************
  2415 ;; Defined at:
  2416 ;;		line 64 in file "lcd.c"
  2417 ;; Parameters:    Size  Location     Type
  2418 ;;  data            1    wreg     unsigned char 
  2419 ;; Auto vars:     Size  Location     Type
  2420 ;;  data            1    3[COMRAM] unsigned char 
  2421 ;; Return value:  Size  Location     Type
  2422 ;;                  1    wreg      void 
  2423 ;; Registers used:
  2424 ;;		wreg, status,2, status,0, cstack
  2425 ;; Tracked objects:
  2426 ;;		On entry : 0/0
  2427 ;;		On exit  : 0/0
  2428 ;;		Unchanged: 0/0
  2429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2431 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2433 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2434 ;;Total ram usage:        1 bytes
  2435 ;; Hardware stack levels used:    1
  2436 ;; Hardware stack levels required when called:    3
  2437 ;; This function calls:
  2438 ;;		_send_byte
  2439 ;; This function is called by:
  2440 ;;		_main
  2441 ;;		_initLCD
  2442 ;;		_lcd_shift_cursor
  2443 ;;		_lcd_shift_display
  2444 ;; This function uses a non-reentrant model
  2445 ;;
  2446                           
  2447                           	psect	text14
  2448  001B46                     __ptext14:
  2449                           	opt callstack 0
  2450  001B46                     _lcdInst:
  2451                           	opt callstack 27
  2452                           
  2453                           ;incstack = 0
  2454                           ;lcdInst@data stored from wreg
  2455  001B46  6E04               	movwf	lcdInst@data,c
  2456                           
  2457                           ;lcd.c: 65:     LATDbits.LATD2 = 0;
  2458  001B48  948C               	bcf	3980,2,c	;volatile
  2459                           
  2460                           ;lcd.c: 66:     send_byte(data);
  2461  001B4A  5004               	movf	lcdInst@data,w,c
  2462  001B4C  EC8B  F00D         	call	_send_byte
  2463  001B50  0012               	return		;funcret
  2464  001B52                     __end_of_lcdInst:
  2465                           	opt callstack 0
  2466                           
  2467 ;; *************** function _send_byte *****************
  2468 ;; Defined at:
  2469 ;;		line 55 in file "lcd.c"
  2470 ;; Parameters:    Size  Location     Type
  2471 ;;  data            1    wreg     unsigned char 
  2472 ;; Auto vars:     Size  Location     Type
  2473 ;;  data            1    2[COMRAM] unsigned char 
  2474 ;; Return value:  Size  Location     Type
  2475 ;;                  1    wreg      void 
  2476 ;; Registers used:
  2477 ;;		wreg, status,2, status,0, cstack
  2478 ;; Tracked objects:
  2479 ;;		On entry : 0/0
  2480 ;;		On exit  : 0/0
  2481 ;;		Unchanged: 0/0
  2482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2484 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2486 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2487 ;;Total ram usage:        1 bytes
  2488 ;; Hardware stack levels used:    1
  2489 ;; Hardware stack levels required when called:    2
  2490 ;; This function calls:
  2491 ;;		_send_nibble
  2492 ;; This function is called by:
  2493 ;;		_lcdInst
  2494 ;;		_initLCD
  2495 ;;		_putch
  2496 ;; This function uses a non-reentrant model
  2497 ;;
  2498                           
  2499                           	psect	text15
  2500  001B16                     __ptext15:
  2501                           	opt callstack 0
  2502  001B16                     _send_byte:
  2503                           	opt callstack 23
  2504                           
  2505                           ;incstack = 0
  2506                           ;send_byte@data stored from wreg
  2507  001B16  6E03               	movwf	send_byte@data,c
  2508                           
  2509                           ;lcd.c: 57:     send_nibble(data >> 4);
  2510  001B18  3803               	swapf	send_byte@data,w,c
  2511  001B1A  0B0F               	andlw	15
  2512  001B1C  EC80  F00D         	call	_send_nibble
  2513                           
  2514                           ;lcd.c: 60:     send_nibble(data);
  2515  001B20  5003               	movf	send_byte@data,w,c
  2516  001B22  EC80  F00D         	call	_send_nibble
  2517  001B26  0012               	return		;funcret
  2518  001B28                     __end_of_send_byte:
  2519                           	opt callstack 0
  2520                           
  2521 ;; *************** function _send_nibble *****************
  2522 ;; Defined at:
  2523 ;;		line 44 in file "lcd.c"
  2524 ;; Parameters:    Size  Location     Type
  2525 ;;  data            1    wreg     unsigned char 
  2526 ;; Auto vars:     Size  Location     Type
  2527 ;;  data            1    1[COMRAM] unsigned char 
  2528 ;; Return value:  Size  Location     Type
  2529 ;;                  1    wreg      void 
  2530 ;; Registers used:
  2531 ;;		wreg, status,2, status,0, cstack
  2532 ;; Tracked objects:
  2533 ;;		On entry : 0/0
  2534 ;;		On exit  : 0/0
  2535 ;;		Unchanged: 0/0
  2536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2538 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2540 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2541 ;;Total ram usage:        1 bytes
  2542 ;; Hardware stack levels used:    1
  2543 ;; Hardware stack levels required when called:    1
  2544 ;; This function calls:
  2545 ;;		_pulse_e
  2546 ;; This function is called by:
  2547 ;;		_send_byte
  2548 ;;		_initLCD
  2549 ;; This function uses a non-reentrant model
  2550 ;;
  2551                           
  2552                           	psect	text16
  2553  001B00                     __ptext16:
  2554                           	opt callstack 0
  2555  001B00                     _send_nibble:
  2556                           	opt callstack 23
  2557                           
  2558                           ;incstack = 0
  2559                           ;send_nibble@data stored from wreg
  2560  001B00  6E02               	movwf	send_nibble@data,c
  2561                           
  2562                           ;lcd.c: 46:     LATD = (unsigned char)(LATD & 0x0F);
  2563  001B02  508C               	movf	3980,w,c	;volatile
  2564  001B04  0B0F               	andlw	15
  2565  001B06  6E8C               	movwf	3980,c	;volatile
  2566                           
  2567                           ;lcd.c: 47:     LATD = (unsigned char)((data << 4) | LATD);
  2568  001B08  3802               	swapf	send_nibble@data,w,c
  2569  001B0A  0BF0               	andlw	240
  2570  001B0C  108C               	iorwf	3980,w,c	;volatile
  2571  001B0E  6E8C               	movwf	3980,c	;volatile
  2572                           
  2573                           ;lcd.c: 48:     pulse_e();
  2574  001B10  EC33  F00D         	call	_pulse_e	;wreg free
  2575  001B14  0012               	return		;funcret
  2576  001B16                     __end_of_send_nibble:
  2577                           	opt callstack 0
  2578                           
  2579 ;; *************** function _pulse_e *****************
  2580 ;; Defined at:
  2581 ;;		line 28 in file "lcd.c"
  2582 ;; Parameters:    Size  Location     Type
  2583 ;;		None
  2584 ;; Auto vars:     Size  Location     Type
  2585 ;;  interruptSta    1    0[COMRAM] unsigned char 
  2586 ;; Return value:  Size  Location     Type
  2587 ;;                  1    wreg      void 
  2588 ;; Registers used:
  2589 ;;		wreg
  2590 ;; Tracked objects:
  2591 ;;		On entry : 0/0
  2592 ;;		On exit  : 0/0
  2593 ;;		Unchanged: 0/0
  2594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2596 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2598 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2599 ;;Total ram usage:        1 bytes
  2600 ;; Hardware stack levels used:    1
  2601 ;; This function calls:
  2602 ;;		Nothing
  2603 ;; This function is called by:
  2604 ;;		_send_nibble
  2605 ;; This function uses a non-reentrant model
  2606 ;;
  2607                           
  2608                           	psect	text17
  2609  001A66                     __ptext17:
  2610                           	opt callstack 0
  2611  001A66                     _pulse_e:
  2612                           	opt callstack 23
  2613                           
  2614                           ;lcd.c: 29:     unsigned char interruptState = INTCONbits.GIE;
  2615                           
  2616                           ;incstack = 0
  2617  001A66  0E00               	movlw	0
  2618  001A68  BEF2               	btfsc	4082,7,c	;volatile
  2619  001A6A  0E01               	movlw	1
  2620  001A6C  6E01               	movwf	pulse_e@interruptState,c
  2621                           
  2622                           ;lcd.c: 30:     (INTCONbits.GIE = 0);
  2623  001A6E  9EF2               	bcf	4082,7,c	;volatile
  2624                           
  2625                           ;lcd.c: 31:     LATDbits.LATD3 = 1;
  2626  001A70  868C               	bsf	3980,3,c	;volatile
  2627                           
  2628                           ;lcd.c: 34:     _delay((unsigned long)((25)*(10000000/4000000.0)));
  2629  001A72  0E14               	movlw	20
  2630  001A74                     u1217:
  2631  001A74  2EE8               	decfsz	wreg,f,c
  2632  001A76  D7FE               	bra	u1217
  2633  001A78  D000               	nop2	
  2634                           
  2635                           ;lcd.c: 35:     LATDbits.LATD3 = 0;
  2636  001A7A  968C               	bcf	3980,3,c	;volatile
  2637                           
  2638                           ;lcd.c: 36:     _delay((unsigned long)((100)*(10000000/4000000.0)));
  2639  001A7C  0E53               	movlw	83
  2640  001A7E                     u1227:
  2641  001A7E  2EE8               	decfsz	wreg,f,c
  2642  001A80  D7FE               	bra	u1227
  2643  001A82  F000               	nop	
  2644                           
  2645                           ;lcd.c: 37:     INTCONbits.GIE = interruptState;
  2646  001A84  B001               	btfsc	pulse_e@interruptState,0,c
  2647  001A86  D002               	bra	u595
  2648  001A88  9EF2               	bcf	4082,7,c	;volatile
  2649  001A8A  D001               	bra	u596
  2650  001A8C                     u595:
  2651  001A8C  8EF2               	bsf	4082,7,c	;volatile
  2652  001A8E                     u596:
  2653  001A8E  0012               	return		;funcret
  2654  001A90                     __end_of_pulse_e:
  2655                           	opt callstack 0
  2656                           
  2657 ;; *************** function _I2C_Master_Write *****************
  2658 ;; Defined at:
  2659 ;;		line 70 in file "I2C.c"
  2660 ;; Parameters:    Size  Location     Type
  2661 ;;  byteToWrite     2    1[COMRAM] unsigned int 
  2662 ;; Auto vars:     Size  Location     Type
  2663 ;;		None
  2664 ;; Return value:  Size  Location     Type
  2665 ;;                  1    wreg      void 
  2666 ;; Registers used:
  2667 ;;		wreg, status,2, status,0, cstack
  2668 ;; Tracked objects:
  2669 ;;		On entry : 0/0
  2670 ;;		On exit  : 0/0
  2671 ;;		Unchanged: 0/0
  2672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2673 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2676 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2677 ;;Total ram usage:        2 bytes
  2678 ;; Hardware stack levels used:    1
  2679 ;; Hardware stack levels required when called:    1
  2680 ;; This function calls:
  2681 ;;		_I2C_Master_Wait
  2682 ;; This function is called by:
  2683 ;;		_main
  2684 ;; This function uses a non-reentrant model
  2685 ;;
  2686                           
  2687                           	psect	text18
  2688  001B52                     __ptext18:
  2689                           	opt callstack 0
  2690  001B52                     _I2C_Master_Write:
  2691                           	opt callstack 29
  2692                           
  2693                           ;I2C.c: 71:     I2C_Master_Wait();
  2694                           
  2695                           ;incstack = 0
  2696  001B52  EC94  F00D         	call	_I2C_Master_Wait	;wreg free
  2697                           
  2698                           ;I2C.c: 74:     SSPBUF = byteToWrite;
  2699  001B56  C002  FFC9         	movff	I2C_Master_Write@byteToWrite,4041	;volatile
  2700  001B5A  0012               	return		;funcret
  2701  001B5C                     __end_of_I2C_Master_Write:
  2702                           	opt callstack 0
  2703                           
  2704 ;; *************** function _I2C_Master_Stop *****************
  2705 ;; Defined at:
  2706 ;;		line 65 in file "I2C.c"
  2707 ;; Parameters:    Size  Location     Type
  2708 ;;		None
  2709 ;; Auto vars:     Size  Location     Type
  2710 ;;		None
  2711 ;; Return value:  Size  Location     Type
  2712 ;;                  1    wreg      void 
  2713 ;; Registers used:
  2714 ;;		wreg, status,2, status,0, cstack
  2715 ;; Tracked objects:
  2716 ;;		On entry : 0/0
  2717 ;;		On exit  : 0/0
  2718 ;;		Unchanged: 0/0
  2719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2724 ;;Total ram usage:        0 bytes
  2725 ;; Hardware stack levels used:    1
  2726 ;; Hardware stack levels required when called:    1
  2727 ;; This function calls:
  2728 ;;		_I2C_Master_Wait
  2729 ;; This function is called by:
  2730 ;;		_main
  2731 ;; This function uses a non-reentrant model
  2732 ;;
  2733                           
  2734                           	psect	text19
  2735  001B5C                     __ptext19:
  2736                           	opt callstack 0
  2737  001B5C                     _I2C_Master_Stop:
  2738                           	opt callstack 29
  2739                           
  2740                           ;I2C.c: 66:     I2C_Master_Wait();
  2741                           
  2742                           ;incstack = 0
  2743  001B5C  EC94  F00D         	call	_I2C_Master_Wait	;wreg free
  2744                           
  2745                           ;I2C.c: 67:     SSPCON2bits.PEN = 1;
  2746  001B60  84C5               	bsf	4037,2,c	;volatile
  2747  001B62  0012               	return		;funcret
  2748  001B64                     __end_of_I2C_Master_Stop:
  2749                           	opt callstack 0
  2750                           
  2751 ;; *************** function _I2C_Master_Start *****************
  2752 ;; Defined at:
  2753 ;;		line 55 in file "I2C.c"
  2754 ;; Parameters:    Size  Location     Type
  2755 ;;		None
  2756 ;; Auto vars:     Size  Location     Type
  2757 ;;		None
  2758 ;; Return value:  Size  Location     Type
  2759 ;;                  1    wreg      void 
  2760 ;; Registers used:
  2761 ;;		wreg, status,2, status,0, cstack
  2762 ;; Tracked objects:
  2763 ;;		On entry : 0/0
  2764 ;;		On exit  : 0/0
  2765 ;;		Unchanged: 0/0
  2766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2771 ;;Total ram usage:        0 bytes
  2772 ;; Hardware stack levels used:    1
  2773 ;; Hardware stack levels required when called:    1
  2774 ;; This function calls:
  2775 ;;		_I2C_Master_Wait
  2776 ;; This function is called by:
  2777 ;;		_main
  2778 ;; This function uses a non-reentrant model
  2779 ;;
  2780                           
  2781                           	psect	text20
  2782  001B64                     __ptext20:
  2783                           	opt callstack 0
  2784  001B64                     _I2C_Master_Start:
  2785                           	opt callstack 29
  2786                           
  2787                           ;I2C.c: 56:     I2C_Master_Wait();
  2788                           
  2789                           ;incstack = 0
  2790  001B64  EC94  F00D         	call	_I2C_Master_Wait	;wreg free
  2791                           
  2792                           ;I2C.c: 57:     SSPCON2bits.SEN = 1;
  2793  001B68  80C5               	bsf	4037,0,c	;volatile
  2794  001B6A  0012               	return		;funcret
  2795  001B6C                     __end_of_I2C_Master_Start:
  2796                           	opt callstack 0
  2797                           
  2798 ;; *************** function _I2C_Master_RepeatedStart *****************
  2799 ;; Defined at:
  2800 ;;		line 60 in file "I2C.c"
  2801 ;; Parameters:    Size  Location     Type
  2802 ;;		None
  2803 ;; Auto vars:     Size  Location     Type
  2804 ;;		None
  2805 ;; Return value:  Size  Location     Type
  2806 ;;                  1    wreg      void 
  2807 ;; Registers used:
  2808 ;;		wreg, status,2, status,0, cstack
  2809 ;; Tracked objects:
  2810 ;;		On entry : 0/0
  2811 ;;		On exit  : 0/0
  2812 ;;		Unchanged: 0/0
  2813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2818 ;;Total ram usage:        0 bytes
  2819 ;; Hardware stack levels used:    1
  2820 ;; Hardware stack levels required when called:    1
  2821 ;; This function calls:
  2822 ;;		_I2C_Master_Wait
  2823 ;; This function is called by:
  2824 ;;		_main
  2825 ;; This function uses a non-reentrant model
  2826 ;;
  2827                           
  2828                           	psect	text21
  2829  001B6C                     __ptext21:
  2830                           	opt callstack 0
  2831  001B6C                     _I2C_Master_RepeatedStart:
  2832                           	opt callstack 29
  2833                           
  2834                           ;I2C.c: 61:     I2C_Master_Wait();
  2835                           
  2836                           ;incstack = 0
  2837  001B6C  EC94  F00D         	call	_I2C_Master_Wait	;wreg free
  2838                           
  2839                           ;I2C.c: 62:     SSPCON2bits.RSEN = 1;
  2840  001B70  82C5               	bsf	4037,1,c	;volatile
  2841  001B72  0012               	return		;funcret
  2842  001B74                     __end_of_I2C_Master_RepeatedStart:
  2843                           	opt callstack 0
  2844                           
  2845 ;; *************** function _I2C_Master_Read *****************
  2846 ;; Defined at:
  2847 ;;		line 77 in file "I2C.c"
  2848 ;; Parameters:    Size  Location     Type
  2849 ;;  ackBit          1    wreg     unsigned char 
  2850 ;; Auto vars:     Size  Location     Type
  2851 ;;  ackBit          1    1[COMRAM] unsigned char 
  2852 ;;  receivedByte    1    2[COMRAM] unsigned char 
  2853 ;; Return value:  Size  Location     Type
  2854 ;;                  1    wreg      unsigned char 
  2855 ;; Registers used:
  2856 ;;		wreg, status,2, status,0, cstack
  2857 ;; Tracked objects:
  2858 ;;		On entry : 0/0
  2859 ;;		On exit  : 0/0
  2860 ;;		Unchanged: 0/0
  2861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2863 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2865 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2866 ;;Total ram usage:        2 bytes
  2867 ;; Hardware stack levels used:    1
  2868 ;; Hardware stack levels required when called:    1
  2869 ;; This function calls:
  2870 ;;		_I2C_Master_Wait
  2871 ;; This function is called by:
  2872 ;;		_main
  2873 ;; This function uses a non-reentrant model
  2874 ;;
  2875                           
  2876                           	psect	text22
  2877  001ADC                     __ptext22:
  2878                           	opt callstack 0
  2879  001ADC                     _I2C_Master_Read:
  2880                           	opt callstack 29
  2881                           
  2882                           ;incstack = 0
  2883                           ;I2C_Master_Read@ackBit stored from wreg
  2884  001ADC  6E02               	movwf	I2C_Master_Read@ackBit,c
  2885                           
  2886                           ;I2C.c: 78:     I2C_Master_Wait();
  2887  001ADE  EC94  F00D         	call	_I2C_Master_Wait	;wreg free
  2888                           
  2889                           ;I2C.c: 79:     SSPCON2bits.RCEN = 1;
  2890  001AE2  86C5               	bsf	4037,3,c	;volatile
  2891                           
  2892                           ;I2C.c: 81:     I2C_Master_Wait();
  2893  001AE4  EC94  F00D         	call	_I2C_Master_Wait	;wreg free
  2894                           
  2895                           ;I2C.c: 84:     unsigned char receivedByte = SSPBUF;
  2896  001AE8  CFC9 F003          	movff	4041,I2C_Master_Read@receivedByte	;volatile
  2897                           
  2898                           ;I2C.c: 86:     I2C_Master_Wait();
  2899  001AEC  EC94  F00D         	call	_I2C_Master_Wait	;wreg free
  2900                           
  2901                           ;I2C.c: 87:     SSPCON2bits.ACKDT = ackBit;
  2902  001AF0  B002               	btfsc	I2C_Master_Read@ackBit,0,c
  2903  001AF2  D002               	bra	u1105
  2904  001AF4  9AC5               	bcf	4037,5,c	;volatile
  2905  001AF6  D001               	bra	u1106
  2906  001AF8                     u1105:
  2907  001AF8  8AC5               	bsf	4037,5,c	;volatile
  2908  001AFA                     u1106:
  2909                           
  2910                           ;I2C.c: 88:     SSPCON2bits.ACKEN = 1;
  2911  001AFA  88C5               	bsf	4037,4,c	;volatile
  2912                           
  2913                           ;I2C.c: 90:     return receivedByte;
  2914  001AFC  5003               	movf	I2C_Master_Read@receivedByte,w,c
  2915  001AFE  0012               	return		;funcret
  2916  001B00                     __end_of_I2C_Master_Read:
  2917                           	opt callstack 0
  2918                           
  2919 ;; *************** function _I2C_Master_Wait *****************
  2920 ;; Defined at:
  2921 ;;		line 21 in file "I2C.c"
  2922 ;; Parameters:    Size  Location     Type
  2923 ;;		None
  2924 ;; Auto vars:     Size  Location     Type
  2925 ;;		None
  2926 ;; Return value:  Size  Location     Type
  2927 ;;                  1    wreg      void 
  2928 ;; Registers used:
  2929 ;;		wreg, status,2, status,0
  2930 ;; Tracked objects:
  2931 ;;		On entry : 0/0
  2932 ;;		On exit  : 0/0
  2933 ;;		Unchanged: 0/0
  2934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2937 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2938 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2939 ;;Total ram usage:        1 bytes
  2940 ;; Hardware stack levels used:    1
  2941 ;; This function calls:
  2942 ;;		Nothing
  2943 ;; This function is called by:
  2944 ;;		_I2C_Master_Start
  2945 ;;		_I2C_Master_RepeatedStart
  2946 ;;		_I2C_Master_Stop
  2947 ;;		_I2C_Master_Write
  2948 ;;		_I2C_Master_Read
  2949 ;; This function uses a non-reentrant model
  2950 ;;
  2951                           
  2952                           	psect	text23
  2953  001B28                     __ptext23:
  2954                           	opt callstack 0
  2955  001B28                     _I2C_Master_Wait:
  2956                           	opt callstack 29
  2957                           
  2958                           ;I2C.c: 26:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F)){
  2959                           
  2960                           ;I2C.c: 28:     }
  2961                           
  2962                           ;incstack = 0
  2963  001B28  B4C7               	btfsc	4039,2,c	;volatile
  2964  001B2A  D7FE               	goto	_I2C_Master_Wait
  2965  001B2C  CFC5 F001          	movff	4037,??_I2C_Master_Wait	;volatile
  2966  001B30  0E1F               	movlw	31
  2967  001B32  1601               	andwf	??_I2C_Master_Wait,f,c
  2968  001B34  B4D8               	btfsc	status,2,c
  2969  001B36  0012               	return	
  2970  001B38  D7F7               	goto	_I2C_Master_Wait
  2971  001B3A                     __end_of_I2C_Master_Wait:
  2972                           	opt callstack 0
  2973                           
  2974 ;; *************** function _I2C_Master_Init *****************
  2975 ;; Defined at:
  2976 ;;		line 32 in file "I2C.c"
  2977 ;; Parameters:    Size  Location     Type
  2978 ;;  clockFreq       4   13[COMRAM] const unsigned long 
  2979 ;; Auto vars:     Size  Location     Type
  2980 ;;		None
  2981 ;; Return value:  Size  Location     Type
  2982 ;;                  1    wreg      void 
  2983 ;; Registers used:
  2984 ;;		wreg, status,2, status,0, cstack
  2985 ;; Tracked objects:
  2986 ;;		On entry : 0/0
  2987 ;;		On exit  : 0/0
  2988 ;;		Unchanged: 0/0
  2989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2990 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2992 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2993 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2994 ;;Total ram usage:        8 bytes
  2995 ;; Hardware stack levels used:    1
  2996 ;; Hardware stack levels required when called:    1
  2997 ;; This function calls:
  2998 ;;		___lldiv
  2999 ;; This function is called by:
  3000 ;;		_main
  3001 ;; This function uses a non-reentrant model
  3002 ;;
  3003                           
  3004                           	psect	text24
  3005  001924                     __ptext24:
  3006                           	opt callstack 0
  3007  001924                     _I2C_Master_Init:
  3008                           	opt callstack 29
  3009                           
  3010                           ;I2C.c: 34:     SSPCON1bits.SSPEN = 0;
  3011                           
  3012                           ;incstack = 0
  3013  001924  9AC6               	bcf	4038,5,c	;volatile
  3014                           
  3015                           ;I2C.c: 37:     TRISCbits.TRISC3 = 1;
  3016  001926  8694               	bsf	3988,3,c	;volatile
  3017                           
  3018                           ;I2C.c: 38:     TRISCbits.TRISC4 = 1;
  3019  001928  8894               	bsf	3988,4,c	;volatile
  3020                           
  3021                           ;I2C.c: 43:     SSPADD = (10000000 / (4 * clockFreq)) - 1;
  3022  00192A  0E80               	movlw	128
  3023  00192C  6E01               	movwf	___lldiv@dividend,c
  3024  00192E  0E96               	movlw	150
  3025  001930  6E02               	movwf	___lldiv@dividend+1,c
  3026  001932  0E98               	movlw	152
  3027  001934  6E03               	movwf	___lldiv@dividend+2,c
  3028  001936  0E00               	movlw	0
  3029  001938  6E04               	movwf	___lldiv@dividend+3,c
  3030  00193A  C00E  F012         	movff	I2C_Master_Init@clockFreq,??_I2C_Master_Init
  3031  00193E  C00F  F013         	movff	I2C_Master_Init@clockFreq+1,??_I2C_Master_Init+1
  3032  001942  C010  F014         	movff	I2C_Master_Init@clockFreq+2,??_I2C_Master_Init+2
  3033  001946  C011  F015         	movff	I2C_Master_Init@clockFreq+3,??_I2C_Master_Init+3
  3034  00194A  0E02               	movlw	2
  3035  00194C                     u1095:
  3036  00194C  90D8               	bcf	status,0,c
  3037  00194E  3612               	rlcf	??_I2C_Master_Init,f,c
  3038  001950  3613               	rlcf	??_I2C_Master_Init+1,f,c
  3039  001952  3614               	rlcf	??_I2C_Master_Init+2,f,c
  3040  001954  3615               	rlcf	??_I2C_Master_Init+3,f,c
  3041  001956  2EE8               	decfsz	wreg,f,c
  3042  001958  D7F9               	goto	u1095
  3043  00195A  C012  F005         	movff	??_I2C_Master_Init,___lldiv@divisor
  3044  00195E  C013  F006         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
  3045  001962  C014  F007         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
  3046  001966  C015  F008         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
  3047  00196A  ECE6  F00B         	call	___lldiv	;wreg free
  3048  00196E  0401               	decf	?___lldiv,w,c
  3049  001970  6EC8               	movwf	4040,c	;volatile
  3050                           
  3051                           ;I2C.c: 46:     SSPSTAT = 0b10000000;
  3052  001972  0E80               	movlw	128
  3053  001974  6EC7               	movwf	4039,c	;volatile
  3054                           
  3055                           ;I2C.c: 49:     SSPCON1 = 0b00101000;
  3056  001976  0E28               	movlw	40
  3057  001978  6EC6               	movwf	4038,c	;volatile
  3058                           
  3059                           ;I2C.c: 52:     SSPCON2 = 0b00000000;
  3060  00197A  0E00               	movlw	0
  3061  00197C  6EC5               	movwf	4037,c	;volatile
  3062  00197E  0012               	return		;funcret
  3063  001980                     __end_of_I2C_Master_Init:
  3064                           	opt callstack 0
  3065                           
  3066 ;; *************** function ___lldiv *****************
  3067 ;; Defined at:
  3068 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__lldiv.c"
  3069 ;; Parameters:    Size  Location     Type
  3070 ;;  dividend        4    0[COMRAM] unsigned long 
  3071 ;;  divisor         4    4[COMRAM] unsigned long 
  3072 ;; Auto vars:     Size  Location     Type
  3073 ;;  quotient        4    8[COMRAM] unsigned long 
  3074 ;;  counter         1   12[COMRAM] unsigned char 
  3075 ;; Return value:  Size  Location     Type
  3076 ;;                  4    0[COMRAM] unsigned long 
  3077 ;; Registers used:
  3078 ;;		wreg, status,2, status,0
  3079 ;; Tracked objects:
  3080 ;;		On entry : 0/0
  3081 ;;		On exit  : 0/0
  3082 ;;		Unchanged: 0/0
  3083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3084 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3085 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3087 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3088 ;;Total ram usage:       13 bytes
  3089 ;; Hardware stack levels used:    1
  3090 ;; This function calls:
  3091 ;;		Nothing
  3092 ;; This function is called by:
  3093 ;;		_I2C_Master_Init
  3094 ;; This function uses a non-reentrant model
  3095 ;;
  3096                           
  3097                           	psect	text25
  3098  0017CC                     __ptext25:
  3099                           	opt callstack 0
  3100  0017CC                     ___lldiv:
  3101                           	opt callstack 29
  3102                           
  3103                           ;incstack = 0
  3104  0017CC  0E00               	movlw	0
  3105  0017CE  6E09               	movwf	___lldiv@quotient,c
  3106  0017D0  0E00               	movlw	0
  3107  0017D2  6E0A               	movwf	___lldiv@quotient+1,c
  3108  0017D4  0E00               	movlw	0
  3109  0017D6  6E0B               	movwf	___lldiv@quotient+2,c
  3110  0017D8  0E00               	movlw	0
  3111  0017DA  6E0C               	movwf	___lldiv@quotient+3,c
  3112  0017DC  5005               	movf	___lldiv@divisor,w,c
  3113  0017DE  1006               	iorwf	___lldiv@divisor+1,w,c
  3114  0017E0  1007               	iorwf	___lldiv@divisor+2,w,c
  3115  0017E2  1008               	iorwf	___lldiv@divisor+3,w,c
  3116  0017E4  B4D8               	btfsc	status,2,c
  3117  0017E6  D02A               	goto	l233
  3118  0017E8  0E01               	movlw	1
  3119  0017EA  6E0D               	movwf	___lldiv@counter,c
  3120  0017EC  D006               	goto	l1643
  3121  0017EE                     l1641:
  3122  0017EE  90D8               	bcf	status,0,c
  3123  0017F0  3605               	rlcf	___lldiv@divisor,f,c
  3124  0017F2  3606               	rlcf	___lldiv@divisor+1,f,c
  3125  0017F4  3607               	rlcf	___lldiv@divisor+2,f,c
  3126  0017F6  3608               	rlcf	___lldiv@divisor+3,f,c
  3127  0017F8  2A0D               	incf	___lldiv@counter,f,c
  3128  0017FA                     l1643:
  3129  0017FA  AE08               	btfss	___lldiv@divisor+3,7,c
  3130  0017FC  D7F8               	goto	l1641
  3131  0017FE                     u1070:
  3132  0017FE  90D8               	bcf	status,0,c
  3133  001800  3609               	rlcf	___lldiv@quotient,f,c
  3134  001802  360A               	rlcf	___lldiv@quotient+1,f,c
  3135  001804  360B               	rlcf	___lldiv@quotient+2,f,c
  3136  001806  360C               	rlcf	___lldiv@quotient+3,f,c
  3137  001808  5005               	movf	___lldiv@divisor,w,c
  3138  00180A  5C01               	subwf	___lldiv@dividend,w,c
  3139  00180C  5006               	movf	___lldiv@divisor+1,w,c
  3140  00180E  5802               	subwfb	___lldiv@dividend+1,w,c
  3141  001810  5007               	movf	___lldiv@divisor+2,w,c
  3142  001812  5803               	subwfb	___lldiv@dividend+2,w,c
  3143  001814  5008               	movf	___lldiv@divisor+3,w,c
  3144  001816  5804               	subwfb	___lldiv@dividend+3,w,c
  3145  001818  A0D8               	btfss	status,0,c
  3146  00181A  D009               	goto	l1653
  3147  00181C  5005               	movf	___lldiv@divisor,w,c
  3148  00181E  5E01               	subwf	___lldiv@dividend,f,c
  3149  001820  5006               	movf	___lldiv@divisor+1,w,c
  3150  001822  5A02               	subwfb	___lldiv@dividend+1,f,c
  3151  001824  5007               	movf	___lldiv@divisor+2,w,c
  3152  001826  5A03               	subwfb	___lldiv@dividend+2,f,c
  3153  001828  5008               	movf	___lldiv@divisor+3,w,c
  3154  00182A  5A04               	subwfb	___lldiv@dividend+3,f,c
  3155  00182C  8009               	bsf	___lldiv@quotient,0,c
  3156  00182E                     l1653:
  3157  00182E  90D8               	bcf	status,0,c
  3158  001830  3208               	rrcf	___lldiv@divisor+3,f,c
  3159  001832  3207               	rrcf	___lldiv@divisor+2,f,c
  3160  001834  3206               	rrcf	___lldiv@divisor+1,f,c
  3161  001836  3205               	rrcf	___lldiv@divisor,f,c
  3162  001838  2E0D               	decfsz	___lldiv@counter,f,c
  3163  00183A  D7E1               	goto	u1070
  3164  00183C                     l233:
  3165  00183C  C009  F001         	movff	___lldiv@quotient,?___lldiv
  3166  001840  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  3167  001844  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  3168  001848  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  3169  00184C  0012               	return		;funcret
  3170  00184E                     __end_of___lldiv:
  3171                           	opt callstack 0
  3172                           
  3173                           	psect	rparam
  3174  0000                     tosu	equ	0xFFF
  3175                           tosh	equ	0xFFE
  3176                           tosl	equ	0xFFD
  3177                           stkptr	equ	0xFFC
  3178                           pclatu	equ	0xFFB
  3179                           pclath	equ	0xFFA
  3180                           pcl	equ	0xFF9
  3181                           tblptru	equ	0xFF8
  3182                           tblptrh	equ	0xFF7
  3183                           tblptrl	equ	0xFF6
  3184                           tablat	equ	0xFF5
  3185                           prodh	equ	0xFF4
  3186                           prodl	equ	0xFF3
  3187                           indf0	equ	0xFEF
  3188                           postinc0	equ	0xFEE
  3189                           postdec0	equ	0xFED
  3190                           preinc0	equ	0xFEC
  3191                           plusw0	equ	0xFEB
  3192                           fsr0h	equ	0xFEA
  3193                           fsr0l	equ	0xFE9
  3194                           wreg	equ	0xFE8
  3195                           indf1	equ	0xFE7
  3196                           postinc1	equ	0xFE6
  3197                           postdec1	equ	0xFE5
  3198                           preinc1	equ	0xFE4
  3199                           plusw1	equ	0xFE3
  3200                           fsr1h	equ	0xFE2
  3201                           fsr1l	equ	0xFE1
  3202                           bsr	equ	0xFE0
  3203                           indf2	equ	0xFDF
  3204                           postinc2	equ	0xFDE
  3205                           postdec2	equ	0xFDD
  3206                           preinc2	equ	0xFDC
  3207                           plusw2	equ	0xFDB
  3208                           fsr2h	equ	0xFDA
  3209                           fsr2l	equ	0xFD9
  3210                           status	equ	0xFD8


Data Sizes:
    Strings     24
    Constant    23
    Data        0
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    112     120
    BANK0           128      0      32
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_2(CODE[12]), STR_1(CODE[12]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S865_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_2(CODE[12]), STR_1(CODE[12]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 12
		 -> STR_2(CODE[12]), STR_1(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_send_byte
    _abs->___aomod
    _initLCD->_lcdInst
    _lcdInst->_send_byte
    _send_byte->_send_nibble
    _send_nibble->_pulse_e
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_RepeatedStart->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0    7643
                                             99 COMRAM    13    13      0
                    _I2C_Master_Init
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _initLCD
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    6446
                                             91 COMRAM     8     4      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6240
                                             83 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    5886
                                             67 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4448
                                             31 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2799
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1280
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     879
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0     111
                                              3 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     245
                                              4 COMRAM     1     1      0
                            _lcdInst
                          _send_byte
                        _send_nibble
 ---------------------------------------------------------------------------------
 (1) _lcdInst                                              1     1      0     111
                                              3 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (6) _send_byte                                            1     1      0      89
                                              2 COMRAM     1     1      0
                        _send_nibble
 ---------------------------------------------------------------------------------
 (7) _send_nibble                                          1     1      0      45
                                              1 COMRAM     1     1      0
                            _pulse_e
 ---------------------------------------------------------------------------------
 (8) _pulse_e                                              1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     174
                                              1 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      2     2      0      45
                                              1 COMRAM     2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                             13 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_RepeatedStart
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _initLCD
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _send_byte
       _send_nibble
         _pulse_e
     _send_nibble
       _pulse_e
   _lcdInst
     _send_byte
       _send_nibble
         _pulse_e
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _fputc
           _putch
             _send_byte
               _send_nibble
                 _pulse_e

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      20       5       25.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     70      78       1       94.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      98      34        0.0%
DATA                 0      0      98       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Apr 07 19:30:46 2019

                      __CFG_CPD$ON 000000                        __CFG_BORV$3 000000  
                     __CFG_CP0$OFF 000000                       __CFG_CP1$OFF 000000  
                     __CFG_CP2$OFF 000000                       __CFG_CP3$OFF 000000  
                      __CFG_OSC$HS 000000                                l233 183C  
                              l171 10AC                                l158 1764  
                              l169 10A4                                l881 1A32  
                     __CFG_CPB$OFF 000000                                u610 185E  
                              u700 1A18                                u630 18A6  
                              u810 15BE                                u731 144E  
                              u900 10C0                                u750 1486  
                              u910 11DC                                u840 105A  
                              u930 11FE                                u850 105C  
                              u595 1A8C                                u931 11FC  
                              u596 1A8E                                u940 120C  
                              u950 1210                                u880 109A  
                              u970 121C                                _abs 1A0A  
                              _pad 1736                                wreg 000FE8  
                     __CFG_LVP$OFF 000000                       __CFG_WDT$OFF 000000  
                             ?_abs 0013                               l1401 1A46  
                             l1403 1A4A                               l1413 174E  
                             l1511 163E                               l1503 1602  
                             l1423 1786                               l1417 175C  
                             l1521 1088                               l1601 139E  
                             l1443 1420                               l1507 1618  
                             l1427 17B2                               l1419 176E  
                             l1611 13C0                               l1605 13A8  
                             l1455 146E                               l1471 14F4  
                             l1383 1866                               l1535 10C6  
                             l1631 1992                               l1641 17EE  
                             l1457 1482                               l1449 1448  
                             l1393 19DC                               l1633 19B6  
                             l1643 17FA                               l1475 151A  
                             l1467 14DE                               l1491 158C  
                             l1539 10D6                               l1653 182E  
                             l1397 19F2                               l1573 124A  
                             l1549 11CE                               l1495 15A6  
                             l1487 1568                               l1735 16A0  
                             l1497 15BA                               l1569 1232  
                             l1595 1362                               l1757 16F2  
                             ?_pad 0015                               STR_1 1018  
                             STR_2 1024                               u1010 12E4  
                             u1105 1AF8                               u1106 1AFA  
                             u1070 17FE                               u1207 190C  
                             u1217 1A74                               u1227 1A7E  
                             _LATB 000F8A                               u1095 194C  
                             _LATD 000F8C                               u1177 18C0  
                             u1187 18D8                               u1197 18EA  
                             abs@a 0013                               _dbuf 0080  
 __end_of_I2C_Master_RepeatedStart 1B74                               _main 1660  
                             _dtoa 1032                               _keys 1001  
                             _prec 0075                               _nout 0071  
                             pad@i 001C                               pad@p 0019  
                             fsr1h 000FE2                               fsr2h 000FDA  
                             indf2 000FDF                               fsr1l 000FE1  
                             pad@w 001E                               fsr2l 000FD9  
                             start 0000                      __CFG_IESO$OFF 000000  
                    __CFG_MCLRE$ON 000000                       ___param_bank 000000  
                            ??_abs 0015                              ??_pad 001B  
            I2C_Master_Read@ackBit 0002                   ?_I2C_Master_Init 000E  
                 ?_I2C_Master_Read 0001                   ?_I2C_Master_Wait 0001  
                 ?_I2C_Master_Stop 0001                    __end_of___aodiv 153C  
                            ?_main 0001                              ?_dtoa 0020  
                  __end_of___aomod 1660                    __end_of___lldiv 184E  
                     vfpfcnvrt@fmt 0046                              _TRISB 000F93  
                            _TRISD 000F95                      __CFG_PWRT$OFF 000000  
                    __CFG_WRT0$OFF 000000                      __CFG_WRT1$OFF 000000  
                    __CFG_WRT2$OFF 000000                      __CFG_WRT3$OFF 000000  
                  __end_of_lcdInst 1B52                     __CFG_EBTR0$OFF 000000  
                   __CFG_FCMEN$OFF 000000                     __CFG_EBTR1$OFF 000000  
                   __CFG_EBTR2$OFF 000000                     __CFG_EBTR3$OFF 000000  
                    __CFG_WRTB$OFF 000000                      __CFG_WRTC$OFF 000000  
                    __CFG_WRTD$OFF 000000                    __end_of_initLCD 1924  
                   __CFG_EBTRB$OFF 000000                              _flags 0077  
                            _fputc 184E                              _fputs 19D2  
                            pad@fp 0015                              _width 0073  
                            _putch 1B3A                              dtoa@d 0022  
                            dtoa@i 0042                              dtoa@n 003A  
                            dtoa@p 0034                              dtoa@s 0038  
                            dtoa@w 0036                              tablat 000FF5  
                  send_nibble@data 0002                    __end_of_pulse_e 1A90  
                            status 000FD8        I2C_Master_Read@receivedByte 0003  
                   __CFG_PBADEN$ON 000000                    __initialization 1A90  
                     __end_of_main 1736                       __end_of_dtoa 1274  
                     __end_of_keys 1012                             ??_main 0064  
                           ??_dtoa 002A                      __activetblptr 000001  
                ?_I2C_Master_Start 0001                  ?_I2C_Master_Write 0002  
               ??_I2C_Master_Start 0002                             _ADCON1 000FC1  
               ??_I2C_Master_Write 0004                       ?_send_nibble 0001  
                           ?_fputc 0005                             ?_fputs 000E  
                           ?_putch 0001                             _SSPADD 000FC8  
                           _SSPBUF 000FC9                     __CFG_XINST$OFF 000000  
         _I2C_Master_RepeatedStart 1B6C                       vfprintf@cfmt 005A  
                        ??___aodiv 0011                          ??___aomod 0011  
                   __CFG_STVREN$ON 000000                          ??___lldiv 0009  
                           clear_0 1A96                             clear_1 1AA2  
                        ??_lcdInst 0004                             _printf 1AB6  
                           pad@buf 0017                             dtoa@fp 0020  
                           _strlen 1A3C                          ??_initLCD 0005  
                           fputc@c 0005                             fputs@c 0012  
                           fputs@i 0013                             fputs@s 000E  
                     __mediumconst 0000                             tblptrh 000FF7  
                           tblptrl 000FF6                             tblptru 000FF8  
                 __end_of_vfprintf 19D2                          ??_pulse_e 0001  
            pulse_e@interruptState 0001                         __accesstop 0080  
          __end_of__initialization 1AA8                      ___rparam_used 000001  
                   __pcstackCOMRAM 0001                      __end_of_fputc 18BA  
                    __end_of_fputs 1A0A                      __end_of_putch 1B46  
                          ??_fputc 0009                            ??_fputs 0012  
                          ??_putch 0004                         __pbssBANK0 0080  
               __size_of_send_byte 0012                            ?_printf 005C  
                          ?_strlen 0001                 __size_of_vfpfcnvrt 0180  
                          _SSPCON1 000FC6                            _SSPCON2 000FC5  
                          _SSPSTAT 000FC7               __size_of_send_nibble 0016  
                          __Hparam 0000                            __Lparam 0000  
                          ___aodiv 13F4                            ___aomod 153C  
                          ___lldiv 17CC                          ?_vfprintf 0054  
                     __psmallconst 1000                            __pcinit 1A90  
                          _main$84 006A                            __ramtop 1000  
                          _lcdInst 1B46                            __ptext0 1660  
                          __ptext1 1AB6                            __ptext2 1980  
                          __ptext3 1274                            __ptext4 1032  
                          __ptext5 1736                            __ptext6 1A3C  
                          __ptext7 19D2                            __ptext8 184E  
                          __ptext9 1B3A                    __size_of_printf 0026  
                  __size_of_strlen 002A                            _initLCD 18BA  
                     __size_of_abs 0032                       __size_of_pad 0096  
         __size_of_I2C_Master_Init 005C           __size_of_I2C_Master_Read 0024  
         __size_of_I2C_Master_Wait 0012           __size_of_I2C_Master_Stop 0008  
                          _pulse_e 1A66               end_of_initialization 1AA8  
       ??_I2C_Master_RepeatedStart 0002              __end_of_LCD_SIZE_HORZ 1017  
                __end_of_send_byte 1B28              __end_of_LCD_SIZE_VERT 1016  
                          fputc@fp 0007                            fputs@fp 0010  
        __size_of_I2C_Master_Start 0008          __size_of_I2C_Master_Write 000A  
                  ___lldiv@divisor 0005                    ___lldiv@counter 000D  
                __end_of_vfpfcnvrt 13F4                            postdec2 000FDD  
                          postinc0 000FEE                            postinc1 000FE6  
                          postinc2 000FDE                         ??_vfprintf 005A  
                          strlen@a 0003                            strlen@s 0001  
                        _TRISCbits 000F94                         main@data_g 0068  
                    send_byte@data 0003                        vfpfcnvrt@ap 0048  
                      vfpfcnvrt@fp 0044                        vfpfcnvrt@ll 004C  
                   __end_of_printf 1ADC                     __end_of_strlen 1A66  
              start_initialization 1A90                        __end_of_abs 1A3C  
                      __end_of_pad 17CC                  ??_I2C_Master_Init 0012  
                ??_I2C_Master_Read 0002                  ??_I2C_Master_Wait 0001  
                ??_I2C_Master_Stop 0002                        vfprintf@fmt 0056  
         I2C_Master_Init@clockFreq 000E                   __CFG_LPT1OSC$OFF 000000  
                         ??_printf 0060                           ??_strlen 0003  
                      __pbssCOMRAM 0071                   ___aodiv@dividend 0001  
                 _I2C_Master_Start 1B64                   _I2C_Master_Write 1B52  
                __CFG_CCP2MX$PORTC 000000                           ?___aodiv 0001  
                         ?___aomod 0001                   ___aodiv@quotient 0013  
                         ?___lldiv 0001                           ?_lcdInst 0001  
                __size_of_vfprintf 0052                           ?_initLCD 0001  
                      __smallconst 1000                      ??_send_nibble 0002  
                         ?_pulse_e 0001                     __size_of_fputc 006C  
                   __size_of_fputs 0038                     __size_of_putch 000C  
                         _LATDbits 000F8C                          _send_byte 1B16  
                   _LCD_LINE1_ADDR 1014                     _LCD_LINE2_ADDR 1017  
                   _LCD_LINE3_ADDR 1013                     _LCD_LINE4_ADDR 1012  
                 __CFG_WDTPS$32768 000000                          _vfpfcnvrt 1274  
           __end_of_LCD_LINE1_ADDR 1015             __end_of_LCD_LINE2_ADDR 1018  
           __end_of_LCD_LINE3_ADDR 1014             __end_of_LCD_LINE4_ADDR 1013  
              __end_of_send_nibble 1B16                         ?_send_byte 0001  
                         __Hrparam 0000                         vfprintf@ap 0058  
                         __Lrparam 0000                         vfprintf@fp 0054  
                     __Lsmallconst 1000                 __CFG_BOREN$SBORDIS 000000  
                 __size_of___aodiv 0148  __size_of_I2C_Master_RepeatedStart 0008  
                 __size_of___aomod 0124          ?_I2C_Master_RepeatedStart 0001  
                 __size_of___lldiv 0082                         ?_vfpfcnvrt 0044  
                  ___aodiv@divisor 0009                    ___aodiv@counter 0011  
                 __size_of_lcdInst 000C                    _I2C_Master_Init 1924  
                  _I2C_Master_Read 1ADC                   __size_of_initLCD 006A  
                  _I2C_Master_Wait 1B28                    _I2C_Master_Stop 1B5C  
                         _dtoa$404 0032                           __ptext10 1A0A  
                         __ptext11 153C                           __ptext20 1B64  
                         __ptext12 13F4                           __ptext21 1B6C  
                         __ptext13 18BA                           __ptext22 1ADC  
                         __ptext14 1B46                           __ptext23 1B28  
                         __ptext15 1B16                           __ptext24 1924  
                         __ptext16 1B00                           __ptext25 17CC  
                         __ptext17 1A66                           __ptext18 1B52  
                         __ptext19 1B5C                   __size_of_pulse_e 002A  
                    __size_of_main 00D6                      __size_of_dtoa 0242  
                         _vfprintf 1980                           main@data 006B  
                        printf@fmt 005C        I2C_Master_Write@byteToWrite 0002  
                 ___aomod@dividend 0001                          putch@data 0004  
         __end_of_I2C_Master_Start 1B6C           __end_of_I2C_Master_Write 1B5C  
                       _INTCONbits 000FF2                        _send_nibble 1B00  
                    _LCD_SIZE_HORZ 1016                      _LCD_SIZE_VERT 1015  
                 ___lldiv@dividend 0001                        ??_send_byte 0003  
                         printf@ap 0062            __end_of_I2C_Master_Init 1980  
                  ___aomod@divisor 0009            __end_of_I2C_Master_Read 1B00  
          __end_of_I2C_Master_Wait 1B3A            __end_of_I2C_Master_Stop 1B64  
                      ??_vfpfcnvrt 004A                        lcdInst@data 0004  
                  ___aomod@counter 0011                   ___lldiv@quotient 0009  
                      _SSPCON1bits 000FC6                        _SSPCON2bits 000FC5  
                     ___aodiv@sign 0012                       ___aomod@sign 0012  
