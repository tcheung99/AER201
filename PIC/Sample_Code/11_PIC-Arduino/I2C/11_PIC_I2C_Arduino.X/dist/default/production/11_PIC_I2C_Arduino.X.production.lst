

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Apr 08 15:33:13 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1,inline
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1,inline
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    38  0000                     
    39                           ; Version 2.05
    40                           ; Generated 20/12/2018 GMT
    41                           ; 
    42                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC18F4620 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     
    74                           	psect	smallconst
    75  001000                     __psmallconst:
    76                           	opt callstack 0
    77  001000  00                 	db	0
    78  001001                     _keys:
    79                           	opt callstack 0
    80  001001  31                 	db	49
    81  001002  32                 	db	50
    82  001003  33                 	db	51
    83  001004  41                 	db	65
    84  001005  34                 	db	52
    85  001006  35                 	db	53
    86  001007  36                 	db	54
    87  001008  42                 	db	66
    88  001009  37                 	db	55
    89  00100A  38                 	db	56
    90  00100B  39                 	db	57
    91  00100C  43                 	db	67
    92  00100D  2A                 	db	42
    93  00100E  30                 	db	48
    94  00100F  23                 	db	35
    95  001010  44                 	db	68
    96  001011  00                 	db	0
    97  001012                     __end_of_keys:
    98                           	opt callstack 0
    99  001012                     _LCD_LINE4_ADDR:
   100                           	opt callstack 0
   101  001012  50                 	db	80
   102  001013                     __end_of_LCD_LINE4_ADDR:
   103                           	opt callstack 0
   104  001013                     _LCD_LINE3_ADDR:
   105                           	opt callstack 0
   106  001013  10                 	db	16
   107  001014                     __end_of_LCD_LINE3_ADDR:
   108                           	opt callstack 0
   109  001014                     _LCD_LINE1_ADDR:
   110                           	opt callstack 0
   111  001014  00                 	db	0
   112  001015                     __end_of_LCD_LINE1_ADDR:
   113                           	opt callstack 0
   114  001015                     _LCD_SIZE_VERT:
   115                           	opt callstack 0
   116  001015  04                 	db	4
   117  001016                     __end_of_LCD_SIZE_VERT:
   118                           	opt callstack 0
   119  001016                     _LCD_SIZE_HORZ:
   120                           	opt callstack 0
   121  001016  10                 	db	16
   122  001017                     __end_of_LCD_SIZE_HORZ:
   123                           	opt callstack 0
   124  001017  40                 	db	64
   125  001018                     __end_of_LCD_LINE2_ADDR:
   126                           	opt callstack 0
   127  0000                     _LATDbits	set	3980
   128  0000                     _INTCONbits	set	4082
   129  0000                     _SSPBUF	set	4041
   130  0000                     _SSPCON2bits	set	4037
   131  0000                     _SSPCON1	set	4038
   132  0000                     _SSPADD	set	4040
   133  0000                     _TRISCbits	set	3988
   134  0000                     _SSPCON1bits	set	4038
   135  0000                     _SSPCON2	set	4037
   136  0000                     _SSPSTAT	set	4039
   137  0000                     _ADCON1	set	4033
   138  0000                     _TRISD	set	3989
   139  0000                     _LATD	set	3980
   140  0000                     _TRISB	set	3987
   141  0000                     _LATB	set	3978
   142  001018                     STR_1:
   143  001018  64                 	db	100	;'d'
   144  001019  61                 	db	97	;'a'
   145  00101A  74                 	db	116	;'t'
   146  00101B  61                 	db	97	;'a'
   147  00101C  5B                 	db	91	;'['
   148  00101D  30                 	db	48	;'0'
   149  00101E  5D                 	db	93	;']'
   150  00101F  2C                 	db	44
   151  001020  20                 	db	32
   152  001021  25                 	db	37
   153  001022  64                 	db	100	;'d'
   154  001023  00                 	db	0
   155  001024                     STR_2:
   156  001024  64                 	db	100	;'d'
   157  001025  61                 	db	97	;'a'
   158  001026  74                 	db	116	;'t'
   159  001027  61                 	db	97	;'a'
   160  001028  5B                 	db	91	;'['
   161  001029  31                 	db	49	;'1'
   162  00102A  5D                 	db	93	;']'
   163  00102B  2C                 	db	44
   164  00102C  20                 	db	32
   165  00102D  25                 	db	37
   166  00102E  64                 	db	100	;'d'
   167  00102F  00                 	db	0
   168                           
   169                           ; #config settings
   170  001030  00                 	db	0	; dummy byte at the end
   171  0000                     
   172                           	psect	cinit
   173  001ABE                     __pcinit:
   174                           	opt callstack 0
   175  001ABE                     start_initialization:
   176                           	opt callstack 0
   177  001ABE                     __initialization:
   178                           	opt callstack 0
   179                           
   180                           ; Clear objects allocated to BANK0 (32 bytes)
   181  001ABE  EE00  F080         	lfsr	0,__pbssBANK0
   182  001AC2  0E20               	movlw	32
   183  001AC4                     clear_0:
   184  001AC4  6AEE               	clrf	postinc0,c
   185  001AC6  06E8               	decf	wreg,f,c
   186  001AC8  E1FD               	bnz	clear_0
   187                           
   188                           ; Clear objects allocated to COMRAM (8 bytes)
   189  001ACA  EE00  F071         	lfsr	0,__pbssCOMRAM
   190  001ACE  0E08               	movlw	8
   191  001AD0                     clear_1:
   192  001AD0  6AEE               	clrf	postinc0,c
   193  001AD2  06E8               	decf	wreg,f,c
   194  001AD4  E1FD               	bnz	clear_1
   195  001AD6                     end_of_initialization:
   196                           	opt callstack 0
   197  001AD6                     __end_of__initialization:
   198                           	opt callstack 0
   199  001AD6  0E00               	movlw	low (__Lsmallconst shr (0+16))
   200  001AD8  6EF8               	movwf	tblptru,c
   201  001ADA  0E10               	movlw	high __Lsmallconst
   202  001ADC  6EF7               	movwf	tblptrh,c
   203  001ADE  0100               	movlb	0
   204  001AE0  EF30  F00B         	goto	_main	;jump to C main() function
   205                           
   206                           	psect	bssCOMRAM
   207  000071                     __pbssCOMRAM:
   208                           	opt callstack 0
   209  000071                     _nout:
   210                           	opt callstack 0
   211  000071                     	ds	2
   212  000073                     _width:
   213                           	opt callstack 0
   214  000073                     	ds	2
   215  000075                     _prec:
   216                           	opt callstack 0
   217  000075                     	ds	2
   218  000077                     _flags:
   219                           	opt callstack 0
   220  000077                     	ds	2
   221                           
   222                           	psect	bssBANK0
   223  000080                     __pbssBANK0:
   224                           	opt callstack 0
   225  000080                     _dbuf:
   226                           	opt callstack 0
   227  000080                     	ds	32
   228                           
   229                           	psect	cstackCOMRAM
   230  000001                     __pcstackCOMRAM:
   231                           	opt callstack 0
   232  000001                     ??_I2C_Master_Wait:
   233  000001                     ?_strlen:
   234                           	opt callstack 0
   235  000001                     ?___lldiv:
   236                           	opt callstack 0
   237  000001                     ?___aodiv:
   238                           	opt callstack 0
   239  000001                     ?___aomod:
   240                           	opt callstack 0
   241  000001                     pulse_e@interruptState:
   242                           	opt callstack 0
   243  000001                     strlen@s:
   244                           	opt callstack 0
   245  000001                     ___lldiv@dividend:
   246                           	opt callstack 0
   247  000001                     ___aodiv@dividend:
   248                           	opt callstack 0
   249  000001                     ___aomod@dividend:
   250                           	opt callstack 0
   251                           
   252                           ; 8 bytes @ 0x0
   253  000001                     	ds	1
   254  000002                     I2C_Master_Read@ackBit:
   255                           	opt callstack 0
   256  000002                     send_nibble@data:
   257                           	opt callstack 0
   258  000002                     I2C_Master_Write@byteToWrite:
   259                           	opt callstack 0
   260                           
   261                           ; 2 bytes @ 0x1
   262  000002                     	ds	1
   263  000003                     I2C_Master_Read@receivedByte:
   264                           	opt callstack 0
   265  000003                     send_byte@data:
   266                           	opt callstack 0
   267  000003                     strlen@a:
   268                           	opt callstack 0
   269                           
   270                           ; 2 bytes @ 0x2
   271  000003                     	ds	1
   272  000004                     lcdInst@data:
   273                           	opt callstack 0
   274  000004                     putch@data:
   275                           	opt callstack 0
   276                           
   277                           ; 1 bytes @ 0x3
   278  000004                     	ds	1
   279  000005                     ??_initLCD:
   280  000005                     fputc@c:
   281                           	opt callstack 0
   282  000005                     ___lldiv@divisor:
   283                           	opt callstack 0
   284                           
   285                           ; 4 bytes @ 0x4
   286  000005                     	ds	2
   287  000007                     fputc@fp:
   288                           	opt callstack 0
   289                           
   290                           ; 2 bytes @ 0x6
   291  000007                     	ds	2
   292  000009                     ??_fputc:
   293  000009                     ___lldiv@quotient:
   294                           	opt callstack 0
   295  000009                     ___aodiv@divisor:
   296                           	opt callstack 0
   297  000009                     ___aomod@divisor:
   298                           	opt callstack 0
   299                           
   300                           ; 8 bytes @ 0x8
   301  000009                     	ds	4
   302  00000D                     ___lldiv@counter:
   303                           	opt callstack 0
   304                           
   305                           ; 1 bytes @ 0xC
   306  00000D                     	ds	1
   307  00000E                     fputs@s:
   308                           	opt callstack 0
   309  00000E                     I2C_Master_Init@clockFreq:
   310                           	opt callstack 0
   311                           
   312                           ; 4 bytes @ 0xD
   313  00000E                     	ds	2
   314  000010                     fputs@fp:
   315                           	opt callstack 0
   316                           
   317                           ; 2 bytes @ 0xF
   318  000010                     	ds	1
   319  000011                     ___aodiv@counter:
   320                           	opt callstack 0
   321  000011                     ___aomod@counter:
   322                           	opt callstack 0
   323                           
   324                           ; 1 bytes @ 0x10
   325  000011                     	ds	1
   326  000012                     ??_I2C_Master_Init:
   327  000012                     ___aodiv@sign:
   328                           	opt callstack 0
   329  000012                     ___aomod@sign:
   330                           	opt callstack 0
   331  000012                     fputs@c:
   332                           	opt callstack 0
   333                           
   334                           ; 1 bytes @ 0x11
   335  000012                     	ds	1
   336  000013                     ?_abs:
   337                           	opt callstack 0
   338  000013                     abs@a:
   339                           	opt callstack 0
   340  000013                     fputs@i:
   341                           	opt callstack 0
   342  000013                     ___aodiv@quotient:
   343                           	opt callstack 0
   344                           
   345                           ; 8 bytes @ 0x12
   346  000013                     	ds	2
   347  000015                     ??_abs:
   348  000015                     ?_pad:
   349                           	opt callstack 0
   350  000015                     pad@fp:
   351                           	opt callstack 0
   352                           
   353                           ; 2 bytes @ 0x14
   354  000015                     	ds	2
   355  000017                     pad@buf:
   356                           	opt callstack 0
   357                           
   358                           ; 2 bytes @ 0x16
   359  000017                     	ds	2
   360  000019                     pad@p:
   361                           	opt callstack 0
   362                           
   363                           ; 2 bytes @ 0x18
   364  000019                     	ds	2
   365  00001B                     ??_pad:
   366                           
   367                           ; 1 bytes @ 0x1A
   368  00001B                     	ds	1
   369  00001C                     pad@i:
   370                           	opt callstack 0
   371                           
   372                           ; 2 bytes @ 0x1B
   373  00001C                     	ds	2
   374  00001E                     pad@w:
   375                           	opt callstack 0
   376                           
   377                           ; 2 bytes @ 0x1D
   378  00001E                     	ds	2
   379  000020                     ?_dtoa:
   380                           	opt callstack 0
   381  000020                     dtoa@fp:
   382                           	opt callstack 0
   383                           
   384                           ; 2 bytes @ 0x1F
   385  000020                     	ds	2
   386  000022                     dtoa@d:
   387                           	opt callstack 0
   388                           
   389                           ; 8 bytes @ 0x21
   390  000022                     	ds	8
   391  00002A                     ??_dtoa:
   392                           
   393                           ; 1 bytes @ 0x29
   394  00002A                     	ds	8
   395  000032                     _dtoa$406:
   396                           	opt callstack 0
   397                           
   398                           ; 2 bytes @ 0x31
   399  000032                     	ds	2
   400  000034                     dtoa@p:
   401                           	opt callstack 0
   402                           
   403                           ; 2 bytes @ 0x33
   404  000034                     	ds	2
   405  000036                     dtoa@w:
   406                           	opt callstack 0
   407                           
   408                           ; 2 bytes @ 0x35
   409  000036                     	ds	2
   410  000038                     dtoa@s:
   411                           	opt callstack 0
   412                           
   413                           ; 2 bytes @ 0x37
   414  000038                     	ds	2
   415  00003A                     dtoa@n:
   416                           	opt callstack 0
   417                           
   418                           ; 8 bytes @ 0x39
   419  00003A                     	ds	8
   420  000042                     dtoa@i:
   421                           	opt callstack 0
   422                           
   423                           ; 2 bytes @ 0x41
   424  000042                     	ds	2
   425  000044                     ?_vfpfcnvrt:
   426                           	opt callstack 0
   427  000044                     vfpfcnvrt@fp:
   428                           	opt callstack 0
   429                           
   430                           ; 2 bytes @ 0x43
   431  000044                     	ds	2
   432  000046                     vfpfcnvrt@fmt:
   433                           	opt callstack 0
   434                           
   435                           ; 2 bytes @ 0x45
   436  000046                     	ds	2
   437  000048                     vfpfcnvrt@ap:
   438                           	opt callstack 0
   439                           
   440                           ; 2 bytes @ 0x47
   441  000048                     	ds	2
   442  00004A                     ??_vfpfcnvrt:
   443                           
   444                           ; 1 bytes @ 0x49
   445  00004A                     	ds	2
   446  00004C                     vfpfcnvrt@ll:
   447                           	opt callstack 0
   448                           
   449                           ; 8 bytes @ 0x4B
   450  00004C                     	ds	8
   451  000054                     ?_vfprintf:
   452                           	opt callstack 0
   453  000054                     vfprintf@fp:
   454                           	opt callstack 0
   455                           
   456                           ; 2 bytes @ 0x53
   457  000054                     	ds	2
   458  000056                     vfprintf@fmt:
   459                           	opt callstack 0
   460                           
   461                           ; 2 bytes @ 0x55
   462  000056                     	ds	2
   463  000058                     vfprintf@ap:
   464                           	opt callstack 0
   465                           
   466                           ; 2 bytes @ 0x57
   467  000058                     	ds	2
   468  00005A                     vfprintf@cfmt:
   469                           	opt callstack 0
   470                           
   471                           ; 2 bytes @ 0x59
   472  00005A                     	ds	2
   473  00005C                     ?_printf:
   474                           	opt callstack 0
   475  00005C                     printf@fmt:
   476                           	opt callstack 0
   477                           
   478                           ; 2 bytes @ 0x5B
   479  00005C                     	ds	4
   480  000060                     
   481                           ; 1 bytes @ 0x5F
   482  000060                     	ds	2
   483  000062                     printf@ap:
   484                           	opt callstack 0
   485                           
   486                           ; 2 bytes @ 0x61
   487  000062                     	ds	2
   488  000064                     ??_main:
   489                           
   490                           ; 1 bytes @ 0x63
   491  000064                     	ds	4
   492  000068                     main@data_g:
   493                           	opt callstack 0
   494                           
   495                           ; 2 bytes @ 0x67
   496  000068                     	ds	2
   497  00006A                     _main$90:
   498                           	opt callstack 0
   499                           
   500                           ; 1 bytes @ 0x69
   501  00006A                     	ds	1
   502  00006B                     main@data:
   503                           	opt callstack 0
   504                           
   505                           ; 6 bytes @ 0x6A
   506  00006B                     	ds	6
   507                           
   508 ;;
   509 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   510 ;;
   511 ;; *************** function _main *****************
   512 ;; Defined at:
   513 ;;		line 33 in file "main.c"
   514 ;; Parameters:    Size  Location     Type
   515 ;;		None
   516 ;; Auto vars:     Size  Location     Type
   517 ;;  data            6  106[COMRAM] int [3]
   518 ;;  mem             3    0        unsigned char [3]
   519 ;;  data_g          2  103[COMRAM] unsigned int 
   520 ;;  send            1    0        _Bool 
   521 ;;  counter         1    0        unsigned char 
   522 ;;  dataa           1    0        unsigned char 
   523 ;;  keypress        1    0        unsigned char 
   524 ;; Return value:  Size  Location     Type
   525 ;;                  1    wreg      void 
   526 ;; Registers used:
   527 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   528 ;; Tracked objects:
   529 ;;		On entry : 0/0
   530 ;;		On exit  : 0/0
   531 ;;		Unchanged: 0/0
   532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   534 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   535 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   536 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   537 ;;Total ram usage:       13 bytes
   538 ;; Hardware stack levels required when called:   11
   539 ;; This function calls:
   540 ;;		_I2C_Master_Init
   541 ;;		_I2C_Master_Read
   542 ;;		_I2C_Master_RepeatedStart
   543 ;;		_I2C_Master_Start
   544 ;;		_I2C_Master_Stop
   545 ;;		_I2C_Master_Write
   546 ;;		_initLCD
   547 ;;		_lcdInst
   548 ;;		_printf
   549 ;; This function is called by:
   550 ;;		Startup code after reset
   551 ;; This function uses a non-reentrant model
   552 ;;
   553                           
   554                           	psect	text0
   555  001660                     __ptext0:
   556                           	opt callstack 0
   557  001660                     _main:
   558                           	opt callstack 20
   559                           
   560                           ;main.c: 35:     LATB = 0x00;
   561                           
   562                           ;incstack = 0
   563  001660  0E00               	movlw	0
   564  001662  6E8A               	movwf	3978,c	;volatile
   565                           
   566                           ;main.c: 36:     TRISB = 0b11110010;
   567  001664  0EF2               	movlw	242
   568  001666  6E93               	movwf	3987,c	;volatile
   569                           
   570                           ;main.c: 41:     LATD = 0x00;
   571  001668  0E00               	movlw	0
   572  00166A  6E8C               	movwf	3980,c	;volatile
   573                           
   574                           ;main.c: 42:     TRISD = 0x00;
   575  00166C  0E00               	movlw	0
   576  00166E  6E95               	movwf	3989,c	;volatile
   577                           
   578                           ;main.c: 45:     ADCON1 = 0b00001111;
   579  001670  0E0F               	movlw	15
   580  001672  6EC1               	movwf	4033,c	;volatile
   581                           
   582                           ;main.c: 47:     initLCD();
   583  001674  EC74  F00C         	call	_initLCD	;wreg free
   584                           
   585                           ;main.c: 54:     I2C_Master_Init(100000);
   586  001678  0EA0               	movlw	160
   587  00167A  6E0E               	movwf	I2C_Master_Init@clockFreq,c
   588  00167C  0E86               	movlw	134
   589  00167E  6E0F               	movwf	I2C_Master_Init@clockFreq+1,c
   590  001680  0E01               	movlw	1
   591  001682  6E10               	movwf	I2C_Master_Init@clockFreq+2,c
   592  001684  0E00               	movlw	0
   593  001686  6E11               	movwf	I2C_Master_Init@clockFreq+3,c
   594  001688  ECA9  F00C         	call	_I2C_Master_Init	;wreg free
   595                           
   596                           ;main.c: 55:     I2C_Master_Start();
   597  00168C  ECC9  F00D         	call	_I2C_Master_Start	;wreg free
   598                           
   599                           ;main.c: 56:     I2C_Master_Write(0b00010000);
   600  001690  0E00               	movlw	0
   601  001692  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
   602  001694  0E10               	movlw	16
   603  001696  6E02               	movwf	I2C_Master_Write@byteToWrite,c
   604  001698  ECC0  F00D         	call	_I2C_Master_Write	;wreg free
   605                           
   606                           ;main.c: 57:     I2C_Master_Stop();
   607  00169C  ECC5  F00D         	call	_I2C_Master_Stop	;wreg free
   608  0016A0                     
   609                           ;main.c: 101:             I2C_Master_RepeatedStart();
   610  0016A0  ECCD  F00D         	call	_I2C_Master_RepeatedStart	;wreg free
   611                           
   612                           ;main.c: 102:             I2C_Master_Write(0b00010001);
   613  0016A4  0E00               	movlw	0
   614  0016A6  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
   615  0016A8  0E11               	movlw	17
   616  0016AA  6E02               	movwf	I2C_Master_Write@byteToWrite,c
   617  0016AC  ECC0  F00D         	call	_I2C_Master_Write	;wreg free
   618                           
   619                           ;main.c: 103:             data[0] = I2C_Master_Read(0);
   620  0016B0  0E00               	movlw	0
   621  0016B2  EC85  F00D         	call	_I2C_Master_Read
   622  0016B6  6E64               	movwf	??_main& (0+255),c
   623  0016B8  5064               	movf	??_main,w,c
   624  0016BA  6E6B               	movwf	main@data,c
   625  0016BC  6A6C               	clrf	main@data+1,c
   626                           
   627                           ;main.c: 104:             data[1] = I2C_Master_Read(1);
   628  0016BE  0E01               	movlw	1
   629  0016C0  EC85  F00D         	call	_I2C_Master_Read
   630  0016C4  6E64               	movwf	??_main& (0+255),c
   631  0016C6  5064               	movf	??_main,w,c
   632  0016C8  6E6D               	movwf	main@data+2,c
   633  0016CA  6A6E               	clrf	main@data+3,c
   634                           
   635                           ;main.c: 106:             data_g = data[0];
   636  0016CC  C06B  F068         	movff	main@data,main@data_g
   637  0016D0  C06C  F069         	movff	main@data+1,main@data_g+1
   638                           
   639                           ;main.c: 107:             data_g = (data_g<<8)||(data[1]);
   640  0016D4  0E01               	movlw	1
   641  0016D6  6E6A               	movwf	_main$90,c
   642  0016D8  5068               	movf	main@data_g,w,c
   643  0016DA  6E65               	movwf	(??_main+1)& (0+255),c
   644  0016DC  6A64               	clrf	??_main& (0+255),c
   645  0016DE  5064               	movf	??_main,w,c
   646  0016E0  1065               	iorwf	??_main+1,w,c
   647  0016E2  A4D8               	btfss	status,2,c
   648  0016E4  D006               	goto	l1763
   649  0016E6  506D               	movf	main@data+2,w,c
   650  0016E8  106E               	iorwf	main@data+3,w,c
   651  0016EA  A4D8               	btfss	status,2,c
   652  0016EC  D002               	goto	l1763
   653  0016EE  0E00               	movlw	0
   654  0016F0  6E6A               	movwf	_main$90,c
   655  0016F2                     l1763:
   656                           
   657                           ;main.c: 110:             I2C_Master_Stop();
   658  0016F2  ECC5  F00D         	call	_I2C_Master_Stop	;wreg free
   659                           
   660                           ;main.c: 113:             if(data[0]&&data[1]){
   661  0016F6  506B               	movf	main@data,w,c
   662  0016F8  106C               	iorwf	main@data+1,w,c
   663  0016FA  B4D8               	btfsc	status,2,c
   664  0016FC  D7D1               	goto	l1741
   665  0016FE  506D               	movf	main@data+2,w,c
   666  001700  106E               	iorwf	main@data+3,w,c
   667  001702  B4D8               	btfsc	status,2,c
   668  001704  D7CD               	goto	l1741
   669                           
   670                           ;main.c: 114:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
   671  001706  0E01               	movlw	1
   672  001708  ECBA  F00D         	call	_lcdInst
   673  00170C  0E11               	movlw	17
   674  00170E  6E64               	movwf	??_main& (0+255),c
   675  001710  0E3A               	movlw	58
   676  001712                     u1177:
   677  001712  2EE8               	decfsz	wreg,f,c
   678  001714  D7FE               	bra	u1177
   679  001716  2E64               	decfsz	??_main& (0+255),f,c
   680  001718  D7FC               	bra	u1177
   681  00171A  D000               	nop2	
   682                           
   683                           ;main.c: 115:                 printf("data[0], %d", data[0]);
   684  00171C  0E18               	movlw	low STR_1
   685  00171E  6E5C               	movwf	printf@fmt,c
   686  001720  0E10               	movlw	high STR_1
   687  001722  6E5D               	movwf	printf@fmt+1,c
   688  001724  C06B  F05E         	movff	main@data,?_printf+2
   689  001728  C06C  F05F         	movff	main@data+1,?_printf+3
   690  00172C  EC72  F00D         	call	_printf	;wreg free
   691  001730  0EC0               	movlw	192
   692  001732  ECBA  F00D         	call	_lcdInst
   693                           
   694                           ;main.c: 117:                 printf("data[1], %d", data[1]);
   695  001736  0E24               	movlw	low STR_2
   696  001738  6E5C               	movwf	printf@fmt,c
   697  00173A  0E10               	movlw	high STR_2
   698  00173C  6E5D               	movwf	printf@fmt+1,c
   699  00173E  C06D  F05E         	movff	main@data+2,?_printf+2
   700  001742  C06E  F05F         	movff	main@data+3,?_printf+3
   701  001746  EC72  F00D         	call	_printf	;wreg free
   702                           
   703                           ;main.c: 118:                 _delay((unsigned long)((1000)*(10000000/4000.0)));
   704  00174A  0E0D               	movlw	13
   705  00174C  6E65               	movwf	(??_main+1)& (0+255),c
   706  00174E  0EAF               	movlw	175
   707  001750  6E64               	movwf	??_main& (0+255),c
   708  001752  0EB6               	movlw	182
   709  001754                     u1187:
   710  001754  2EE8               	decfsz	wreg,f,c
   711  001756  D7FE               	bra	u1187
   712  001758  2E64               	decfsz	??_main& (0+255),f,c
   713  00175A  D7FC               	bra	u1187
   714  00175C  2E65               	decfsz	(??_main+1)& (0+255),f,c
   715  00175E  D7FA               	bra	u1187
   716  001760  D000               	nop2	
   717  001762  D79E               	goto	l1741
   718  001764                     __end_of_main:
   719                           	opt callstack 0
   720                           
   721 ;; *************** function _printf *****************
   722 ;; Defined at:
   723 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
   724 ;; Parameters:    Size  Location     Type
   725 ;;  fmt             2   91[COMRAM] PTR const unsigned char 
   726 ;;		 -> STR_2(12), STR_1(12), 
   727 ;; Auto vars:     Size  Location     Type
   728 ;;  ap              2   97[COMRAM] PTR void [1]
   729 ;;		 -> ?_printf(2), 
   730 ;;  ret             2    0        int 
   731 ;; Return value:  Size  Location     Type
   732 ;;                  2   91[COMRAM] int 
   733 ;; Registers used:
   734 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   735 ;; Tracked objects:
   736 ;;		On entry : 0/0
   737 ;;		On exit  : 0/0
   738 ;;		Unchanged: 0/0
   739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   740 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   741 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   743 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   744 ;;Total ram usage:        8 bytes
   745 ;; Hardware stack levels used:    1
   746 ;; Hardware stack levels required when called:   10
   747 ;; This function calls:
   748 ;;		_vfprintf
   749 ;; This function is called by:
   750 ;;		_main
   751 ;; This function uses a non-reentrant model
   752 ;;
   753                           
   754                           	psect	text1
   755  001AE4                     __ptext1:
   756                           	opt callstack 0
   757  001AE4                     _printf:
   758                           	opt callstack 20
   759                           
   760                           ;incstack = 0
   761  001AE4  0E5E               	movlw	low (?_printf+2)
   762  001AE6  6E62               	movwf	printf@ap,c
   763  001AE8  0E00               	movlw	high (?_printf+2)
   764  001AEA  6E63               	movwf	printf@ap+1,c
   765  001AEC  0E00               	movlw	0
   766  001AEE  6E54               	movwf	vfprintf@fp,c
   767  001AF0  0E00               	movlw	0
   768  001AF2  6E55               	movwf	vfprintf@fp+1,c
   769  001AF4  C05C  F056         	movff	printf@fmt,vfprintf@fmt
   770  001AF8  C05D  F057         	movff	printf@fmt+1,vfprintf@fmt+1
   771  001AFC  0E62               	movlw	low printf@ap
   772  001AFE  6E58               	movwf	vfprintf@ap,c
   773  001B00  0E00               	movlw	high printf@ap
   774  001B02  6E59               	movwf	vfprintf@ap+1,c
   775  001B04  ECD7  F00C         	call	_vfprintf	;wreg free
   776  001B08  0012               	return		;funcret
   777  001B0A                     __end_of_printf:
   778                           	opt callstack 0
   779                           
   780 ;; *************** function _vfprintf *****************
   781 ;; Defined at:
   782 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
   783 ;; Parameters:    Size  Location     Type
   784 ;;  fp              2   83[COMRAM] PTR struct _IO_FILE
   785 ;;		 -> NULL(0), 
   786 ;;  fmt             2   85[COMRAM] PTR const unsigned char 
   787 ;;		 -> STR_2(12), STR_1(12), 
   788 ;;  ap              2   87[COMRAM] PTR PTR void 
   789 ;;		 -> printf@ap(2), 
   790 ;; Auto vars:     Size  Location     Type
   791 ;;  cfmt            2   89[COMRAM] PTR unsigned char 
   792 ;;		 -> STR_2(12), STR_1(12), 
   793 ;; Return value:  Size  Location     Type
   794 ;;                  2   83[COMRAM] int 
   795 ;; Registers used:
   796 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   797 ;; Tracked objects:
   798 ;;		On entry : 0/0
   799 ;;		On exit  : 0/0
   800 ;;		Unchanged: 0/0
   801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   802 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   803 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   805 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   806 ;;Total ram usage:        8 bytes
   807 ;; Hardware stack levels used:    1
   808 ;; Hardware stack levels required when called:    9
   809 ;; This function calls:
   810 ;;		_vfpfcnvrt
   811 ;; This function is called by:
   812 ;;		_printf
   813 ;; This function uses a non-reentrant model
   814 ;;
   815                           
   816                           	psect	text2
   817  0019AE                     __ptext2:
   818                           	opt callstack 0
   819  0019AE                     _vfprintf:
   820                           	opt callstack 20
   821                           
   822                           ;incstack = 0
   823  0019AE  C056  F05A         	movff	vfprintf@fmt,vfprintf@cfmt
   824  0019B2  C057  F05B         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   825  0019B6  0E00               	movlw	0
   826  0019B8  6E72               	movwf	_nout+1,c
   827  0019BA  0E00               	movlw	0
   828  0019BC  6E71               	movwf	_nout,c
   829  0019BE  D012               	goto	l1639
   830  0019C0                     l1637:
   831  0019C0  C054  F044         	movff	vfprintf@fp,vfpfcnvrt@fp
   832  0019C4  C055  F045         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   833  0019C8  0E5A               	movlw	low vfprintf@cfmt
   834  0019CA  6E46               	movwf	vfpfcnvrt@fmt,c
   835  0019CC  0E00               	movlw	high vfprintf@cfmt
   836  0019CE  6E47               	movwf	vfpfcnvrt@fmt+1,c
   837  0019D0  C058  F048         	movff	vfprintf@ap,vfpfcnvrt@ap
   838  0019D4  C059  F049         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   839  0019D8  EC3A  F009         	call	_vfpfcnvrt	;wreg free
   840  0019DC  5044               	movf	?_vfpfcnvrt,w,c
   841  0019DE  2671               	addwf	_nout,f,c
   842  0019E0  5045               	movf	?_vfpfcnvrt+1,w,c
   843  0019E2  2272               	addwfc	_nout+1,f,c
   844  0019E4                     l1639:
   845  0019E4  C05A  FFF6         	movff	vfprintf@cfmt,tblptrl
   846  0019E8  C05B  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   847  0019EC                     	if	0	;tblptru may be non-zero
   848  0019EC                     	endif
   849  0019EC                     	if	0	;tblptru may be non-zero
   850  0019EC                     	endif
   851  0019EC  0008               	tblrd		*
   852  0019EE  50F5               	movf	tablat,w,c
   853  0019F0  0900               	iorlw	0
   854  0019F2  A4D8               	btfss	status,2,c
   855  0019F4  D7E5               	goto	l1637
   856  0019F6  C071  F054         	movff	_nout,?_vfprintf
   857  0019FA  C072  F055         	movff	_nout+1,?_vfprintf+1
   858  0019FE  0012               	return		;funcret
   859  001A00                     __end_of_vfprintf:
   860                           	opt callstack 0
   861                           
   862 ;; *************** function _vfpfcnvrt *****************
   863 ;; Defined at:
   864 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
   865 ;; Parameters:    Size  Location     Type
   866 ;;  fp              2   67[COMRAM] PTR struct _IO_FILE
   867 ;;		 -> NULL(0), 
   868 ;;  fmt             2   69[COMRAM] PTR PTR unsigned char 
   869 ;;		 -> vfprintf@cfmt(2), 
   870 ;;  ap              2   71[COMRAM] PTR PTR void 
   871 ;;		 -> printf@ap(2), 
   872 ;; Auto vars:     Size  Location     Type
   873 ;;  ll              8   75[COMRAM] long long 
   874 ;;  llu             8    0        unsigned long long 
   875 ;;  f               4    0        unsigned long long 
   876 ;;  vp              3    0        PTR void 
   877 ;;  ct              3    0        unsigned char [3]
   878 ;;  cp              3    0        PTR unsigned char 
   879 ;;  i               2    0        int 
   880 ;;  done            2    0        int 
   881 ;;  c               1    0        unsigned char 
   882 ;; Return value:  Size  Location     Type
   883 ;;                  2   67[COMRAM] int 
   884 ;; Registers used:
   885 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   886 ;; Tracked objects:
   887 ;;		On entry : 0/0
   888 ;;		On exit  : 0/0
   889 ;;		Unchanged: 0/0
   890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   891 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   892 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   893 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   894 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   895 ;;Total ram usage:       16 bytes
   896 ;; Hardware stack levels used:    1
   897 ;; Hardware stack levels required when called:    8
   898 ;; This function calls:
   899 ;;		_dtoa
   900 ;;		_fputc
   901 ;; This function is called by:
   902 ;;		_vfprintf
   903 ;; This function uses a non-reentrant model
   904 ;;
   905                           
   906                           	psect	text3
   907  001274                     __ptext3:
   908                           	opt callstack 0
   909  001274                     _vfpfcnvrt:
   910                           	opt callstack 20
   911                           
   912                           ;incstack = 0
   913  001274  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   914  001278  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   915  00127C  CFDE FFF6          	movff	postinc2,tblptrl
   916  001280  CFDD FFF7          	movff	postdec2,tblptrh
   917  001284                     	if	0	;tblptru may be non-zero
   918  001284                     	endif
   919  001284                     	if	0	;tblptru may be non-zero
   920  001284                     	endif
   921  001284  0008               	tblrd		*
   922  001286  50F5               	movf	tablat,w,c
   923  001288  0A25               	xorlw	37
   924  00128A  A4D8               	btfss	status,2,c
   925  00128C  D099               	goto	l1617
   926  00128E  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   927  001292  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   928  001296  2ADE               	incf	postinc2,f,c
   929  001298  0E00               	movlw	0
   930  00129A  22DD               	addwfc	postdec2,f,c
   931  00129C  0E00               	movlw	0
   932  00129E  6E74               	movwf	_width+1,c
   933  0012A0  0E00               	movlw	0
   934  0012A2  6E73               	movwf	_width,c
   935  0012A4  C073  F077         	movff	_width,_flags
   936  0012A8  C074  F078         	movff	_width+1,_flags+1
   937  0012AC  6875               	setf	_prec,c
   938  0012AE  6876               	setf	_prec+1,c
   939  0012B0  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   940  0012B4  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   941  0012B8  CFDE FFF6          	movff	postinc2,tblptrl
   942  0012BC  CFDD FFF7          	movff	postdec2,tblptrh
   943  0012C0                     	if	0	;tblptru may be non-zero
   944  0012C0                     	endif
   945  0012C0                     	if	0	;tblptru may be non-zero
   946  0012C0                     	endif
   947  0012C0  0008               	tblrd		*
   948  0012C2  50F5               	movf	tablat,w,c
   949  0012C4  0A64               	xorlw	100
   950  0012C6  B4D8               	btfsc	status,2,c
   951  0012C8  D00D               	goto	u1010
   952  0012CA  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   953  0012CE  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   954  0012D2  CFDE FFF6          	movff	postinc2,tblptrl
   955  0012D6  CFDD FFF7          	movff	postdec2,tblptrh
   956  0012DA                     	if	0	;tblptru may be non-zero
   957  0012DA                     	endif
   958  0012DA                     	if	0	;tblptru may be non-zero
   959  0012DA                     	endif
   960  0012DA  0008               	tblrd		*
   961  0012DC  50F5               	movf	tablat,w,c
   962  0012DE  0A69               	xorlw	105
   963  0012E0  A4D8               	btfss	status,2,c
   964  0012E2  D03F               	goto	l1601
   965  0012E4                     u1010:
   966  0012E4  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   967  0012E8  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   968  0012EC  2ADE               	incf	postinc2,f,c
   969  0012EE  0E00               	movlw	0
   970  0012F0  22DD               	addwfc	postdec2,f,c
   971  0012F2  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
   972  0012F6  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
   973  0012FA  CFDF F04A          	movff	indf2,??_vfpfcnvrt
   974  0012FE  0E02               	movlw	2
   975  001300  26DE               	addwf	postinc2,f,c
   976  001302  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
   977  001306  0E00               	movlw	0
   978  001308  22DD               	addwfc	postdec2,f,c
   979  00130A  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
   980  00130E  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
   981  001312  CFDE F04C          	movff	postinc2,vfpfcnvrt@ll
   982  001316  CFDD F04D          	movff	postdec2,vfpfcnvrt@ll+1
   983  00131A  0E00               	movlw	0
   984  00131C  BE4D               	btfsc	vfpfcnvrt@ll+1,7,c
   985  00131E  0EFF               	movlw	-1
   986  001320  6E4E               	movwf	vfpfcnvrt@ll+2,c
   987  001322  6E4F               	movwf	vfpfcnvrt@ll+3,c
   988  001324  6E50               	movwf	vfpfcnvrt@ll+4,c
   989  001326  6E51               	movwf	vfpfcnvrt@ll+5,c
   990  001328  6E52               	movwf	vfpfcnvrt@ll+6,c
   991  00132A  6E53               	movwf	vfpfcnvrt@ll+7,c
   992  00132C  C044  F020         	movff	vfpfcnvrt@fp,dtoa@fp
   993  001330  C045  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
   994  001334  C04C  F022         	movff	vfpfcnvrt@ll,dtoa@d
   995  001338  C04D  F023         	movff	vfpfcnvrt@ll+1,dtoa@d+1
   996  00133C  C04E  F024         	movff	vfpfcnvrt@ll+2,dtoa@d+2
   997  001340  C04F  F025         	movff	vfpfcnvrt@ll+3,dtoa@d+3
   998  001344  C050  F026         	movff	vfpfcnvrt@ll+4,dtoa@d+4
   999  001348  C051  F027         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1000  00134C  C052  F028         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1001  001350  C053  F029         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1002  001354  EC19  F008         	call	_dtoa	;wreg free
  1003  001358  C020  F044         	movff	?_dtoa,?_vfpfcnvrt
  1004  00135C  C021  F045         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1005  001360  0012               	return	
  1006  001362                     l1601:
  1007  001362  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1008  001366  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1009  00136A  CFDE FFF6          	movff	postinc2,tblptrl
  1010  00136E  CFDD FFF7          	movff	postdec2,tblptrh
  1011  001372                     	if	0	;tblptru may be non-zero
  1012  001372                     	endif
  1013  001372                     	if	0	;tblptru may be non-zero
  1014  001372                     	endif
  1015  001372  0008               	tblrd		*
  1016  001374  50F5               	movf	tablat,w,c
  1017  001376  0A25               	xorlw	37
  1018  001378  A4D8               	btfss	status,2,c
  1019  00137A  D016               	goto	l1611
  1020  00137C  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1021  001380  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1022  001384  2ADE               	incf	postinc2,f,c
  1023  001386  0E00               	movlw	0
  1024  001388  22DD               	addwfc	postdec2,f,c
  1025  00138A  0E00               	movlw	0
  1026  00138C  6E06               	movwf	fputc@c+1,c
  1027  00138E  0E25               	movlw	37
  1028  001390  6E05               	movwf	fputc@c,c
  1029  001392  C044  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1030  001396  C045  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1031  00139A  EC3E  F00C         	call	_fputc	;wreg free
  1032  00139E                     l1607:
  1033  00139E  0E00               	movlw	0
  1034  0013A0  6E45               	movwf	?_vfpfcnvrt+1,c
  1035  0013A2  0E01               	movlw	1
  1036  0013A4  6E44               	movwf	?_vfpfcnvrt,c
  1037  0013A6  0012               	return	
  1038  0013A8                     l1611:
  1039  0013A8  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1040  0013AC  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1041  0013B0  2ADE               	incf	postinc2,f,c
  1042  0013B2  0E00               	movlw	0
  1043  0013B4  22DD               	addwfc	postdec2,f,c
  1044  0013B6  0E00               	movlw	0
  1045  0013B8  6E45               	movwf	?_vfpfcnvrt+1,c
  1046  0013BA  0E00               	movlw	0
  1047  0013BC  6E44               	movwf	?_vfpfcnvrt,c
  1048  0013BE  0012               	return	
  1049  0013C0                     l1617:
  1050  0013C0  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1051  0013C4  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1052  0013C8  CFDE FFF6          	movff	postinc2,tblptrl
  1053  0013CC  CFDD FFF7          	movff	postdec2,tblptrh
  1054  0013D0                     	if	0	;tblptru may be non-zero
  1055  0013D0                     	endif
  1056  0013D0                     	if	0	;tblptru may be non-zero
  1057  0013D0                     	endif
  1058  0013D0  0008               	tblrd		*
  1059  0013D2  50F5               	movf	tablat,w,c
  1060  0013D4  6E05               	movwf	fputc@c,c
  1061  0013D6  6A06               	clrf	fputc@c+1,c
  1062  0013D8  C044  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1063  0013DC  C045  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1064  0013E0  EC3E  F00C         	call	_fputc	;wreg free
  1065  0013E4  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1066  0013E8  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1067  0013EC  2ADE               	incf	postinc2,f,c
  1068  0013EE  0E00               	movlw	0
  1069  0013F0  22DD               	addwfc	postdec2,f,c
  1070  0013F2  D7D5               	goto	l1607
  1071  0013F4                     __end_of_vfpfcnvrt:
  1072                           	opt callstack 0
  1073                           
  1074 ;; *************** function _dtoa *****************
  1075 ;; Defined at:
  1076 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1077 ;; Parameters:    Size  Location     Type
  1078 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  1079 ;;		 -> NULL(0), 
  1080 ;;  d               8   33[COMRAM] long long 
  1081 ;; Auto vars:     Size  Location     Type
  1082 ;;  n               8   57[COMRAM] long long 
  1083 ;;  i               2   65[COMRAM] int 
  1084 ;;  s               2   55[COMRAM] int 
  1085 ;;  w               2   53[COMRAM] int 
  1086 ;;  p               2   51[COMRAM] int 
  1087 ;; Return value:  Size  Location     Type
  1088 ;;                  2   31[COMRAM] int 
  1089 ;; Registers used:
  1090 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1091 ;; Tracked objects:
  1092 ;;		On entry : 0/0
  1093 ;;		On exit  : 0/0
  1094 ;;		Unchanged: 0/0
  1095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1096 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1097 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1098 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1099 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1100 ;;Total ram usage:       36 bytes
  1101 ;; Hardware stack levels used:    1
  1102 ;; Hardware stack levels required when called:    7
  1103 ;; This function calls:
  1104 ;;		___aodiv
  1105 ;;		___aomod
  1106 ;;		_abs
  1107 ;;		_pad
  1108 ;; This function is called by:
  1109 ;;		_vfpfcnvrt
  1110 ;; This function uses a non-reentrant model
  1111 ;;
  1112                           
  1113                           	psect	text4
  1114  001032                     __ptext4:
  1115                           	opt callstack 0
  1116  001032                     _dtoa:
  1117                           	opt callstack 20
  1118                           
  1119                           ;incstack = 0
  1120  001032  C022  F03A         	movff	dtoa@d,dtoa@n
  1121  001036  C023  F03B         	movff	dtoa@d+1,dtoa@n+1
  1122  00103A  C024  F03C         	movff	dtoa@d+2,dtoa@n+2
  1123  00103E  C025  F03D         	movff	dtoa@d+3,dtoa@n+3
  1124  001042  C026  F03E         	movff	dtoa@d+4,dtoa@n+4
  1125  001046  C027  F03F         	movff	dtoa@d+5,dtoa@n+5
  1126  00104A  C028  F040         	movff	dtoa@d+6,dtoa@n+6
  1127  00104E  C029  F041         	movff	dtoa@d+7,dtoa@n+7
  1128  001052  AE41               	btfss	dtoa@n+7,7,c
  1129  001054  D002               	goto	u840
  1130  001056  0E01               	movlw	1
  1131  001058  D001               	goto	u850
  1132  00105A                     u840:
  1133  00105A  0E00               	movlw	0
  1134  00105C                     u850:
  1135  00105C  6E38               	movwf	dtoa@s,c
  1136  00105E  6A39               	clrf	dtoa@s+1,c
  1137  001060  5038               	movf	dtoa@s,w,c
  1138  001062  1039               	iorwf	dtoa@s+1,w,c
  1139  001064  B4D8               	btfsc	status,2,c
  1140  001066  D010               	goto	l1527
  1141  001068  1E41               	comf	dtoa@n+7,f,c
  1142  00106A  1E40               	comf	dtoa@n+6,f,c
  1143  00106C  1E3F               	comf	dtoa@n+5,f,c
  1144  00106E  1E3E               	comf	dtoa@n+4,f,c
  1145  001070  1E3D               	comf	dtoa@n+3,f,c
  1146  001072  1E3C               	comf	dtoa@n+2,f,c
  1147  001074  1E3B               	comf	dtoa@n+1,f,c
  1148  001076  6C3A               	negf	dtoa@n,c
  1149  001078  0E00               	movlw	0
  1150  00107A  223B               	addwfc	dtoa@n+1,f,c
  1151  00107C  223C               	addwfc	dtoa@n+2,f,c
  1152  00107E  223D               	addwfc	dtoa@n+3,f,c
  1153  001080  223E               	addwfc	dtoa@n+4,f,c
  1154  001082  223F               	addwfc	dtoa@n+5,f,c
  1155  001084  2240               	addwfc	dtoa@n+6,f,c
  1156  001086  2241               	addwfc	dtoa@n+7,f,c
  1157  001088                     l1527:
  1158  001088  AE76               	btfss	_prec+1,7,c
  1159  00108A  9277               	bcf	_flags,1,c
  1160  00108C  BE76               	btfsc	_prec+1,7,c
  1161  00108E  D005               	goto	u880
  1162  001090  5076               	movf	_prec+1,w,c
  1163  001092  E108               	bnz	l171
  1164  001094  0475               	decf	_prec,w,c
  1165  001096  B0D8               	btfsc	status,0,c
  1166  001098  D005               	goto	l171
  1167  00109A                     u880:
  1168  00109A  0E00               	movlw	0
  1169  00109C  6E35               	movwf	dtoa@p+1,c
  1170  00109E  0E01               	movlw	1
  1171  0010A0  6E34               	movwf	dtoa@p,c
  1172  0010A2  D004               	goto	l173
  1173  0010A4                     l171:
  1174  0010A4  C075  F034         	movff	_prec,dtoa@p
  1175  0010A8  C076  F035         	movff	_prec+1,dtoa@p+1
  1176  0010AC                     l173:
  1177  0010AC  C073  F036         	movff	_width,dtoa@w
  1178  0010B0  C074  F037         	movff	_width+1,dtoa@w+1
  1179  0010B4  5038               	movf	dtoa@s,w,c
  1180  0010B6  1039               	iorwf	dtoa@s+1,w,c
  1181  0010B8  A4D8               	btfss	status,2,c
  1182  0010BA  D002               	goto	u900
  1183  0010BC  A477               	btfss	_flags,2,c
  1184  0010BE  D003               	goto	l1541
  1185  0010C0                     u900:
  1186  0010C0  0636               	decf	dtoa@w,f,c
  1187  0010C2  A0D8               	btfss	status,0,c
  1188  0010C4  0637               	decf	dtoa@w+1,f,c
  1189  0010C6                     l1541:
  1190  0010C6  0E00               	movlw	0
  1191  0010C8  6E43               	movwf	dtoa@i+1,c
  1192  0010CA  0E1F               	movlw	31
  1193  0010CC  6E42               	movwf	dtoa@i,c
  1194  0010CE  0E00               	movlw	0
  1195  0010D0  0100               	movlb	0	; () banked
  1196  0010D2  6F9F               	movwf	(_dbuf+31)& (0+255),b
  1197  0010D4  D07C               	goto	l1555
  1198  0010D6                     l1545:
  1199  0010D6  0642               	decf	dtoa@i,f,c
  1200  0010D8  A0D8               	btfss	status,0,c
  1201  0010DA  0643               	decf	dtoa@i+1,f,c
  1202  0010DC  0E80               	movlw	low _dbuf
  1203  0010DE  2442               	addwf	dtoa@i,w,c
  1204  0010E0  6ED9               	movwf	fsr2l,c
  1205  0010E2  0E00               	movlw	high _dbuf
  1206  0010E4  2043               	addwfc	dtoa@i+1,w,c
  1207  0010E6  6EDA               	movwf	fsr2h,c
  1208  0010E8  C03A  F001         	movff	dtoa@n,___aomod@dividend
  1209  0010EC  C03B  F002         	movff	dtoa@n+1,___aomod@dividend+1
  1210  0010F0  C03C  F003         	movff	dtoa@n+2,___aomod@dividend+2
  1211  0010F4  C03D  F004         	movff	dtoa@n+3,___aomod@dividend+3
  1212  0010F8  C03E  F005         	movff	dtoa@n+4,___aomod@dividend+4
  1213  0010FC  C03F  F006         	movff	dtoa@n+5,___aomod@dividend+5
  1214  001100  C040  F007         	movff	dtoa@n+6,___aomod@dividend+6
  1215  001104  C041  F008         	movff	dtoa@n+7,___aomod@dividend+7
  1216  001108  0E0A               	movlw	10
  1217  00110A  6E09               	movwf	___aomod@divisor,c
  1218  00110C  0E00               	movlw	0
  1219  00110E  6E0A               	movwf	___aomod@divisor+1,c
  1220  001110  0E00               	movlw	0
  1221  001112  6E0B               	movwf	___aomod@divisor+2,c
  1222  001114  0E00               	movlw	0
  1223  001116  6E0C               	movwf	___aomod@divisor+3,c
  1224  001118  0E00               	movlw	0
  1225  00111A  6E0D               	movwf	___aomod@divisor+4,c
  1226  00111C  0E00               	movlw	0
  1227  00111E  6E0E               	movwf	___aomod@divisor+5,c
  1228  001120  0E00               	movlw	0
  1229  001122  6E0F               	movwf	___aomod@divisor+6,c
  1230  001124  0E00               	movlw	0
  1231  001126  6E10               	movwf	___aomod@divisor+7,c
  1232  001128  EC9E  F00A         	call	___aomod	;wreg free
  1233  00112C  C001  F02A         	movff	?___aomod,??_dtoa
  1234  001130  C002  F02B         	movff	?___aomod+1,??_dtoa+1
  1235  001134  C003  F02C         	movff	?___aomod+2,??_dtoa+2
  1236  001138  C004  F02D         	movff	?___aomod+3,??_dtoa+3
  1237  00113C  C005  F02E         	movff	?___aomod+4,??_dtoa+4
  1238  001140  C006  F02F         	movff	?___aomod+5,??_dtoa+5
  1239  001144  C007  F030         	movff	?___aomod+6,??_dtoa+6
  1240  001148  C008  F031         	movff	?___aomod+7,??_dtoa+7
  1241  00114C  C02A  F013         	movff	??_dtoa,abs@a
  1242  001150  C02C  F014         	movff	??_dtoa+2,abs@a+1
  1243  001154  EC1C  F00D         	call	_abs	;wreg free
  1244  001158  5013               	movf	?_abs,w,c
  1245  00115A  0F30               	addlw	48
  1246  00115C  6EDF               	movwf	indf2,c
  1247  00115E  0634               	decf	dtoa@p,f,c
  1248  001160  A0D8               	btfss	status,0,c
  1249  001162  0635               	decf	dtoa@p+1,f,c
  1250  001164  0636               	decf	dtoa@w,f,c
  1251  001166  A0D8               	btfss	status,0,c
  1252  001168  0637               	decf	dtoa@w+1,f,c
  1253  00116A  C03A  F001         	movff	dtoa@n,___aodiv@dividend
  1254  00116E  C03B  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  1255  001172  C03C  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  1256  001176  C03D  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  1257  00117A  C03E  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  1258  00117E  C03F  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  1259  001182  C040  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  1260  001186  C041  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  1261  00118A  0E0A               	movlw	10
  1262  00118C  6E09               	movwf	___aodiv@divisor,c
  1263  00118E  0E00               	movlw	0
  1264  001190  6E0A               	movwf	___aodiv@divisor+1,c
  1265  001192  0E00               	movlw	0
  1266  001194  6E0B               	movwf	___aodiv@divisor+2,c
  1267  001196  0E00               	movlw	0
  1268  001198  6E0C               	movwf	___aodiv@divisor+3,c
  1269  00119A  0E00               	movlw	0
  1270  00119C  6E0D               	movwf	___aodiv@divisor+4,c
  1271  00119E  0E00               	movlw	0
  1272  0011A0  6E0E               	movwf	___aodiv@divisor+5,c
  1273  0011A2  0E00               	movlw	0
  1274  0011A4  6E0F               	movwf	___aodiv@divisor+6,c
  1275  0011A6  0E00               	movlw	0
  1276  0011A8  6E10               	movwf	___aodiv@divisor+7,c
  1277  0011AA  ECFA  F009         	call	___aodiv	;wreg free
  1278  0011AE  C001  F03A         	movff	?___aodiv,dtoa@n
  1279  0011B2  C002  F03B         	movff	?___aodiv+1,dtoa@n+1
  1280  0011B6  C003  F03C         	movff	?___aodiv+2,dtoa@n+2
  1281  0011BA  C004  F03D         	movff	?___aodiv+3,dtoa@n+3
  1282  0011BE  C005  F03E         	movff	?___aodiv+4,dtoa@n+4
  1283  0011C2  C006  F03F         	movff	?___aodiv+5,dtoa@n+5
  1284  0011C6  C007  F040         	movff	?___aodiv+6,dtoa@n+6
  1285  0011CA  C008  F041         	movff	?___aodiv+7,dtoa@n+7
  1286  0011CE                     l1555:
  1287  0011CE  BE43               	btfsc	dtoa@i+1,7,c
  1288  0011D0  D01F               	goto	u950
  1289  0011D2  5043               	movf	dtoa@i+1,w,c
  1290  0011D4  E103               	bnz	u910
  1291  0011D6  0442               	decf	dtoa@i,w,c
  1292  0011D8  A0D8               	btfss	status,0,c
  1293  0011DA  D01A               	goto	u950
  1294  0011DC                     u910:
  1295  0011DC  503A               	movf	dtoa@n,w,c
  1296  0011DE  103B               	iorwf	dtoa@n+1,w,c
  1297  0011E0  103C               	iorwf	dtoa@n+2,w,c
  1298  0011E2  103D               	iorwf	dtoa@n+3,w,c
  1299  0011E4  103E               	iorwf	dtoa@n+4,w,c
  1300  0011E6  103F               	iorwf	dtoa@n+5,w,c
  1301  0011E8  1040               	iorwf	dtoa@n+6,w,c
  1302  0011EA  1041               	iorwf	dtoa@n+7,w,c
  1303  0011EC  A4D8               	btfss	status,2,c
  1304  0011EE  D773               	goto	l1545
  1305  0011F0  BE35               	btfsc	dtoa@p+1,7,c
  1306  0011F2  D005               	goto	u930
  1307  0011F4  5035               	movf	dtoa@p+1,w,c
  1308  0011F6  E102               	bnz	u931
  1309  0011F8  0434               	decf	dtoa@p,w,c
  1310  0011FA  B0D8               	btfsc	status,0,c
  1311  0011FC                     u931:
  1312  0011FC  D76C               	goto	l1545
  1313  0011FE                     u930:
  1314  0011FE  BE37               	btfsc	dtoa@w+1,7,c
  1315  001200  D007               	goto	u950
  1316  001202  5037               	movf	dtoa@w+1,w,c
  1317  001204  E103               	bnz	u940
  1318  001206  0436               	decf	dtoa@w,w,c
  1319  001208  A0D8               	btfss	status,0,c
  1320  00120A  D002               	goto	u950
  1321  00120C                     u940:
  1322  00120C  B277               	btfsc	_flags,1,c
  1323  00120E  D763               	goto	l1545
  1324  001210                     u950:
  1325  001210  5038               	movf	dtoa@s,w,c
  1326  001212  1039               	iorwf	dtoa@s+1,w,c
  1327  001214  A4D8               	btfss	status,2,c
  1328  001216  D002               	goto	u970
  1329  001218  A477               	btfss	_flags,2,c
  1330  00121A  D017               	goto	l1579
  1331  00121C                     u970:
  1332  00121C  0642               	decf	dtoa@i,f,c
  1333  00121E  A0D8               	btfss	status,0,c
  1334  001220  0643               	decf	dtoa@i+1,f,c
  1335  001222  5038               	movf	dtoa@s,w,c
  1336  001224  1039               	iorwf	dtoa@s+1,w,c
  1337  001226  A4D8               	btfss	status,2,c
  1338  001228  D004               	goto	l1575
  1339  00122A  0E00               	movlw	0
  1340  00122C  6E33               	movwf	_dtoa$406+1,c
  1341  00122E  0E2B               	movlw	43
  1342  001230  D003               	goto	L1
  1343  001232                     l1575:
  1344  001232  0E00               	movlw	0
  1345  001234  6E33               	movwf	_dtoa$406+1,c
  1346  001236  0E2D               	movlw	45
  1347  001238                     L1:
  1348  001238  6E32               	movwf	_dtoa$406,c
  1349  00123A  0E80               	movlw	low _dbuf
  1350  00123C  2442               	addwf	dtoa@i,w,c
  1351  00123E  6ED9               	movwf	fsr2l,c
  1352  001240  0E00               	movlw	high _dbuf
  1353  001242  2043               	addwfc	dtoa@i+1,w,c
  1354  001244  6EDA               	movwf	fsr2h,c
  1355  001246  C032  FFDF         	movff	_dtoa$406,indf2
  1356  00124A                     l1579:
  1357  00124A  C020  F015         	movff	dtoa@fp,pad@fp
  1358  00124E  C021  F016         	movff	dtoa@fp+1,pad@fp+1
  1359  001252  0E80               	movlw	low _dbuf
  1360  001254  2442               	addwf	dtoa@i,w,c
  1361  001256  6E17               	movwf	pad@buf,c
  1362  001258  0E00               	movlw	high _dbuf
  1363  00125A  2043               	addwfc	dtoa@i+1,w,c
  1364  00125C  6E18               	movwf	pad@buf+1,c
  1365  00125E  C036  F019         	movff	dtoa@w,pad@p
  1366  001262  C037  F01A         	movff	dtoa@w+1,pad@p+1
  1367  001266  ECB2  F00B         	call	_pad	;wreg free
  1368  00126A  C015  F020         	movff	?_pad,?_dtoa
  1369  00126E  C016  F021         	movff	?_pad+1,?_dtoa+1
  1370  001272  0012               	return		;funcret
  1371  001274                     __end_of_dtoa:
  1372                           	opt callstack 0
  1373                           
  1374 ;; *************** function _pad *****************
  1375 ;; Defined at:
  1376 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1377 ;; Parameters:    Size  Location     Type
  1378 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  1379 ;;		 -> NULL(0), 
  1380 ;;  buf             2   22[COMRAM] PTR unsigned char 
  1381 ;;		 -> dbuf(32), 
  1382 ;;  p               2   24[COMRAM] int 
  1383 ;; Auto vars:     Size  Location     Type
  1384 ;;  w               2   29[COMRAM] int 
  1385 ;;  i               2   27[COMRAM] int 
  1386 ;; Return value:  Size  Location     Type
  1387 ;;                  2   20[COMRAM] int 
  1388 ;; Registers used:
  1389 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1390 ;; Tracked objects:
  1391 ;;		On entry : 0/0
  1392 ;;		On exit  : 0/0
  1393 ;;		Unchanged: 0/0
  1394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1395 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1396 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1397 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1398 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1399 ;;Total ram usage:       11 bytes
  1400 ;; Hardware stack levels used:    1
  1401 ;; Hardware stack levels required when called:    6
  1402 ;; This function calls:
  1403 ;;		_fputc
  1404 ;;		_fputs
  1405 ;;		_strlen
  1406 ;; This function is called by:
  1407 ;;		_dtoa
  1408 ;; This function uses a non-reentrant model
  1409 ;;
  1410                           
  1411                           	psect	text5
  1412  001764                     __ptext5:
  1413                           	opt callstack 0
  1414  001764                     _pad:
  1415                           	opt callstack 20
  1416                           
  1417                           ;incstack = 0
  1418  001764  A077               	btfss	_flags,0,c
  1419  001766  D00A               	goto	l1419
  1420  001768  C017  F00E         	movff	pad@buf,fputs@s
  1421  00176C  C018  F00F         	movff	pad@buf+1,fputs@s+1
  1422  001770  C015  F010         	movff	pad@fp,fputs@fp
  1423  001774  C016  F011         	movff	pad@fp+1,fputs@fp+1
  1424  001778  EC00  F00D         	call	_fputs	;wreg free
  1425  00177C                     l1419:
  1426  00177C  BE1A               	btfsc	pad@p+1,7,c
  1427  00177E  D005               	goto	l1423
  1428  001780  C019  F01E         	movff	pad@p,pad@w
  1429  001784  C01A  F01F         	movff	pad@p+1,pad@w+1
  1430  001788  D004               	goto	l160
  1431  00178A                     l1423:
  1432  00178A  0E00               	movlw	0
  1433  00178C  6E1F               	movwf	pad@w+1,c
  1434  00178E  0E00               	movlw	0
  1435  001790  6E1E               	movwf	pad@w,c
  1436  001792                     l160:
  1437  001792  0E00               	movlw	0
  1438  001794  6E1D               	movwf	pad@i+1,c
  1439  001796  0E00               	movlw	0
  1440  001798  6E1C               	movwf	pad@i,c
  1441  00179A  D00C               	goto	l1429
  1442  00179C                     l1425:
  1443  00179C  0E00               	movlw	0
  1444  00179E  6E06               	movwf	fputc@c+1,c
  1445  0017A0  0E20               	movlw	32
  1446  0017A2  6E05               	movwf	fputc@c,c
  1447  0017A4  C015  F007         	movff	pad@fp,fputc@fp
  1448  0017A8  C016  F008         	movff	pad@fp+1,fputc@fp+1
  1449  0017AC  EC3E  F00C         	call	_fputc	;wreg free
  1450  0017B0  4A1C               	infsnz	pad@i,f,c
  1451  0017B2  2A1D               	incf	pad@i+1,f,c
  1452  0017B4                     l1429:
  1453  0017B4  501E               	movf	pad@w,w,c
  1454  0017B6  5C1C               	subwf	pad@i,w,c
  1455  0017B8  501D               	movf	pad@i+1,w,c
  1456  0017BA  0A80               	xorlw	128
  1457  0017BC  6E1B               	movwf	??_pad& (0+255),c
  1458  0017BE  501F               	movf	pad@w+1,w,c
  1459  0017C0  0A80               	xorlw	128
  1460  0017C2  581B               	subwfb	??_pad& (0+255),w,c
  1461  0017C4  A0D8               	btfss	status,0,c
  1462  0017C6  D7EA               	goto	l1425
  1463  0017C8  B077               	btfsc	_flags,0,c
  1464  0017CA  D00A               	goto	l1433
  1465  0017CC  C017  F00E         	movff	pad@buf,fputs@s
  1466  0017D0  C018  F00F         	movff	pad@buf+1,fputs@s+1
  1467  0017D4  C015  F010         	movff	pad@fp,fputs@fp
  1468  0017D8  C016  F011         	movff	pad@fp+1,fputs@fp+1
  1469  0017DC  EC00  F00D         	call	_fputs	;wreg free
  1470  0017E0                     l1433:
  1471  0017E0  C017  F001         	movff	pad@buf,strlen@s
  1472  0017E4  C018  F002         	movff	pad@buf+1,strlen@s+1
  1473  0017E8  EC35  F00D         	call	_strlen	;wreg free
  1474  0017EC  501E               	movf	pad@w,w,c
  1475  0017EE  2401               	addwf	?_strlen,w,c
  1476  0017F0  6E15               	movwf	?_pad,c
  1477  0017F2  501F               	movf	pad@w+1,w,c
  1478  0017F4  2002               	addwfc	?_strlen+1,w,c
  1479  0017F6  6E16               	movwf	?_pad+1,c
  1480  0017F8  0012               	return		;funcret
  1481  0017FA                     __end_of_pad:
  1482                           	opt callstack 0
  1483                           
  1484 ;; *************** function _strlen *****************
  1485 ;; Defined at:
  1486 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  1487 ;; Parameters:    Size  Location     Type
  1488 ;;  s               2    0[COMRAM] PTR const unsigned char 
  1489 ;;		 -> dbuf(32), 
  1490 ;; Auto vars:     Size  Location     Type
  1491 ;;  a               2    2[COMRAM] PTR const unsigned char 
  1492 ;;		 -> dbuf(32), 
  1493 ;; Return value:  Size  Location     Type
  1494 ;;                  2    0[COMRAM] unsigned int 
  1495 ;; Registers used:
  1496 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1497 ;; Tracked objects:
  1498 ;;		On entry : 0/0
  1499 ;;		On exit  : 0/0
  1500 ;;		Unchanged: 0/0
  1501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1502 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1503 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1505 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1506 ;;Total ram usage:        4 bytes
  1507 ;; Hardware stack levels used:    1
  1508 ;; This function calls:
  1509 ;;		Nothing
  1510 ;; This function is called by:
  1511 ;;		_pad
  1512 ;; This function uses a non-reentrant model
  1513 ;;
  1514                           
  1515                           	psect	text6
  1516  001A6A                     __ptext6:
  1517                           	opt callstack 0
  1518  001A6A                     _strlen:
  1519                           	opt callstack 25
  1520                           
  1521                           ;incstack = 0
  1522  001A6A  C001  F003         	movff	strlen@s,strlen@a
  1523  001A6E  C002  F004         	movff	strlen@s+1,strlen@a+1
  1524  001A72  D002               	goto	l1409
  1525  001A74                     l1407:
  1526  001A74  4A01               	infsnz	strlen@s,f,c
  1527  001A76  2A02               	incf	strlen@s+1,f,c
  1528  001A78                     l1409:
  1529  001A78  C001  FFD9         	movff	strlen@s,fsr2l
  1530  001A7C  C002  FFDA         	movff	strlen@s+1,fsr2h
  1531  001A80  50DF               	movf	indf2,w,c
  1532  001A82  A4D8               	btfss	status,2,c
  1533  001A84  D7F7               	goto	l1407
  1534  001A86  5003               	movf	strlen@a,w,c
  1535  001A88  5C01               	subwf	strlen@s,w,c
  1536  001A8A  6E01               	movwf	?_strlen,c
  1537  001A8C  5004               	movf	strlen@a+1,w,c
  1538  001A8E  5802               	subwfb	strlen@s+1,w,c
  1539  001A90  6E02               	movwf	?_strlen+1,c
  1540  001A92  0012               	return		;funcret
  1541  001A94                     __end_of_strlen:
  1542                           	opt callstack 0
  1543                           
  1544 ;; *************** function _fputs *****************
  1545 ;; Defined at:
  1546 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  1547 ;; Parameters:    Size  Location     Type
  1548 ;;  s               2   13[COMRAM] PTR const unsigned char 
  1549 ;;		 -> dbuf(32), 
  1550 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  1551 ;;		 -> NULL(0), 
  1552 ;; Auto vars:     Size  Location     Type
  1553 ;;  i               2   18[COMRAM] int 
  1554 ;;  c               1   17[COMRAM] unsigned char 
  1555 ;; Return value:  Size  Location     Type
  1556 ;;                  2   13[COMRAM] int 
  1557 ;; Registers used:
  1558 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1559 ;; Tracked objects:
  1560 ;;		On entry : 0/0
  1561 ;;		On exit  : 0/0
  1562 ;;		Unchanged: 0/0
  1563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1564 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1565 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1567 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1568 ;;Total ram usage:        7 bytes
  1569 ;; Hardware stack levels used:    1
  1570 ;; Hardware stack levels required when called:    5
  1571 ;; This function calls:
  1572 ;;		_fputc
  1573 ;; This function is called by:
  1574 ;;		_pad
  1575 ;; This function uses a non-reentrant model
  1576 ;;
  1577                           
  1578                           	psect	text7
  1579  001A00                     __ptext7:
  1580                           	opt callstack 0
  1581  001A00                     _fputs:
  1582                           	opt callstack 20
  1583                           
  1584                           ;incstack = 0
  1585  001A00  0E00               	movlw	0
  1586  001A02  6E14               	movwf	fputs@i+1,c
  1587  001A04  0E00               	movlw	0
  1588  001A06  6E13               	movwf	fputs@i,c
  1589  001A08  D00B               	goto	l1403
  1590  001A0A                     l1399:
  1591  001A0A  C012  F005         	movff	fputs@c,fputc@c
  1592  001A0E  6A06               	clrf	fputc@c+1,c
  1593  001A10  C010  F007         	movff	fputs@fp,fputc@fp
  1594  001A14  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  1595  001A18  EC3E  F00C         	call	_fputc	;wreg free
  1596  001A1C  4A13               	infsnz	fputs@i,f,c
  1597  001A1E  2A14               	incf	fputs@i+1,f,c
  1598  001A20                     l1403:
  1599  001A20  5013               	movf	fputs@i,w,c
  1600  001A22  240E               	addwf	fputs@s,w,c
  1601  001A24  6ED9               	movwf	fsr2l,c
  1602  001A26  5014               	movf	fputs@i+1,w,c
  1603  001A28  200F               	addwfc	fputs@s+1,w,c
  1604  001A2A  6EDA               	movwf	fsr2h,c
  1605  001A2C  50DF               	movf	indf2,w,c
  1606  001A2E  6E12               	movwf	fputs@c,c
  1607  001A30  5012               	movf	fputs@c,w,c
  1608  001A32  B4D8               	btfsc	status,2,c
  1609  001A34  0012               	return	
  1610  001A36  D7E9               	goto	l1399
  1611  001A38                     __end_of_fputs:
  1612                           	opt callstack 0
  1613                           
  1614 ;; *************** function _fputc *****************
  1615 ;; Defined at:
  1616 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  1617 ;; Parameters:    Size  Location     Type
  1618 ;;  c               2    4[COMRAM] int 
  1619 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  1620 ;;		 -> NULL(0), 
  1621 ;; Auto vars:     Size  Location     Type
  1622 ;;		None
  1623 ;; Return value:  Size  Location     Type
  1624 ;;                  2    4[COMRAM] int 
  1625 ;; Registers used:
  1626 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1627 ;; Tracked objects:
  1628 ;;		On entry : 0/0
  1629 ;;		On exit  : 0/0
  1630 ;;		Unchanged: 0/0
  1631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1632 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1634 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1635 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1636 ;;Total ram usage:        9 bytes
  1637 ;; Hardware stack levels used:    1
  1638 ;; Hardware stack levels required when called:    4
  1639 ;; This function calls:
  1640 ;;		_putch
  1641 ;; This function is called by:
  1642 ;;		_pad
  1643 ;;		_vfpfcnvrt
  1644 ;;		_fputs
  1645 ;; This function uses a non-reentrant model
  1646 ;;
  1647                           
  1648                           	psect	text8
  1649  00187C                     __ptext8:
  1650                           	opt callstack 0
  1651  00187C                     _fputc:
  1652                           	opt callstack 23
  1653                           
  1654                           ;incstack = 0
  1655  00187C  5007               	movf	fputc@fp,w,c
  1656  00187E  1008               	iorwf	fputc@fp+1,w,c
  1657  001880  B4D8               	btfsc	status,2,c
  1658  001882  D004               	goto	u610
  1659  001884  5007               	movf	fputc@fp,w,c
  1660  001886  1008               	iorwf	fputc@fp+1,w,c
  1661  001888  A4D8               	btfss	status,2,c
  1662  00188A  D004               	goto	l1389
  1663  00188C                     u610:
  1664  00188C  5005               	movf	fputc@c,w,c
  1665  00188E  ECB4  F00D         	call	_putch
  1666  001892  0012               	return	
  1667  001894                     l1389:
  1668  001894  EE20 F004          	lfsr	2,4
  1669  001898  5007               	movf	fputc@fp,w,c
  1670  00189A  26D9               	addwf	fsr2l,f,c
  1671  00189C  5008               	movf	fputc@fp+1,w,c
  1672  00189E  22DA               	addwfc	fsr2h,f,c
  1673  0018A0  50DE               	movf	postinc2,w,c
  1674  0018A2  10DE               	iorwf	postinc2,w,c
  1675  0018A4  B4D8               	btfsc	status,2,c
  1676  0018A6  D016               	goto	u630
  1677  0018A8  EE20 F004          	lfsr	2,4
  1678  0018AC  5007               	movf	fputc@fp,w,c
  1679  0018AE  26D9               	addwf	fsr2l,f,c
  1680  0018B0  5008               	movf	fputc@fp+1,w,c
  1681  0018B2  22DA               	addwfc	fsr2h,f,c
  1682  0018B4  EE10 F002          	lfsr	1,2
  1683  0018B8  5007               	movf	fputc@fp,w,c
  1684  0018BA  26E1               	addwf	fsr1l,f,c
  1685  0018BC  5008               	movf	fputc@fp+1,w,c
  1686  0018BE  22E2               	addwfc	fsr1h,f,c
  1687  0018C0  50DE               	movf	postinc2,w,c
  1688  0018C2  5CE6               	subwf	postinc1,w,c
  1689  0018C4  50E6               	movf	postinc1,w,c
  1690  0018C6  0A80               	xorlw	128
  1691  0018C8  6E0D               	movwf	(??_fputc+4)& (0+255),c
  1692  0018CA  50DE               	movf	postinc2,w,c
  1693  0018CC  0A80               	xorlw	128
  1694  0018CE  580D               	subwfb	(??_fputc+4)& (0+255),w,c
  1695  0018D0  B0D8               	btfsc	status,0,c
  1696  0018D2  0012               	return	
  1697  0018D4                     u630:
  1698  0018D4  EE20 F002          	lfsr	2,2
  1699  0018D8  5007               	movf	fputc@fp,w,c
  1700  0018DA  26D9               	addwf	fsr2l,f,c
  1701  0018DC  5008               	movf	fputc@fp+1,w,c
  1702  0018DE  22DA               	addwfc	fsr2h,f,c
  1703  0018E0  2ADE               	incf	postinc2,f,c
  1704  0018E2  0E00               	movlw	0
  1705  0018E4  22DD               	addwfc	postdec2,f,c
  1706  0018E6  0012               	return		;funcret
  1707  0018E8                     __end_of_fputc:
  1708                           	opt callstack 0
  1709                           
  1710 ;; *************** function _putch *****************
  1711 ;; Defined at:
  1712 ;;		line 102 in file "lcd.c"
  1713 ;; Parameters:    Size  Location     Type
  1714 ;;  data            1    wreg     unsigned char 
  1715 ;; Auto vars:     Size  Location     Type
  1716 ;;  data            1    3[COMRAM] unsigned char 
  1717 ;; Return value:  Size  Location     Type
  1718 ;;                  1    wreg      void 
  1719 ;; Registers used:
  1720 ;;		wreg, status,2, status,0, cstack
  1721 ;; Tracked objects:
  1722 ;;		On entry : 0/0
  1723 ;;		On exit  : 0/0
  1724 ;;		Unchanged: 0/0
  1725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1727 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1729 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1730 ;;Total ram usage:        1 bytes
  1731 ;; Hardware stack levels used:    1
  1732 ;; Hardware stack levels required when called:    3
  1733 ;; This function calls:
  1734 ;;		_send_byte
  1735 ;; This function is called by:
  1736 ;;		_fputc
  1737 ;; This function uses a non-reentrant model
  1738 ;;
  1739                           
  1740                           	psect	text9
  1741  001B68                     __ptext9:
  1742                           	opt callstack 0
  1743  001B68                     _putch:
  1744                           	opt callstack 23
  1745                           
  1746                           ;incstack = 0
  1747                           ;putch@data stored from wreg
  1748  001B68  6E04               	movwf	putch@data,c
  1749                           
  1750                           ;lcd.c: 103:     LATDbits.LATD2 = 1;
  1751  001B6A  848C               	bsf	3980,2,c	;volatile
  1752                           
  1753                           ;lcd.c: 104:     send_byte((unsigned char)data);
  1754  001B6C  5004               	movf	putch@data,w,c
  1755  001B6E  ECA2  F00D         	call	_send_byte
  1756  001B72  0012               	return		;funcret
  1757  001B74                     __end_of_putch:
  1758                           	opt callstack 0
  1759                           
  1760 ;; *************** function _abs *****************
  1761 ;; Defined at:
  1762 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  1763 ;; Parameters:    Size  Location     Type
  1764 ;;  a               2   18[COMRAM] int 
  1765 ;; Auto vars:     Size  Location     Type
  1766 ;;		None
  1767 ;; Return value:  Size  Location     Type
  1768 ;;                  2   18[COMRAM] int 
  1769 ;; Registers used:
  1770 ;;		wreg, status,2, status,0
  1771 ;; Tracked objects:
  1772 ;;		On entry : 0/0
  1773 ;;		On exit  : 0/0
  1774 ;;		Unchanged: 0/0
  1775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1776 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1778 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1779 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1780 ;;Total ram usage:        4 bytes
  1781 ;; Hardware stack levels used:    1
  1782 ;; This function calls:
  1783 ;;		Nothing
  1784 ;; This function is called by:
  1785 ;;		_dtoa
  1786 ;; This function uses a non-reentrant model
  1787 ;;
  1788                           
  1789                           	psect	text10
  1790  001A38                     __ptext10:
  1791                           	opt callstack 0
  1792  001A38                     _abs:
  1793                           	opt callstack 26
  1794                           
  1795                           ;incstack = 0
  1796  001A38  BE14               	btfsc	abs@a+1,7,c
  1797  001A3A  D005               	goto	u700
  1798  001A3C  5014               	movf	abs@a+1,w,c
  1799  001A3E  E110               	bnz	l883
  1800  001A40  0413               	decf	abs@a,w,c
  1801  001A42  B0D8               	btfsc	status,0,c
  1802  001A44  D00D               	goto	l883
  1803  001A46                     u700:
  1804  001A46  C013  F015         	movff	abs@a,??_abs
  1805  001A4A  C014  F016         	movff	abs@a+1,??_abs+1
  1806  001A4E  1E15               	comf	??_abs,f,c
  1807  001A50  1E16               	comf	??_abs+1,f,c
  1808  001A52  4A15               	infsnz	??_abs,f,c
  1809  001A54  2A16               	incf	??_abs+1,f,c
  1810  001A56  C015  F013         	movff	??_abs,?_abs
  1811  001A5A  C016  F014         	movff	??_abs+1,?_abs+1
  1812  001A5E  0012               	return	
  1813  001A60                     l883:
  1814  001A60  C013  F013         	movff	abs@a,?_abs
  1815  001A64  C014  F014         	movff	abs@a+1,?_abs+1
  1816  001A68  0012               	return		;funcret
  1817  001A6A                     __end_of_abs:
  1818                           	opt callstack 0
  1819                           
  1820 ;; *************** function ___aomod *****************
  1821 ;; Defined at:
  1822 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  1823 ;; Parameters:    Size  Location     Type
  1824 ;;  dividend        8    0[COMRAM] long long 
  1825 ;;  divisor         8    8[COMRAM] long long 
  1826 ;; Auto vars:     Size  Location     Type
  1827 ;;  sign            1   17[COMRAM] unsigned char 
  1828 ;;  counter         1   16[COMRAM] unsigned char 
  1829 ;; Return value:  Size  Location     Type
  1830 ;;                  8    0[COMRAM] long long 
  1831 ;; Registers used:
  1832 ;;		wreg, status,2, status,0
  1833 ;; Tracked objects:
  1834 ;;		On entry : 0/0
  1835 ;;		On exit  : 0/0
  1836 ;;		Unchanged: 0/0
  1837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1838 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1839 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1841 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1842 ;;Total ram usage:       18 bytes
  1843 ;; Hardware stack levels used:    1
  1844 ;; This function calls:
  1845 ;;		Nothing
  1846 ;; This function is called by:
  1847 ;;		_dtoa
  1848 ;; This function uses a non-reentrant model
  1849 ;;
  1850                           
  1851                           	psect	text11
  1852  00153C                     __ptext11:
  1853                           	opt callstack 0
  1854  00153C                     ___aomod:
  1855                           	opt callstack 26
  1856                           
  1857                           ;incstack = 0
  1858  00153C  0E00               	movlw	0
  1859  00153E  6E12               	movwf	___aomod@sign,c
  1860  001540  AE08               	btfss	___aomod@dividend+7,7,c
  1861  001542  D012               	goto	l1493
  1862  001544  1E08               	comf	___aomod@dividend+7,f,c
  1863  001546  1E07               	comf	___aomod@dividend+6,f,c
  1864  001548  1E06               	comf	___aomod@dividend+5,f,c
  1865  00154A  1E05               	comf	___aomod@dividend+4,f,c
  1866  00154C  1E04               	comf	___aomod@dividend+3,f,c
  1867  00154E  1E03               	comf	___aomod@dividend+2,f,c
  1868  001550  1E02               	comf	___aomod@dividend+1,f,c
  1869  001552  6C01               	negf	___aomod@dividend,c
  1870  001554  0E00               	movlw	0
  1871  001556  2202               	addwfc	___aomod@dividend+1,f,c
  1872  001558  2203               	addwfc	___aomod@dividend+2,f,c
  1873  00155A  2204               	addwfc	___aomod@dividend+3,f,c
  1874  00155C  2205               	addwfc	___aomod@dividend+4,f,c
  1875  00155E  2206               	addwfc	___aomod@dividend+5,f,c
  1876  001560  2207               	addwfc	___aomod@dividend+6,f,c
  1877  001562  2208               	addwfc	___aomod@dividend+7,f,c
  1878  001564  0E01               	movlw	1
  1879  001566  6E12               	movwf	___aomod@sign,c
  1880  001568                     l1493:
  1881  001568  AE10               	btfss	___aomod@divisor+7,7,c
  1882  00156A  D010               	goto	l1497
  1883  00156C  1E10               	comf	___aomod@divisor+7,f,c
  1884  00156E  1E0F               	comf	___aomod@divisor+6,f,c
  1885  001570  1E0E               	comf	___aomod@divisor+5,f,c
  1886  001572  1E0D               	comf	___aomod@divisor+4,f,c
  1887  001574  1E0C               	comf	___aomod@divisor+3,f,c
  1888  001576  1E0B               	comf	___aomod@divisor+2,f,c
  1889  001578  1E0A               	comf	___aomod@divisor+1,f,c
  1890  00157A  6C09               	negf	___aomod@divisor,c
  1891  00157C  0E00               	movlw	0
  1892  00157E  220A               	addwfc	___aomod@divisor+1,f,c
  1893  001580  220B               	addwfc	___aomod@divisor+2,f,c
  1894  001582  220C               	addwfc	___aomod@divisor+3,f,c
  1895  001584  220D               	addwfc	___aomod@divisor+4,f,c
  1896  001586  220E               	addwfc	___aomod@divisor+5,f,c
  1897  001588  220F               	addwfc	___aomod@divisor+6,f,c
  1898  00158A  2210               	addwfc	___aomod@divisor+7,f,c
  1899  00158C                     l1497:
  1900  00158C  5009               	movf	___aomod@divisor,w,c
  1901  00158E  100A               	iorwf	___aomod@divisor+1,w,c
  1902  001590  100B               	iorwf	___aomod@divisor+2,w,c
  1903  001592  100C               	iorwf	___aomod@divisor+3,w,c
  1904  001594  100D               	iorwf	___aomod@divisor+4,w,c
  1905  001596  100E               	iorwf	___aomod@divisor+5,w,c
  1906  001598  100F               	iorwf	___aomod@divisor+6,w,c
  1907  00159A  1010               	iorwf	___aomod@divisor+7,w,c
  1908  00159C  B4D8               	btfsc	status,2,c
  1909  00159E  D03C               	goto	l1513
  1910  0015A0  0E01               	movlw	1
  1911  0015A2  6E11               	movwf	___aomod@counter,c
  1912  0015A4  D00A               	goto	l1503
  1913  0015A6                     l1501:
  1914  0015A6  90D8               	bcf	status,0,c
  1915  0015A8  3609               	rlcf	___aomod@divisor,f,c
  1916  0015AA  360A               	rlcf	___aomod@divisor+1,f,c
  1917  0015AC  360B               	rlcf	___aomod@divisor+2,f,c
  1918  0015AE  360C               	rlcf	___aomod@divisor+3,f,c
  1919  0015B0  360D               	rlcf	___aomod@divisor+4,f,c
  1920  0015B2  360E               	rlcf	___aomod@divisor+5,f,c
  1921  0015B4  360F               	rlcf	___aomod@divisor+6,f,c
  1922  0015B6  3610               	rlcf	___aomod@divisor+7,f,c
  1923  0015B8  2A11               	incf	___aomod@counter,f,c
  1924  0015BA                     l1503:
  1925  0015BA  AE10               	btfss	___aomod@divisor+7,7,c
  1926  0015BC  D7F4               	goto	l1501
  1927  0015BE                     u810:
  1928  0015BE  5009               	movf	___aomod@divisor,w,c
  1929  0015C0  5C01               	subwf	___aomod@dividend,w,c
  1930  0015C2  500A               	movf	___aomod@divisor+1,w,c
  1931  0015C4  5802               	subwfb	___aomod@dividend+1,w,c
  1932  0015C6  500B               	movf	___aomod@divisor+2,w,c
  1933  0015C8  5803               	subwfb	___aomod@dividend+2,w,c
  1934  0015CA  500C               	movf	___aomod@divisor+3,w,c
  1935  0015CC  5804               	subwfb	___aomod@dividend+3,w,c
  1936  0015CE  500D               	movf	___aomod@divisor+4,w,c
  1937  0015D0  5805               	subwfb	___aomod@dividend+4,w,c
  1938  0015D2  500E               	movf	___aomod@divisor+5,w,c
  1939  0015D4  5806               	subwfb	___aomod@dividend+5,w,c
  1940  0015D6  500F               	movf	___aomod@divisor+6,w,c
  1941  0015D8  5807               	subwfb	___aomod@dividend+6,w,c
  1942  0015DA  5010               	movf	___aomod@divisor+7,w,c
  1943  0015DC  5808               	subwfb	___aomod@dividend+7,w,c
  1944  0015DE  A0D8               	btfss	status,0,c
  1945  0015E0  D010               	goto	l1509
  1946  0015E2  5009               	movf	___aomod@divisor,w,c
  1947  0015E4  5E01               	subwf	___aomod@dividend,f,c
  1948  0015E6  500A               	movf	___aomod@divisor+1,w,c
  1949  0015E8  5A02               	subwfb	___aomod@dividend+1,f,c
  1950  0015EA  500B               	movf	___aomod@divisor+2,w,c
  1951  0015EC  5A03               	subwfb	___aomod@dividend+2,f,c
  1952  0015EE  500C               	movf	___aomod@divisor+3,w,c
  1953  0015F0  5A04               	subwfb	___aomod@dividend+3,f,c
  1954  0015F2  500D               	movf	___aomod@divisor+4,w,c
  1955  0015F4  5A05               	subwfb	___aomod@dividend+4,f,c
  1956  0015F6  500E               	movf	___aomod@divisor+5,w,c
  1957  0015F8  5A06               	subwfb	___aomod@dividend+5,f,c
  1958  0015FA  500F               	movf	___aomod@divisor+6,w,c
  1959  0015FC  5A07               	subwfb	___aomod@dividend+6,f,c
  1960  0015FE  5010               	movf	___aomod@divisor+7,w,c
  1961  001600  5A08               	subwfb	___aomod@dividend+7,f,c
  1962  001602                     l1509:
  1963  001602  90D8               	bcf	status,0,c
  1964  001604  3210               	rrcf	___aomod@divisor+7,f,c
  1965  001606  320F               	rrcf	___aomod@divisor+6,f,c
  1966  001608  320E               	rrcf	___aomod@divisor+5,f,c
  1967  00160A  320D               	rrcf	___aomod@divisor+4,f,c
  1968  00160C  320C               	rrcf	___aomod@divisor+3,f,c
  1969  00160E  320B               	rrcf	___aomod@divisor+2,f,c
  1970  001610  320A               	rrcf	___aomod@divisor+1,f,c
  1971  001612  3209               	rrcf	___aomod@divisor,f,c
  1972  001614  2E11               	decfsz	___aomod@counter,f,c
  1973  001616  D7D3               	goto	u810
  1974  001618                     l1513:
  1975  001618  5012               	movf	___aomod@sign,w,c
  1976  00161A  B4D8               	btfsc	status,2,c
  1977  00161C  D010               	goto	l1517
  1978  00161E  1E08               	comf	___aomod@dividend+7,f,c
  1979  001620  1E07               	comf	___aomod@dividend+6,f,c
  1980  001622  1E06               	comf	___aomod@dividend+5,f,c
  1981  001624  1E05               	comf	___aomod@dividend+4,f,c
  1982  001626  1E04               	comf	___aomod@dividend+3,f,c
  1983  001628  1E03               	comf	___aomod@dividend+2,f,c
  1984  00162A  1E02               	comf	___aomod@dividend+1,f,c
  1985  00162C  6C01               	negf	___aomod@dividend,c
  1986  00162E  0E00               	movlw	0
  1987  001630  2202               	addwfc	___aomod@dividend+1,f,c
  1988  001632  2203               	addwfc	___aomod@dividend+2,f,c
  1989  001634  2204               	addwfc	___aomod@dividend+3,f,c
  1990  001636  2205               	addwfc	___aomod@dividend+4,f,c
  1991  001638  2206               	addwfc	___aomod@dividend+5,f,c
  1992  00163A  2207               	addwfc	___aomod@dividend+6,f,c
  1993  00163C  2208               	addwfc	___aomod@dividend+7,f,c
  1994  00163E                     l1517:
  1995  00163E  C001  F001         	movff	___aomod@dividend,?___aomod
  1996  001642  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  1997  001646  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  1998  00164A  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  1999  00164E  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2000  001652  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  2001  001656  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  2002  00165A  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  2003  00165E  0012               	return		;funcret
  2004  001660                     __end_of___aomod:
  2005                           	opt callstack 0
  2006                           
  2007 ;; *************** function ___aodiv *****************
  2008 ;; Defined at:
  2009 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  2010 ;; Parameters:    Size  Location     Type
  2011 ;;  dividend        8    0[COMRAM] long long 
  2012 ;;  divisor         8    8[COMRAM] long long 
  2013 ;; Auto vars:     Size  Location     Type
  2014 ;;  quotient        8   18[COMRAM] long long 
  2015 ;;  sign            1   17[COMRAM] unsigned char 
  2016 ;;  counter         1   16[COMRAM] unsigned char 
  2017 ;; Return value:  Size  Location     Type
  2018 ;;                  8    0[COMRAM] long long 
  2019 ;; Registers used:
  2020 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2021 ;; Tracked objects:
  2022 ;;		On entry : 0/0
  2023 ;;		On exit  : 0/0
  2024 ;;		Unchanged: 0/0
  2025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2026 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2027 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2029 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2030 ;;Total ram usage:       26 bytes
  2031 ;; Hardware stack levels used:    1
  2032 ;; This function calls:
  2033 ;;		Nothing
  2034 ;; This function is called by:
  2035 ;;		_dtoa
  2036 ;; This function uses a non-reentrant model
  2037 ;;
  2038                           
  2039                           	psect	text12
  2040  0013F4                     __ptext12:
  2041                           	opt callstack 0
  2042  0013F4                     ___aodiv:
  2043                           	opt callstack 26
  2044                           
  2045                           ;incstack = 0
  2046  0013F4  0E00               	movlw	0
  2047  0013F6  6E12               	movwf	___aodiv@sign,c
  2048  0013F8  AE10               	btfss	___aodiv@divisor+7,7,c
  2049  0013FA  D012               	goto	l1449
  2050  0013FC  1E10               	comf	___aodiv@divisor+7,f,c
  2051  0013FE  1E0F               	comf	___aodiv@divisor+6,f,c
  2052  001400  1E0E               	comf	___aodiv@divisor+5,f,c
  2053  001402  1E0D               	comf	___aodiv@divisor+4,f,c
  2054  001404  1E0C               	comf	___aodiv@divisor+3,f,c
  2055  001406  1E0B               	comf	___aodiv@divisor+2,f,c
  2056  001408  1E0A               	comf	___aodiv@divisor+1,f,c
  2057  00140A  6C09               	negf	___aodiv@divisor,c
  2058  00140C  0E00               	movlw	0
  2059  00140E  220A               	addwfc	___aodiv@divisor+1,f,c
  2060  001410  220B               	addwfc	___aodiv@divisor+2,f,c
  2061  001412  220C               	addwfc	___aodiv@divisor+3,f,c
  2062  001414  220D               	addwfc	___aodiv@divisor+4,f,c
  2063  001416  220E               	addwfc	___aodiv@divisor+5,f,c
  2064  001418  220F               	addwfc	___aodiv@divisor+6,f,c
  2065  00141A  2210               	addwfc	___aodiv@divisor+7,f,c
  2066  00141C  0E01               	movlw	1
  2067  00141E  6E12               	movwf	___aodiv@sign,c
  2068  001420                     l1449:
  2069  001420  AE08               	btfss	___aodiv@dividend+7,7,c
  2070  001422  D012               	goto	l1455
  2071  001424  1E08               	comf	___aodiv@dividend+7,f,c
  2072  001426  1E07               	comf	___aodiv@dividend+6,f,c
  2073  001428  1E06               	comf	___aodiv@dividend+5,f,c
  2074  00142A  1E05               	comf	___aodiv@dividend+4,f,c
  2075  00142C  1E04               	comf	___aodiv@dividend+3,f,c
  2076  00142E  1E03               	comf	___aodiv@dividend+2,f,c
  2077  001430  1E02               	comf	___aodiv@dividend+1,f,c
  2078  001432  6C01               	negf	___aodiv@dividend,c
  2079  001434  0E00               	movlw	0
  2080  001436  2202               	addwfc	___aodiv@dividend+1,f,c
  2081  001438  2203               	addwfc	___aodiv@dividend+2,f,c
  2082  00143A  2204               	addwfc	___aodiv@dividend+3,f,c
  2083  00143C  2205               	addwfc	___aodiv@dividend+4,f,c
  2084  00143E  2206               	addwfc	___aodiv@dividend+5,f,c
  2085  001440  2207               	addwfc	___aodiv@dividend+6,f,c
  2086  001442  2208               	addwfc	___aodiv@dividend+7,f,c
  2087  001444  0E01               	movlw	1
  2088  001446  1A12               	xorwf	___aodiv@sign,f,c
  2089  001448                     l1455:
  2090  001448  EE20  F013         	lfsr	2,___aodiv@quotient
  2091  00144C  0E07               	movlw	7
  2092  00144E                     u731:
  2093  00144E  6ADE               	clrf	postinc2,c
  2094  001450  06E8               	decf	wreg,f,c
  2095  001452  E2FD               	bc	u731
  2096  001454  5009               	movf	___aodiv@divisor,w,c
  2097  001456  100A               	iorwf	___aodiv@divisor+1,w,c
  2098  001458  100B               	iorwf	___aodiv@divisor+2,w,c
  2099  00145A  100C               	iorwf	___aodiv@divisor+3,w,c
  2100  00145C  100D               	iorwf	___aodiv@divisor+4,w,c
  2101  00145E  100E               	iorwf	___aodiv@divisor+5,w,c
  2102  001460  100F               	iorwf	___aodiv@divisor+6,w,c
  2103  001462  1010               	iorwf	___aodiv@divisor+7,w,c
  2104  001464  B4D8               	btfsc	status,2,c
  2105  001466  D046               	goto	l1477
  2106  001468  0E01               	movlw	1
  2107  00146A  6E11               	movwf	___aodiv@counter,c
  2108  00146C  D00A               	goto	l1463
  2109  00146E                     l1461:
  2110  00146E  90D8               	bcf	status,0,c
  2111  001470  3609               	rlcf	___aodiv@divisor,f,c
  2112  001472  360A               	rlcf	___aodiv@divisor+1,f,c
  2113  001474  360B               	rlcf	___aodiv@divisor+2,f,c
  2114  001476  360C               	rlcf	___aodiv@divisor+3,f,c
  2115  001478  360D               	rlcf	___aodiv@divisor+4,f,c
  2116  00147A  360E               	rlcf	___aodiv@divisor+5,f,c
  2117  00147C  360F               	rlcf	___aodiv@divisor+6,f,c
  2118  00147E  3610               	rlcf	___aodiv@divisor+7,f,c
  2119  001480  2A11               	incf	___aodiv@counter,f,c
  2120  001482                     l1463:
  2121  001482  AE10               	btfss	___aodiv@divisor+7,7,c
  2122  001484  D7F4               	goto	l1461
  2123  001486                     u750:
  2124  001486  90D8               	bcf	status,0,c
  2125  001488  3613               	rlcf	___aodiv@quotient,f,c
  2126  00148A  3614               	rlcf	___aodiv@quotient+1,f,c
  2127  00148C  3615               	rlcf	___aodiv@quotient+2,f,c
  2128  00148E  3616               	rlcf	___aodiv@quotient+3,f,c
  2129  001490  3617               	rlcf	___aodiv@quotient+4,f,c
  2130  001492  3618               	rlcf	___aodiv@quotient+5,f,c
  2131  001494  3619               	rlcf	___aodiv@quotient+6,f,c
  2132  001496  361A               	rlcf	___aodiv@quotient+7,f,c
  2133  001498  5009               	movf	___aodiv@divisor,w,c
  2134  00149A  5C01               	subwf	___aodiv@dividend,w,c
  2135  00149C  500A               	movf	___aodiv@divisor+1,w,c
  2136  00149E  5802               	subwfb	___aodiv@dividend+1,w,c
  2137  0014A0  500B               	movf	___aodiv@divisor+2,w,c
  2138  0014A2  5803               	subwfb	___aodiv@dividend+2,w,c
  2139  0014A4  500C               	movf	___aodiv@divisor+3,w,c
  2140  0014A6  5804               	subwfb	___aodiv@dividend+3,w,c
  2141  0014A8  500D               	movf	___aodiv@divisor+4,w,c
  2142  0014AA  5805               	subwfb	___aodiv@dividend+4,w,c
  2143  0014AC  500E               	movf	___aodiv@divisor+5,w,c
  2144  0014AE  5806               	subwfb	___aodiv@dividend+5,w,c
  2145  0014B0  500F               	movf	___aodiv@divisor+6,w,c
  2146  0014B2  5807               	subwfb	___aodiv@dividend+6,w,c
  2147  0014B4  5010               	movf	___aodiv@divisor+7,w,c
  2148  0014B6  5808               	subwfb	___aodiv@dividend+7,w,c
  2149  0014B8  A0D8               	btfss	status,0,c
  2150  0014BA  D011               	goto	l1473
  2151  0014BC  5009               	movf	___aodiv@divisor,w,c
  2152  0014BE  5E01               	subwf	___aodiv@dividend,f,c
  2153  0014C0  500A               	movf	___aodiv@divisor+1,w,c
  2154  0014C2  5A02               	subwfb	___aodiv@dividend+1,f,c
  2155  0014C4  500B               	movf	___aodiv@divisor+2,w,c
  2156  0014C6  5A03               	subwfb	___aodiv@dividend+2,f,c
  2157  0014C8  500C               	movf	___aodiv@divisor+3,w,c
  2158  0014CA  5A04               	subwfb	___aodiv@dividend+3,f,c
  2159  0014CC  500D               	movf	___aodiv@divisor+4,w,c
  2160  0014CE  5A05               	subwfb	___aodiv@dividend+4,f,c
  2161  0014D0  500E               	movf	___aodiv@divisor+5,w,c
  2162  0014D2  5A06               	subwfb	___aodiv@dividend+5,f,c
  2163  0014D4  500F               	movf	___aodiv@divisor+6,w,c
  2164  0014D6  5A07               	subwfb	___aodiv@dividend+6,f,c
  2165  0014D8  5010               	movf	___aodiv@divisor+7,w,c
  2166  0014DA  5A08               	subwfb	___aodiv@dividend+7,f,c
  2167  0014DC  8013               	bsf	___aodiv@quotient,0,c
  2168  0014DE                     l1473:
  2169  0014DE  90D8               	bcf	status,0,c
  2170  0014E0  3210               	rrcf	___aodiv@divisor+7,f,c
  2171  0014E2  320F               	rrcf	___aodiv@divisor+6,f,c
  2172  0014E4  320E               	rrcf	___aodiv@divisor+5,f,c
  2173  0014E6  320D               	rrcf	___aodiv@divisor+4,f,c
  2174  0014E8  320C               	rrcf	___aodiv@divisor+3,f,c
  2175  0014EA  320B               	rrcf	___aodiv@divisor+2,f,c
  2176  0014EC  320A               	rrcf	___aodiv@divisor+1,f,c
  2177  0014EE  3209               	rrcf	___aodiv@divisor,f,c
  2178  0014F0  2E11               	decfsz	___aodiv@counter,f,c
  2179  0014F2  D7C9               	goto	u750
  2180  0014F4                     l1477:
  2181  0014F4  5012               	movf	___aodiv@sign,w,c
  2182  0014F6  B4D8               	btfsc	status,2,c
  2183  0014F8  D010               	goto	l1481
  2184  0014FA  1E1A               	comf	___aodiv@quotient+7,f,c
  2185  0014FC  1E19               	comf	___aodiv@quotient+6,f,c
  2186  0014FE  1E18               	comf	___aodiv@quotient+5,f,c
  2187  001500  1E17               	comf	___aodiv@quotient+4,f,c
  2188  001502  1E16               	comf	___aodiv@quotient+3,f,c
  2189  001504  1E15               	comf	___aodiv@quotient+2,f,c
  2190  001506  1E14               	comf	___aodiv@quotient+1,f,c
  2191  001508  6C13               	negf	___aodiv@quotient,c
  2192  00150A  0E00               	movlw	0
  2193  00150C  2214               	addwfc	___aodiv@quotient+1,f,c
  2194  00150E  2215               	addwfc	___aodiv@quotient+2,f,c
  2195  001510  2216               	addwfc	___aodiv@quotient+3,f,c
  2196  001512  2217               	addwfc	___aodiv@quotient+4,f,c
  2197  001514  2218               	addwfc	___aodiv@quotient+5,f,c
  2198  001516  2219               	addwfc	___aodiv@quotient+6,f,c
  2199  001518  221A               	addwfc	___aodiv@quotient+7,f,c
  2200  00151A                     l1481:
  2201  00151A  C013  F001         	movff	___aodiv@quotient,?___aodiv
  2202  00151E  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  2203  001522  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  2204  001526  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  2205  00152A  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  2206  00152E  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  2207  001532  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  2208  001536  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  2209  00153A  0012               	return		;funcret
  2210  00153C                     __end_of___aodiv:
  2211                           	opt callstack 0
  2212                           
  2213 ;; *************** function _initLCD *****************
  2214 ;; Defined at:
  2215 ;;		line 69 in file "lcd.c"
  2216 ;; Parameters:    Size  Location     Type
  2217 ;;		None
  2218 ;; Auto vars:     Size  Location     Type
  2219 ;;		None
  2220 ;; Return value:  Size  Location     Type
  2221 ;;                  1    wreg      void 
  2222 ;; Registers used:
  2223 ;;		wreg, status,2, status,0, cstack
  2224 ;; Tracked objects:
  2225 ;;		On entry : 0/0
  2226 ;;		On exit  : 0/0
  2227 ;;		Unchanged: 0/0
  2228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2231 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2232 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2233 ;;Total ram usage:        1 bytes
  2234 ;; Hardware stack levels used:    1
  2235 ;; Hardware stack levels required when called:    4
  2236 ;; This function calls:
  2237 ;;		_lcdInst
  2238 ;;		_send_byte
  2239 ;;		_send_nibble
  2240 ;; This function is called by:
  2241 ;;		_main
  2242 ;; This function uses a non-reentrant model
  2243 ;;
  2244                           
  2245                           	psect	text13
  2246  0018E8                     __ptext13:
  2247                           	opt callstack 0
  2248  0018E8                     _initLCD:
  2249                           	opt callstack 26
  2250                           
  2251                           ;lcd.c: 70:     _delay((unsigned long)((15)*(10000000/4000.0)));
  2252                           
  2253                           ;incstack = 0
  2254  0018E8  0E31               	movlw	49
  2255  0018EA  6E05               	movwf	??_initLCD& (0+255),c
  2256  0018EC  0EB2               	movlw	178
  2257  0018EE                     u1197:
  2258  0018EE  2EE8               	decfsz	wreg,f,c
  2259  0018F0  D7FE               	bra	u1197
  2260  0018F2  2E05               	decfsz	??_initLCD& (0+255),f,c
  2261  0018F4  D7FC               	bra	u1197
  2262  0018F6  D000               	nop2	
  2263                           
  2264                           ;lcd.c: 72:     LATDbits.LATD2 = 0;
  2265  0018F8  948C               	bcf	3980,2,c	;volatile
  2266                           
  2267                           ;lcd.c: 74:     send_nibble(0b0011);
  2268  0018FA  0E03               	movlw	3
  2269  0018FC  EC97  F00D         	call	_send_nibble
  2270                           
  2271                           ;lcd.c: 75:     _delay((unsigned long)((5)*(10000000/4000.0)));
  2272  001900  0E11               	movlw	17
  2273  001902  6E05               	movwf	??_initLCD& (0+255),c
  2274  001904  0E3A               	movlw	58
  2275  001906                     u1207:
  2276  001906  2EE8               	decfsz	wreg,f,c
  2277  001908  D7FE               	bra	u1207
  2278  00190A  2E05               	decfsz	??_initLCD& (0+255),f,c
  2279  00190C  D7FC               	bra	u1207
  2280  00190E  D000               	nop2	
  2281                           
  2282                           ;lcd.c: 76:     send_nibble(0b0011);
  2283  001910  0E03               	movlw	3
  2284  001912  EC97  F00D         	call	_send_nibble
  2285                           
  2286                           ;lcd.c: 77:     _delay((unsigned long)((150)*(10000000/4000000.0)));
  2287  001916  0E7D               	movlw	125
  2288  001918                     u1217:
  2289  001918  2EE8               	decfsz	wreg,f,c
  2290  00191A  D7FE               	bra	u1217
  2291                           
  2292                           ;lcd.c: 78:     send_byte(0b00110010);
  2293  00191C  0E32               	movlw	50
  2294  00191E  ECA2  F00D         	call	_send_byte
  2295                           
  2296                           ;lcd.c: 80:     send_byte(0b00101000);
  2297  001922  0E28               	movlw	40
  2298  001924  ECA2  F00D         	call	_send_byte
  2299                           
  2300                           ;lcd.c: 81:     send_byte(0b00001000);
  2301  001928  0E08               	movlw	8
  2302  00192A  ECA2  F00D         	call	_send_byte
  2303                           
  2304                           ;lcd.c: 82:     send_byte(0b00000001);
  2305  00192E  0E01               	movlw	1
  2306  001930  ECA2  F00D         	call	_send_byte
  2307                           
  2308                           ;lcd.c: 83:     _delay((unsigned long)((5)*(10000000/4000.0)));
  2309  001934  0E11               	movlw	17
  2310  001936  6E05               	movwf	??_initLCD& (0+255),c
  2311  001938  0E3A               	movlw	58
  2312  00193A                     u1227:
  2313  00193A  2EE8               	decfsz	wreg,f,c
  2314  00193C  D7FE               	bra	u1227
  2315  00193E  2E05               	decfsz	??_initLCD& (0+255),f,c
  2316  001940  D7FC               	bra	u1227
  2317  001942  D000               	nop2	
  2318                           
  2319                           ;lcd.c: 84:     send_byte(0b00000110);
  2320  001944  0E06               	movlw	6
  2321  001946  ECA2  F00D         	call	_send_byte
  2322                           
  2323                           ;lcd.c: 87:     { lcdInst( (unsigned char)(8 | (1 << 2) | (1 << 1) | 1) );};
  2324  00194A  0E0F               	movlw	15
  2325  00194C  ECBA  F00D         	call	_lcdInst
  2326  001950  0012               	return		;funcret
  2327  001952                     __end_of_initLCD:
  2328                           	opt callstack 0
  2329                           
  2330 ;; *************** function _lcdInst *****************
  2331 ;; Defined at:
  2332 ;;		line 64 in file "lcd.c"
  2333 ;; Parameters:    Size  Location     Type
  2334 ;;  data            1    wreg     unsigned char 
  2335 ;; Auto vars:     Size  Location     Type
  2336 ;;  data            1    3[COMRAM] unsigned char 
  2337 ;; Return value:  Size  Location     Type
  2338 ;;                  1    wreg      void 
  2339 ;; Registers used:
  2340 ;;		wreg, status,2, status,0, cstack
  2341 ;; Tracked objects:
  2342 ;;		On entry : 0/0
  2343 ;;		On exit  : 0/0
  2344 ;;		Unchanged: 0/0
  2345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2347 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2349 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2350 ;;Total ram usage:        1 bytes
  2351 ;; Hardware stack levels used:    1
  2352 ;; Hardware stack levels required when called:    3
  2353 ;; This function calls:
  2354 ;;		_send_byte
  2355 ;; This function is called by:
  2356 ;;		_main
  2357 ;;		_initLCD
  2358 ;;		_lcd_shift_cursor
  2359 ;;		_lcd_shift_display
  2360 ;; This function uses a non-reentrant model
  2361 ;;
  2362                           
  2363                           	psect	text14
  2364  001B74                     __ptext14:
  2365                           	opt callstack 0
  2366  001B74                     _lcdInst:
  2367                           	opt callstack 27
  2368                           
  2369                           ;incstack = 0
  2370                           ;lcdInst@data stored from wreg
  2371  001B74  6E04               	movwf	lcdInst@data,c
  2372                           
  2373                           ;lcd.c: 65:     LATDbits.LATD2 = 0;
  2374  001B76  948C               	bcf	3980,2,c	;volatile
  2375                           
  2376                           ;lcd.c: 66:     send_byte(data);
  2377  001B78  5004               	movf	lcdInst@data,w,c
  2378  001B7A  ECA2  F00D         	call	_send_byte
  2379  001B7E  0012               	return		;funcret
  2380  001B80                     __end_of_lcdInst:
  2381                           	opt callstack 0
  2382                           
  2383 ;; *************** function _send_byte *****************
  2384 ;; Defined at:
  2385 ;;		line 55 in file "lcd.c"
  2386 ;; Parameters:    Size  Location     Type
  2387 ;;  data            1    wreg     unsigned char 
  2388 ;; Auto vars:     Size  Location     Type
  2389 ;;  data            1    2[COMRAM] unsigned char 
  2390 ;; Return value:  Size  Location     Type
  2391 ;;                  1    wreg      void 
  2392 ;; Registers used:
  2393 ;;		wreg, status,2, status,0, cstack
  2394 ;; Tracked objects:
  2395 ;;		On entry : 0/0
  2396 ;;		On exit  : 0/0
  2397 ;;		Unchanged: 0/0
  2398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2400 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2402 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2403 ;;Total ram usage:        1 bytes
  2404 ;; Hardware stack levels used:    1
  2405 ;; Hardware stack levels required when called:    2
  2406 ;; This function calls:
  2407 ;;		_send_nibble
  2408 ;; This function is called by:
  2409 ;;		_lcdInst
  2410 ;;		_initLCD
  2411 ;;		_putch
  2412 ;; This function uses a non-reentrant model
  2413 ;;
  2414                           
  2415                           	psect	text15
  2416  001B44                     __ptext15:
  2417                           	opt callstack 0
  2418  001B44                     _send_byte:
  2419                           	opt callstack 23
  2420                           
  2421                           ;incstack = 0
  2422                           ;send_byte@data stored from wreg
  2423  001B44  6E03               	movwf	send_byte@data,c
  2424                           
  2425                           ;lcd.c: 57:     send_nibble(data >> 4);
  2426  001B46  3803               	swapf	send_byte@data,w,c
  2427  001B48  0B0F               	andlw	15
  2428  001B4A  EC97  F00D         	call	_send_nibble
  2429                           
  2430                           ;lcd.c: 60:     send_nibble(data);
  2431  001B4E  5003               	movf	send_byte@data,w,c
  2432  001B50  EC97  F00D         	call	_send_nibble
  2433  001B54  0012               	return		;funcret
  2434  001B56                     __end_of_send_byte:
  2435                           	opt callstack 0
  2436                           
  2437 ;; *************** function _send_nibble *****************
  2438 ;; Defined at:
  2439 ;;		line 44 in file "lcd.c"
  2440 ;; Parameters:    Size  Location     Type
  2441 ;;  data            1    wreg     unsigned char 
  2442 ;; Auto vars:     Size  Location     Type
  2443 ;;  data            1    1[COMRAM] unsigned char 
  2444 ;; Return value:  Size  Location     Type
  2445 ;;                  1    wreg      void 
  2446 ;; Registers used:
  2447 ;;		wreg, status,2, status,0, cstack
  2448 ;; Tracked objects:
  2449 ;;		On entry : 0/0
  2450 ;;		On exit  : 0/0
  2451 ;;		Unchanged: 0/0
  2452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2454 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2456 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2457 ;;Total ram usage:        1 bytes
  2458 ;; Hardware stack levels used:    1
  2459 ;; Hardware stack levels required when called:    1
  2460 ;; This function calls:
  2461 ;;		_pulse_e
  2462 ;; This function is called by:
  2463 ;;		_send_byte
  2464 ;;		_initLCD
  2465 ;; This function uses a non-reentrant model
  2466 ;;
  2467                           
  2468                           	psect	text16
  2469  001B2E                     __ptext16:
  2470                           	opt callstack 0
  2471  001B2E                     _send_nibble:
  2472                           	opt callstack 23
  2473                           
  2474                           ;incstack = 0
  2475                           ;send_nibble@data stored from wreg
  2476  001B2E  6E02               	movwf	send_nibble@data,c
  2477                           
  2478                           ;lcd.c: 46:     LATD = (unsigned char)(LATD & 0x0F);
  2479  001B30  508C               	movf	3980,w,c	;volatile
  2480  001B32  0B0F               	andlw	15
  2481  001B34  6E8C               	movwf	3980,c	;volatile
  2482                           
  2483                           ;lcd.c: 47:     LATD = (unsigned char)((data << 4) | LATD);
  2484  001B36  3802               	swapf	send_nibble@data,w,c
  2485  001B38  0BF0               	andlw	240
  2486  001B3A  108C               	iorwf	3980,w,c	;volatile
  2487  001B3C  6E8C               	movwf	3980,c	;volatile
  2488                           
  2489                           ;lcd.c: 48:     pulse_e();
  2490  001B3E  EC4A  F00D         	call	_pulse_e	;wreg free
  2491  001B42  0012               	return		;funcret
  2492  001B44                     __end_of_send_nibble:
  2493                           	opt callstack 0
  2494                           
  2495 ;; *************** function _pulse_e *****************
  2496 ;; Defined at:
  2497 ;;		line 28 in file "lcd.c"
  2498 ;; Parameters:    Size  Location     Type
  2499 ;;		None
  2500 ;; Auto vars:     Size  Location     Type
  2501 ;;  interruptSta    1    0[COMRAM] unsigned char 
  2502 ;; Return value:  Size  Location     Type
  2503 ;;                  1    wreg      void 
  2504 ;; Registers used:
  2505 ;;		wreg
  2506 ;; Tracked objects:
  2507 ;;		On entry : 0/0
  2508 ;;		On exit  : 0/0
  2509 ;;		Unchanged: 0/0
  2510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2512 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2514 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2515 ;;Total ram usage:        1 bytes
  2516 ;; Hardware stack levels used:    1
  2517 ;; This function calls:
  2518 ;;		Nothing
  2519 ;; This function is called by:
  2520 ;;		_send_nibble
  2521 ;; This function uses a non-reentrant model
  2522 ;;
  2523                           
  2524                           	psect	text17
  2525  001A94                     __ptext17:
  2526                           	opt callstack 0
  2527  001A94                     _pulse_e:
  2528                           	opt callstack 23
  2529                           
  2530                           ;lcd.c: 29:     unsigned char interruptState = INTCONbits.GIE;
  2531                           
  2532                           ;incstack = 0
  2533  001A94  0E00               	movlw	0
  2534  001A96  BEF2               	btfsc	4082,7,c	;volatile
  2535  001A98  0E01               	movlw	1
  2536  001A9A  6E01               	movwf	pulse_e@interruptState,c
  2537                           
  2538                           ;lcd.c: 30:     (INTCONbits.GIE = 0);
  2539  001A9C  9EF2               	bcf	4082,7,c	;volatile
  2540                           
  2541                           ;lcd.c: 31:     LATDbits.LATD3 = 1;
  2542  001A9E  868C               	bsf	3980,3,c	;volatile
  2543                           
  2544                           ;lcd.c: 34:     _delay((unsigned long)((25)*(10000000/4000000.0)));
  2545  001AA0  0E14               	movlw	20
  2546  001AA2                     u1237:
  2547  001AA2  2EE8               	decfsz	wreg,f,c
  2548  001AA4  D7FE               	bra	u1237
  2549  001AA6  D000               	nop2	
  2550                           
  2551                           ;lcd.c: 35:     LATDbits.LATD3 = 0;
  2552  001AA8  968C               	bcf	3980,3,c	;volatile
  2553                           
  2554                           ;lcd.c: 36:     _delay((unsigned long)((100)*(10000000/4000000.0)));
  2555  001AAA  0E53               	movlw	83
  2556  001AAC                     u1247:
  2557  001AAC  2EE8               	decfsz	wreg,f,c
  2558  001AAE  D7FE               	bra	u1247
  2559  001AB0  F000               	nop	
  2560                           
  2561                           ;lcd.c: 37:     INTCONbits.GIE = interruptState;
  2562  001AB2  B001               	btfsc	pulse_e@interruptState,0,c
  2563  001AB4  D002               	bra	u595
  2564  001AB6  9EF2               	bcf	4082,7,c	;volatile
  2565  001AB8  D001               	bra	u596
  2566  001ABA                     u595:
  2567  001ABA  8EF2               	bsf	4082,7,c	;volatile
  2568  001ABC                     u596:
  2569  001ABC  0012               	return		;funcret
  2570  001ABE                     __end_of_pulse_e:
  2571                           	opt callstack 0
  2572                           
  2573 ;; *************** function _I2C_Master_Write *****************
  2574 ;; Defined at:
  2575 ;;		line 70 in file "I2C.c"
  2576 ;; Parameters:    Size  Location     Type
  2577 ;;  byteToWrite     2    1[COMRAM] unsigned int 
  2578 ;; Auto vars:     Size  Location     Type
  2579 ;;		None
  2580 ;; Return value:  Size  Location     Type
  2581 ;;                  1    wreg      void 
  2582 ;; Registers used:
  2583 ;;		wreg, status,2, status,0, cstack
  2584 ;; Tracked objects:
  2585 ;;		On entry : 0/0
  2586 ;;		On exit  : 0/0
  2587 ;;		Unchanged: 0/0
  2588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2589 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2592 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2593 ;;Total ram usage:        2 bytes
  2594 ;; Hardware stack levels used:    1
  2595 ;; Hardware stack levels required when called:    1
  2596 ;; This function calls:
  2597 ;;		_I2C_Master_Wait
  2598 ;; This function is called by:
  2599 ;;		_main
  2600 ;; This function uses a non-reentrant model
  2601 ;;
  2602                           
  2603                           	psect	text18
  2604  001B80                     __ptext18:
  2605                           	opt callstack 0
  2606  001B80                     _I2C_Master_Write:
  2607                           	opt callstack 29
  2608                           
  2609                           ;I2C.c: 71:     I2C_Master_Wait();
  2610                           
  2611                           ;incstack = 0
  2612  001B80  ECAB  F00D         	call	_I2C_Master_Wait	;wreg free
  2613                           
  2614                           ;I2C.c: 74:     SSPBUF = byteToWrite;
  2615  001B84  C002  FFC9         	movff	I2C_Master_Write@byteToWrite,4041	;volatile
  2616  001B88  0012               	return		;funcret
  2617  001B8A                     __end_of_I2C_Master_Write:
  2618                           	opt callstack 0
  2619                           
  2620 ;; *************** function _I2C_Master_Stop *****************
  2621 ;; Defined at:
  2622 ;;		line 65 in file "I2C.c"
  2623 ;; Parameters:    Size  Location     Type
  2624 ;;		None
  2625 ;; Auto vars:     Size  Location     Type
  2626 ;;		None
  2627 ;; Return value:  Size  Location     Type
  2628 ;;                  1    wreg      void 
  2629 ;; Registers used:
  2630 ;;		wreg, status,2, status,0, cstack
  2631 ;; Tracked objects:
  2632 ;;		On entry : 0/0
  2633 ;;		On exit  : 0/0
  2634 ;;		Unchanged: 0/0
  2635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2640 ;;Total ram usage:        0 bytes
  2641 ;; Hardware stack levels used:    1
  2642 ;; Hardware stack levels required when called:    1
  2643 ;; This function calls:
  2644 ;;		_I2C_Master_Wait
  2645 ;; This function is called by:
  2646 ;;		_main
  2647 ;; This function uses a non-reentrant model
  2648 ;;
  2649                           
  2650                           	psect	text19
  2651  001B8A                     __ptext19:
  2652                           	opt callstack 0
  2653  001B8A                     _I2C_Master_Stop:
  2654                           	opt callstack 29
  2655                           
  2656                           ;I2C.c: 66:     I2C_Master_Wait();
  2657                           
  2658                           ;incstack = 0
  2659  001B8A  ECAB  F00D         	call	_I2C_Master_Wait	;wreg free
  2660                           
  2661                           ;I2C.c: 67:     SSPCON2bits.PEN = 1;
  2662  001B8E  84C5               	bsf	4037,2,c	;volatile
  2663  001B90  0012               	return		;funcret
  2664  001B92                     __end_of_I2C_Master_Stop:
  2665                           	opt callstack 0
  2666                           
  2667 ;; *************** function _I2C_Master_Start *****************
  2668 ;; Defined at:
  2669 ;;		line 55 in file "I2C.c"
  2670 ;; Parameters:    Size  Location     Type
  2671 ;;		None
  2672 ;; Auto vars:     Size  Location     Type
  2673 ;;		None
  2674 ;; Return value:  Size  Location     Type
  2675 ;;                  1    wreg      void 
  2676 ;; Registers used:
  2677 ;;		wreg, status,2, status,0, cstack
  2678 ;; Tracked objects:
  2679 ;;		On entry : 0/0
  2680 ;;		On exit  : 0/0
  2681 ;;		Unchanged: 0/0
  2682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2687 ;;Total ram usage:        0 bytes
  2688 ;; Hardware stack levels used:    1
  2689 ;; Hardware stack levels required when called:    1
  2690 ;; This function calls:
  2691 ;;		_I2C_Master_Wait
  2692 ;; This function is called by:
  2693 ;;		_main
  2694 ;; This function uses a non-reentrant model
  2695 ;;
  2696                           
  2697                           	psect	text20
  2698  001B92                     __ptext20:
  2699                           	opt callstack 0
  2700  001B92                     _I2C_Master_Start:
  2701                           	opt callstack 29
  2702                           
  2703                           ;I2C.c: 56:     I2C_Master_Wait();
  2704                           
  2705                           ;incstack = 0
  2706  001B92  ECAB  F00D         	call	_I2C_Master_Wait	;wreg free
  2707                           
  2708                           ;I2C.c: 57:     SSPCON2bits.SEN = 1;
  2709  001B96  80C5               	bsf	4037,0,c	;volatile
  2710  001B98  0012               	return		;funcret
  2711  001B9A                     __end_of_I2C_Master_Start:
  2712                           	opt callstack 0
  2713                           
  2714 ;; *************** function _I2C_Master_RepeatedStart *****************
  2715 ;; Defined at:
  2716 ;;		line 60 in file "I2C.c"
  2717 ;; Parameters:    Size  Location     Type
  2718 ;;		None
  2719 ;; Auto vars:     Size  Location     Type
  2720 ;;		None
  2721 ;; Return value:  Size  Location     Type
  2722 ;;                  1    wreg      void 
  2723 ;; Registers used:
  2724 ;;		wreg, status,2, status,0, cstack
  2725 ;; Tracked objects:
  2726 ;;		On entry : 0/0
  2727 ;;		On exit  : 0/0
  2728 ;;		Unchanged: 0/0
  2729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2734 ;;Total ram usage:        0 bytes
  2735 ;; Hardware stack levels used:    1
  2736 ;; Hardware stack levels required when called:    1
  2737 ;; This function calls:
  2738 ;;		_I2C_Master_Wait
  2739 ;; This function is called by:
  2740 ;;		_main
  2741 ;; This function uses a non-reentrant model
  2742 ;;
  2743                           
  2744                           	psect	text21
  2745  001B9A                     __ptext21:
  2746                           	opt callstack 0
  2747  001B9A                     _I2C_Master_RepeatedStart:
  2748                           	opt callstack 29
  2749                           
  2750                           ;I2C.c: 61:     I2C_Master_Wait();
  2751                           
  2752                           ;incstack = 0
  2753  001B9A  ECAB  F00D         	call	_I2C_Master_Wait	;wreg free
  2754                           
  2755                           ;I2C.c: 62:     SSPCON2bits.RSEN = 1;
  2756  001B9E  82C5               	bsf	4037,1,c	;volatile
  2757  001BA0  0012               	return		;funcret
  2758  001BA2                     __end_of_I2C_Master_RepeatedStart:
  2759                           	opt callstack 0
  2760                           
  2761 ;; *************** function _I2C_Master_Read *****************
  2762 ;; Defined at:
  2763 ;;		line 77 in file "I2C.c"
  2764 ;; Parameters:    Size  Location     Type
  2765 ;;  ackBit          1    wreg     unsigned char 
  2766 ;; Auto vars:     Size  Location     Type
  2767 ;;  ackBit          1    1[COMRAM] unsigned char 
  2768 ;;  receivedByte    1    2[COMRAM] unsigned char 
  2769 ;; Return value:  Size  Location     Type
  2770 ;;                  1    wreg      unsigned char 
  2771 ;; Registers used:
  2772 ;;		wreg, status,2, status,0, cstack
  2773 ;; Tracked objects:
  2774 ;;		On entry : 0/0
  2775 ;;		On exit  : 0/0
  2776 ;;		Unchanged: 0/0
  2777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2779 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2781 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2782 ;;Total ram usage:        2 bytes
  2783 ;; Hardware stack levels used:    1
  2784 ;; Hardware stack levels required when called:    1
  2785 ;; This function calls:
  2786 ;;		_I2C_Master_Wait
  2787 ;; This function is called by:
  2788 ;;		_main
  2789 ;; This function uses a non-reentrant model
  2790 ;;
  2791                           
  2792                           	psect	text22
  2793  001B0A                     __ptext22:
  2794                           	opt callstack 0
  2795  001B0A                     _I2C_Master_Read:
  2796                           	opt callstack 29
  2797                           
  2798                           ;incstack = 0
  2799                           ;I2C_Master_Read@ackBit stored from wreg
  2800  001B0A  6E02               	movwf	I2C_Master_Read@ackBit,c
  2801                           
  2802                           ;I2C.c: 78:     I2C_Master_Wait();
  2803  001B0C  ECAB  F00D         	call	_I2C_Master_Wait	;wreg free
  2804                           
  2805                           ;I2C.c: 79:     SSPCON2bits.RCEN = 1;
  2806  001B10  86C5               	bsf	4037,3,c	;volatile
  2807                           
  2808                           ;I2C.c: 81:     I2C_Master_Wait();
  2809  001B12  ECAB  F00D         	call	_I2C_Master_Wait	;wreg free
  2810                           
  2811                           ;I2C.c: 84:     unsigned char receivedByte = SSPBUF;
  2812  001B16  CFC9 F003          	movff	4041,I2C_Master_Read@receivedByte	;volatile
  2813                           
  2814                           ;I2C.c: 86:     I2C_Master_Wait();
  2815  001B1A  ECAB  F00D         	call	_I2C_Master_Wait	;wreg free
  2816                           
  2817                           ;I2C.c: 87:     SSPCON2bits.ACKDT = ackBit;
  2818  001B1E  B002               	btfsc	I2C_Master_Read@ackBit,0,c
  2819  001B20  D002               	bra	u1105
  2820  001B22  9AC5               	bcf	4037,5,c	;volatile
  2821  001B24  D001               	bra	u1106
  2822  001B26                     u1105:
  2823  001B26  8AC5               	bsf	4037,5,c	;volatile
  2824  001B28                     u1106:
  2825                           
  2826                           ;I2C.c: 88:     SSPCON2bits.ACKEN = 1;
  2827  001B28  88C5               	bsf	4037,4,c	;volatile
  2828                           
  2829                           ;I2C.c: 90:     return receivedByte;
  2830  001B2A  5003               	movf	I2C_Master_Read@receivedByte,w,c
  2831  001B2C  0012               	return		;funcret
  2832  001B2E                     __end_of_I2C_Master_Read:
  2833                           	opt callstack 0
  2834                           
  2835 ;; *************** function _I2C_Master_Wait *****************
  2836 ;; Defined at:
  2837 ;;		line 21 in file "I2C.c"
  2838 ;; Parameters:    Size  Location     Type
  2839 ;;		None
  2840 ;; Auto vars:     Size  Location     Type
  2841 ;;		None
  2842 ;; Return value:  Size  Location     Type
  2843 ;;                  1    wreg      void 
  2844 ;; Registers used:
  2845 ;;		wreg, status,2, status,0
  2846 ;; Tracked objects:
  2847 ;;		On entry : 0/0
  2848 ;;		On exit  : 0/0
  2849 ;;		Unchanged: 0/0
  2850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2853 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2854 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2855 ;;Total ram usage:        1 bytes
  2856 ;; Hardware stack levels used:    1
  2857 ;; This function calls:
  2858 ;;		Nothing
  2859 ;; This function is called by:
  2860 ;;		_I2C_Master_Start
  2861 ;;		_I2C_Master_RepeatedStart
  2862 ;;		_I2C_Master_Stop
  2863 ;;		_I2C_Master_Write
  2864 ;;		_I2C_Master_Read
  2865 ;; This function uses a non-reentrant model
  2866 ;;
  2867                           
  2868                           	psect	text23
  2869  001B56                     __ptext23:
  2870                           	opt callstack 0
  2871  001B56                     _I2C_Master_Wait:
  2872                           	opt callstack 29
  2873                           
  2874                           ;I2C.c: 26:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F)){
  2875                           
  2876                           ;I2C.c: 28:     }
  2877                           
  2878                           ;incstack = 0
  2879  001B56  B4C7               	btfsc	4039,2,c	;volatile
  2880  001B58  D7FE               	goto	_I2C_Master_Wait
  2881  001B5A  CFC5 F001          	movff	4037,??_I2C_Master_Wait	;volatile
  2882  001B5E  0E1F               	movlw	31
  2883  001B60  1601               	andwf	??_I2C_Master_Wait,f,c
  2884  001B62  B4D8               	btfsc	status,2,c
  2885  001B64  0012               	return	
  2886  001B66  D7F7               	goto	_I2C_Master_Wait
  2887  001B68                     __end_of_I2C_Master_Wait:
  2888                           	opt callstack 0
  2889                           
  2890 ;; *************** function _I2C_Master_Init *****************
  2891 ;; Defined at:
  2892 ;;		line 32 in file "I2C.c"
  2893 ;; Parameters:    Size  Location     Type
  2894 ;;  clockFreq       4   13[COMRAM] const unsigned long 
  2895 ;; Auto vars:     Size  Location     Type
  2896 ;;		None
  2897 ;; Return value:  Size  Location     Type
  2898 ;;                  1    wreg      void 
  2899 ;; Registers used:
  2900 ;;		wreg, status,2, status,0, cstack
  2901 ;; Tracked objects:
  2902 ;;		On entry : 0/0
  2903 ;;		On exit  : 0/0
  2904 ;;		Unchanged: 0/0
  2905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2906 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2908 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2909 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2910 ;;Total ram usage:        8 bytes
  2911 ;; Hardware stack levels used:    1
  2912 ;; Hardware stack levels required when called:    1
  2913 ;; This function calls:
  2914 ;;		___lldiv
  2915 ;; This function is called by:
  2916 ;;		_main
  2917 ;; This function uses a non-reentrant model
  2918 ;;
  2919                           
  2920                           	psect	text24
  2921  001952                     __ptext24:
  2922                           	opt callstack 0
  2923  001952                     _I2C_Master_Init:
  2924                           	opt callstack 29
  2925                           
  2926                           ;I2C.c: 34:     SSPCON1bits.SSPEN = 0;
  2927                           
  2928                           ;incstack = 0
  2929  001952  9AC6               	bcf	4038,5,c	;volatile
  2930                           
  2931                           ;I2C.c: 37:     TRISCbits.TRISC3 = 1;
  2932  001954  8694               	bsf	3988,3,c	;volatile
  2933                           
  2934                           ;I2C.c: 38:     TRISCbits.TRISC4 = 1;
  2935  001956  8894               	bsf	3988,4,c	;volatile
  2936                           
  2937                           ;I2C.c: 43:     SSPADD = (10000000 / (4 * clockFreq)) - 1;
  2938  001958  0E80               	movlw	128
  2939  00195A  6E01               	movwf	___lldiv@dividend,c
  2940  00195C  0E96               	movlw	150
  2941  00195E  6E02               	movwf	___lldiv@dividend+1,c
  2942  001960  0E98               	movlw	152
  2943  001962  6E03               	movwf	___lldiv@dividend+2,c
  2944  001964  0E00               	movlw	0
  2945  001966  6E04               	movwf	___lldiv@dividend+3,c
  2946  001968  C00E  F012         	movff	I2C_Master_Init@clockFreq,??_I2C_Master_Init
  2947  00196C  C00F  F013         	movff	I2C_Master_Init@clockFreq+1,??_I2C_Master_Init+1
  2948  001970  C010  F014         	movff	I2C_Master_Init@clockFreq+2,??_I2C_Master_Init+2
  2949  001974  C011  F015         	movff	I2C_Master_Init@clockFreq+3,??_I2C_Master_Init+3
  2950  001978  0E02               	movlw	2
  2951  00197A                     u1095:
  2952  00197A  90D8               	bcf	status,0,c
  2953  00197C  3612               	rlcf	??_I2C_Master_Init,f,c
  2954  00197E  3613               	rlcf	??_I2C_Master_Init+1,f,c
  2955  001980  3614               	rlcf	??_I2C_Master_Init+2,f,c
  2956  001982  3615               	rlcf	??_I2C_Master_Init+3,f,c
  2957  001984  2EE8               	decfsz	wreg,f,c
  2958  001986  D7F9               	goto	u1095
  2959  001988  C012  F005         	movff	??_I2C_Master_Init,___lldiv@divisor
  2960  00198C  C013  F006         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
  2961  001990  C014  F007         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
  2962  001994  C015  F008         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
  2963  001998  ECFD  F00B         	call	___lldiv	;wreg free
  2964  00199C  0401               	decf	?___lldiv,w,c
  2965  00199E  6EC8               	movwf	4040,c	;volatile
  2966                           
  2967                           ;I2C.c: 46:     SSPSTAT = 0b10000000;
  2968  0019A0  0E80               	movlw	128
  2969  0019A2  6EC7               	movwf	4039,c	;volatile
  2970                           
  2971                           ;I2C.c: 49:     SSPCON1 = 0b00101000;
  2972  0019A4  0E28               	movlw	40
  2973  0019A6  6EC6               	movwf	4038,c	;volatile
  2974                           
  2975                           ;I2C.c: 52:     SSPCON2 = 0b00000000;
  2976  0019A8  0E00               	movlw	0
  2977  0019AA  6EC5               	movwf	4037,c	;volatile
  2978  0019AC  0012               	return		;funcret
  2979  0019AE                     __end_of_I2C_Master_Init:
  2980                           	opt callstack 0
  2981                           
  2982 ;; *************** function ___lldiv *****************
  2983 ;; Defined at:
  2984 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__lldiv.c"
  2985 ;; Parameters:    Size  Location     Type
  2986 ;;  dividend        4    0[COMRAM] unsigned long 
  2987 ;;  divisor         4    4[COMRAM] unsigned long 
  2988 ;; Auto vars:     Size  Location     Type
  2989 ;;  quotient        4    8[COMRAM] unsigned long 
  2990 ;;  counter         1   12[COMRAM] unsigned char 
  2991 ;; Return value:  Size  Location     Type
  2992 ;;                  4    0[COMRAM] unsigned long 
  2993 ;; Registers used:
  2994 ;;		wreg, status,2, status,0
  2995 ;; Tracked objects:
  2996 ;;		On entry : 0/0
  2997 ;;		On exit  : 0/0
  2998 ;;		Unchanged: 0/0
  2999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3000 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3001 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3003 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3004 ;;Total ram usage:       13 bytes
  3005 ;; Hardware stack levels used:    1
  3006 ;; This function calls:
  3007 ;;		Nothing
  3008 ;; This function is called by:
  3009 ;;		_I2C_Master_Init
  3010 ;; This function uses a non-reentrant model
  3011 ;;
  3012                           
  3013                           	psect	text25
  3014  0017FA                     __ptext25:
  3015                           	opt callstack 0
  3016  0017FA                     ___lldiv:
  3017                           	opt callstack 29
  3018                           
  3019                           ;incstack = 0
  3020  0017FA  0E00               	movlw	0
  3021  0017FC  6E09               	movwf	___lldiv@quotient,c
  3022  0017FE  0E00               	movlw	0
  3023  001800  6E0A               	movwf	___lldiv@quotient+1,c
  3024  001802  0E00               	movlw	0
  3025  001804  6E0B               	movwf	___lldiv@quotient+2,c
  3026  001806  0E00               	movlw	0
  3027  001808  6E0C               	movwf	___lldiv@quotient+3,c
  3028  00180A  5005               	movf	___lldiv@divisor,w,c
  3029  00180C  1006               	iorwf	___lldiv@divisor+1,w,c
  3030  00180E  1007               	iorwf	___lldiv@divisor+2,w,c
  3031  001810  1008               	iorwf	___lldiv@divisor+3,w,c
  3032  001812  B4D8               	btfsc	status,2,c
  3033  001814  D02A               	goto	l235
  3034  001816  0E01               	movlw	1
  3035  001818  6E0D               	movwf	___lldiv@counter,c
  3036  00181A  D006               	goto	l1649
  3037  00181C                     l1647:
  3038  00181C  90D8               	bcf	status,0,c
  3039  00181E  3605               	rlcf	___lldiv@divisor,f,c
  3040  001820  3606               	rlcf	___lldiv@divisor+1,f,c
  3041  001822  3607               	rlcf	___lldiv@divisor+2,f,c
  3042  001824  3608               	rlcf	___lldiv@divisor+3,f,c
  3043  001826  2A0D               	incf	___lldiv@counter,f,c
  3044  001828                     l1649:
  3045  001828  AE08               	btfss	___lldiv@divisor+3,7,c
  3046  00182A  D7F8               	goto	l1647
  3047  00182C                     u1070:
  3048  00182C  90D8               	bcf	status,0,c
  3049  00182E  3609               	rlcf	___lldiv@quotient,f,c
  3050  001830  360A               	rlcf	___lldiv@quotient+1,f,c
  3051  001832  360B               	rlcf	___lldiv@quotient+2,f,c
  3052  001834  360C               	rlcf	___lldiv@quotient+3,f,c
  3053  001836  5005               	movf	___lldiv@divisor,w,c
  3054  001838  5C01               	subwf	___lldiv@dividend,w,c
  3055  00183A  5006               	movf	___lldiv@divisor+1,w,c
  3056  00183C  5802               	subwfb	___lldiv@dividend+1,w,c
  3057  00183E  5007               	movf	___lldiv@divisor+2,w,c
  3058  001840  5803               	subwfb	___lldiv@dividend+2,w,c
  3059  001842  5008               	movf	___lldiv@divisor+3,w,c
  3060  001844  5804               	subwfb	___lldiv@dividend+3,w,c
  3061  001846  A0D8               	btfss	status,0,c
  3062  001848  D009               	goto	l1659
  3063  00184A  5005               	movf	___lldiv@divisor,w,c
  3064  00184C  5E01               	subwf	___lldiv@dividend,f,c
  3065  00184E  5006               	movf	___lldiv@divisor+1,w,c
  3066  001850  5A02               	subwfb	___lldiv@dividend+1,f,c
  3067  001852  5007               	movf	___lldiv@divisor+2,w,c
  3068  001854  5A03               	subwfb	___lldiv@dividend+2,f,c
  3069  001856  5008               	movf	___lldiv@divisor+3,w,c
  3070  001858  5A04               	subwfb	___lldiv@dividend+3,f,c
  3071  00185A  8009               	bsf	___lldiv@quotient,0,c
  3072  00185C                     l1659:
  3073  00185C  90D8               	bcf	status,0,c
  3074  00185E  3208               	rrcf	___lldiv@divisor+3,f,c
  3075  001860  3207               	rrcf	___lldiv@divisor+2,f,c
  3076  001862  3206               	rrcf	___lldiv@divisor+1,f,c
  3077  001864  3205               	rrcf	___lldiv@divisor,f,c
  3078  001866  2E0D               	decfsz	___lldiv@counter,f,c
  3079  001868  D7E1               	goto	u1070
  3080  00186A                     l235:
  3081  00186A  C009  F001         	movff	___lldiv@quotient,?___lldiv
  3082  00186E  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  3083  001872  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  3084  001876  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  3085  00187A  0012               	return		;funcret
  3086  00187C                     __end_of___lldiv:
  3087                           	opt callstack 0
  3088                           
  3089                           	psect	rparam
  3090  0000                     tosu	equ	0xFFF
  3091                           tosh	equ	0xFFE
  3092                           tosl	equ	0xFFD
  3093                           stkptr	equ	0xFFC
  3094                           pclatu	equ	0xFFB
  3095                           pclath	equ	0xFFA
  3096                           pcl	equ	0xFF9
  3097                           tblptru	equ	0xFF8
  3098                           tblptrh	equ	0xFF7
  3099                           tblptrl	equ	0xFF6
  3100                           tablat	equ	0xFF5
  3101                           prodh	equ	0xFF4
  3102                           prodl	equ	0xFF3
  3103                           indf0	equ	0xFEF
  3104                           postinc0	equ	0xFEE
  3105                           postdec0	equ	0xFED
  3106                           preinc0	equ	0xFEC
  3107                           plusw0	equ	0xFEB
  3108                           fsr0h	equ	0xFEA
  3109                           fsr0l	equ	0xFE9
  3110                           wreg	equ	0xFE8
  3111                           indf1	equ	0xFE7
  3112                           postinc1	equ	0xFE6
  3113                           postdec1	equ	0xFE5
  3114                           preinc1	equ	0xFE4
  3115                           plusw1	equ	0xFE3
  3116                           fsr1h	equ	0xFE2
  3117                           fsr1l	equ	0xFE1
  3118                           bsr	equ	0xFE0
  3119                           indf2	equ	0xFDF
  3120                           postinc2	equ	0xFDE
  3121                           postdec2	equ	0xFDD
  3122                           preinc2	equ	0xFDC
  3123                           plusw2	equ	0xFDB
  3124                           fsr2h	equ	0xFDA
  3125                           fsr2l	equ	0xFD9
  3126                           status	equ	0xFD8


Data Sizes:
    Strings     24
    Constant    23
    Data        0
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    112     120
    BANK0           128      0      32
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_2(CODE[12]), STR_1(CODE[12]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S867_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_2(CODE[12]), STR_1(CODE[12]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 12
		 -> STR_2(CODE[12]), STR_1(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_send_byte
    _abs->___aomod
    _initLCD->_lcdInst
    _lcdInst->_send_byte
    _send_byte->_send_nibble
    _send_nibble->_pulse_e
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_RepeatedStart->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0    7643
                                             99 COMRAM    13    13      0
                    _I2C_Master_Init
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _initLCD
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    6446
                                             91 COMRAM     8     4      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6240
                                             83 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    5886
                                             67 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4448
                                             31 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2799
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1280
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     879
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0     111
                                              3 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     245
                                              4 COMRAM     1     1      0
                            _lcdInst
                          _send_byte
                        _send_nibble
 ---------------------------------------------------------------------------------
 (1) _lcdInst                                              1     1      0     111
                                              3 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (6) _send_byte                                            1     1      0      89
                                              2 COMRAM     1     1      0
                        _send_nibble
 ---------------------------------------------------------------------------------
 (7) _send_nibble                                          1     1      0      45
                                              1 COMRAM     1     1      0
                            _pulse_e
 ---------------------------------------------------------------------------------
 (8) _pulse_e                                              1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     174
                                              1 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      2     2      0      45
                                              1 COMRAM     2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                             13 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_RepeatedStart
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _initLCD
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _send_byte
       _send_nibble
         _pulse_e
     _send_nibble
       _pulse_e
   _lcdInst
     _send_byte
       _send_nibble
         _pulse_e
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _fputc
           _putch
             _send_byte
               _send_nibble
                 _pulse_e

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      20       5       25.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     70      78       1       94.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      98      34        0.0%
DATA                 0      0      98       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Apr 08 15:33:13 2019

                      __CFG_CPD$ON 000000                        __CFG_BORV$3 000000  
                     __CFG_CP0$OFF 000000                       __CFG_CP1$OFF 000000  
                     __CFG_CP2$OFF 000000                       __CFG_CP3$OFF 000000  
                      __CFG_OSC$HS 000000                                l160 1792  
                              l235 186A                                l171 10A4  
                              l173 10AC                                l883 1A60  
                     __CFG_CPB$OFF 000000                                u610 188C  
                              u700 1A46                                u630 18D4  
                              u810 15BE                                u731 144E  
                              u900 10C0                                u750 1486  
                              u910 11DC                                u840 105A  
                              u930 11FE                                u850 105C  
                              u595 1ABA                                u931 11FC  
                              u596 1ABC                                u940 120C  
                              u950 1210                                u880 109A  
                              u970 121C                                _abs 1A38  
                              _pad 1764                                wreg 000FE8  
                     __CFG_LVP$OFF 000000                       __CFG_WDT$OFF 000000  
                             ?_abs 0013                               l1403 1A20  
                             l1501 15A6                               l1503 15BA  
                             l1407 1A74                               l1423 178A  
                             l1513 1618                               l1409 1A78  
                             l1433 17E0                               l1425 179C  
                             l1601 1362                               l1419 177C  
                             l1611 13A8                               l1461 146E  
                             l1517 163E                               l1509 1602  
                             l1429 17B4                               l1541 10C6  
                             l1463 1482                               l1455 1448  
                             l1527 1088                               l1607 139E  
                             l1481 151A                               l1473 14DE  
                             l1449 1420                               l1545 10D6  
                             l1617 13C0                               l1555 11CE  
                             l1477 14F4                               l1493 1568  
                             l1389 1894                               l1637 19C0  
                             l1741 16A0                               l1647 181C  
                             l1399 1A0A                               l1575 1232  
                             l1639 19E4                               l1649 1828  
                             l1497 158C                               l1659 185C  
                             l1579 124A                               l1763 16F2  
                             ?_pad 0015                               STR_1 1018  
                             STR_2 1024                               u1010 12E4  
                             u1105 1B26                               u1106 1B28  
                             u1070 182C                               u1207 1906  
                             u1217 1918                               u1227 193A  
                             u1237 1AA2                               _LATB 000F8A  
                             u1095 197A                               u1247 1AAC  
                             _LATD 000F8C                               u1177 1712  
                             u1187 1754                               u1197 18EE  
                             abs@a 0013                               _dbuf 0080  
 __end_of_I2C_Master_RepeatedStart 1BA2                               _main 1660  
                             _dtoa 1032                               _keys 1001  
                             _prec 0075                               _nout 0071  
                             pad@i 001C                               pad@p 0019  
                             fsr1h 000FE2                               fsr2h 000FDA  
                             indf2 000FDF                               fsr1l 000FE1  
                             pad@w 001E                               fsr2l 000FD9  
                             start 0000                      __CFG_IESO$OFF 000000  
                    __CFG_MCLRE$ON 000000                       ___param_bank 000000  
                            ??_abs 0015                              ??_pad 001B  
            I2C_Master_Read@ackBit 0002                   ?_I2C_Master_Init 000E  
                 ?_I2C_Master_Read 0001                   ?_I2C_Master_Wait 0001  
                 ?_I2C_Master_Stop 0001                    __end_of___aodiv 153C  
                            ?_main 0001                              ?_dtoa 0020  
                  __end_of___aomod 1660                    __end_of___lldiv 187C  
                     vfpfcnvrt@fmt 0046                              _TRISB 000F93  
                            _TRISD 000F95                      __CFG_PWRT$OFF 000000  
                    __CFG_WRT0$OFF 000000                      __CFG_WRT1$OFF 000000  
                    __CFG_WRT2$OFF 000000                      __CFG_WRT3$OFF 000000  
                  __end_of_lcdInst 1B80                     __CFG_EBTR0$OFF 000000  
                   __CFG_FCMEN$OFF 000000                     __CFG_EBTR1$OFF 000000  
                   __CFG_EBTR2$OFF 000000                     __CFG_EBTR3$OFF 000000  
                    __CFG_WRTB$OFF 000000                      __CFG_WRTC$OFF 000000  
                    __CFG_WRTD$OFF 000000                    __end_of_initLCD 1952  
                   __CFG_EBTRB$OFF 000000                              _flags 0077  
                            _fputc 187C                              _fputs 1A00  
                            pad@fp 0015                              _width 0073  
                            _putch 1B68                              dtoa@d 0022  
                            dtoa@i 0042                              dtoa@n 003A  
                            dtoa@p 0034                              dtoa@s 0038  
                            dtoa@w 0036                              tablat 000FF5  
                  send_nibble@data 0002                    __end_of_pulse_e 1ABE  
                            status 000FD8        I2C_Master_Read@receivedByte 0003  
                   __CFG_PBADEN$ON 000000                    __initialization 1ABE  
                     __end_of_main 1764                       __end_of_dtoa 1274  
                     __end_of_keys 1012                             ??_main 0064  
                           ??_dtoa 002A                      __activetblptr 000001  
                ?_I2C_Master_Start 0001                  ?_I2C_Master_Write 0002  
               ??_I2C_Master_Start 0002                             _ADCON1 000FC1  
               ??_I2C_Master_Write 0004                       ?_send_nibble 0001  
                           ?_fputc 0005                             ?_fputs 000E  
                           ?_putch 0001                             _SSPADD 000FC8  
                           _SSPBUF 000FC9                     __CFG_XINST$OFF 000000  
         _I2C_Master_RepeatedStart 1B9A                       vfprintf@cfmt 005A  
                        ??___aodiv 0011                          ??___aomod 0011  
                   __CFG_STVREN$ON 000000                          ??___lldiv 0009  
                           clear_0 1AC4                             clear_1 1AD0  
                        ??_lcdInst 0004                             _printf 1AE4  
                           pad@buf 0017                             dtoa@fp 0020  
                           _strlen 1A6A                          ??_initLCD 0005  
                           fputc@c 0005                             fputs@c 0012  
                           fputs@i 0013                             fputs@s 000E  
                     __mediumconst 0000                             tblptrh 000FF7  
                           tblptrl 000FF6                             tblptru 000FF8  
                 __end_of_vfprintf 1A00                          ??_pulse_e 0001  
            pulse_e@interruptState 0001                         __accesstop 0080  
          __end_of__initialization 1AD6                      ___rparam_used 000001  
                   __pcstackCOMRAM 0001                      __end_of_fputc 18E8  
                    __end_of_fputs 1A38                      __end_of_putch 1B74  
                          ??_fputc 0009                            ??_fputs 0012  
                          ??_putch 0004                         __pbssBANK0 0080  
               __size_of_send_byte 0012                            ?_printf 005C  
                          ?_strlen 0001                 __size_of_vfpfcnvrt 0180  
                          _SSPCON1 000FC6                            _SSPCON2 000FC5  
                          _SSPSTAT 000FC7               __size_of_send_nibble 0016  
                          __Hparam 0000                            __Lparam 0000  
                          ___aodiv 13F4                            ___aomod 153C  
                          ___lldiv 17FA                          ?_vfprintf 0054  
                     __psmallconst 1000                            __pcinit 1ABE  
                          _main$90 006A                            __ramtop 1000  
                          _lcdInst 1B74                            __ptext0 1660  
                          __ptext1 1AE4                            __ptext2 19AE  
                          __ptext3 1274                            __ptext4 1032  
                          __ptext5 1764                            __ptext6 1A6A  
                          __ptext7 1A00                            __ptext8 187C  
                          __ptext9 1B68                    __size_of_printf 0026  
                  __size_of_strlen 002A                            _initLCD 18E8  
                     __size_of_abs 0032                       __size_of_pad 0096  
         __size_of_I2C_Master_Init 005C           __size_of_I2C_Master_Read 0024  
         __size_of_I2C_Master_Wait 0012           __size_of_I2C_Master_Stop 0008  
                          _pulse_e 1A94               end_of_initialization 1AD6  
       ??_I2C_Master_RepeatedStart 0002              __end_of_LCD_SIZE_HORZ 1017  
                __end_of_send_byte 1B56              __end_of_LCD_SIZE_VERT 1016  
                          fputc@fp 0007                            fputs@fp 0010  
        __size_of_I2C_Master_Start 0008          __size_of_I2C_Master_Write 000A  
                  ___lldiv@divisor 0005                    ___lldiv@counter 000D  
                __end_of_vfpfcnvrt 13F4                            postdec2 000FDD  
                          postinc0 000FEE                            postinc1 000FE6  
                          postinc2 000FDE                         ??_vfprintf 005A  
                          strlen@a 0003                            strlen@s 0001  
                        _TRISCbits 000F94                         main@data_g 0068  
                    send_byte@data 0003                        vfpfcnvrt@ap 0048  
                      vfpfcnvrt@fp 0044                        vfpfcnvrt@ll 004C  
                   __end_of_printf 1B0A                     __end_of_strlen 1A94  
              start_initialization 1ABE                        __end_of_abs 1A6A  
                      __end_of_pad 17FA                  ??_I2C_Master_Init 0012  
                ??_I2C_Master_Read 0002                  ??_I2C_Master_Wait 0001  
                ??_I2C_Master_Stop 0002                        vfprintf@fmt 0056  
         I2C_Master_Init@clockFreq 000E                   __CFG_LPT1OSC$OFF 000000  
                         ??_printf 0060                           ??_strlen 0003  
                      __pbssCOMRAM 0071                   ___aodiv@dividend 0001  
                 _I2C_Master_Start 1B92                   _I2C_Master_Write 1B80  
                __CFG_CCP2MX$PORTC 000000                           ?___aodiv 0001  
                         ?___aomod 0001                   ___aodiv@quotient 0013  
                         ?___lldiv 0001                           ?_lcdInst 0001  
                __size_of_vfprintf 0052                           ?_initLCD 0001  
                      __smallconst 1000                      ??_send_nibble 0002  
                         ?_pulse_e 0001                     __size_of_fputc 006C  
                   __size_of_fputs 0038                     __size_of_putch 000C  
                         _LATDbits 000F8C                          _send_byte 1B44  
                   _LCD_LINE1_ADDR 1014                     _LCD_LINE2_ADDR 1017  
                   _LCD_LINE3_ADDR 1013                     _LCD_LINE4_ADDR 1012  
                 __CFG_WDTPS$32768 000000                          _vfpfcnvrt 1274  
           __end_of_LCD_LINE1_ADDR 1015             __end_of_LCD_LINE2_ADDR 1018  
           __end_of_LCD_LINE3_ADDR 1014             __end_of_LCD_LINE4_ADDR 1013  
              __end_of_send_nibble 1B44                         ?_send_byte 0001  
                         __Hrparam 0000                         vfprintf@ap 0058  
                         __Lrparam 0000                         vfprintf@fp 0054  
                     __Lsmallconst 1000                 __CFG_BOREN$SBORDIS 000000  
                 __size_of___aodiv 0148  __size_of_I2C_Master_RepeatedStart 0008  
                 __size_of___aomod 0124          ?_I2C_Master_RepeatedStart 0001  
                 __size_of___lldiv 0082                         ?_vfpfcnvrt 0044  
                  ___aodiv@divisor 0009                    ___aodiv@counter 0011  
                 __size_of_lcdInst 000C                    _I2C_Master_Init 1952  
                  _I2C_Master_Read 1B0A                   __size_of_initLCD 006A  
                  _I2C_Master_Wait 1B56                    _I2C_Master_Stop 1B8A  
                         _dtoa$406 0032                           __ptext10 1A38  
                         __ptext11 153C                           __ptext20 1B92  
                         __ptext12 13F4                           __ptext21 1B9A  
                         __ptext13 18E8                           __ptext22 1B0A  
                         __ptext14 1B74                           __ptext23 1B56  
                         __ptext15 1B44                           __ptext24 1952  
                         __ptext16 1B2E                           __ptext25 17FA  
                         __ptext17 1A94                           __ptext18 1B80  
                         __ptext19 1B8A                   __size_of_pulse_e 002A  
                    __size_of_main 0104                      __size_of_dtoa 0242  
                         _vfprintf 19AE                           main@data 006B  
                        printf@fmt 005C        I2C_Master_Write@byteToWrite 0002  
                 ___aomod@dividend 0001                          putch@data 0004  
         __end_of_I2C_Master_Start 1B9A           __end_of_I2C_Master_Write 1B8A  
                       _INTCONbits 000FF2                        _send_nibble 1B2E  
                    _LCD_SIZE_HORZ 1016                      _LCD_SIZE_VERT 1015  
                 ___lldiv@dividend 0001                        ??_send_byte 0003  
                         printf@ap 0062            __end_of_I2C_Master_Init 19AE  
                  ___aomod@divisor 0009            __end_of_I2C_Master_Read 1B2E  
          __end_of_I2C_Master_Wait 1B68            __end_of_I2C_Master_Stop 1B92  
                      ??_vfpfcnvrt 004A                        lcdInst@data 0004  
                  ___aomod@counter 0011                   ___lldiv@quotient 0009  
                      _SSPCON1bits 000FC6                        _SSPCON2bits 000FC5  
                     ___aodiv@sign 0012                       ___aomod@sign 0012  
