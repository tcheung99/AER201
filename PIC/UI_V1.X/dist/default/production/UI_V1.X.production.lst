

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Apr 06 17:20:26 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,inline
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1,inline
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    54  0000                     
    55                           ; Version 2.05
    56                           ; Generated 20/12/2018 GMT
    57                           ; 
    58                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18F4620 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     
    90                           	psect	idataBANK0
    91  0018D8                     __pidataBANK0:
    92                           	opt callstack 0
    93                           
    94                           ;initializer for i2c_mine@F2787
    95  0018D8  0000               	dw	0
    96  0018DA  FFFF               	dw	65535
    97                           
    98                           ;initializer for _dists
    99  0018DC  0000               	dw	0
   100  0018DE  FFFF               	dw	65535
   101                           
   102                           ;initializer for _send
   103  0018E0  01                 	db	1
   104                           
   105                           	psect	mediumconst
   106  00FECE                     __pmediumconst:
   107                           	opt callstack 0
   108  00FECE  00                 	db	0
   109  00FECF                     _keys:
   110                           	opt callstack 0
   111  00FECF  31                 	db	49
   112  00FED0  32                 	db	50
   113  00FED1  33                 	db	51
   114  00FED2  41                 	db	65
   115  00FED3  34                 	db	52
   116  00FED4  35                 	db	53
   117  00FED5  36                 	db	54
   118  00FED6  42                 	db	66
   119  00FED7  37                 	db	55
   120  00FED8  38                 	db	56
   121  00FED9  39                 	db	57
   122  00FEDA  43                 	db	67
   123  00FEDB  2A                 	db	42
   124  00FEDC  30                 	db	48
   125  00FEDD  23                 	db	35
   126  00FEDE  44                 	db	68
   127  00FEDF  00                 	db	0
   128  00FEE0                     __end_of_keys:
   129                           	opt callstack 0
   130  00FEE0                     _happynewyear:
   131                           	opt callstack 0
   132  00FEE0  00                 	db	0
   133  00FEE1  25                 	db	37
   134  00FEE2  15                 	db	21
   135  00FEE3  00                 	db	0
   136  00FEE4  05                 	db	5
   137  00FEE5  02                 	db	2
   138  00FEE6  19                 	db	25
   139  00FEE7                     __end_of_happynewyear:
   140                           	opt callstack 0
   141  00FEE7                     _LCD_LINE1_ADDR:
   142                           	opt callstack 0
   143  00FEE7  00                 	db	0
   144  00FEE8                     __end_of_LCD_LINE1_ADDR:
   145                           	opt callstack 0
   146  00FEE8                     _LCD_SIZE_VERT:
   147                           	opt callstack 0
   148  00FEE8  04                 	db	4
   149  00FEE9                     __end_of_LCD_SIZE_VERT:
   150                           	opt callstack 0
   151  00FEE9                     _LCD_SIZE_HORZ:
   152                           	opt callstack 0
   153  00FEE9  10                 	db	16
   154  00FEEA                     __end_of_LCD_SIZE_HORZ:
   155                           	opt callstack 0
   156  00FEEA  50                 	db	80
   157  00FEEB                     __end_of_LCD_LINE4_ADDR:
   158                           	opt callstack 0
   159  00FEEB  10                 	db	16
   160  00FEEC                     __end_of_LCD_LINE3_ADDR:
   161                           	opt callstack 0
   162  00FEEC  40                 	db	64
   163  00FEED                     __end_of_LCD_LINE2_ADDR:
   164                           	opt callstack 0
   165  0000                     _PORTBbits	set	3969
   166  0000                     _ADCON1	set	4033
   167  0000                     _TRISB	set	3987
   168  0000                     _LATB	set	3978
   169  0000                     _SSPBUF	set	4041
   170  0000                     _SSPCON2bits	set	4037
   171  0000                     _SSPCON1	set	4038
   172  0000                     _SSPADD	set	4040
   173  0000                     _TRISCbits	set	3988
   174  0000                     _SSPCON1bits	set	4038
   175  0000                     _SSPCON2	set	4037
   176  0000                     _SSPSTAT	set	4039
   177  0000                     _LATDbits	set	3980
   178  0000                     _PORTB	set	3969
   179  0000                     _INTCONbits	set	4082
   180  0000                     _TRISD	set	3989
   181  0000                     _LATD	set	3980
   182  0000                     _INT1IF	set	32640
   183  0000                     _INT1IE	set	32643
   184  00FEED                     STR_8:
   185  00FEED  20                 	db	32
   186  00FEEE  20                 	db	32
   187  00FEEF  20                 	db	32
   188  00FEF0  20                 	db	32
   189  00FEF1  20                 	db	32
   190  00FEF2  30                 	db	48	;'0'
   191  00FEF3  2D                 	db	45
   192  00FEF4  4D                 	db	77	;'M'
   193  00FEF5  65                 	db	101	;'e'
   194  00FEF6  6E                 	db	110	;'n'
   195  00FEF7  75                 	db	117	;'u'
   196  00FEF8  20                 	db	32
   197  00FEF9  20                 	db	32
   198  00FEFA  20                 	db	32
   199  00FEFB  20                 	db	32
   200  00FEFC  20                 	db	32
   201  00FEFD  00                 	db	0
   202  00FEFE                     STR_25:
   203  00FEFE  3C                 	db	60	;'<'
   204  00FEFF  2A                 	db	42
   205  00FF00  20                 	db	32
   206  00FF01  20                 	db	32
   207  00FF02  20                 	db	32
   208  00FF03  30                 	db	48	;'0'
   209  00FF04  2D                 	db	45
   210  00FF05  4D                 	db	77	;'M'
   211  00FF06  65                 	db	101	;'e'
   212  00FF07  6E                 	db	110	;'n'
   213  00FF08  75                 	db	117	;'u'
   214  00FF09  20                 	db	32
   215  00FF0A  20                 	db	32
   216  00FF0B  20                 	db	32
   217  00FF0C  20                 	db	32
   218  00FF0D  20                 	db	32
   219  00FF0E  00                 	db	0
   220  00FF0F                     STR_14:
   221  00FF0F  20                 	db	32
   222  00FF10  20                 	db	32
   223  00FF11  20                 	db	32
   224  00FF12  20                 	db	32
   225  00FF13  20                 	db	32
   226  00FF14  30                 	db	48	;'0'
   227  00FF15  2D                 	db	45
   228  00FF16  4D                 	db	77	;'M'
   229  00FF17  65                 	db	101	;'e'
   230  00FF18  6E                 	db	110	;'n'
   231  00FF19  75                 	db	117	;'u'
   232  00FF1A  20                 	db	32
   233  00FF1B  20                 	db	32
   234  00FF1C  20                 	db	32
   235  00FF1D  23                 	db	35
   236  00FF1E  3E                 	db	62	;'>'
   237  00FF1F  00                 	db	0
   238  00FF20                     STR_17:
   239  00FF20  3C                 	db	60	;'<'
   240  00FF21  2A                 	db	42
   241  00FF22  20                 	db	32
   242  00FF23  20                 	db	32
   243  00FF24  20                 	db	32
   244  00FF25  30                 	db	48	;'0'
   245  00FF26  2D                 	db	45
   246  00FF27  4D                 	db	77	;'M'
   247  00FF28  65                 	db	101	;'e'
   248  00FF29  6E                 	db	110	;'n'
   249  00FF2A  75                 	db	117	;'u'
   250  00FF2B  20                 	db	32
   251  00FF2C  20                 	db	32
   252  00FF2D  20                 	db	32
   253  00FF2E  23                 	db	35
   254  00FF2F  3E                 	db	62	;'>'
   255  00FF30  00                 	db	0
   256  00FF31  4D                 	db	77	;'M'
   257  00FF32  6F                 	db	111	;'o'
   258  00FF33  74                 	db	116	;'t'
   259  00FF34  6F                 	db	111	;'o'
   260  00FF35  72                 	db	114	;'r'
   261  00FF36  20                 	db	32
   262  00FF37  64                 	db	100	;'d'
   263  00FF38  69                 	db	105	;'i'
   264  00FF39  73                 	db	115	;'s'
   265  00FF3A  74                 	db	116	;'t'
   266  00FF3B  31                 	db	49	;'1'
   267  00FF3C  20                 	db	32
   268  00FF3D  25                 	db	37
   269  00FF3E  64                 	db	100	;'d'
   270  00FF3F  00                 	db	0
   271  00FF40  4D                 	db	77	;'M'
   272  00FF41  6F                 	db	111	;'o'
   273  00FF42  74                 	db	116	;'t'
   274  00FF43  6F                 	db	111	;'o'
   275  00FF44  72                 	db	114	;'r'
   276  00FF45  20                 	db	32
   277  00FF46  64                 	db	100	;'d'
   278  00FF47  69                 	db	105	;'i'
   279  00FF48  73                 	db	115	;'s'
   280  00FF49  74                 	db	116	;'t'
   281  00FF4A  32                 	db	50	;'2'
   282  00FF4B  20                 	db	32
   283  00FF4C  25                 	db	37
   284  00FF4D  64                 	db	100	;'d'
   285  00FF4E  00                 	db	0
   286  00FF4F                     STR_3:
   287  00FF4F  33                 	db	51	;'3'
   288  00FF50  20                 	db	32
   289  00FF51  2D                 	db	45
   290  00FF52  20                 	db	32
   291  00FF53  44                 	db	68	;'D'
   292  00FF54  61                 	db	97	;'a'
   293  00FF55  74                 	db	116	;'t'
   294  00FF56  65                 	db	101	;'e'
   295  00FF57  26                 	db	38
   296  00FF58  54                 	db	84	;'T'
   297  00FF59  69                 	db	105	;'i'
   298  00FF5A  6D                 	db	109	;'m'
   299  00FF5B  65                 	db	101	;'e'
   300  00FF5C  20                 	db	32
   301  00FF5D  00                 	db	0
   302  00FF5E                     STR_7:
   303  00FF5E  4D                 	db	77	;'M'
   304  00FF5F  61                 	db	97	;'a'
   305  00FF60  63                 	db	99	;'c'
   306  00FF61  68                 	db	104	;'h'
   307  00FF62  69                 	db	105	;'i'
   308  00FF63  6E                 	db	110	;'n'
   309  00FF64  65                 	db	101	;'e'
   310  00FF65  20                 	db	32
   311  00FF66  49                 	db	73	;'I'
   312  00FF67  6E                 	db	110	;'n'
   313  00FF68  20                 	db	32
   314  00FF69  55                 	db	85	;'U'
   315  00FF6A  73                 	db	115	;'s'
   316  00FF6B  65                 	db	101	;'e'
   317  00FF6C  00                 	db	0
   318  00FF6D                     STR_27:
   319  00FF6D  25                 	db	37
   320  00FF6E  30                 	db	48	;'0'
   321  00FF6F  32                 	db	50	;'2'
   322  00FF70  78                 	db	120	;'x'
   323  00FF71  2F                 	db	47
   324  00FF72  25                 	db	37
   325  00FF73  30                 	db	48	;'0'
   326  00FF74  32                 	db	50	;'2'
   327  00FF75  78                 	db	120	;'x'
   328  00FF76  2F                 	db	47
   329  00FF77  25                 	db	37
   330  00FF78  30                 	db	48	;'0'
   331  00FF79  32                 	db	50	;'2'
   332  00FF7A  78                 	db	120	;'x'
   333  00FF7B  00                 	db	0
   334  00FF7C                     STR_28:
   335  00FF7C  25                 	db	37
   336  00FF7D  30                 	db	48	;'0'
   337  00FF7E  32                 	db	50	;'2'
   338  00FF7F  78                 	db	120	;'x'
   339  00FF80  3A                 	db	58	;':'
   340  00FF81  25                 	db	37
   341  00FF82  30                 	db	48	;'0'
   342  00FF83  32                 	db	50	;'2'
   343  00FF84  78                 	db	120	;'x'
   344  00FF85  3A                 	db	58	;':'
   345  00FF86  25                 	db	37
   346  00FF87  30                 	db	48	;'0'
   347  00FF88  32                 	db	50	;'2'
   348  00FF89  78                 	db	120	;'x'
   349  00FF8A  00                 	db	0
   350  00FF8B                     STR_16:
   351  00FF8B  4E                 	db	78	;'N'
   352  00FF8C  6F                 	db	111	;'o'
   353  00FF8D  2E                 	db	46
   354  00FF8E  20                 	db	32
   355  00FF8F  50                 	db	80	;'P'
   356  00FF90  6F                 	db	111	;'o'
   357  00FF91  6C                 	db	108	;'l'
   358  00FF92  65                 	db	101	;'e'
   359  00FF93  73                 	db	115	;'s'
   360  00FF94  3A                 	db	58	;':'
   361  00FF95  20                 	db	32
   362  00FF96  32                 	db	50	;'2'
   363  00FF97  00                 	db	0
   364  00FF98                     STR_15:
   365  00FF98  4E                 	db	78	;'N'
   366  00FF99  6F                 	db	111	;'o'
   367  00FF9A  2E                 	db	46
   368  00FF9B  20                 	db	32
   369  00FF9C  54                 	db	84	;'T'
   370  00FF9D  69                 	db	105	;'i'
   371  00FF9E  72                 	db	114	;'r'
   372  00FF9F  65                 	db	101	;'e'
   373  00FFA0  73                 	db	115	;'s'
   374  00FFA1  3A                 	db	58	;':'
   375  00FFA2  20                 	db	32
   376  00FFA3  33                 	db	51	;'3'
   377  00FFA4  00                 	db	0
   378  00FFA5                     STR_20:
   379  00FFA5  50                 	db	80	;'P'
   380  00FFA6  25                 	db	37
   381  00FFA7  64                 	db	100	;'d'
   382  00FFA8  20                 	db	32
   383  00FFA9  44                 	db	68	;'D'
   384  00FFAA  69                 	db	105	;'i'
   385  00FFAB  73                 	db	115	;'s'
   386  00FFAC  74                 	db	116	;'t'
   387  00FFAD  3A                 	db	58	;':'
   388  00FFAE  20                 	db	32
   389  00FFAF  25                 	db	37
   390  00FFB0  64                 	db	100	;'d'
   391  00FFB1  00                 	db	0
   392  00FFB2                     STR_26:
   393  00FFB2  44                 	db	68	;'D'
   394  00FFB3  41                 	db	65	;'A'
   395  00FFB4  54                 	db	84	;'T'
   396  00FFB5  45                 	db	69	;'E'
   397  00FFB6  20                 	db	32
   398  00FFB7  26                 	db	38
   399  00FFB8  20                 	db	32
   400  00FFB9  54                 	db	84	;'T'
   401  00FFBA  49                 	db	73	;'I'
   402  00FFBB  4D                 	db	77	;'M'
   403  00FFBC  45                 	db	69	;'E'
   404  00FFBD  00                 	db	0
   405  00FFBE                     STR_19:
   406  00FFBE  50                 	db	80	;'P'
   407  00FFBF  25                 	db	37
   408  00FFC0  64                 	db	100	;'d'
   409  00FFC1  20                 	db	32
   410  00FFC2  46                 	db	70	;'F'
   411  00FFC3  69                 	db	105	;'i'
   412  00FFC4  6E                 	db	110	;'n'
   413  00FFC5  3A                 	db	58	;':'
   414  00FFC6  20                 	db	32
   415  00FFC7  25                 	db	37
   416  00FFC8  64                 	db	100	;'d'
   417  00FFC9  00                 	db	0
   418  00FFCA                     STR_18:
   419  00FFCA  50                 	db	80	;'P'
   420  00FFCB  25                 	db	37
   421  00FFCC  64                 	db	100	;'d'
   422  00FFCD  20                 	db	32
   423  00FFCE  44                 	db	68	;'D'
   424  00FFCF  65                 	db	101	;'e'
   425  00FFD0  70                 	db	112	;'p'
   426  00FFD1  3A                 	db	58	;':'
   427  00FFD2  20                 	db	32
   428  00FFD3  25                 	db	37
   429  00FFD4  64                 	db	100	;'d'
   430  00FFD5  00                 	db	0
   431  00FFD6                     STR_2:
   432  00FFD6  32                 	db	50	;'2'
   433  00FFD7  20                 	db	32
   434  00FFD8  2D                 	db	45
   435  00FFD9  20                 	db	32
   436  00FFDA  53                 	db	83	;'S'
   437  00FFDB  75                 	db	117	;'u'
   438  00FFDC  6D                 	db	109	;'m'
   439  00FFDD  6D                 	db	109	;'m'
   440  00FFDE  61                 	db	97	;'a'
   441  00FFDF  72                 	db	114	;'r'
   442  00FFE0  79                 	db	121	;'y'
   443  00FFE1  00                 	db	0
   444  00FFE2                     STR_1:
   445  00FFE2  31                 	db	49	;'1'
   446  00FFE3  20                 	db	32
   447  00FFE4  2D                 	db	45
   448  00FFE5  20                 	db	32
   449  00FFE6  53                 	db	83	;'S'
   450  00FFE7  74                 	db	116	;'t'
   451  00FFE8  61                 	db	97	;'a'
   452  00FFE9  72                 	db	114	;'r'
   453  00FFEA  74                 	db	116	;'t'
   454  00FFEB  00                 	db	0
   455  00FFEC                     STR_9:
   456  00FFEC  4F                 	db	79	;'O'
   457  00FFED  70                 	db	112	;'p'
   458  00FFEE  20                 	db	32
   459  00FFEF  54                 	db	84	;'T'
   460  00FFF0  69                 	db	105	;'i'
   461  00FFF1  6D                 	db	109	;'m'
   462  00FFF2  65                 	db	101	;'e'
   463  00FFF3  3A                 	db	58	;':'
   464  00FFF4  00                 	db	0
   465  00FFF5                     STR_10:
   466  00FFF5  32                 	db	50	;'2'
   467  00FFF6  6D                 	db	109	;'m'
   468  00FFF7  69                 	db	105	;'i'
   469  00FFF8  6E                 	db	110	;'n'
   470  00FFF9  35                 	db	53	;'5'
   471  00FFFA  73                 	db	115	;'s'
   472  00FFFB  65                 	db	101	;'e'
   473  00FFFC  63                 	db	99	;'c'
   474  00FFFD  00                 	db	0
   475  0000                     
   476                           ; #config settings
   477  00FFFE  00                 	db	0	; dummy byte at the end
   478  0000                     
   479                           	psect	cinit
   480  0015A2                     __pcinit:
   481                           	opt callstack 0
   482  0015A2                     start_initialization:
   483                           	opt callstack 0
   484  0015A2                     __initialization:
   485                           	opt callstack 0
   486                           
   487                           ; Initialize objects allocated to BANK0 (9 bytes)
   488                           ; load TBLPTR registers with __pidataBANK0
   489  0015A2  0ED8               	movlw	low __pidataBANK0
   490  0015A4  6EF6               	movwf	tblptrl,c
   491  0015A6  0E18               	movlw	high __pidataBANK0
   492  0015A8  6EF7               	movwf	tblptrh,c
   493  0015AA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   494  0015AC  6EF8               	movwf	tblptru,c
   495  0015AE  EE00  F0F4         	lfsr	0,__pdataBANK0
   496  0015B2  EE10 F009          	lfsr	1,9
   497  0015B6                     copy_data0:
   498  0015B6  0009               	tblrd		*+
   499  0015B8  CFF5 FFEE          	movff	tablat,postinc0
   500  0015BC  50E5               	movf	postdec1,w,c
   501  0015BE  50E1               	movf	fsr1l,w,c
   502  0015C0  E1FA               	bnz	copy_data0
   503                           
   504                           ; Clear objects allocated to BANK1 (32 bytes)
   505  0015C2  EE01  F000         	lfsr	0,__pbssBANK1
   506  0015C6  0E20               	movlw	32
   507  0015C8                     clear_0:
   508  0015C8  6AEE               	clrf	postinc0,c
   509  0015CA  06E8               	decf	wreg,f,c
   510  0015CC  E1FD               	bnz	clear_0
   511                           
   512                           ; Clear objects allocated to BANK0 (48 bytes)
   513  0015CE  EE00  F0C4         	lfsr	0,__pbssBANK0
   514  0015D2  0E30               	movlw	48
   515  0015D4                     clear_1:
   516  0015D4  6AEE               	clrf	postinc0,c
   517  0015D6  06E8               	decf	wreg,f,c
   518  0015D8  E1FD               	bnz	clear_1
   519                           
   520                           ; Clear objects allocated to COMRAM (4 bytes)
   521  0015DA  6A7E               	clrf	(__pbssCOMRAM+3)& (0+255),c
   522  0015DC  6A7D               	clrf	(__pbssCOMRAM+2)& (0+255),c
   523  0015DE  6A7C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   524  0015E0  6A7B               	clrf	__pbssCOMRAM& (0+255),c
   525  0015E2                     end_of_initialization:
   526                           	opt callstack 0
   527  0015E2                     __end_of__initialization:
   528                           	opt callstack 0
   529  0015E2  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   530  0015E4  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   531  0015E6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   532  0015E8  6EF8               	movwf	tblptru,c
   533  0015EA  0100               	movlb	0
   534  0015EC  EF09  F000         	goto	_main	;jump to C main() function
   535                           
   536                           	psect	bssCOMRAM
   537  00007B                     __pbssCOMRAM:
   538                           	opt callstack 0
   539  00007B                     _prec:
   540                           	opt callstack 0
   541  00007B                     	ds	2
   542  00007D                     _flags:
   543                           	opt callstack 0
   544  00007D                     	ds	2
   545                           
   546                           	psect	bssBANK0
   547  0000C4                     __pbssBANK0:
   548                           	opt callstack 0
   549  0000C4                     _Pole:
   550                           	opt callstack 0
   551  0000C4                     	ds	20
   552  0000D8                     _time:
   553                           	opt callstack 0
   554  0000D8                     	ds	7
   555  0000DF                     _nout:
   556                           	opt callstack 0
   557  0000DF                     	ds	2
   558  0000E1                     _width:
   559                           	opt callstack 0
   560  0000E1                     	ds	2
   561  0000E3                     _pressed:
   562                           	opt callstack 0
   563  0000E3                     	ds	2
   564  0000E5                     _i:
   565                           	opt callstack 0
   566  0000E5                     	ds	2
   567  0000E7                     _disp:
   568                           	opt callstack 0
   569  0000E7                     	ds	2
   570  0000E9                     _state:
   571                           	opt callstack 0
   572  0000E9                     	ds	2
   573  0000EB                     _tick:
   574                           	opt callstack 0
   575  0000EB                     	ds	2
   576  0000ED                     _temp_int:
   577                           	opt callstack 0
   578  0000ED                     	ds	2
   579  0000EF                     _data:
   580                           	opt callstack 0
   581  0000EF                     	ds	1
   582  0000F0                     _keypress:
   583                           	opt callstack 0
   584  0000F0                     	ds	1
   585  0000F1                     _counter:
   586                           	opt callstack 0
   587  0000F1                     	ds	1
   588  0000F2                     _key_was_pressed:
   589                           	opt callstack 0
   590  0000F2                     	ds	1
   591  0000F3                     _temp:
   592                           	opt callstack 0
   593  0000F3                     	ds	1
   594                           
   595                           	psect	dataBANK0
   596  0000F4                     __pdataBANK0:
   597                           	opt callstack 0
   598  0000F4                     i2c_mine@F2787:
   599                           	opt callstack 0
   600  0000F4                     	ds	4
   601  0000F8                     _dists:
   602                           	opt callstack 0
   603  0000F8                     	ds	4
   604  0000FC                     _send:
   605                           	opt callstack 0
   606  0000FC                     	ds	1
   607                           
   608                           	psect	bssBANK1
   609  000100                     __pbssBANK1:
   610                           	opt callstack 0
   611  000100                     _dbuf:
   612                           	opt callstack 0
   613  000100                     	ds	32
   614                           
   615                           	psect	cstackBANK0
   616  000080                     __pcstackBANK0:
   617                           	opt callstack 0
   618  000080                     main@Pole:
   619                           	opt callstack 0
   620                           
   621                           ; 60 bytes @ 0x0
   622  000080                     	ds	60
   623  0000BC                     main@keypress:
   624                           	opt callstack 0
   625                           
   626                           ; 1 bytes @ 0x3C
   627  0000BC                     	ds	1
   628  0000BD                     main@tick:
   629                           	opt callstack 0
   630                           
   631                           ; 4 bytes @ 0x3D
   632  0000BD                     	ds	4
   633  0000C1                     main@i:
   634                           	opt callstack 0
   635                           
   636                           ; 1 bytes @ 0x41
   637  0000C1                     	ds	1
   638  0000C2                     _main$1449:
   639                           	opt callstack 0
   640                           
   641                           ; 2 bytes @ 0x42
   642  0000C2                     	ds	2
   643                           
   644                           	psect	cstackCOMRAM
   645  000001                     __pcstackCOMRAM:
   646                           	opt callstack 0
   647  000001                     ??_I2C_Master_Wait:
   648  000001                     ?_strlen:
   649                           	opt callstack 0
   650  000001                     ?_isupper:
   651                           	opt callstack 0
   652  000001                     ?_isalpha:
   653                           	opt callstack 0
   654  000001                     ?_isdigit:
   655                           	opt callstack 0
   656  000001                     ?_isspace:
   657                           	opt callstack 0
   658  000001                     ?_islower:
   659                           	opt callstack 0
   660  000001                     ?___wmul:
   661                           	opt callstack 0
   662  000001                     ?___lldiv:
   663                           	opt callstack 0
   664  000001                     ?___llmod:
   665                           	opt callstack 0
   666  000001                     ?___aodiv:
   667                           	opt callstack 0
   668  000001                     ?___aomod:
   669                           	opt callstack 0
   670  000001                     pulse_e@interruptState:
   671                           	opt callstack 0
   672  000001                     ___wmul@multiplier:
   673                           	opt callstack 0
   674  000001                     isalpha@c:
   675                           	opt callstack 0
   676  000001                     isdigit@c:
   677                           	opt callstack 0
   678  000001                     isspace@c:
   679                           	opt callstack 0
   680  000001                     isupper@c:
   681                           	opt callstack 0
   682  000001                     strlen@s:
   683                           	opt callstack 0
   684  000001                     islower@c:
   685                           	opt callstack 0
   686  000001                     ___lldiv@dividend:
   687                           	opt callstack 0
   688  000001                     ___llmod@dividend:
   689                           	opt callstack 0
   690  000001                     ___aodiv@dividend:
   691                           	opt callstack 0
   692  000001                     ___aomod@dividend:
   693                           	opt callstack 0
   694                           
   695                           ; 8 bytes @ 0x0
   696  000001                     	ds	1
   697  000002                     send_nibble@data:
   698                           	opt callstack 0
   699  000002                     I2C_Master_Read@ackBit:
   700                           	opt callstack 0
   701  000002                     I2C_Master_Write@byteToWrite:
   702                           	opt callstack 0
   703                           
   704                           ; 2 bytes @ 0x1
   705  000002                     	ds	1
   706  000003                     ??_isupper:
   707  000003                     ??_isalpha:
   708  000003                     ??_isdigit:
   709  000003                     ??_isspace:
   710  000003                     ??_islower:
   711  000003                     send_byte@data:
   712                           	opt callstack 0
   713  000003                     I2C_Master_Read@receivedByte:
   714                           	opt callstack 0
   715  000003                     ___wmul@multiplicand:
   716                           	opt callstack 0
   717  000003                     strlen@a:
   718                           	opt callstack 0
   719                           
   720                           ; 2 bytes @ 0x2
   721  000003                     	ds	1
   722  000004                     lcdInst@data:
   723                           	opt callstack 0
   724  000004                     putch@data:
   725                           	opt callstack 0
   726                           
   727                           ; 1 bytes @ 0x3
   728  000004                     	ds	1
   729  000005                     ??_initLCD:
   730  000005                     ___wmul@product:
   731                           	opt callstack 0
   732  000005                     fputc@c:
   733                           	opt callstack 0
   734  000005                     ___lldiv@divisor:
   735                           	opt callstack 0
   736  000005                     ___llmod@divisor:
   737                           	opt callstack 0
   738                           
   739                           ; 4 bytes @ 0x4
   740  000005                     	ds	2
   741  000007                     ?_toupper:
   742                           	opt callstack 0
   743  000007                     _isspace$1146:
   744                           	opt callstack 0
   745  000007                     fputc@fp:
   746                           	opt callstack 0
   747  000007                     toupper@c:
   748                           	opt callstack 0
   749                           
   750                           ; 2 bytes @ 0x6
   751  000007                     	ds	1
   752  000008                     ?_atoi:
   753                           	opt callstack 0
   754  000008                     atoi@s:
   755                           	opt callstack 0
   756                           
   757                           ; 2 bytes @ 0x7
   758  000008                     	ds	1
   759  000009                     ??_fputc:
   760  000009                     ??_toupper:
   761  000009                     ___llmod@counter:
   762                           	opt callstack 0
   763  000009                     ___lldiv@quotient:
   764                           	opt callstack 0
   765  000009                     ___aodiv@divisor:
   766                           	opt callstack 0
   767  000009                     ___aomod@divisor:
   768                           	opt callstack 0
   769                           
   770                           ; 8 bytes @ 0x8
   771  000009                     	ds	1
   772  00000A                     ??_atoi:
   773                           
   774                           ; 1 bytes @ 0x9
   775  00000A                     	ds	3
   776  00000D                     ___lldiv@counter:
   777                           	opt callstack 0
   778  00000D                     _toupper$1211:
   779                           	opt callstack 0
   780                           
   781                           ; 2 bytes @ 0xC
   782  00000D                     	ds	1
   783  00000E                     atoi@neg:
   784                           	opt callstack 0
   785  00000E                     fputs@s:
   786                           	opt callstack 0
   787  00000E                     I2C_Master_Init@clockFreq:
   788                           	opt callstack 0
   789                           
   790                           ; 4 bytes @ 0xD
   791  00000E                     	ds	2
   792  000010                     _atoi$1119:
   793                           	opt callstack 0
   794  000010                     fputs@fp:
   795                           	opt callstack 0
   796                           
   797                           ; 2 bytes @ 0xF
   798  000010                     	ds	1
   799  000011                     ___aodiv@counter:
   800                           	opt callstack 0
   801  000011                     ___aomod@counter:
   802                           	opt callstack 0
   803                           
   804                           ; 1 bytes @ 0x10
   805  000011                     	ds	1
   806  000012                     ??_I2C_Master_Init:
   807  000012                     ___aodiv@sign:
   808                           	opt callstack 0
   809  000012                     ___aomod@sign:
   810                           	opt callstack 0
   811  000012                     fputs@c:
   812                           	opt callstack 0
   813  000012                     _atoi$1121:
   814                           	opt callstack 0
   815                           
   816                           ; 2 bytes @ 0x11
   817  000012                     	ds	1
   818  000013                     ?_abs:
   819                           	opt callstack 0
   820  000013                     abs@a:
   821                           	opt callstack 0
   822  000013                     fputs@i:
   823                           	opt callstack 0
   824  000013                     ___aodiv@quotient:
   825                           	opt callstack 0
   826                           
   827                           ; 8 bytes @ 0x12
   828  000013                     	ds	1
   829  000014                     _atoi$1120:
   830                           	opt callstack 0
   831                           
   832                           ; 1 bytes @ 0x13
   833  000014                     	ds	1
   834  000015                     ??_abs:
   835  000015                     ?_pad:
   836                           	opt callstack 0
   837  000015                     pad@fp:
   838                           	opt callstack 0
   839  000015                     atoi@n:
   840                           	opt callstack 0
   841                           
   842                           ; 2 bytes @ 0x14
   843  000015                     	ds	2
   844  000017                     pad@buf:
   845                           	opt callstack 0
   846                           
   847                           ; 2 bytes @ 0x16
   848  000017                     	ds	2
   849  000019                     pad@p:
   850                           	opt callstack 0
   851                           
   852                           ; 2 bytes @ 0x18
   853  000019                     	ds	2
   854  00001B                     ??_pad:
   855                           
   856                           ; 1 bytes @ 0x1A
   857  00001B                     	ds	1
   858  00001C                     pad@i:
   859                           	opt callstack 0
   860                           
   861                           ; 2 bytes @ 0x1B
   862  00001C                     	ds	2
   863  00001E                     pad@w:
   864                           	opt callstack 0
   865                           
   866                           ; 2 bytes @ 0x1D
   867  00001E                     	ds	2
   868  000020                     ?_dtoa:
   869                           	opt callstack 0
   870  000020                     ?_xtoa:
   871                           	opt callstack 0
   872  000020                     dtoa@fp:
   873                           	opt callstack 0
   874  000020                     xtoa@fp:
   875                           	opt callstack 0
   876                           
   877                           ; 2 bytes @ 0x1F
   878  000020                     	ds	2
   879  000022                     dtoa@d:
   880                           	opt callstack 0
   881  000022                     xtoa@d:
   882                           	opt callstack 0
   883                           
   884                           ; 8 bytes @ 0x21
   885  000022                     	ds	8
   886  00002A                     ??_dtoa:
   887  00002A                     xtoa@x:
   888                           	opt callstack 0
   889                           
   890                           ; 1 bytes @ 0x29
   891  00002A                     	ds	1
   892  00002B                     ??_xtoa:
   893                           
   894                           ; 1 bytes @ 0x2A
   895  00002B                     	ds	7
   896  000032                     _dtoa$635:
   897                           	opt callstack 0
   898                           
   899                           ; 2 bytes @ 0x31
   900  000032                     	ds	1
   901  000033                     _xtoa$646:
   902                           	opt callstack 0
   903                           
   904                           ; 2 bytes @ 0x32
   905  000033                     	ds	1
   906  000034                     dtoa@p:
   907                           	opt callstack 0
   908                           
   909                           ; 2 bytes @ 0x33
   910  000034                     	ds	1
   911  000035                     _xtoa$647:
   912                           	opt callstack 0
   913                           
   914                           ; 2 bytes @ 0x34
   915  000035                     	ds	1
   916  000036                     dtoa@w:
   917                           	opt callstack 0
   918                           
   919                           ; 2 bytes @ 0x35
   920  000036                     	ds	1
   921  000037                     xtoa@p:
   922                           	opt callstack 0
   923                           
   924                           ; 2 bytes @ 0x36
   925  000037                     	ds	1
   926  000038                     dtoa@s:
   927                           	opt callstack 0
   928                           
   929                           ; 2 bytes @ 0x37
   930  000038                     	ds	1
   931  000039                     xtoa@w:
   932                           	opt callstack 0
   933                           
   934                           ; 2 bytes @ 0x38
   935  000039                     	ds	1
   936  00003A                     dtoa@n:
   937                           	opt callstack 0
   938                           
   939                           ; 8 bytes @ 0x39
   940  00003A                     	ds	1
   941  00003B                     xtoa@n:
   942                           	opt callstack 0
   943                           
   944                           ; 8 bytes @ 0x3A
   945  00003B                     	ds	7
   946  000042                     dtoa@i:
   947                           	opt callstack 0
   948                           
   949                           ; 2 bytes @ 0x41
   950  000042                     	ds	1
   951  000043                     xtoa@i:
   952                           	opt callstack 0
   953                           
   954                           ; 2 bytes @ 0x42
   955  000043                     	ds	2
   956  000045                     xtoa@c:
   957                           	opt callstack 0
   958                           
   959                           ; 2 bytes @ 0x44
   960  000045                     	ds	2
   961  000047                     ?_vfpfcnvrt:
   962                           	opt callstack 0
   963  000047                     vfpfcnvrt@fp:
   964                           	opt callstack 0
   965                           
   966                           ; 2 bytes @ 0x46
   967  000047                     	ds	2
   968  000049                     vfpfcnvrt@fmt:
   969                           	opt callstack 0
   970                           
   971                           ; 2 bytes @ 0x48
   972  000049                     	ds	2
   973  00004B                     vfpfcnvrt@ap:
   974                           	opt callstack 0
   975                           
   976                           ; 2 bytes @ 0x4A
   977  00004B                     	ds	2
   978  00004D                     ??_vfpfcnvrt:
   979                           
   980                           ; 1 bytes @ 0x4C
   981  00004D                     	ds	4
   982  000051                     vfpfcnvrt@ll:
   983                           	opt callstack 0
   984                           
   985                           ; 8 bytes @ 0x50
   986  000051                     	ds	8
   987  000059                     vfpfcnvrt@llu:
   988                           	opt callstack 0
   989                           
   990                           ; 8 bytes @ 0x58
   991  000059                     	ds	8
   992  000061                     vfpfcnvrt@done:
   993                           	opt callstack 0
   994                           
   995                           ; 2 bytes @ 0x60
   996  000061                     	ds	2
   997  000063                     _vfpfcnvrt$661:
   998                           	opt callstack 0
   999                           
  1000                           ; 2 bytes @ 0x62
  1001  000063                     	ds	2
  1002  000065                     vfpfcnvrt@c:
  1003                           	opt callstack 0
  1004                           
  1005                           ; 1 bytes @ 0x64
  1006  000065                     	ds	1
  1007  000066                     ?_vfprintf:
  1008                           	opt callstack 0
  1009  000066                     vfprintf@fp:
  1010                           	opt callstack 0
  1011                           
  1012                           ; 2 bytes @ 0x65
  1013  000066                     	ds	2
  1014  000068                     vfprintf@fmt:
  1015                           	opt callstack 0
  1016                           
  1017                           ; 2 bytes @ 0x67
  1018  000068                     	ds	2
  1019  00006A                     vfprintf@ap:
  1020                           	opt callstack 0
  1021                           
  1022                           ; 2 bytes @ 0x69
  1023  00006A                     	ds	2
  1024  00006C                     vfprintf@cfmt:
  1025                           	opt callstack 0
  1026                           
  1027                           ; 2 bytes @ 0x6B
  1028  00006C                     	ds	2
  1029  00006E                     ?_printf:
  1030                           	opt callstack 0
  1031  00006E                     printf@fmt:
  1032                           	opt callstack 0
  1033                           
  1034                           ; 2 bytes @ 0x6D
  1035  00006E                     	ds	8
  1036  000076                     
  1037                           ; 1 bytes @ 0x75
  1038  000076                     	ds	2
  1039  000078                     printf@ap:
  1040                           	opt callstack 0
  1041                           
  1042                           ; 2 bytes @ 0x77
  1043  000078                     	ds	2
  1044  00007A                     ??_main:
  1045                           
  1046                           ; 1 bytes @ 0x79
  1047  00007A                     	ds	1
  1048                           
  1049 ;;
  1050 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1051 ;;
  1052 ;; *************** function _main *****************
  1053 ;; Defined at:
  1054 ;;		line 57 in file "main.c"
  1055 ;; Parameters:    Size  Location     Type
  1056 ;;		None
  1057 ;; Auto vars:     Size  Location     Type
  1058 ;;  i               1   65[BANK0 ] unsigned char 
  1059 ;;  keypress        1   60[BANK0 ] unsigned char 
  1060 ;;  Pole           60    0[BANK0 ] struct Poles[10]
  1061 ;;  tick            4   61[BANK0 ] unsigned long 
  1062 ;; Return value:  Size  Location     Type
  1063 ;;                  1    wreg      void 
  1064 ;; Registers used:
  1065 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1066 ;; Tracked objects:
  1067 ;;		On entry : 0/0
  1068 ;;		On exit  : 0/0
  1069 ;;		Unchanged: 0/0
  1070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1072 ;;      Locals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1073 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1074 ;;      Totals:         1      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1075 ;;Total ram usage:       69 bytes
  1076 ;; Hardware stack levels required when called:   12
  1077 ;; This function calls:
  1078 ;;		_I2C_Master_Init
  1079 ;;		_I2C_Master_Read
  1080 ;;		_I2C_Master_Start
  1081 ;;		_I2C_Master_Stop
  1082 ;;		_I2C_Master_Write
  1083 ;;		___llmod
  1084 ;;		___wmul
  1085 ;;		_initLCD
  1086 ;;		_lcdInst
  1087 ;;		_printf
  1088 ;; This function is called by:
  1089 ;;		Startup code after reset
  1090 ;; This function uses a non-reentrant model
  1091 ;;
  1092                           
  1093                           	psect	text0
  1094  000012                     __ptext0:
  1095                           	opt callstack 0
  1096  000012                     _main:
  1097                           	opt callstack 19
  1098                           
  1099                           ;main.c: 62:     LATD = 0x00;
  1100                           
  1101                           ;incstack = 0
  1102  000012  0E00               	movlw	0
  1103  000014  6E8C               	movwf	3980,c	;volatile
  1104                           
  1105                           ;main.c: 63:     TRISD = 0x00;
  1106  000016  0E00               	movlw	0
  1107  000018  6E95               	movwf	3989,c	;volatile
  1108                           
  1109                           ;main.c: 66:     TRISD = 0x00;
  1110  00001A  0E00               	movlw	0
  1111  00001C  6E95               	movwf	3989,c	;volatile
  1112                           
  1113                           ;main.c: 69:     INT1IE = 1;
  1114  00001E  86F0               	bsf	4080,3,c	;volatile
  1115                           
  1116                           ;main.c: 72:     initLCD();
  1117  000020  EC10  F00A         	call	_initLCD	;wreg free
  1118                           
  1119                           ;main.c: 75:     (INTCONbits.GIE = 1);
  1120  000024  8EF2               	bsf	4082,7,c	;volatile
  1121                           
  1122                           ;main.c: 77:     I2C_Master_Init(100000);
  1123  000026  0EA0               	movlw	160
  1124  000028  6E0E               	movwf	I2C_Master_Init@clockFreq,c
  1125  00002A  0E86               	movlw	134
  1126  00002C  6E0F               	movwf	I2C_Master_Init@clockFreq+1,c
  1127  00002E  0E01               	movlw	1
  1128  000030  6E10               	movwf	I2C_Master_Init@clockFreq+2,c
  1129  000032  0E00               	movlw	0
  1130  000034  6E11               	movwf	I2C_Master_Init@clockFreq+3,c
  1131  000036  EC78  F00A         	call	_I2C_Master_Init	;wreg free
  1132                           
  1133                           ;main.c: 78:     I2C_Master_Start();
  1134  00003A  EC75  F00C         	call	_I2C_Master_Start	;wreg free
  1135                           
  1136                           ;main.c: 79:     I2C_Master_Write(0b00010000);
  1137  00003E  0E00               	movlw	0
  1138  000040  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
  1139  000042  0E10               	movlw	16
  1140  000044  6E02               	movwf	I2C_Master_Write@byteToWrite,c
  1141  000046  EC67  F00C         	call	_I2C_Master_Write	;wreg free
  1142                           
  1143                           ;main.c: 80:     I2C_Master_Stop();
  1144  00004A  EC71  F00C         	call	_I2C_Master_Stop	;wreg free
  1145                           
  1146                           ;main.c: 90:     if(pressed == 0){
  1147  00004E  0100               	movlb	0	; () banked
  1148  000050  51E3               	movf	_pressed& (0+255),w,b
  1149  000052  11E4               	iorwf	(_pressed+1)& (0+255),w,b
  1150  000054  A4D8               	btfss	status,2,c
  1151  000056  D023               	goto	l2910
  1152                           
  1153                           ; BSR set to: 0
  1154                           ;main.c: 91:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  1155  000058  0E01               	movlw	1
  1156  00005A  EC61  F00C         	call	_lcdInst
  1157  00005E  0E11               	movlw	17
  1158  000060  6E7A               	movwf	??_main& (0+255),c
  1159  000062  0E3A               	movlw	58
  1160  000064                     u2737:
  1161  000064  2EE8               	decfsz	wreg,f,c
  1162  000066  D7FE               	bra	u2737
  1163  000068  2E7A               	decfsz	??_main& (0+255),f,c
  1164  00006A  D7FC               	bra	u2737
  1165  00006C  D000               	nop2	
  1166                           
  1167                           ;main.c: 92:         printf("1 - Start");
  1168  00006E  0EE2               	movlw	low STR_1
  1169  000070  6E6E               	movwf	printf@fmt,c
  1170  000072  0EFF               	movlw	high STR_1
  1171  000074  6E6F               	movwf	printf@fmt+1,c
  1172  000076  ECFD  F00B         	call	_printf	;wreg free
  1173  00007A  0EC0               	movlw	192
  1174  00007C  EC61  F00C         	call	_lcdInst
  1175                           
  1176                           ;main.c: 94:         printf("2 - Summary");
  1177  000080  0ED6               	movlw	low STR_2
  1178  000082  6E6E               	movwf	printf@fmt,c
  1179  000084  0EFF               	movlw	high STR_2
  1180  000086  6E6F               	movwf	printf@fmt+1,c
  1181  000088  ECFD  F00B         	call	_printf	;wreg free
  1182  00008C  0E90               	movlw	144
  1183  00008E  EC61  F00C         	call	_lcdInst
  1184                           
  1185                           ;main.c: 96:         printf("3 - Date&Time ");
  1186  000092  0E4F               	movlw	low STR_3
  1187  000094  6E6E               	movwf	printf@fmt,c
  1188  000096  0EFF               	movlw	high STR_3
  1189  000098  6E6F               	movwf	printf@fmt+1,c
  1190  00009A  ECFD  F00B         	call	_printf	;wreg free
  1191  00009E                     l2910:
  1192                           
  1193                           ;main.c: 108:         if(key_was_pressed){
  1194  00009E  0100               	movlb	0	; () banked
  1195  0000A0  51F2               	movf	_key_was_pressed& (0+255),w,b	;volatile
  1196  0000A2  B4D8               	btfsc	status,2,c
  1197  0000A4  D7FC               	goto	l2910
  1198                           
  1199                           ; BSR set to: 0
  1200                           ;main.c: 109:             pressed = 1;
  1201  0000A6  0E00               	movlw	0
  1202  0000A8  6FE4               	movwf	(_pressed+1)& (0+255),b
  1203  0000AA  0E01               	movlw	1
  1204  0000AC  6FE3               	movwf	_pressed& (0+255),b
  1205                           
  1206                           ;main.c: 110:             key_was_pressed = 0;
  1207  0000AE  0E00               	movlw	0
  1208  0000B0  6FF2               	movwf	_key_was_pressed& (0+255),b	;volatile
  1209                           
  1210                           ; BSR set to: 0
  1211                           ;main.c: 111:             unsigned char keypress = (PORTB & 0xF0) >> 4;
  1212  0000B2  3881               	swapf	3969,w,c	;volatile
  1213  0000B4  0B0F               	andlw	15
  1214  0000B6  0B0F               	andlw	15
  1215  0000B8  6FBC               	movwf	main@keypress& (0+255),b
  1216                           
  1217                           ; BSR set to: 0
  1218                           ;main.c: 112:             temp = keys[keypress];
  1219  0000BA  0ECF               	movlw	low _keys
  1220  0000BC  25BC               	addwf	main@keypress& (0+255),w,b
  1221  0000BE  6EF6               	movwf	tblptrl,c
  1222  0000C0  6AF7               	clrf	tblptrh,c
  1223  0000C2  0EFE               	movlw	high _keys
  1224  0000C4  22F7               	addwfc	tblptrh,f,c
  1225  0000C6                     	if	0	;There are less than 3 active tblptr bytes
  1226  0000C6                     	endif
  1227  0000C6  0008               	tblrd		*
  1228  0000C8  CFF5 F0F3          	movff	tablat,_temp
  1229                           
  1230                           ; BSR set to: 0
  1231                           ;main.c: 113:             temp_int = (temp-'0');
  1232  0000CC  0ED0               	movlw	208
  1233  0000CE  25F3               	addwf	_temp& (0+255),w,b
  1234  0000D0  6FED               	movwf	_temp_int& (0+255),b
  1235  0000D2  6BEE               	clrf	(_temp_int+1)& (0+255),b
  1236  0000D4  0EFF               	movlw	255
  1237  0000D6  23EE               	addwfc	(_temp_int+1)& (0+255),f,b
  1238                           
  1239                           ; BSR set to: 0
  1240                           ;main.c: 115:             if (temp_int == 0){
  1241  0000D8  51ED               	movf	_temp_int& (0+255),w,b
  1242  0000DA  11EE               	iorwf	(_temp_int+1)& (0+255),w,b
  1243  0000DC  A4D8               	btfss	status,2,c
  1244  0000DE  D027               	goto	l2938
  1245                           
  1246                           ; BSR set to: 0
  1247                           ;main.c: 116:                 state = 0;
  1248  0000E0  0E00               	movlw	0
  1249  0000E2  6FEA               	movwf	(_state+1)& (0+255),b
  1250  0000E4  0E00               	movlw	0
  1251  0000E6  6FE9               	movwf	_state& (0+255),b
  1252                           
  1253                           ; BSR set to: 0
  1254                           ;main.c: 117:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  1255  0000E8  0E01               	movlw	1
  1256  0000EA  EC61  F00C         	call	_lcdInst
  1257  0000EE  0E11               	movlw	17
  1258  0000F0  6E7A               	movwf	??_main& (0+255),c
  1259  0000F2  0E3A               	movlw	58
  1260  0000F4                     u2747:
  1261  0000F4  2EE8               	decfsz	wreg,f,c
  1262  0000F6  D7FE               	bra	u2747
  1263  0000F8  2E7A               	decfsz	??_main& (0+255),f,c
  1264  0000FA  D7FC               	bra	u2747
  1265  0000FC  D000               	nop2	
  1266                           
  1267                           ;main.c: 118:                 printf("1 - Start");
  1268  0000FE  0EE2               	movlw	low STR_1
  1269  000100  6E6E               	movwf	printf@fmt,c
  1270  000102  0EFF               	movlw	high STR_1
  1271  000104  6E6F               	movwf	printf@fmt+1,c
  1272  000106  ECFD  F00B         	call	_printf	;wreg free
  1273  00010A  0EC0               	movlw	192
  1274  00010C  EC61  F00C         	call	_lcdInst
  1275                           
  1276                           ;main.c: 120:                 printf("2 - Summary");
  1277  000110  0ED6               	movlw	low STR_2
  1278  000112  6E6E               	movwf	printf@fmt,c
  1279  000114  0EFF               	movlw	high STR_2
  1280  000116  6E6F               	movwf	printf@fmt+1,c
  1281  000118  ECFD  F00B         	call	_printf	;wreg free
  1282  00011C  0E90               	movlw	144
  1283  00011E  EC61  F00C         	call	_lcdInst
  1284                           
  1285                           ;main.c: 122:                 printf("3 - Date&Time ");
  1286  000122  0E4F               	movlw	low STR_3
  1287  000124  6E6E               	movwf	printf@fmt,c
  1288  000126  0EFF               	movlw	high STR_3
  1289  000128  6E6F               	movwf	printf@fmt+1,c
  1290  00012A  ECFD  F00B         	call	_printf	;wreg free
  1291  00012E                     l2938:
  1292                           
  1293                           ;main.c: 125:             if ((temp_int == 1)&&(temp!= '*')&&(temp!= '#')){
  1294  00012E  0100               	movlb	0	; () banked
  1295  000130  05ED               	decf	_temp_int& (0+255),w,b
  1296  000132  11EE               	iorwf	(_temp_int+1)& (0+255),w,b
  1297  000134  A4D8               	btfss	status,2,c
  1298  000136  D035               	goto	l2964
  1299                           
  1300                           ; BSR set to: 0
  1301  000138  0E2A               	movlw	42
  1302  00013A  19F3               	xorwf	_temp& (0+255),w,b
  1303  00013C  B4D8               	btfsc	status,2,c
  1304  00013E  D031               	goto	l2964
  1305                           
  1306                           ; BSR set to: 0
  1307  000140  0E23               	movlw	35
  1308  000142  19F3               	xorwf	_temp& (0+255),w,b
  1309  000144  B4D8               	btfsc	status,2,c
  1310  000146  D02D               	goto	l2964
  1311                           
  1312                           ; BSR set to: 0
  1313                           ;main.c: 126:                 state = 0;
  1314  000148  0E00               	movlw	0
  1315  00014A  6FEA               	movwf	(_state+1)& (0+255),b
  1316  00014C  0E00               	movlw	0
  1317  00014E  6FE9               	movwf	_state& (0+255),b
  1318                           
  1319                           ; BSR set to: 0
  1320                           ;main.c: 127:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  1321  000150  0E01               	movlw	1
  1322  000152  EC61  F00C         	call	_lcdInst
  1323  000156  0E11               	movlw	17
  1324  000158  6E7A               	movwf	??_main& (0+255),c
  1325  00015A  0E3A               	movlw	58
  1326  00015C                     u2757:
  1327  00015C  2EE8               	decfsz	wreg,f,c
  1328  00015E  D7FE               	bra	u2757
  1329  000160  2E7A               	decfsz	??_main& (0+255),f,c
  1330  000162  D7FC               	bra	u2757
  1331  000164  D000               	nop2	
  1332                           
  1333                           ;main.c: 128:                 printf("Machine In Use");
  1334  000166  0E5E               	movlw	low STR_7
  1335  000168  6E6E               	movwf	printf@fmt,c
  1336  00016A  0EFF               	movlw	high STR_7
  1337  00016C  6E6F               	movwf	printf@fmt+1,c
  1338  00016E  ECFD  F00B         	call	_printf	;wreg free
  1339  000172  0ED0               	movlw	208
  1340  000174  EC61  F00C         	call	_lcdInst
  1341                           
  1342                           ;main.c: 130:                 printf("     0-Menu     ");
  1343  000178  0EED               	movlw	low STR_8
  1344  00017A  6E6E               	movwf	printf@fmt,c
  1345  00017C  0EFE               	movlw	high STR_8
  1346  00017E  6E6F               	movwf	printf@fmt+1,c
  1347  000180  ECFD  F00B         	call	_printf	;wreg free
  1348                           
  1349                           ;main.c: 135:                 I2C_Master_Start();
  1350  000184  EC75  F00C         	call	_I2C_Master_Start	;wreg free
  1351                           
  1352                           ;main.c: 136:                 I2C_Master_Write(0b00010000);
  1353  000188  0E00               	movlw	0
  1354  00018A  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
  1355  00018C  0E10               	movlw	16
  1356  00018E  6E02               	movwf	I2C_Master_Write@byteToWrite,c
  1357  000190  EC67  F00C         	call	_I2C_Master_Write	;wreg free
  1358                           
  1359                           ;main.c: 137:                 I2C_Master_Write(temp);
  1360  000194  C0F3  F002         	movff	_temp,I2C_Master_Write@byteToWrite
  1361  000198  6A03               	clrf	I2C_Master_Write@byteToWrite+1,c
  1362  00019A  EC67  F00C         	call	_I2C_Master_Write	;wreg free
  1363                           
  1364                           ;main.c: 138:                 I2C_Master_Stop();
  1365  00019E  EC71  F00C         	call	_I2C_Master_Stop	;wreg free
  1366  0001A2                     l2964:
  1367                           
  1368                           ;main.c: 143:                 if ((temp_int == 2)||(state == 2)){
  1369  0001A2  0E02               	movlw	2
  1370  0001A4  0100               	movlb	0	; () banked
  1371  0001A6  19ED               	xorwf	_temp_int& (0+255),w,b
  1372  0001A8  11EE               	iorwf	(_temp_int+1)& (0+255),w,b
  1373  0001AA  B4D8               	btfsc	status,2,c
  1374  0001AC  D005               	goto	u2450
  1375                           
  1376                           ; BSR set to: 0
  1377  0001AE  0E02               	movlw	2
  1378  0001B0  19E9               	xorwf	_state& (0+255),w,b
  1379  0001B2  11EA               	iorwf	(_state+1)& (0+255),w,b
  1380  0001B4  A4D8               	btfss	status,2,c
  1381  0001B6  D1E1               	goto	l3086
  1382  0001B8                     u2450:
  1383                           
  1384                           ; BSR set to: 0
  1385                           ;main.c: 144:                     if ((temp_int == 2)){
  1386  0001B8  0E02               	movlw	2
  1387  0001BA  19ED               	xorwf	_temp_int& (0+255),w,b
  1388  0001BC  11EE               	iorwf	(_temp_int+1)& (0+255),w,b
  1389  0001BE  A4D8               	btfss	status,2,c
  1390  0001C0  D02B               	goto	l2986
  1391                           
  1392                           ; BSR set to: 0
  1393                           ;main.c: 145:                         state = 2;
  1394  0001C2  0E00               	movlw	0
  1395  0001C4  6FEA               	movwf	(_state+1)& (0+255),b
  1396  0001C6  0E02               	movlw	2
  1397  0001C8  6FE9               	movwf	_state& (0+255),b
  1398                           
  1399                           ;main.c: 146:                         disp = 0;
  1400  0001CA  0E00               	movlw	0
  1401  0001CC  6FE8               	movwf	(_disp+1)& (0+255),b
  1402  0001CE  0E00               	movlw	0
  1403  0001D0  6FE7               	movwf	_disp& (0+255),b
  1404                           
  1405                           ; BSR set to: 0
  1406                           ;main.c: 147:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  1407  0001D2  0E01               	movlw	1
  1408  0001D4  EC61  F00C         	call	_lcdInst
  1409  0001D8  0E11               	movlw	17
  1410  0001DA  6E7A               	movwf	??_main& (0+255),c
  1411  0001DC  0E3A               	movlw	58
  1412  0001DE                     u2767:
  1413  0001DE  2EE8               	decfsz	wreg,f,c
  1414  0001E0  D7FE               	bra	u2767
  1415  0001E2  2E7A               	decfsz	??_main& (0+255),f,c
  1416  0001E4  D7FC               	bra	u2767
  1417  0001E6  D000               	nop2	
  1418                           
  1419                           ;main.c: 148:                         printf("Op Time:");
  1420  0001E8  0EEC               	movlw	low STR_9
  1421  0001EA  6E6E               	movwf	printf@fmt,c
  1422  0001EC  0EFF               	movlw	high STR_9
  1423  0001EE  6E6F               	movwf	printf@fmt+1,c
  1424  0001F0  ECFD  F00B         	call	_printf	;wreg free
  1425  0001F4  0EC0               	movlw	192
  1426  0001F6  EC61  F00C         	call	_lcdInst
  1427                           
  1428                           ;main.c: 150:                         printf("2min5sec");
  1429  0001FA  0EF5               	movlw	low STR_10
  1430  0001FC  6E6E               	movwf	printf@fmt,c
  1431  0001FE  0EFF               	movlw	high STR_10
  1432  000200  6E6F               	movwf	printf@fmt+1,c
  1433  000202  ECFD  F00B         	call	_printf	;wreg free
  1434  000206  0ED0               	movlw	208
  1435  000208  EC61  F00C         	call	_lcdInst
  1436                           
  1437                           ;main.c: 152:                         printf("    0-Menu   #>");
  1438  00020C  0E10               	movlw	low (STR_14+1)
  1439  00020E  6E6E               	movwf	printf@fmt,c
  1440  000210  0EFF               	movlw	high (STR_14+1)
  1441  000212  6E6F               	movwf	printf@fmt+1,c
  1442  000214  ECFD  F00B         	call	_printf	;wreg free
  1443  000218                     l2986:
  1444                           
  1445                           ;main.c: 159:                     if ((temp == '*') && (disp != 0)){
  1446  000218  0E2A               	movlw	42
  1447  00021A  0100               	movlb	0	; () banked
  1448  00021C  19F3               	xorwf	_temp& (0+255),w,b
  1449  00021E  A4D8               	btfss	status,2,c
  1450  000220  D00A               	goto	l83
  1451                           
  1452                           ; BSR set to: 0
  1453  000222  51E7               	movf	_disp& (0+255),w,b
  1454  000224  11E8               	iorwf	(_disp+1)& (0+255),w,b
  1455  000226  B4D8               	btfsc	status,2,c
  1456  000228  D006               	goto	l83
  1457                           
  1458                           ; BSR set to: 0
  1459                           ;main.c: 160:                         disp = disp - 1;
  1460  00022A  0EFF               	movlw	255
  1461  00022C  25E7               	addwf	_disp& (0+255),w,b
  1462  00022E  6FE7               	movwf	_disp& (0+255),b
  1463  000230  0EFF               	movlw	255
  1464  000232  21E8               	addwfc	(_disp+1)& (0+255),w,b
  1465  000234  6FE8               	movwf	(_disp+1)& (0+255),b
  1466  000236                     l83:
  1467                           
  1468                           ; BSR set to: 0
  1469                           ;main.c: 162:                     if ((temp == '#')&& (disp <12)){
  1470  000236  0E23               	movlw	35
  1471  000238  19F3               	xorwf	_temp& (0+255),w,b
  1472  00023A  A4D8               	btfss	status,2,c
  1473  00023C  D00A               	goto	l2996
  1474                           
  1475                           ; BSR set to: 0
  1476  00023E  BFE8               	btfsc	(_disp+1)& (0+255),7,b
  1477  000240  D006               	goto	u2500
  1478  000242  51E8               	movf	(_disp+1)& (0+255),w,b
  1479  000244  E106               	bnz	l2996
  1480  000246  0E0C               	movlw	12
  1481  000248  5DE7               	subwf	_disp& (0+255),w,b
  1482  00024A  B0D8               	btfsc	status,0,c
  1483  00024C  D002               	goto	l2996
  1484  00024E                     u2500:
  1485                           
  1486                           ; BSR set to: 0
  1487                           ;main.c: 163:                         disp++;
  1488  00024E  4BE7               	infsnz	_disp& (0+255),f,b
  1489  000250  2BE8               	incf	(_disp+1)& (0+255),f,b
  1490  000252                     l2996:
  1491                           
  1492                           ; BSR set to: 0
  1493                           ;main.c: 165:                     if (disp == 0){
  1494  000252  51E7               	movf	_disp& (0+255),w,b
  1495  000254  11E8               	iorwf	(_disp+1)& (0+255),w,b
  1496  000256  A4D8               	btfss	status,2,c
  1497  000258  D023               	goto	l3012
  1498                           
  1499                           ; BSR set to: 0
  1500                           ;main.c: 166:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  1501  00025A  0E01               	movlw	1
  1502  00025C  EC61  F00C         	call	_lcdInst
  1503  000260  0E11               	movlw	17
  1504  000262  6E7A               	movwf	??_main& (0+255),c
  1505  000264  0E3A               	movlw	58
  1506  000266                     u2777:
  1507  000266  2EE8               	decfsz	wreg,f,c
  1508  000268  D7FE               	bra	u2777
  1509  00026A  2E7A               	decfsz	??_main& (0+255),f,c
  1510  00026C  D7FC               	bra	u2777
  1511  00026E  D000               	nop2	
  1512                           
  1513                           ;main.c: 167:                         printf("Op Time:");
  1514  000270  0EEC               	movlw	low STR_9
  1515  000272  6E6E               	movwf	printf@fmt,c
  1516  000274  0EFF               	movlw	high STR_9
  1517  000276  6E6F               	movwf	printf@fmt+1,c
  1518  000278  ECFD  F00B         	call	_printf	;wreg free
  1519  00027C  0EC0               	movlw	192
  1520  00027E  EC61  F00C         	call	_lcdInst
  1521                           
  1522                           ;main.c: 169:                         printf("2min5sec");
  1523  000282  0EF5               	movlw	low STR_10
  1524  000284  6E6E               	movwf	printf@fmt,c
  1525  000286  0EFF               	movlw	high STR_10
  1526  000288  6E6F               	movwf	printf@fmt+1,c
  1527  00028A  ECFD  F00B         	call	_printf	;wreg free
  1528  00028E  0ED0               	movlw	208
  1529  000290  EC61  F00C         	call	_lcdInst
  1530                           
  1531                           ;main.c: 171:                         printf("     0-Menu   #>");
  1532  000294  0E0F               	movlw	low STR_14
  1533  000296  6E6E               	movwf	printf@fmt,c
  1534  000298  0EFF               	movlw	high STR_14
  1535  00029A  6E6F               	movwf	printf@fmt+1,c
  1536  00029C  ECFD  F00B         	call	_printf	;wreg free
  1537  0002A0                     l3012:
  1538                           
  1539                           ;main.c: 174:                     if (disp == 1){
  1540  0002A0  0100               	movlb	0	; () banked
  1541  0002A2  05E7               	decf	_disp& (0+255),w,b
  1542  0002A4  11E8               	iorwf	(_disp+1)& (0+255),w,b
  1543  0002A6  A4D8               	btfss	status,2,c
  1544  0002A8  D023               	goto	l3028
  1545                           
  1546                           ; BSR set to: 0
  1547                           ;main.c: 175:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  1548  0002AA  0E01               	movlw	1
  1549  0002AC  EC61  F00C         	call	_lcdInst
  1550  0002B0  0E11               	movlw	17
  1551  0002B2  6E7A               	movwf	??_main& (0+255),c
  1552  0002B4  0E3A               	movlw	58
  1553  0002B6                     u2787:
  1554  0002B6  2EE8               	decfsz	wreg,f,c
  1555  0002B8  D7FE               	bra	u2787
  1556  0002BA  2E7A               	decfsz	??_main& (0+255),f,c
  1557  0002BC  D7FC               	bra	u2787
  1558  0002BE  D000               	nop2	
  1559                           
  1560                           ;main.c: 176:                         printf("No. Tires: 3");
  1561  0002C0  0E98               	movlw	low STR_15
  1562  0002C2  6E6E               	movwf	printf@fmt,c
  1563  0002C4  0EFF               	movlw	high STR_15
  1564  0002C6  6E6F               	movwf	printf@fmt+1,c
  1565  0002C8  ECFD  F00B         	call	_printf	;wreg free
  1566  0002CC  0EC0               	movlw	192
  1567  0002CE  EC61  F00C         	call	_lcdInst
  1568                           
  1569                           ;main.c: 178:                         printf("No. Poles: 2");
  1570  0002D2  0E8B               	movlw	low STR_16
  1571  0002D4  6E6E               	movwf	printf@fmt,c
  1572  0002D6  0EFF               	movlw	high STR_16
  1573  0002D8  6E6F               	movwf	printf@fmt+1,c
  1574  0002DA  ECFD  F00B         	call	_printf	;wreg free
  1575  0002DE  0ED0               	movlw	208
  1576  0002E0  EC61  F00C         	call	_lcdInst
  1577                           
  1578                           ;main.c: 180:                         printf("<*   0-Menu   #>");
  1579  0002E4  0E20               	movlw	low STR_17
  1580  0002E6  6E6E               	movwf	printf@fmt,c
  1581  0002E8  0EFF               	movlw	high STR_17
  1582  0002EA  6E6F               	movwf	printf@fmt+1,c
  1583  0002EC  ECFD  F00B         	call	_printf	;wreg free
  1584  0002F0                     l3028:
  1585                           
  1586                           ;main.c: 183:                     if (disp > 1 && disp <11){
  1587  0002F0  0100               	movlb	0	; () banked
  1588  0002F2  BFE8               	btfsc	(_disp+1)& (0+255),7,b
  1589  0002F4  D0A5               	goto	l3058
  1590  0002F6  51E8               	movf	(_disp+1)& (0+255),w,b
  1591  0002F8  E104               	bnz	u2530
  1592  0002FA  0E02               	movlw	2
  1593  0002FC  5DE7               	subwf	_disp& (0+255),w,b
  1594  0002FE  A0D8               	btfss	status,0,c
  1595  000300  D09F               	goto	l3058
  1596  000302                     u2530:
  1597                           
  1598                           ; BSR set to: 0
  1599  000302  BFE8               	btfsc	(_disp+1)& (0+255),7,b
  1600  000304  D006               	goto	u2540
  1601  000306  51E8               	movf	(_disp+1)& (0+255),w,b
  1602  000308  E103               	bnz	u2541
  1603  00030A  0E0B               	movlw	11
  1604  00030C  5DE7               	subwf	_disp& (0+255),w,b
  1605  00030E  B0D8               	btfsc	status,0,c
  1606  000310                     u2541:
  1607  000310  D097               	goto	l3058
  1608  000312                     u2540:
  1609                           
  1610                           ; BSR set to: 0
  1611                           ;main.c: 184:                         i = disp - 2;
  1612  000312  0EFE               	movlw	254
  1613  000314  25E7               	addwf	_disp& (0+255),w,b
  1614  000316  6FE5               	movwf	_i& (0+255),b
  1615  000318  0EFF               	movlw	255
  1616  00031A  21E8               	addwfc	(_disp+1)& (0+255),w,b
  1617  00031C  6FE6               	movwf	(_i+1)& (0+255),b
  1618                           
  1619                           ; BSR set to: 0
  1620                           ;main.c: 185:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  1621  00031E  0E01               	movlw	1
  1622  000320  EC61  F00C         	call	_lcdInst
  1623  000324  0E11               	movlw	17
  1624  000326  6E7A               	movwf	??_main& (0+255),c
  1625  000328  0E3A               	movlw	58
  1626  00032A                     u2797:
  1627  00032A  2EE8               	decfsz	wreg,f,c
  1628  00032C  D7FE               	bra	u2797
  1629  00032E  2E7A               	decfsz	??_main& (0+255),f,c
  1630  000330  D7FC               	bra	u2797
  1631  000332  D000               	nop2	
  1632                           
  1633                           ;main.c: 186:                         printf("P%d Dep: %d", i+1 , Pole[i].tires_deployed
      +                          );
  1634  000334  C0E5  F001         	movff	_i,___wmul@multiplier
  1635  000338  C0E6  F002         	movff	_i+1,___wmul@multiplier+1
  1636  00033C  0E00               	movlw	0
  1637  00033E  6E04               	movwf	___wmul@multiplicand+1,c
  1638  000340  0E06               	movlw	6
  1639  000342  6E03               	movwf	___wmul@multiplicand,c
  1640  000344  EC10  F00C         	call	___wmul	;wreg free
  1641  000348  0E80               	movlw	low main@Pole
  1642  00034A  2401               	addwf	?___wmul,w,c
  1643  00034C  6ED9               	movwf	fsr2l,c
  1644  00034E  0E00               	movlw	high main@Pole
  1645  000350  2002               	addwfc	?___wmul+1,w,c
  1646  000352  6EDA               	movwf	fsr2h,c
  1647  000354  CFDE F0C2          	movff	postinc2,_main$1449
  1648  000358  CFDD F0C3          	movff	postdec2,_main$1449+1
  1649                           
  1650                           ;main.c: 186:                         printf("P%d Dep: %d", i+1 , Pole[i].tires_deployed
      +                          );
  1651  00035C  0ECA               	movlw	low STR_18
  1652  00035E  6E6E               	movwf	printf@fmt,c
  1653  000360  0EFF               	movlw	high STR_18
  1654  000362  6E6F               	movwf	printf@fmt+1,c
  1655  000364  0E01               	movlw	1
  1656  000366  0100               	movlb	0	; () banked
  1657  000368  25E5               	addwf	_i& (0+255),w,b
  1658  00036A  6E70               	movwf	?_printf+2,c
  1659  00036C  0E00               	movlw	0
  1660  00036E  21E6               	addwfc	(_i+1)& (0+255),w,b
  1661  000370  6E71               	movwf	?_printf+3,c
  1662  000372  C0C2  F072         	movff	_main$1449,?_printf+4
  1663  000376  C0C3  F073         	movff	_main$1449+1,?_printf+5
  1664  00037A  ECFD  F00B         	call	_printf	;wreg free
  1665  00037E  0EC0               	movlw	192
  1666  000380  EC61  F00C         	call	_lcdInst
  1667                           
  1668                           ;main.c: 188:                         printf("P%d Fin: %d",i+1 , Pole[i].tires_final);
  1669  000384  C0E5  F001         	movff	_i,___wmul@multiplier
  1670  000388  C0E6  F002         	movff	_i+1,___wmul@multiplier+1
  1671  00038C  0E00               	movlw	0
  1672  00038E  6E04               	movwf	___wmul@multiplicand+1,c
  1673  000390  0E06               	movlw	6
  1674  000392  6E03               	movwf	___wmul@multiplicand,c
  1675  000394  EC10  F00C         	call	___wmul	;wreg free
  1676  000398  0E02               	movlw	2
  1677  00039A  2601               	addwf	?___wmul,f,c
  1678  00039C  0E00               	movlw	0
  1679  00039E  2202               	addwfc	?___wmul+1,f,c
  1680  0003A0  0E80               	movlw	low main@Pole
  1681  0003A2  2401               	addwf	?___wmul,w,c
  1682  0003A4  6ED9               	movwf	fsr2l,c
  1683  0003A6  0E00               	movlw	high main@Pole
  1684  0003A8  2002               	addwfc	?___wmul+1,w,c
  1685  0003AA  6EDA               	movwf	fsr2h,c
  1686  0003AC  CFDE F0C2          	movff	postinc2,_main$1449
  1687  0003B0  CFDD F0C3          	movff	postdec2,_main$1449+1
  1688                           
  1689                           ;main.c: 188:                         printf("P%d Fin: %d",i+1 , Pole[i].tires_final);
  1690  0003B4  0EBE               	movlw	low STR_19
  1691  0003B6  6E6E               	movwf	printf@fmt,c
  1692  0003B8  0EFF               	movlw	high STR_19
  1693  0003BA  6E6F               	movwf	printf@fmt+1,c
  1694  0003BC  0E01               	movlw	1
  1695  0003BE  0100               	movlb	0	; () banked
  1696  0003C0  25E5               	addwf	_i& (0+255),w,b
  1697  0003C2  6E70               	movwf	?_printf+2,c
  1698  0003C4  0E00               	movlw	0
  1699  0003C6  21E6               	addwfc	(_i+1)& (0+255),w,b
  1700  0003C8  6E71               	movwf	?_printf+3,c
  1701  0003CA  C0C2  F072         	movff	_main$1449,?_printf+4
  1702  0003CE  C0C3  F073         	movff	_main$1449+1,?_printf+5
  1703  0003D2  ECFD  F00B         	call	_printf	;wreg free
  1704  0003D6  0E90               	movlw	144
  1705  0003D8  EC61  F00C         	call	_lcdInst
  1706                           
  1707                           ;main.c: 190:                         printf("P%d Dist: %d",i+1 , Pole[i].dist_from_star
      +                          t);
  1708  0003DC  C0E5  F001         	movff	_i,___wmul@multiplier
  1709  0003E0  C0E6  F002         	movff	_i+1,___wmul@multiplier+1
  1710  0003E4  0E00               	movlw	0
  1711  0003E6  6E04               	movwf	___wmul@multiplicand+1,c
  1712  0003E8  0E06               	movlw	6
  1713  0003EA  6E03               	movwf	___wmul@multiplicand,c
  1714  0003EC  EC10  F00C         	call	___wmul	;wreg free
  1715  0003F0  0E04               	movlw	4
  1716  0003F2  2601               	addwf	?___wmul,f,c
  1717  0003F4  0E00               	movlw	0
  1718  0003F6  2202               	addwfc	?___wmul+1,f,c
  1719  0003F8  0E80               	movlw	low main@Pole
  1720  0003FA  2401               	addwf	?___wmul,w,c
  1721  0003FC  6ED9               	movwf	fsr2l,c
  1722  0003FE  0E00               	movlw	high main@Pole
  1723  000400  2002               	addwfc	?___wmul+1,w,c
  1724  000402  6EDA               	movwf	fsr2h,c
  1725  000404  CFDE F0C2          	movff	postinc2,_main$1449
  1726  000408  CFDD F0C3          	movff	postdec2,_main$1449+1
  1727                           
  1728                           ;main.c: 190:                         printf("P%d Dist: %d",i+1 , Pole[i].dist_from_star
      +                          t);
  1729  00040C  0EA5               	movlw	low STR_20
  1730  00040E  6E6E               	movwf	printf@fmt,c
  1731  000410  0EFF               	movlw	high STR_20
  1732  000412  6E6F               	movwf	printf@fmt+1,c
  1733  000414  0E01               	movlw	1
  1734  000416  0100               	movlb	0	; () banked
  1735  000418  25E5               	addwf	_i& (0+255),w,b
  1736  00041A  6E70               	movwf	?_printf+2,c
  1737  00041C  0E00               	movlw	0
  1738  00041E  21E6               	addwfc	(_i+1)& (0+255),w,b
  1739  000420  6E71               	movwf	?_printf+3,c
  1740  000422  C0C2  F072         	movff	_main$1449,?_printf+4
  1741  000426  C0C3  F073         	movff	_main$1449+1,?_printf+5
  1742  00042A  ECFD  F00B         	call	_printf	;wreg free
  1743  00042E  0ED0               	movlw	208
  1744  000430  EC61  F00C         	call	_lcdInst
  1745                           
  1746                           ;main.c: 192:                         printf("<*   0-Menu   #>");
  1747  000434  0E20               	movlw	low STR_17
  1748  000436  6E6E               	movwf	printf@fmt,c
  1749  000438  0EFF               	movlw	high STR_17
  1750  00043A  6E6F               	movwf	printf@fmt+1,c
  1751  00043C  ECFD  F00B         	call	_printf	;wreg free
  1752  000440                     l3058:
  1753                           
  1754                           ;main.c: 194:                     if (disp == 11){
  1755  000440  0E0B               	movlw	11
  1756  000442  0100               	movlb	0	; () banked
  1757  000444  19E7               	xorwf	_disp& (0+255),w,b
  1758  000446  11E8               	iorwf	(_disp+1)& (0+255),w,b
  1759  000448  A4D8               	btfss	status,2,c
  1760  00044A  D097               	goto	l3086
  1761                           
  1762                           ; BSR set to: 0
  1763                           ;main.c: 195:                         i = disp - 2;
  1764  00044C  0EFE               	movlw	254
  1765  00044E  25E7               	addwf	_disp& (0+255),w,b
  1766  000450  6FE5               	movwf	_i& (0+255),b
  1767  000452  0EFF               	movlw	255
  1768  000454  21E8               	addwfc	(_disp+1)& (0+255),w,b
  1769  000456  6FE6               	movwf	(_i+1)& (0+255),b
  1770                           
  1771                           ; BSR set to: 0
  1772                           ;main.c: 196:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  1773  000458  0E01               	movlw	1
  1774  00045A  EC61  F00C         	call	_lcdInst
  1775  00045E  0E11               	movlw	17
  1776  000460  6E7A               	movwf	??_main& (0+255),c
  1777  000462  0E3A               	movlw	58
  1778  000464                     u2807:
  1779  000464  2EE8               	decfsz	wreg,f,c
  1780  000466  D7FE               	bra	u2807
  1781  000468  2E7A               	decfsz	??_main& (0+255),f,c
  1782  00046A  D7FC               	bra	u2807
  1783  00046C  D000               	nop2	
  1784                           
  1785                           ;main.c: 197:                         printf("P%d Dep: %d", i+1 , Pole[i].tires_deployed
      +                          );
  1786  00046E  C0E5  F001         	movff	_i,___wmul@multiplier
  1787  000472  C0E6  F002         	movff	_i+1,___wmul@multiplier+1
  1788  000476  0E00               	movlw	0
  1789  000478  6E04               	movwf	___wmul@multiplicand+1,c
  1790  00047A  0E06               	movlw	6
  1791  00047C  6E03               	movwf	___wmul@multiplicand,c
  1792  00047E  EC10  F00C         	call	___wmul	;wreg free
  1793  000482  0E80               	movlw	low main@Pole
  1794  000484  2401               	addwf	?___wmul,w,c
  1795  000486  6ED9               	movwf	fsr2l,c
  1796  000488  0E00               	movlw	high main@Pole
  1797  00048A  2002               	addwfc	?___wmul+1,w,c
  1798  00048C  6EDA               	movwf	fsr2h,c
  1799  00048E  CFDE F0C2          	movff	postinc2,_main$1449
  1800  000492  CFDD F0C3          	movff	postdec2,_main$1449+1
  1801                           
  1802                           ;main.c: 197:                         printf("P%d Dep: %d", i+1 , Pole[i].tires_deployed
      +                          );
  1803  000496  0ECA               	movlw	low STR_18
  1804  000498  6E6E               	movwf	printf@fmt,c
  1805  00049A  0EFF               	movlw	high STR_18
  1806  00049C  6E6F               	movwf	printf@fmt+1,c
  1807  00049E  0E01               	movlw	1
  1808  0004A0  0100               	movlb	0	; () banked
  1809  0004A2  25E5               	addwf	_i& (0+255),w,b
  1810  0004A4  6E70               	movwf	?_printf+2,c
  1811  0004A6  0E00               	movlw	0
  1812  0004A8  21E6               	addwfc	(_i+1)& (0+255),w,b
  1813  0004AA  6E71               	movwf	?_printf+3,c
  1814  0004AC  C0C2  F072         	movff	_main$1449,?_printf+4
  1815  0004B0  C0C3  F073         	movff	_main$1449+1,?_printf+5
  1816  0004B4  ECFD  F00B         	call	_printf	;wreg free
  1817  0004B8  0EC0               	movlw	192
  1818  0004BA  EC61  F00C         	call	_lcdInst
  1819                           
  1820                           ;main.c: 199:                         printf("P%d Fin: %d",i+1 , Pole[i].tires_final);
  1821  0004BE  C0E5  F001         	movff	_i,___wmul@multiplier
  1822  0004C2  C0E6  F002         	movff	_i+1,___wmul@multiplier+1
  1823  0004C6  0E00               	movlw	0
  1824  0004C8  6E04               	movwf	___wmul@multiplicand+1,c
  1825  0004CA  0E06               	movlw	6
  1826  0004CC  6E03               	movwf	___wmul@multiplicand,c
  1827  0004CE  EC10  F00C         	call	___wmul	;wreg free
  1828  0004D2  0E02               	movlw	2
  1829  0004D4  2601               	addwf	?___wmul,f,c
  1830  0004D6  0E00               	movlw	0
  1831  0004D8  2202               	addwfc	?___wmul+1,f,c
  1832  0004DA  0E80               	movlw	low main@Pole
  1833  0004DC  2401               	addwf	?___wmul,w,c
  1834  0004DE  6ED9               	movwf	fsr2l,c
  1835  0004E0  0E00               	movlw	high main@Pole
  1836  0004E2  2002               	addwfc	?___wmul+1,w,c
  1837  0004E4  6EDA               	movwf	fsr2h,c
  1838  0004E6  CFDE F0C2          	movff	postinc2,_main$1449
  1839  0004EA  CFDD F0C3          	movff	postdec2,_main$1449+1
  1840                           
  1841                           ;main.c: 199:                         printf("P%d Fin: %d",i+1 , Pole[i].tires_final);
  1842  0004EE  0EBE               	movlw	low STR_19
  1843  0004F0  6E6E               	movwf	printf@fmt,c
  1844  0004F2  0EFF               	movlw	high STR_19
  1845  0004F4  6E6F               	movwf	printf@fmt+1,c
  1846  0004F6  0E01               	movlw	1
  1847  0004F8  0100               	movlb	0	; () banked
  1848  0004FA  25E5               	addwf	_i& (0+255),w,b
  1849  0004FC  6E70               	movwf	?_printf+2,c
  1850  0004FE  0E00               	movlw	0
  1851  000500  21E6               	addwfc	(_i+1)& (0+255),w,b
  1852  000502  6E71               	movwf	?_printf+3,c
  1853  000504  C0C2  F072         	movff	_main$1449,?_printf+4
  1854  000508  C0C3  F073         	movff	_main$1449+1,?_printf+5
  1855  00050C  ECFD  F00B         	call	_printf	;wreg free
  1856  000510  0E90               	movlw	144
  1857  000512  EC61  F00C         	call	_lcdInst
  1858                           
  1859                           ;main.c: 201:                         printf("P%d Dist: %d",i+1 , Pole[i].dist_from_star
      +                          t);
  1860  000516  C0E5  F001         	movff	_i,___wmul@multiplier
  1861  00051A  C0E6  F002         	movff	_i+1,___wmul@multiplier+1
  1862  00051E  0E00               	movlw	0
  1863  000520  6E04               	movwf	___wmul@multiplicand+1,c
  1864  000522  0E06               	movlw	6
  1865  000524  6E03               	movwf	___wmul@multiplicand,c
  1866  000526  EC10  F00C         	call	___wmul	;wreg free
  1867  00052A  0E04               	movlw	4
  1868  00052C  2601               	addwf	?___wmul,f,c
  1869  00052E  0E00               	movlw	0
  1870  000530  2202               	addwfc	?___wmul+1,f,c
  1871  000532  0E80               	movlw	low main@Pole
  1872  000534  2401               	addwf	?___wmul,w,c
  1873  000536  6ED9               	movwf	fsr2l,c
  1874  000538  0E00               	movlw	high main@Pole
  1875  00053A  2002               	addwfc	?___wmul+1,w,c
  1876  00053C  6EDA               	movwf	fsr2h,c
  1877  00053E  CFDE F0C2          	movff	postinc2,_main$1449
  1878  000542  CFDD F0C3          	movff	postdec2,_main$1449+1
  1879                           
  1880                           ;main.c: 201:                         printf("P%d Dist: %d",i+1 , Pole[i].dist_from_star
      +                          t);
  1881  000546  0EA5               	movlw	low STR_20
  1882  000548  6E6E               	movwf	printf@fmt,c
  1883  00054A  0EFF               	movlw	high STR_20
  1884  00054C  6E6F               	movwf	printf@fmt+1,c
  1885  00054E  0E01               	movlw	1
  1886  000550  0100               	movlb	0	; () banked
  1887  000552  25E5               	addwf	_i& (0+255),w,b
  1888  000554  6E70               	movwf	?_printf+2,c
  1889  000556  0E00               	movlw	0
  1890  000558  21E6               	addwfc	(_i+1)& (0+255),w,b
  1891  00055A  6E71               	movwf	?_printf+3,c
  1892  00055C  C0C2  F072         	movff	_main$1449,?_printf+4
  1893  000560  C0C3  F073         	movff	_main$1449+1,?_printf+5
  1894  000564  ECFD  F00B         	call	_printf	;wreg free
  1895  000568  0ED0               	movlw	208
  1896  00056A  EC61  F00C         	call	_lcdInst
  1897                           
  1898                           ;main.c: 203:                         printf("<*   0-Menu     ");
  1899  00056E  0EFE               	movlw	low STR_25
  1900  000570  6E6E               	movwf	printf@fmt,c
  1901  000572  0EFE               	movlw	high STR_25
  1902  000574  6E6F               	movwf	printf@fmt+1,c
  1903  000576  ECFD  F00B         	call	_printf	;wreg free
  1904  00057A                     l3086:
  1905                           
  1906                           ;main.c: 223:             if (temp_int == 3){
  1907  00057A  0E03               	movlw	3
  1908  00057C  0100               	movlb	0	; () banked
  1909  00057E  19ED               	xorwf	_temp_int& (0+255),w,b
  1910  000580  11EE               	iorwf	(_temp_int+1)& (0+255),w,b
  1911  000582  A4D8               	btfss	status,2,c
  1912  000584  D58C               	goto	l2910
  1913                           
  1914                           ; BSR set to: 0
  1915                           ;main.c: 224:                 state = 0;
  1916  000586  0E00               	movlw	0
  1917  000588  6FEA               	movwf	(_state+1)& (0+255),b
  1918  00058A  0E00               	movlw	0
  1919  00058C  6FE9               	movwf	_state& (0+255),b
  1920                           
  1921                           ;main.c: 225:                 tick = 0;
  1922  00058E  0E00               	movlw	0
  1923  000590  6FBD               	movwf	main@tick& (0+255),b
  1924  000592  0E00               	movlw	0
  1925  000594  6FBE               	movwf	(main@tick+1)& (0+255),b
  1926  000596  0E00               	movlw	0
  1927  000598  6FBF               	movwf	(main@tick+2)& (0+255),b
  1928  00059A  0E00               	movlw	0
  1929  00059C  6FC0               	movwf	(main@tick+3)& (0+255),b
  1930                           
  1931                           ;main.c: 226:                 while(~key_was_pressed){
  1932  00059E  D09A               	goto	l3136
  1933  0005A0                     l3090:
  1934                           
  1935                           ; BSR set to: 0
  1936                           ;main.c: 227:                     if(tick % 1000 == 0){
  1937  0005A0  C0BD  F001         	movff	main@tick,___llmod@dividend
  1938  0005A4  C0BE  F002         	movff	main@tick+1,___llmod@dividend+1
  1939  0005A8  C0BF  F003         	movff	main@tick+2,___llmod@dividend+2
  1940  0005AC  C0C0  F004         	movff	main@tick+3,___llmod@dividend+3
  1941  0005B0  0EE8               	movlw	232
  1942  0005B2  6E05               	movwf	___llmod@divisor,c
  1943  0005B4  0E03               	movlw	3
  1944  0005B6  6E06               	movwf	___llmod@divisor+1,c
  1945  0005B8  0E00               	movlw	0
  1946  0005BA  6E07               	movwf	___llmod@divisor+2,c
  1947  0005BC  0E00               	movlw	0
  1948  0005BE  6E08               	movwf	___llmod@divisor+3,c
  1949  0005C0  EC45  F00A         	call	___llmod	;wreg free
  1950  0005C4  5001               	movf	?___llmod,w,c
  1951  0005C6  1002               	iorwf	?___llmod+1,w,c
  1952  0005C8  1003               	iorwf	?___llmod+2,w,c
  1953  0005CA  1004               	iorwf	?___llmod+3,w,c
  1954  0005CC  A4D8               	btfss	status,2,c
  1955  0005CE  D07B               	goto	l3134
  1956                           
  1957                           ;main.c: 228:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  1958  0005D0  0E01               	movlw	1
  1959  0005D2  EC61  F00C         	call	_lcdInst
  1960  0005D6  0E11               	movlw	17
  1961  0005D8  6E7A               	movwf	??_main& (0+255),c
  1962  0005DA  0E3A               	movlw	58
  1963  0005DC                     u2817:
  1964  0005DC  2EE8               	decfsz	wreg,f,c
  1965  0005DE  D7FE               	bra	u2817
  1966  0005E0  2E7A               	decfsz	??_main& (0+255),f,c
  1967  0005E2  D7FC               	bra	u2817
  1968  0005E4  D000               	nop2	
  1969                           
  1970                           ;main.c: 229:                         printf("DATE & TIME");
  1971  0005E6  0EB2               	movlw	low STR_26
  1972  0005E8  6E6E               	movwf	printf@fmt,c
  1973  0005EA  0EFF               	movlw	high STR_26
  1974  0005EC  6E6F               	movwf	printf@fmt+1,c
  1975  0005EE  ECFD  F00B         	call	_printf	;wreg free
  1976                           
  1977                           ;main.c: 230:                         I2C_Master_Init(100000);
  1978  0005F2  0EA0               	movlw	160
  1979  0005F4  6E0E               	movwf	I2C_Master_Init@clockFreq,c
  1980  0005F6  0E86               	movlw	134
  1981  0005F8  6E0F               	movwf	I2C_Master_Init@clockFreq+1,c
  1982  0005FA  0E01               	movlw	1
  1983  0005FC  6E10               	movwf	I2C_Master_Init@clockFreq+2,c
  1984  0005FE  0E00               	movlw	0
  1985  000600  6E11               	movwf	I2C_Master_Init@clockFreq+3,c
  1986  000602  EC78  F00A         	call	_I2C_Master_Init	;wreg free
  1987                           
  1988                           ;main.c: 231:                         I2C_Master_Start();
  1989  000606  EC75  F00C         	call	_I2C_Master_Start	;wreg free
  1990                           
  1991                           ;main.c: 232:                         I2C_Master_Write(0b11010000);
  1992  00060A  0E00               	movlw	0
  1993  00060C  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
  1994  00060E  0ED0               	movlw	208
  1995  000610  6E02               	movwf	I2C_Master_Write@byteToWrite,c
  1996  000612  EC67  F00C         	call	_I2C_Master_Write	;wreg free
  1997                           
  1998                           ;main.c: 233:                         I2C_Master_Write(0x00);
  1999  000616  0E00               	movlw	0
  2000  000618  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
  2001  00061A  0E00               	movlw	0
  2002  00061C  6E02               	movwf	I2C_Master_Write@byteToWrite,c
  2003  00061E  EC67  F00C         	call	_I2C_Master_Write	;wreg free
  2004                           
  2005                           ;main.c: 234:                         I2C_Master_Stop();
  2006  000622  EC71  F00C         	call	_I2C_Master_Stop	;wreg free
  2007                           
  2008                           ;main.c: 237:                         I2C_Master_Start();
  2009  000626  EC75  F00C         	call	_I2C_Master_Start	;wreg free
  2010                           
  2011                           ;main.c: 238:                         I2C_Master_Write(0b11010001);
  2012  00062A  0E00               	movlw	0
  2013  00062C  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
  2014  00062E  0ED1               	movlw	209
  2015  000630  6E02               	movwf	I2C_Master_Write@byteToWrite,c
  2016  000632  EC67  F00C         	call	_I2C_Master_Write	;wreg free
  2017                           
  2018                           ;main.c: 239:                         for(unsigned char i = 0; i < 6; i++){
  2019  000636  0E00               	movlw	0
  2020  000638  0100               	movlb	0	; () banked
  2021  00063A  6FC1               	movwf	main@i& (0+255),b
  2022  00063C                     l3114:
  2023                           
  2024                           ; BSR set to: 0
  2025  00063C  0E05               	movlw	5
  2026  00063E  65C1               	cpfsgt	main@i& (0+255),b
  2027  000640  D001               	goto	l3118
  2028  000642  D00D               	goto	l3124
  2029  000644                     l3118:
  2030                           
  2031                           ; BSR set to: 0
  2032                           ;main.c: 240:                             time[i] = I2C_Master_Read(0);
  2033  000644  0ED8               	movlw	low _time
  2034  000646  25C1               	addwf	main@i& (0+255),w,b
  2035  000648  6ED9               	movwf	fsr2l,c
  2036  00064A  6ADA               	clrf	fsr2h,c
  2037  00064C  0E00               	movlw	high _time
  2038  00064E  22DA               	addwfc	fsr2h,f,c
  2039  000650  0E00               	movlw	0
  2040  000652  EC23  F00C         	call	_I2C_Master_Read
  2041  000656  6EDF               	movwf	indf2,c
  2042                           
  2043                           ;main.c: 241:                         }
  2044  000658  0100               	movlb	0	; () banked
  2045  00065A  2BC1               	incf	main@i& (0+255),f,b
  2046  00065C  D7EF               	goto	l3114
  2047  00065E                     l3124:
  2048                           
  2049                           ; BSR set to: 0
  2050                           ;main.c: 242:                         time[6] = I2C_Master_Read(1);
  2051  00065E  0E01               	movlw	1
  2052  000660  EC23  F00C         	call	_I2C_Master_Read
  2053  000664  0100               	movlb	0	; () banked
  2054  000666  6FDE               	movwf	(_time+6)& (0+255),b
  2055                           
  2056                           ;main.c: 243:                         I2C_Master_Stop();
  2057  000668  EC71  F00C         	call	_I2C_Master_Stop	;wreg free
  2058  00066C  0EC0               	movlw	192
  2059  00066E  EC61  F00C         	call	_lcdInst
  2060                           
  2061                           ;main.c: 247:                         printf("%02x/%02x/%02x", time[6],time[5],time[4]);
  2062  000672  0E6D               	movlw	low STR_27
  2063  000674  6E6E               	movwf	printf@fmt,c
  2064  000676  0EFF               	movlw	high STR_27
  2065  000678  6E6F               	movwf	printf@fmt+1,c
  2066  00067A  C0DE  F070         	movff	_time+6,?_printf+2
  2067  00067E  6A71               	clrf	?_printf+3,c
  2068  000680  C0DD  F072         	movff	_time+5,?_printf+4
  2069  000684  6A73               	clrf	?_printf+5,c
  2070  000686  C0DC  F074         	movff	_time+4,?_printf+6
  2071  00068A  6A75               	clrf	?_printf+7,c
  2072  00068C  ECFD  F00B         	call	_printf	;wreg free
  2073  000690  0E90               	movlw	144
  2074  000692  EC61  F00C         	call	_lcdInst
  2075                           
  2076                           ;main.c: 249:                         printf("%02x:%02x:%02x", time[2],time[1],time[0]);
  2077  000696  0E7C               	movlw	low STR_28
  2078  000698  6E6E               	movwf	printf@fmt,c
  2079  00069A  0EFF               	movlw	high STR_28
  2080  00069C  6E6F               	movwf	printf@fmt+1,c
  2081  00069E  C0DA  F070         	movff	_time+2,?_printf+2
  2082  0006A2  6A71               	clrf	?_printf+3,c
  2083  0006A4  C0D9  F072         	movff	_time+1,?_printf+4
  2084  0006A8  6A73               	clrf	?_printf+5,c
  2085  0006AA  C0D8  F074         	movff	_time,?_printf+6
  2086  0006AE  6A75               	clrf	?_printf+7,c
  2087  0006B0  ECFD  F00B         	call	_printf	;wreg free
  2088  0006B4  0ED0               	movlw	208
  2089  0006B6  EC61  F00C         	call	_lcdInst
  2090                           
  2091                           ;main.c: 251:                         printf("     0-Menu     ");
  2092  0006BA  0EED               	movlw	low STR_8
  2093  0006BC  6E6E               	movwf	printf@fmt,c
  2094  0006BE  0EFE               	movlw	high STR_8
  2095  0006C0  6E6F               	movwf	printf@fmt+1,c
  2096  0006C2  ECFD  F00B         	call	_printf	;wreg free
  2097  0006C6                     l3134:
  2098                           
  2099                           ;main.c: 254:                     tick++;
  2100  0006C6  0E01               	movlw	1
  2101  0006C8  0100               	movlb	0	; () banked
  2102  0006CA  27BD               	addwf	main@tick& (0+255),f,b
  2103  0006CC  0E00               	movlw	0
  2104  0006CE  23BE               	addwfc	(main@tick+1)& (0+255),f,b
  2105  0006D0  23BF               	addwfc	(main@tick+2)& (0+255),f,b
  2106  0006D2  23C0               	addwfc	(main@tick+3)& (0+255),f,b
  2107  0006D4                     l3136:
  2108                           
  2109                           ; BSR set to: 0
  2110                           ;main.c: 226:                 while(~key_was_pressed){
  2111  0006D4  05F2               	decf	_key_was_pressed& (0+255),w,b	;volatile
  2112  0006D6  B4D8               	btfsc	status,2,c
  2113  0006D8  D4E2               	goto	l2910
  2114  0006DA  D762               	goto	l3090
  2115  0006DC                     __end_of_main:
  2116                           	opt callstack 0
  2117                           
  2118 ;; *************** function _printf *****************
  2119 ;; Defined at:
  2120 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  2121 ;; Parameters:    Size  Location     Type
  2122 ;;  fmt             2  109[COMRAM] PTR const unsigned char 
  2123 ;;		 -> STR_33(15), STR_32(15), STR_31(15), STR_30(15), 
  2124 ;;		 -> STR_29(17), STR_28(15), STR_27(15), STR_26(12), 
  2125 ;;		 -> STR_25(17), STR_24(13), STR_23(12), STR_22(12), 
  2126 ;;		 -> STR_21(17), STR_20(13), STR_19(12), STR_18(12), 
  2127 ;;		 -> STR_17(17), STR_16(13), STR_15(13), STR_14(17), 
  2128 ;;		 -> STR_13(9), STR_12(9), STR_11(16), STR_10(9), 
  2129 ;;		 -> STR_9(9), STR_8(17), STR_7(15), STR_6(15), 
  2130 ;;		 -> STR_5(12), STR_4(10), STR_3(15), STR_2(12), 
  2131 ;;		 -> STR_1(10), 
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;  ap              2  119[COMRAM] PTR void [1]
  2134 ;;		 -> ?_printf(2), 
  2135 ;;  ret             2    0        int 
  2136 ;; Return value:  Size  Location     Type
  2137 ;;                  2  109[COMRAM] int 
  2138 ;; Registers used:
  2139 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2140 ;; Tracked objects:
  2141 ;;		On entry : 0/0
  2142 ;;		On exit  : 0/0
  2143 ;;		Unchanged: 0/0
  2144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2145 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2146 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2148 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2149 ;;Total ram usage:       12 bytes
  2150 ;; Hardware stack levels used:    1
  2151 ;; Hardware stack levels required when called:   11
  2152 ;; This function calls:
  2153 ;;		_vfprintf
  2154 ;; This function is called by:
  2155 ;;		_main
  2156 ;;		_RTC_main
  2157 ;;		_i2c_mine
  2158 ;; This function uses a non-reentrant model
  2159 ;;
  2160                           
  2161                           	psect	text1
  2162  0017FA                     __ptext1:
  2163                           	opt callstack 0
  2164  0017FA                     _printf:
  2165                           	opt callstack 19
  2166                           
  2167                           ; BSR set to: 0
  2168                           ;incstack = 0
  2169  0017FA  0E70               	movlw	low (?_printf+2)
  2170  0017FC  6E78               	movwf	printf@ap,c
  2171  0017FE  0E00               	movlw	high (?_printf+2)
  2172  001800  6E79               	movwf	printf@ap+1,c
  2173  001802  0E00               	movlw	0
  2174  001804  6E66               	movwf	vfprintf@fp,c
  2175  001806  0E00               	movlw	0
  2176  001808  6E67               	movwf	vfprintf@fp+1,c
  2177  00180A  C06E  F068         	movff	printf@fmt,vfprintf@fmt
  2178  00180E  C06F  F069         	movff	printf@fmt+1,vfprintf@fmt+1
  2179  001812  0E78               	movlw	low printf@ap
  2180  001814  6E6A               	movwf	vfprintf@ap,c
  2181  001816  0E00               	movlw	high printf@ap
  2182  001818  6E6B               	movwf	vfprintf@ap+1,c
  2183  00181A  ECA6  F00A         	call	_vfprintf	;wreg free
  2184  00181E  0012               	return		;funcret
  2185  001820                     __end_of_printf:
  2186                           	opt callstack 0
  2187                           
  2188 ;; *************** function _vfprintf *****************
  2189 ;; Defined at:
  2190 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2191 ;; Parameters:    Size  Location     Type
  2192 ;;  fp              2  101[COMRAM] PTR struct _IO_FILE
  2193 ;;		 -> NULL(0), 
  2194 ;;  fmt             2  103[COMRAM] PTR const unsigned char 
  2195 ;;		 -> STR_33(15), STR_32(15), STR_31(15), STR_30(15), 
  2196 ;;		 -> STR_29(17), STR_28(15), STR_27(15), STR_26(12), 
  2197 ;;		 -> STR_25(17), STR_24(13), STR_23(12), STR_22(12), 
  2198 ;;		 -> STR_21(17), STR_20(13), STR_19(12), STR_18(12), 
  2199 ;;		 -> STR_17(17), STR_16(13), STR_15(13), STR_14(17), 
  2200 ;;		 -> STR_13(9), STR_12(9), STR_11(16), STR_10(9), 
  2201 ;;		 -> STR_9(9), STR_8(17), STR_7(15), STR_6(15), 
  2202 ;;		 -> STR_5(12), STR_4(10), STR_3(15), STR_2(12), 
  2203 ;;		 -> STR_1(10), 
  2204 ;;  ap              2  105[COMRAM] PTR PTR void 
  2205 ;;		 -> printf@ap(2), 
  2206 ;; Auto vars:     Size  Location     Type
  2207 ;;  cfmt            2  107[COMRAM] PTR unsigned char 
  2208 ;;		 -> STR_33(15), STR_32(15), STR_31(15), STR_30(15), 
  2209 ;;		 -> STR_29(17), STR_28(15), STR_27(15), STR_26(12), 
  2210 ;;		 -> STR_25(17), STR_24(13), STR_23(12), STR_22(12), 
  2211 ;;		 -> STR_21(17), STR_20(13), STR_19(12), STR_18(12), 
  2212 ;;		 -> STR_17(17), STR_16(13), STR_15(13), STR_14(17), 
  2213 ;;		 -> STR_13(9), STR_12(9), STR_11(16), STR_10(9), 
  2214 ;;		 -> STR_9(9), STR_8(17), STR_7(15), STR_6(15), 
  2215 ;;		 -> STR_5(12), STR_4(10), STR_3(15), STR_2(12), 
  2216 ;;		 -> STR_1(10), 
  2217 ;; Return value:  Size  Location     Type
  2218 ;;                  2  101[COMRAM] int 
  2219 ;; Registers used:
  2220 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2221 ;; Tracked objects:
  2222 ;;		On entry : 0/0
  2223 ;;		On exit  : 0/0
  2224 ;;		Unchanged: 0/0
  2225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2226 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2227 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2229 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2230 ;;Total ram usage:        8 bytes
  2231 ;; Hardware stack levels used:    1
  2232 ;; Hardware stack levels required when called:   10
  2233 ;; This function calls:
  2234 ;;		_vfpfcnvrt
  2235 ;; This function is called by:
  2236 ;;		_printf
  2237 ;; This function uses a non-reentrant model
  2238 ;;
  2239                           
  2240                           	psect	text2
  2241  00154C                     __ptext2:
  2242                           	opt callstack 0
  2243  00154C                     _vfprintf:
  2244                           	opt callstack 19
  2245                           
  2246                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  2247                           
  2248                           ;incstack = 0
  2249  00154C  C068  F06C         	movff	vfprintf@fmt,vfprintf@cfmt
  2250  001550  C069  F06D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2251                           
  2252                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  2253  001554  0E00               	movlw	0
  2254  001556  0100               	movlb	0	; () banked
  2255  001558  6FE0               	movwf	(_nout+1)& (0+255),b
  2256  00155A  0E00               	movlw	0
  2257  00155C  6FDF               	movwf	_nout& (0+255),b
  2258                           
  2259                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2260  00155E  D013               	goto	l2774
  2261  001560                     l2772:
  2262                           
  2263                           ; BSR set to: 0
  2264                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  2265  001560  C066  F047         	movff	vfprintf@fp,vfpfcnvrt@fp
  2266  001564  C067  F048         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2267  001568  0E6C               	movlw	low vfprintf@cfmt
  2268  00156A  6E49               	movwf	vfpfcnvrt@fmt,c
  2269  00156C  0E00               	movlw	high vfprintf@cfmt
  2270  00156E  6E4A               	movwf	vfpfcnvrt@fmt+1,c
  2271  001570  C06A  F04B         	movff	vfprintf@ap,vfpfcnvrt@ap
  2272  001574  C06B  F04C         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2273  001578  EC6E  F003         	call	_vfpfcnvrt	;wreg free
  2274  00157C  5047               	movf	?_vfpfcnvrt,w,c
  2275  00157E  0100               	movlb	0	; () banked
  2276  001580  27DF               	addwf	_nout& (0+255),f,b
  2277  001582  5048               	movf	?_vfpfcnvrt+1,w,c
  2278  001584  23E0               	addwfc	(_nout+1)& (0+255),f,b
  2279  001586                     l2774:
  2280                           
  2281                           ; BSR set to: 0
  2282                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2283  001586  C06C  FFF6         	movff	vfprintf@cfmt,tblptrl
  2284  00158A  C06D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2285  00158E                     	if	0	;tblptru may be non-zero
  2286  00158E                     	endif
  2287  00158E                     	if	0	;tblptru may be non-zero
  2288  00158E                     	endif
  2289  00158E  0008               	tblrd		*
  2290  001590  50F5               	movf	tablat,w,c
  2291  001592  0900               	iorlw	0
  2292  001594  A4D8               	btfss	status,2,c
  2293  001596  D7E4               	goto	l2772
  2294                           
  2295                           ; BSR set to: 0
  2296                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  2297  001598  C0DF  F066         	movff	_nout,?_vfprintf
  2298  00159C  C0E0  F067         	movff	_nout+1,?_vfprintf+1
  2299                           
  2300                           ; BSR set to: 0
  2301  0015A0  0012               	return		;funcret
  2302  0015A2                     __end_of_vfprintf:
  2303                           	opt callstack 0
  2304                           
  2305 ;; *************** function _vfpfcnvrt *****************
  2306 ;; Defined at:
  2307 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2308 ;; Parameters:    Size  Location     Type
  2309 ;;  fp              2   70[COMRAM] PTR struct _IO_FILE
  2310 ;;		 -> NULL(0), 
  2311 ;;  fmt             2   72[COMRAM] PTR PTR unsigned char 
  2312 ;;		 -> vfprintf@cfmt(2), 
  2313 ;;  ap              2   74[COMRAM] PTR PTR void 
  2314 ;;		 -> printf@ap(2), 
  2315 ;; Auto vars:     Size  Location     Type
  2316 ;;  llu             8   88[COMRAM] unsigned long long 
  2317 ;;  ll              8   80[COMRAM] long long 
  2318 ;;  f               4    0        long long 
  2319 ;;  vp              3    0        PTR void 
  2320 ;;  ct              3    0        unsigned char [3]
  2321 ;;  cp              3    0        PTR unsigned char 
  2322 ;;  done            2   96[COMRAM] int 
  2323 ;;  i               2    0        int 
  2324 ;;  c               1  100[COMRAM] unsigned char 
  2325 ;; Return value:  Size  Location     Type
  2326 ;;                  2   70[COMRAM] int 
  2327 ;; Registers used:
  2328 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2329 ;; Tracked objects:
  2330 ;;		On entry : 0/0
  2331 ;;		On exit  : 0/0
  2332 ;;		Unchanged: 0/0
  2333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2334 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2335 ;;      Locals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2336 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2337 ;;      Totals:        31       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2338 ;;Total ram usage:       31 bytes
  2339 ;; Hardware stack levels used:    1
  2340 ;; Hardware stack levels required when called:    9
  2341 ;; This function calls:
  2342 ;;		_atoi
  2343 ;;		_dtoa
  2344 ;;		_fputc
  2345 ;;		_isdigit
  2346 ;;		_xtoa
  2347 ;; This function is called by:
  2348 ;;		_vfprintf
  2349 ;; This function uses a non-reentrant model
  2350 ;;
  2351                           
  2352                           	psect	text3
  2353  0006DC                     __ptext3:
  2354                           	opt callstack 0
  2355  0006DC                     _vfpfcnvrt:
  2356                           	opt callstack 19
  2357                           
  2358                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  2359                           
  2360                           ; BSR set to: 0
  2361                           ;incstack = 0
  2362  0006DC  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2363  0006E0  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2364  0006E4  CFDE FFF6          	movff	postinc2,tblptrl
  2365  0006E8  CFDD FFF7          	movff	postdec2,tblptrh
  2366  0006EC                     	if	0	;tblptru may be non-zero
  2367  0006EC                     	endif
  2368  0006EC                     	if	0	;tblptru may be non-zero
  2369  0006EC                     	endif
  2370  0006EC  0008               	tblrd		*
  2371  0006EE  50F5               	movf	tablat,w,c
  2372  0006F0  0A25               	xorlw	37
  2373  0006F2  A4D8               	btfss	status,2,c
  2374  0006F4  D1AC               	goto	l2748
  2375                           
  2376                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  2377  0006F6  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2378  0006FA  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2379  0006FE  2ADE               	incf	postinc2,f,c
  2380  000700  0E00               	movlw	0
  2381  000702  22DD               	addwfc	postdec2,f,c
  2382                           
  2383                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  2384  000704  0E00               	movlw	0
  2385  000706  0100               	movlb	0	; () banked
  2386  000708  6FE2               	movwf	(_width+1)& (0+255),b
  2387  00070A  0E00               	movlw	0
  2388  00070C  6FE1               	movwf	_width& (0+255),b
  2389  00070E  C0E1  F07D         	movff	_width,_flags
  2390  000712  C0E2  F07E         	movff	_width+1,_flags+1
  2391                           
  2392                           ; BSR set to: 0
  2393                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  2394  000716  687B               	setf	_prec,c
  2395  000718  687C               	setf	_prec+1,c
  2396                           
  2397                           ; BSR set to: 0
  2398                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  2399  00071A  0E00               	movlw	0
  2400  00071C  6E62               	movwf	vfpfcnvrt@done+1,c
  2401  00071E  0E00               	movlw	0
  2402  000720  D014               	goto	L1
  2403  000722                     l2660:
  2404                           
  2405                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  2406  000722  807D               	bsf	_flags,0,c
  2407  000724                     l2662:
  2408                           
  2409                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  2410  000724  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2411  000728  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2412  00072C  2ADE               	incf	postinc2,f,c
  2413  00072E  0E00               	movlw	0
  2414  000730  22DD               	addwfc	postdec2,f,c
  2415                           
  2416                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  2417  000732  D02E               	goto	l2686
  2418  000734                     l2664:
  2419                           
  2420                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  2421  000734  827D               	bsf	_flags,1,c
  2422  000736  D7F6               	goto	l2662
  2423  000738                     l2668:
  2424                           
  2425                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  2426  000738  847D               	bsf	_flags,2,c
  2427  00073A  D7F4               	goto	l2662
  2428  00073C                     l2672:
  2429                           
  2430                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  2431  00073C  867D               	bsf	_flags,3,c
  2432  00073E  D7F2               	goto	l2662
  2433  000740                     l2676:
  2434                           
  2435                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  2436  000740  887D               	bsf	_flags,4,c
  2437  000742  D7F0               	goto	l2662
  2438  000744                     l2680:
  2439                           
  2440                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  2441  000744  0E00               	movlw	0
  2442  000746  6E62               	movwf	vfpfcnvrt@done+1,c
  2443  000748  0E01               	movlw	1
  2444  00074A                     L1:
  2445  00074A  6E61               	movwf	vfpfcnvrt@done,c
  2446                           
  2447                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  2448  00074C  D021               	goto	l2686
  2449  00074E                     l2684:
  2450  00074E  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2451  000752  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2452  000756  CFDE FFF6          	movff	postinc2,tblptrl
  2453  00075A  CFDD FFF7          	movff	postdec2,tblptrh
  2454  00075E                     	if	0	;tblptru may be non-zero
  2455  00075E                     	endif
  2456  00075E                     	if	0	;tblptru may be non-zero
  2457  00075E                     	endif
  2458  00075E  0008               	tblrd		*
  2459  000760  50F5               	movf	tablat,w,c
  2460  000762  6E4D               	movwf	??_vfpfcnvrt& (0+255),c
  2461  000764  6A4E               	clrf	(??_vfpfcnvrt+1)& (0+255),c
  2462                           
  2463                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2464                           ; Switch size 1, requested type "simple"
  2465                           ; Number of cases is 1, Range of values is 0 to 0
  2466                           ; switch strategies available:
  2467                           ; Name         Instructions Cycles
  2468                           ; simple_byte            4     3 (average)
  2469                           ;	Chosen strategy is simple_byte
  2470  000766  504E               	movf	??_vfpfcnvrt+1,w,c
  2471  000768  0A00               	xorlw	0	; case 0
  2472  00076A  A4D8               	btfss	status,2,c
  2473  00076C  D7EB               	goto	l2680
  2474                           
  2475                           ; Switch size 1, requested type "simple"
  2476                           ; Number of cases is 5, Range of values is 32 to 48
  2477                           ; switch strategies available:
  2478                           ; Name         Instructions Cycles
  2479                           ; simple_byte           16     9 (average)
  2480                           ;	Chosen strategy is simple_byte
  2481  00076E  504D               	movf	??_vfpfcnvrt,w,c
  2482  000770  0A20               	xorlw	32	; case 32
  2483  000772  B4D8               	btfsc	status,2,c
  2484  000774  D7E3               	goto	l2672
  2485  000776  0A03               	xorlw	3	; case 35
  2486  000778  B4D8               	btfsc	status,2,c
  2487  00077A  D7E2               	goto	l2676
  2488  00077C  0A08               	xorlw	8	; case 43
  2489  00077E  B4D8               	btfsc	status,2,c
  2490  000780  D7DB               	goto	l2668
  2491  000782  0A06               	xorlw	6	; case 45
  2492  000784  B4D8               	btfsc	status,2,c
  2493  000786  D7CD               	goto	l2660
  2494  000788  0A1D               	xorlw	29	; case 48
  2495  00078A  B4D8               	btfsc	status,2,c
  2496  00078C  D7D3               	goto	l2664
  2497  00078E  D7DA               	goto	l2680
  2498  000790                     l2686:
  2499                           
  2500                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  2501  000790  5061               	movf	vfpfcnvrt@done,w,c
  2502  000792  1062               	iorwf	vfpfcnvrt@done+1,w,c
  2503  000794  B4D8               	btfsc	status,2,c
  2504  000796  D7DB               	goto	l2684
  2505                           
  2506                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  2507  000798  B07D               	btfsc	_flags,0,c
  2508                           
  2509                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  2510  00079A  927D               	bcf	_flags,1,c
  2511                           
  2512                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  2513  00079C  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2514  0007A0  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2515  0007A4  CFDE FFF6          	movff	postinc2,tblptrl
  2516  0007A8  CFDD FFF7          	movff	postdec2,tblptrh
  2517  0007AC                     	if	0	;tblptru may be non-zero
  2518  0007AC                     	endif
  2519  0007AC                     	if	0	;tblptru may be non-zero
  2520  0007AC                     	endif
  2521  0007AC  0008               	tblrd		*
  2522  0007AE  50F5               	movf	tablat,w,c
  2523  0007B0  0A2A               	xorlw	42
  2524  0007B2  A4D8               	btfss	status,2,c
  2525  0007B4  D024               	goto	l2698
  2526                           
  2527                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  2528  0007B6  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2529  0007BA  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2530  0007BE  2ADE               	incf	postinc2,f,c
  2531  0007C0  0E00               	movlw	0
  2532  0007C2  22DD               	addwfc	postdec2,f,c
  2533                           
  2534                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2535  0007C4  C04B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2536  0007C8  C04C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2537  0007CC  CFDF F04D          	movff	indf2,??_vfpfcnvrt
  2538  0007D0  0E02               	movlw	2
  2539  0007D2  26DE               	addwf	postinc2,f,c
  2540  0007D4  CFDF F04E          	movff	indf2,??_vfpfcnvrt+1
  2541  0007D8  0E00               	movlw	0
  2542  0007DA  22DD               	addwfc	postdec2,f,c
  2543  0007DC  C04D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2544  0007E0  C04E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2545  0007E4  CFDE F0E1          	movff	postinc2,_width
  2546  0007E8  CFDD F0E2          	movff	postdec2,_width+1
  2547                           
  2548                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  2549  0007EC  0100               	movlb	0	; () banked
  2550  0007EE  AFE2               	btfss	(_width+1)& (0+255),7,b
  2551  0007F0  D03F               	goto	u2210
  2552                           
  2553                           ; BSR set to: 0
  2554                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  2555  0007F2  807D               	bsf	_flags,0,c
  2556                           
  2557                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  2558  0007F4  6DE1               	negf	_width& (0+255),b
  2559  0007F6  1FE2               	comf	(_width+1)& (0+255),f,b
  2560  0007F8  B0D8               	btfsc	status,0,c
  2561  0007FA  2BE2               	incf	(_width+1)& (0+255),f,b
  2562  0007FC  D039               	goto	u2210
  2563  0007FE                     l2698:
  2564                           
  2565                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  2566  0007FE  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2567  000802  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2568  000806  CFDE F008          	movff	postinc2,atoi@s
  2569  00080A  CFDD F009          	movff	postdec2,atoi@s+1
  2570  00080E  EC1C  F008         	call	_atoi	;wreg free
  2571  000812  C008  F0E1         	movff	?_atoi,_width
  2572  000816  C009  F0E2         	movff	?_atoi+1,_width+1
  2573                           
  2574                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2575  00081A  D007               	goto	l2702
  2576  00081C                     l2700:
  2577                           
  2578                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  2579  00081C  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2580  000820  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2581  000824  2ADE               	incf	postinc2,f,c
  2582  000826  0E00               	movlw	0
  2583  000828  22DD               	addwfc	postdec2,f,c
  2584  00082A                     l2702:
  2585  00082A  0ED0               	movlw	208
  2586  00082C  6E4D               	movwf	??_vfpfcnvrt& (0+255),c
  2587  00082E  0EFF               	movlw	255
  2588  000830  6E4E               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  2589  000832  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2590  000836  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2591  00083A  CFDE FFF6          	movff	postinc2,tblptrl
  2592  00083E  CFDD FFF7          	movff	postdec2,tblptrh
  2593  000842                     	if	0	;tblptru may be non-zero
  2594  000842                     	endif
  2595  000842                     	if	0	;tblptru may be non-zero
  2596  000842                     	endif
  2597  000842  0008               	tblrd		*
  2598  000844  50F5               	movf	tablat,w,c
  2599  000846  6E4F               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2600  000848  6A50               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  2601  00084A  504D               	movf	??_vfpfcnvrt,w,c
  2602  00084C  264F               	addwf	??_vfpfcnvrt+2,f,c
  2603  00084E  504E               	movf	??_vfpfcnvrt+1,w,c
  2604  000850  2250               	addwfc	??_vfpfcnvrt+3,f,c
  2605  000852  5050               	movf	??_vfpfcnvrt+3,w,c
  2606  000854  E106               	bnz	u2190
  2607  000856  0E0A               	movlw	10
  2608  000858  5C4F               	subwf	??_vfpfcnvrt+2,w,c
  2609  00085A  B0D8               	btfsc	status,0,c
  2610  00085C  D002               	goto	u2190
  2611  00085E  0E01               	movlw	1
  2612  000860  D001               	goto	u2200
  2613  000862                     u2190:
  2614  000862  0E00               	movlw	0
  2615  000864                     u2200:
  2616  000864  6E63               	movwf	_vfpfcnvrt$661,c
  2617  000866  6A64               	clrf	_vfpfcnvrt$661+1,c
  2618  000868  5063               	movf	_vfpfcnvrt$661,w,c
  2619  00086A  1064               	iorwf	_vfpfcnvrt$661+1,w,c
  2620  00086C  A4D8               	btfss	status,2,c
  2621  00086E  D7D6               	goto	l2700
  2622  000870                     u2210:
  2623                           
  2624                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2625  000870  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2626  000874  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2627  000878  CFDE FFF6          	movff	postinc2,tblptrl
  2628  00087C  CFDD FFF7          	movff	postdec2,tblptrh
  2629  000880                     	if	0	;tblptru may be non-zero
  2630  000880                     	endif
  2631  000880                     	if	0	;tblptru may be non-zero
  2632  000880                     	endif
  2633  000880  0008               	tblrd		*
  2634  000882  50F5               	movf	tablat,w,c
  2635  000884  0A64               	xorlw	100
  2636  000886  B4D8               	btfsc	status,2,c
  2637  000888  D00D               	goto	u2230
  2638  00088A  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2639  00088E  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2640  000892  CFDE FFF6          	movff	postinc2,tblptrl
  2641  000896  CFDD FFF7          	movff	postdec2,tblptrh
  2642  00089A                     	if	0	;tblptru may be non-zero
  2643  00089A                     	endif
  2644  00089A                     	if	0	;tblptru may be non-zero
  2645  00089A                     	endif
  2646  00089A  0008               	tblrd		*
  2647  00089C  50F5               	movf	tablat,w,c
  2648  00089E  0A69               	xorlw	105
  2649  0008A0  A4D8               	btfss	status,2,c
  2650  0008A2  D03F               	goto	l2718
  2651  0008A4                     u2230:
  2652                           
  2653                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  2654  0008A4  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2655  0008A8  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2656  0008AC  2ADE               	incf	postinc2,f,c
  2657  0008AE  0E00               	movlw	0
  2658  0008B0  22DD               	addwfc	postdec2,f,c
  2659                           
  2660                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2661  0008B2  C04B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2662  0008B6  C04C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2663  0008BA  CFDF F04D          	movff	indf2,??_vfpfcnvrt
  2664  0008BE  0E02               	movlw	2
  2665  0008C0  26DE               	addwf	postinc2,f,c
  2666  0008C2  CFDF F04E          	movff	indf2,??_vfpfcnvrt+1
  2667  0008C6  0E00               	movlw	0
  2668  0008C8  22DD               	addwfc	postdec2,f,c
  2669  0008CA  C04D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2670  0008CE  C04E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2671  0008D2  CFDE F051          	movff	postinc2,vfpfcnvrt@ll
  2672  0008D6  CFDD F052          	movff	postdec2,vfpfcnvrt@ll+1
  2673  0008DA  0E00               	movlw	0
  2674  0008DC  BE52               	btfsc	vfpfcnvrt@ll+1,7,c
  2675  0008DE  0EFF               	movlw	-1
  2676  0008E0  6E53               	movwf	vfpfcnvrt@ll+2,c
  2677  0008E2  6E54               	movwf	vfpfcnvrt@ll+3,c
  2678  0008E4  6E55               	movwf	vfpfcnvrt@ll+4,c
  2679  0008E6  6E56               	movwf	vfpfcnvrt@ll+5,c
  2680  0008E8  6E57               	movwf	vfpfcnvrt@ll+6,c
  2681  0008EA  6E58               	movwf	vfpfcnvrt@ll+7,c
  2682                           
  2683                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  2684  0008EC  C047  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  2685  0008F0  C048  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2686  0008F4  C051  F022         	movff	vfpfcnvrt@ll,dtoa@d
  2687  0008F8  C052  F023         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2688  0008FC  C053  F024         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2689  000900  C054  F025         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2690  000904  C055  F026         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2691  000908  C056  F027         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2692  00090C  C057  F028         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2693  000910  C058  F029         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2694  000914  EC41  F005         	call	_dtoa	;wreg free
  2695  000918  C020  F047         	movff	?_dtoa,?_vfpfcnvrt
  2696  00091C  C021  F048         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2697  000920  0012               	return	
  2698  000922                     l2718:
  2699                           
  2700                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  2701  000922  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2702  000926  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2703  00092A  CFDE FFF6          	movff	postinc2,tblptrl
  2704  00092E  CFDD FFF7          	movff	postdec2,tblptrh
  2705  000932                     	if	0	;tblptru may be non-zero
  2706  000932                     	endif
  2707  000932                     	if	0	;tblptru may be non-zero
  2708  000932                     	endif
  2709  000932  0008               	tblrd		*
  2710  000934  50F5               	movf	tablat,w,c
  2711  000936  0A78               	xorlw	120
  2712  000938  B4D8               	btfsc	status,2,c
  2713  00093A  D00D               	goto	u2250
  2714  00093C  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2715  000940  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2716  000944  CFDE FFF6          	movff	postinc2,tblptrl
  2717  000948  CFDD FFF7          	movff	postdec2,tblptrh
  2718  00094C                     	if	0	;tblptru may be non-zero
  2719  00094C                     	endif
  2720  00094C                     	if	0	;tblptru may be non-zero
  2721  00094C                     	endif
  2722  00094C  0008               	tblrd		*
  2723  00094E  50F5               	movf	tablat,w,c
  2724  000950  0A58               	xorlw	88
  2725  000952  A4D8               	btfss	status,2,c
  2726  000954  D04D               	goto	l2732
  2727  000956                     u2250:
  2728                           
  2729                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  2730  000956  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2731  00095A  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2732  00095E  CFDE FFF6          	movff	postinc2,tblptrl
  2733  000962  CFDD FFF7          	movff	postdec2,tblptrh
  2734  000966                     	if	0	;tblptru may be non-zero
  2735  000966                     	endif
  2736  000966                     	if	0	;tblptru may be non-zero
  2737  000966                     	endif
  2738  000966  0008               	tblrd		*
  2739  000968  CFF5 F065          	movff	tablat,vfpfcnvrt@c
  2740                           
  2741                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  2742  00096C  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2743  000970  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2744  000974  2ADE               	incf	postinc2,f,c
  2745  000976  0E00               	movlw	0
  2746  000978  22DD               	addwfc	postdec2,f,c
  2747                           
  2748                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  2749  00097A  C04B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2750  00097E  C04C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2751  000982  CFDF F04D          	movff	indf2,??_vfpfcnvrt
  2752  000986  0E02               	movlw	2
  2753  000988  26DE               	addwf	postinc2,f,c
  2754  00098A  CFDF F04E          	movff	indf2,??_vfpfcnvrt+1
  2755  00098E  0E00               	movlw	0
  2756  000990  22DD               	addwfc	postdec2,f,c
  2757  000992  C04D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2758  000996  C04E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2759  00099A  CFDE F04F          	movff	postinc2,??_vfpfcnvrt+2
  2760  00099E  CFDD F050          	movff	postdec2,??_vfpfcnvrt+3
  2761  0009A2  C04F  F059         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2762  0009A6  C050  F05A         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2763  0009AA  6A5B               	clrf	vfpfcnvrt@llu+2,c
  2764  0009AC  6A5C               	clrf	vfpfcnvrt@llu+3,c
  2765  0009AE  6A5D               	clrf	vfpfcnvrt@llu+4,c
  2766  0009B0  6A5E               	clrf	vfpfcnvrt@llu+5,c
  2767  0009B2  6A5F               	clrf	vfpfcnvrt@llu+6,c
  2768  0009B4  6A60               	clrf	vfpfcnvrt@llu+7,c
  2769                           
  2770                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
  2771  0009B6  C047  F020         	movff	vfpfcnvrt@fp,xtoa@fp
  2772  0009BA  C048  F021         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  2773  0009BE  C059  F022         	movff	vfpfcnvrt@llu,xtoa@d
  2774  0009C2  C05A  F023         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  2775  0009C6  C05B  F024         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  2776  0009CA  C05C  F025         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  2777  0009CE  C05D  F026         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  2778  0009D2  C05E  F027         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  2779  0009D6  C05F  F028         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  2780  0009DA  C060  F029         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  2781  0009DE  C065  F02A         	movff	vfpfcnvrt@c,xtoa@x
  2782  0009E2  EC62  F006         	call	_xtoa	;wreg free
  2783  0009E6  C020  F047         	movff	?_xtoa,?_vfpfcnvrt
  2784  0009EA  C021  F048         	movff	?_xtoa+1,?_vfpfcnvrt+1
  2785  0009EE  0012               	return	
  2786  0009F0                     l2732:
  2787                           
  2788                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  2789  0009F0  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2790  0009F4  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2791  0009F8  CFDE FFF6          	movff	postinc2,tblptrl
  2792  0009FC  CFDD FFF7          	movff	postdec2,tblptrh
  2793  000A00                     	if	0	;tblptru may be non-zero
  2794  000A00                     	endif
  2795  000A00                     	if	0	;tblptru may be non-zero
  2796  000A00                     	endif
  2797  000A00  0008               	tblrd		*
  2798  000A02  50F5               	movf	tablat,w,c
  2799  000A04  0A25               	xorlw	37
  2800  000A06  A4D8               	btfss	status,2,c
  2801  000A08  D016               	goto	l2742
  2802                           
  2803                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  2804  000A0A  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2805  000A0E  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2806  000A12  2ADE               	incf	postinc2,f,c
  2807  000A14  0E00               	movlw	0
  2808  000A16  22DD               	addwfc	postdec2,f,c
  2809                           
  2810                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  2811  000A18  0E00               	movlw	0
  2812  000A1A  6E06               	movwf	fputc@c+1,c
  2813  000A1C  0E25               	movlw	37
  2814  000A1E  6E05               	movwf	fputc@c,c
  2815  000A20  C047  F007         	movff	vfpfcnvrt@fp,fputc@fp
  2816  000A24  C048  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2817  000A28  ECDA  F009         	call	_fputc	;wreg free
  2818  000A2C                     l2738:
  2819                           
  2820                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  2821  000A2C  0E00               	movlw	0
  2822  000A2E  6E48               	movwf	?_vfpfcnvrt+1,c
  2823  000A30  0E01               	movlw	1
  2824  000A32  6E47               	movwf	?_vfpfcnvrt,c
  2825  000A34  0012               	return	
  2826  000A36                     l2742:
  2827                           
  2828                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  2829  000A36  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2830  000A3A  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2831  000A3E  2ADE               	incf	postinc2,f,c
  2832  000A40  0E00               	movlw	0
  2833  000A42  22DD               	addwfc	postdec2,f,c
  2834                           
  2835                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  2836  000A44  0E00               	movlw	0
  2837  000A46  6E48               	movwf	?_vfpfcnvrt+1,c
  2838  000A48  0E00               	movlw	0
  2839  000A4A  6E47               	movwf	?_vfpfcnvrt,c
  2840  000A4C  0012               	return	
  2841  000A4E                     l2748:
  2842                           
  2843                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  2844  000A4E  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2845  000A52  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2846  000A56  CFDE FFF6          	movff	postinc2,tblptrl
  2847  000A5A  CFDD FFF7          	movff	postdec2,tblptrh
  2848  000A5E                     	if	0	;tblptru may be non-zero
  2849  000A5E                     	endif
  2850  000A5E                     	if	0	;tblptru may be non-zero
  2851  000A5E                     	endif
  2852  000A5E  0008               	tblrd		*
  2853  000A60  50F5               	movf	tablat,w,c
  2854  000A62  6E05               	movwf	fputc@c,c
  2855  000A64  6A06               	clrf	fputc@c+1,c
  2856  000A66  C047  F007         	movff	vfpfcnvrt@fp,fputc@fp
  2857  000A6A  C048  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2858  000A6E  ECDA  F009         	call	_fputc	;wreg free
  2859                           
  2860                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  2861  000A72  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2862  000A76  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2863  000A7A  2ADE               	incf	postinc2,f,c
  2864  000A7C  0E00               	movlw	0
  2865  000A7E  22DD               	addwfc	postdec2,f,c
  2866  000A80  D7D5               	goto	l2738
  2867  000A82                     __end_of_vfpfcnvrt:
  2868                           	opt callstack 0
  2869                           
  2870 ;; *************** function _xtoa *****************
  2871 ;; Defined at:
  2872 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2873 ;; Parameters:    Size  Location     Type
  2874 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  2875 ;;		 -> NULL(0), 
  2876 ;;  d               8   33[COMRAM] unsigned long long 
  2877 ;;  x               1   41[COMRAM] unsigned char 
  2878 ;; Auto vars:     Size  Location     Type
  2879 ;;  n               8   58[COMRAM] unsigned long long 
  2880 ;;  c               2   68[COMRAM] int 
  2881 ;;  i               2   66[COMRAM] int 
  2882 ;;  w               2   56[COMRAM] int 
  2883 ;;  p               2   54[COMRAM] int 
  2884 ;; Return value:  Size  Location     Type
  2885 ;;                  2   31[COMRAM] int 
  2886 ;; Registers used:
  2887 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2888 ;; Tracked objects:
  2889 ;;		On entry : 0/0
  2890 ;;		On exit  : 0/0
  2891 ;;		Unchanged: 0/0
  2892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2893 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2894 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2895 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2896 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2897 ;;Total ram usage:       39 bytes
  2898 ;; Hardware stack levels used:    1
  2899 ;; Hardware stack levels required when called:    8
  2900 ;; This function calls:
  2901 ;;		_isalpha
  2902 ;;		_isupper
  2903 ;;		_pad
  2904 ;;		_toupper
  2905 ;; This function is called by:
  2906 ;;		_vfpfcnvrt
  2907 ;; This function uses a non-reentrant model
  2908 ;;
  2909                           
  2910                           	psect	text4
  2911  000CC4                     __ptext4:
  2912                           	opt callstack 0
  2913  000CC4                     _xtoa:
  2914                           	opt callstack 19
  2915                           
  2916                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  2917                           
  2918                           ;incstack = 0
  2919  000CC4  AE7C               	btfss	_prec+1,7,c
  2920                           
  2921                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  2922  000CC6  927D               	bcf	_flags,1,c
  2923                           
  2924                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  2925  000CC8  BE7C               	btfsc	_prec+1,7,c
  2926  000CCA  D005               	goto	u1910
  2927  000CCC  507C               	movf	_prec+1,w,c
  2928  000CCE  E108               	bnz	l366
  2929  000CD0  047B               	decf	_prec,w,c
  2930  000CD2  B0D8               	btfsc	status,0,c
  2931  000CD4  D005               	goto	l366
  2932  000CD6                     u1910:
  2933  000CD6  0E00               	movlw	0
  2934  000CD8  6E38               	movwf	xtoa@p+1,c
  2935  000CDA  0E01               	movlw	1
  2936  000CDC  6E37               	movwf	xtoa@p,c
  2937  000CDE  D004               	goto	l368
  2938  000CE0                     l366:
  2939  000CE0  C07B  F037         	movff	_prec,xtoa@p
  2940  000CE4  C07C  F038         	movff	_prec+1,xtoa@p+1
  2941  000CE8                     l368:
  2942                           
  2943                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  2944  000CE8  C0E1  F039         	movff	_width,xtoa@w
  2945  000CEC  C0E2  F03A         	movff	_width+1,xtoa@w+1
  2946                           
  2947                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  2948  000CF0  A87D               	btfss	_flags,4,c
  2949  000CF2  D004               	goto	l2552
  2950                           
  2951                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  2952  000CF4  0EFE               	movlw	254
  2953  000CF6  2639               	addwf	xtoa@w,f,c
  2954  000CF8  0EFF               	movlw	255
  2955  000CFA  223A               	addwfc	xtoa@w+1,f,c
  2956  000CFC                     l2552:
  2957                           
  2958                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  2959  000CFC  C022  F03B         	movff	xtoa@d,xtoa@n
  2960  000D00  C023  F03C         	movff	xtoa@d+1,xtoa@n+1
  2961  000D04  C024  F03D         	movff	xtoa@d+2,xtoa@n+2
  2962  000D08  C025  F03E         	movff	xtoa@d+3,xtoa@n+3
  2963  000D0C  C026  F03F         	movff	xtoa@d+4,xtoa@n+4
  2964  000D10  C027  F040         	movff	xtoa@d+5,xtoa@n+5
  2965  000D14  C028  F041         	movff	xtoa@d+6,xtoa@n+6
  2966  000D18  C029  F042         	movff	xtoa@d+7,xtoa@n+7
  2967                           
  2968                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  2969  000D1C  0E00               	movlw	0
  2970  000D1E  6E44               	movwf	xtoa@i+1,c
  2971  000D20  0E1F               	movlw	31
  2972  000D22  6E43               	movwf	xtoa@i,c
  2973                           
  2974                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  2975  000D24  0E00               	movlw	0
  2976  000D26  0101               	movlb	1	; () banked
  2977  000D28  6F1F               	movwf	(_dbuf+31)& (0+255),b
  2978                           
  2979                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2980  000D2A  D093               	goto	l2588
  2981  000D2C                     l2558:
  2982                           
  2983                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  2984  000D2C  0643               	decf	xtoa@i,f,c
  2985  000D2E  A0D8               	btfss	status,0,c
  2986  000D30  0644               	decf	xtoa@i+1,f,c
  2987                           
  2988                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  2989  000D32  0E0F               	movlw	15
  2990  000D34  143B               	andwf	xtoa@n,w,c
  2991  000D36  6E45               	movwf	xtoa@c,c
  2992  000D38  6A46               	clrf	xtoa@c+1,c
  2993                           
  2994                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  2995  000D3A  BE46               	btfsc	xtoa@c+1,7,c
  2996  000D3C  D008               	goto	l2566
  2997  000D3E  5046               	movf	xtoa@c+1,w,c
  2998  000D40  E104               	bnz	u1930
  2999  000D42  0E0A               	movlw	10
  3000  000D44  5C45               	subwf	xtoa@c,w,c
  3001  000D46  A0D8               	btfss	status,0,c
  3002  000D48  D002               	goto	l2566
  3003  000D4A                     u1930:
  3004  000D4A  0E57               	movlw	87
  3005  000D4C  D001               	goto	L2
  3006  000D4E                     l2566:
  3007  000D4E  0E30               	movlw	48
  3008  000D50                     L2:
  3009  000D50  2445               	addwf	xtoa@c,w,c
  3010  000D52  6E45               	movwf	xtoa@c,c
  3011  000D54  0E00               	movlw	0
  3012  000D56  2046               	addwfc	xtoa@c+1,w,c
  3013  000D58  6E46               	movwf	xtoa@c+1,c
  3014                           
  3015                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 646:       
      +                            if ((0 ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsi
      +                          gned)(c)|32)-'a') < 26)) {
  3016  000D5A  0EBF               	movlw	191
  3017  000D5C  6E2B               	movwf	??_xtoa& (0+255),c
  3018  000D5E  0EFF               	movlw	255
  3019  000D60  6E2C               	movwf	(??_xtoa+1)& (0+255),c
  3020  000D62  502A               	movf	xtoa@x,w,c
  3021  000D64  6E2D               	movwf	(??_xtoa+2)& (0+255),c
  3022  000D66  6A2E               	clrf	(??_xtoa+3)& (0+255),c
  3023  000D68  502B               	movf	??_xtoa,w,c
  3024  000D6A  262D               	addwf	??_xtoa+2,f,c
  3025  000D6C  502C               	movf	??_xtoa+1,w,c
  3026  000D6E  222E               	addwfc	??_xtoa+3,f,c
  3027  000D70  502E               	movf	??_xtoa+3,w,c
  3028  000D72  E106               	bnz	u1940
  3029  000D74  0E1A               	movlw	26
  3030  000D76  5C2D               	subwf	??_xtoa+2,w,c
  3031  000D78  B0D8               	btfsc	status,0,c
  3032  000D7A  D002               	goto	u1940
  3033  000D7C  0E01               	movlw	1
  3034  000D7E  D001               	goto	u1950
  3035  000D80                     u1940:
  3036  000D80  0E00               	movlw	0
  3037  000D82                     u1950:
  3038  000D82  6E33               	movwf	_xtoa$646,c
  3039  000D84  6A34               	clrf	_xtoa$646+1,c
  3040  000D86  5033               	movf	_xtoa$646,w,c
  3041  000D88  1034               	iorwf	_xtoa$646+1,w,c
  3042  000D8A  B4D8               	btfsc	status,2,c
  3043  000D8C  D027               	goto	l2580
  3044  000D8E  0E9F               	movlw	159
  3045  000D90  6E2B               	movwf	??_xtoa& (0+255),c
  3046  000D92  0EFF               	movlw	255
  3047  000D94  6E2C               	movwf	(??_xtoa+1)& (0+255),c
  3048  000D96  0E20               	movlw	32
  3049  000D98  1045               	iorwf	xtoa@c,w,c
  3050  000D9A  6E2D               	movwf	(??_xtoa+2)& (0+255),c
  3051  000D9C  0E00               	movlw	0
  3052  000D9E  1046               	iorwf	xtoa@c+1,w,c
  3053  000DA0  6E2E               	movwf	(??_xtoa+3)& (0+255),c
  3054  000DA2  502B               	movf	??_xtoa,w,c
  3055  000DA4  262D               	addwf	??_xtoa+2,f,c
  3056  000DA6  502C               	movf	??_xtoa+1,w,c
  3057  000DA8  222E               	addwfc	??_xtoa+3,f,c
  3058  000DAA  502E               	movf	??_xtoa+3,w,c
  3059  000DAC  E106               	bnz	u1970
  3060  000DAE  0E1A               	movlw	26
  3061  000DB0  5C2D               	subwf	??_xtoa+2,w,c
  3062  000DB2  B0D8               	btfsc	status,0,c
  3063  000DB4  D002               	goto	u1970
  3064  000DB6  0E01               	movlw	1
  3065  000DB8  D001               	goto	u1980
  3066  000DBA                     u1970:
  3067  000DBA  0E00               	movlw	0
  3068  000DBC                     u1980:
  3069  000DBC  6E35               	movwf	_xtoa$647,c
  3070  000DBE  6A36               	clrf	_xtoa$647+1,c
  3071  000DC0  5035               	movf	_xtoa$647,w,c
  3072  000DC2  1036               	iorwf	_xtoa$647+1,w,c
  3073  000DC4  B4D8               	btfsc	status,2,c
  3074  000DC6  D00A               	goto	l2580
  3075                           
  3076                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  3077  000DC8  C045  F007         	movff	xtoa@c,toupper@c
  3078  000DCC  C046  F008         	movff	xtoa@c+1,toupper@c+1
  3079  000DD0  ECF8  F00A         	call	_toupper	;wreg free
  3080  000DD4  C007  F045         	movff	?_toupper,xtoa@c
  3081  000DD8  C008  F046         	movff	?_toupper+1,xtoa@c+1
  3082  000DDC                     l2580:
  3083                           
  3084                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  3085  000DDC  0E00               	movlw	low _dbuf
  3086  000DDE  2443               	addwf	xtoa@i,w,c
  3087  000DE0  6ED9               	movwf	fsr2l,c
  3088  000DE2  0E01               	movlw	high _dbuf
  3089  000DE4  2044               	addwfc	xtoa@i+1,w,c
  3090  000DE6  6EDA               	movwf	fsr2h,c
  3091  000DE8  C045  FFDF         	movff	xtoa@c,indf2
  3092                           
  3093                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  3094  000DEC  0637               	decf	xtoa@p,f,c
  3095  000DEE  A0D8               	btfss	status,0,c
  3096  000DF0  0638               	decf	xtoa@p+1,f,c
  3097                           
  3098                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  3099  000DF2  0639               	decf	xtoa@w,f,c
  3100  000DF4  A0D8               	btfss	status,0,c
  3101  000DF6  063A               	decf	xtoa@w+1,f,c
  3102                           
  3103                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  3104  000DF8  C03B  F02B         	movff	xtoa@n,??_xtoa
  3105  000DFC  C03C  F02C         	movff	xtoa@n+1,??_xtoa+1
  3106  000E00  C03D  F02D         	movff	xtoa@n+2,??_xtoa+2
  3107  000E04  C03E  F02E         	movff	xtoa@n+3,??_xtoa+3
  3108  000E08  C03F  F02F         	movff	xtoa@n+4,??_xtoa+4
  3109  000E0C  C040  F030         	movff	xtoa@n+5,??_xtoa+5
  3110  000E10  C041  F031         	movff	xtoa@n+6,??_xtoa+6
  3111  000E14  C042  F032         	movff	xtoa@n+7,??_xtoa+7
  3112  000E18  0E05               	movlw	5
  3113  000E1A  D009               	goto	u2000
  3114  000E1C                     u2005:
  3115  000E1C  90D8               	bcf	status,0,c
  3116  000E1E  3232               	rrcf	??_xtoa+7,f,c
  3117  000E20  3231               	rrcf	??_xtoa+6,f,c
  3118  000E22  3230               	rrcf	??_xtoa+5,f,c
  3119  000E24  322F               	rrcf	??_xtoa+4,f,c
  3120  000E26  322E               	rrcf	??_xtoa+3,f,c
  3121  000E28  322D               	rrcf	??_xtoa+2,f,c
  3122  000E2A  322C               	rrcf	??_xtoa+1,f,c
  3123  000E2C  322B               	rrcf	??_xtoa,f,c
  3124  000E2E                     u2000:
  3125  000E2E  2EE8               	decfsz	wreg,f,c
  3126  000E30  D7F5               	goto	u2005
  3127  000E32  C02B  F03B         	movff	??_xtoa,xtoa@n
  3128  000E36  C02C  F03C         	movff	??_xtoa+1,xtoa@n+1
  3129  000E3A  C02D  F03D         	movff	??_xtoa+2,xtoa@n+2
  3130  000E3E  C02E  F03E         	movff	??_xtoa+3,xtoa@n+3
  3131  000E42  C02F  F03F         	movff	??_xtoa+4,xtoa@n+4
  3132  000E46  C030  F040         	movff	??_xtoa+5,xtoa@n+5
  3133  000E4A  C031  F041         	movff	??_xtoa+6,xtoa@n+6
  3134  000E4E  C032  F042         	movff	??_xtoa+7,xtoa@n+7
  3135  000E52                     l2588:
  3136                           
  3137                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3138  000E52  BE44               	btfsc	xtoa@i+1,7,c
  3139  000E54  D020               	goto	u2050
  3140  000E56  5044               	movf	xtoa@i+1,w,c
  3141  000E58  E104               	bnz	u2010
  3142  000E5A  0E02               	movlw	2
  3143  000E5C  5C43               	subwf	xtoa@i,w,c
  3144  000E5E  A0D8               	btfss	status,0,c
  3145  000E60  D01A               	goto	u2050
  3146  000E62                     u2010:
  3147  000E62  503B               	movf	xtoa@n,w,c
  3148  000E64  103C               	iorwf	xtoa@n+1,w,c
  3149  000E66  103D               	iorwf	xtoa@n+2,w,c
  3150  000E68  103E               	iorwf	xtoa@n+3,w,c
  3151  000E6A  103F               	iorwf	xtoa@n+4,w,c
  3152  000E6C  1040               	iorwf	xtoa@n+5,w,c
  3153  000E6E  1041               	iorwf	xtoa@n+6,w,c
  3154  000E70  1042               	iorwf	xtoa@n+7,w,c
  3155  000E72  A4D8               	btfss	status,2,c
  3156  000E74  D75B               	goto	l2558
  3157  000E76  BE38               	btfsc	xtoa@p+1,7,c
  3158  000E78  D005               	goto	u2030
  3159  000E7A  5038               	movf	xtoa@p+1,w,c
  3160  000E7C  E102               	bnz	u2031
  3161  000E7E  0437               	decf	xtoa@p,w,c
  3162  000E80  B0D8               	btfsc	status,0,c
  3163  000E82                     u2031:
  3164  000E82  D754               	goto	l2558
  3165  000E84                     u2030:
  3166  000E84  BE3A               	btfsc	xtoa@w+1,7,c
  3167  000E86  D007               	goto	u2050
  3168  000E88  503A               	movf	xtoa@w+1,w,c
  3169  000E8A  E103               	bnz	u2040
  3170  000E8C  0439               	decf	xtoa@w,w,c
  3171  000E8E  A0D8               	btfss	status,0,c
  3172  000E90  D002               	goto	u2050
  3173  000E92                     u2040:
  3174  000E92  B27D               	btfsc	_flags,1,c
  3175  000E94  D74B               	goto	l2558
  3176  000E96                     u2050:
  3177                           
  3178                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  3179  000E96  A87D               	btfss	_flags,4,c
  3180  000E98  D016               	goto	l2604
  3181                           
  3182                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  3183  000E9A  0643               	decf	xtoa@i,f,c
  3184  000E9C  A0D8               	btfss	status,0,c
  3185  000E9E  0644               	decf	xtoa@i+1,f,c
  3186                           
  3187                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  3188  000EA0  0E00               	movlw	low _dbuf
  3189  000EA2  2443               	addwf	xtoa@i,w,c
  3190  000EA4  6ED9               	movwf	fsr2l,c
  3191  000EA6  0E01               	movlw	high _dbuf
  3192  000EA8  2044               	addwfc	xtoa@i+1,w,c
  3193  000EAA  6EDA               	movwf	fsr2h,c
  3194  000EAC  C02A  FFDF         	movff	xtoa@x,indf2
  3195                           
  3196                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  3197  000EB0  0643               	decf	xtoa@i,f,c
  3198  000EB2  A0D8               	btfss	status,0,c
  3199  000EB4  0644               	decf	xtoa@i+1,f,c
  3200                           
  3201                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  3202  000EB6  0E00               	movlw	low _dbuf
  3203  000EB8  2443               	addwf	xtoa@i,w,c
  3204  000EBA  6ED9               	movwf	fsr2l,c
  3205  000EBC  0E01               	movlw	high _dbuf
  3206  000EBE  2044               	addwfc	xtoa@i+1,w,c
  3207  000EC0  6EDA               	movwf	fsr2h,c
  3208  000EC2  0E30               	movlw	48
  3209  000EC4  6EDF               	movwf	indf2,c
  3210  000EC6                     l2604:
  3211                           
  3212                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  3213  000EC6  C020  F015         	movff	xtoa@fp,pad@fp
  3214  000ECA  C021  F016         	movff	xtoa@fp+1,pad@fp+1
  3215  000ECE  0E00               	movlw	low _dbuf
  3216  000ED0  2443               	addwf	xtoa@i,w,c
  3217  000ED2  6E17               	movwf	pad@buf,c
  3218  000ED4  0E01               	movlw	high _dbuf
  3219  000ED6  2044               	addwfc	xtoa@i+1,w,c
  3220  000ED8  6E18               	movwf	pad@buf+1,c
  3221  000EDA  C039  F019         	movff	xtoa@w,pad@p
  3222  000EDE  C03A  F01A         	movff	xtoa@w+1,pad@p+1
  3223  000EE2  EC4E  F009         	call	_pad	;wreg free
  3224  000EE6  C015  F020         	movff	?_pad,?_xtoa
  3225  000EEA  C016  F021         	movff	?_pad+1,?_xtoa+1
  3226  000EEE  0012               	return		;funcret
  3227  000EF0                     __end_of_xtoa:
  3228                           	opt callstack 0
  3229                           
  3230 ;; *************** function _toupper *****************
  3231 ;; Defined at:
  3232 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  3233 ;; Parameters:    Size  Location     Type
  3234 ;;  c               2    6[COMRAM] int 
  3235 ;; Auto vars:     Size  Location     Type
  3236 ;;		None
  3237 ;; Return value:  Size  Location     Type
  3238 ;;                  2    6[COMRAM] int 
  3239 ;; Registers used:
  3240 ;;		wreg, status,2, status,0
  3241 ;; Tracked objects:
  3242 ;;		On entry : 0/0
  3243 ;;		On exit  : 0/0
  3244 ;;		Unchanged: 0/0
  3245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3246 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3247 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3248 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3249 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3250 ;;Total ram usage:        8 bytes
  3251 ;; Hardware stack levels used:    1
  3252 ;; Hardware stack levels required when called:    2
  3253 ;; This function calls:
  3254 ;;		_islower
  3255 ;; This function is called by:
  3256 ;;		_xtoa
  3257 ;; This function uses a non-reentrant model
  3258 ;;
  3259                           
  3260                           	psect	text5
  3261  0015F0                     __ptext5:
  3262                           	opt callstack 0
  3263  0015F0                     _toupper:
  3264                           	opt callstack 24
  3265                           
  3266                           ;incstack = 0
  3267  0015F0  0E9F               	movlw	159
  3268  0015F2  6E09               	movwf	??_toupper& (0+255),c
  3269  0015F4  0EFF               	movlw	255
  3270  0015F6  6E0A               	movwf	(??_toupper+1)& (0+255),c
  3271  0015F8  C007  F00B         	movff	toupper@c,??_toupper+2
  3272  0015FC  C008  F00C         	movff	toupper@c+1,??_toupper+3
  3273  001600  5009               	movf	??_toupper,w,c
  3274  001602  260B               	addwf	??_toupper+2,f,c
  3275  001604  500A               	movf	??_toupper+1,w,c
  3276  001606  220C               	addwfc	??_toupper+3,f,c
  3277  001608  500C               	movf	??_toupper+3,w,c
  3278  00160A  E106               	bnz	u1550
  3279  00160C  0E1A               	movlw	26
  3280  00160E  5C0B               	subwf	??_toupper+2,w,c
  3281  001610  B0D8               	btfsc	status,0,c
  3282  001612  D002               	goto	u1550
  3283  001614  0E01               	movlw	1
  3284  001616  D001               	goto	u1560
  3285  001618                     u1550:
  3286  001618  0E00               	movlw	0
  3287  00161A                     u1560:
  3288  00161A  6E0D               	movwf	_toupper$1211,c
  3289  00161C  6A0E               	clrf	_toupper$1211+1,c
  3290  00161E  500D               	movf	_toupper$1211,w,c
  3291  001620  100E               	iorwf	_toupper$1211+1,w,c
  3292  001622  B4D8               	btfsc	status,2,c
  3293  001624  D005               	goto	l1206
  3294  001626  0E5F               	movlw	95
  3295  001628  1407               	andwf	toupper@c,w,c
  3296  00162A  6E07               	movwf	?_toupper,c
  3297  00162C  6A08               	clrf	?_toupper+1,c
  3298  00162E  0012               	return	
  3299  001630                     l1206:
  3300  001630  C007  F007         	movff	toupper@c,?_toupper
  3301  001634  C008  F008         	movff	toupper@c+1,?_toupper+1
  3302  001638  0012               	return		;funcret
  3303  00163A                     __end_of_toupper:
  3304                           	opt callstack 0
  3305                           
  3306 ;; *************** function _islower *****************
  3307 ;; Defined at:
  3308 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  3309 ;; Parameters:    Size  Location     Type
  3310 ;;  c               2    0[COMRAM] int 
  3311 ;; Auto vars:     Size  Location     Type
  3312 ;;		None
  3313 ;; Return value:  Size  Location     Type
  3314 ;;                  2    0[COMRAM] int 
  3315 ;; Registers used:
  3316 ;;		wreg, status,2, status,0
  3317 ;; Tracked objects:
  3318 ;;		On entry : 0/0
  3319 ;;		On exit  : 0/0
  3320 ;;		Unchanged: 0/0
  3321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3322 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3324 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3325 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3326 ;;Total ram usage:        6 bytes
  3327 ;; Hardware stack levels used:    1
  3328 ;; Hardware stack levels required when called:    1
  3329 ;; This function calls:
  3330 ;;		Nothing
  3331 ;; This function is called by:
  3332 ;;		_toupper
  3333 ;; This function uses a non-reentrant model
  3334 ;;
  3335                           
  3336                           	psect	text6
  3337  001716                     __ptext6:
  3338                           	opt callstack 0
  3339  001716                     _islower:
  3340                           	opt callstack 24
  3341                           
  3342                           ;incstack = 0
  3343  001716  0E9F               	movlw	159
  3344  001718  6E03               	movwf	??_islower& (0+255),c
  3345  00171A  0EFF               	movlw	255
  3346  00171C  6E04               	movwf	(??_islower+1)& (0+255),c
  3347  00171E  C001  F005         	movff	islower@c,??_islower+2
  3348  001722  C002  F006         	movff	islower@c+1,??_islower+3
  3349  001726  5003               	movf	??_islower,w,c
  3350  001728  2605               	addwf	??_islower+2,f,c
  3351  00172A  5004               	movf	??_islower+1,w,c
  3352  00172C  2206               	addwfc	??_islower+3,f,c
  3353  00172E  5006               	movf	??_islower+3,w,c
  3354  001730  E106               	bnz	u1440
  3355  001732  0E1A               	movlw	26
  3356  001734  5C05               	subwf	??_islower+2,w,c
  3357  001736  B0D8               	btfsc	status,0,c
  3358  001738  D002               	goto	u1440
  3359  00173A  0E01               	movlw	1
  3360  00173C  D001               	goto	u1450
  3361  00173E                     u1440:
  3362  00173E  0E00               	movlw	0
  3363  001740                     u1450:
  3364  001740  6E01               	movwf	?_islower,c
  3365  001742  6A02               	clrf	?_islower+1,c
  3366  001744  0012               	return		;funcret
  3367  001746                     __end_of_islower:
  3368                           	opt callstack 0
  3369                           
  3370 ;; *************** function _isupper *****************
  3371 ;; Defined at:
  3372 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  3373 ;; Parameters:    Size  Location     Type
  3374 ;;  c               2    0[COMRAM] int 
  3375 ;; Auto vars:     Size  Location     Type
  3376 ;;		None
  3377 ;; Return value:  Size  Location     Type
  3378 ;;                  2    0[COMRAM] int 
  3379 ;; Registers used:
  3380 ;;		wreg, status,2, status,0
  3381 ;; Tracked objects:
  3382 ;;		On entry : 0/0
  3383 ;;		On exit  : 0/0
  3384 ;;		Unchanged: 0/0
  3385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3386 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3388 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3389 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3390 ;;Total ram usage:        6 bytes
  3391 ;; Hardware stack levels used:    1
  3392 ;; Hardware stack levels required when called:    1
  3393 ;; This function calls:
  3394 ;;		Nothing
  3395 ;; This function is called by:
  3396 ;;		_xtoa
  3397 ;; This function uses a non-reentrant model
  3398 ;;
  3399                           
  3400                           	psect	text7
  3401  001746                     __ptext7:
  3402                           	opt callstack 0
  3403  001746                     _isupper:
  3404                           	opt callstack 25
  3405                           
  3406                           ;incstack = 0
  3407  001746  0EBF               	movlw	191
  3408  001748  6E03               	movwf	??_isupper& (0+255),c
  3409  00174A  0EFF               	movlw	255
  3410  00174C  6E04               	movwf	(??_isupper+1)& (0+255),c
  3411  00174E  C001  F005         	movff	isupper@c,??_isupper+2
  3412  001752  C002  F006         	movff	isupper@c+1,??_isupper+3
  3413  001756  5003               	movf	??_isupper,w,c
  3414  001758  2605               	addwf	??_isupper+2,f,c
  3415  00175A  5004               	movf	??_isupper+1,w,c
  3416  00175C  2206               	addwfc	??_isupper+3,f,c
  3417  00175E  5006               	movf	??_isupper+3,w,c
  3418  001760  E106               	bnz	u1510
  3419  001762  0E1A               	movlw	26
  3420  001764  5C05               	subwf	??_isupper+2,w,c
  3421  001766  B0D8               	btfsc	status,0,c
  3422  001768  D002               	goto	u1510
  3423  00176A  0E01               	movlw	1
  3424  00176C  D001               	goto	u1520
  3425  00176E                     u1510:
  3426  00176E  0E00               	movlw	0
  3427  001770                     u1520:
  3428  001770  6E01               	movwf	?_isupper,c
  3429  001772  6A02               	clrf	?_isupper+1,c
  3430  001774  0012               	return		;funcret
  3431  001776                     __end_of_isupper:
  3432                           	opt callstack 0
  3433                           
  3434 ;; *************** function _isalpha *****************
  3435 ;; Defined at:
  3436 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  3437 ;; Parameters:    Size  Location     Type
  3438 ;;  c               2    0[COMRAM] int 
  3439 ;; Auto vars:     Size  Location     Type
  3440 ;;		None
  3441 ;; Return value:  Size  Location     Type
  3442 ;;                  2    0[COMRAM] int 
  3443 ;; Registers used:
  3444 ;;		wreg, status,2, status,0
  3445 ;; Tracked objects:
  3446 ;;		On entry : 0/0
  3447 ;;		On exit  : 0/0
  3448 ;;		Unchanged: 0/0
  3449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3450 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3452 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3453 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3454 ;;Total ram usage:        6 bytes
  3455 ;; Hardware stack levels used:    1
  3456 ;; Hardware stack levels required when called:    1
  3457 ;; This function calls:
  3458 ;;		Nothing
  3459 ;; This function is called by:
  3460 ;;		_xtoa
  3461 ;; This function uses a non-reentrant model
  3462 ;;
  3463                           
  3464                           	psect	text8
  3465  0016B0                     __ptext8:
  3466                           	opt callstack 0
  3467  0016B0                     _isalpha:
  3468                           	opt callstack 25
  3469                           
  3470                           ;incstack = 0
  3471  0016B0  0E9F               	movlw	159
  3472  0016B2  6E03               	movwf	??_isalpha& (0+255),c
  3473  0016B4  0EFF               	movlw	255
  3474  0016B6  6E04               	movwf	(??_isalpha+1)& (0+255),c
  3475  0016B8  0E20               	movlw	32
  3476  0016BA  1001               	iorwf	isalpha@c,w,c
  3477  0016BC  6E05               	movwf	(??_isalpha+2)& (0+255),c
  3478  0016BE  0E00               	movlw	0
  3479  0016C0  1002               	iorwf	isalpha@c+1,w,c
  3480  0016C2  6E06               	movwf	(??_isalpha+3)& (0+255),c
  3481  0016C4  5003               	movf	??_isalpha,w,c
  3482  0016C6  2605               	addwf	??_isalpha+2,f,c
  3483  0016C8  5004               	movf	??_isalpha+1,w,c
  3484  0016CA  2206               	addwfc	??_isalpha+3,f,c
  3485  0016CC  5006               	movf	??_isalpha+3,w,c
  3486  0016CE  E106               	bnz	u1530
  3487  0016D0  0E1A               	movlw	26
  3488  0016D2  5C05               	subwf	??_isalpha+2,w,c
  3489  0016D4  B0D8               	btfsc	status,0,c
  3490  0016D6  D002               	goto	u1530
  3491  0016D8  0E01               	movlw	1
  3492  0016DA  D001               	goto	u1540
  3493  0016DC                     u1530:
  3494  0016DC  0E00               	movlw	0
  3495  0016DE                     u1540:
  3496  0016DE  6E01               	movwf	?_isalpha,c
  3497  0016E0  6A02               	clrf	?_isalpha+1,c
  3498  0016E2  0012               	return		;funcret
  3499  0016E4                     __end_of_isalpha:
  3500                           	opt callstack 0
  3501                           
  3502 ;; *************** function _dtoa *****************
  3503 ;; Defined at:
  3504 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3505 ;; Parameters:    Size  Location     Type
  3506 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  3507 ;;		 -> NULL(0), 
  3508 ;;  d               8   33[COMRAM] long long 
  3509 ;; Auto vars:     Size  Location     Type
  3510 ;;  n               8   57[COMRAM] long long 
  3511 ;;  i               2   65[COMRAM] int 
  3512 ;;  s               2   55[COMRAM] int 
  3513 ;;  w               2   53[COMRAM] int 
  3514 ;;  p               2   51[COMRAM] int 
  3515 ;; Return value:  Size  Location     Type
  3516 ;;                  2   31[COMRAM] int 
  3517 ;; Registers used:
  3518 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3519 ;; Tracked objects:
  3520 ;;		On entry : 0/0
  3521 ;;		On exit  : 0/0
  3522 ;;		Unchanged: 0/0
  3523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3524 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3525 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3526 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3527 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3528 ;;Total ram usage:       36 bytes
  3529 ;; Hardware stack levels used:    1
  3530 ;; Hardware stack levels required when called:    8
  3531 ;; This function calls:
  3532 ;;		___aodiv
  3533 ;;		___aomod
  3534 ;;		_abs
  3535 ;;		_pad
  3536 ;; This function is called by:
  3537 ;;		_vfpfcnvrt
  3538 ;; This function uses a non-reentrant model
  3539 ;;
  3540                           
  3541                           	psect	text9
  3542  000A82                     __ptext9:
  3543                           	opt callstack 0
  3544  000A82                     _dtoa:
  3545                           	opt callstack 19
  3546                           
  3547                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  3548                           
  3549                           ;incstack = 0
  3550  000A82  C022  F03A         	movff	dtoa@d,dtoa@n
  3551  000A86  C023  F03B         	movff	dtoa@d+1,dtoa@n+1
  3552  000A8A  C024  F03C         	movff	dtoa@d+2,dtoa@n+2
  3553  000A8E  C025  F03D         	movff	dtoa@d+3,dtoa@n+3
  3554  000A92  C026  F03E         	movff	dtoa@d+4,dtoa@n+4
  3555  000A96  C027  F03F         	movff	dtoa@d+5,dtoa@n+5
  3556  000A9A  C028  F040         	movff	dtoa@d+6,dtoa@n+6
  3557  000A9E  C029  F041         	movff	dtoa@d+7,dtoa@n+7
  3558                           
  3559                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  3560  000AA2  AE41               	btfss	dtoa@n+7,7,c
  3561  000AA4  D002               	goto	u1750
  3562  000AA6  0E01               	movlw	1
  3563  000AA8  D001               	goto	u1760
  3564  000AAA                     u1750:
  3565  000AAA  0E00               	movlw	0
  3566  000AAC                     u1760:
  3567  000AAC  6E38               	movwf	dtoa@s,c
  3568  000AAE  6A39               	clrf	dtoa@s+1,c
  3569                           
  3570                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  3571  000AB0  5038               	movf	dtoa@s,w,c
  3572  000AB2  1039               	iorwf	dtoa@s+1,w,c
  3573  000AB4  B4D8               	btfsc	status,2,c
  3574  000AB6  D010               	goto	l2486
  3575                           
  3576                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  3577  000AB8  1E41               	comf	dtoa@n+7,f,c
  3578  000ABA  1E40               	comf	dtoa@n+6,f,c
  3579  000ABC  1E3F               	comf	dtoa@n+5,f,c
  3580  000ABE  1E3E               	comf	dtoa@n+4,f,c
  3581  000AC0  1E3D               	comf	dtoa@n+3,f,c
  3582  000AC2  1E3C               	comf	dtoa@n+2,f,c
  3583  000AC4  1E3B               	comf	dtoa@n+1,f,c
  3584  000AC6  6C3A               	negf	dtoa@n,c
  3585  000AC8  0E00               	movlw	0
  3586  000ACA  223B               	addwfc	dtoa@n+1,f,c
  3587  000ACC  223C               	addwfc	dtoa@n+2,f,c
  3588  000ACE  223D               	addwfc	dtoa@n+3,f,c
  3589  000AD0  223E               	addwfc	dtoa@n+4,f,c
  3590  000AD2  223F               	addwfc	dtoa@n+5,f,c
  3591  000AD4  2240               	addwfc	dtoa@n+6,f,c
  3592  000AD6  2241               	addwfc	dtoa@n+7,f,c
  3593  000AD8                     l2486:
  3594                           
  3595                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  3596  000AD8  AE7C               	btfss	_prec+1,7,c
  3597                           
  3598                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  3599  000ADA  927D               	bcf	_flags,1,c
  3600                           
  3601                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  3602  000ADC  BE7C               	btfsc	_prec+1,7,c
  3603  000ADE  D005               	goto	u1790
  3604  000AE0  507C               	movf	_prec+1,w,c
  3605  000AE2  E108               	bnz	l341
  3606  000AE4  047B               	decf	_prec,w,c
  3607  000AE6  B0D8               	btfsc	status,0,c
  3608  000AE8  D005               	goto	l341
  3609  000AEA                     u1790:
  3610  000AEA  0E00               	movlw	0
  3611  000AEC  6E35               	movwf	dtoa@p+1,c
  3612  000AEE  0E01               	movlw	1
  3613  000AF0  6E34               	movwf	dtoa@p,c
  3614  000AF2  D004               	goto	l343
  3615  000AF4                     l341:
  3616  000AF4  C07B  F034         	movff	_prec,dtoa@p
  3617  000AF8  C07C  F035         	movff	_prec+1,dtoa@p+1
  3618  000AFC                     l343:
  3619                           
  3620                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  3621  000AFC  C0E1  F036         	movff	_width,dtoa@w
  3622  000B00  C0E2  F037         	movff	_width+1,dtoa@w+1
  3623                           
  3624                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  3625  000B04  5038               	movf	dtoa@s,w,c
  3626  000B06  1039               	iorwf	dtoa@s+1,w,c
  3627  000B08  A4D8               	btfss	status,2,c
  3628  000B0A  D002               	goto	u1810
  3629  000B0C  A47D               	btfss	_flags,2,c
  3630  000B0E  D003               	goto	l2500
  3631  000B10                     u1810:
  3632                           
  3633                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  3634  000B10  0636               	decf	dtoa@w,f,c
  3635  000B12  A0D8               	btfss	status,0,c
  3636  000B14  0637               	decf	dtoa@w+1,f,c
  3637  000B16                     l2500:
  3638                           
  3639                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  3640  000B16  0E00               	movlw	0
  3641  000B18  6E43               	movwf	dtoa@i+1,c
  3642  000B1A  0E1F               	movlw	31
  3643  000B1C  6E42               	movwf	dtoa@i,c
  3644                           
  3645                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  3646  000B1E  0E00               	movlw	0
  3647  000B20  0101               	movlb	1	; () banked
  3648  000B22  6F1F               	movwf	(_dbuf+31)& (0+255),b
  3649                           
  3650                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3651  000B24  D07C               	goto	l2514
  3652  000B26                     l2504:
  3653                           
  3654                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  3655  000B26  0642               	decf	dtoa@i,f,c
  3656  000B28  A0D8               	btfss	status,0,c
  3657  000B2A  0643               	decf	dtoa@i+1,f,c
  3658                           
  3659                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  3660  000B2C  0E00               	movlw	low _dbuf
  3661  000B2E  2442               	addwf	dtoa@i,w,c
  3662  000B30  6ED9               	movwf	fsr2l,c
  3663  000B32  0E01               	movlw	high _dbuf
  3664  000B34  2043               	addwfc	dtoa@i+1,w,c
  3665  000B36  6EDA               	movwf	fsr2h,c
  3666  000B38  C03A  F001         	movff	dtoa@n,___aomod@dividend
  3667  000B3C  C03B  F002         	movff	dtoa@n+1,___aomod@dividend+1
  3668  000B40  C03C  F003         	movff	dtoa@n+2,___aomod@dividend+2
  3669  000B44  C03D  F004         	movff	dtoa@n+3,___aomod@dividend+3
  3670  000B48  C03E  F005         	movff	dtoa@n+4,___aomod@dividend+4
  3671  000B4C  C03F  F006         	movff	dtoa@n+5,___aomod@dividend+5
  3672  000B50  C040  F007         	movff	dtoa@n+6,___aomod@dividend+6
  3673  000B54  C041  F008         	movff	dtoa@n+7,___aomod@dividend+7
  3674  000B58  0E0A               	movlw	10
  3675  000B5A  6E09               	movwf	___aomod@divisor,c
  3676  000B5C  0E00               	movlw	0
  3677  000B5E  6E0A               	movwf	___aomod@divisor+1,c
  3678  000B60  0E00               	movlw	0
  3679  000B62  6E0B               	movwf	___aomod@divisor+2,c
  3680  000B64  0E00               	movlw	0
  3681  000B66  6E0C               	movwf	___aomod@divisor+3,c
  3682  000B68  0E00               	movlw	0
  3683  000B6A  6E0D               	movwf	___aomod@divisor+4,c
  3684  000B6C  0E00               	movlw	0
  3685  000B6E  6E0E               	movwf	___aomod@divisor+5,c
  3686  000B70  0E00               	movlw	0
  3687  000B72  6E0F               	movwf	___aomod@divisor+6,c
  3688  000B74  0E00               	movlw	0
  3689  000B76  6E10               	movwf	___aomod@divisor+7,c
  3690  000B78  ECBC  F008         	call	___aomod	;wreg free
  3691  000B7C  C001  F02A         	movff	?___aomod,??_dtoa
  3692  000B80  C002  F02B         	movff	?___aomod+1,??_dtoa+1
  3693  000B84  C003  F02C         	movff	?___aomod+2,??_dtoa+2
  3694  000B88  C004  F02D         	movff	?___aomod+3,??_dtoa+3
  3695  000B8C  C005  F02E         	movff	?___aomod+4,??_dtoa+4
  3696  000B90  C006  F02F         	movff	?___aomod+5,??_dtoa+5
  3697  000B94  C007  F030         	movff	?___aomod+6,??_dtoa+6
  3698  000B98  C008  F031         	movff	?___aomod+7,??_dtoa+7
  3699  000B9C  C02A  F013         	movff	??_dtoa,abs@a
  3700  000BA0  C02C  F014         	movff	??_dtoa+2,abs@a+1
  3701  000BA4  EC72  F00B         	call	_abs	;wreg free
  3702  000BA8  5013               	movf	?_abs,w,c
  3703  000BAA  0F30               	addlw	48
  3704  000BAC  6EDF               	movwf	indf2,c
  3705                           
  3706                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  3707  000BAE  0634               	decf	dtoa@p,f,c
  3708  000BB0  A0D8               	btfss	status,0,c
  3709  000BB2  0635               	decf	dtoa@p+1,f,c
  3710                           
  3711                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  3712  000BB4  0636               	decf	dtoa@w,f,c
  3713  000BB6  A0D8               	btfss	status,0,c
  3714  000BB8  0637               	decf	dtoa@w+1,f,c
  3715                           
  3716                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  3717  000BBA  C03A  F001         	movff	dtoa@n,___aodiv@dividend
  3718  000BBE  C03B  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  3719  000BC2  C03C  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  3720  000BC6  C03D  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  3721  000BCA  C03E  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  3722  000BCE  C03F  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  3723  000BD2  C040  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  3724  000BD6  C041  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  3725  000BDA  0E0A               	movlw	10
  3726  000BDC  6E09               	movwf	___aodiv@divisor,c
  3727  000BDE  0E00               	movlw	0
  3728  000BE0  6E0A               	movwf	___aodiv@divisor+1,c
  3729  000BE2  0E00               	movlw	0
  3730  000BE4  6E0B               	movwf	___aodiv@divisor+2,c
  3731  000BE6  0E00               	movlw	0
  3732  000BE8  6E0C               	movwf	___aodiv@divisor+3,c
  3733  000BEA  0E00               	movlw	0
  3734  000BEC  6E0D               	movwf	___aodiv@divisor+4,c
  3735  000BEE  0E00               	movlw	0
  3736  000BF0  6E0E               	movwf	___aodiv@divisor+5,c
  3737  000BF2  0E00               	movlw	0
  3738  000BF4  6E0F               	movwf	___aodiv@divisor+6,c
  3739  000BF6  0E00               	movlw	0
  3740  000BF8  6E10               	movwf	___aodiv@divisor+7,c
  3741  000BFA  EC78  F007         	call	___aodiv	;wreg free
  3742  000BFE  C001  F03A         	movff	?___aodiv,dtoa@n
  3743  000C02  C002  F03B         	movff	?___aodiv+1,dtoa@n+1
  3744  000C06  C003  F03C         	movff	?___aodiv+2,dtoa@n+2
  3745  000C0A  C004  F03D         	movff	?___aodiv+3,dtoa@n+3
  3746  000C0E  C005  F03E         	movff	?___aodiv+4,dtoa@n+4
  3747  000C12  C006  F03F         	movff	?___aodiv+5,dtoa@n+5
  3748  000C16  C007  F040         	movff	?___aodiv+6,dtoa@n+6
  3749  000C1A  C008  F041         	movff	?___aodiv+7,dtoa@n+7
  3750  000C1E                     l2514:
  3751                           
  3752                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3753  000C1E  BE43               	btfsc	dtoa@i+1,7,c
  3754  000C20  D01F               	goto	u1860
  3755  000C22  5043               	movf	dtoa@i+1,w,c
  3756  000C24  E103               	bnz	u1820
  3757  000C26  0442               	decf	dtoa@i,w,c
  3758  000C28  A0D8               	btfss	status,0,c
  3759  000C2A  D01A               	goto	u1860
  3760  000C2C                     u1820:
  3761  000C2C  503A               	movf	dtoa@n,w,c
  3762  000C2E  103B               	iorwf	dtoa@n+1,w,c
  3763  000C30  103C               	iorwf	dtoa@n+2,w,c
  3764  000C32  103D               	iorwf	dtoa@n+3,w,c
  3765  000C34  103E               	iorwf	dtoa@n+4,w,c
  3766  000C36  103F               	iorwf	dtoa@n+5,w,c
  3767  000C38  1040               	iorwf	dtoa@n+6,w,c
  3768  000C3A  1041               	iorwf	dtoa@n+7,w,c
  3769  000C3C  A4D8               	btfss	status,2,c
  3770  000C3E  D773               	goto	l2504
  3771  000C40  BE35               	btfsc	dtoa@p+1,7,c
  3772  000C42  D005               	goto	u1840
  3773  000C44  5035               	movf	dtoa@p+1,w,c
  3774  000C46  E102               	bnz	u1841
  3775  000C48  0434               	decf	dtoa@p,w,c
  3776  000C4A  B0D8               	btfsc	status,0,c
  3777  000C4C                     u1841:
  3778  000C4C  D76C               	goto	l2504
  3779  000C4E                     u1840:
  3780  000C4E  BE37               	btfsc	dtoa@w+1,7,c
  3781  000C50  D007               	goto	u1860
  3782  000C52  5037               	movf	dtoa@w+1,w,c
  3783  000C54  E103               	bnz	u1850
  3784  000C56  0436               	decf	dtoa@w,w,c
  3785  000C58  A0D8               	btfss	status,0,c
  3786  000C5A  D002               	goto	u1860
  3787  000C5C                     u1850:
  3788  000C5C  B27D               	btfsc	_flags,1,c
  3789  000C5E  D763               	goto	l2504
  3790  000C60                     u1860:
  3791                           
  3792                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  3793  000C60  5038               	movf	dtoa@s,w,c
  3794  000C62  1039               	iorwf	dtoa@s+1,w,c
  3795  000C64  A4D8               	btfss	status,2,c
  3796  000C66  D002               	goto	u1880
  3797  000C68  A47D               	btfss	_flags,2,c
  3798  000C6A  D017               	goto	l2538
  3799  000C6C                     u1880:
  3800                           
  3801                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  3802  000C6C  0642               	decf	dtoa@i,f,c
  3803  000C6E  A0D8               	btfss	status,0,c
  3804  000C70  0643               	decf	dtoa@i+1,f,c
  3805                           
  3806                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  3807  000C72  5038               	movf	dtoa@s,w,c
  3808  000C74  1039               	iorwf	dtoa@s+1,w,c
  3809  000C76  A4D8               	btfss	status,2,c
  3810  000C78  D004               	goto	l2534
  3811  000C7A  0E00               	movlw	0
  3812  000C7C  6E33               	movwf	_dtoa$635+1,c
  3813  000C7E  0E2B               	movlw	43
  3814  000C80  D003               	goto	L3
  3815  000C82                     l2534:
  3816  000C82  0E00               	movlw	0
  3817  000C84  6E33               	movwf	_dtoa$635+1,c
  3818  000C86  0E2D               	movlw	45
  3819  000C88                     L3:
  3820  000C88  6E32               	movwf	_dtoa$635,c
  3821  000C8A  0E00               	movlw	low _dbuf
  3822  000C8C  2442               	addwf	dtoa@i,w,c
  3823  000C8E  6ED9               	movwf	fsr2l,c
  3824  000C90  0E01               	movlw	high _dbuf
  3825  000C92  2043               	addwfc	dtoa@i+1,w,c
  3826  000C94  6EDA               	movwf	fsr2h,c
  3827  000C96  C032  FFDF         	movff	_dtoa$635,indf2
  3828  000C9A                     l2538:
  3829                           
  3830                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  3831  000C9A  C020  F015         	movff	dtoa@fp,pad@fp
  3832  000C9E  C021  F016         	movff	dtoa@fp+1,pad@fp+1
  3833  000CA2  0E00               	movlw	low _dbuf
  3834  000CA4  2442               	addwf	dtoa@i,w,c
  3835  000CA6  6E17               	movwf	pad@buf,c
  3836  000CA8  0E01               	movlw	high _dbuf
  3837  000CAA  2043               	addwfc	dtoa@i+1,w,c
  3838  000CAC  6E18               	movwf	pad@buf+1,c
  3839  000CAE  C036  F019         	movff	dtoa@w,pad@p
  3840  000CB2  C037  F01A         	movff	dtoa@w+1,pad@p+1
  3841  000CB6  EC4E  F009         	call	_pad	;wreg free
  3842  000CBA  C015  F020         	movff	?_pad,?_dtoa
  3843  000CBE  C016  F021         	movff	?_pad+1,?_dtoa+1
  3844  000CC2  0012               	return		;funcret
  3845  000CC4                     __end_of_dtoa:
  3846                           	opt callstack 0
  3847                           
  3848 ;; *************** function _pad *****************
  3849 ;; Defined at:
  3850 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3851 ;; Parameters:    Size  Location     Type
  3852 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  3853 ;;		 -> NULL(0), 
  3854 ;;  buf             2   22[COMRAM] PTR unsigned char 
  3855 ;;		 -> dbuf(32), 
  3856 ;;  p               2   24[COMRAM] int 
  3857 ;; Auto vars:     Size  Location     Type
  3858 ;;  w               2   29[COMRAM] int 
  3859 ;;  i               2   27[COMRAM] int 
  3860 ;; Return value:  Size  Location     Type
  3861 ;;                  2   20[COMRAM] int 
  3862 ;; Registers used:
  3863 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3864 ;; Tracked objects:
  3865 ;;		On entry : 0/0
  3866 ;;		On exit  : 0/0
  3867 ;;		Unchanged: 0/0
  3868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3869 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3870 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3871 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3872 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3873 ;;Total ram usage:       11 bytes
  3874 ;; Hardware stack levels used:    1
  3875 ;; Hardware stack levels required when called:    7
  3876 ;; This function calls:
  3877 ;;		_fputc
  3878 ;;		_fputs
  3879 ;;		_strlen
  3880 ;; This function is called by:
  3881 ;;		_dtoa
  3882 ;;		_xtoa
  3883 ;; This function uses a non-reentrant model
  3884 ;;
  3885                           
  3886                           	psect	text10
  3887  00129C                     __ptext10:
  3888                           	opt callstack 0
  3889  00129C                     _pad:
  3890                           	opt callstack 19
  3891                           
  3892                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  3893                           
  3894                           ;incstack = 0
  3895  00129C  A07D               	btfss	_flags,0,c
  3896  00129E  D00A               	goto	l2338
  3897                           
  3898                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  3899  0012A0  C017  F00E         	movff	pad@buf,fputs@s
  3900  0012A4  C018  F00F         	movff	pad@buf+1,fputs@s+1
  3901  0012A8  C015  F010         	movff	pad@fp,fputs@fp
  3902  0012AC  C016  F011         	movff	pad@fp+1,fputs@fp+1
  3903  0012B0  EC3C  F00B         	call	_fputs	;wreg free
  3904  0012B4                     l2338:
  3905                           
  3906                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  3907  0012B4  BE1A               	btfsc	pad@p+1,7,c
  3908  0012B6  D005               	goto	l2342
  3909  0012B8  C019  F01E         	movff	pad@p,pad@w
  3910  0012BC  C01A  F01F         	movff	pad@p+1,pad@w+1
  3911  0012C0  D004               	goto	l330
  3912  0012C2                     l2342:
  3913  0012C2  0E00               	movlw	0
  3914  0012C4  6E1F               	movwf	pad@w+1,c
  3915  0012C6  0E00               	movlw	0
  3916  0012C8  6E1E               	movwf	pad@w,c
  3917  0012CA                     l330:
  3918                           
  3919                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  3920  0012CA  0E00               	movlw	0
  3921  0012CC  6E1D               	movwf	pad@i+1,c
  3922  0012CE  0E00               	movlw	0
  3923  0012D0  6E1C               	movwf	pad@i,c
  3924                           
  3925                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  3926  0012D2  D00C               	goto	l2348
  3927  0012D4                     l2344:
  3928                           
  3929                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  3930  0012D4  0E00               	movlw	0
  3931  0012D6  6E06               	movwf	fputc@c+1,c
  3932  0012D8  0E20               	movlw	32
  3933  0012DA  6E05               	movwf	fputc@c,c
  3934  0012DC  C015  F007         	movff	pad@fp,fputc@fp
  3935  0012E0  C016  F008         	movff	pad@fp+1,fputc@fp+1
  3936  0012E4  ECDA  F009         	call	_fputc	;wreg free
  3937                           
  3938                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  3939  0012E8  4A1C               	infsnz	pad@i,f,c
  3940  0012EA  2A1D               	incf	pad@i+1,f,c
  3941  0012EC                     l2348:
  3942                           
  3943                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  3944  0012EC  501E               	movf	pad@w,w,c
  3945  0012EE  5C1C               	subwf	pad@i,w,c
  3946  0012F0  501D               	movf	pad@i+1,w,c
  3947  0012F2  0A80               	xorlw	128
  3948  0012F4  6E1B               	movwf	??_pad& (0+255),c
  3949  0012F6  501F               	movf	pad@w+1,w,c
  3950  0012F8  0A80               	xorlw	128
  3951  0012FA  581B               	subwfb	??_pad& (0+255),w,c
  3952  0012FC  A0D8               	btfss	status,0,c
  3953  0012FE  D7EA               	goto	l2344
  3954                           
  3955                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  3956  001300  B07D               	btfsc	_flags,0,c
  3957  001302  D00A               	goto	l2352
  3958                           
  3959                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  3960  001304  C017  F00E         	movff	pad@buf,fputs@s
  3961  001308  C018  F00F         	movff	pad@buf+1,fputs@s+1
  3962  00130C  C015  F010         	movff	pad@fp,fputs@fp
  3963  001310  C016  F011         	movff	pad@fp+1,fputs@fp+1
  3964  001314  EC3C  F00B         	call	_fputs	;wreg free
  3965  001318                     l2352:
  3966                           
  3967                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  3968  001318  C017  F001         	movff	pad@buf,strlen@s
  3969  00131C  C018  F002         	movff	pad@buf+1,strlen@s+1
  3970  001320  ECD3  F00B         	call	_strlen	;wreg free
  3971  001324  501E               	movf	pad@w,w,c
  3972  001326  2401               	addwf	?_strlen,w,c
  3973  001328  6E15               	movwf	?_pad,c
  3974  00132A  501F               	movf	pad@w+1,w,c
  3975  00132C  2002               	addwfc	?_strlen+1,w,c
  3976  00132E  6E16               	movwf	?_pad+1,c
  3977  001330  0012               	return		;funcret
  3978  001332                     __end_of_pad:
  3979                           	opt callstack 0
  3980                           
  3981 ;; *************** function _strlen *****************
  3982 ;; Defined at:
  3983 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  3984 ;; Parameters:    Size  Location     Type
  3985 ;;  s               2    0[COMRAM] PTR const unsigned char 
  3986 ;;		 -> dbuf(32), 
  3987 ;; Auto vars:     Size  Location     Type
  3988 ;;  a               2    2[COMRAM] PTR const unsigned char 
  3989 ;;		 -> dbuf(32), 
  3990 ;; Return value:  Size  Location     Type
  3991 ;;                  2    0[COMRAM] unsigned int 
  3992 ;; Registers used:
  3993 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3994 ;; Tracked objects:
  3995 ;;		On entry : 0/0
  3996 ;;		On exit  : 0/0
  3997 ;;		Unchanged: 0/0
  3998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3999 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4000 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4002 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4003 ;;Total ram usage:        4 bytes
  4004 ;; Hardware stack levels used:    1
  4005 ;; Hardware stack levels required when called:    1
  4006 ;; This function calls:
  4007 ;;		Nothing
  4008 ;; This function is called by:
  4009 ;;		_pad
  4010 ;; This function uses a non-reentrant model
  4011 ;;
  4012                           
  4013                           	psect	text11
  4014  0017A6                     __ptext11:
  4015                           	opt callstack 0
  4016  0017A6                     _strlen:
  4017                           	opt callstack 24
  4018                           
  4019                           ;incstack = 0
  4020  0017A6  C001  F003         	movff	strlen@s,strlen@a
  4021  0017AA  C002  F004         	movff	strlen@s+1,strlen@a+1
  4022  0017AE  D002               	goto	l2324
  4023  0017B0                     l2322:
  4024  0017B0  4A01               	infsnz	strlen@s,f,c
  4025  0017B2  2A02               	incf	strlen@s+1,f,c
  4026  0017B4                     l2324:
  4027  0017B4  C001  FFD9         	movff	strlen@s,fsr2l
  4028  0017B8  C002  FFDA         	movff	strlen@s+1,fsr2h
  4029  0017BC  50DF               	movf	indf2,w,c
  4030  0017BE  A4D8               	btfss	status,2,c
  4031  0017C0  D7F7               	goto	l2322
  4032  0017C2  5003               	movf	strlen@a,w,c
  4033  0017C4  5C01               	subwf	strlen@s,w,c
  4034  0017C6  6E01               	movwf	?_strlen,c
  4035  0017C8  5004               	movf	strlen@a+1,w,c
  4036  0017CA  5802               	subwfb	strlen@s+1,w,c
  4037  0017CC  6E02               	movwf	?_strlen+1,c
  4038  0017CE  0012               	return		;funcret
  4039  0017D0                     __end_of_strlen:
  4040                           	opt callstack 0
  4041                           
  4042 ;; *************** function _fputs *****************
  4043 ;; Defined at:
  4044 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  4045 ;; Parameters:    Size  Location     Type
  4046 ;;  s               2   13[COMRAM] PTR const unsigned char 
  4047 ;;		 -> dbuf(32), 
  4048 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  4049 ;;		 -> NULL(0), 
  4050 ;; Auto vars:     Size  Location     Type
  4051 ;;  i               2   18[COMRAM] int 
  4052 ;;  c               1   17[COMRAM] unsigned char 
  4053 ;; Return value:  Size  Location     Type
  4054 ;;                  2   13[COMRAM] int 
  4055 ;; Registers used:
  4056 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4057 ;; Tracked objects:
  4058 ;;		On entry : 0/0
  4059 ;;		On exit  : 0/0
  4060 ;;		Unchanged: 0/0
  4061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4062 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4063 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4065 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4066 ;;Total ram usage:        7 bytes
  4067 ;; Hardware stack levels used:    1
  4068 ;; Hardware stack levels required when called:    6
  4069 ;; This function calls:
  4070 ;;		_fputc
  4071 ;; This function is called by:
  4072 ;;		_pad
  4073 ;; This function uses a non-reentrant model
  4074 ;;
  4075                           
  4076                           	psect	text12
  4077  001678                     __ptext12:
  4078                           	opt callstack 0
  4079  001678                     _fputs:
  4080                           	opt callstack 19
  4081                           
  4082                           ;incstack = 0
  4083  001678  0E00               	movlw	0
  4084  00167A  6E14               	movwf	fputs@i+1,c
  4085  00167C  0E00               	movlw	0
  4086  00167E  6E13               	movwf	fputs@i,c
  4087  001680  D00B               	goto	l2318
  4088  001682                     l2314:
  4089  001682  C012  F005         	movff	fputs@c,fputc@c
  4090  001686  6A06               	clrf	fputc@c+1,c
  4091  001688  C010  F007         	movff	fputs@fp,fputc@fp
  4092  00168C  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  4093  001690  ECDA  F009         	call	_fputc	;wreg free
  4094  001694  4A13               	infsnz	fputs@i,f,c
  4095  001696  2A14               	incf	fputs@i+1,f,c
  4096  001698                     l2318:
  4097  001698  5013               	movf	fputs@i,w,c
  4098  00169A  240E               	addwf	fputs@s,w,c
  4099  00169C  6ED9               	movwf	fsr2l,c
  4100  00169E  5014               	movf	fputs@i+1,w,c
  4101  0016A0  200F               	addwfc	fputs@s+1,w,c
  4102  0016A2  6EDA               	movwf	fsr2h,c
  4103  0016A4  50DF               	movf	indf2,w,c
  4104  0016A6  6E12               	movwf	fputs@c,c
  4105  0016A8  5012               	movf	fputs@c,w,c
  4106  0016AA  B4D8               	btfsc	status,2,c
  4107  0016AC  0012               	return	
  4108  0016AE  D7E9               	goto	l2314
  4109  0016B0                     __end_of_fputs:
  4110                           	opt callstack 0
  4111                           
  4112 ;; *************** function _fputc *****************
  4113 ;; Defined at:
  4114 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  4115 ;; Parameters:    Size  Location     Type
  4116 ;;  c               2    4[COMRAM] int 
  4117 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  4118 ;;		 -> NULL(0), 
  4119 ;; Auto vars:     Size  Location     Type
  4120 ;;		None
  4121 ;; Return value:  Size  Location     Type
  4122 ;;                  2    4[COMRAM] int 
  4123 ;; Registers used:
  4124 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4125 ;; Tracked objects:
  4126 ;;		On entry : 0/0
  4127 ;;		On exit  : 0/0
  4128 ;;		Unchanged: 0/0
  4129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4130 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4132 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4133 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4134 ;;Total ram usage:        9 bytes
  4135 ;; Hardware stack levels used:    1
  4136 ;; Hardware stack levels required when called:    5
  4137 ;; This function calls:
  4138 ;;		_putch
  4139 ;; This function is called by:
  4140 ;;		_pad
  4141 ;;		_vfpfcnvrt
  4142 ;;		_fputs
  4143 ;; This function uses a non-reentrant model
  4144 ;;
  4145                           
  4146                           	psect	text13
  4147  0013B4                     __ptext13:
  4148                           	opt callstack 0
  4149  0013B4                     _fputc:
  4150                           	opt callstack 19
  4151                           
  4152                           ;incstack = 0
  4153  0013B4  5007               	movf	fputc@fp,w,c
  4154  0013B6  1008               	iorwf	fputc@fp+1,w,c
  4155  0013B8  B4D8               	btfsc	status,2,c
  4156  0013BA  D004               	goto	u1390
  4157  0013BC  5007               	movf	fputc@fp,w,c
  4158  0013BE  1008               	iorwf	fputc@fp+1,w,c
  4159  0013C0  A4D8               	btfss	status,2,c
  4160  0013C2  D004               	goto	l2304
  4161  0013C4                     u1390:
  4162  0013C4  5005               	movf	fputc@c,w,c
  4163  0013C6  EC5B  F00C         	call	_putch
  4164  0013CA  0012               	return	
  4165  0013CC                     l2304:
  4166  0013CC  EE20 F004          	lfsr	2,4
  4167  0013D0  5007               	movf	fputc@fp,w,c
  4168  0013D2  26D9               	addwf	fsr2l,f,c
  4169  0013D4  5008               	movf	fputc@fp+1,w,c
  4170  0013D6  22DA               	addwfc	fsr2h,f,c
  4171  0013D8  50DE               	movf	postinc2,w,c
  4172  0013DA  10DE               	iorwf	postinc2,w,c
  4173  0013DC  B4D8               	btfsc	status,2,c
  4174  0013DE  D016               	goto	u1410
  4175  0013E0  EE20 F004          	lfsr	2,4
  4176  0013E4  5007               	movf	fputc@fp,w,c
  4177  0013E6  26D9               	addwf	fsr2l,f,c
  4178  0013E8  5008               	movf	fputc@fp+1,w,c
  4179  0013EA  22DA               	addwfc	fsr2h,f,c
  4180  0013EC  EE10 F002          	lfsr	1,2
  4181  0013F0  5007               	movf	fputc@fp,w,c
  4182  0013F2  26E1               	addwf	fsr1l,f,c
  4183  0013F4  5008               	movf	fputc@fp+1,w,c
  4184  0013F6  22E2               	addwfc	fsr1h,f,c
  4185  0013F8  50DE               	movf	postinc2,w,c
  4186  0013FA  5CE6               	subwf	postinc1,w,c
  4187  0013FC  50E6               	movf	postinc1,w,c
  4188  0013FE  0A80               	xorlw	128
  4189  001400  6E0D               	movwf	(??_fputc+4)& (0+255),c
  4190  001402  50DE               	movf	postinc2,w,c
  4191  001404  0A80               	xorlw	128
  4192  001406  580D               	subwfb	(??_fputc+4)& (0+255),w,c
  4193  001408  B0D8               	btfsc	status,0,c
  4194  00140A  0012               	return	
  4195  00140C                     u1410:
  4196  00140C  EE20 F002          	lfsr	2,2
  4197  001410  5007               	movf	fputc@fp,w,c
  4198  001412  26D9               	addwf	fsr2l,f,c
  4199  001414  5008               	movf	fputc@fp+1,w,c
  4200  001416  22DA               	addwfc	fsr2h,f,c
  4201  001418  2ADE               	incf	postinc2,f,c
  4202  00141A  0E00               	movlw	0
  4203  00141C  22DD               	addwfc	postdec2,f,c
  4204  00141E  0012               	return		;funcret
  4205  001420                     __end_of_fputc:
  4206                           	opt callstack 0
  4207                           
  4208 ;; *************** function _putch *****************
  4209 ;; Defined at:
  4210 ;;		line 102 in file "lcd.c"
  4211 ;; Parameters:    Size  Location     Type
  4212 ;;  data            1    wreg     unsigned char 
  4213 ;; Auto vars:     Size  Location     Type
  4214 ;;  data            1    3[COMRAM] unsigned char 
  4215 ;; Return value:  Size  Location     Type
  4216 ;;                  1    wreg      void 
  4217 ;; Registers used:
  4218 ;;		wreg, status,2, status,0, cstack
  4219 ;; Tracked objects:
  4220 ;;		On entry : 0/0
  4221 ;;		On exit  : 0/0
  4222 ;;		Unchanged: 0/0
  4223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4225 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4227 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4228 ;;Total ram usage:        1 bytes
  4229 ;; Hardware stack levels used:    1
  4230 ;; Hardware stack levels required when called:    4
  4231 ;; This function calls:
  4232 ;;		_send_byte
  4233 ;; This function is called by:
  4234 ;;		_fputc
  4235 ;; This function uses a non-reentrant model
  4236 ;;
  4237                           
  4238                           	psect	text14
  4239  0018B6                     __ptext14:
  4240                           	opt callstack 0
  4241  0018B6                     _putch:
  4242                           	opt callstack 19
  4243                           
  4244                           ;incstack = 0
  4245                           ;putch@data stored from wreg
  4246  0018B6  6E04               	movwf	putch@data,c
  4247                           
  4248                           ;lcd.c: 103:     LATDbits.LATD2 = 1;
  4249  0018B8  848C               	bsf	3980,2,c	;volatile
  4250                           
  4251                           ;lcd.c: 104:     send_byte((unsigned char)data);
  4252  0018BA  5004               	movf	putch@data,w,c
  4253  0018BC  EC40  F00C         	call	_send_byte
  4254  0018C0  0012               	return		;funcret
  4255  0018C2                     __end_of_putch:
  4256                           	opt callstack 0
  4257                           
  4258 ;; *************** function _abs *****************
  4259 ;; Defined at:
  4260 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  4261 ;; Parameters:    Size  Location     Type
  4262 ;;  a               2   18[COMRAM] int 
  4263 ;; Auto vars:     Size  Location     Type
  4264 ;;		None
  4265 ;; Return value:  Size  Location     Type
  4266 ;;                  2   18[COMRAM] int 
  4267 ;; Registers used:
  4268 ;;		wreg, status,2, status,0
  4269 ;; Tracked objects:
  4270 ;;		On entry : 0/0
  4271 ;;		On exit  : 0/0
  4272 ;;		Unchanged: 0/0
  4273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4274 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4276 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4277 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4278 ;;Total ram usage:        4 bytes
  4279 ;; Hardware stack levels used:    1
  4280 ;; Hardware stack levels required when called:    1
  4281 ;; This function calls:
  4282 ;;		Nothing
  4283 ;; This function is called by:
  4284 ;;		_dtoa
  4285 ;; This function uses a non-reentrant model
  4286 ;;
  4287                           
  4288                           	psect	text15
  4289  0016E4                     __ptext15:
  4290                           	opt callstack 0
  4291  0016E4                     _abs:
  4292                           	opt callstack 25
  4293                           
  4294                           ;incstack = 0
  4295  0016E4  BE14               	btfsc	abs@a+1,7,c
  4296  0016E6  D005               	goto	u1500
  4297  0016E8  5014               	movf	abs@a+1,w,c
  4298  0016EA  E110               	bnz	l1108
  4299  0016EC  0413               	decf	abs@a,w,c
  4300  0016EE  B0D8               	btfsc	status,0,c
  4301  0016F0  D00D               	goto	l1108
  4302  0016F2                     u1500:
  4303  0016F2  C013  F015         	movff	abs@a,??_abs
  4304  0016F6  C014  F016         	movff	abs@a+1,??_abs+1
  4305  0016FA  1E15               	comf	??_abs,f,c
  4306  0016FC  1E16               	comf	??_abs+1,f,c
  4307  0016FE  4A15               	infsnz	??_abs,f,c
  4308  001700  2A16               	incf	??_abs+1,f,c
  4309  001702  C015  F013         	movff	??_abs,?_abs
  4310  001706  C016  F014         	movff	??_abs+1,?_abs+1
  4311  00170A  0012               	return	
  4312  00170C                     l1108:
  4313  00170C  C013  F013         	movff	abs@a,?_abs
  4314  001710  C014  F014         	movff	abs@a+1,?_abs+1
  4315  001714  0012               	return		;funcret
  4316  001716                     __end_of_abs:
  4317                           	opt callstack 0
  4318                           
  4319 ;; *************** function ___aomod *****************
  4320 ;; Defined at:
  4321 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  4322 ;; Parameters:    Size  Location     Type
  4323 ;;  dividend        8    0[COMRAM] long long 
  4324 ;;  divisor         8    8[COMRAM] long long 
  4325 ;; Auto vars:     Size  Location     Type
  4326 ;;  sign            1   17[COMRAM] unsigned char 
  4327 ;;  counter         1   16[COMRAM] unsigned char 
  4328 ;; Return value:  Size  Location     Type
  4329 ;;                  8    0[COMRAM] long long 
  4330 ;; Registers used:
  4331 ;;		wreg, status,2, status,0
  4332 ;; Tracked objects:
  4333 ;;		On entry : 0/0
  4334 ;;		On exit  : 0/0
  4335 ;;		Unchanged: 0/0
  4336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4337 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4338 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4340 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4341 ;;Total ram usage:       18 bytes
  4342 ;; Hardware stack levels used:    1
  4343 ;; Hardware stack levels required when called:    1
  4344 ;; This function calls:
  4345 ;;		Nothing
  4346 ;; This function is called by:
  4347 ;;		_dtoa
  4348 ;; This function uses a non-reentrant model
  4349 ;;
  4350                           
  4351                           	psect	text16
  4352  001178                     __ptext16:
  4353                           	opt callstack 0
  4354  001178                     ___aomod:
  4355                           	opt callstack 25
  4356                           
  4357                           ;incstack = 0
  4358  001178  0E00               	movlw	0
  4359  00117A  6E12               	movwf	___aomod@sign,c
  4360  00117C  AE08               	btfss	___aomod@dividend+7,7,c
  4361  00117E  D012               	goto	l2440
  4362  001180  1E08               	comf	___aomod@dividend+7,f,c
  4363  001182  1E07               	comf	___aomod@dividend+6,f,c
  4364  001184  1E06               	comf	___aomod@dividend+5,f,c
  4365  001186  1E05               	comf	___aomod@dividend+4,f,c
  4366  001188  1E04               	comf	___aomod@dividend+3,f,c
  4367  00118A  1E03               	comf	___aomod@dividend+2,f,c
  4368  00118C  1E02               	comf	___aomod@dividend+1,f,c
  4369  00118E  6C01               	negf	___aomod@dividend,c
  4370  001190  0E00               	movlw	0
  4371  001192  2202               	addwfc	___aomod@dividend+1,f,c
  4372  001194  2203               	addwfc	___aomod@dividend+2,f,c
  4373  001196  2204               	addwfc	___aomod@dividend+3,f,c
  4374  001198  2205               	addwfc	___aomod@dividend+4,f,c
  4375  00119A  2206               	addwfc	___aomod@dividend+5,f,c
  4376  00119C  2207               	addwfc	___aomod@dividend+6,f,c
  4377  00119E  2208               	addwfc	___aomod@dividend+7,f,c
  4378  0011A0  0E01               	movlw	1
  4379  0011A2  6E12               	movwf	___aomod@sign,c
  4380  0011A4                     l2440:
  4381  0011A4  AE10               	btfss	___aomod@divisor+7,7,c
  4382  0011A6  D010               	goto	l2444
  4383  0011A8  1E10               	comf	___aomod@divisor+7,f,c
  4384  0011AA  1E0F               	comf	___aomod@divisor+6,f,c
  4385  0011AC  1E0E               	comf	___aomod@divisor+5,f,c
  4386  0011AE  1E0D               	comf	___aomod@divisor+4,f,c
  4387  0011B0  1E0C               	comf	___aomod@divisor+3,f,c
  4388  0011B2  1E0B               	comf	___aomod@divisor+2,f,c
  4389  0011B4  1E0A               	comf	___aomod@divisor+1,f,c
  4390  0011B6  6C09               	negf	___aomod@divisor,c
  4391  0011B8  0E00               	movlw	0
  4392  0011BA  220A               	addwfc	___aomod@divisor+1,f,c
  4393  0011BC  220B               	addwfc	___aomod@divisor+2,f,c
  4394  0011BE  220C               	addwfc	___aomod@divisor+3,f,c
  4395  0011C0  220D               	addwfc	___aomod@divisor+4,f,c
  4396  0011C2  220E               	addwfc	___aomod@divisor+5,f,c
  4397  0011C4  220F               	addwfc	___aomod@divisor+6,f,c
  4398  0011C6  2210               	addwfc	___aomod@divisor+7,f,c
  4399  0011C8                     l2444:
  4400  0011C8  5009               	movf	___aomod@divisor,w,c
  4401  0011CA  100A               	iorwf	___aomod@divisor+1,w,c
  4402  0011CC  100B               	iorwf	___aomod@divisor+2,w,c
  4403  0011CE  100C               	iorwf	___aomod@divisor+3,w,c
  4404  0011D0  100D               	iorwf	___aomod@divisor+4,w,c
  4405  0011D2  100E               	iorwf	___aomod@divisor+5,w,c
  4406  0011D4  100F               	iorwf	___aomod@divisor+6,w,c
  4407  0011D6  1010               	iorwf	___aomod@divisor+7,w,c
  4408  0011D8  B4D8               	btfsc	status,2,c
  4409  0011DA  D03C               	goto	l2460
  4410  0011DC  0E01               	movlw	1
  4411  0011DE  6E11               	movwf	___aomod@counter,c
  4412  0011E0  D00A               	goto	l2450
  4413  0011E2                     l2448:
  4414  0011E2  90D8               	bcf	status,0,c
  4415  0011E4  3609               	rlcf	___aomod@divisor,f,c
  4416  0011E6  360A               	rlcf	___aomod@divisor+1,f,c
  4417  0011E8  360B               	rlcf	___aomod@divisor+2,f,c
  4418  0011EA  360C               	rlcf	___aomod@divisor+3,f,c
  4419  0011EC  360D               	rlcf	___aomod@divisor+4,f,c
  4420  0011EE  360E               	rlcf	___aomod@divisor+5,f,c
  4421  0011F0  360F               	rlcf	___aomod@divisor+6,f,c
  4422  0011F2  3610               	rlcf	___aomod@divisor+7,f,c
  4423  0011F4  2A11               	incf	___aomod@counter,f,c
  4424  0011F6                     l2450:
  4425  0011F6  AE10               	btfss	___aomod@divisor+7,7,c
  4426  0011F8  D7F4               	goto	l2448
  4427  0011FA                     u1700:
  4428  0011FA  5009               	movf	___aomod@divisor,w,c
  4429  0011FC  5C01               	subwf	___aomod@dividend,w,c
  4430  0011FE  500A               	movf	___aomod@divisor+1,w,c
  4431  001200  5802               	subwfb	___aomod@dividend+1,w,c
  4432  001202  500B               	movf	___aomod@divisor+2,w,c
  4433  001204  5803               	subwfb	___aomod@dividend+2,w,c
  4434  001206  500C               	movf	___aomod@divisor+3,w,c
  4435  001208  5804               	subwfb	___aomod@dividend+3,w,c
  4436  00120A  500D               	movf	___aomod@divisor+4,w,c
  4437  00120C  5805               	subwfb	___aomod@dividend+4,w,c
  4438  00120E  500E               	movf	___aomod@divisor+5,w,c
  4439  001210  5806               	subwfb	___aomod@dividend+5,w,c
  4440  001212  500F               	movf	___aomod@divisor+6,w,c
  4441  001214  5807               	subwfb	___aomod@dividend+6,w,c
  4442  001216  5010               	movf	___aomod@divisor+7,w,c
  4443  001218  5808               	subwfb	___aomod@dividend+7,w,c
  4444  00121A  A0D8               	btfss	status,0,c
  4445  00121C  D010               	goto	l2456
  4446  00121E  5009               	movf	___aomod@divisor,w,c
  4447  001220  5E01               	subwf	___aomod@dividend,f,c
  4448  001222  500A               	movf	___aomod@divisor+1,w,c
  4449  001224  5A02               	subwfb	___aomod@dividend+1,f,c
  4450  001226  500B               	movf	___aomod@divisor+2,w,c
  4451  001228  5A03               	subwfb	___aomod@dividend+2,f,c
  4452  00122A  500C               	movf	___aomod@divisor+3,w,c
  4453  00122C  5A04               	subwfb	___aomod@dividend+3,f,c
  4454  00122E  500D               	movf	___aomod@divisor+4,w,c
  4455  001230  5A05               	subwfb	___aomod@dividend+4,f,c
  4456  001232  500E               	movf	___aomod@divisor+5,w,c
  4457  001234  5A06               	subwfb	___aomod@dividend+5,f,c
  4458  001236  500F               	movf	___aomod@divisor+6,w,c
  4459  001238  5A07               	subwfb	___aomod@dividend+6,f,c
  4460  00123A  5010               	movf	___aomod@divisor+7,w,c
  4461  00123C  5A08               	subwfb	___aomod@dividend+7,f,c
  4462  00123E                     l2456:
  4463  00123E  90D8               	bcf	status,0,c
  4464  001240  3210               	rrcf	___aomod@divisor+7,f,c
  4465  001242  320F               	rrcf	___aomod@divisor+6,f,c
  4466  001244  320E               	rrcf	___aomod@divisor+5,f,c
  4467  001246  320D               	rrcf	___aomod@divisor+4,f,c
  4468  001248  320C               	rrcf	___aomod@divisor+3,f,c
  4469  00124A  320B               	rrcf	___aomod@divisor+2,f,c
  4470  00124C  320A               	rrcf	___aomod@divisor+1,f,c
  4471  00124E  3209               	rrcf	___aomod@divisor,f,c
  4472  001250  2E11               	decfsz	___aomod@counter,f,c
  4473  001252  D7D3               	goto	u1700
  4474  001254                     l2460:
  4475  001254  5012               	movf	___aomod@sign,w,c
  4476  001256  B4D8               	btfsc	status,2,c
  4477  001258  D010               	goto	l2464
  4478  00125A  1E08               	comf	___aomod@dividend+7,f,c
  4479  00125C  1E07               	comf	___aomod@dividend+6,f,c
  4480  00125E  1E06               	comf	___aomod@dividend+5,f,c
  4481  001260  1E05               	comf	___aomod@dividend+4,f,c
  4482  001262  1E04               	comf	___aomod@dividend+3,f,c
  4483  001264  1E03               	comf	___aomod@dividend+2,f,c
  4484  001266  1E02               	comf	___aomod@dividend+1,f,c
  4485  001268  6C01               	negf	___aomod@dividend,c
  4486  00126A  0E00               	movlw	0
  4487  00126C  2202               	addwfc	___aomod@dividend+1,f,c
  4488  00126E  2203               	addwfc	___aomod@dividend+2,f,c
  4489  001270  2204               	addwfc	___aomod@dividend+3,f,c
  4490  001272  2205               	addwfc	___aomod@dividend+4,f,c
  4491  001274  2206               	addwfc	___aomod@dividend+5,f,c
  4492  001276  2207               	addwfc	___aomod@dividend+6,f,c
  4493  001278  2208               	addwfc	___aomod@dividend+7,f,c
  4494  00127A                     l2464:
  4495  00127A  C001  F001         	movff	___aomod@dividend,?___aomod
  4496  00127E  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  4497  001282  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  4498  001286  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  4499  00128A  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  4500  00128E  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  4501  001292  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  4502  001296  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  4503  00129A  0012               	return		;funcret
  4504  00129C                     __end_of___aomod:
  4505                           	opt callstack 0
  4506                           
  4507 ;; *************** function ___aodiv *****************
  4508 ;; Defined at:
  4509 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  4510 ;; Parameters:    Size  Location     Type
  4511 ;;  dividend        8    0[COMRAM] long long 
  4512 ;;  divisor         8    8[COMRAM] long long 
  4513 ;; Auto vars:     Size  Location     Type
  4514 ;;  quotient        8   18[COMRAM] long long 
  4515 ;;  sign            1   17[COMRAM] unsigned char 
  4516 ;;  counter         1   16[COMRAM] unsigned char 
  4517 ;; Return value:  Size  Location     Type
  4518 ;;                  8    0[COMRAM] long long 
  4519 ;; Registers used:
  4520 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4521 ;; Tracked objects:
  4522 ;;		On entry : 0/0
  4523 ;;		On exit  : 0/0
  4524 ;;		Unchanged: 0/0
  4525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4526 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4527 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4529 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4530 ;;Total ram usage:       26 bytes
  4531 ;; Hardware stack levels used:    1
  4532 ;; Hardware stack levels required when called:    1
  4533 ;; This function calls:
  4534 ;;		Nothing
  4535 ;; This function is called by:
  4536 ;;		_dtoa
  4537 ;; This function uses a non-reentrant model
  4538 ;;
  4539                           
  4540                           	psect	text17
  4541  000EF0                     __ptext17:
  4542                           	opt callstack 0
  4543  000EF0                     ___aodiv:
  4544                           	opt callstack 25
  4545                           
  4546                           ;incstack = 0
  4547  000EF0  0E00               	movlw	0
  4548  000EF2  6E12               	movwf	___aodiv@sign,c
  4549  000EF4  AE10               	btfss	___aodiv@divisor+7,7,c
  4550  000EF6  D012               	goto	l2396
  4551  000EF8  1E10               	comf	___aodiv@divisor+7,f,c
  4552  000EFA  1E0F               	comf	___aodiv@divisor+6,f,c
  4553  000EFC  1E0E               	comf	___aodiv@divisor+5,f,c
  4554  000EFE  1E0D               	comf	___aodiv@divisor+4,f,c
  4555  000F00  1E0C               	comf	___aodiv@divisor+3,f,c
  4556  000F02  1E0B               	comf	___aodiv@divisor+2,f,c
  4557  000F04  1E0A               	comf	___aodiv@divisor+1,f,c
  4558  000F06  6C09               	negf	___aodiv@divisor,c
  4559  000F08  0E00               	movlw	0
  4560  000F0A  220A               	addwfc	___aodiv@divisor+1,f,c
  4561  000F0C  220B               	addwfc	___aodiv@divisor+2,f,c
  4562  000F0E  220C               	addwfc	___aodiv@divisor+3,f,c
  4563  000F10  220D               	addwfc	___aodiv@divisor+4,f,c
  4564  000F12  220E               	addwfc	___aodiv@divisor+5,f,c
  4565  000F14  220F               	addwfc	___aodiv@divisor+6,f,c
  4566  000F16  2210               	addwfc	___aodiv@divisor+7,f,c
  4567  000F18  0E01               	movlw	1
  4568  000F1A  6E12               	movwf	___aodiv@sign,c
  4569  000F1C                     l2396:
  4570  000F1C  AE08               	btfss	___aodiv@dividend+7,7,c
  4571  000F1E  D012               	goto	l2402
  4572  000F20  1E08               	comf	___aodiv@dividend+7,f,c
  4573  000F22  1E07               	comf	___aodiv@dividend+6,f,c
  4574  000F24  1E06               	comf	___aodiv@dividend+5,f,c
  4575  000F26  1E05               	comf	___aodiv@dividend+4,f,c
  4576  000F28  1E04               	comf	___aodiv@dividend+3,f,c
  4577  000F2A  1E03               	comf	___aodiv@dividend+2,f,c
  4578  000F2C  1E02               	comf	___aodiv@dividend+1,f,c
  4579  000F2E  6C01               	negf	___aodiv@dividend,c
  4580  000F30  0E00               	movlw	0
  4581  000F32  2202               	addwfc	___aodiv@dividend+1,f,c
  4582  000F34  2203               	addwfc	___aodiv@dividend+2,f,c
  4583  000F36  2204               	addwfc	___aodiv@dividend+3,f,c
  4584  000F38  2205               	addwfc	___aodiv@dividend+4,f,c
  4585  000F3A  2206               	addwfc	___aodiv@dividend+5,f,c
  4586  000F3C  2207               	addwfc	___aodiv@dividend+6,f,c
  4587  000F3E  2208               	addwfc	___aodiv@dividend+7,f,c
  4588  000F40  0E01               	movlw	1
  4589  000F42  1A12               	xorwf	___aodiv@sign,f,c
  4590  000F44                     l2402:
  4591  000F44  EE20  F013         	lfsr	2,___aodiv@quotient
  4592  000F48  0E07               	movlw	7
  4593  000F4A                     u1621:
  4594  000F4A  6ADE               	clrf	postinc2,c
  4595  000F4C  06E8               	decf	wreg,f,c
  4596  000F4E  E2FD               	bc	u1621
  4597  000F50  5009               	movf	___aodiv@divisor,w,c
  4598  000F52  100A               	iorwf	___aodiv@divisor+1,w,c
  4599  000F54  100B               	iorwf	___aodiv@divisor+2,w,c
  4600  000F56  100C               	iorwf	___aodiv@divisor+3,w,c
  4601  000F58  100D               	iorwf	___aodiv@divisor+4,w,c
  4602  000F5A  100E               	iorwf	___aodiv@divisor+5,w,c
  4603  000F5C  100F               	iorwf	___aodiv@divisor+6,w,c
  4604  000F5E  1010               	iorwf	___aodiv@divisor+7,w,c
  4605  000F60  B4D8               	btfsc	status,2,c
  4606  000F62  D046               	goto	l2424
  4607  000F64  0E01               	movlw	1
  4608  000F66  6E11               	movwf	___aodiv@counter,c
  4609  000F68  D00A               	goto	l2410
  4610  000F6A                     l2408:
  4611  000F6A  90D8               	bcf	status,0,c
  4612  000F6C  3609               	rlcf	___aodiv@divisor,f,c
  4613  000F6E  360A               	rlcf	___aodiv@divisor+1,f,c
  4614  000F70  360B               	rlcf	___aodiv@divisor+2,f,c
  4615  000F72  360C               	rlcf	___aodiv@divisor+3,f,c
  4616  000F74  360D               	rlcf	___aodiv@divisor+4,f,c
  4617  000F76  360E               	rlcf	___aodiv@divisor+5,f,c
  4618  000F78  360F               	rlcf	___aodiv@divisor+6,f,c
  4619  000F7A  3610               	rlcf	___aodiv@divisor+7,f,c
  4620  000F7C  2A11               	incf	___aodiv@counter,f,c
  4621  000F7E                     l2410:
  4622  000F7E  AE10               	btfss	___aodiv@divisor+7,7,c
  4623  000F80  D7F4               	goto	l2408
  4624  000F82                     u1640:
  4625  000F82  90D8               	bcf	status,0,c
  4626  000F84  3613               	rlcf	___aodiv@quotient,f,c
  4627  000F86  3614               	rlcf	___aodiv@quotient+1,f,c
  4628  000F88  3615               	rlcf	___aodiv@quotient+2,f,c
  4629  000F8A  3616               	rlcf	___aodiv@quotient+3,f,c
  4630  000F8C  3617               	rlcf	___aodiv@quotient+4,f,c
  4631  000F8E  3618               	rlcf	___aodiv@quotient+5,f,c
  4632  000F90  3619               	rlcf	___aodiv@quotient+6,f,c
  4633  000F92  361A               	rlcf	___aodiv@quotient+7,f,c
  4634  000F94  5009               	movf	___aodiv@divisor,w,c
  4635  000F96  5C01               	subwf	___aodiv@dividend,w,c
  4636  000F98  500A               	movf	___aodiv@divisor+1,w,c
  4637  000F9A  5802               	subwfb	___aodiv@dividend+1,w,c
  4638  000F9C  500B               	movf	___aodiv@divisor+2,w,c
  4639  000F9E  5803               	subwfb	___aodiv@dividend+2,w,c
  4640  000FA0  500C               	movf	___aodiv@divisor+3,w,c
  4641  000FA2  5804               	subwfb	___aodiv@dividend+3,w,c
  4642  000FA4  500D               	movf	___aodiv@divisor+4,w,c
  4643  000FA6  5805               	subwfb	___aodiv@dividend+4,w,c
  4644  000FA8  500E               	movf	___aodiv@divisor+5,w,c
  4645  000FAA  5806               	subwfb	___aodiv@dividend+5,w,c
  4646  000FAC  500F               	movf	___aodiv@divisor+6,w,c
  4647  000FAE  5807               	subwfb	___aodiv@dividend+6,w,c
  4648  000FB0  5010               	movf	___aodiv@divisor+7,w,c
  4649  000FB2  5808               	subwfb	___aodiv@dividend+7,w,c
  4650  000FB4  A0D8               	btfss	status,0,c
  4651  000FB6  D011               	goto	l2420
  4652  000FB8  5009               	movf	___aodiv@divisor,w,c
  4653  000FBA  5E01               	subwf	___aodiv@dividend,f,c
  4654  000FBC  500A               	movf	___aodiv@divisor+1,w,c
  4655  000FBE  5A02               	subwfb	___aodiv@dividend+1,f,c
  4656  000FC0  500B               	movf	___aodiv@divisor+2,w,c
  4657  000FC2  5A03               	subwfb	___aodiv@dividend+2,f,c
  4658  000FC4  500C               	movf	___aodiv@divisor+3,w,c
  4659  000FC6  5A04               	subwfb	___aodiv@dividend+3,f,c
  4660  000FC8  500D               	movf	___aodiv@divisor+4,w,c
  4661  000FCA  5A05               	subwfb	___aodiv@dividend+4,f,c
  4662  000FCC  500E               	movf	___aodiv@divisor+5,w,c
  4663  000FCE  5A06               	subwfb	___aodiv@dividend+5,f,c
  4664  000FD0  500F               	movf	___aodiv@divisor+6,w,c
  4665  000FD2  5A07               	subwfb	___aodiv@dividend+6,f,c
  4666  000FD4  5010               	movf	___aodiv@divisor+7,w,c
  4667  000FD6  5A08               	subwfb	___aodiv@dividend+7,f,c
  4668  000FD8  8013               	bsf	___aodiv@quotient,0,c
  4669  000FDA                     l2420:
  4670  000FDA  90D8               	bcf	status,0,c
  4671  000FDC  3210               	rrcf	___aodiv@divisor+7,f,c
  4672  000FDE  320F               	rrcf	___aodiv@divisor+6,f,c
  4673  000FE0  320E               	rrcf	___aodiv@divisor+5,f,c
  4674  000FE2  320D               	rrcf	___aodiv@divisor+4,f,c
  4675  000FE4  320C               	rrcf	___aodiv@divisor+3,f,c
  4676  000FE6  320B               	rrcf	___aodiv@divisor+2,f,c
  4677  000FE8  320A               	rrcf	___aodiv@divisor+1,f,c
  4678  000FEA  3209               	rrcf	___aodiv@divisor,f,c
  4679  000FEC  2E11               	decfsz	___aodiv@counter,f,c
  4680  000FEE  D7C9               	goto	u1640
  4681  000FF0                     l2424:
  4682  000FF0  5012               	movf	___aodiv@sign,w,c
  4683  000FF2  B4D8               	btfsc	status,2,c
  4684  000FF4  D010               	goto	l2428
  4685  000FF6  1E1A               	comf	___aodiv@quotient+7,f,c
  4686  000FF8  1E19               	comf	___aodiv@quotient+6,f,c
  4687  000FFA  1E18               	comf	___aodiv@quotient+5,f,c
  4688  000FFC  1E17               	comf	___aodiv@quotient+4,f,c
  4689  000FFE  1E16               	comf	___aodiv@quotient+3,f,c
  4690  001000  1E15               	comf	___aodiv@quotient+2,f,c
  4691  001002  1E14               	comf	___aodiv@quotient+1,f,c
  4692  001004  6C13               	negf	___aodiv@quotient,c
  4693  001006  0E00               	movlw	0
  4694  001008  2214               	addwfc	___aodiv@quotient+1,f,c
  4695  00100A  2215               	addwfc	___aodiv@quotient+2,f,c
  4696  00100C  2216               	addwfc	___aodiv@quotient+3,f,c
  4697  00100E  2217               	addwfc	___aodiv@quotient+4,f,c
  4698  001010  2218               	addwfc	___aodiv@quotient+5,f,c
  4699  001012  2219               	addwfc	___aodiv@quotient+6,f,c
  4700  001014  221A               	addwfc	___aodiv@quotient+7,f,c
  4701  001016                     l2428:
  4702  001016  C013  F001         	movff	___aodiv@quotient,?___aodiv
  4703  00101A  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  4704  00101E  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  4705  001022  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  4706  001026  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  4707  00102A  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  4708  00102E  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  4709  001032  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  4710  001036  0012               	return		;funcret
  4711  001038                     __end_of___aodiv:
  4712                           	opt callstack 0
  4713                           
  4714 ;; *************** function _atoi *****************
  4715 ;; Defined at:
  4716 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
  4717 ;; Parameters:    Size  Location     Type
  4718 ;;  s               2    7[COMRAM] PTR const unsigned char 
  4719 ;;		 -> STR_33(15), STR_32(15), STR_31(15), STR_30(15), 
  4720 ;;		 -> STR_29(17), STR_28(15), STR_27(15), STR_26(12), 
  4721 ;;		 -> STR_25(17), STR_24(13), STR_23(12), STR_22(12), 
  4722 ;;		 -> STR_21(17), STR_20(13), STR_19(12), STR_18(12), 
  4723 ;;		 -> STR_17(17), STR_16(13), STR_15(13), STR_14(17), 
  4724 ;;		 -> STR_13(9), STR_12(9), STR_11(16), STR_10(9), 
  4725 ;;		 -> STR_9(9), STR_8(17), STR_7(15), STR_6(15), 
  4726 ;;		 -> STR_5(12), STR_4(10), STR_3(15), STR_2(12), 
  4727 ;;		 -> STR_1(10), 
  4728 ;; Auto vars:     Size  Location     Type
  4729 ;;  n               2   20[COMRAM] int 
  4730 ;;  neg             2   13[COMRAM] int 
  4731 ;; Return value:  Size  Location     Type
  4732 ;;                  2    7[COMRAM] int 
  4733 ;; Registers used:
  4734 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4735 ;; Tracked objects:
  4736 ;;		On entry : 0/0
  4737 ;;		On exit  : 0/0
  4738 ;;		Unchanged: 0/0
  4739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4740 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4741 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4742 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4743 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4744 ;;Total ram usage:       15 bytes
  4745 ;; Hardware stack levels used:    1
  4746 ;; Hardware stack levels required when called:    2
  4747 ;; This function calls:
  4748 ;;		___wmul
  4749 ;;		_isdigit
  4750 ;;		_isspace
  4751 ;; This function is called by:
  4752 ;;		_vfpfcnvrt
  4753 ;; This function uses a non-reentrant model
  4754 ;;
  4755                           
  4756                           	psect	text18
  4757  001038                     __ptext18:
  4758                           	opt callstack 0
  4759  001038                     _atoi:
  4760                           	opt callstack 25
  4761                           
  4762                           ;incstack = 0
  4763  001038  0E00               	movlw	0
  4764  00103A  6E16               	movwf	atoi@n+1,c
  4765  00103C  0E00               	movlw	0
  4766  00103E  6E15               	movwf	atoi@n,c
  4767  001040  0E00               	movlw	0
  4768  001042  6E0F               	movwf	atoi@neg+1,c
  4769  001044  0E00               	movlw	0
  4770  001046  6E0E               	movwf	atoi@neg,c
  4771  001048  D002               	goto	l2612
  4772  00104A                     l2610:
  4773  00104A  4A08               	infsnz	atoi@s,f,c
  4774  00104C  2A09               	incf	atoi@s+1,f,c
  4775  00104E                     l2612:
  4776  00104E  0E01               	movlw	1
  4777  001050  6E14               	movwf	_atoi$1120,c
  4778  001052  C008  FFF6         	movff	atoi@s,tblptrl
  4779  001056  C009  FFF7         	movff	atoi@s+1,tblptrh
  4780  00105A                     	if	0	;tblptru may be non-zero
  4781  00105A                     	endif
  4782  00105A                     	if	0	;tblptru may be non-zero
  4783  00105A                     	endif
  4784  00105A  0008               	tblrd		*
  4785  00105C  50F5               	movf	tablat,w,c
  4786  00105E  0A20               	xorlw	32
  4787  001060  B4D8               	btfsc	status,2,c
  4788  001062  D018               	goto	l2620
  4789  001064  0EF7               	movlw	247
  4790  001066  6E0A               	movwf	??_atoi& (0+255),c
  4791  001068  0EFF               	movlw	255
  4792  00106A  6E0B               	movwf	(??_atoi+1)& (0+255),c
  4793  00106C  C008  FFF6         	movff	atoi@s,tblptrl
  4794  001070  C009  FFF7         	movff	atoi@s+1,tblptrh
  4795  001074                     	if	0	;tblptru may be non-zero
  4796  001074                     	endif
  4797  001074                     	if	0	;tblptru may be non-zero
  4798  001074                     	endif
  4799  001074  0008               	tblrd		*
  4800  001076  50F5               	movf	tablat,w,c
  4801  001078  6E0C               	movwf	(??_atoi+2)& (0+255),c
  4802  00107A  6A0D               	clrf	(??_atoi+3)& (0+255),c
  4803  00107C  500A               	movf	??_atoi,w,c
  4804  00107E  260C               	addwf	??_atoi+2,f,c
  4805  001080  500B               	movf	??_atoi+1,w,c
  4806  001082  220D               	addwfc	??_atoi+3,f,c
  4807  001084  500D               	movf	??_atoi+3,w,c
  4808  001086  E104               	bnz	u2080
  4809  001088  0E05               	movlw	5
  4810  00108A  5C0C               	subwf	??_atoi+2,w,c
  4811  00108C  A0D8               	btfss	status,0,c
  4812  00108E  D002               	goto	l2620
  4813  001090                     u2080:
  4814  001090  0E00               	movlw	0
  4815  001092  6E14               	movwf	_atoi$1120,c
  4816  001094                     l2620:
  4817  001094  C014  F010         	movff	_atoi$1120,_atoi$1119
  4818  001098  6A11               	clrf	_atoi$1119+1,c
  4819  00109A  5010               	movf	_atoi$1119,w,c
  4820  00109C  1011               	iorwf	_atoi$1119+1,w,c
  4821  00109E  B4D8               	btfsc	status,2,c
  4822  0010A0  D008               	goto	l2630
  4823  0010A2  D7D3               	goto	l2610
  4824  0010A4                     l2626:
  4825  0010A4  0E00               	movlw	0
  4826  0010A6  6E0F               	movwf	atoi@neg+1,c
  4827  0010A8  0E01               	movlw	1
  4828  0010AA  6E0E               	movwf	atoi@neg,c
  4829  0010AC                     l2628:
  4830  0010AC  4A08               	infsnz	atoi@s,f,c
  4831  0010AE  2A09               	incf	atoi@s+1,f,c
  4832  0010B0  D02E               	goto	l2636
  4833  0010B2                     l2630:
  4834  0010B2  C008  FFF6         	movff	atoi@s,tblptrl
  4835  0010B6  C009  FFF7         	movff	atoi@s+1,tblptrh
  4836  0010BA                     	if	0	;tblptru may be non-zero
  4837  0010BA                     	endif
  4838  0010BA                     	if	0	;tblptru may be non-zero
  4839  0010BA                     	endif
  4840  0010BA  0008               	tblrd		*
  4841  0010BC  50F5               	movf	tablat,w,c
  4842  0010BE  6E0A               	movwf	??_atoi& (0+255),c
  4843  0010C0  6A0B               	clrf	(??_atoi+1)& (0+255),c
  4844                           
  4845                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4846                           ; Switch size 1, requested type "simple"
  4847                           ; Number of cases is 1, Range of values is 0 to 0
  4848                           ; switch strategies available:
  4849                           ; Name         Instructions Cycles
  4850                           ; simple_byte            4     3 (average)
  4851                           ;	Chosen strategy is simple_byte
  4852  0010C2  500B               	movf	??_atoi+1,w,c
  4853  0010C4  0A00               	xorlw	0	; case 0
  4854  0010C6  A4D8               	btfss	status,2,c
  4855  0010C8  D022               	goto	l2636
  4856                           
  4857                           ; Switch size 1, requested type "simple"
  4858                           ; Number of cases is 2, Range of values is 43 to 45
  4859                           ; switch strategies available:
  4860                           ; Name         Instructions Cycles
  4861                           ; simple_byte            7     4 (average)
  4862                           ;	Chosen strategy is simple_byte
  4863  0010CA  500A               	movf	??_atoi,w,c
  4864  0010CC  0A2B               	xorlw	43	; case 43
  4865  0010CE  B4D8               	btfsc	status,2,c
  4866  0010D0  D7ED               	goto	l2628
  4867  0010D2  0A06               	xorlw	6	; case 45
  4868  0010D4  B4D8               	btfsc	status,2,c
  4869  0010D6  D7E6               	goto	l2626
  4870  0010D8  D01A               	goto	l2636
  4871  0010DA                     l2632:
  4872  0010DA  C015  F001         	movff	atoi@n,___wmul@multiplier
  4873  0010DE  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  4874  0010E2  0E00               	movlw	0
  4875  0010E4  6E04               	movwf	___wmul@multiplicand+1,c
  4876  0010E6  0E0A               	movlw	10
  4877  0010E8  6E03               	movwf	___wmul@multiplicand,c
  4878  0010EA  EC10  F00C         	call	___wmul	;wreg free
  4879  0010EE  C008  FFF6         	movff	atoi@s,tblptrl
  4880  0010F2  C009  FFF7         	movff	atoi@s+1,tblptrh
  4881  0010F6                     	if	0	;tblptru may be non-zero
  4882  0010F6                     	endif
  4883  0010F6                     	if	0	;tblptru may be non-zero
  4884  0010F6                     	endif
  4885  0010F6  0008               	tblrd		*
  4886  0010F8  50F5               	movf	tablat,w,c
  4887  0010FA  5E01               	subwf	?___wmul,f,c
  4888  0010FC  0E00               	movlw	0
  4889  0010FE  5A02               	subwfb	?___wmul+1,f,c
  4890  001100  0E30               	movlw	48
  4891  001102  2401               	addwf	?___wmul,w,c
  4892  001104  6E15               	movwf	atoi@n,c
  4893  001106  0E00               	movlw	0
  4894  001108  2002               	addwfc	?___wmul+1,w,c
  4895  00110A  6E16               	movwf	atoi@n+1,c
  4896  00110C  D7CF               	goto	l2628
  4897  00110E                     l2636:
  4898  00110E  0ED0               	movlw	208
  4899  001110  6E0A               	movwf	??_atoi& (0+255),c
  4900  001112  0EFF               	movlw	255
  4901  001114  6E0B               	movwf	(??_atoi+1)& (0+255),c
  4902  001116  C008  FFF6         	movff	atoi@s,tblptrl
  4903  00111A  C009  FFF7         	movff	atoi@s+1,tblptrh
  4904  00111E                     	if	0	;tblptru may be non-zero
  4905  00111E                     	endif
  4906  00111E                     	if	0	;tblptru may be non-zero
  4907  00111E                     	endif
  4908  00111E  0008               	tblrd		*
  4909  001120  50F5               	movf	tablat,w,c
  4910  001122  6E0C               	movwf	(??_atoi+2)& (0+255),c
  4911  001124  6A0D               	clrf	(??_atoi+3)& (0+255),c
  4912  001126  500A               	movf	??_atoi,w,c
  4913  001128  260C               	addwf	??_atoi+2,f,c
  4914  00112A  500B               	movf	??_atoi+1,w,c
  4915  00112C  220D               	addwfc	??_atoi+3,f,c
  4916  00112E  500D               	movf	??_atoi+3,w,c
  4917  001130  E106               	bnz	u2100
  4918  001132  0E0A               	movlw	10
  4919  001134  5C0C               	subwf	??_atoi+2,w,c
  4920  001136  B0D8               	btfsc	status,0,c
  4921  001138  D002               	goto	u2100
  4922  00113A  0E01               	movlw	1
  4923  00113C  D001               	goto	u2110
  4924  00113E                     u2100:
  4925  00113E  0E00               	movlw	0
  4926  001140                     u2110:
  4927  001140  6E12               	movwf	_atoi$1121,c
  4928  001142  6A13               	clrf	_atoi$1121+1,c
  4929  001144  5012               	movf	_atoi$1121,w,c
  4930  001146  1013               	iorwf	_atoi$1121+1,w,c
  4931  001148  A4D8               	btfss	status,2,c
  4932  00114A  D7C7               	goto	l2632
  4933  00114C  500E               	movf	atoi@neg,w,c
  4934  00114E  100F               	iorwf	atoi@neg+1,w,c
  4935  001150  A4D8               	btfss	status,2,c
  4936  001152  D00D               	goto	l1139
  4937  001154  C015  F00A         	movff	atoi@n,??_atoi
  4938  001158  C016  F00B         	movff	atoi@n+1,??_atoi+1
  4939  00115C  1E0A               	comf	??_atoi,f,c
  4940  00115E  1E0B               	comf	??_atoi+1,f,c
  4941  001160  4A0A               	infsnz	??_atoi,f,c
  4942  001162  2A0B               	incf	??_atoi+1,f,c
  4943  001164  C00A  F008         	movff	??_atoi,?_atoi
  4944  001168  C00B  F009         	movff	??_atoi+1,?_atoi+1
  4945  00116C  0012               	return	
  4946  00116E                     l1139:
  4947  00116E  C015  F008         	movff	atoi@n,?_atoi
  4948  001172  C016  F009         	movff	atoi@n+1,?_atoi+1
  4949  001176  0012               	return		;funcret
  4950  001178                     __end_of_atoi:
  4951                           	opt callstack 0
  4952                           
  4953 ;; *************** function _isspace *****************
  4954 ;; Defined at:
  4955 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
  4956 ;; Parameters:    Size  Location     Type
  4957 ;;  c               2    0[COMRAM] int 
  4958 ;; Auto vars:     Size  Location     Type
  4959 ;;		None
  4960 ;; Return value:  Size  Location     Type
  4961 ;;                  2    0[COMRAM] int 
  4962 ;; Registers used:
  4963 ;;		wreg, status,2, status,0
  4964 ;; Tracked objects:
  4965 ;;		On entry : 0/0
  4966 ;;		On exit  : 0/0
  4967 ;;		Unchanged: 0/0
  4968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4969 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4970 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4971 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4972 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4973 ;;Total ram usage:        7 bytes
  4974 ;; Hardware stack levels used:    1
  4975 ;; Hardware stack levels required when called:    1
  4976 ;; This function calls:
  4977 ;;		Nothing
  4978 ;; This function is called by:
  4979 ;;		_atoi
  4980 ;; This function uses a non-reentrant model
  4981 ;;
  4982                           
  4983                           	psect	text19
  4984  00163A                     __ptext19:
  4985                           	opt callstack 0
  4986  00163A                     _isspace:
  4987                           	opt callstack 25
  4988                           
  4989                           ;incstack = 0
  4990  00163A  0E01               	movlw	1
  4991  00163C  6E07               	movwf	_isspace$1146,c
  4992  00163E  0E20               	movlw	32
  4993  001640  1801               	xorwf	isspace@c,w,c
  4994  001642  1002               	iorwf	isspace@c+1,w,c
  4995  001644  B4D8               	btfsc	status,2,c
  4996  001646  D014               	goto	l2476
  4997  001648  0EF7               	movlw	247
  4998  00164A  6E03               	movwf	??_isspace& (0+255),c
  4999  00164C  0EFF               	movlw	255
  5000  00164E  6E04               	movwf	(??_isspace+1)& (0+255),c
  5001  001650  C001  F005         	movff	isspace@c,??_isspace+2
  5002  001654  C002  F006         	movff	isspace@c+1,??_isspace+3
  5003  001658  5003               	movf	??_isspace,w,c
  5004  00165A  2605               	addwf	??_isspace+2,f,c
  5005  00165C  5004               	movf	??_isspace+1,w,c
  5006  00165E  2206               	addwfc	??_isspace+3,f,c
  5007  001660  5006               	movf	??_isspace+3,w,c
  5008  001662  E104               	bnz	u1740
  5009  001664  0E05               	movlw	5
  5010  001666  5C05               	subwf	??_isspace+2,w,c
  5011  001668  A0D8               	btfss	status,0,c
  5012  00166A  D002               	goto	l2476
  5013  00166C                     u1740:
  5014  00166C  0E00               	movlw	0
  5015  00166E  6E07               	movwf	_isspace$1146,c
  5016  001670                     l2476:
  5017  001670  C007  F001         	movff	_isspace$1146,?_isspace
  5018  001674  6A02               	clrf	?_isspace+1,c
  5019  001676  0012               	return		;funcret
  5020  001678                     __end_of_isspace:
  5021                           	opt callstack 0
  5022                           
  5023 ;; *************** function _isdigit *****************
  5024 ;; Defined at:
  5025 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
  5026 ;; Parameters:    Size  Location     Type
  5027 ;;  c               2    0[COMRAM] int 
  5028 ;; Auto vars:     Size  Location     Type
  5029 ;;		None
  5030 ;; Return value:  Size  Location     Type
  5031 ;;                  2    0[COMRAM] int 
  5032 ;; Registers used:
  5033 ;;		wreg, status,2, status,0
  5034 ;; Tracked objects:
  5035 ;;		On entry : 0/0
  5036 ;;		On exit  : 0/0
  5037 ;;		Unchanged: 0/0
  5038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5039 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5041 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5042 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5043 ;;Total ram usage:        6 bytes
  5044 ;; Hardware stack levels used:    1
  5045 ;; Hardware stack levels required when called:    1
  5046 ;; This function calls:
  5047 ;;		Nothing
  5048 ;; This function is called by:
  5049 ;;		_vfpfcnvrt
  5050 ;;		_atoi
  5051 ;; This function uses a non-reentrant model
  5052 ;;
  5053                           
  5054                           	psect	text20
  5055  001776                     __ptext20:
  5056                           	opt callstack 0
  5057  001776                     _isdigit:
  5058                           	opt callstack 26
  5059                           
  5060                           ;incstack = 0
  5061  001776  0ED0               	movlw	208
  5062  001778  6E03               	movwf	??_isdigit& (0+255),c
  5063  00177A  0EFF               	movlw	255
  5064  00177C  6E04               	movwf	(??_isdigit+1)& (0+255),c
  5065  00177E  C001  F005         	movff	isdigit@c,??_isdigit+2
  5066  001782  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  5067  001786  5003               	movf	??_isdigit,w,c
  5068  001788  2605               	addwf	??_isdigit+2,f,c
  5069  00178A  5004               	movf	??_isdigit+1,w,c
  5070  00178C  2206               	addwfc	??_isdigit+3,f,c
  5071  00178E  5006               	movf	??_isdigit+3,w,c
  5072  001790  E106               	bnz	u1580
  5073  001792  0E0A               	movlw	10
  5074  001794  5C05               	subwf	??_isdigit+2,w,c
  5075  001796  B0D8               	btfsc	status,0,c
  5076  001798  D002               	goto	u1580
  5077  00179A  0E01               	movlw	1
  5078  00179C  D001               	goto	u1590
  5079  00179E                     u1580:
  5080  00179E  0E00               	movlw	0
  5081  0017A0                     u1590:
  5082  0017A0  6E01               	movwf	?_isdigit,c
  5083  0017A2  6A02               	clrf	?_isdigit+1,c
  5084  0017A4  0012               	return		;funcret
  5085  0017A6                     __end_of_isdigit:
  5086                           	opt callstack 0
  5087                           
  5088 ;; *************** function ___wmul *****************
  5089 ;; Defined at:
  5090 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  5091 ;; Parameters:    Size  Location     Type
  5092 ;;  multiplier      2    0[COMRAM] unsigned int 
  5093 ;;  multiplicand    2    2[COMRAM] unsigned int 
  5094 ;; Auto vars:     Size  Location     Type
  5095 ;;  product         2    4[COMRAM] unsigned int 
  5096 ;; Return value:  Size  Location     Type
  5097 ;;                  2    0[COMRAM] unsigned int 
  5098 ;; Registers used:
  5099 ;;		wreg, status,2, status,0, prodl, prodh
  5100 ;; Tracked objects:
  5101 ;;		On entry : 0/0
  5102 ;;		On exit  : 0/0
  5103 ;;		Unchanged: 0/0
  5104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5105 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5106 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5108 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5109 ;;Total ram usage:        6 bytes
  5110 ;; Hardware stack levels used:    1
  5111 ;; Hardware stack levels required when called:    1
  5112 ;; This function calls:
  5113 ;;		Nothing
  5114 ;; This function is called by:
  5115 ;;		_main
  5116 ;;		_atoi
  5117 ;; This function uses a non-reentrant model
  5118 ;;
  5119                           
  5120                           	psect	text21
  5121  001820                     __ptext21:
  5122                           	opt callstack 0
  5123  001820                     ___wmul:
  5124                           	opt callstack 25
  5125                           
  5126                           ;incstack = 0
  5127  001820  5001               	movf	___wmul@multiplier,w,c
  5128  001822  0203               	mulwf	___wmul@multiplicand,c
  5129  001824  CFF3 F005          	movff	prodl,___wmul@product
  5130  001828  CFF4 F006          	movff	prodh,___wmul@product+1
  5131  00182C  5001               	movf	___wmul@multiplier,w,c
  5132  00182E  0204               	mulwf	___wmul@multiplicand+1,c
  5133  001830  50F3               	movf	prodl,w,c
  5134  001832  2606               	addwf	___wmul@product+1,f,c
  5135  001834  5002               	movf	___wmul@multiplier+1,w,c
  5136  001836  0203               	mulwf	___wmul@multiplicand,c
  5137  001838  50F3               	movf	prodl,w,c
  5138  00183A  2606               	addwf	___wmul@product+1,f,c
  5139  00183C  C005  F001         	movff	___wmul@product,?___wmul
  5140  001840  C006  F002         	movff	___wmul@product+1,?___wmul+1
  5141  001844  0012               	return		;funcret
  5142  001846                     __end_of___wmul:
  5143                           	opt callstack 0
  5144                           
  5145 ;; *************** function _initLCD *****************
  5146 ;; Defined at:
  5147 ;;		line 69 in file "lcd.c"
  5148 ;; Parameters:    Size  Location     Type
  5149 ;;		None
  5150 ;; Auto vars:     Size  Location     Type
  5151 ;;		None
  5152 ;; Return value:  Size  Location     Type
  5153 ;;                  1    wreg      void 
  5154 ;; Registers used:
  5155 ;;		wreg, status,2, status,0, cstack
  5156 ;; Tracked objects:
  5157 ;;		On entry : 0/0
  5158 ;;		On exit  : 0/0
  5159 ;;		Unchanged: 0/0
  5160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5163 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5164 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5165 ;;Total ram usage:        1 bytes
  5166 ;; Hardware stack levels used:    1
  5167 ;; Hardware stack levels required when called:    5
  5168 ;; This function calls:
  5169 ;;		_lcdInst
  5170 ;;		_send_byte
  5171 ;;		_send_nibble
  5172 ;; This function is called by:
  5173 ;;		_main
  5174 ;;		_RTC_main
  5175 ;;		_i2c_mine
  5176 ;; This function uses a non-reentrant model
  5177 ;;
  5178                           
  5179                           	psect	text22
  5180  001420                     __ptext22:
  5181                           	opt callstack 0
  5182  001420                     _initLCD:
  5183                           	opt callstack 25
  5184                           
  5185                           ;lcd.c: 70:     _delay((unsigned long)((15)*(10000000/4000.0)));
  5186                           
  5187                           ;incstack = 0
  5188  001420  0E31               	movlw	49
  5189  001422  6E05               	movwf	??_initLCD& (0+255),c
  5190  001424  0EB2               	movlw	178
  5191  001426                     u2827:
  5192  001426  2EE8               	decfsz	wreg,f,c
  5193  001428  D7FE               	bra	u2827
  5194  00142A  2E05               	decfsz	??_initLCD& (0+255),f,c
  5195  00142C  D7FC               	bra	u2827
  5196  00142E  D000               	nop2	
  5197                           
  5198                           ;lcd.c: 72:     LATDbits.LATD2 = 0;
  5199  001430  948C               	bcf	3980,2,c	;volatile
  5200                           
  5201                           ;lcd.c: 74:     send_nibble(0b0011);
  5202  001432  0E03               	movlw	3
  5203  001434  EC35  F00C         	call	_send_nibble
  5204                           
  5205                           ;lcd.c: 75:     _delay((unsigned long)((5)*(10000000/4000.0)));
  5206  001438  0E11               	movlw	17
  5207  00143A  6E05               	movwf	??_initLCD& (0+255),c
  5208  00143C  0E3A               	movlw	58
  5209  00143E                     u2837:
  5210  00143E  2EE8               	decfsz	wreg,f,c
  5211  001440  D7FE               	bra	u2837
  5212  001442  2E05               	decfsz	??_initLCD& (0+255),f,c
  5213  001444  D7FC               	bra	u2837
  5214  001446  D000               	nop2	
  5215                           
  5216                           ;lcd.c: 76:     send_nibble(0b0011);
  5217  001448  0E03               	movlw	3
  5218  00144A  EC35  F00C         	call	_send_nibble
  5219                           
  5220                           ;lcd.c: 77:     _delay((unsigned long)((150)*(10000000/4000000.0)));
  5221  00144E  0E7D               	movlw	125
  5222  001450                     u2847:
  5223  001450  2EE8               	decfsz	wreg,f,c
  5224  001452  D7FE               	bra	u2847
  5225                           
  5226                           ;lcd.c: 78:     send_byte(0b00110010);
  5227  001454  0E32               	movlw	50
  5228  001456  EC40  F00C         	call	_send_byte
  5229                           
  5230                           ;lcd.c: 80:     send_byte(0b00101000);
  5231  00145A  0E28               	movlw	40
  5232  00145C  EC40  F00C         	call	_send_byte
  5233                           
  5234                           ;lcd.c: 81:     send_byte(0b00001000);
  5235  001460  0E08               	movlw	8
  5236  001462  EC40  F00C         	call	_send_byte
  5237                           
  5238                           ;lcd.c: 82:     send_byte(0b00000001);
  5239  001466  0E01               	movlw	1
  5240  001468  EC40  F00C         	call	_send_byte
  5241                           
  5242                           ;lcd.c: 83:     _delay((unsigned long)((5)*(10000000/4000.0)));
  5243  00146C  0E11               	movlw	17
  5244  00146E  6E05               	movwf	??_initLCD& (0+255),c
  5245  001470  0E3A               	movlw	58
  5246  001472                     u2857:
  5247  001472  2EE8               	decfsz	wreg,f,c
  5248  001474  D7FE               	bra	u2857
  5249  001476  2E05               	decfsz	??_initLCD& (0+255),f,c
  5250  001478  D7FC               	bra	u2857
  5251  00147A  D000               	nop2	
  5252                           
  5253                           ;lcd.c: 84:     send_byte(0b00000110);
  5254  00147C  0E06               	movlw	6
  5255  00147E  EC40  F00C         	call	_send_byte
  5256                           
  5257                           ;lcd.c: 87:     { lcdInst( (unsigned char)(8 | (1 << 2) | (1 << 1) | 1) );};
  5258  001482  0E0F               	movlw	15
  5259  001484  EC61  F00C         	call	_lcdInst
  5260  001488  0012               	return		;funcret
  5261  00148A                     __end_of_initLCD:
  5262                           	opt callstack 0
  5263                           
  5264 ;; *************** function _lcdInst *****************
  5265 ;; Defined at:
  5266 ;;		line 64 in file "lcd.c"
  5267 ;; Parameters:    Size  Location     Type
  5268 ;;  data            1    wreg     unsigned char 
  5269 ;; Auto vars:     Size  Location     Type
  5270 ;;  data            1    3[COMRAM] unsigned char 
  5271 ;; Return value:  Size  Location     Type
  5272 ;;                  1    wreg      void 
  5273 ;; Registers used:
  5274 ;;		wreg, status,2, status,0, cstack
  5275 ;; Tracked objects:
  5276 ;;		On entry : 0/0
  5277 ;;		On exit  : 0/0
  5278 ;;		Unchanged: 0/0
  5279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5281 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5283 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5284 ;;Total ram usage:        1 bytes
  5285 ;; Hardware stack levels used:    1
  5286 ;; Hardware stack levels required when called:    4
  5287 ;; This function calls:
  5288 ;;		_send_byte
  5289 ;; This function is called by:
  5290 ;;		_main
  5291 ;;		_initLCD
  5292 ;;		_lcd_shift_cursor
  5293 ;;		_lcd_shift_display
  5294 ;;		_RTC_main
  5295 ;;		_i2c_mine
  5296 ;; This function uses a non-reentrant model
  5297 ;;
  5298                           
  5299                           	psect	text23
  5300  0018C2                     __ptext23:
  5301                           	opt callstack 0
  5302  0018C2                     _lcdInst:
  5303                           	opt callstack 26
  5304                           
  5305                           ;incstack = 0
  5306                           ;lcdInst@data stored from wreg
  5307  0018C2  6E04               	movwf	lcdInst@data,c
  5308                           
  5309                           ;lcd.c: 65:     LATDbits.LATD2 = 0;
  5310  0018C4  948C               	bcf	3980,2,c	;volatile
  5311                           
  5312                           ;lcd.c: 66:     send_byte(data);
  5313  0018C6  5004               	movf	lcdInst@data,w,c
  5314  0018C8  EC40  F00C         	call	_send_byte
  5315  0018CC  0012               	return		;funcret
  5316  0018CE                     __end_of_lcdInst:
  5317                           	opt callstack 0
  5318                           
  5319 ;; *************** function _send_byte *****************
  5320 ;; Defined at:
  5321 ;;		line 55 in file "lcd.c"
  5322 ;; Parameters:    Size  Location     Type
  5323 ;;  data            1    wreg     unsigned char 
  5324 ;; Auto vars:     Size  Location     Type
  5325 ;;  data            1    2[COMRAM] unsigned char 
  5326 ;; Return value:  Size  Location     Type
  5327 ;;                  1    wreg      void 
  5328 ;; Registers used:
  5329 ;;		wreg, status,2, status,0, cstack
  5330 ;; Tracked objects:
  5331 ;;		On entry : 0/0
  5332 ;;		On exit  : 0/0
  5333 ;;		Unchanged: 0/0
  5334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5336 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5338 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5339 ;;Total ram usage:        1 bytes
  5340 ;; Hardware stack levels used:    1
  5341 ;; Hardware stack levels required when called:    3
  5342 ;; This function calls:
  5343 ;;		_send_nibble
  5344 ;; This function is called by:
  5345 ;;		_lcdInst
  5346 ;;		_initLCD
  5347 ;;		_putch
  5348 ;; This function uses a non-reentrant model
  5349 ;;
  5350                           
  5351                           	psect	text24
  5352  001880                     __ptext24:
  5353                           	opt callstack 0
  5354  001880                     _send_byte:
  5355                           	opt callstack 19
  5356                           
  5357                           ;incstack = 0
  5358                           ;send_byte@data stored from wreg
  5359  001880  6E03               	movwf	send_byte@data,c
  5360                           
  5361                           ;lcd.c: 57:     send_nibble(data >> 4);
  5362  001882  3803               	swapf	send_byte@data,w,c
  5363  001884  0B0F               	andlw	15
  5364  001886  EC35  F00C         	call	_send_nibble
  5365                           
  5366                           ;lcd.c: 60:     send_nibble(data);
  5367  00188A  5003               	movf	send_byte@data,w,c
  5368  00188C  EC35  F00C         	call	_send_nibble
  5369  001890  0012               	return		;funcret
  5370  001892                     __end_of_send_byte:
  5371                           	opt callstack 0
  5372                           
  5373 ;; *************** function _send_nibble *****************
  5374 ;; Defined at:
  5375 ;;		line 44 in file "lcd.c"
  5376 ;; Parameters:    Size  Location     Type
  5377 ;;  data            1    wreg     unsigned char 
  5378 ;; Auto vars:     Size  Location     Type
  5379 ;;  data            1    1[COMRAM] unsigned char 
  5380 ;; Return value:  Size  Location     Type
  5381 ;;                  1    wreg      void 
  5382 ;; Registers used:
  5383 ;;		wreg, status,2, status,0, cstack
  5384 ;; Tracked objects:
  5385 ;;		On entry : 0/0
  5386 ;;		On exit  : 0/0
  5387 ;;		Unchanged: 0/0
  5388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5390 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5392 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5393 ;;Total ram usage:        1 bytes
  5394 ;; Hardware stack levels used:    1
  5395 ;; Hardware stack levels required when called:    2
  5396 ;; This function calls:
  5397 ;;		_pulse_e
  5398 ;; This function is called by:
  5399 ;;		_send_byte
  5400 ;;		_initLCD
  5401 ;; This function uses a non-reentrant model
  5402 ;;
  5403                           
  5404                           	psect	text25
  5405  00186A                     __ptext25:
  5406                           	opt callstack 0
  5407  00186A                     _send_nibble:
  5408                           	opt callstack 19
  5409                           
  5410                           ;incstack = 0
  5411                           ;send_nibble@data stored from wreg
  5412  00186A  6E02               	movwf	send_nibble@data,c
  5413                           
  5414                           ;lcd.c: 46:     LATD = (unsigned char)(LATD & 0x0F);
  5415  00186C  508C               	movf	3980,w,c	;volatile
  5416  00186E  0B0F               	andlw	15
  5417  001870  6E8C               	movwf	3980,c	;volatile
  5418                           
  5419                           ;lcd.c: 47:     LATD = (unsigned char)((data << 4) | LATD);
  5420  001872  3802               	swapf	send_nibble@data,w,c
  5421  001874  0BF0               	andlw	240
  5422  001876  108C               	iorwf	3980,w,c	;volatile
  5423  001878  6E8C               	movwf	3980,c	;volatile
  5424                           
  5425                           ;lcd.c: 48:     pulse_e();
  5426  00187A  ECE8  F00B         	call	_pulse_e	;wreg free
  5427  00187E  0012               	return		;funcret
  5428  001880                     __end_of_send_nibble:
  5429                           	opt callstack 0
  5430                           
  5431 ;; *************** function _pulse_e *****************
  5432 ;; Defined at:
  5433 ;;		line 28 in file "lcd.c"
  5434 ;; Parameters:    Size  Location     Type
  5435 ;;		None
  5436 ;; Auto vars:     Size  Location     Type
  5437 ;;  interruptSta    1    0[COMRAM] unsigned char 
  5438 ;; Return value:  Size  Location     Type
  5439 ;;                  1    wreg      void 
  5440 ;; Registers used:
  5441 ;;		wreg
  5442 ;; Tracked objects:
  5443 ;;		On entry : 0/0
  5444 ;;		On exit  : 0/0
  5445 ;;		Unchanged: 0/0
  5446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5448 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5450 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5451 ;;Total ram usage:        1 bytes
  5452 ;; Hardware stack levels used:    1
  5453 ;; Hardware stack levels required when called:    1
  5454 ;; This function calls:
  5455 ;;		Nothing
  5456 ;; This function is called by:
  5457 ;;		_send_nibble
  5458 ;; This function uses a non-reentrant model
  5459 ;;
  5460                           
  5461                           	psect	text26
  5462  0017D0                     __ptext26:
  5463                           	opt callstack 0
  5464  0017D0                     _pulse_e:
  5465                           	opt callstack 19
  5466                           
  5467                           ;lcd.c: 29:     unsigned char interruptState = INTCONbits.GIE;
  5468                           
  5469                           ;incstack = 0
  5470  0017D0  0E00               	movlw	0
  5471  0017D2  BEF2               	btfsc	4082,7,c	;volatile
  5472  0017D4  0E01               	movlw	1
  5473  0017D6  6E01               	movwf	pulse_e@interruptState,c
  5474                           
  5475                           ;lcd.c: 30:     (INTCONbits.GIE = 0);
  5476  0017D8  9EF2               	bcf	4082,7,c	;volatile
  5477                           
  5478                           ;lcd.c: 31:     LATDbits.LATD3 = 1;
  5479  0017DA  868C               	bsf	3980,3,c	;volatile
  5480                           
  5481                           ;lcd.c: 34:     _delay((unsigned long)((25)*(10000000/4000000.0)));
  5482  0017DC  0E14               	movlw	20
  5483  0017DE                     u2867:
  5484  0017DE  2EE8               	decfsz	wreg,f,c
  5485  0017E0  D7FE               	bra	u2867
  5486  0017E2  D000               	nop2	
  5487                           
  5488                           ;lcd.c: 35:     LATDbits.LATD3 = 0;
  5489  0017E4  968C               	bcf	3980,3,c	;volatile
  5490                           
  5491                           ;lcd.c: 36:     _delay((unsigned long)((100)*(10000000/4000000.0)));
  5492  0017E6  0E53               	movlw	83
  5493  0017E8                     u2877:
  5494  0017E8  2EE8               	decfsz	wreg,f,c
  5495  0017EA  D7FE               	bra	u2877
  5496  0017EC  F000               	nop	
  5497                           
  5498                           ;lcd.c: 37:     INTCONbits.GIE = interruptState;
  5499  0017EE  B001               	btfsc	pulse_e@interruptState,0,c
  5500  0017F0  D002               	bra	u1375
  5501  0017F2  9EF2               	bcf	4082,7,c	;volatile
  5502  0017F4  D001               	bra	u1376
  5503  0017F6                     u1375:
  5504  0017F6  8EF2               	bsf	4082,7,c	;volatile
  5505  0017F8                     u1376:
  5506  0017F8  0012               	return		;funcret
  5507  0017FA                     __end_of_pulse_e:
  5508                           	opt callstack 0
  5509                           
  5510 ;; *************** function ___llmod *****************
  5511 ;; Defined at:
  5512 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\llmod.c"
  5513 ;; Parameters:    Size  Location     Type
  5514 ;;  dividend        4    0[COMRAM] unsigned long 
  5515 ;;  divisor         4    4[COMRAM] unsigned long 
  5516 ;; Auto vars:     Size  Location     Type
  5517 ;;  counter         1    8[COMRAM] unsigned char 
  5518 ;; Return value:  Size  Location     Type
  5519 ;;                  4    0[COMRAM] unsigned long 
  5520 ;; Registers used:
  5521 ;;		wreg, status,2, status,0
  5522 ;; Tracked objects:
  5523 ;;		On entry : 0/0
  5524 ;;		On exit  : 0/0
  5525 ;;		Unchanged: 0/0
  5526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5527 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5528 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5530 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5531 ;;Total ram usage:        9 bytes
  5532 ;; Hardware stack levels used:    1
  5533 ;; Hardware stack levels required when called:    1
  5534 ;; This function calls:
  5535 ;;		Nothing
  5536 ;; This function is called by:
  5537 ;;		_main
  5538 ;; This function uses a non-reentrant model
  5539 ;;
  5540                           
  5541                           	psect	text27
  5542  00148A                     __ptext27:
  5543                           	opt callstack 0
  5544  00148A                     ___llmod:
  5545                           	opt callstack 29
  5546                           
  5547                           ;incstack = 0
  5548  00148A  5005               	movf	___llmod@divisor,w,c
  5549  00148C  1006               	iorwf	___llmod@divisor+1,w,c
  5550  00148E  1007               	iorwf	___llmod@divisor+2,w,c
  5551  001490  1008               	iorwf	___llmod@divisor+3,w,c
  5552  001492  B4D8               	btfsc	status,2,c
  5553  001494  D024               	goto	l853
  5554  001496  0E01               	movlw	1
  5555  001498  6E09               	movwf	___llmod@counter,c
  5556  00149A  D006               	goto	l2866
  5557  00149C                     l2864:
  5558  00149C  90D8               	bcf	status,0,c
  5559  00149E  3605               	rlcf	___llmod@divisor,f,c
  5560  0014A0  3606               	rlcf	___llmod@divisor+1,f,c
  5561  0014A2  3607               	rlcf	___llmod@divisor+2,f,c
  5562  0014A4  3608               	rlcf	___llmod@divisor+3,f,c
  5563  0014A6  2A09               	incf	___llmod@counter,f,c
  5564  0014A8                     l2866:
  5565  0014A8  AE08               	btfss	___llmod@divisor+3,7,c
  5566  0014AA  D7F8               	goto	l2864
  5567  0014AC                     u2360:
  5568  0014AC  5005               	movf	___llmod@divisor,w,c
  5569  0014AE  5C01               	subwf	___llmod@dividend,w,c
  5570  0014B0  5006               	movf	___llmod@divisor+1,w,c
  5571  0014B2  5802               	subwfb	___llmod@dividend+1,w,c
  5572  0014B4  5007               	movf	___llmod@divisor+2,w,c
  5573  0014B6  5803               	subwfb	___llmod@dividend+2,w,c
  5574  0014B8  5008               	movf	___llmod@divisor+3,w,c
  5575  0014BA  5804               	subwfb	___llmod@dividend+3,w,c
  5576  0014BC  A0D8               	btfss	status,0,c
  5577  0014BE  D008               	goto	l2872
  5578  0014C0  5005               	movf	___llmod@divisor,w,c
  5579  0014C2  5E01               	subwf	___llmod@dividend,f,c
  5580  0014C4  5006               	movf	___llmod@divisor+1,w,c
  5581  0014C6  5A02               	subwfb	___llmod@dividend+1,f,c
  5582  0014C8  5007               	movf	___llmod@divisor+2,w,c
  5583  0014CA  5A03               	subwfb	___llmod@dividend+2,f,c
  5584  0014CC  5008               	movf	___llmod@divisor+3,w,c
  5585  0014CE  5A04               	subwfb	___llmod@dividend+3,f,c
  5586  0014D0                     l2872:
  5587  0014D0  90D8               	bcf	status,0,c
  5588  0014D2  3208               	rrcf	___llmod@divisor+3,f,c
  5589  0014D4  3207               	rrcf	___llmod@divisor+2,f,c
  5590  0014D6  3206               	rrcf	___llmod@divisor+1,f,c
  5591  0014D8  3205               	rrcf	___llmod@divisor,f,c
  5592  0014DA  2E09               	decfsz	___llmod@counter,f,c
  5593  0014DC  D7E7               	goto	u2360
  5594  0014DE                     l853:
  5595  0014DE  C001  F001         	movff	___llmod@dividend,?___llmod
  5596  0014E2  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  5597  0014E6  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  5598  0014EA  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  5599  0014EE  0012               	return		;funcret
  5600  0014F0                     __end_of___llmod:
  5601                           	opt callstack 0
  5602                           
  5603 ;; *************** function _I2C_Master_Write *****************
  5604 ;; Defined at:
  5605 ;;		line 70 in file "I2C.c"
  5606 ;; Parameters:    Size  Location     Type
  5607 ;;  byteToWrite     2    1[COMRAM] unsigned int 
  5608 ;; Auto vars:     Size  Location     Type
  5609 ;;		None
  5610 ;; Return value:  Size  Location     Type
  5611 ;;                  1    wreg      void 
  5612 ;; Registers used:
  5613 ;;		wreg, status,2, status,0, cstack
  5614 ;; Tracked objects:
  5615 ;;		On entry : 0/0
  5616 ;;		On exit  : 0/0
  5617 ;;		Unchanged: 0/0
  5618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5619 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5622 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5623 ;;Total ram usage:        2 bytes
  5624 ;; Hardware stack levels used:    1
  5625 ;; Hardware stack levels required when called:    2
  5626 ;; This function calls:
  5627 ;;		_I2C_Master_Wait
  5628 ;; This function is called by:
  5629 ;;		_main
  5630 ;;		_RTC_main
  5631 ;;		_rtc_set_time
  5632 ;;		_i2c_mine
  5633 ;; This function uses a non-reentrant model
  5634 ;;
  5635                           
  5636                           	psect	text28
  5637  0018CE                     __ptext28:
  5638                           	opt callstack 0
  5639  0018CE                     _I2C_Master_Write:
  5640                           	opt callstack 28
  5641                           
  5642                           ;I2C.c: 71:     I2C_Master_Wait();
  5643                           
  5644                           ;incstack = 0
  5645  0018CE  EC49  F00C         	call	_I2C_Master_Wait	;wreg free
  5646                           
  5647                           ;I2C.c: 74:     SSPBUF = byteToWrite;
  5648  0018D2  C002  FFC9         	movff	I2C_Master_Write@byteToWrite,4041	;volatile
  5649  0018D6  0012               	return		;funcret
  5650  0018D8                     __end_of_I2C_Master_Write:
  5651                           	opt callstack 0
  5652                           
  5653 ;; *************** function _I2C_Master_Stop *****************
  5654 ;; Defined at:
  5655 ;;		line 65 in file "I2C.c"
  5656 ;; Parameters:    Size  Location     Type
  5657 ;;		None
  5658 ;; Auto vars:     Size  Location     Type
  5659 ;;		None
  5660 ;; Return value:  Size  Location     Type
  5661 ;;                  1    wreg      void 
  5662 ;; Registers used:
  5663 ;;		wreg, status,2, status,0, cstack
  5664 ;; Tracked objects:
  5665 ;;		On entry : 0/0
  5666 ;;		On exit  : 0/0
  5667 ;;		Unchanged: 0/0
  5668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5673 ;;Total ram usage:        0 bytes
  5674 ;; Hardware stack levels used:    1
  5675 ;; Hardware stack levels required when called:    2
  5676 ;; This function calls:
  5677 ;;		_I2C_Master_Wait
  5678 ;; This function is called by:
  5679 ;;		_main
  5680 ;;		_RTC_main
  5681 ;;		_rtc_set_time
  5682 ;;		_i2c_mine
  5683 ;; This function uses a non-reentrant model
  5684 ;;
  5685                           
  5686                           	psect	text29
  5687  0018E2                     __ptext29:
  5688                           	opt callstack 0
  5689  0018E2                     _I2C_Master_Stop:
  5690                           	opt callstack 28
  5691                           
  5692                           ;I2C.c: 66:     I2C_Master_Wait();
  5693                           
  5694                           ;incstack = 0
  5695  0018E2  EC49  F00C         	call	_I2C_Master_Wait	;wreg free
  5696                           
  5697                           ;I2C.c: 67:     SSPCON2bits.PEN = 1;
  5698  0018E6  84C5               	bsf	4037,2,c	;volatile
  5699  0018E8  0012               	return		;funcret
  5700  0018EA                     __end_of_I2C_Master_Stop:
  5701                           	opt callstack 0
  5702                           
  5703 ;; *************** function _I2C_Master_Start *****************
  5704 ;; Defined at:
  5705 ;;		line 55 in file "I2C.c"
  5706 ;; Parameters:    Size  Location     Type
  5707 ;;		None
  5708 ;; Auto vars:     Size  Location     Type
  5709 ;;		None
  5710 ;; Return value:  Size  Location     Type
  5711 ;;                  1    wreg      void 
  5712 ;; Registers used:
  5713 ;;		wreg, status,2, status,0, cstack
  5714 ;; Tracked objects:
  5715 ;;		On entry : 0/0
  5716 ;;		On exit  : 0/0
  5717 ;;		Unchanged: 0/0
  5718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5723 ;;Total ram usage:        0 bytes
  5724 ;; Hardware stack levels used:    1
  5725 ;; Hardware stack levels required when called:    2
  5726 ;; This function calls:
  5727 ;;		_I2C_Master_Wait
  5728 ;; This function is called by:
  5729 ;;		_main
  5730 ;;		_RTC_main
  5731 ;;		_rtc_set_time
  5732 ;;		_i2c_mine
  5733 ;; This function uses a non-reentrant model
  5734 ;;
  5735                           
  5736                           	psect	text30
  5737  0018EA                     __ptext30:
  5738                           	opt callstack 0
  5739  0018EA                     _I2C_Master_Start:
  5740                           	opt callstack 28
  5741                           
  5742                           ;I2C.c: 56:     I2C_Master_Wait();
  5743                           
  5744                           ;incstack = 0
  5745  0018EA  EC49  F00C         	call	_I2C_Master_Wait	;wreg free
  5746                           
  5747                           ;I2C.c: 57:     SSPCON2bits.SEN = 1;
  5748  0018EE  80C5               	bsf	4037,0,c	;volatile
  5749  0018F0  0012               	return		;funcret
  5750  0018F2                     __end_of_I2C_Master_Start:
  5751                           	opt callstack 0
  5752                           
  5753 ;; *************** function _I2C_Master_Read *****************
  5754 ;; Defined at:
  5755 ;;		line 77 in file "I2C.c"
  5756 ;; Parameters:    Size  Location     Type
  5757 ;;  ackBit          1    wreg     unsigned char 
  5758 ;; Auto vars:     Size  Location     Type
  5759 ;;  ackBit          1    1[COMRAM] unsigned char 
  5760 ;;  receivedByte    1    2[COMRAM] unsigned char 
  5761 ;; Return value:  Size  Location     Type
  5762 ;;                  1    wreg      unsigned char 
  5763 ;; Registers used:
  5764 ;;		wreg, status,2, status,0, cstack
  5765 ;; Tracked objects:
  5766 ;;		On entry : 0/0
  5767 ;;		On exit  : 0/0
  5768 ;;		Unchanged: 0/0
  5769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5771 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5773 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5774 ;;Total ram usage:        2 bytes
  5775 ;; Hardware stack levels used:    1
  5776 ;; Hardware stack levels required when called:    2
  5777 ;; This function calls:
  5778 ;;		_I2C_Master_Wait
  5779 ;; This function is called by:
  5780 ;;		_main
  5781 ;;		_RTC_main
  5782 ;;		_i2c_mine
  5783 ;; This function uses a non-reentrant model
  5784 ;;
  5785                           
  5786                           	psect	text31
  5787  001846                     __ptext31:
  5788                           	opt callstack 0
  5789  001846                     _I2C_Master_Read:
  5790                           	opt callstack 28
  5791                           
  5792                           ;incstack = 0
  5793                           ;I2C_Master_Read@ackBit stored from wreg
  5794  001846  6E02               	movwf	I2C_Master_Read@ackBit,c
  5795                           
  5796                           ;I2C.c: 78:     I2C_Master_Wait();
  5797  001848  EC49  F00C         	call	_I2C_Master_Wait	;wreg free
  5798                           
  5799                           ;I2C.c: 79:     SSPCON2bits.RCEN = 1;
  5800  00184C  86C5               	bsf	4037,3,c	;volatile
  5801                           
  5802                           ;I2C.c: 81:     I2C_Master_Wait();
  5803  00184E  EC49  F00C         	call	_I2C_Master_Wait	;wreg free
  5804                           
  5805                           ;I2C.c: 84:     unsigned char receivedByte = SSPBUF;
  5806  001852  CFC9 F003          	movff	4041,I2C_Master_Read@receivedByte	;volatile
  5807                           
  5808                           ;I2C.c: 86:     I2C_Master_Wait();
  5809  001856  EC49  F00C         	call	_I2C_Master_Wait	;wreg free
  5810                           
  5811                           ;I2C.c: 87:     SSPCON2bits.ACKDT = ackBit;
  5812  00185A  B002               	btfsc	I2C_Master_Read@ackBit,0,c
  5813  00185C  D002               	bra	u2345
  5814  00185E  9AC5               	bcf	4037,5,c	;volatile
  5815  001860  D001               	bra	u2346
  5816  001862                     u2345:
  5817  001862  8AC5               	bsf	4037,5,c	;volatile
  5818  001864                     u2346:
  5819                           
  5820                           ;I2C.c: 88:     SSPCON2bits.ACKEN = 1;
  5821  001864  88C5               	bsf	4037,4,c	;volatile
  5822                           
  5823                           ;I2C.c: 90:     return receivedByte;
  5824  001866  5003               	movf	I2C_Master_Read@receivedByte,w,c
  5825  001868  0012               	return		;funcret
  5826  00186A                     __end_of_I2C_Master_Read:
  5827                           	opt callstack 0
  5828                           
  5829 ;; *************** function _I2C_Master_Wait *****************
  5830 ;; Defined at:
  5831 ;;		line 21 in file "I2C.c"
  5832 ;; Parameters:    Size  Location     Type
  5833 ;;		None
  5834 ;; Auto vars:     Size  Location     Type
  5835 ;;		None
  5836 ;; Return value:  Size  Location     Type
  5837 ;;                  1    wreg      void 
  5838 ;; Registers used:
  5839 ;;		wreg, status,2, status,0
  5840 ;; Tracked objects:
  5841 ;;		On entry : 0/0
  5842 ;;		On exit  : 0/0
  5843 ;;		Unchanged: 0/0
  5844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5847 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5848 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5849 ;;Total ram usage:        1 bytes
  5850 ;; Hardware stack levels used:    1
  5851 ;; Hardware stack levels required when called:    1
  5852 ;; This function calls:
  5853 ;;		Nothing
  5854 ;; This function is called by:
  5855 ;;		_I2C_Master_Start
  5856 ;;		_I2C_Master_Stop
  5857 ;;		_I2C_Master_Write
  5858 ;;		_I2C_Master_Read
  5859 ;;		_I2C_Master_RepeatedStart
  5860 ;; This function uses a non-reentrant model
  5861 ;;
  5862                           
  5863                           	psect	text32
  5864  001892                     __ptext32:
  5865                           	opt callstack 0
  5866  001892                     _I2C_Master_Wait:
  5867                           	opt callstack 28
  5868                           
  5869                           ;I2C.c: 26:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F)){
  5870                           
  5871                           ;I2C.c: 28:     }
  5872                           
  5873                           ;incstack = 0
  5874  001892  B4C7               	btfsc	4039,2,c	;volatile
  5875  001894  D7FE               	goto	_I2C_Master_Wait
  5876  001896  CFC5 F001          	movff	4037,??_I2C_Master_Wait	;volatile
  5877  00189A  0E1F               	movlw	31
  5878  00189C  1601               	andwf	??_I2C_Master_Wait,f,c
  5879  00189E  B4D8               	btfsc	status,2,c
  5880  0018A0  0012               	return	
  5881  0018A2  D7F7               	goto	_I2C_Master_Wait
  5882  0018A4                     __end_of_I2C_Master_Wait:
  5883                           	opt callstack 0
  5884                           
  5885 ;; *************** function _I2C_Master_Init *****************
  5886 ;; Defined at:
  5887 ;;		line 32 in file "I2C.c"
  5888 ;; Parameters:    Size  Location     Type
  5889 ;;  clockFreq       4   13[COMRAM] const unsigned long 
  5890 ;; Auto vars:     Size  Location     Type
  5891 ;;		None
  5892 ;; Return value:  Size  Location     Type
  5893 ;;                  1    wreg      void 
  5894 ;; Registers used:
  5895 ;;		wreg, status,2, status,0, cstack
  5896 ;; Tracked objects:
  5897 ;;		On entry : 0/0
  5898 ;;		On exit  : 0/0
  5899 ;;		Unchanged: 0/0
  5900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5901 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5903 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5904 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5905 ;;Total ram usage:        8 bytes
  5906 ;; Hardware stack levels used:    1
  5907 ;; Hardware stack levels required when called:    2
  5908 ;; This function calls:
  5909 ;;		___lldiv
  5910 ;; This function is called by:
  5911 ;;		_main
  5912 ;;		_RTC_main
  5913 ;;		_i2c_mine
  5914 ;; This function uses a non-reentrant model
  5915 ;;
  5916                           
  5917                           	psect	text33
  5918  0014F0                     __ptext33:
  5919                           	opt callstack 0
  5920  0014F0                     _I2C_Master_Init:
  5921                           	opt callstack 28
  5922                           
  5923                           ;I2C.c: 34:     SSPCON1bits.SSPEN = 0;
  5924                           
  5925                           ;incstack = 0
  5926  0014F0  9AC6               	bcf	4038,5,c	;volatile
  5927                           
  5928                           ;I2C.c: 37:     TRISCbits.TRISC3 = 1;
  5929  0014F2  8694               	bsf	3988,3,c	;volatile
  5930                           
  5931                           ;I2C.c: 38:     TRISCbits.TRISC4 = 1;
  5932  0014F4  8894               	bsf	3988,4,c	;volatile
  5933                           
  5934                           ;I2C.c: 43:     SSPADD = (10000000 / (4 * clockFreq)) - 1;
  5935  0014F6  0E80               	movlw	128
  5936  0014F8  6E01               	movwf	___lldiv@dividend,c
  5937  0014FA  0E96               	movlw	150
  5938  0014FC  6E02               	movwf	___lldiv@dividend+1,c
  5939  0014FE  0E98               	movlw	152
  5940  001500  6E03               	movwf	___lldiv@dividend+2,c
  5941  001502  0E00               	movlw	0
  5942  001504  6E04               	movwf	___lldiv@dividend+3,c
  5943  001506  C00E  F012         	movff	I2C_Master_Init@clockFreq,??_I2C_Master_Init
  5944  00150A  C00F  F013         	movff	I2C_Master_Init@clockFreq+1,??_I2C_Master_Init+1
  5945  00150E  C010  F014         	movff	I2C_Master_Init@clockFreq+2,??_I2C_Master_Init+2
  5946  001512  C011  F015         	movff	I2C_Master_Init@clockFreq+3,??_I2C_Master_Init+3
  5947  001516  0E02               	movlw	2
  5948  001518                     u2335:
  5949  001518  90D8               	bcf	status,0,c
  5950  00151A  3612               	rlcf	??_I2C_Master_Init,f,c
  5951  00151C  3613               	rlcf	??_I2C_Master_Init+1,f,c
  5952  00151E  3614               	rlcf	??_I2C_Master_Init+2,f,c
  5953  001520  3615               	rlcf	??_I2C_Master_Init+3,f,c
  5954  001522  2EE8               	decfsz	wreg,f,c
  5955  001524  D7F9               	goto	u2335
  5956  001526  C012  F005         	movff	??_I2C_Master_Init,___lldiv@divisor
  5957  00152A  C013  F006         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
  5958  00152E  C014  F007         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
  5959  001532  C015  F008         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
  5960  001536  EC99  F009         	call	___lldiv	;wreg free
  5961  00153A  0401               	decf	?___lldiv,w,c
  5962  00153C  6EC8               	movwf	4040,c	;volatile
  5963                           
  5964                           ;I2C.c: 46:     SSPSTAT = 0b10000000;
  5965  00153E  0E80               	movlw	128
  5966  001540  6EC7               	movwf	4039,c	;volatile
  5967                           
  5968                           ;I2C.c: 49:     SSPCON1 = 0b00101000;
  5969  001542  0E28               	movlw	40
  5970  001544  6EC6               	movwf	4038,c	;volatile
  5971                           
  5972                           ;I2C.c: 52:     SSPCON2 = 0b00000000;
  5973  001546  0E00               	movlw	0
  5974  001548  6EC5               	movwf	4037,c	;volatile
  5975  00154A  0012               	return		;funcret
  5976  00154C                     __end_of_I2C_Master_Init:
  5977                           	opt callstack 0
  5978                           
  5979 ;; *************** function ___lldiv *****************
  5980 ;; Defined at:
  5981 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__lldiv.c"
  5982 ;; Parameters:    Size  Location     Type
  5983 ;;  dividend        4    0[COMRAM] unsigned long 
  5984 ;;  divisor         4    4[COMRAM] unsigned long 
  5985 ;; Auto vars:     Size  Location     Type
  5986 ;;  quotient        4    8[COMRAM] unsigned long 
  5987 ;;  counter         1   12[COMRAM] unsigned char 
  5988 ;; Return value:  Size  Location     Type
  5989 ;;                  4    0[COMRAM] unsigned long 
  5990 ;; Registers used:
  5991 ;;		wreg, status,2, status,0
  5992 ;; Tracked objects:
  5993 ;;		On entry : 0/0
  5994 ;;		On exit  : 0/0
  5995 ;;		Unchanged: 0/0
  5996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5997 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5998 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6000 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6001 ;;Total ram usage:       13 bytes
  6002 ;; Hardware stack levels used:    1
  6003 ;; Hardware stack levels required when called:    1
  6004 ;; This function calls:
  6005 ;;		Nothing
  6006 ;; This function is called by:
  6007 ;;		_I2C_Master_Init
  6008 ;; This function uses a non-reentrant model
  6009 ;;
  6010                           
  6011                           	psect	text34
  6012  001332                     __ptext34:
  6013                           	opt callstack 0
  6014  001332                     ___lldiv:
  6015                           	opt callstack 28
  6016                           
  6017                           ;incstack = 0
  6018  001332  0E00               	movlw	0
  6019  001334  6E09               	movwf	___lldiv@quotient,c
  6020  001336  0E00               	movlw	0
  6021  001338  6E0A               	movwf	___lldiv@quotient+1,c
  6022  00133A  0E00               	movlw	0
  6023  00133C  6E0B               	movwf	___lldiv@quotient+2,c
  6024  00133E  0E00               	movlw	0
  6025  001340  6E0C               	movwf	___lldiv@quotient+3,c
  6026  001342  5005               	movf	___lldiv@divisor,w,c
  6027  001344  1006               	iorwf	___lldiv@divisor+1,w,c
  6028  001346  1007               	iorwf	___lldiv@divisor+2,w,c
  6029  001348  1008               	iorwf	___lldiv@divisor+3,w,c
  6030  00134A  B4D8               	btfsc	status,2,c
  6031  00134C  D02A               	goto	l460
  6032  00134E  0E01               	movlw	1
  6033  001350  6E0D               	movwf	___lldiv@counter,c
  6034  001352  D006               	goto	l2784
  6035  001354                     l2782:
  6036  001354  90D8               	bcf	status,0,c
  6037  001356  3605               	rlcf	___lldiv@divisor,f,c
  6038  001358  3606               	rlcf	___lldiv@divisor+1,f,c
  6039  00135A  3607               	rlcf	___lldiv@divisor+2,f,c
  6040  00135C  3608               	rlcf	___lldiv@divisor+3,f,c
  6041  00135E  2A0D               	incf	___lldiv@counter,f,c
  6042  001360                     l2784:
  6043  001360  AE08               	btfss	___lldiv@divisor+3,7,c
  6044  001362  D7F8               	goto	l2782
  6045  001364                     u2310:
  6046  001364  90D8               	bcf	status,0,c
  6047  001366  3609               	rlcf	___lldiv@quotient,f,c
  6048  001368  360A               	rlcf	___lldiv@quotient+1,f,c
  6049  00136A  360B               	rlcf	___lldiv@quotient+2,f,c
  6050  00136C  360C               	rlcf	___lldiv@quotient+3,f,c
  6051  00136E  5005               	movf	___lldiv@divisor,w,c
  6052  001370  5C01               	subwf	___lldiv@dividend,w,c
  6053  001372  5006               	movf	___lldiv@divisor+1,w,c
  6054  001374  5802               	subwfb	___lldiv@dividend+1,w,c
  6055  001376  5007               	movf	___lldiv@divisor+2,w,c
  6056  001378  5803               	subwfb	___lldiv@dividend+2,w,c
  6057  00137A  5008               	movf	___lldiv@divisor+3,w,c
  6058  00137C  5804               	subwfb	___lldiv@dividend+3,w,c
  6059  00137E  A0D8               	btfss	status,0,c
  6060  001380  D009               	goto	l2794
  6061  001382  5005               	movf	___lldiv@divisor,w,c
  6062  001384  5E01               	subwf	___lldiv@dividend,f,c
  6063  001386  5006               	movf	___lldiv@divisor+1,w,c
  6064  001388  5A02               	subwfb	___lldiv@dividend+1,f,c
  6065  00138A  5007               	movf	___lldiv@divisor+2,w,c
  6066  00138C  5A03               	subwfb	___lldiv@dividend+2,f,c
  6067  00138E  5008               	movf	___lldiv@divisor+3,w,c
  6068  001390  5A04               	subwfb	___lldiv@dividend+3,f,c
  6069  001392  8009               	bsf	___lldiv@quotient,0,c
  6070  001394                     l2794:
  6071  001394  90D8               	bcf	status,0,c
  6072  001396  3208               	rrcf	___lldiv@divisor+3,f,c
  6073  001398  3207               	rrcf	___lldiv@divisor+2,f,c
  6074  00139A  3206               	rrcf	___lldiv@divisor+1,f,c
  6075  00139C  3205               	rrcf	___lldiv@divisor,f,c
  6076  00139E  2E0D               	decfsz	___lldiv@counter,f,c
  6077  0013A0  D7E1               	goto	u2310
  6078  0013A2                     l460:
  6079  0013A2  C009  F001         	movff	___lldiv@quotient,?___lldiv
  6080  0013A6  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  6081  0013AA  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  6082  0013AE  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  6083  0013B2  0012               	return		;funcret
  6084  0013B4                     __end_of___lldiv:
  6085                           	opt callstack 0
  6086                           
  6087 ;; *************** function _interruptHandler *****************
  6088 ;; Defined at:
  6089 ;;		line 272 in file "main.c"
  6090 ;; Parameters:    Size  Location     Type
  6091 ;;		None
  6092 ;; Auto vars:     Size  Location     Type
  6093 ;;		None
  6094 ;; Return value:  Size  Location     Type
  6095 ;;                  1    wreg      void 
  6096 ;; Registers used:
  6097 ;;		wreg, status,2
  6098 ;; Tracked objects:
  6099 ;;		On entry : 0/0
  6100 ;;		On exit  : 0/0
  6101 ;;		Unchanged: 0/0
  6102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6107 ;;Total ram usage:        0 bytes
  6108 ;; Hardware stack levels used:    1
  6109 ;; This function calls:
  6110 ;;		Nothing
  6111 ;; This function is called by:
  6112 ;;		Interrupt level 2
  6113 ;; This function uses a non-reentrant model
  6114 ;;
  6115                           
  6116                           	psect	intcode
  6117  000008                     __pintcode:
  6118                           	opt callstack 0
  6119  000008                     _interruptHandler:
  6120                           	opt callstack 19
  6121                           
  6122                           ;incstack = 0
  6123  000008  827F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6124  00000A  ED52  F00C         	call	int_func,f	;refresh shadow registers
  6125                           
  6126                           	psect	intcode_body
  6127  0018A4                     __pintcode_body:
  6128                           	opt callstack 19
  6129  0018A4                     int_func:
  6130                           	opt callstack 19
  6131  0018A4  0006               	pop		; remove dummy address from shadow register refresh
  6132                           
  6133                           ;main.c: 274:     if(INT1IF){
  6134  0018A6  A0F0               	btfss	4080,0,c	;volatile
  6135  0018A8  D004               	goto	i2l104
  6136                           
  6137                           ;main.c: 277:         key_was_pressed = 1;
  6138  0018AA  0E01               	movlw	1
  6139  0018AC  0100               	movlb	0	; () banked
  6140  0018AE  6FF2               	movwf	_key_was_pressed& (0+255),b	;volatile
  6141                           
  6142                           ; BSR set to: 0
  6143                           ;main.c: 278:         INT1IF = 0;
  6144  0018B0  90F0               	bcf	4080,0,c	;volatile
  6145  0018B2                     i2l104:
  6146  0018B2  927F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6147  0018B4  0011               	retfie		f
  6148  0018B6                     __end_of_interruptHandler:
  6149                           	opt callstack 0
  6150                           
  6151                           	psect	rparam
  6152  0000                     
  6153                           	psect	temp
  6154  00007F                     btemp:
  6155                           	opt callstack 0
  6156  00007F                     	ds	1
  6157  0000                     int$flags	set	btemp
  6158  0000                     wtemp8	set	btemp+1
  6159  0000                     ttemp5	set	btemp+1
  6160  0000                     ttemp6	set	btemp+4
  6161  0000                     ttemp7	set	btemp+8
  6162                           tosu	equ	0xFFF
  6163                           tosh	equ	0xFFE
  6164                           tosl	equ	0xFFD
  6165                           stkptr	equ	0xFFC
  6166                           pclatu	equ	0xFFB
  6167                           pclath	equ	0xFFA
  6168                           pcl	equ	0xFF9
  6169                           tblptru	equ	0xFF8
  6170                           tblptrh	equ	0xFF7
  6171                           tblptrl	equ	0xFF6
  6172                           tablat	equ	0xFF5
  6173                           prodh	equ	0xFF4
  6174                           prodl	equ	0xFF3
  6175                           indf0	equ	0xFEF
  6176                           postinc0	equ	0xFEE
  6177                           postdec0	equ	0xFED
  6178                           preinc0	equ	0xFEC
  6179                           plusw0	equ	0xFEB
  6180                           fsr0h	equ	0xFEA
  6181                           fsr0l	equ	0xFE9
  6182                           wreg	equ	0xFE8
  6183                           indf1	equ	0xFE7
  6184                           postinc1	equ	0xFE6
  6185                           postdec1	equ	0xFE5
  6186                           preinc1	equ	0xFE4
  6187                           plusw1	equ	0xFE3
  6188                           fsr1h	equ	0xFE2
  6189                           fsr1l	equ	0xFE1
  6190                           bsr	equ	0xFE0
  6191                           indf2	equ	0xFDF
  6192                           postinc2	equ	0xFDE
  6193                           postdec2	equ	0xFDD
  6194                           preinc2	equ	0xFDC
  6195                           plusw2	equ	0xFDB
  6196                           fsr2h	equ	0xFDA
  6197                           fsr2l	equ	0xFD9
  6198                           status	equ	0xFD8


Data Sizes:
    Strings     273
    Constant    30
    Data        9
    BSS         84
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    122     126
    BANK0           128     68     125
    BANK1           256      0      32
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_33(CODE[15]), STR_32(CODE[15]), STR_31(CODE[15]), STR_30(CODE[15]), 
		 -> STR_29(CODE[17]), STR_28(CODE[15]), STR_27(CODE[15]), STR_26(CODE[12]), 
		 -> STR_25(CODE[17]), STR_24(CODE[13]), STR_23(CODE[12]), STR_22(CODE[12]), 
		 -> STR_21(CODE[17]), STR_20(CODE[13]), STR_19(CODE[12]), STR_18(CODE[12]), 
		 -> STR_17(CODE[17]), STR_16(CODE[13]), STR_15(CODE[13]), STR_14(CODE[17]), 
		 -> STR_13(CODE[9]), STR_12(CODE[9]), STR_11(CODE[16]), STR_10(CODE[9]), 
		 -> STR_9(CODE[9]), STR_8(CODE[17]), STR_7(CODE[15]), STR_6(CODE[15]), 
		 -> STR_5(CODE[12]), STR_4(CODE[10]), STR_3(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[10]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1159_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_33(CODE[15]), STR_32(CODE[15]), STR_31(CODE[15]), STR_30(CODE[15]), 
		 -> STR_29(CODE[17]), STR_28(CODE[15]), STR_27(CODE[15]), STR_26(CODE[12]), 
		 -> STR_25(CODE[17]), STR_24(CODE[13]), STR_23(CODE[12]), STR_22(CODE[12]), 
		 -> STR_21(CODE[17]), STR_20(CODE[13]), STR_19(CODE[12]), STR_18(CODE[12]), 
		 -> STR_17(CODE[17]), STR_16(CODE[13]), STR_15(CODE[13]), STR_14(CODE[17]), 
		 -> STR_13(CODE[9]), STR_12(CODE[9]), STR_11(CODE[16]), STR_10(CODE[9]), 
		 -> STR_9(CODE[9]), STR_8(CODE[17]), STR_7(CODE[15]), STR_6(CODE[15]), 
		 -> STR_5(CODE[12]), STR_4(CODE[10]), STR_3(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[10]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_33(CODE[15]), STR_32(CODE[15]), STR_31(CODE[15]), STR_30(CODE[15]), 
		 -> STR_29(CODE[17]), STR_28(CODE[15]), STR_27(CODE[15]), STR_26(CODE[12]), 
		 -> STR_25(CODE[17]), STR_24(CODE[13]), STR_23(CODE[12]), STR_22(CODE[12]), 
		 -> STR_21(CODE[17]), STR_20(CODE[13]), STR_19(CODE[12]), STR_18(CODE[12]), 
		 -> STR_17(CODE[17]), STR_16(CODE[13]), STR_15(CODE[13]), STR_14(CODE[17]), 
		 -> STR_13(CODE[9]), STR_12(CODE[9]), STR_11(CODE[16]), STR_10(CODE[9]), 
		 -> STR_9(CODE[9]), STR_8(CODE[17]), STR_7(CODE[15]), STR_6(CODE[15]), 
		 -> STR_5(CODE[12]), STR_4(CODE[10]), STR_3(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[10]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 17
		 -> STR_33(CODE[15]), STR_32(CODE[15]), STR_31(CODE[15]), STR_30(CODE[15]), 
		 -> STR_29(CODE[17]), STR_28(CODE[15]), STR_27(CODE[15]), STR_26(CODE[12]), 
		 -> STR_25(CODE[17]), STR_24(CODE[13]), STR_23(CODE[12]), STR_22(CODE[12]), 
		 -> STR_21(CODE[17]), STR_20(CODE[13]), STR_19(CODE[12]), STR_18(CODE[12]), 
		 -> STR_17(CODE[17]), STR_16(CODE[13]), STR_15(CODE[13]), STR_14(CODE[17]), 
		 -> STR_13(CODE[9]), STR_12(CODE[9]), STR_11(CODE[16]), STR_10(CODE[9]), 
		 -> STR_9(CODE[9]), STR_8(CODE[17]), STR_7(CODE[15]), STR_6(CODE[15]), 
		 -> STR_5(CODE[12]), STR_4(CODE[10]), STR_3(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[10]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_send_byte
    _abs->___aomod
    _atoi->_isspace
    _initLCD->_lcdInst
    _lcdInst->_send_byte
    _send_byte->_send_nibble
    _send_nibble->_pulse_e
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _I2C_Master_Init->___lldiv

Critical Paths under _interruptHandler in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _interruptHandler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interruptHandler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruptHandler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interruptHandler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interruptHandler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interruptHandler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interruptHandler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interruptHandler in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _interruptHandler in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _interruptHandler in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _interruptHandler in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _interruptHandler in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _interruptHandler in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _interruptHandler in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _interruptHandler in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _interruptHandler in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                69    69      0   21025
                                            121 COMRAM     1     1      0
                                              0 BANK0     68    68      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___llmod
                             ___wmul
                            _initLCD
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              12     4      8   16636
                                            109 COMRAM    12     4      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   14070
                                            101 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    40      6   13692
                                             70 COMRAM    31    25      6
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    4581
                                             31 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4676
                                             31 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3027
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1280
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     879
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0     111
                                              3 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    2248
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1407
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     245
                                              4 COMRAM     1     1      0
                            _lcdInst
                          _send_byte
                        _send_nibble
 ---------------------------------------------------------------------------------
 (1) _lcdInst                                              1     1      0     111
                                              3 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (9) _send_byte                                            1     1      0      89
                                              2 COMRAM     1     1      0
                        _send_nibble
 ---------------------------------------------------------------------------------
 (10) _send_nibble                                         1     1      0      45
                                              1 COMRAM     1     1      0
                            _pulse_e
 ---------------------------------------------------------------------------------
 (11) _pulse_e                                             1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___llmod                                              9     1      8     311
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2    1238
                                              1 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      2     2      0      45
                                              1 COMRAM     2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     640
                                             13 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _interruptHandler                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   ___llmod
   ___wmul
   _initLCD
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _send_byte
       _send_nibble
         _pulse_e
     _send_nibble
       _pulse_e
   _lcdInst
     _send_byte
       _send_nibble
         _pulse_e
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _fputc
           _putch
             _send_byte
               _send_nibble
                 _pulse_e
         _isdigit
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
           _toupper
             _islower

 _interruptHandler (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      20       7       12.5%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     44      7D       5       97.7%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     7A      7E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11B      34        0.0%
DATA                 0      0     11B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Apr 06 17:20:26 2019

                          _i 00E5                           l83 0236                  __CFG_CPD$ON 000000  
        ___wmul@multiplicand 0003                  __CFG_BORV$3 000000                 __CFG_CP0$OFF 000000  
               __CFG_CP1$OFF 000000                 __CFG_CP2$OFF 000000                 __CFG_CP3$OFF 000000  
                __CFG_OSC$HS 000000                          l330 12CA                          l341 0AF4  
                        l343 0AFC                          l460 13A2                          l366 0CE0  
                        l368 0CE8                          l853 14DE                 __CFG_CPB$OFF 000000  
                        _abs 16E4                          _pad 129C                          wreg 000FE8  
               __CFG_LVP$OFF 000000                 __CFG_WDT$OFF 000000                         ?_abs 0013  
                       l1108 170C                         l1206 1630                         l1139 116E  
                       l3012 02A0                         l2304 13CC                         l2410 0F7E  
                       l2402 0F44                         l2314 1682                         l2322 17B0  
                       l3114 063C                         l2420 0FDA                         l2324 17B4  
                       l2500 0B16                         l3124 065E                         l3028 02F0  
                       l2318 1698                         l2342 12C2                         l3118 0644  
                       l3134 06C6                         l2408 0F6A                         l2424 0FF0  
                       l2440 11A4                         l2352 1318                         l2344 12D4  
                       l2504 0B26                         l3136 06D4                         l2610 104A  
                       l2450 11F6                         l2338 12B4                         l2514 0C1E  
                       l3090 05A0                         l3058 0440                         l2620 1094  
                       l2612 104E                         l2428 1016                         l2460 1254  
                       l2444 11C8                         l2348 12EC                         l2604 0EC6  
                       l2700 081C                         l2630 10B2                         l2534 0C82  
                       l2702 082A                         l3086 057A                         l2632 10DA  
                       l2464 127A                         l2456 123E                         l2448 11E2  
                       l2552 0CFC                         l2626 10A4                         l2538 0C9A  
                       l2476 1670                         l2636 110E                         l2628 10AC  
                       l2396 0F1C                         l2580 0DDC                         l2732 09F0  
                       l2660 0722                         l2486 0AD8                         l2566 0D4E  
                       l2558 0D2C                         l2742 0A36                         l2718 0922  
                       l2662 0724                         l2910 009E                         l2680 0744  
                       l2672 073C                         l2664 0734                         l2738 0A2C  
                       l2588 0E52                         l2684 074E                         l2676 0740  
                       l2668 0738                         l2748 0A4E                         l2772 1560  
                       l2782 1354                         l2686 0790                         l2774 1586  
                       ?_pad 0015                         l2784 1360                         l2872 14D0  
                       l2864 149C                         l2794 1394                         l2866 14A8  
                       l2698 07FE                         l2938 012E                         l2964 01A2  
                       l2986 0218                         l2996 0252                         STR_1 FFE2  
                       STR_2 FFD6                         STR_3 FF4F                         STR_4 FFE2  
                       STR_5 FFD6                         STR_6 FF4F                         STR_7 FF5E  
                       STR_8 FEED                         STR_9 FFEC                         u2000 0E2E  
                       u2010 0E62                         u2100 113E                         u2005 0E1C  
                       u2110 1140                         u2030 0E84                         u2031 0E82  
                       u2040 0E92                         u2200 0864                         u1410 140C  
                       u2050 0E96                         u2210 0870                         u1500 16F2  
                       u2310 1364                         u1510 176E                         u2230 08A4  
                       _LATB 000F8A                         u2080 1090                         u1520 1770  
                       u1440 173E                         _LATD 000F8C                         u1530 16DC  
                       u1450 1740                         u2250 0956                         u1700 11FA  
                       u1540 16DE                         u2500 024E                         u1621 0F4A  
                       u1390 13C4                         u1550 1618                         u2190 0862  
                       u2335 1518                         u1375 17F6                         u2360 14AC  
                       u1376 17F8                         u1640 0F82                         u1560 161A  
                       u2345 1862                         u2346 1864                         u1810 0B10  
                       u2530 0302                         u2450 01B8                         u1580 179E  
                       u1740 166C                         u1820 0C2C                         u2540 0312  
                       u2541 0310                         u1590 17A0                         u1750 0AAA  
                       u1910 0CD6                         u1840 0C4E                         u1760 0AAC  
                       u1841 0C4C                         u1850 0C5C                         u1930 0D4A  
                       u1860 0C60                         u1940 0D80                         u1790 0AEA  
                       u1950 0D82                         u2807 0464                         u1880 0C6C  
                       u2817 05DC                         u2737 0064                         u1970 0DBA  
                       u2827 1426                         u2747 00F4                         u1980 0DBC  
                       u2837 143E                         u2757 015C                         u2847 1450  
                       u2767 01DE                         u2857 1472                         u2777 0266  
                       u2867 17DE                         u2787 02B6                         u2877 17E8  
                       u2797 032A                         _Pole 00C4                         abs@a 0013  
                       _data 00EF                         _dbuf 0100                         _disp 00E7  
                       _atoi 1038                         _main 0012                         _dtoa 0A82  
   __end_of_interruptHandler 18B6                         _keys FECF                         _send 00FC  
                       _tick 00EB                         _prec 007B                         _temp 00F3  
                       _time 00D8                         _nout 00DF                         pad@i 001C  
                       pad@p 0019                         fsr1h 000FE2                         fsr2h 000FDA  
                       indf2 000FDF                         fsr1l 000FE1                         pad@w 001E  
                       fsr2l 000FD9                         btemp 007F                         _xtoa 0CC4  
                       prodh 000FF4                         prodl 000FF3                         start 000E  
              __CFG_IESO$OFF 000000                __CFG_MCLRE$ON 000000                 ___param_bank 000000  
                      ??_abs 0015                        ??_pad 001B        I2C_Master_Read@ackBit 0002  
           ?_I2C_Master_Init 000E             ?_I2C_Master_Read 0001             ?_I2C_Master_Wait 0001  
           ?_I2C_Master_Stop 0001              __end_of___aodiv 1038                        ?_atoi 0008  
                      ?_main 0001                        ?_dtoa 0020              __end_of___aomod 129C  
                      STR_10 FFF5                        STR_11 FF10                        STR_12 FFEC  
                      STR_20 FFA5                        STR_21 FF20                        STR_13 FFF5  
                      STR_22 FFCA                        STR_14 FF0F                        STR_23 FFBE  
                      STR_15 FF98                        STR_24 FFA5                        STR_16 FF8B  
                      STR_32 FF31                        STR_33 FF40                        STR_17 FF20  
                      STR_25 FEFE                        STR_18 FFCA                        STR_26 FFB2  
                      STR_19 FFBE                        STR_27 FF6D                        STR_28 FF7C  
                      STR_29 FEED              __end_of___lldiv 13B4                        ?_xtoa 0020  
            __end_of___llmod 14F0                        i2l104 18B2                 vfpfcnvrt@fmt 0049  
               vfpfcnvrt@llu 0059                        _PORTB 000F81                        _TRISB 000F93  
                      _TRISD 000F95                __CFG_PWRT$OFF 000000                __CFG_WRT0$OFF 000000  
              __CFG_WRT1$OFF 000000                __CFG_WRT2$OFF 000000                __CFG_WRT3$OFF 000000  
            __end_of_lcdInst 18CE               __CFG_EBTR0$OFF 000000               __CFG_FCMEN$OFF 000000  
             __CFG_EBTR1$OFF 000000               __CFG_EBTR2$OFF 000000                 main@keypress 00BC  
             __CFG_EBTR3$OFF 000000                __CFG_WRTB$OFF 000000                __CFG_WRTC$OFF 000000  
              __CFG_WRTD$OFF 000000              __end_of_initLCD 148A               __CFG_EBTRB$OFF 000000  
                      _flags 007D                        _dists 00F8                        _fputc 13B4  
            __end_of_isalpha 16E4                        _fputs 1678              __end_of_isdigit 17A6  
                      atoi@n 0015                        pad@fp 0015                        atoi@s 0008  
                      _width 00E1                        _state 00E9                        _putch 18B6  
                      main@i 00C1                        dtoa@d 0022                        dtoa@i 0042  
                      dtoa@n 003A                        dtoa@p 0034                        dtoa@s 0038  
                      dtoa@w 0036              __end_of_islower 1746              __end_of_isspace 1678  
            __end_of_isupper 1776                        tablat 000FF5              send_nibble@data 0002  
            __end_of_pulse_e 17FA                        ttemp5 0080                        ttemp6 0083  
                      ttemp7 0087                        status 000FD8  I2C_Master_Read@receivedByte 0003  
                      wtemp8 0080                        xtoa@c 0045                        xtoa@d 0022  
                      xtoa@i 0043                        xtoa@n 003B                        xtoa@p 0037  
                      xtoa@w 0039                        xtoa@x 002A              __end_of_toupper 163A  
             __CFG_PBADEN$ON 000000                 _toupper$1211 000D              __initialization 15A2  
               __end_of_atoi 1178                 __end_of_main 06DC                 __end_of_dtoa 0CC4  
               __end_of_keys FEE0                 __end_of_xtoa 0EF0                       ??_atoi 000A  
                     ??_main 007A                       ??_dtoa 002A                       ??_xtoa 002B  
              __activetblptr 000002            ?_I2C_Master_Start 0001            ?_I2C_Master_Write 0002  
         ??_I2C_Master_Start 0002                       _ADCON1 000FC1           ??_I2C_Master_Write 0004  
               ?_send_nibble 0001                       ?_fputc 0005             ___llmod@dividend 0001  
                     ?_fputs 000E                       ?_putch 0001                       _INT1IE 007F83  
                     _INT1IF 007F80                vfpfcnvrt@done 0061                       _SSPADD 000FC8  
                     _SSPBUF 000FC9               __CFG_XINST$OFF 000000                 vfprintf@cfmt 006C  
                  ??___aodiv 0011                    ??___aomod 0011                       ___wmul 1820  
             __CFG_STVREN$ON 000000                    ??___lldiv 0009                    ??___llmod 0009  
                     clear_0 15C8                       clear_1 15D4                    ??_lcdInst 0004  
                     _printf 17FA                       pad@buf 0017                       dtoa@fp 0020  
                     _strlen 17A6                    ??_initLCD 0005                       fputc@c 0005  
                     fputs@c 0012                       fputs@i 0013                       fputs@s 000E  
                  ??_isalpha 0003                    ??_isdigit 0003                    ??_islower 0003  
               __mediumconst FECE                    ??_isspace 0003                       tblptrh 000FF7  
                  ??_isupper 0003                       tblptrl 000FF6                       tblptru 000FF8  
           __end_of_vfprintf 15A2                    ??_pulse_e 0001                       xtoa@fp 0020  
                  ??_toupper 0009        pulse_e@interruptState 0001                   __accesstop 0080  
    __end_of__initialization 15E2                ___rparam_used 000001         __end_of_happynewyear FEE7  
             __pcstackCOMRAM 0001                 __pidataBANK0 18D8                __end_of_fputc 1420  
              __end_of_fputs 16B0                __end_of_putch 18C2              _key_was_pressed 00F2  
                    ??_fputc 0009                      ??_fputs 0012                      ??_putch 0004  
                 __pbssBANK0 00C4                   __pbssBANK1 0100            ?_interruptHandler 0001  
         ??_interruptHandler 0001                i2c_mine@F2787 00F4                      ?___wmul 0001  
         __size_of_send_byte 0012                      ?_printf 006E                      ?_strlen 0001  
         __size_of_vfpfcnvrt 03A6                      _SSPCON1 000FC6                      _SSPCON2 000FC5  
                    _SSPSTAT 000FC7         __size_of_send_nibble 0016                      __Hparam 0000  
                    __Lparam 0000                      ___aodiv 0EF0                      ___aomod 1178  
                    ___lldiv 1332              __size_of___wmul 0026                      ___llmod 148A  
                  ?_vfprintf 0066                      __pcinit 15A2                      __ramtop 1000  
                    _lcdInst 18C2                      __ptext0 0012                      __ptext1 17FA  
                    __ptext2 154C                      __ptext3 06DC                      __ptext4 0CC4  
                    __ptext5 15F0                      __ptext6 1716                      __ptext7 1746  
                    __ptext8 16B0                      __ptext9 0A82              __size_of_printf 0026  
            __size_of_strlen 002A                      _initLCD 1420                      _counter 00F1  
               __size_of_abs 0032                 __size_of_pad 0096                      _isalpha 16B0  
                    _isdigit 1776                      _islower 1716                      _isspace 163A  
                    _isupper 1746     __size_of_I2C_Master_Init 005C     __size_of_I2C_Master_Read 0024  
   __size_of_I2C_Master_Wait 0012     __size_of_I2C_Master_Stop 0008                      _pressed 00E3  
                    atoi@neg 000E                      _pulse_e 17D0               __pintcode_body 18A4  
                    _toupper 15F0         end_of_initialization 15E2        __end_of_LCD_SIZE_HORZ FEEA  
          __end_of_send_byte 1892        __end_of_LCD_SIZE_VERT FEE9                      fputc@fp 0007  
              __Lmediumconst FECE                      int_func 18A4                      fputs@fp 0010  
  __size_of_I2C_Master_Start 0008    __size_of_I2C_Master_Write 000A              ___lldiv@divisor 0005  
            ___lldiv@counter 000D            __end_of_vfpfcnvrt 0A82                      postdec1 000FE5  
                    postdec2 000FDD                      postinc0 000FEE                      postinc1 000FE6  
                    postinc2 000FDE                   ??_vfprintf 006C                      strlen@a 0003  
                    strlen@s 0001                    _PORTBbits 000F81                    _TRISCbits 000F94  
               _happynewyear FEE0                send_byte@data 0003                  vfpfcnvrt@ap 004B  
                vfpfcnvrt@fp 0047                  vfpfcnvrt@ll 0051               __end_of___wmul 1846  
             __end_of_printf 1820               __end_of_strlen 17D0          start_initialization 15A2  
                __end_of_abs 1716                  __end_of_pad 1332            ??_I2C_Master_Init 0012  
          ??_I2C_Master_Read 0002            ??_I2C_Master_Wait 0001            ??_I2C_Master_Stop 0002  
            ___llmod@divisor 0005              ___llmod@counter 0009                  vfprintf@fmt 0068  
                   ??___wmul 0005     I2C_Master_Init@clockFreq 000E                  __pdataBANK0 00F4  
           __CFG_LPT1OSC$OFF 000000                     ??_printf 0076    __size_of_interruptHandler 18AE  
                   ??_strlen 0003                  __pbssCOMRAM 007B                __pcstackBANK0 0080  
           ___aodiv@dividend 0001                    _atoi$1120 0014                    _atoi$1121 0012  
                  _atoi$1119 0010             _I2C_Master_Start 18EA             _I2C_Master_Write 18CE  
                  _main$1449 00C2            __CFG_CCP2MX$PORTC 000000                    __pintcode 0008  
              __pmediumconst FECE                     ?___aodiv 0001                     ?___aomod 0001  
           ___aodiv@quotient 0013                     ?___lldiv 0001                     ?___llmod 0001  
                   ?_lcdInst 0001            __size_of_vfprintf 0056                     ?_initLCD 0001  
                   ?_isalpha 0001                     ?_isdigit 0001                     ?_islower 0001  
                   ?_isspace 0001                     ?_isupper 0001                ??_send_nibble 0002  
                   ?_pulse_e 0001               __size_of_fputc 006C               __size_of_fputs 0038  
                   ?_toupper 0007               __size_of_putch 000C               ___wmul@product 0005  
                   _LATDbits 000F8C                    _send_byte 1880               _LCD_LINE1_ADDR FEE7  
             _LCD_LINE2_ADDR FEEC               _LCD_LINE3_ADDR FEEB               _LCD_LINE4_ADDR FEEA  
           __CFG_WDTPS$32768 000000                    _vfpfcnvrt 06DC            ___wmul@multiplier 0001  
               _isspace$1146 0007                   vfpfcnvrt@c 0065                    copy_data0 15B6  
     __end_of_LCD_LINE1_ADDR FEE8       __end_of_LCD_LINE2_ADDR FEED       __end_of_LCD_LINE3_ADDR FEEC  
     __end_of_LCD_LINE4_ADDR FEEB          __end_of_send_nibble 1880                   ?_send_byte 0001  
                   __Hrparam 0000                   vfprintf@ap 006A                     __Lrparam 0000  
                 vfprintf@fp 0066           __CFG_BOREN$SBORDIS 000000             __size_of___aodiv 0148  
           __size_of___aomod 0124             __size_of___lldiv 0082             __size_of___llmod 0066  
                 ?_vfpfcnvrt 0047              ___aodiv@divisor 0009             _interruptHandler 0008  
            ___aodiv@counter 0011             __size_of_lcdInst 000C              _I2C_Master_Init 14F0  
            _I2C_Master_Read 1846             __size_of_initLCD 006A              _I2C_Master_Wait 1892  
            _I2C_Master_Stop 18E2             __size_of_isalpha 0034             __size_of_isdigit 0030  
                   _dtoa$635 0032             __size_of_islower 0030             __size_of_isspace 003E  
                   __ptext10 129C                     __ptext11 17A6                     __ptext20 1776  
                   __ptext12 1678                     __ptext21 1820                     __ptext13 13B4  
                   __ptext30 18EA                     __ptext22 1420                     __ptext14 18B6  
                   __ptext31 1846                     __ptext23 18C2                     __ptext15 16E4  
                   __ptext32 1892                     __ptext24 1880                     __ptext16 1178  
                   __ptext33 14F0                     __ptext25 186A                     __ptext17 0EF0  
                   __ptext34 1332                     __ptext26 17D0                     __ptext18 1038  
                   __ptext27 148A                     __ptext19 163A                     __ptext28 18CE  
                   __ptext29 18E2             __size_of_isupper 0030             __size_of_pulse_e 002A  
           __size_of_toupper 004A                __size_of_atoi 0140                __size_of_main 06CA  
              __size_of_dtoa 0242                __size_of_xtoa 022C                     _keypress 00F0  
                   _temp_int 00ED                     int$flags 007F                     _xtoa$646 0033  
                   _xtoa$647 0035                     _vfprintf 154C                     main@Pole 0080  
                  printf@fmt 006E                     main@tick 00BD  I2C_Master_Write@byteToWrite 0002  
           ___aomod@dividend 0001                    putch@data 0004     __end_of_I2C_Master_Start 18F2  
   __end_of_I2C_Master_Write 18D8                   _INTCONbits 000FF2                     isalpha@c 0001  
                   isdigit@c 0001                  _send_nibble 186A                     intlevel2 0000  
              _LCD_SIZE_HORZ FEE9                     islower@c 0001                _LCD_SIZE_VERT FEE8  
                   isspace@c 0001             ___lldiv@dividend 0001                  ??_send_byte 0003  
                   isupper@c 0001                     printf@ap 0078      __end_of_I2C_Master_Init 154C  
            ___aomod@divisor 0009      __end_of_I2C_Master_Read 186A      __end_of_I2C_Master_Wait 18A4  
    __end_of_I2C_Master_Stop 18EA                  ??_vfpfcnvrt 004D                  lcdInst@data 0004  
            ___aomod@counter 0011                _vfpfcnvrt$661 0063             ___lldiv@quotient 0009  
                   toupper@c 0007                  _SSPCON1bits 000FC6                  _SSPCON2bits 000FC5  
               ___aodiv@sign 0012                 ___aomod@sign 0012  
