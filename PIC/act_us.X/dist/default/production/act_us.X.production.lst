

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Apr 06 00:31:54 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,inline
    46                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    54                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    55                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    56  0000                     
    57                           ; Version 2.05
    58                           ; Generated 20/12/2018 GMT
    59                           ; 
    60                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC18F4620 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91  0000                     
    92                           	psect	smallconst
    93  001000                     __psmallconst:
    94                           	opt callstack 0
    95  001000  00                 	db	0
    96  001001                     _LCD_LINE1_ADDR:
    97                           	opt callstack 0
    98  001001  00                 	db	0
    99  001002                     __end_of_LCD_LINE1_ADDR:
   100                           	opt callstack 0
   101  001002                     _LCD_SIZE_VERT:
   102                           	opt callstack 0
   103  001002  04                 	db	4
   104  001003                     __end_of_LCD_SIZE_VERT:
   105                           	opt callstack 0
   106  001003                     _LCD_SIZE_HORZ:
   107                           	opt callstack 0
   108  001003  10                 	db	16
   109  001004                     __end_of_LCD_SIZE_HORZ:
   110                           	opt callstack 0
   111  001004  50                 	db	80
   112  001005                     __end_of_LCD_LINE4_ADDR:
   113                           	opt callstack 0
   114  001005  10                 	db	16
   115  001006                     __end_of_LCD_LINE3_ADDR:
   116                           	opt callstack 0
   117  001006  40                 	db	64
   118  001007                     __end_of_LCD_LINE2_ADDR:
   119                           	opt callstack 0
   120  0000                     _LATDbits	set	3980
   121  0000                     _INTCONbits	set	4082
   122  0000                     _SSPBUF	set	4041
   123  0000                     _SSPCON2bits	set	4037
   124  0000                     _SSPCON1	set	4038
   125  0000                     _SSPADD	set	4040
   126  0000                     _SSPCON1bits	set	4038
   127  0000                     _SSPCON2	set	4037
   128  0000                     _SSPSTAT	set	4039
   129  0000                     _T1CON	set	4045
   130  0000                     _LATBbits	set	3978
   131  0000                     _TRISBbits	set	3987
   132  0000                     _TMR1H	set	4047
   133  0000                     _TMR1L	set	4046
   134  0000                     _LATE	set	3981
   135  0000                     _TRISE	set	3990
   136  0000                     _LATC	set	3979
   137  0000                     _TRISC	set	3988
   138  0000                     _ADCON1	set	4033
   139  0000                     _TRISD	set	3989
   140  0000                     _LATD	set	3980
   141  0000                     _TRISCbits	set	3988
   142  0000                     _TRISA	set	3986
   143  0000                     _LATB	set	3978
   144  0000                     _TRISB	set	3987
   145  0000                     _LATAbits	set	3977
   146  0000                     _LATEbits	set	3981
   147  0000                     _LATCbits	set	3979
   148  0000                     _LATA	set	3977
   149  0000                     _GIE	set	32663
   150  0000                     _RB2	set	31754
   151  0000                     _RB3	set	31755
   152  0000                     _RD0	set	31768
   153  0000                     _RD1	set	31769
   154  0000                     _RB4	set	31756
   155  0000                     _RB5	set	31757
   156  0000                     _RB6	set	31758
   157  0000                     _TMR1ON	set	32360
   158  0000                     _RB7	set	31759
   159  0000                     _RBIE	set	32659
   160  0000                     _RBIF	set	32656
   161  0000                     _RC2	set	31762
   162  0000                     _RC1	set	31761
   163  001007                     STR_10:
   164  001007  44                 	db	68	;'D'
   165  001008  69                 	db	105	;'i'
   166  001009  73                 	db	115	;'s'
   167  00100A  74                 	db	116	;'t'
   168  00100B  31                 	db	49	;'1'
   169  00100C  3D                 	db	61	;'='
   170  00100D  25                 	db	37
   171  00100E  64                 	db	100	;'d'
   172  00100F  2C                 	db	44
   173  001010  41                 	db	65	;'A'
   174  001011  76                 	db	118	;'v'
   175  001012  67                 	db	103	;'g'
   176  001013  3D                 	db	61	;'='
   177  001014  25                 	db	37
   178  001015  64                 	db	100	;'d'
   179  001016  20                 	db	32
   180  001017  00                 	db	0
   181  001018                     STR_16:
   182  001018  44                 	db	68	;'D'
   183  001019  69                 	db	105	;'i'
   184  00101A  73                 	db	115	;'s'
   185  00101B  74                 	db	116	;'t'
   186  00101C  34                 	db	52	;'4'
   187  00101D  3D                 	db	61	;'='
   188  00101E  25                 	db	37
   189  00101F  64                 	db	100	;'d'
   190  001020  2C                 	db	44
   191  001021  41                 	db	65	;'A'
   192  001022  76                 	db	118	;'v'
   193  001023  67                 	db	103	;'g'
   194  001024  3D                 	db	61	;'='
   195  001025  25                 	db	37
   196  001026  64                 	db	100	;'d'
   197  001027  20                 	db	32
   198  001028  00                 	db	0
   199  001029                     STR_18:
   200  001029  64                 	db	100	;'d'
   201  00102A  65                 	db	101	;'e'
   202  00102B  74                 	db	116	;'t'
   203  00102C  2C                 	db	44
   204  00102D  25                 	db	37
   205  00102E  64                 	db	100	;'d'
   206  00102F  2C                 	db	44
   207  001030  20                 	db	32
   208  001031  74                 	db	116	;'t'
   209  001032  63                 	db	99	;'c'
   210  001033  6E                 	db	110	;'n'
   211  001034  74                 	db	116	;'t'
   212  001035  20                 	db	32
   213  001036  25                 	db	37
   214  001037  64                 	db	100	;'d'
   215  001038  00                 	db	0
   216  001039                     STR_12:
   217  001039  44                 	db	68	;'D'
   218  00103A  69                 	db	105	;'i'
   219  00103B  73                 	db	115	;'s'
   220  00103C  74                 	db	116	;'t'
   221  00103D  32                 	db	50	;'2'
   222  00103E  3D                 	db	61	;'='
   223  00103F  25                 	db	37
   224  001040  64                 	db	100	;'d'
   225  001041  2C                 	db	44
   226  001042  41                 	db	65	;'A'
   227  001043  76                 	db	118	;'v'
   228  001044  67                 	db	103	;'g'
   229  001045  3D                 	db	61	;'='
   230  001046  25                 	db	37
   231  001047  64                 	db	100	;'d'
   232  001048  00                 	db	0
   233  001049                     STR_14:
   234  001049  44                 	db	68	;'D'
   235  00104A  69                 	db	105	;'i'
   236  00104B  73                 	db	115	;'s'
   237  00104C  74                 	db	116	;'t'
   238  00104D  33                 	db	51	;'3'
   239  00104E  3D                 	db	61	;'='
   240  00104F  25                 	db	37
   241  001050  64                 	db	100	;'d'
   242  001051  2C                 	db	44
   243  001052  41                 	db	65	;'A'
   244  001053  76                 	db	118	;'v'
   245  001054  67                 	db	103	;'g'
   246  001055  3D                 	db	61	;'='
   247  001056  25                 	db	37
   248  001057  64                 	db	100	;'d'
   249  001058  00                 	db	0
   250  001059                     STR_7:
   251  001059  53                 	db	83	;'S'
   252  00105A  74                 	db	116	;'t'
   253  00105B  65                 	db	101	;'e'
   254  00105C  70                 	db	112	;'p'
   255  00105D  20                 	db	32
   256  00105E  73                 	db	115	;'s'
   257  00105F  70                 	db	112	;'p'
   258  001060  65                 	db	101	;'e'
   259  001061  65                 	db	101	;'e'
   260  001062  64                 	db	100	;'d'
   261  001063  20                 	db	32
   262  001064  25                 	db	37
   263  001065  64                 	db	100	;'d'
   264  001066  00                 	db	0
   265  001067                     STR_2:
   266  001067  53                 	db	83	;'S'
   267  001068  74                 	db	116	;'t'
   268  001069  65                 	db	101	;'e'
   269  00106A  70                 	db	112	;'p'
   270  00106B  70                 	db	112	;'p'
   271  00106C  65                 	db	101	;'e'
   272  00106D  72                 	db	114	;'r'
   273  00106E  20                 	db	32
   274  00106F  64                 	db	100	;'d'
   275  001070  6F                 	db	111	;'o'
   276  001071  6E                 	db	110	;'n'
   277  001072  65                 	db	101	;'e'
   278  001073  00                 	db	0
   279  001074                     STR_20:
   280  001074  73                 	db	115	;'s'
   281  001075  74                 	db	116	;'t'
   282  001076  65                 	db	101	;'e'
   283  001077  70                 	db	112	;'p'
   284  001078  73                 	db	115	;'s'
   285  001079  61                 	db	97	;'a'
   286  00107A  64                 	db	100	;'d'
   287  00107B  6A                 	db	106	;'j'
   288  00107C  20                 	db	32
   289  00107D  25                 	db	37
   290  00107E  64                 	db	100	;'d'
   291  00107F  00                 	db	0
   292  001080                     STR_19:
   293  001080  6D                 	db	109	;'m'
   294  001081  69                 	db	105	;'i'
   295  001082  6E                 	db	110	;'n'
   296  001083  69                 	db	105	;'i'
   297  001084  6D                 	db	109	;'m'
   298  001085  75                 	db	117	;'u'
   299  001086  6D                 	db	109	;'m'
   300  001087  20                 	db	32
   301  001088  25                 	db	37
   302  001089  64                 	db	100	;'d'
   303  00108A  00                 	db	0
   304  00108B                     STR_3:
   305  00108B  53                 	db	83	;'S'
   306  00108C  65                 	db	101	;'e'
   307  00108D  72                 	db	114	;'r'
   308  00108E  76                 	db	118	;'v'
   309  00108F  6F                 	db	111	;'o'
   310  001090  20                 	db	32
   311  001091  64                 	db	100	;'d'
   312  001092  6F                 	db	111	;'o'
   313  001093  6E                 	db	110	;'n'
   314  001094  65                 	db	101	;'e'
   315  001095  00                 	db	0
   316  001096                     STR_11:
   317  001096  44                 	db	68	;'D'
   318  001097  69                 	db	105	;'i'
   319  001098  73                 	db	115	;'s'
   320  001099  74                 	db	116	;'t'
   321  00109A  31                 	db	49	;'1'
   322  00109B  20                 	db	32
   323  00109C  3D                 	db	61	;'='
   324  00109D  20                 	db	32
   325  00109E  58                 	db	88	;'X'
   326  00109F  00                 	db	0
   327  0010A0                     STR_13:
   328  0010A0  44                 	db	68	;'D'
   329  0010A1  69                 	db	105	;'i'
   330  0010A2  73                 	db	115	;'s'
   331  0010A3  74                 	db	116	;'t'
   332  0010A4  32                 	db	50	;'2'
   333  0010A5  20                 	db	32
   334  0010A6  3D                 	db	61	;'='
   335  0010A7  20                 	db	32
   336  0010A8  58                 	db	88	;'X'
   337  0010A9  00                 	db	0
   338  0010AA                     STR_15:
   339  0010AA  44                 	db	68	;'D'
   340  0010AB  69                 	db	105	;'i'
   341  0010AC  73                 	db	115	;'s'
   342  0010AD  74                 	db	116	;'t'
   343  0010AE  33                 	db	51	;'3'
   344  0010AF  20                 	db	32
   345  0010B0  3D                 	db	61	;'='
   346  0010B1  20                 	db	32
   347  0010B2  58                 	db	88	;'X'
   348  0010B3  00                 	db	0
   349  0010B4                     STR_17:
   350  0010B4  44                 	db	68	;'D'
   351  0010B5  69                 	db	105	;'i'
   352  0010B6  73                 	db	115	;'s'
   353  0010B7  74                 	db	116	;'t'
   354  0010B8  34                 	db	52	;'4'
   355  0010B9  20                 	db	32
   356  0010BA  3D                 	db	61	;'='
   357  0010BB  20                 	db	32
   358  0010BC  58                 	db	88	;'X'
   359  0010BD  00                 	db	0
   360  0010BE                     STR_5:
   361  0010BE  73                 	db	115	;'s'
   362  0010BF  74                 	db	116	;'t'
   363  0010C0  65                 	db	101	;'e'
   364  0010C1  70                 	db	112	;'p'
   365  0010C2  70                 	db	112	;'p'
   366  0010C3  70                 	db	112	;'p'
   367  0010C4  20                 	db	32
   368  0010C5  25                 	db	37
   369  0010C6  64                 	db	100	;'d'
   370  0010C7  00                 	db	0
   371  0010C8                     STR_1:
   372  0010C8  63                 	db	99	;'c'
   373  0010C9  6E                 	db	110	;'n'
   374  0010CA  74                 	db	116	;'t'
   375  0010CB  20                 	db	32
   376  0010CC  69                 	db	105	;'i'
   377  0010CD  73                 	db	115	;'s'
   378  0010CE  20                 	db	32
   379  0010CF  25                 	db	37
   380  0010D0  64                 	db	100	;'d'
   381  0010D1  00                 	db	0
   382  0010D2                     STR_6:
   383  0010D2  73                 	db	115	;'s'
   384  0010D3  74                 	db	116	;'t'
   385  0010D4  65                 	db	101	;'e'
   386  0010D5  70                 	db	112	;'p'
   387  0010D6  31                 	db	49	;'1'
   388  0010D7  00                 	db	0
   389  0010D8                     STR_9:
   390  0010D8  77                 	db	119	;'w'
   391  0010D9  68                 	db	104	;'h'
   392  0010DA  61                 	db	97	;'a'
   393  0010DB  74                 	db	116	;'t'
   394  0010DC  00                 	db	0
   395  0000                     
   396                           ; #config settings
   397  0010DD  00                 	db	0	; dummy byte at the end
   398  0000                     
   399                           	psect	cinit
   400  00335C                     __pcinit:
   401                           	opt callstack 0
   402  00335C                     start_initialization:
   403                           	opt callstack 0
   404  00335C                     __initialization:
   405                           	opt callstack 0
   406                           
   407                           ; Clear objects allocated to BANK1 (80 bytes)
   408  00335C  EE01  F000         	lfsr	0,__pbssBANK1
   409  003360  0E50               	movlw	80
   410  003362                     clear_0:
   411  003362  6AEE               	clrf	postinc0,c
   412  003364  06E8               	decf	wreg,f,c
   413  003366  E1FD               	bnz	clear_0
   414                           
   415                           ; Clear objects allocated to BANK0 (2 bytes)
   416  003368  0100               	movlb	0
   417  00336A  6BFE               	clrf	(__pbssBANK0+1)& (0+255),b
   418  00336C  6BFD               	clrf	__pbssBANK0& (0+255),b
   419                           
   420                           ; Clear objects allocated to COMRAM (40 bytes)
   421  00336E  EE00  F038         	lfsr	0,__pbssCOMRAM
   422  003372  0E28               	movlw	40
   423  003374                     clear_1:
   424  003374  6AEE               	clrf	postinc0,c
   425  003376  06E8               	decf	wreg,f,c
   426  003378  E1FD               	bnz	clear_1
   427  00337A                     end_of_initialization:
   428                           	opt callstack 0
   429  00337A                     __end_of__initialization:
   430                           	opt callstack 0
   431  00337A  9060               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   432  00337C  9260               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   433  00337E  0E00               	movlw	low (__Lsmallconst shr (0+16))
   434  003380  6EF8               	movwf	tblptru,c
   435  003382  0E10               	movlw	high __Lsmallconst
   436  003384  6EF7               	movwf	tblptrh,c
   437  003386  0100               	movlb	0
   438  003388  EFC7  F014         	goto	_main	;jump to C main() function
   439                           
   440                           	psect	bssCOMRAM
   441  000038                     __pbssCOMRAM:
   442                           	opt callstack 0
   443  000038                     _sum:
   444                           	opt callstack 0
   445  000038                     	ds	8
   446  000040                     _time:
   447                           	opt callstack 0
   448  000040                     	ds	7
   449  000047                     _sumf:
   450                           	opt callstack 0
   451  000047                     	ds	4
   452  00004B                     _nout:
   453                           	opt callstack 0
   454  00004B                     	ds	2
   455  00004D                     _width:
   456                           	opt callstack 0
   457  00004D                     	ds	2
   458  00004F                     _prec:
   459                           	opt callstack 0
   460  00004F                     	ds	2
   461  000051                     _poles_detected:
   462                           	opt callstack 0
   463  000051                     	ds	2
   464  000053                     _meas:
   465                           	opt callstack 0
   466  000053                     	ds	2
   467  000055                     _b:
   468                           	opt callstack 0
   469  000055                     	ds	2
   470  000057                     _echoo:
   471                           	opt callstack 0
   472  000057                     	ds	1
   473  000058                     _a:
   474                           	opt callstack 0
   475  000058                     	ds	8
   476                           
   477                           	psect	bssBANK0
   478  0000FD                     __pbssBANK0:
   479                           	opt callstack 0
   480  0000FD                     _flags:
   481                           	opt callstack 0
   482  0000FD                     	ds	2
   483                           
   484                           	psect	bssBANK1
   485  000100                     __pbssBANK1:
   486                           	opt callstack 0
   487  000100                     _dist_final:
   488                           	opt callstack 0
   489  000100                     	ds	48
   490  000130                     _dbuf:
   491                           	opt callstack 0
   492  000130                     	ds	32
   493                           
   494                           	psect	cstackBANK1
   495  000150                     __pcstackBANK1:
   496                           	opt callstack 0
   497  000150                     actuators_main@act_cnt:
   498                           	opt callstack 0
   499                           
   500                           ; 2 bytes @ 0x0
   501  000150                     	ds	2
   502  000152                     ??_main:
   503                           
   504                           ; 1 bytes @ 0x2
   505  000152                     	ds	2
   506  000154                     main@i:
   507                           	opt callstack 0
   508                           
   509                           ; 2 bytes @ 0x4
   510  000154                     	ds	2
   511  000156                     main@i_331:
   512                           	opt callstack 0
   513                           
   514                           ; 2 bytes @ 0x6
   515  000156                     	ds	2
   516  000158                     main@steps2_adj:
   517                           	opt callstack 0
   518                           
   519                           ; 2 bytes @ 0x8
   520  000158                     	ds	2
   521  00015A                     main@t_dep:
   522                           	opt callstack 0
   523                           
   524                           ; 2 bytes @ 0xA
   525  00015A                     	ds	2
   526  00015C                     main@stack:
   527                           	opt callstack 0
   528                           
   529                           ; 2 bytes @ 0xC
   530  00015C                     	ds	2
   531  00015E                     main@t_count:
   532                           	opt callstack 0
   533                           
   534                           ; 2 bytes @ 0xE
   535  00015E                     	ds	2
   536                           
   537                           	psect	cstackBANK0
   538  000080                     __pcstackBANK0:
   539                           	opt callstack 0
   540  000080                     ??_servoRotate0:
   541  000080                     ??_servoRotate180:
   542  000080                     ??_trig:
   543  000080                     ?_strlen:
   544                           	opt callstack 0
   545  000080                     ?_min:
   546                           	opt callstack 0
   547  000080                     ?___awdiv:
   548                           	opt callstack 0
   549  000080                     ?___aodiv:
   550                           	opt callstack 0
   551  000080                     ?___aomod:
   552                           	opt callstack 0
   553  000080                     pulse_e@interruptState:
   554                           	opt callstack 0
   555  000080                     min@array:
   556                           	opt callstack 0
   557  000080                     ___awdiv@dividend:
   558                           	opt callstack 0
   559  000080                     strlen@s:
   560                           	opt callstack 0
   561  000080                     ___aodiv@dividend:
   562                           	opt callstack 0
   563  000080                     ___aomod@dividend:
   564                           	opt callstack 0
   565                           
   566                           ; 8 bytes @ 0x0
   567  000080                     	ds	1
   568  000081                     send_nibble@data:
   569                           	opt callstack 0
   570  000081                     servoRotate0@i:
   571                           	opt callstack 0
   572  000081                     servoRotate180@i:
   573                           	opt callstack 0
   574                           
   575                           ; 2 bytes @ 0x1
   576  000081                     	ds	1
   577  000082                     send_byte@data:
   578                           	opt callstack 0
   579  000082                     min@size:
   580                           	opt callstack 0
   581  000082                     ___awdiv@divisor:
   582                           	opt callstack 0
   583  000082                     strlen@a:
   584                           	opt callstack 0
   585                           
   586                           ; 2 bytes @ 0x2
   587  000082                     	ds	1
   588  000083                     ??_servo:
   589  000083                     lcdInst@data:
   590                           	opt callstack 0
   591  000083                     putch@data:
   592                           	opt callstack 0
   593                           
   594                           ; 1 bytes @ 0x3
   595  000083                     	ds	1
   596  000084                     ??_initLCD:
   597  000084                     ??_min:
   598  000084                     ___awdiv@counter:
   599                           	opt callstack 0
   600  000084                     fputc@c:
   601                           	opt callstack 0
   602                           
   603                           ; 2 bytes @ 0x4
   604  000084                     	ds	1
   605  000085                     ___awdiv@sign:
   606                           	opt callstack 0
   607                           
   608                           ; 1 bytes @ 0x5
   609  000085                     	ds	1
   610  000086                     ___awdiv@quotient:
   611                           	opt callstack 0
   612  000086                     fputc@fp:
   613                           	opt callstack 0
   614                           
   615                           ; 2 bytes @ 0x6
   616  000086                     	ds	1
   617  000087                     min@minimum:
   618                           	opt callstack 0
   619                           
   620                           ; 2 bytes @ 0x7
   621  000087                     	ds	1
   622  000088                     ??_fputc:
   623  000088                     ___aodiv@divisor:
   624                           	opt callstack 0
   625  000088                     ___aomod@divisor:
   626                           	opt callstack 0
   627                           
   628                           ; 8 bytes @ 0x8
   629  000088                     	ds	1
   630  000089                     min@i:
   631                           	opt callstack 0
   632                           
   633                           ; 2 bytes @ 0x9
   634  000089                     	ds	4
   635  00008D                     fputs@s:
   636                           	opt callstack 0
   637                           
   638                           ; 2 bytes @ 0xD
   639  00008D                     	ds	2
   640  00008F                     fputs@fp:
   641                           	opt callstack 0
   642                           
   643                           ; 2 bytes @ 0xF
   644  00008F                     	ds	1
   645  000090                     ___aodiv@counter:
   646                           	opt callstack 0
   647  000090                     ___aomod@counter:
   648                           	opt callstack 0
   649                           
   650                           ; 1 bytes @ 0x10
   651  000090                     	ds	1
   652  000091                     ___aodiv@sign:
   653                           	opt callstack 0
   654  000091                     ___aomod@sign:
   655                           	opt callstack 0
   656  000091                     fputs@c:
   657                           	opt callstack 0
   658                           
   659                           ; 1 bytes @ 0x11
   660  000091                     	ds	1
   661  000092                     ?_abs:
   662                           	opt callstack 0
   663  000092                     abs@a:
   664                           	opt callstack 0
   665  000092                     fputs@i:
   666                           	opt callstack 0
   667  000092                     ___aodiv@quotient:
   668                           	opt callstack 0
   669                           
   670                           ; 8 bytes @ 0x12
   671  000092                     	ds	2
   672  000094                     ??_abs:
   673  000094                     ?_pad:
   674                           	opt callstack 0
   675  000094                     pad@fp:
   676                           	opt callstack 0
   677                           
   678                           ; 2 bytes @ 0x14
   679  000094                     	ds	2
   680  000096                     pad@buf:
   681                           	opt callstack 0
   682                           
   683                           ; 2 bytes @ 0x16
   684  000096                     	ds	2
   685  000098                     pad@p:
   686                           	opt callstack 0
   687                           
   688                           ; 2 bytes @ 0x18
   689  000098                     	ds	2
   690  00009A                     ??_pad:
   691                           
   692                           ; 1 bytes @ 0x1A
   693  00009A                     	ds	1
   694  00009B                     pad@i:
   695                           	opt callstack 0
   696                           
   697                           ; 2 bytes @ 0x1B
   698  00009B                     	ds	2
   699  00009D                     pad@w:
   700                           	opt callstack 0
   701                           
   702                           ; 2 bytes @ 0x1D
   703  00009D                     	ds	2
   704  00009F                     ?_dtoa:
   705                           	opt callstack 0
   706  00009F                     dtoa@fp:
   707                           	opt callstack 0
   708                           
   709                           ; 2 bytes @ 0x1F
   710  00009F                     	ds	2
   711  0000A1                     dtoa@d:
   712                           	opt callstack 0
   713                           
   714                           ; 8 bytes @ 0x21
   715  0000A1                     	ds	8
   716  0000A9                     ??_dtoa:
   717                           
   718                           ; 1 bytes @ 0x29
   719  0000A9                     	ds	8
   720  0000B1                     _dtoa$794:
   721                           	opt callstack 0
   722                           
   723                           ; 2 bytes @ 0x31
   724  0000B1                     	ds	2
   725  0000B3                     dtoa@p:
   726                           	opt callstack 0
   727                           
   728                           ; 2 bytes @ 0x33
   729  0000B3                     	ds	2
   730  0000B5                     dtoa@w:
   731                           	opt callstack 0
   732                           
   733                           ; 2 bytes @ 0x35
   734  0000B5                     	ds	2
   735  0000B7                     dtoa@s:
   736                           	opt callstack 0
   737                           
   738                           ; 2 bytes @ 0x37
   739  0000B7                     	ds	2
   740  0000B9                     dtoa@n:
   741                           	opt callstack 0
   742                           
   743                           ; 8 bytes @ 0x39
   744  0000B9                     	ds	8
   745  0000C1                     dtoa@i:
   746                           	opt callstack 0
   747                           
   748                           ; 2 bytes @ 0x41
   749  0000C1                     	ds	2
   750  0000C3                     ?_vfpfcnvrt:
   751                           	opt callstack 0
   752  0000C3                     vfpfcnvrt@fp:
   753                           	opt callstack 0
   754                           
   755                           ; 2 bytes @ 0x43
   756  0000C3                     	ds	2
   757  0000C5                     vfpfcnvrt@fmt:
   758                           	opt callstack 0
   759                           
   760                           ; 2 bytes @ 0x45
   761  0000C5                     	ds	2
   762  0000C7                     vfpfcnvrt@ap:
   763                           	opt callstack 0
   764                           
   765                           ; 2 bytes @ 0x47
   766  0000C7                     	ds	2
   767  0000C9                     ??_vfpfcnvrt:
   768                           
   769                           ; 1 bytes @ 0x49
   770  0000C9                     	ds	2
   771  0000CB                     vfpfcnvrt@ll:
   772                           	opt callstack 0
   773                           
   774                           ; 8 bytes @ 0x4B
   775  0000CB                     	ds	8
   776  0000D3                     ?_vfprintf:
   777                           	opt callstack 0
   778  0000D3                     vfprintf@fp:
   779                           	opt callstack 0
   780                           
   781                           ; 2 bytes @ 0x53
   782  0000D3                     	ds	2
   783  0000D5                     vfprintf@fmt:
   784                           	opt callstack 0
   785                           
   786                           ; 2 bytes @ 0x55
   787  0000D5                     	ds	2
   788  0000D7                     vfprintf@ap:
   789                           	opt callstack 0
   790                           
   791                           ; 2 bytes @ 0x57
   792  0000D7                     	ds	2
   793  0000D9                     vfprintf@cfmt:
   794                           	opt callstack 0
   795                           
   796                           ; 2 bytes @ 0x59
   797  0000D9                     	ds	2
   798  0000DB                     ?_printf:
   799                           	opt callstack 0
   800  0000DB                     printf@fmt:
   801                           	opt callstack 0
   802                           
   803                           ; 2 bytes @ 0x5B
   804  0000DB                     	ds	6
   805  0000E1                     
   806                           ; 1 bytes @ 0x61
   807  0000E1                     	ds	2
   808  0000E3                     printf@ap:
   809                           	opt callstack 0
   810                           
   811                           ; 2 bytes @ 0x63
   812  0000E3                     	ds	2
   813  0000E5                     ??_print_echo:
   814  0000E5                     ?_number_deploy:
   815                           	opt callstack 0
   816  0000E5                     full_drive@stepper_no:
   817                           	opt callstack 0
   818  0000E5                     number_deploy@avg_dist:
   819                           	opt callstack 0
   820                           
   821                           ; 2 bytes @ 0x65
   822  0000E5                     	ds	1
   823  0000E6                     ?_ultrasonic_main:
   824                           	opt callstack 0
   825                           
   826                           ; 2 bytes @ 0x66
   827  0000E6                     	ds	1
   828  0000E7                     ??_full_drive:
   829  0000E7                     number_deploy@poles_detected:
   830                           	opt callstack 0
   831                           
   832                           ; 2 bytes @ 0x67
   833  0000E7                     	ds	1
   834  0000E8                     ??_ultrasonic_main:
   835  0000E8                     full_drive@direction:
   836                           	opt callstack 0
   837                           
   838                           ; 1 bytes @ 0x68
   839  0000E8                     	ds	1
   840  0000E9                     ??_number_deploy:
   841  0000E9                     stepper@stack:
   842                           	opt callstack 0
   843  0000E9                     stepper2@steps2_adj:
   844                           	opt callstack 0
   845  0000E9                     stepper2_back@steps2_adj:
   846                           	opt callstack 0
   847                           
   848                           ; 2 bytes @ 0x69
   849  0000E9                     	ds	1
   850  0000EA                     number_deploy@tires_t:
   851                           	opt callstack 0
   852                           
   853                           ; 2 bytes @ 0x6A
   854  0000EA                     	ds	1
   855  0000EB                     ??_stepper2:
   856  0000EB                     ??_stepper2_back:
   857  0000EB                     stepper@count_stepper:
   858                           	opt callstack 0
   859  0000EB                     ultrasonic_main@step2_offset:
   860                           	opt callstack 0
   861                           
   862                           ; 2 bytes @ 0x6B
   863  0000EB                     	ds	1
   864  0000EC                     stepper2_back@direction:
   865                           	opt callstack 0
   866  0000EC                     number_deploy@tires_detected:
   867                           	opt callstack 0
   868                           
   869                           ; 2 bytes @ 0x6C
   870  0000EC                     	ds	1
   871  0000ED                     stepper@i:
   872                           	opt callstack 0
   873  0000ED                     stepper2_back@count_stepper:
   874                           	opt callstack 0
   875  0000ED                     ultrasonic_main@steps2_adj:
   876                           	opt callstack 0
   877                           
   878                           ; 2 bytes @ 0x6D
   879  0000ED                     	ds	1
   880  0000EE                     number_deploy@t_count:
   881                           	opt callstack 0
   882                           
   883                           ; 2 bytes @ 0x6E
   884  0000EE                     	ds	1
   885  0000EF                     stepper@i_276:
   886                           	opt callstack 0
   887  0000EF                     stepper2_back@i:
   888                           	opt callstack 0
   889  0000EF                     ultrasonic_main@i:
   890                           	opt callstack 0
   891                           
   892                           ; 2 bytes @ 0x6F
   893  0000EF                     	ds	1
   894  0000F0                     stepper2@i:
   895                           	opt callstack 0
   896                           
   897                           ; 2 bytes @ 0x70
   898  0000F0                     	ds	1
   899  0000F1                     ultrasonic_main@min_us_dist:
   900                           	opt callstack 0
   901                           
   902                           ; 2 bytes @ 0x71
   903  0000F1                     	ds	1
   904  0000F2                     stepper2@i_284:
   905                           	opt callstack 0
   906                           
   907                           ; 2 bytes @ 0x72
   908  0000F2                     	ds	2
   909  0000F4                     stepper2@count_stepper:
   910                           	opt callstack 0
   911                           
   912                           ; 2 bytes @ 0x74
   913  0000F4                     	ds	2
   914  0000F6                     stepper2@direction:
   915                           	opt callstack 0
   916                           
   917                           ; 1 bytes @ 0x76
   918  0000F6                     	ds	1
   919  0000F7                     actuators_main@stack:
   920                           	opt callstack 0
   921                           
   922                           ; 2 bytes @ 0x77
   923  0000F7                     	ds	2
   924  0000F9                     actuators_main@steps2_adj:
   925                           	opt callstack 0
   926                           
   927                           ; 2 bytes @ 0x79
   928  0000F9                     	ds	2
   929  0000FB                     ??_actuators_main:
   930                           
   931                           ; 1 bytes @ 0x7B
   932  0000FB                     	ds	2
   933                           
   934                           	psect	cstackCOMRAM
   935  000001                     __pcstackCOMRAM:
   936                           	opt callstack 0
   937  000001                     ?i2___awdiv:
   938                           	opt callstack 0
   939  000001                     ?___xxtofl:
   940                           	opt callstack 0
   941  000001                     i2___awdiv@dividend:
   942                           	opt callstack 0
   943  000001                     ___xxtofl@val:
   944                           	opt callstack 0
   945                           
   946                           ; 4 bytes @ 0x0
   947  000001                     	ds	2
   948  000003                     i2___awdiv@divisor:
   949                           	opt callstack 0
   950                           
   951                           ; 2 bytes @ 0x2
   952  000003                     	ds	2
   953  000005                     ??___xxtofl:
   954  000005                     i2___awdiv@counter:
   955                           	opt callstack 0
   956                           
   957                           ; 1 bytes @ 0x4
   958  000005                     	ds	1
   959  000006                     i2___awdiv@sign:
   960                           	opt callstack 0
   961                           
   962                           ; 1 bytes @ 0x5
   963  000006                     	ds	1
   964  000007                     i2___awdiv@quotient:
   965                           	opt callstack 0
   966                           
   967                           ; 2 bytes @ 0x6
   968  000007                     	ds	2
   969  000009                     ___xxtofl@sign:
   970                           	opt callstack 0
   971                           
   972                           ; 1 bytes @ 0x8
   973  000009                     	ds	1
   974  00000A                     ___xxtofl@exp:
   975                           	opt callstack 0
   976                           
   977                           ; 1 bytes @ 0x9
   978  00000A                     	ds	1
   979  00000B                     ___xxtofl@arg:
   980                           	opt callstack 0
   981                           
   982                           ; 4 bytes @ 0xA
   983  00000B                     	ds	4
   984  00000F                     ?___fldiv:
   985                           	opt callstack 0
   986  00000F                     ___fldiv@b:
   987                           	opt callstack 0
   988                           
   989                           ; 4 bytes @ 0xE
   990  00000F                     	ds	4
   991  000013                     ___fldiv@a:
   992                           	opt callstack 0
   993                           
   994                           ; 4 bytes @ 0x12
   995  000013                     	ds	4
   996  000017                     ??___fldiv:
   997                           
   998                           ; 1 bytes @ 0x16
   999  000017                     	ds	4
  1000  00001B                     ___fldiv@rem:
  1001                           	opt callstack 0
  1002                           
  1003                           ; 4 bytes @ 0x1A
  1004  00001B                     	ds	4
  1005  00001F                     ___fldiv@sign:
  1006                           	opt callstack 0
  1007                           
  1008                           ; 1 bytes @ 0x1E
  1009  00001F                     	ds	1
  1010  000020                     ___fldiv@new_exp:
  1011                           	opt callstack 0
  1012                           
  1013                           ; 2 bytes @ 0x1F
  1014  000020                     	ds	2
  1015  000022                     ___fldiv@grs:
  1016                           	opt callstack 0
  1017                           
  1018                           ; 4 bytes @ 0x21
  1019  000022                     	ds	4
  1020  000026                     ___fldiv@bexp:
  1021                           	opt callstack 0
  1022                           
  1023                           ; 1 bytes @ 0x25
  1024  000026                     	ds	1
  1025  000027                     ___fldiv@aexp:
  1026                           	opt callstack 0
  1027                           
  1028                           ; 1 bytes @ 0x26
  1029  000027                     	ds	1
  1030  000028                     ?___fltol:
  1031                           	opt callstack 0
  1032  000028                     ___fltol@f1:
  1033                           	opt callstack 0
  1034                           
  1035                           ; 4 bytes @ 0x27
  1036  000028                     	ds	4
  1037  00002C                     ??___fltol:
  1038                           
  1039                           ; 1 bytes @ 0x2B
  1040  00002C                     	ds	4
  1041  000030                     ___fltol@sign1:
  1042                           	opt callstack 0
  1043                           
  1044                           ; 1 bytes @ 0x2F
  1045  000030                     	ds	1
  1046  000031                     ___fltol@exp1:
  1047                           	opt callstack 0
  1048                           
  1049                           ; 1 bytes @ 0x30
  1050  000031                     	ds	1
  1051  000032                     ??_echo:
  1052                           
  1053                           ; 1 bytes @ 0x31
  1054  000032                     	ds	4
  1055  000036                     ??_ISR:
  1056                           
  1057                           ; 1 bytes @ 0x35
  1058  000036                     	ds	2
  1059                           
  1060 ;;
  1061 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1062 ;;
  1063 ;; *************** function _main *****************
  1064 ;; Defined at:
  1065 ;;		line 14 in file "main.c"
  1066 ;; Parameters:    Size  Location     Type
  1067 ;;		None
  1068 ;; Auto vars:     Size  Location     Type
  1069 ;;  i               2    6[BANK1 ] int 
  1070 ;;  i               2    4[BANK1 ] int 
  1071 ;;  t_count         2   14[BANK1 ] int 
  1072 ;;  stack           2   12[BANK1 ] int 
  1073 ;;  t_dep           2   10[BANK1 ] int 
  1074 ;;  steps2_adj      2    8[BANK1 ] int 
  1075 ;; Return value:  Size  Location     Type
  1076 ;;                  1    wreg      void 
  1077 ;; Registers used:
  1078 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1079 ;; Tracked objects:
  1080 ;;		On entry : 0/0
  1081 ;;		On exit  : 0/0
  1082 ;;		Unchanged: 0/0
  1083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1085 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1086 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1087 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1088 ;;Total ram usage:       14 bytes
  1089 ;; Hardware stack levels required when called:   17
  1090 ;; This function calls:
  1091 ;;		_actuators_main
  1092 ;;		_number_deploy
  1093 ;;		_ultrasonic_main
  1094 ;; This function is called by:
  1095 ;;		Startup code after reset
  1096 ;; This function uses a non-reentrant model
  1097 ;;
  1098                           
  1099                           	psect	text0
  1100  00298E                     __ptext0:
  1101                           	opt callstack 0
  1102  00298E                     _main:
  1103                           	opt callstack 14
  1104                           
  1105                           ;main.c: 16:     int t_dep = 0;
  1106                           
  1107                           ;incstack = 0
  1108  00298E  0E00               	movlw	0
  1109  002990  0101               	movlb	1	; () banked
  1110  002992  6F5B               	movwf	(main@t_dep+1)& (0+255),b
  1111  002994  0E00               	movlw	0
  1112  002996  6F5A               	movwf	main@t_dep& (0+255),b
  1113                           
  1114                           ; BSR set to: 1
  1115                           ;main.c: 18:     int steps2_adj=ultrasonic_main();
  1116  002998  ECF2  F012         	call	_ultrasonic_main	;wreg free
  1117  00299C  C0E6  F158         	movff	?_ultrasonic_main,main@steps2_adj
  1118  0029A0  C0E7  F159         	movff	?_ultrasonic_main+1,main@steps2_adj+1
  1119                           
  1120                           ;main.c: 20:     _delay((unsigned long)((1000)*(10000000/4000.0)));
  1121  0029A4  0E0D               	movlw	13
  1122  0029A6  0101               	movlb	1	; () banked
  1123  0029A8  6F53               	movwf	(??_main+1)& (0+255),b
  1124  0029AA  0EAF               	movlw	175
  1125  0029AC  6F52               	movwf	??_main& (0+255),b
  1126  0029AE  0EB6               	movlw	182
  1127  0029B0                     u5547:
  1128  0029B0  2EE8               	decfsz	wreg,f,c
  1129  0029B2  D7FE               	bra	u5547
  1130  0029B4  2F52               	decfsz	??_main& (0+255),f,b
  1131  0029B6  D7FC               	bra	u5547
  1132  0029B8  2F53               	decfsz	(??_main+1)& (0+255),f,b
  1133  0029BA  D7FA               	bra	u5547
  1134  0029BC  F000               	nop	
  1135                           
  1136                           ;main.c: 23:     t_count = number_deploy(20, poles_detected);
  1137  0029BE  0E00               	movlw	0
  1138  0029C0  0100               	movlb	0	; () banked
  1139  0029C2  6FE6               	movwf	(number_deploy@avg_dist+1)& (0+255),b
  1140  0029C4  0E14               	movlw	20
  1141  0029C6  6FE5               	movwf	number_deploy@avg_dist& (0+255),b
  1142  0029C8  0E00               	movlw	0
  1143  0029CA  6FE8               	movwf	(number_deploy@poles_detected+1)& (0+255),b
  1144  0029CC  0E00               	movlw	0
  1145  0029CE  6FE7               	movwf	number_deploy@poles_detected& (0+255),b
  1146  0029D0  EC12  F010         	call	_number_deploy	;wreg free
  1147  0029D4  C0E5  F15E         	movff	?_number_deploy,main@t_count
  1148  0029D8  C0E6  F15F         	movff	?_number_deploy+1,main@t_count+1
  1149                           
  1150                           ;main.c: 25:             if (t_count<=2){
  1151  0029DC  0101               	movlb	1	; () banked
  1152  0029DE  BF5F               	btfsc	(main@t_count+1)& (0+255),7,b
  1153  0029E0  D007               	goto	u5480
  1154  0029E2  515F               	movf	(main@t_count+1)& (0+255),w,b
  1155  0029E4  E155               	bnz	l163
  1156  0029E6  0E03               	movlw	3
  1157  0029E8  5D5E               	subwf	main@t_count& (0+255),w,b
  1158  0029EA  B0D8               	btfsc	status,0,c
  1159  0029EC  EF07  F000         	goto	start
  1160  0029F0                     u5480:
  1161                           
  1162                           ; BSR set to: 1
  1163                           ;main.c: 29:                     stack = 1;
  1164                           
  1165                           ; BSR set to: 1
  1166                           ;main.c: 26:                 if (t_dep <8){
  1167  0029F0  0E00               	movlw	0
  1168  0029F2  6F5D               	movwf	(main@stack+1)& (0+255),b
  1169  0029F4  0E01               	movlw	1
  1170  0029F6  6F5C               	movwf	main@stack& (0+255),b
  1171                           
  1172                           ;main.c: 32:                     for(int i=0; i<(t_count); i++){
  1173  0029F8  0E00               	movlw	0
  1174  0029FA  6F55               	movwf	(main@i+1)& (0+255),b
  1175  0029FC  0E00               	movlw	0
  1176  0029FE  6F54               	movwf	main@i& (0+255),b
  1177  002A00  D00F               	goto	l5360
  1178  002A02                     l5354:
  1179                           
  1180                           ; BSR set to: 1
  1181                           ;main.c: 33:                         actuators_main(stack, steps2_adj);
  1182  002A02  C15C  F0F7         	movff	main@stack,actuators_main@stack
  1183  002A06  C15D  F0F8         	movff	main@stack+1,actuators_main@stack+1
  1184  002A0A  C158  F0F9         	movff	main@steps2_adj,actuators_main@steps2_adj
  1185  002A0E  C159  F0FA         	movff	main@steps2_adj+1,actuators_main@steps2_adj+1
  1186  002A12  ECA5  F011         	call	_actuators_main	;wreg free
  1187                           
  1188                           ;main.c: 34:                         t_dep++;
  1189  002A16  0101               	movlb	1	; () banked
  1190  002A18  4B5A               	infsnz	main@t_dep& (0+255),f,b
  1191  002A1A  2B5B               	incf	(main@t_dep+1)& (0+255),f,b
  1192                           
  1193                           ; BSR set to: 1
  1194                           ;main.c: 35:                     }
  1195  002A1C  4B54               	infsnz	main@i& (0+255),f,b
  1196  002A1E  2B55               	incf	(main@i+1)& (0+255),f,b
  1197  002A20                     l5360:
  1198                           
  1199                           ; BSR set to: 1
  1200  002A20  515E               	movf	main@t_count& (0+255),w,b
  1201  002A22  5D54               	subwf	main@i& (0+255),w,b
  1202  002A24  5155               	movf	(main@i+1)& (0+255),w,b
  1203  002A26  0A80               	xorlw	128
  1204  002A28  6F52               	movwf	??_main& (0+255),b
  1205  002A2A  515F               	movf	(main@t_count+1)& (0+255),w,b
  1206  002A2C  0A80               	xorlw	128
  1207  002A2E  5952               	subwfb	??_main& (0+255),w,b
  1208  002A30  A0D8               	btfss	status,0,c
  1209  002A32  D7E7               	goto	l5354
  1210                           
  1211                           ; BSR set to: 1
  1212                           ;main.c: 37:                 if (t_dep >= 8){
  1213  002A34  BF5B               	btfsc	(main@t_dep+1)& (0+255),7,b
  1214  002A36  EF07  F000         	goto	start
  1215  002A3A  515B               	movf	(main@t_dep+1)& (0+255),w,b
  1216  002A3C  E105               	bnz	u5500
  1217  002A3E  0E08               	movlw	8
  1218  002A40  5D5A               	subwf	main@t_dep& (0+255),w,b
  1219  002A42  A0D8               	btfss	status,0,c
  1220  002A44  EF07  F000         	goto	start
  1221  002A48                     u5500:
  1222                           
  1223                           ; BSR set to: 1
  1224                           ;main.c: 38:                     stack = 2;
  1225  002A48  0E00               	movlw	0
  1226  002A4A  6F5D               	movwf	(main@stack+1)& (0+255),b
  1227  002A4C  0E02               	movlw	2
  1228  002A4E  6F5C               	movwf	main@stack& (0+255),b
  1229                           
  1230                           ;main.c: 39:                     for(int i=0; i<(t_count); i++){
  1231  002A50  0E00               	movlw	0
  1232  002A52  6F57               	movwf	(main@i_331+1)& (0+255),b
  1233  002A54  0E00               	movlw	0
  1234  002A56  6F56               	movwf	main@i_331& (0+255),b
  1235  002A58  D00F               	goto	l5372
  1236  002A5A                     l5366:
  1237                           
  1238                           ; BSR set to: 1
  1239                           ;main.c: 40:                         actuators_main(stack, steps2_adj);
  1240  002A5A  C15C  F0F7         	movff	main@stack,actuators_main@stack
  1241  002A5E  C15D  F0F8         	movff	main@stack+1,actuators_main@stack+1
  1242  002A62  C158  F0F9         	movff	main@steps2_adj,actuators_main@steps2_adj
  1243  002A66  C159  F0FA         	movff	main@steps2_adj+1,actuators_main@steps2_adj+1
  1244  002A6A  ECA5  F011         	call	_actuators_main	;wreg free
  1245                           
  1246                           ;main.c: 41:                         t_dep++;
  1247  002A6E  0101               	movlb	1	; () banked
  1248  002A70  4B5A               	infsnz	main@t_dep& (0+255),f,b
  1249  002A72  2B5B               	incf	(main@t_dep+1)& (0+255),f,b
  1250                           
  1251                           ; BSR set to: 1
  1252                           ;main.c: 42:                     }
  1253  002A74  4B56               	infsnz	main@i_331& (0+255),f,b
  1254  002A76  2B57               	incf	(main@i_331+1)& (0+255),f,b
  1255  002A78                     l5372:
  1256                           
  1257                           ; BSR set to: 1
  1258  002A78  515E               	movf	main@t_count& (0+255),w,b
  1259  002A7A  5D56               	subwf	main@i_331& (0+255),w,b
  1260  002A7C  5157               	movf	(main@i_331+1)& (0+255),w,b
  1261  002A7E  0A80               	xorlw	128
  1262  002A80  6F52               	movwf	??_main& (0+255),b
  1263  002A82  515F               	movf	(main@t_count+1)& (0+255),w,b
  1264  002A84  0A80               	xorlw	128
  1265  002A86  5952               	subwfb	??_main& (0+255),w,b
  1266  002A88  B0D8               	btfsc	status,0,c
  1267  002A8A  EF07  F000         	goto	start
  1268  002A8E  D7E5               	goto	l5366
  1269  002A90                     l163:
  1270                           
  1271                           ; BSR set to: 1
  1272  002A90  EF07  F000         	goto	start
  1273  002A94                     __end_of_main:
  1274                           	opt callstack 0
  1275                           
  1276 ;; *************** function _ultrasonic_main *****************
  1277 ;; Defined at:
  1278 ;;		line 416 in file "ultrasonic_main.c"
  1279 ;; Parameters:    Size  Location     Type
  1280 ;;		None
  1281 ;; Auto vars:     Size  Location     Type
  1282 ;;  i               2  111[BANK0 ] int 
  1283 ;;  min_us_dist     2  113[BANK0 ] int 
  1284 ;;  steps2_adj      2  109[BANK0 ] int 
  1285 ;;  step2_offset    2  107[BANK0 ] int 
  1286 ;;  poles_detect    2    0        int 
  1287 ;; Return value:  Size  Location     Type
  1288 ;;                  2  102[BANK0 ] int 
  1289 ;; Registers used:
  1290 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1291 ;; Tracked objects:
  1292 ;;		On entry : 0/0
  1293 ;;		On exit  : 0/0
  1294 ;;		Unchanged: 0/0
  1295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1296 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1297 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1298 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1299 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1300 ;;Total ram usage:       13 bytes
  1301 ;; Hardware stack levels used:    1
  1302 ;; Hardware stack levels required when called:   15
  1303 ;; This function calls:
  1304 ;;		_abs
  1305 ;;		_initLCD
  1306 ;;		_lcdInst
  1307 ;;		_min
  1308 ;;		_print_echo
  1309 ;;		_printf
  1310 ;;		_trig
  1311 ;; This function is called by:
  1312 ;;		_main
  1313 ;; This function uses a non-reentrant model
  1314 ;;
  1315                           
  1316                           	psect	text1
  1317  0025E4                     __ptext1:
  1318                           	opt callstack 0
  1319  0025E4                     _ultrasonic_main:
  1320                           	opt callstack 15
  1321                           
  1322                           ;ultrasonic_main.c: 417:  TRISB = 0b11110000;
  1323                           
  1324                           ; BSR set to: 1
  1325                           ;incstack = 0
  1326  0025E4  0EF0               	movlw	240
  1327  0025E6  6E93               	movwf	3987,c	;volatile
  1328                           
  1329                           ;ultrasonic_main.c: 418:  TRISD = 0x00;
  1330  0025E8  0E00               	movlw	0
  1331  0025EA  6E95               	movwf	3989,c	;volatile
  1332                           
  1333                           ;ultrasonic_main.c: 419:  GIE = 1;
  1334  0025EC  8EF2               	bsf	4082,7,c	;volatile
  1335                           
  1336                           ;ultrasonic_main.c: 420:  RBIF = 0;
  1337  0025EE  90F2               	bcf	4082,0,c	;volatile
  1338                           
  1339                           ;ultrasonic_main.c: 421:  RBIE = 1;
  1340  0025F0  86F2               	bsf	4082,3,c	;volatile
  1341                           
  1342                           ;ultrasonic_main.c: 422:     ADCON1=0x0F;
  1343  0025F2  0E0F               	movlw	15
  1344  0025F4  6EC1               	movwf	4033,c	;volatile
  1345                           
  1346                           ;ultrasonic_main.c: 424:     TRISBbits.RB0 = 0;
  1347  0025F6  9093               	bcf	3987,0,c	;volatile
  1348                           
  1349                           ;ultrasonic_main.c: 425:     LATBbits.LATB0 = 1;
  1350  0025F8  808A               	bsf	3978,0,c	;volatile
  1351                           
  1352                           ;ultrasonic_main.c: 427:  initLCD();
  1353  0025FA  EC71  F018         	call	_initLCD	;wreg free
  1354                           
  1355                           ;ultrasonic_main.c: 428:  { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  1356  0025FE  0E01               	movlw	1
  1357  002600  EC51  F01A         	call	_lcdInst
  1358  002604  0E11               	movlw	17
  1359  002606  0100               	movlb	0	; () banked
  1360  002608  6FE8               	movwf	??_ultrasonic_main& (0+255),b
  1361  00260A  0E3A               	movlw	58
  1362  00260C                     u5557:
  1363  00260C  2EE8               	decfsz	wreg,f,c
  1364  00260E  D7FE               	bra	u5557
  1365  002610  2FE8               	decfsz	??_ultrasonic_main& (0+255),f,b
  1366  002612  D7FC               	bra	u5557
  1367  002614  F000               	nop	
  1368                           
  1369                           ;ultrasonic_main.c: 432:  T1CON = 0x10;
  1370  002616  0E10               	movlw	16
  1371  002618  6ECD               	movwf	4045,c	;volatile
  1372                           
  1373                           ;ultrasonic_main.c: 435:                 for (int i=0; i<2;i++){
  1374  00261A  0E00               	movlw	0
  1375  00261C  0100               	movlb	0	; () banked
  1376  00261E  6FF0               	movwf	(ultrasonic_main@i+1)& (0+255),b
  1377  002620  0E00               	movlw	0
  1378  002622  6FEF               	movwf	ultrasonic_main@i& (0+255),b
  1379  002624                     l5232:
  1380                           
  1381                           ; BSR set to: 0
  1382                           ;ultrasonic_main.c: 437:         for (meas=0; meas<5;meas++){
  1383  002624  0E00               	movlw	0
  1384  002626  6E54               	movwf	_meas+1,c	;volatile
  1385  002628  0E00               	movlw	0
  1386  00262A  6E53               	movwf	_meas,c	;volatile
  1387  00262C                     l5234:
  1388  00262C  BE54               	btfsc	_meas+1,7,c	;volatile
  1389  00262E  D006               	goto	l5238
  1390  002630  5054               	movf	_meas+1,w,c	;volatile
  1391  002632  E10D               	bnz	l5250
  1392  002634  0E05               	movlw	5
  1393  002636  5C53               	subwf	_meas,w,c	;volatile
  1394  002638  B0D8               	btfsc	status,0,c
  1395  00263A  D009               	goto	l5250
  1396  00263C                     l5238:
  1397                           
  1398                           ;ultrasonic_main.c: 439:         trig();
  1399  00263C  EC4A  F015         	call	_trig	;wreg free
  1400                           
  1401                           ;ultrasonic_main.c: 441:         RBIE = 0;
  1402  002640  96F2               	bcf	4082,3,c	;volatile
  1403                           
  1404                           ;ultrasonic_main.c: 443:         print_echo();
  1405  002642  EC1B  F00F         	call	_print_echo	;wreg free
  1406                           
  1407                           ;ultrasonic_main.c: 445:         RBIE = 1;
  1408  002646  86F2               	bsf	4082,3,c	;volatile
  1409                           
  1410                           ;ultrasonic_main.c: 448:         }
  1411  002648  4A53               	infsnz	_meas,f,c	;volatile
  1412  00264A  2A54               	incf	_meas+1,f,c	;volatile
  1413  00264C  D7EF               	goto	l5234
  1414  00264E                     l5250:
  1415                           
  1416                           ;ultrasonic_main.c: 463:     }
  1417  00264E  0100               	movlb	0	; () banked
  1418  002650  4BEF               	infsnz	ultrasonic_main@i& (0+255),f,b
  1419  002652  2BF0               	incf	(ultrasonic_main@i+1)& (0+255),f,b
  1420                           
  1421                           ; BSR set to: 0
  1422  002654  BFF0               	btfsc	(ultrasonic_main@i+1)& (0+255),7,b
  1423  002656  D7E6               	goto	l5232
  1424  002658  51F0               	movf	(ultrasonic_main@i+1)& (0+255),w,b
  1425  00265A  E104               	bnz	u5310
  1426  00265C  0E02               	movlw	2
  1427  00265E  5DEF               	subwf	ultrasonic_main@i& (0+255),w,b
  1428  002660  A0D8               	btfss	status,0,c
  1429  002662  D7E0               	goto	l5232
  1430  002664                     u5310:
  1431                           
  1432                           ; BSR set to: 0
  1433                           ;ultrasonic_main.c: 464:     int min_us_dist = min(a, 4);
  1434  002664  0E58               	movlw	low _a
  1435  002666  6F80               	movwf	min@array& (0+255),b
  1436  002668  0E00               	movlw	high _a
  1437  00266A  6F81               	movwf	(min@array+1)& (0+255),b
  1438  00266C  0E00               	movlw	0
  1439  00266E  6F83               	movwf	(min@size+1)& (0+255),b
  1440  002670  0E04               	movlw	4
  1441  002672  6F82               	movwf	min@size& (0+255),b
  1442  002674  ECCB  F015         	call	_min	;wreg free
  1443  002678  C080  F0F1         	movff	?_min,ultrasonic_main@min_us_dist
  1444  00267C  C081  F0F2         	movff	?_min+1,ultrasonic_main@min_us_dist+1
  1445                           
  1446                           ;ultrasonic_main.c: 465:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.
      +                          0)));};
  1447  002680  0E01               	movlw	1
  1448  002682  EC51  F01A         	call	_lcdInst
  1449  002686  0E11               	movlw	17
  1450  002688  0100               	movlb	0	; () banked
  1451  00268A  6FE8               	movwf	??_ultrasonic_main& (0+255),b
  1452  00268C  0E3A               	movlw	58
  1453  00268E                     u5567:
  1454  00268E  2EE8               	decfsz	wreg,f,c
  1455  002690  D7FE               	bra	u5567
  1456  002692  2FE8               	decfsz	??_ultrasonic_main& (0+255),f,b
  1457  002694  D7FC               	bra	u5567
  1458  002696  F000               	nop	
  1459                           
  1460                           ;ultrasonic_main.c: 466:     printf("minimum %d", min_us_dist);
  1461  002698  0E80               	movlw	low STR_19
  1462  00269A  0100               	movlb	0	; () banked
  1463  00269C  6FDB               	movwf	printf@fmt& (0+255),b
  1464  00269E  0E10               	movlw	high STR_19
  1465  0026A0  6FDC               	movwf	(printf@fmt+1)& (0+255),b
  1466  0026A2  C0F1  F0DD         	movff	ultrasonic_main@min_us_dist,?_printf+2
  1467  0026A6  C0F2  F0DE         	movff	ultrasonic_main@min_us_dist+1,?_printf+3
  1468  0026AA  EC0A  F01A         	call	_printf	;wreg free
  1469                           
  1470                           ;ultrasonic_main.c: 470:         if (min_us_dist<14){
  1471  0026AE  0100               	movlb	0	; () banked
  1472  0026B0  BFF2               	btfsc	(ultrasonic_main@min_us_dist+1)& (0+255),7,b
  1473  0026B2  D006               	goto	u5320
  1474  0026B4  51F2               	movf	(ultrasonic_main@min_us_dist+1)& (0+255),w,b
  1475  0026B6  E109               	bnz	l5268
  1476  0026B8  0E0E               	movlw	14
  1477  0026BA  5DF1               	subwf	ultrasonic_main@min_us_dist& (0+255),w,b
  1478  0026BC  B0D8               	btfsc	status,0,c
  1479  0026BE  D005               	goto	l5268
  1480  0026C0                     u5320:
  1481                           
  1482                           ; BSR set to: 0
  1483                           ;ultrasonic_main.c: 471:         step2_offset = 0;
  1484  0026C0  0E00               	movlw	0
  1485  0026C2  6FEC               	movwf	(ultrasonic_main@step2_offset+1)& (0+255),b
  1486  0026C4  0E00               	movlw	0
  1487  0026C6  6FEB               	movwf	ultrasonic_main@step2_offset& (0+255),b
  1488                           
  1489                           ;ultrasonic_main.c: 472:     }
  1490  0026C8  D00C               	goto	l5270
  1491  0026CA                     l5268:
  1492                           
  1493                           ; BSR set to: 0
  1494                           ;ultrasonic_main.c: 474:     step2_offset = abs(min_us_dist - 14);
  1495  0026CA  0EF2               	movlw	242
  1496  0026CC  25F1               	addwf	ultrasonic_main@min_us_dist& (0+255),w,b
  1497  0026CE  6F92               	movwf	abs@a& (0+255),b
  1498  0026D0  0EFF               	movlw	255
  1499  0026D2  21F2               	addwfc	(ultrasonic_main@min_us_dist+1)& (0+255),w,b
  1500  0026D4  6F93               	movwf	(abs@a+1)& (0+255),b
  1501  0026D6  EC7B  F019         	call	_abs	;wreg free
  1502  0026DA  C092  F0EB         	movff	?_abs,ultrasonic_main@step2_offset
  1503  0026DE  C093  F0EC         	movff	?_abs+1,ultrasonic_main@step2_offset+1
  1504  0026E2                     l5270:
  1505                           
  1506                           ;ultrasonic_main.c: 477:     int steps2_adj = 110 + step2_offset;
  1507  0026E2  0E6E               	movlw	110
  1508  0026E4  0100               	movlb	0	; () banked
  1509  0026E6  25EB               	addwf	ultrasonic_main@step2_offset& (0+255),w,b
  1510  0026E8  6FED               	movwf	ultrasonic_main@steps2_adj& (0+255),b
  1511  0026EA  0E00               	movlw	0
  1512  0026EC  21EC               	addwfc	(ultrasonic_main@step2_offset+1)& (0+255),w,b
  1513  0026EE  6FEE               	movwf	(ultrasonic_main@steps2_adj+1)& (0+255),b
  1514                           
  1515                           ; BSR set to: 0
  1516                           ;ultrasonic_main.c: 478:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4
      +                          000.0)));};
  1517  0026F0  0E01               	movlw	1
  1518  0026F2  EC51  F01A         	call	_lcdInst
  1519  0026F6  0E11               	movlw	17
  1520  0026F8  0100               	movlb	0	; () banked
  1521  0026FA  6FE8               	movwf	??_ultrasonic_main& (0+255),b
  1522  0026FC  0E3A               	movlw	58
  1523  0026FE                     u5577:
  1524  0026FE  2EE8               	decfsz	wreg,f,c
  1525  002700  D7FE               	bra	u5577
  1526  002702  2FE8               	decfsz	??_ultrasonic_main& (0+255),f,b
  1527  002704  D7FC               	bra	u5577
  1528  002706  F000               	nop	
  1529                           
  1530                           ;ultrasonic_main.c: 479:     printf("stepsadj %d", steps2_adj);
  1531  002708  0E74               	movlw	low STR_20
  1532  00270A  0100               	movlb	0	; () banked
  1533  00270C  6FDB               	movwf	printf@fmt& (0+255),b
  1534  00270E  0E10               	movlw	high STR_20
  1535  002710  6FDC               	movwf	(printf@fmt+1)& (0+255),b
  1536  002712  C0ED  F0DD         	movff	ultrasonic_main@steps2_adj,?_printf+2
  1537  002716  C0EE  F0DE         	movff	ultrasonic_main@steps2_adj+1,?_printf+3
  1538  00271A  EC0A  F01A         	call	_printf	;wreg free
  1539                           
  1540                           ;ultrasonic_main.c: 481:     return steps2_adj;
  1541  00271E  C0ED  F0E6         	movff	ultrasonic_main@steps2_adj,?_ultrasonic_main
  1542  002722  C0EE  F0E7         	movff	ultrasonic_main@steps2_adj+1,?_ultrasonic_main+1
  1543  002726  0012               	return		;funcret
  1544  002728                     __end_of_ultrasonic_main:
  1545                           	opt callstack 0
  1546                           
  1547 ;; *************** function _trig *****************
  1548 ;; Defined at:
  1549 ;;		line 208 in file "ultrasonic_main.c"
  1550 ;; Parameters:    Size  Location     Type
  1551 ;;		None
  1552 ;; Auto vars:     Size  Location     Type
  1553 ;;		None
  1554 ;; Return value:  Size  Location     Type
  1555 ;;                  1    wreg      void 
  1556 ;; Registers used:
  1557 ;;		wreg, status,2, status,0
  1558 ;; Tracked objects:
  1559 ;;		On entry : 0/0
  1560 ;;		On exit  : 0/0
  1561 ;;		Unchanged: 0/0
  1562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1565 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1566 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1567 ;;Total ram usage:        2 bytes
  1568 ;; Hardware stack levels used:    1
  1569 ;; Hardware stack levels required when called:    3
  1570 ;; This function calls:
  1571 ;;		Nothing
  1572 ;; This function is called by:
  1573 ;;		_ultrasonic_main
  1574 ;; This function uses a non-reentrant model
  1575 ;;
  1576                           
  1577                           	psect	text2
  1578  002A94                     __ptext2:
  1579                           	opt callstack 0
  1580  002A94                     _trig:
  1581                           	opt callstack 26
  1582                           
  1583                           ;ultrasonic_main.c: 210:     for(b=1; b<(5); b++){
  1584                           
  1585                           ;incstack = 0
  1586  002A94  0E00               	movlw	0
  1587  002A96  6E56               	movwf	_b+1,c
  1588  002A98  0E01               	movlw	1
  1589  002A9A  6E55               	movwf	_b,c
  1590  002A9C  BE56               	btfsc	_b+1,7,c
  1591  002A9E  D004               	goto	l4936
  1592  002AA0  5056               	movf	_b+1,w,c
  1593  002AA2  E101               	bnz	u4940
  1594  002AA4  D072               	goto	L1
  1595  002AA6                     u4940:
  1596  002AA6  0012               	return	
  1597  002AA8                     l4936:
  1598                           
  1599                           ;ultrasonic_main.c: 211:         TMR1H = 0;
  1600  002AA8  0E00               	movlw	0
  1601  002AAA  6ECF               	movwf	4047,c	;volatile
  1602                           
  1603                           ;ultrasonic_main.c: 212:         TMR1L = 0;
  1604  002AAC  0E00               	movlw	0
  1605  002AAE  6ECE               	movwf	4046,c	;volatile
  1606                           
  1607                           ;ultrasonic_main.c: 214:         if(b==1){
  1608  002AB0  0455               	decf	_b,w,c
  1609  002AB2  1056               	iorwf	_b+1,w,c
  1610  002AB4  A4D8               	btfss	status,2,c
  1611  002AB6  D015               	goto	l4948
  1612                           
  1613                           ;ultrasonic_main.c: 215:             RBIE = 0;
  1614  002AB8  96F2               	bcf	4082,3,c	;volatile
  1615                           
  1616                           ;ultrasonic_main.c: 216:             RD1 = 1;
  1617  002ABA  8283               	bsf	3971,1,c	;volatile
  1618                           
  1619                           ;ultrasonic_main.c: 217:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  1620  002ABC  0E08               	movlw	8
  1621  002ABE                     u5587:
  1622  002ABE  2EE8               	decfsz	wreg,f,c
  1623  002AC0  D7FE               	bra	u5587
  1624  002AC2  F000               	nop	
  1625                           
  1626                           ;ultrasonic_main.c: 218:             RD1 = 0;
  1627  002AC4  9283               	bcf	3971,1,c	;volatile
  1628                           
  1629                           ;ultrasonic_main.c: 220:             RBIE = 1;
  1630  002AC6  86F2               	bsf	4082,3,c	;volatile
  1631                           
  1632                           ;ultrasonic_main.c: 221:             _delay((unsigned long)((150)*(10000000/4000.0)));
  1633  002AC8  0E02               	movlw	2
  1634  002ACA  0100               	movlb	0	; () banked
  1635  002ACC  6F81               	movwf	(??_trig+1)& (0+255),b
  1636  002ACE  0EE7               	movlw	231
  1637  002AD0  6F80               	movwf	??_trig& (0+255),b
  1638  002AD2  0E00               	movlw	0
  1639  002AD4                     u5597:
  1640  002AD4  2EE8               	decfsz	wreg,f,c
  1641  002AD6  D7FE               	bra	u5597
  1642  002AD8  2F80               	decfsz	??_trig& (0+255),f,b
  1643  002ADA  D7FC               	bra	u5597
  1644  002ADC  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  1645  002ADE  D7FA               	bra	u5597
  1646  002AE0  F000               	nop	
  1647  002AE2                     l4948:
  1648                           
  1649                           ;ultrasonic_main.c: 227:         if(b==2){
  1650  002AE2  0E02               	movlw	2
  1651  002AE4  1855               	xorwf	_b,w,c
  1652  002AE6  1056               	iorwf	_b+1,w,c
  1653  002AE8  A4D8               	btfss	status,2,c
  1654  002AEA  D015               	goto	l4958
  1655                           
  1656                           ;ultrasonic_main.c: 228:             RBIE = 0;
  1657  002AEC  96F2               	bcf	4082,3,c	;volatile
  1658                           
  1659                           ;ultrasonic_main.c: 229:             RD0 = 1;
  1660  002AEE  8083               	bsf	3971,0,c	;volatile
  1661                           
  1662                           ;ultrasonic_main.c: 230:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  1663  002AF0  0E08               	movlw	8
  1664  002AF2                     u5607:
  1665  002AF2  2EE8               	decfsz	wreg,f,c
  1666  002AF4  D7FE               	bra	u5607
  1667  002AF6  F000               	nop	
  1668                           
  1669                           ;ultrasonic_main.c: 231:             RD0 = 0;
  1670  002AF8  9083               	bcf	3971,0,c	;volatile
  1671                           
  1672                           ;ultrasonic_main.c: 233:                         RBIE = 1;
  1673  002AFA  86F2               	bsf	4082,3,c	;volatile
  1674                           
  1675                           ;ultrasonic_main.c: 234:             _delay((unsigned long)((150)*(10000000/4000.0)));
  1676  002AFC  0E02               	movlw	2
  1677  002AFE  0100               	movlb	0	; () banked
  1678  002B00  6F81               	movwf	(??_trig+1)& (0+255),b
  1679  002B02  0EE7               	movlw	231
  1680  002B04  6F80               	movwf	??_trig& (0+255),b
  1681  002B06  0E00               	movlw	0
  1682  002B08                     u5617:
  1683  002B08  2EE8               	decfsz	wreg,f,c
  1684  002B0A  D7FE               	bra	u5617
  1685  002B0C  2F80               	decfsz	??_trig& (0+255),f,b
  1686  002B0E  D7FC               	bra	u5617
  1687  002B10  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  1688  002B12  D7FA               	bra	u5617
  1689  002B14  F000               	nop	
  1690  002B16                     l4958:
  1691                           
  1692                           ;ultrasonic_main.c: 239:         if(b==3){
  1693  002B16  0E03               	movlw	3
  1694  002B18  1855               	xorwf	_b,w,c
  1695  002B1A  1056               	iorwf	_b+1,w,c
  1696  002B1C  A4D8               	btfss	status,2,c
  1697  002B1E  D015               	goto	l4968
  1698                           
  1699                           ;ultrasonic_main.c: 240:             RBIE = 0;
  1700  002B20  96F2               	bcf	4082,3,c	;volatile
  1701                           
  1702                           ;ultrasonic_main.c: 241:             RB3 = 1;
  1703  002B22  8681               	bsf	3969,3,c	;volatile
  1704                           
  1705                           ;ultrasonic_main.c: 242:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  1706  002B24  0E08               	movlw	8
  1707  002B26                     u5627:
  1708  002B26  2EE8               	decfsz	wreg,f,c
  1709  002B28  D7FE               	bra	u5627
  1710  002B2A  F000               	nop	
  1711                           
  1712                           ;ultrasonic_main.c: 243:             RB3 = 0;
  1713  002B2C  9681               	bcf	3969,3,c	;volatile
  1714                           
  1715                           ;ultrasonic_main.c: 245:                         RBIE = 1;
  1716  002B2E  86F2               	bsf	4082,3,c	;volatile
  1717                           
  1718                           ;ultrasonic_main.c: 246:             _delay((unsigned long)((150)*(10000000/4000.0)));
  1719  002B30  0E02               	movlw	2
  1720  002B32  0100               	movlb	0	; () banked
  1721  002B34  6F81               	movwf	(??_trig+1)& (0+255),b
  1722  002B36  0EE7               	movlw	231
  1723  002B38  6F80               	movwf	??_trig& (0+255),b
  1724  002B3A  0E00               	movlw	0
  1725  002B3C                     u5637:
  1726  002B3C  2EE8               	decfsz	wreg,f,c
  1727  002B3E  D7FE               	bra	u5637
  1728  002B40  2F80               	decfsz	??_trig& (0+255),f,b
  1729  002B42  D7FC               	bra	u5637
  1730  002B44  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  1731  002B46  D7FA               	bra	u5637
  1732  002B48  F000               	nop	
  1733  002B4A                     l4968:
  1734                           
  1735                           ;ultrasonic_main.c: 251:         if(b==4){
  1736  002B4A  0E04               	movlw	4
  1737  002B4C  1855               	xorwf	_b,w,c
  1738  002B4E  1056               	iorwf	_b+1,w,c
  1739  002B50  A4D8               	btfss	status,2,c
  1740  002B52  D015               	goto	l4978
  1741                           
  1742                           ;ultrasonic_main.c: 252:             RBIE = 0;
  1743  002B54  96F2               	bcf	4082,3,c	;volatile
  1744                           
  1745                           ;ultrasonic_main.c: 253:             RB2 = 1;
  1746  002B56  8481               	bsf	3969,2,c	;volatile
  1747                           
  1748                           ;ultrasonic_main.c: 254:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  1749  002B58  0E08               	movlw	8
  1750  002B5A                     u5647:
  1751  002B5A  2EE8               	decfsz	wreg,f,c
  1752  002B5C  D7FE               	bra	u5647
  1753  002B5E  F000               	nop	
  1754                           
  1755                           ;ultrasonic_main.c: 255:             RB2 = 0;
  1756  002B60  9481               	bcf	3969,2,c	;volatile
  1757                           
  1758                           ;ultrasonic_main.c: 257:                         RBIE = 1;
  1759  002B62  86F2               	bsf	4082,3,c	;volatile
  1760                           
  1761                           ;ultrasonic_main.c: 258:             _delay((unsigned long)((150)*(10000000/4000.0)));
  1762  002B64  0E02               	movlw	2
  1763  002B66  0100               	movlb	0	; () banked
  1764  002B68  6F81               	movwf	(??_trig+1)& (0+255),b
  1765  002B6A  0EE7               	movlw	231
  1766  002B6C  6F80               	movwf	??_trig& (0+255),b
  1767  002B6E  0E00               	movlw	0
  1768  002B70                     u5657:
  1769  002B70  2EE8               	decfsz	wreg,f,c
  1770  002B72  D7FE               	bra	u5657
  1771  002B74  2F80               	decfsz	??_trig& (0+255),f,b
  1772  002B76  D7FC               	bra	u5657
  1773  002B78  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  1774  002B7A  D7FA               	bra	u5657
  1775  002B7C  F000               	nop	
  1776  002B7E                     l4978:
  1777                           
  1778                           ;ultrasonic_main.c: 266:     }
  1779  002B7E  4A55               	infsnz	_b,f,c
  1780  002B80  2A56               	incf	_b+1,f,c
  1781  002B82  BE56               	btfsc	_b+1,7,c
  1782  002B84  D791               	goto	l4936
  1783  002B86  5056               	movf	_b+1,w,c
  1784  002B88  E105               	bnz	u4990
  1785  002B8A                     L1:
  1786  002B8A  0E05               	movlw	5
  1787  002B8C  5C55               	subwf	_b,w,c
  1788  002B8E  B0D8               	btfsc	status,0,c
  1789  002B90  0012               	return	
  1790  002B92  D78A               	goto	l4936
  1791  002B94                     u4990:
  1792  002B94  0012               	return		;funcret
  1793  002B96                     __end_of_trig:
  1794                           	opt callstack 0
  1795                           
  1796 ;; *************** function _print_echo *****************
  1797 ;; Defined at:
  1798 ;;		line 271 in file "ultrasonic_main.c"
  1799 ;; Parameters:    Size  Location     Type
  1800 ;;		None
  1801 ;; Auto vars:     Size  Location     Type
  1802 ;;		None
  1803 ;; Return value:  Size  Location     Type
  1804 ;;                  1    wreg      void 
  1805 ;; Registers used:
  1806 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1807 ;; Tracked objects:
  1808 ;;		On entry : 0/0
  1809 ;;		On exit  : 0/0
  1810 ;;		Unchanged: 0/0
  1811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1814 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1815 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1816 ;;Total ram usage:        1 bytes
  1817 ;; Hardware stack levels used:    1
  1818 ;; Hardware stack levels required when called:   14
  1819 ;; This function calls:
  1820 ;;		_lcdInst
  1821 ;;		_printf
  1822 ;; This function is called by:
  1823 ;;		_ultrasonic_main
  1824 ;; This function uses a non-reentrant model
  1825 ;;
  1826                           
  1827                           	psect	text3
  1828  001E36                     __ptext3:
  1829                           	opt callstack 0
  1830  001E36                     _print_echo:
  1831                           	opt callstack 15
  1832                           
  1833                           ;ultrasonic_main.c: 272:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.
      +                          0)));};
  1834                           
  1835                           ;incstack = 0
  1836  001E36  0E01               	movlw	1
  1837  001E38  EC51  F01A         	call	_lcdInst
  1838  001E3C  0E11               	movlw	17
  1839  001E3E  0100               	movlb	0	; () banked
  1840  001E40  6FE5               	movwf	??_print_echo& (0+255),b
  1841  001E42  0E3A               	movlw	58
  1842  001E44                     u5667:
  1843  001E44  2EE8               	decfsz	wreg,f,c
  1844  001E46  D7FE               	bra	u5667
  1845  001E48  2FE5               	decfsz	??_print_echo& (0+255),f,b
  1846  001E4A  D7FC               	bra	u5667
  1847  001E4C  F000               	nop	
  1848                           
  1849                           ;ultrasonic_main.c: 273:     if(a[0]>=2 && a[0]<=400){
  1850  001E4E  BE59               	btfsc	_a+1,7,c
  1851  001E50  D01D               	goto	l4990
  1852  001E52  5059               	movf	_a+1,w,c
  1853  001E54  E104               	bnz	u5000
  1854  001E56  0E02               	movlw	2
  1855  001E58  5C58               	subwf	_a,w,c
  1856  001E5A  A0D8               	btfss	status,0,c
  1857  001E5C  D017               	goto	l4990
  1858  001E5E                     u5000:
  1859  001E5E  BE59               	btfsc	_a+1,7,c
  1860  001E60  D006               	goto	u5010
  1861  001E62  0E91               	movlw	145
  1862  001E64  5C58               	subwf	_a,w,c
  1863  001E66  0E01               	movlw	1
  1864  001E68  5859               	subwfb	_a+1,w,c
  1865  001E6A  B0D8               	btfsc	status,0,c
  1866  001E6C  D00F               	goto	l4990
  1867  001E6E                     u5010:
  1868                           
  1869                           ;ultrasonic_main.c: 274:         printf("Dist1=%d,Avg=%d ",a[0],dist_final[0][5]);
  1870  001E6E  0E07               	movlw	low STR_10
  1871  001E70  0100               	movlb	0	; () banked
  1872  001E72  6FDB               	movwf	printf@fmt& (0+255),b
  1873  001E74  0E10               	movlw	high STR_10
  1874  001E76  6FDC               	movwf	(printf@fmt+1)& (0+255),b
  1875  001E78  C058  F0DD         	movff	_a,?_printf+2
  1876  001E7C  C059  F0DE         	movff	_a+1,?_printf+3
  1877  001E80  C10A  F0DF         	movff	_dist_final+10,?_printf+4
  1878  001E84  C10B  F0E0         	movff	_dist_final+11,?_printf+5
  1879  001E88  EC0A  F01A         	call	_printf	;wreg free
  1880  001E8C                     l4990:
  1881                           
  1882                           ;ultrasonic_main.c: 276:     if(!(a[0]>=2 && a[0]<=400)){
  1883  001E8C  BE59               	btfsc	_a+1,7,c
  1884  001E8E  D00E               	goto	u5030
  1885  001E90  5059               	movf	_a+1,w,c
  1886  001E92  E104               	bnz	u5020
  1887  001E94  0E02               	movlw	2
  1888  001E96  5C58               	subwf	_a,w,c
  1889  001E98  A0D8               	btfss	status,0,c
  1890  001E9A  D008               	goto	u5030
  1891  001E9C                     u5020:
  1892  001E9C  BE59               	btfsc	_a+1,7,c
  1893  001E9E  D00D               	goto	l4996
  1894  001EA0  0E91               	movlw	145
  1895  001EA2  5C58               	subwf	_a,w,c
  1896  001EA4  0E01               	movlw	1
  1897  001EA6  5859               	subwfb	_a+1,w,c
  1898  001EA8  A0D8               	btfss	status,0,c
  1899  001EAA  D007               	goto	l4996
  1900  001EAC                     u5030:
  1901                           
  1902                           ;ultrasonic_main.c: 277:         printf("Dist1 = X");
  1903  001EAC  0E96               	movlw	low STR_11
  1904  001EAE  0100               	movlb	0	; () banked
  1905  001EB0  6FDB               	movwf	printf@fmt& (0+255),b
  1906  001EB2  0E10               	movlw	high STR_11
  1907  001EB4  6FDC               	movwf	(printf@fmt+1)& (0+255),b
  1908  001EB6  EC0A  F01A         	call	_printf	;wreg free
  1909  001EBA                     l4996:
  1910                           
  1911                           ;ultrasonic_main.c: 279:     if(a[1]>=2 && a[1]<=400){
  1912  001EBA  BE5B               	btfsc	_a+3,7,c
  1913  001EBC  D020               	goto	l5004
  1914  001EBE  505B               	movf	_a+3,w,c
  1915  001EC0  E104               	bnz	u5040
  1916  001EC2  0E02               	movlw	2
  1917  001EC4  5C5A               	subwf	_a+2,w,c
  1918  001EC6  A0D8               	btfss	status,0,c
  1919  001EC8  D01A               	goto	l5004
  1920  001ECA                     u5040:
  1921  001ECA  BE5B               	btfsc	_a+3,7,c
  1922  001ECC  D006               	goto	u5050
  1923  001ECE  0E91               	movlw	145
  1924  001ED0  5C5A               	subwf	_a+2,w,c
  1925  001ED2  0E01               	movlw	1
  1926  001ED4  585B               	subwfb	_a+3,w,c
  1927  001ED6  B0D8               	btfsc	status,0,c
  1928  001ED8  D012               	goto	l5004
  1929  001EDA                     u5050:
  1930  001EDA  0EC0               	movlw	192
  1931  001EDC  EC51  F01A         	call	_lcdInst
  1932                           
  1933                           ;ultrasonic_main.c: 281:         printf("Dist2=%d,Avg=%d",a[1],dist_final[1][5]);
  1934  001EE0  0E39               	movlw	low STR_12
  1935  001EE2  0100               	movlb	0	; () banked
  1936  001EE4  6FDB               	movwf	printf@fmt& (0+255),b
  1937  001EE6  0E10               	movlw	high STR_12
  1938  001EE8  6FDC               	movwf	(printf@fmt+1)& (0+255),b
  1939  001EEA  C05A  F0DD         	movff	_a+2,?_printf+2
  1940  001EEE  C05B  F0DE         	movff	_a+3,?_printf+3
  1941  001EF2  C116  F0DF         	movff	_dist_final+22,?_printf+4
  1942  001EF6  C117  F0E0         	movff	_dist_final+23,?_printf+5
  1943  001EFA  EC0A  F01A         	call	_printf	;wreg free
  1944  001EFE                     l5004:
  1945                           
  1946                           ;ultrasonic_main.c: 283:     if(!(a[1]>=2 && a[1]<=400)){
  1947  001EFE  BE5B               	btfsc	_a+3,7,c
  1948  001F00  D00E               	goto	u5070
  1949  001F02  505B               	movf	_a+3,w,c
  1950  001F04  E104               	bnz	u5060
  1951  001F06  0E02               	movlw	2
  1952  001F08  5C5A               	subwf	_a+2,w,c
  1953  001F0A  A0D8               	btfss	status,0,c
  1954  001F0C  D008               	goto	u5070
  1955  001F0E                     u5060:
  1956  001F0E  BE5B               	btfsc	_a+3,7,c
  1957  001F10  D010               	goto	l5012
  1958  001F12  0E91               	movlw	145
  1959  001F14  5C5A               	subwf	_a+2,w,c
  1960  001F16  0E01               	movlw	1
  1961  001F18  585B               	subwfb	_a+3,w,c
  1962  001F1A  A0D8               	btfss	status,0,c
  1963  001F1C  D00A               	goto	l5012
  1964  001F1E                     u5070:
  1965  001F1E  0EC0               	movlw	192
  1966  001F20  EC51  F01A         	call	_lcdInst
  1967                           
  1968                           ;ultrasonic_main.c: 285:         printf("Dist2 = X");
  1969  001F24  0EA0               	movlw	low STR_13
  1970  001F26  0100               	movlb	0	; () banked
  1971  001F28  6FDB               	movwf	printf@fmt& (0+255),b
  1972  001F2A  0E10               	movlw	high STR_13
  1973  001F2C  6FDC               	movwf	(printf@fmt+1)& (0+255),b
  1974  001F2E  EC0A  F01A         	call	_printf	;wreg free
  1975  001F32                     l5012:
  1976                           
  1977                           ;ultrasonic_main.c: 287:     if(a[2]>=2 && a[2]<=400){
  1978  001F32  BE5D               	btfsc	_a+5,7,c
  1979  001F34  D020               	goto	l5020
  1980  001F36  505D               	movf	_a+5,w,c
  1981  001F38  E104               	bnz	u5080
  1982  001F3A  0E02               	movlw	2
  1983  001F3C  5C5C               	subwf	_a+4,w,c
  1984  001F3E  A0D8               	btfss	status,0,c
  1985  001F40  D01A               	goto	l5020
  1986  001F42                     u5080:
  1987  001F42  BE5D               	btfsc	_a+5,7,c
  1988  001F44  D006               	goto	u5090
  1989  001F46  0E91               	movlw	145
  1990  001F48  5C5C               	subwf	_a+4,w,c
  1991  001F4A  0E01               	movlw	1
  1992  001F4C  585D               	subwfb	_a+5,w,c
  1993  001F4E  B0D8               	btfsc	status,0,c
  1994  001F50  D012               	goto	l5020
  1995  001F52                     u5090:
  1996  001F52  0E90               	movlw	144
  1997  001F54  EC51  F01A         	call	_lcdInst
  1998                           
  1999                           ;ultrasonic_main.c: 289:         printf("Dist3=%d,Avg=%d",a[2],dist_final[2][5]);
  2000  001F58  0E49               	movlw	low STR_14
  2001  001F5A  0100               	movlb	0	; () banked
  2002  001F5C  6FDB               	movwf	printf@fmt& (0+255),b
  2003  001F5E  0E10               	movlw	high STR_14
  2004  001F60  6FDC               	movwf	(printf@fmt+1)& (0+255),b
  2005  001F62  C05C  F0DD         	movff	_a+4,?_printf+2
  2006  001F66  C05D  F0DE         	movff	_a+5,?_printf+3
  2007  001F6A  C122  F0DF         	movff	_dist_final+34,?_printf+4
  2008  001F6E  C123  F0E0         	movff	_dist_final+35,?_printf+5
  2009  001F72  EC0A  F01A         	call	_printf	;wreg free
  2010  001F76                     l5020:
  2011                           
  2012                           ;ultrasonic_main.c: 291:     if(!(a[2]>=2 && a[2]<=400)){
  2013  001F76  BE5D               	btfsc	_a+5,7,c
  2014  001F78  D00E               	goto	u5110
  2015  001F7A  505D               	movf	_a+5,w,c
  2016  001F7C  E104               	bnz	u5100
  2017  001F7E  0E02               	movlw	2
  2018  001F80  5C5C               	subwf	_a+4,w,c
  2019  001F82  A0D8               	btfss	status,0,c
  2020  001F84  D008               	goto	u5110
  2021  001F86                     u5100:
  2022  001F86  BE5D               	btfsc	_a+5,7,c
  2023  001F88  D010               	goto	l5028
  2024  001F8A  0E91               	movlw	145
  2025  001F8C  5C5C               	subwf	_a+4,w,c
  2026  001F8E  0E01               	movlw	1
  2027  001F90  585D               	subwfb	_a+5,w,c
  2028  001F92  A0D8               	btfss	status,0,c
  2029  001F94  D00A               	goto	l5028
  2030  001F96                     u5110:
  2031  001F96  0E90               	movlw	144
  2032  001F98  EC51  F01A         	call	_lcdInst
  2033                           
  2034                           ;ultrasonic_main.c: 293:         printf("Dist3 = X");
  2035  001F9C  0EAA               	movlw	low STR_15
  2036  001F9E  0100               	movlb	0	; () banked
  2037  001FA0  6FDB               	movwf	printf@fmt& (0+255),b
  2038  001FA2  0E10               	movlw	high STR_15
  2039  001FA4  6FDC               	movwf	(printf@fmt+1)& (0+255),b
  2040  001FA6  EC0A  F01A         	call	_printf	;wreg free
  2041  001FAA                     l5028:
  2042                           
  2043                           ;ultrasonic_main.c: 295:     if(a[3]>=2 && a[3]<=400){
  2044  001FAA  BE5F               	btfsc	_a+7,7,c
  2045  001FAC  D020               	goto	l5036
  2046  001FAE  505F               	movf	_a+7,w,c
  2047  001FB0  E104               	bnz	u5120
  2048  001FB2  0E02               	movlw	2
  2049  001FB4  5C5E               	subwf	_a+6,w,c
  2050  001FB6  A0D8               	btfss	status,0,c
  2051  001FB8  D01A               	goto	l5036
  2052  001FBA                     u5120:
  2053  001FBA  BE5F               	btfsc	_a+7,7,c
  2054  001FBC  D006               	goto	u5130
  2055  001FBE  0E91               	movlw	145
  2056  001FC0  5C5E               	subwf	_a+6,w,c
  2057  001FC2  0E01               	movlw	1
  2058  001FC4  585F               	subwfb	_a+7,w,c
  2059  001FC6  B0D8               	btfsc	status,0,c
  2060  001FC8  D012               	goto	l5036
  2061  001FCA                     u5130:
  2062  001FCA  0ED0               	movlw	208
  2063  001FCC  EC51  F01A         	call	_lcdInst
  2064                           
  2065                           ;ultrasonic_main.c: 297:         printf("Dist4=%d,Avg=%d ",a[3],dist_final[3][5]);
  2066  001FD0  0E18               	movlw	low STR_16
  2067  001FD2  0100               	movlb	0	; () banked
  2068  001FD4  6FDB               	movwf	printf@fmt& (0+255),b
  2069  001FD6  0E10               	movlw	high STR_16
  2070  001FD8  6FDC               	movwf	(printf@fmt+1)& (0+255),b
  2071  001FDA  C05E  F0DD         	movff	_a+6,?_printf+2
  2072  001FDE  C05F  F0DE         	movff	_a+7,?_printf+3
  2073  001FE2  C12E  F0DF         	movff	_dist_final+46,?_printf+4
  2074  001FE6  C12F  F0E0         	movff	_dist_final+47,?_printf+5
  2075  001FEA  EC0A  F01A         	call	_printf	;wreg free
  2076  001FEE                     l5036:
  2077                           
  2078                           ;ultrasonic_main.c: 300:     if(!(a[3]>=2 && a[3]<=400)){
  2079  001FEE  BE5F               	btfsc	_a+7,7,c
  2080  001FF0  D00E               	goto	u5150
  2081  001FF2  505F               	movf	_a+7,w,c
  2082  001FF4  E104               	bnz	u5140
  2083  001FF6  0E02               	movlw	2
  2084  001FF8  5C5E               	subwf	_a+6,w,c
  2085  001FFA  A0D8               	btfss	status,0,c
  2086  001FFC  D008               	goto	u5150
  2087  001FFE                     u5140:
  2088  001FFE  BE5F               	btfsc	_a+7,7,c
  2089  002000  0012               	return	
  2090  002002  0E91               	movlw	145
  2091  002004  5C5E               	subwf	_a+6,w,c
  2092  002006  0E01               	movlw	1
  2093  002008  585F               	subwfb	_a+7,w,c
  2094  00200A  A0D8               	btfss	status,0,c
  2095  00200C  0012               	return	
  2096  00200E                     u5150:
  2097  00200E  0ED0               	movlw	208
  2098  002010  EC51  F01A         	call	_lcdInst
  2099                           
  2100                           ;ultrasonic_main.c: 302:         printf("Dist4 = X");
  2101  002014  0EB4               	movlw	low STR_17
  2102  002016  0100               	movlb	0	; () banked
  2103  002018  6FDB               	movwf	printf@fmt& (0+255),b
  2104  00201A  0E10               	movlw	high STR_17
  2105  00201C  6FDC               	movwf	(printf@fmt+1)& (0+255),b
  2106  00201E  EC0A  F01A         	call	_printf	;wreg free
  2107  002022  0012               	return		;funcret
  2108  002024                     __end_of_print_echo:
  2109                           	opt callstack 0
  2110                           
  2111 ;; *************** function _min *****************
  2112 ;; Defined at:
  2113 ;;		line 339 in file "ultrasonic_main.c"
  2114 ;; Parameters:    Size  Location     Type
  2115 ;;  array           2    0[BANK0 ] PTR int 
  2116 ;;		 -> a(8), 
  2117 ;;  size            2    2[BANK0 ] int 
  2118 ;; Auto vars:     Size  Location     Type
  2119 ;;  i               2    9[BANK0 ] int 
  2120 ;;  minimum         2    7[BANK0 ] int 
  2121 ;; Return value:  Size  Location     Type
  2122 ;;                  2    0[BANK0 ] int 
  2123 ;; Registers used:
  2124 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2125 ;; Tracked objects:
  2126 ;;		On entry : 0/0
  2127 ;;		On exit  : 0/0
  2128 ;;		Unchanged: 0/0
  2129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2130 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2131 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2132 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2133 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2134 ;;Total ram usage:       11 bytes
  2135 ;; Hardware stack levels used:    1
  2136 ;; Hardware stack levels required when called:    3
  2137 ;; This function calls:
  2138 ;;		Nothing
  2139 ;; This function is called by:
  2140 ;;		_ultrasonic_main
  2141 ;; This function uses a non-reentrant model
  2142 ;;
  2143                           
  2144                           	psect	text4
  2145  002B96                     __ptext4:
  2146                           	opt callstack 0
  2147  002B96                     _min:
  2148                           	opt callstack 26
  2149                           
  2150                           ;ultrasonic_main.c: 340:     int minimum = array[0];
  2151                           
  2152                           ;incstack = 0
  2153  002B96  C080  FFD9         	movff	min@array,fsr2l
  2154  002B9A  C081  FFDA         	movff	min@array+1,fsr2h
  2155  002B9E  CFDE F087          	movff	postinc2,min@minimum
  2156  002BA2  CFDD F088          	movff	postdec2,min@minimum+1
  2157                           
  2158                           ;ultrasonic_main.c: 344:     for (int i = 0; i<size; i++){
  2159  002BA6  0E00               	movlw	0
  2160  002BA8  0100               	movlb	0	; () banked
  2161  002BAA  6F8A               	movwf	(min@i+1)& (0+255),b
  2162  002BAC  0E00               	movlw	0
  2163  002BAE  6F89               	movwf	min@i& (0+255),b
  2164  002BB0  D059               	goto	l5062
  2165  002BB2                     l5048:
  2166                           
  2167                           ; BSR set to: 0
  2168                           ;ultrasonic_main.c: 348:         if ((minimum==0)||(minimum>=array[i])&&(array[i]!=0)&&(
      +                          array[i]>=14)&&(array[i]<=23)){
  2169  002BB2  5187               	movf	min@minimum& (0+255),w,b
  2170  002BB4  1188               	iorwf	(min@minimum+1)& (0+255),w,b
  2171  002BB6  B4D8               	btfsc	status,2,c
  2172  002BB8  D046               	goto	u5200
  2173                           
  2174                           ; BSR set to: 0
  2175  002BBA  90D8               	bcf	status,0,c
  2176  002BBC  3589               	rlcf	min@i& (0+255),w,b
  2177  002BBE  6ED9               	movwf	fsr2l,c
  2178  002BC0  358A               	rlcf	(min@i+1)& (0+255),w,b
  2179  002BC2  6EDA               	movwf	fsr2h,c
  2180  002BC4  5180               	movf	min@array& (0+255),w,b
  2181  002BC6  26D9               	addwf	fsr2l,f,c
  2182  002BC8  5181               	movf	(min@array+1)& (0+255),w,b
  2183  002BCA  22DA               	addwfc	fsr2h,f,c
  2184  002BCC  50DE               	movf	postinc2,w,c
  2185  002BCE  5D87               	subwf	min@minimum& (0+255),w,b
  2186  002BD0  5188               	movf	(min@minimum+1)& (0+255),w,b
  2187  002BD2  0A80               	xorlw	128
  2188  002BD4  6F86               	movwf	(??_min+2)& (0+255),b
  2189  002BD6  50DE               	movf	postinc2,w,c
  2190  002BD8  0A80               	xorlw	128
  2191  002BDA  5986               	subwfb	(??_min+2)& (0+255),w,b
  2192  002BDC  A0D8               	btfss	status,0,c
  2193  002BDE  D040               	goto	l5060
  2194                           
  2195                           ; BSR set to: 0
  2196  002BE0  90D8               	bcf	status,0,c
  2197  002BE2  3589               	rlcf	min@i& (0+255),w,b
  2198  002BE4  6ED9               	movwf	fsr2l,c
  2199  002BE6  358A               	rlcf	(min@i+1)& (0+255),w,b
  2200  002BE8  6EDA               	movwf	fsr2h,c
  2201  002BEA  5180               	movf	min@array& (0+255),w,b
  2202  002BEC  26D9               	addwf	fsr2l,f,c
  2203  002BEE  5181               	movf	(min@array+1)& (0+255),w,b
  2204  002BF0  22DA               	addwfc	fsr2h,f,c
  2205  002BF2  50DE               	movf	postinc2,w,c
  2206  002BF4  10DE               	iorwf	postinc2,w,c
  2207  002BF6  B4D8               	btfsc	status,2,c
  2208  002BF8  D033               	goto	l5060
  2209                           
  2210                           ; BSR set to: 0
  2211  002BFA  90D8               	bcf	status,0,c
  2212  002BFC  3589               	rlcf	min@i& (0+255),w,b
  2213  002BFE  6ED9               	movwf	fsr2l,c
  2214  002C00  358A               	rlcf	(min@i+1)& (0+255),w,b
  2215  002C02  6EDA               	movwf	fsr2h,c
  2216  002C04  5180               	movf	min@array& (0+255),w,b
  2217  002C06  26D9               	addwf	fsr2l,f,c
  2218  002C08  5181               	movf	(min@array+1)& (0+255),w,b
  2219  002C0A  22DA               	addwfc	fsr2h,f,c
  2220  002C0C  0E01               	movlw	1
  2221  002C0E  BEDB               	btfsc	plusw2,7,c
  2222  002C10  D027               	goto	l5060
  2223  002C12  0E01               	movlw	1
  2224  002C14  50DB               	movf	plusw2,w,c
  2225  002C16  E104               	bnz	u5190
  2226  002C18  0E0E               	movlw	14
  2227  002C1A  5CDE               	subwf	postinc2,w,c
  2228  002C1C  A0D8               	btfss	status,0,c
  2229  002C1E  D020               	goto	l5060
  2230  002C20                     u5190:
  2231                           
  2232                           ; BSR set to: 0
  2233  002C20  90D8               	bcf	status,0,c
  2234  002C22  3589               	rlcf	min@i& (0+255),w,b
  2235  002C24  6ED9               	movwf	fsr2l,c
  2236  002C26  358A               	rlcf	(min@i+1)& (0+255),w,b
  2237  002C28  6EDA               	movwf	fsr2h,c
  2238  002C2A  5180               	movf	min@array& (0+255),w,b
  2239  002C2C  26D9               	addwf	fsr2l,f,c
  2240  002C2E  5181               	movf	(min@array+1)& (0+255),w,b
  2241  002C30  22DA               	addwfc	fsr2h,f,c
  2242  002C32  0E01               	movlw	1
  2243  002C34  BEDB               	btfsc	plusw2,7,c
  2244  002C36  D007               	goto	u5200
  2245  002C38  0E01               	movlw	1
  2246  002C3A  50DB               	movf	plusw2,w,c
  2247  002C3C  E111               	bnz	l5060
  2248  002C3E  0E18               	movlw	24
  2249  002C40  5CDE               	subwf	postinc2,w,c
  2250  002C42  B0D8               	btfsc	status,0,c
  2251  002C44  D00D               	goto	l5060
  2252  002C46                     u5200:
  2253                           
  2254                           ; BSR set to: 0
  2255                           ;ultrasonic_main.c: 352:             minimum = array[i];
  2256  002C46  90D8               	bcf	status,0,c
  2257  002C48  3589               	rlcf	min@i& (0+255),w,b
  2258  002C4A  6ED9               	movwf	fsr2l,c
  2259  002C4C  358A               	rlcf	(min@i+1)& (0+255),w,b
  2260  002C4E  6EDA               	movwf	fsr2h,c
  2261  002C50  5180               	movf	min@array& (0+255),w,b
  2262  002C52  26D9               	addwf	fsr2l,f,c
  2263  002C54  5181               	movf	(min@array+1)& (0+255),w,b
  2264  002C56  22DA               	addwfc	fsr2h,f,c
  2265  002C58  CFDE F087          	movff	postinc2,min@minimum
  2266  002C5C  CFDD F088          	movff	postdec2,min@minimum+1
  2267  002C60                     l5060:
  2268                           
  2269                           ; BSR set to: 0
  2270                           ;ultrasonic_main.c: 357:     }
  2271  002C60  4B89               	infsnz	min@i& (0+255),f,b
  2272  002C62  2B8A               	incf	(min@i+1)& (0+255),f,b
  2273  002C64                     l5062:
  2274                           
  2275                           ; BSR set to: 0
  2276  002C64  5182               	movf	min@size& (0+255),w,b
  2277  002C66  5D89               	subwf	min@i& (0+255),w,b
  2278  002C68  518A               	movf	(min@i+1)& (0+255),w,b
  2279  002C6A  0A80               	xorlw	128
  2280  002C6C  6F84               	movwf	??_min& (0+255),b
  2281  002C6E  5183               	movf	(min@size+1)& (0+255),w,b
  2282  002C70  0A80               	xorlw	128
  2283  002C72  5984               	subwfb	??_min& (0+255),w,b
  2284  002C74  A0D8               	btfss	status,0,c
  2285  002C76  D79D               	goto	l5048
  2286                           
  2287                           ; BSR set to: 0
  2288                           ;ultrasonic_main.c: 358:     return minimum;
  2289  002C78  C087  F080         	movff	min@minimum,?_min
  2290  002C7C  C088  F081         	movff	min@minimum+1,?_min+1
  2291                           
  2292                           ; BSR set to: 0
  2293  002C80  0012               	return		;funcret
  2294  002C82                     __end_of_min:
  2295                           	opt callstack 0
  2296                           
  2297 ;; *************** function _number_deploy *****************
  2298 ;; Defined at:
  2299 ;;		line 361 in file "ultrasonic_main.c"
  2300 ;; Parameters:    Size  Location     Type
  2301 ;;  avg_dist        2  101[BANK0 ] int 
  2302 ;;  poles_detect    2  103[BANK0 ] int 
  2303 ;; Auto vars:     Size  Location     Type
  2304 ;;  t_count         2  110[BANK0 ] int 
  2305 ;;  tires_detect    2  108[BANK0 ] int 
  2306 ;;  tires_t         2  106[BANK0 ] int 
  2307 ;; Return value:  Size  Location     Type
  2308 ;;                  2  101[BANK0 ] int 
  2309 ;; Registers used:
  2310 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2311 ;; Tracked objects:
  2312 ;;		On entry : 0/0
  2313 ;;		On exit  : 0/0
  2314 ;;		Unchanged: 0/0
  2315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2316 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2317 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2318 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2319 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2320 ;;Total ram usage:       11 bytes
  2321 ;; Hardware stack levels used:    1
  2322 ;; Hardware stack levels required when called:   14
  2323 ;; This function calls:
  2324 ;;		___awdiv
  2325 ;;		_lcdInst
  2326 ;;		_printf
  2327 ;; This function is called by:
  2328 ;;		_main
  2329 ;; This function uses a non-reentrant model
  2330 ;;
  2331                           
  2332                           	psect	text5
  2333  002024                     __ptext5:
  2334                           	opt callstack 0
  2335  002024                     _number_deploy:
  2336                           	opt callstack 16
  2337                           
  2338                           ;ultrasonic_main.c: 362:     int tires_t=0;
  2339                           
  2340                           ; BSR set to: 0
  2341                           ;incstack = 0
  2342  002024  0E00               	movlw	0
  2343  002026  0100               	movlb	0	; () banked
  2344  002028  6FEB               	movwf	(number_deploy@tires_t+1)& (0+255),b
  2345  00202A  0E00               	movlw	0
  2346  00202C  6FEA               	movwf	number_deploy@tires_t& (0+255),b
  2347                           
  2348                           ;ultrasonic_main.c: 363:     int tires_detected=0;
  2349  00202E  0E00               	movlw	0
  2350  002030  6FED               	movwf	(number_deploy@tires_detected+1)& (0+255),b
  2351  002032  0E00               	movlw	0
  2352  002034  6FEC               	movwf	number_deploy@tires_detected& (0+255),b
  2353                           
  2354                           ;ultrasonic_main.c: 364:     int t_count = 0;
  2355  002036  0E00               	movlw	0
  2356  002038  6FEF               	movwf	(number_deploy@t_count+1)& (0+255),b
  2357  00203A  0E00               	movlw	0
  2358  00203C  6FEE               	movwf	number_deploy@t_count& (0+255),b
  2359                           
  2360                           ;ultrasonic_main.c: 367:     while (t_count<3){
  2361  00203E  D0B6               	goto	l5336
  2362  002040                     l5284:
  2363                           
  2364                           ; BSR set to: 0
  2365                           ;ultrasonic_main.c: 368:   if (poles_detected != 0){
  2366  002040  51E7               	movf	number_deploy@poles_detected& (0+255),w,b
  2367  002042  11E8               	iorwf	(number_deploy@poles_detected+1)& (0+255),w,b
  2368  002044  B4D8               	btfsc	status,2,c
  2369  002046  D02E               	goto	l5294
  2370                           
  2371                           ; BSR set to: 0
  2372                           ;ultrasonic_main.c: 369:    if ((avg_dist/1000)<30){
  2373  002048  C0E5  F080         	movff	number_deploy@avg_dist,___awdiv@dividend
  2374  00204C  C0E6  F081         	movff	number_deploy@avg_dist+1,___awdiv@dividend+1
  2375  002050  0E03               	movlw	3
  2376  002052  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  2377  002054  0EE8               	movlw	232
  2378  002056  6F82               	movwf	___awdiv@divisor& (0+255),b
  2379  002058  ECAF  F017         	call	___awdiv	;wreg free
  2380  00205C  0100               	movlb	0	; () banked
  2381  00205E  BF81               	btfsc	(?___awdiv+1)& (0+255),7,b
  2382  002060  D006               	goto	u5340
  2383  002062  5181               	movf	(?___awdiv+1)& (0+255),w,b
  2384  002064  E108               	bnz	l5290
  2385  002066  0E1E               	movlw	30
  2386  002068  5D80               	subwf	?___awdiv& (0+255),w,b
  2387  00206A  B0D8               	btfsc	status,0,c
  2388  00206C  D004               	goto	l5290
  2389  00206E                     u5340:
  2390                           
  2391                           ; BSR set to: 0
  2392                           ;ultrasonic_main.c: 371:     tires_t = 1;
  2393  00206E  0E00               	movlw	0
  2394  002070  6FEB               	movwf	(number_deploy@tires_t+1)& (0+255),b
  2395  002072  0E01               	movlw	1
  2396  002074  6FEA               	movwf	number_deploy@tires_t& (0+255),b
  2397  002076                     l5290:
  2398                           
  2399                           ; BSR set to: 0
  2400                           ;ultrasonic_main.c: 373:    if ((avg_dist/1000)>30){
  2401  002076  C0E5  F080         	movff	number_deploy@avg_dist,___awdiv@dividend
  2402  00207A  C0E6  F081         	movff	number_deploy@avg_dist+1,___awdiv@dividend+1
  2403  00207E  0E03               	movlw	3
  2404  002080  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  2405  002082  0EE8               	movlw	232
  2406  002084  6F82               	movwf	___awdiv@divisor& (0+255),b
  2407  002086  ECAF  F017         	call	___awdiv	;wreg free
  2408  00208A  0100               	movlb	0	; () banked
  2409  00208C  BF81               	btfsc	(?___awdiv+1)& (0+255),7,b
  2410  00208E  D00A               	goto	l5294
  2411  002090  5181               	movf	(?___awdiv+1)& (0+255),w,b
  2412  002092  E104               	bnz	u5350
  2413  002094  0E1F               	movlw	31
  2414  002096  5D80               	subwf	?___awdiv& (0+255),w,b
  2415  002098  A0D8               	btfss	status,0,c
  2416  00209A  D004               	goto	l5294
  2417  00209C                     u5350:
  2418                           
  2419                           ; BSR set to: 0
  2420                           ;ultrasonic_main.c: 374:     tires_t = 2;
  2421  00209C  0E00               	movlw	0
  2422  00209E  6FEB               	movwf	(number_deploy@tires_t+1)& (0+255),b
  2423  0020A0  0E02               	movlw	2
  2424  0020A2  6FEA               	movwf	number_deploy@tires_t& (0+255),b
  2425  0020A4                     l5294:
  2426                           
  2427                           ; BSR set to: 0
  2428                           ;ultrasonic_main.c: 378:   if (poles_detected == 0){
  2429  0020A4  51E7               	movf	number_deploy@poles_detected& (0+255),w,b
  2430  0020A6  11E8               	iorwf	(number_deploy@poles_detected+1)& (0+255),w,b
  2431  0020A8  A4D8               	btfss	status,2,c
  2432  0020AA  D004               	goto	l5298
  2433                           
  2434                           ; BSR set to: 0
  2435                           ;ultrasonic_main.c: 379:    tires_t = 2;
  2436  0020AC  0E00               	movlw	0
  2437  0020AE  6FEB               	movwf	(number_deploy@tires_t+1)& (0+255),b
  2438  0020B0  0E02               	movlw	2
  2439  0020B2  6FEA               	movwf	number_deploy@tires_t& (0+255),b
  2440  0020B4                     l5298:
  2441                           
  2442                           ; BSR set to: 0
  2443                           ;ultrasonic_main.c: 382:   if ((a[0]>=2 && a[0] <= 15)){
  2444  0020B4  BE59               	btfsc	_a+1,7,c
  2445  0020B6  D026               	goto	l5310
  2446  0020B8  5059               	movf	_a+1,w,c
  2447  0020BA  E104               	bnz	u5370
  2448  0020BC  0E02               	movlw	2
  2449  0020BE  5C58               	subwf	_a,w,c
  2450  0020C0  A0D8               	btfss	status,0,c
  2451  0020C2  D020               	goto	l5310
  2452  0020C4                     u5370:
  2453                           
  2454                           ; BSR set to: 0
  2455  0020C4  BE59               	btfsc	_a+1,7,c
  2456  0020C6  D006               	goto	u5380
  2457  0020C8  5059               	movf	_a+1,w,c
  2458  0020CA  E11C               	bnz	l5310
  2459  0020CC  0E10               	movlw	16
  2460  0020CE  5C58               	subwf	_a,w,c
  2461  0020D0  B0D8               	btfsc	status,0,c
  2462  0020D2  D018               	goto	l5310
  2463  0020D4                     u5380:
  2464                           
  2465                           ; BSR set to: 0
  2466                           ;ultrasonic_main.c: 384:             if ((a[1]>=2 && a[1] <= 15)){
  2467  0020D4  BE5B               	btfsc	_a+3,7,c
  2468  0020D6  D012               	goto	l5308
  2469  0020D8  505B               	movf	_a+3,w,c
  2470  0020DA  E104               	bnz	u5390
  2471  0020DC  0E02               	movlw	2
  2472  0020DE  5C5A               	subwf	_a+2,w,c
  2473  0020E0  A0D8               	btfss	status,0,c
  2474  0020E2  D00C               	goto	l5308
  2475  0020E4                     u5390:
  2476                           
  2477                           ; BSR set to: 0
  2478  0020E4  BE5B               	btfsc	_a+3,7,c
  2479  0020E6  D006               	goto	u5400
  2480  0020E8  505B               	movf	_a+3,w,c
  2481  0020EA  E108               	bnz	l5308
  2482  0020EC  0E10               	movlw	16
  2483  0020EE  5C5A               	subwf	_a+2,w,c
  2484  0020F0  B0D8               	btfsc	status,0,c
  2485  0020F2  D004               	goto	l5308
  2486  0020F4                     u5400:
  2487                           
  2488                           ; BSR set to: 0
  2489                           ;ultrasonic_main.c: 386:                 tires_detected = 1;
  2490  0020F4  0E00               	movlw	0
  2491  0020F6  6FED               	movwf	(number_deploy@tires_detected+1)& (0+255),b
  2492  0020F8  0E01               	movlw	1
  2493  0020FA  D003               	goto	L2
  2494  0020FC                     l5308:
  2495                           
  2496                           ; BSR set to: 0
  2497                           ;ultrasonic_main.c: 389:                 tires_detected = 0;
  2498  0020FC  0E00               	movlw	0
  2499  0020FE  6FED               	movwf	(number_deploy@tires_detected+1)& (0+255),b
  2500  002100  0E00               	movlw	0
  2501  002102                     L2:
  2502  002102  6FEC               	movwf	number_deploy@tires_detected& (0+255),b
  2503  002104                     l5310:
  2504                           
  2505                           ; BSR set to: 0
  2506                           ;ultrasonic_main.c: 392:         if ((tires_detected==1)){
  2507  002104  05EC               	decf	number_deploy@tires_detected& (0+255),w,b
  2508  002106  11ED               	iorwf	(number_deploy@tires_detected+1)& (0+255),w,b
  2509  002108  B4D8               	btfsc	status,2,c
  2510                           
  2511                           ; BSR set to: 0
  2512                           ;ultrasonic_main.c: 393:             if((a[2]>=2 && a[2] <= 15)&&(a[3] >=2 && a[3]<= 15)
      +                          ){
  2513  00210A  BE5D               	btfsc	_a+5,7,c
  2514  00210C  D020               	goto	l5322
  2515  00210E  505D               	movf	_a+5,w,c
  2516  002110  E104               	bnz	u5420
  2517  002112  0E02               	movlw	2
  2518  002114  5C5C               	subwf	_a+4,w,c
  2519  002116  A0D8               	btfss	status,0,c
  2520  002118  D01A               	goto	l5322
  2521  00211A                     u5420:
  2522                           
  2523                           ; BSR set to: 0
  2524  00211A  BE5D               	btfsc	_a+5,7,c
  2525  00211C  D006               	goto	u5430
  2526  00211E  505D               	movf	_a+5,w,c
  2527  002120  E116               	bnz	l5322
  2528  002122  0E10               	movlw	16
  2529  002124  5C5C               	subwf	_a+4,w,c
  2530  002126  B0D8               	btfsc	status,0,c
  2531  002128  D012               	goto	l5322
  2532  00212A                     u5430:
  2533                           
  2534                           ; BSR set to: 0
  2535  00212A  BE5F               	btfsc	_a+7,7,c
  2536  00212C  D010               	goto	l5322
  2537  00212E  505F               	movf	_a+7,w,c
  2538  002130  E104               	bnz	u5440
  2539  002132  0E02               	movlw	2
  2540  002134  5C5E               	subwf	_a+6,w,c
  2541  002136  A0D8               	btfss	status,0,c
  2542  002138  D00A               	goto	l5322
  2543  00213A                     u5440:
  2544                           
  2545                           ; BSR set to: 0
  2546  00213A  BE5F               	btfsc	_a+7,7,c
  2547  00213C  D006               	goto	u5450
  2548  00213E  505F               	movf	_a+7,w,c
  2549  002140  E106               	bnz	l5322
  2550  002142  0E10               	movlw	16
  2551  002144  5C5E               	subwf	_a+6,w,c
  2552  002146  B0D8               	btfsc	status,0,c
  2553  002148  D002               	goto	l5322
  2554  00214A                     u5450:
  2555                           
  2556                           ; BSR set to: 0
  2557                           ;ultrasonic_main.c: 394:                 tires_detected++;
  2558  00214A  4BEC               	infsnz	number_deploy@tires_detected& (0+255),f,b
  2559  00214C  2BED               	incf	(number_deploy@tires_detected+1)& (0+255),f,b
  2560  00214E                     l5322:
  2561                           
  2562                           ; BSR set to: 0
  2563                           ;ultrasonic_main.c: 398:     t_count = tires_t - tires_detected;
  2564  00214E  51EC               	movf	number_deploy@tires_detected& (0+255),w,b
  2565  002150  5DEA               	subwf	number_deploy@tires_t& (0+255),w,b
  2566  002152  6FEE               	movwf	number_deploy@t_count& (0+255),b
  2567  002154  51ED               	movf	(number_deploy@tires_detected+1)& (0+255),w,b
  2568  002156  59EB               	subwfb	(number_deploy@tires_t+1)& (0+255),w,b
  2569  002158  6FEF               	movwf	(number_deploy@t_count+1)& (0+255),b
  2570                           
  2571                           ; BSR set to: 0
  2572                           ;ultrasonic_main.c: 401:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.
      +                          0)));};
  2573  00215A  0E01               	movlw	1
  2574  00215C  EC51  F01A         	call	_lcdInst
  2575  002160  0E11               	movlw	17
  2576  002162  0100               	movlb	0	; () banked
  2577  002164  6FE9               	movwf	??_number_deploy& (0+255),b
  2578  002166  0E3A               	movlw	58
  2579  002168                     u5677:
  2580  002168  2EE8               	decfsz	wreg,f,c
  2581  00216A  D7FE               	bra	u5677
  2582  00216C  2FE9               	decfsz	??_number_deploy& (0+255),f,b
  2583  00216E  D7FC               	bra	u5677
  2584  002170  F000               	nop	
  2585                           
  2586                           ;ultrasonic_main.c: 402:     printf("det,%d, tcnt %d",tires_detected,t_count);
  2587  002172  0E29               	movlw	low STR_18
  2588  002174  0100               	movlb	0	; () banked
  2589  002176  6FDB               	movwf	printf@fmt& (0+255),b
  2590  002178  0E10               	movlw	high STR_18
  2591  00217A  6FDC               	movwf	(printf@fmt+1)& (0+255),b
  2592  00217C  C0EC  F0DD         	movff	number_deploy@tires_detected,?_printf+2
  2593  002180  C0ED  F0DE         	movff	number_deploy@tires_detected+1,?_printf+3
  2594  002184  C0EE  F0DF         	movff	number_deploy@t_count,?_printf+4
  2595  002188  C0EF  F0E0         	movff	number_deploy@t_count+1,?_printf+5
  2596  00218C  EC0A  F01A         	call	_printf	;wreg free
  2597                           
  2598                           ;ultrasonic_main.c: 405:     if (t_count<=2){
  2599  002190  0100               	movlb	0	; () banked
  2600  002192  BFEF               	btfsc	(number_deploy@t_count+1)& (0+255),7,b
  2601  002194  D006               	goto	u5460
  2602  002196  51EF               	movf	(number_deploy@t_count+1)& (0+255),w,b
  2603  002198  E109               	bnz	l5336
  2604  00219A  0E03               	movlw	3
  2605  00219C  5DEE               	subwf	number_deploy@t_count& (0+255),w,b
  2606  00219E  B0D8               	btfsc	status,0,c
  2607  0021A0  D005               	goto	l5336
  2608  0021A2                     u5460:
  2609                           
  2610                           ; BSR set to: 0
  2611                           ;ultrasonic_main.c: 409:         return (int) t_count;
  2612  0021A2  C0EE  F0E5         	movff	number_deploy@t_count,?_number_deploy
  2613  0021A6  C0EF  F0E6         	movff	number_deploy@t_count+1,?_number_deploy+1
  2614  0021AA  0012               	return	
  2615  0021AC                     l5336:
  2616                           
  2617                           ; BSR set to: 0
  2618                           ;ultrasonic_main.c: 367:     while (t_count<3){
  2619  0021AC  BFEF               	btfsc	(number_deploy@t_count+1)& (0+255),7,b
  2620  0021AE  D748               	goto	l5284
  2621  0021B0  51EF               	movf	(number_deploy@t_count+1)& (0+255),w,b
  2622  0021B2  E105               	bnz	u5470
  2623  0021B4  0E03               	movlw	3
  2624  0021B6  5DEE               	subwf	number_deploy@t_count& (0+255),w,b
  2625  0021B8  B0D8               	btfsc	status,0,c
  2626  0021BA  0012               	return	
  2627  0021BC  D741               	goto	l5284
  2628  0021BE                     u5470:
  2629                           
  2630                           ; BSR set to: 0
  2631  0021BE  0012               	return		;funcret
  2632  0021C0                     __end_of_number_deploy:
  2633                           	opt callstack 0
  2634                           
  2635 ;; *************** function ___awdiv *****************
  2636 ;; Defined at:
  2637 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  2638 ;; Parameters:    Size  Location     Type
  2639 ;;  dividend        2    0[BANK0 ] int 
  2640 ;;  divisor         2    2[BANK0 ] int 
  2641 ;; Auto vars:     Size  Location     Type
  2642 ;;  quotient        2    6[BANK0 ] int 
  2643 ;;  sign            1    5[BANK0 ] unsigned char 
  2644 ;;  counter         1    4[BANK0 ] unsigned char 
  2645 ;; Return value:  Size  Location     Type
  2646 ;;                  2    0[BANK0 ] int 
  2647 ;; Registers used:
  2648 ;;		wreg, status,2, status,0
  2649 ;; Tracked objects:
  2650 ;;		On entry : 0/0
  2651 ;;		On exit  : 0/0
  2652 ;;		Unchanged: 0/0
  2653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2654 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2655 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2657 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2658 ;;Total ram usage:        8 bytes
  2659 ;; Hardware stack levels used:    1
  2660 ;; Hardware stack levels required when called:    3
  2661 ;; This function calls:
  2662 ;;		Nothing
  2663 ;; This function is called by:
  2664 ;;		_number_deploy
  2665 ;; This function uses a non-reentrant model
  2666 ;;
  2667                           
  2668                           	psect	text6
  2669  002F5E                     __ptext6:
  2670                           	opt callstack 0
  2671  002F5E                     ___awdiv:
  2672                           	opt callstack 26
  2673                           
  2674                           ; BSR set to: 0
  2675                           ;incstack = 0
  2676  002F5E  0E00               	movlw	0
  2677  002F60  0100               	movlb	0	; () banked
  2678  002F62  6F85               	movwf	___awdiv@sign& (0+255),b
  2679                           
  2680                           ; BSR set to: 0
  2681  002F64  AF83               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  2682  002F66  D006               	goto	l5072
  2683                           
  2684                           ; BSR set to: 0
  2685  002F68  6D82               	negf	___awdiv@divisor& (0+255),b
  2686  002F6A  1F83               	comf	(___awdiv@divisor+1)& (0+255),f,b
  2687  002F6C  B0D8               	btfsc	status,0,c
  2688  002F6E  2B83               	incf	(___awdiv@divisor+1)& (0+255),f,b
  2689                           
  2690                           ; BSR set to: 0
  2691  002F70  0E01               	movlw	1
  2692  002F72  6F85               	movwf	___awdiv@sign& (0+255),b
  2693  002F74                     l5072:
  2694                           
  2695                           ; BSR set to: 0
  2696  002F74  AF81               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  2697  002F76  D006               	goto	l5078
  2698                           
  2699                           ; BSR set to: 0
  2700  002F78  6D80               	negf	___awdiv@dividend& (0+255),b
  2701  002F7A  1F81               	comf	(___awdiv@dividend+1)& (0+255),f,b
  2702  002F7C  B0D8               	btfsc	status,0,c
  2703  002F7E  2B81               	incf	(___awdiv@dividend+1)& (0+255),f,b
  2704                           
  2705                           ; BSR set to: 0
  2706  002F80  0E01               	movlw	1
  2707  002F82  1B85               	xorwf	___awdiv@sign& (0+255),f,b
  2708  002F84                     l5078:
  2709                           
  2710                           ; BSR set to: 0
  2711  002F84  0E00               	movlw	0
  2712  002F86  6F87               	movwf	(___awdiv@quotient+1)& (0+255),b
  2713  002F88  0E00               	movlw	0
  2714  002F8A  6F86               	movwf	___awdiv@quotient& (0+255),b
  2715                           
  2716                           ; BSR set to: 0
  2717  002F8C  5182               	movf	___awdiv@divisor& (0+255),w,b
  2718  002F8E  1183               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  2719  002F90  B4D8               	btfsc	status,2,c
  2720  002F92  D01C               	goto	l5100
  2721                           
  2722                           ; BSR set to: 0
  2723  002F94  0E01               	movlw	1
  2724  002F96  6F84               	movwf	___awdiv@counter& (0+255),b
  2725  002F98  D004               	goto	l5086
  2726  002F9A                     l5084:
  2727                           
  2728                           ; BSR set to: 0
  2729  002F9A  90D8               	bcf	status,0,c
  2730  002F9C  3782               	rlcf	___awdiv@divisor& (0+255),f,b
  2731  002F9E  3783               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  2732  002FA0  2B84               	incf	___awdiv@counter& (0+255),f,b
  2733  002FA2                     l5086:
  2734                           
  2735                           ; BSR set to: 0
  2736  002FA2  AF83               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  2737  002FA4  D7FA               	goto	l5084
  2738  002FA6                     u5250:
  2739                           
  2740                           ; BSR set to: 0
  2741  002FA6  90D8               	bcf	status,0,c
  2742  002FA8  3786               	rlcf	___awdiv@quotient& (0+255),f,b
  2743  002FAA  3787               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  2744                           
  2745                           ; BSR set to: 0
  2746  002FAC  5182               	movf	___awdiv@divisor& (0+255),w,b
  2747  002FAE  5D80               	subwf	___awdiv@dividend& (0+255),w,b
  2748  002FB0  5183               	movf	(___awdiv@divisor+1)& (0+255),w,b
  2749  002FB2  5981               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  2750  002FB4  A0D8               	btfss	status,0,c
  2751  002FB6  D005               	goto	l5096
  2752                           
  2753                           ; BSR set to: 0
  2754  002FB8  5182               	movf	___awdiv@divisor& (0+255),w,b
  2755  002FBA  5F80               	subwf	___awdiv@dividend& (0+255),f,b
  2756  002FBC  5183               	movf	(___awdiv@divisor+1)& (0+255),w,b
  2757  002FBE  5B81               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  2758                           
  2759                           ; BSR set to: 0
  2760  002FC0  8186               	bsf	___awdiv@quotient& (0+255),0,b
  2761  002FC2                     l5096:
  2762                           
  2763                           ; BSR set to: 0
  2764  002FC2  90D8               	bcf	status,0,c
  2765  002FC4  3383               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  2766  002FC6  3382               	rrcf	___awdiv@divisor& (0+255),f,b
  2767                           
  2768                           ; BSR set to: 0
  2769  002FC8  2F84               	decfsz	___awdiv@counter& (0+255),f,b
  2770  002FCA  D7ED               	goto	u5250
  2771  002FCC                     l5100:
  2772                           
  2773                           ; BSR set to: 0
  2774  002FCC  5185               	movf	___awdiv@sign& (0+255),w,b
  2775  002FCE  B4D8               	btfsc	status,2,c
  2776  002FD0  D004               	goto	l5104
  2777                           
  2778                           ; BSR set to: 0
  2779  002FD2  6D86               	negf	___awdiv@quotient& (0+255),b
  2780  002FD4  1F87               	comf	(___awdiv@quotient+1)& (0+255),f,b
  2781  002FD6  B0D8               	btfsc	status,0,c
  2782  002FD8  2B87               	incf	(___awdiv@quotient+1)& (0+255),f,b
  2783  002FDA                     l5104:
  2784                           
  2785                           ; BSR set to: 0
  2786  002FDA  C086  F080         	movff	___awdiv@quotient,?___awdiv
  2787  002FDE  C087  F081         	movff	___awdiv@quotient+1,?___awdiv+1
  2788                           
  2789                           ; BSR set to: 0
  2790  002FE2  0012               	return		;funcret
  2791  002FE4                     __end_of___awdiv:
  2792                           	opt callstack 0
  2793                           
  2794 ;; *************** function _actuators_main *****************
  2795 ;; Defined at:
  2796 ;;		line 64 in file "actuators_main.c"
  2797 ;; Parameters:    Size  Location     Type
  2798 ;;  stack           2  119[BANK0 ] int 
  2799 ;;  steps2_adj      2  121[BANK0 ] int 
  2800 ;; Auto vars:     Size  Location     Type
  2801 ;;  act_cnt         2    0[BANK1 ] int 
  2802 ;; Return value:  Size  Location     Type
  2803 ;;                  1    wreg      void 
  2804 ;; Registers used:
  2805 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2806 ;; Tracked objects:
  2807 ;;		On entry : 0/0
  2808 ;;		On exit  : 0/0
  2809 ;;		Unchanged: 0/0
  2810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2811 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2812 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2813 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2814 ;;      Totals:         0       6       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2815 ;;Total ram usage:        8 bytes
  2816 ;; Hardware stack levels used:    1
  2817 ;; Hardware stack levels required when called:   16
  2818 ;; This function calls:
  2819 ;;		_initLCD
  2820 ;;		_lcdInst
  2821 ;;		_printf
  2822 ;;		_servo
  2823 ;;		_stepper
  2824 ;;		_stepper2
  2825 ;;		_stepper2_back
  2826 ;;		_system_init
  2827 ;; This function is called by:
  2828 ;;		_main
  2829 ;; This function uses a non-reentrant model
  2830 ;;
  2831                           
  2832                           	psect	text7
  2833  00234A                     __ptext7:
  2834                           	opt callstack 0
  2835  00234A                     _actuators_main:
  2836                           	opt callstack 14
  2837                           
  2838                           ;actuators_main.c: 65:     int act_cnt = 0;
  2839                           
  2840                           ; BSR set to: 0
  2841                           ;incstack = 0
  2842  00234A  0E00               	movlw	0
  2843  00234C  0101               	movlb	1	; () banked
  2844  00234E  6F51               	movwf	(actuators_main@act_cnt+1)& (0+255),b
  2845  002350  0E00               	movlw	0
  2846  002352  6F50               	movwf	actuators_main@act_cnt& (0+255),b
  2847                           
  2848                           ; BSR set to: 1
  2849                           ;actuators_main.c: 66:     system_init();
  2850  002354  EC95  F019         	call	_system_init	;wreg free
  2851                           
  2852                           ;actuators_main.c: 67:     initLCD();
  2853  002358  EC71  F018         	call	_initLCD	;wreg free
  2854                           
  2855                           ;actuators_main.c: 68:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)
      +                          ));};
  2856  00235C  0E01               	movlw	1
  2857  00235E  EC51  F01A         	call	_lcdInst
  2858  002362  0E11               	movlw	17
  2859  002364  0100               	movlb	0	; () banked
  2860  002366  6FFB               	movwf	??_actuators_main& (0+255),b
  2861  002368  0E3A               	movlw	58
  2862  00236A                     u5687:
  2863  00236A  2EE8               	decfsz	wreg,f,c
  2864  00236C  D7FE               	bra	u5687
  2865  00236E  2FFB               	decfsz	??_actuators_main& (0+255),f,b
  2866  002370  D7FC               	bra	u5687
  2867  002372  F000               	nop	
  2868                           
  2869                           ;actuators_main.c: 69:     printf("cnt is %d",act_cnt);
  2870  002374  0EC8               	movlw	low STR_1
  2871  002376  0100               	movlb	0	; () banked
  2872  002378  6FDB               	movwf	printf@fmt& (0+255),b
  2873  00237A  0E10               	movlw	high STR_1
  2874  00237C  6FDC               	movwf	(printf@fmt+1)& (0+255),b
  2875  00237E  0E00               	movlw	0
  2876  002380  6FDE               	movwf	(?_printf+3)& (0+255),b
  2877  002382  0E00               	movlw	0
  2878  002384  6FDD               	movwf	(?_printf+2)& (0+255),b
  2879  002386  EC0A  F01A         	call	_printf	;wreg free
  2880                           
  2881                           ;actuators_main.c: 70:     _delay((unsigned long)((200)*(10000000/4000.0)));
  2882  00238A  0E03               	movlw	3
  2883  00238C  0100               	movlb	0	; () banked
  2884  00238E  6FFC               	movwf	(??_actuators_main+1)& (0+255),b
  2885  002390  0E8A               	movlw	138
  2886  002392  6FFB               	movwf	??_actuators_main& (0+255),b
  2887  002394  0E55               	movlw	85
  2888  002396                     u5697:
  2889  002396  2EE8               	decfsz	wreg,f,c
  2890  002398  D7FE               	bra	u5697
  2891  00239A  2FFB               	decfsz	??_actuators_main& (0+255),f,b
  2892  00239C  D7FC               	bra	u5697
  2893  00239E  2FFC               	decfsz	(??_actuators_main+1)& (0+255),f,b
  2894  0023A0  D7FA               	bra	u5697
  2895  0023A2  D000               	nop2	
  2896  0023A4                     l5122:
  2897                           
  2898                           ;actuators_main.c: 72:     if (act_cnt==0){
  2899  0023A4  0101               	movlb	1	; () banked
  2900  0023A6  5150               	movf	actuators_main@act_cnt& (0+255),w,b
  2901  0023A8  1151               	iorwf	(actuators_main@act_cnt+1)& (0+255),w,b
  2902  0023AA  A4D8               	btfss	status,2,c
  2903  0023AC  D071               	goto	l5200
  2904                           
  2905                           ; BSR set to: 1
  2906                           ;actuators_main.c: 76:         stepper(stack);
  2907  0023AE  C0F7  F0E9         	movff	actuators_main@stack,stepper@stack
  2908  0023B2  C0F8  F0EA         	movff	actuators_main@stack+1,stepper@stack+1
  2909  0023B6  EC34  F018         	call	_stepper	;wreg free
  2910                           
  2911                           ;actuators_main.c: 77:         stepper2(0, steps2_adj);
  2912  0023BA  C0F9  F0E9         	movff	actuators_main@steps2_adj,stepper2@steps2_adj
  2913  0023BE  C0FA  F0EA         	movff	actuators_main@steps2_adj+1,stepper2@steps2_adj+1
  2914  0023C2  0E00               	movlw	0
  2915  0023C4  EC41  F016         	call	_stepper2
  2916                           
  2917                           ;actuators_main.c: 78:         stepper2_back(1, steps2_adj);
  2918  0023C8  C0F9  F0E9         	movff	actuators_main@steps2_adj,stepper2_back@steps2_adj
  2919  0023CC  C0FA  F0EA         	movff	actuators_main@steps2_adj+1,stepper2_back@steps2_adj+1
  2920  0023D0  0E01               	movlw	1
  2921  0023D2  EC62  F017         	call	_stepper2_back
  2922                           
  2923                           ;actuators_main.c: 79:         LATA = 0b00000000;
  2924  0023D6  0E00               	movlw	0
  2925  0023D8  6E89               	movwf	3977,c	;volatile
  2926                           
  2927                           ;actuators_main.c: 80:         LATCbits.LATC0 = 0;
  2928  0023DA  908B               	bcf	3979,0,c	;volatile
  2929                           
  2930                           ;actuators_main.c: 81:         LATEbits.LATE0 = 0;
  2931  0023DC  908D               	bcf	3981,0,c	;volatile
  2932                           
  2933                           ;actuators_main.c: 82:         LATEbits.LATE1 = 0;
  2934  0023DE  928D               	bcf	3981,1,c	;volatile
  2935                           
  2936                           ;actuators_main.c: 83:         LATEbits.LATE2 = 0;
  2937  0023E0  948D               	bcf	3981,2,c	;volatile
  2938                           
  2939                           ;actuators_main.c: 84:         LATCbits.LATC5 = 0;
  2940  0023E2  9A8B               	bcf	3979,5,c	;volatile
  2941                           
  2942                           ;actuators_main.c: 85:         LATCbits.LATC6 = 0;
  2943  0023E4  9C8B               	bcf	3979,6,c	;volatile
  2944                           
  2945                           ;actuators_main.c: 86:         LATCbits.LATC7 = 0;
  2946  0023E6  9E8B               	bcf	3979,7,c	;volatile
  2947                           
  2948                           ;actuators_main.c: 87:         LATAbits.LATA5 = 0;
  2949  0023E8  9A89               	bcf	3977,5,c	;volatile
  2950                           
  2951                           ;actuators_main.c: 89:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/400
      +                          0.0)));};
  2952  0023EA  0E01               	movlw	1
  2953  0023EC  EC51  F01A         	call	_lcdInst
  2954  0023F0  0E11               	movlw	17
  2955  0023F2  0100               	movlb	0	; () banked
  2956  0023F4  6FFB               	movwf	??_actuators_main& (0+255),b
  2957  0023F6  0E3A               	movlw	58
  2958  0023F8                     u5707:
  2959  0023F8  2EE8               	decfsz	wreg,f,c
  2960  0023FA  D7FE               	bra	u5707
  2961  0023FC  2FFB               	decfsz	??_actuators_main& (0+255),f,b
  2962  0023FE  D7FC               	bra	u5707
  2963  002400  F000               	nop	
  2964                           
  2965                           ;actuators_main.c: 90:         printf("Stepper done");
  2966  002402  0E67               	movlw	low STR_2
  2967  002404  0100               	movlb	0	; () banked
  2968  002406  6FDB               	movwf	printf@fmt& (0+255),b
  2969  002408  0E10               	movlw	high STR_2
  2970  00240A  6FDC               	movwf	(printf@fmt+1)& (0+255),b
  2971  00240C  EC0A  F01A         	call	_printf	;wreg free
  2972                           
  2973                           ;actuators_main.c: 92:         servo();
  2974  002410  ECF4  F019         	call	_servo	;wreg free
  2975                           
  2976                           ;actuators_main.c: 93:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/400
      +                          0.0)));};
  2977  002414  0E01               	movlw	1
  2978  002416  EC51  F01A         	call	_lcdInst
  2979  00241A  0E11               	movlw	17
  2980  00241C  0100               	movlb	0	; () banked
  2981  00241E  6FFB               	movwf	??_actuators_main& (0+255),b
  2982  002420  0E3A               	movlw	58
  2983  002422                     u5717:
  2984  002422  2EE8               	decfsz	wreg,f,c
  2985  002424  D7FE               	bra	u5717
  2986  002426  2FFB               	decfsz	??_actuators_main& (0+255),f,b
  2987  002428  D7FC               	bra	u5717
  2988  00242A  F000               	nop	
  2989                           
  2990                           ;actuators_main.c: 94:         printf("Servo done");
  2991  00242C  0E8B               	movlw	low STR_3
  2992  00242E  0100               	movlb	0	; () banked
  2993  002430  6FDB               	movwf	printf@fmt& (0+255),b
  2994  002432  0E10               	movlw	high STR_3
  2995  002434  6FDC               	movwf	(printf@fmt+1)& (0+255),b
  2996  002436  EC0A  F01A         	call	_printf	;wreg free
  2997                           
  2998                           ;actuators_main.c: 95:                 LATA = 0b00000000;
  2999  00243A  0E00               	movlw	0
  3000  00243C  6E89               	movwf	3977,c	;volatile
  3001                           
  3002                           ;actuators_main.c: 96:         LATCbits.LATC0 = 0;
  3003  00243E  908B               	bcf	3979,0,c	;volatile
  3004                           
  3005                           ;actuators_main.c: 97:         LATEbits.LATE0 = 0;
  3006  002440  908D               	bcf	3981,0,c	;volatile
  3007                           
  3008                           ;actuators_main.c: 98:         LATEbits.LATE1 = 0;
  3009  002442  928D               	bcf	3981,1,c	;volatile
  3010                           
  3011                           ;actuators_main.c: 99:         LATEbits.LATE2 = 0;
  3012  002444  948D               	bcf	3981,2,c	;volatile
  3013                           
  3014                           ;actuators_main.c: 100:         LATCbits.LATC5 = 0;
  3015  002446  9A8B               	bcf	3979,5,c	;volatile
  3016                           
  3017                           ;actuators_main.c: 101:         LATCbits.LATC6 = 0;
  3018  002448  9C8B               	bcf	3979,6,c	;volatile
  3019                           
  3020                           ;actuators_main.c: 102:         LATCbits.LATC7 = 0;
  3021  00244A  9E8B               	bcf	3979,7,c	;volatile
  3022                           
  3023                           ;actuators_main.c: 103:         LATAbits.LATA5 = 0;
  3024  00244C  9A89               	bcf	3977,5,c	;volatile
  3025                           
  3026                           ;actuators_main.c: 106:         _delay((unsigned long)((200)*(10000000/4000.0)));
  3027  00244E  0E03               	movlw	3
  3028  002450  0100               	movlb	0	; () banked
  3029  002452  6FFC               	movwf	(??_actuators_main+1)& (0+255),b
  3030  002454  0E8A               	movlw	138
  3031  002456  6FFB               	movwf	??_actuators_main& (0+255),b
  3032  002458  0E55               	movlw	85
  3033  00245A                     u5727:
  3034  00245A  2EE8               	decfsz	wreg,f,c
  3035  00245C  D7FE               	bra	u5727
  3036  00245E  2FFB               	decfsz	??_actuators_main& (0+255),f,b
  3037  002460  D7FC               	bra	u5727
  3038  002462  2FFC               	decfsz	(??_actuators_main+1)& (0+255),f,b
  3039  002464  D7FA               	bra	u5727
  3040  002466  D000               	nop2	
  3041                           
  3042                           ;actuators_main.c: 108:         stepper2(1, steps2_adj);
  3043  002468  C0F9  F0E9         	movff	actuators_main@steps2_adj,stepper2@steps2_adj
  3044  00246C  C0FA  F0EA         	movff	actuators_main@steps2_adj+1,stepper2@steps2_adj+1
  3045  002470  0E01               	movlw	1
  3046  002472  EC41  F016         	call	_stepper2
  3047                           
  3048                           ;actuators_main.c: 109:                         LATA = 0b00000000;
  3049  002476  0E00               	movlw	0
  3050  002478  6E89               	movwf	3977,c	;volatile
  3051                           
  3052                           ;actuators_main.c: 110:         LATCbits.LATC0 = 0;
  3053  00247A  908B               	bcf	3979,0,c	;volatile
  3054                           
  3055                           ;actuators_main.c: 111:         LATEbits.LATE0 = 0;
  3056  00247C  908D               	bcf	3981,0,c	;volatile
  3057                           
  3058                           ;actuators_main.c: 112:         LATEbits.LATE1 = 0;
  3059  00247E  928D               	bcf	3981,1,c	;volatile
  3060                           
  3061                           ;actuators_main.c: 113:         LATEbits.LATE2 = 0;
  3062  002480  948D               	bcf	3981,2,c	;volatile
  3063                           
  3064                           ;actuators_main.c: 114:         LATCbits.LATC5 = 0;
  3065  002482  9A8B               	bcf	3979,5,c	;volatile
  3066                           
  3067                           ;actuators_main.c: 115:         LATCbits.LATC6 = 0;
  3068  002484  9C8B               	bcf	3979,6,c	;volatile
  3069                           
  3070                           ;actuators_main.c: 116:         LATCbits.LATC7 = 0;
  3071  002486  9E8B               	bcf	3979,7,c	;volatile
  3072                           
  3073                           ;actuators_main.c: 117:         LATAbits.LATA5 = 0;
  3074  002488  9A89               	bcf	3977,5,c	;volatile
  3075                           
  3076                           ;actuators_main.c: 118:         act_cnt++;
  3077  00248A  0101               	movlb	1	; () banked
  3078  00248C  4B50               	infsnz	actuators_main@act_cnt& (0+255),f,b
  3079  00248E  2B51               	incf	(actuators_main@act_cnt+1)& (0+255),f,b
  3080  002490                     l5200:
  3081                           
  3082                           ; BSR set to: 1
  3083                           ;actuators_main.c: 121:     if(act_cnt){
  3084  002490  5150               	movf	actuators_main@act_cnt& (0+255),w,b
  3085  002492  1151               	iorwf	(actuators_main@act_cnt+1)& (0+255),w,b
  3086  002494  A4D8               	btfss	status,2,c
  3087  002496  0012               	return	
  3088  002498  D785               	goto	l5122
  3089  00249A                     __end_of_actuators_main:
  3090                           	opt callstack 0
  3091                           
  3092 ;; *************** function _system_init *****************
  3093 ;; Defined at:
  3094 ;;		line 131 in file "actuators_main.c"
  3095 ;; Parameters:    Size  Location     Type
  3096 ;;		None
  3097 ;; Auto vars:     Size  Location     Type
  3098 ;;		None
  3099 ;; Return value:  Size  Location     Type
  3100 ;;                  1    wreg      void 
  3101 ;; Registers used:
  3102 ;;		wreg, status,2
  3103 ;; Tracked objects:
  3104 ;;		On entry : 0/0
  3105 ;;		On exit  : 0/0
  3106 ;;		Unchanged: 0/0
  3107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3112 ;;Total ram usage:        0 bytes
  3113 ;; Hardware stack levels used:    1
  3114 ;; Hardware stack levels required when called:    3
  3115 ;; This function calls:
  3116 ;;		Nothing
  3117 ;; This function is called by:
  3118 ;;		_actuators_main
  3119 ;; This function uses a non-reentrant model
  3120 ;;
  3121                           
  3122                           	psect	text8
  3123  00332A                     __ptext8:
  3124                           	opt callstack 0
  3125  00332A                     _system_init:
  3126                           	opt callstack 26
  3127                           
  3128                           ;actuators_main.c: 132:     TRISB = 0x00;
  3129                           
  3130                           ; BSR set to: 1
  3131                           ;incstack = 0
  3132  00332A  0E00               	movlw	0
  3133  00332C  6E93               	movwf	3987,c	;volatile
  3134                           
  3135                           ;actuators_main.c: 134:     LATB = 0x0F;
  3136  00332E  0E0F               	movlw	15
  3137  003330  6E8A               	movwf	3978,c	;volatile
  3138                           
  3139                           ;actuators_main.c: 135:     TRISA = 0x00;
  3140  003332  0E00               	movlw	0
  3141  003334  6E92               	movwf	3986,c	;volatile
  3142                           
  3143                           ;actuators_main.c: 136:     LATA = 0x0F;
  3144  003336  0E0F               	movlw	15
  3145  003338  6E89               	movwf	3977,c	;volatile
  3146                           
  3147                           ;actuators_main.c: 138:     TRISCbits.TRISC1 = 0;
  3148  00333A  9294               	bcf	3988,1,c	;volatile
  3149                           
  3150                           ;actuators_main.c: 141:     TRISCbits.TRISC2 = 0;
  3151  00333C  9494               	bcf	3988,2,c	;volatile
  3152                           
  3153                           ;actuators_main.c: 144:     LATD = 0x00;
  3154  00333E  0E00               	movlw	0
  3155  003340  6E8C               	movwf	3980,c	;volatile
  3156                           
  3157                           ;actuators_main.c: 145:     TRISD = 0x00;
  3158  003342  0E00               	movlw	0
  3159  003344  6E95               	movwf	3989,c	;volatile
  3160                           
  3161                           ;actuators_main.c: 147:     ADCON1 = 0b00001111;
  3162  003346  0E0F               	movlw	15
  3163  003348  6EC1               	movwf	4033,c	;volatile
  3164                           
  3165                           ;actuators_main.c: 149:     TRISC = 0x00;
  3166  00334A  0E00               	movlw	0
  3167  00334C  6E94               	movwf	3988,c	;volatile
  3168                           
  3169                           ;actuators_main.c: 150:     LATC = 0x00;
  3170  00334E  0E00               	movlw	0
  3171  003350  6E8B               	movwf	3979,c	;volatile
  3172                           
  3173                           ;actuators_main.c: 151:     TRISE = 0x00;
  3174  003352  0E00               	movlw	0
  3175  003354  6E96               	movwf	3990,c	;volatile
  3176                           
  3177                           ;actuators_main.c: 152:     LATE = 0x00;
  3178  003356  0E00               	movlw	0
  3179  003358  6E8D               	movwf	3981,c	;volatile
  3180  00335A  0012               	return		;funcret
  3181  00335C                     __end_of_system_init:
  3182                           	opt callstack 0
  3183                           
  3184 ;; *************** function _stepper2_back *****************
  3185 ;; Defined at:
  3186 ;;		line 333 in file "actuators_main.c"
  3187 ;; Parameters:    Size  Location     Type
  3188 ;;  direction       1    wreg     unsigned char 
  3189 ;;  steps2_adj      2  105[BANK0 ] int 
  3190 ;; Auto vars:     Size  Location     Type
  3191 ;;  direction       1  108[BANK0 ] unsigned char 
  3192 ;;  i               2  111[BANK0 ] int 
  3193 ;;  count_steppe    2  109[BANK0 ] int 
  3194 ;; Return value:  Size  Location     Type
  3195 ;;                  1    wreg      void 
  3196 ;; Registers used:
  3197 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3198 ;; Tracked objects:
  3199 ;;		On entry : 0/0
  3200 ;;		On exit  : 0/0
  3201 ;;		Unchanged: 0/0
  3202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3203 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3204 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3205 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3206 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3207 ;;Total ram usage:        8 bytes
  3208 ;; Hardware stack levels used:    1
  3209 ;; Hardware stack levels required when called:   15
  3210 ;; This function calls:
  3211 ;;		_full_drive
  3212 ;;		_lcdInst
  3213 ;;		_printf
  3214 ;; This function is called by:
  3215 ;;		_actuators_main
  3216 ;; This function uses a non-reentrant model
  3217 ;;
  3218                           
  3219                           	psect	text9
  3220  002EC4                     __ptext9:
  3221                           	opt callstack 0
  3222  002EC4                     _stepper2_back:
  3223                           	opt callstack 14
  3224                           
  3225                           ;incstack = 0
  3226                           ;stepper2_back@direction stored from wreg
  3227  002EC4  0100               	movlb	0	; () banked
  3228  002EC6  6FEC               	movwf	stepper2_back@direction& (0+255),b
  3229                           
  3230                           ;actuators_main.c: 351:     int count_stepper = 0;
  3231  002EC8  0E00               	movlw	0
  3232  002ECA  0100               	movlb	0	; () banked
  3233  002ECC  6FEE               	movwf	(stepper2_back@count_stepper+1)& (0+255),b
  3234  002ECE  0E00               	movlw	0
  3235  002ED0  6FED               	movwf	stepper2_back@count_stepper& (0+255),b
  3236                           
  3237                           ; BSR set to: 0
  3238                           ;actuators_main.c: 354:             { lcdInst(0x01); _delay((unsigned long)((5)*(1000000
      +                          0/4000.0)));};
  3239                           
  3240                           ; BSR set to: 0
  3241                           ;actuators_main.c: 353:         if (count_stepper<1){
  3242  002ED2  0E01               	movlw	1
  3243  002ED4  EC51  F01A         	call	_lcdInst
  3244  002ED8  0E11               	movlw	17
  3245  002EDA  0100               	movlb	0	; () banked
  3246  002EDC  6FEB               	movwf	??_stepper2_back& (0+255),b
  3247  002EDE  0E3A               	movlw	58
  3248  002EE0                     u5737:
  3249  002EE0  2EE8               	decfsz	wreg,f,c
  3250  002EE2  D7FE               	bra	u5737
  3251  002EE4  2FEB               	decfsz	??_stepper2_back& (0+255),f,b
  3252  002EE6  D7FC               	bra	u5737
  3253  002EE8  F000               	nop	
  3254                           
  3255                           ;actuators_main.c: 355:             printf("step1");
  3256  002EEA  0ED2               	movlw	low STR_6
  3257  002EEC  0100               	movlb	0	; () banked
  3258  002EEE  6FDB               	movwf	printf@fmt& (0+255),b
  3259  002EF0  0E10               	movlw	high STR_6
  3260  002EF2  6FDC               	movwf	(printf@fmt+1)& (0+255),b
  3261  002EF4  EC0A  F01A         	call	_printf	;wreg free
  3262  002EF8  0EC0               	movlw	192
  3263  002EFA  EC51  F01A         	call	_lcdInst
  3264                           
  3265                           ;actuators_main.c: 357:             printf("Step speed %d",6);
  3266  002EFE  0E59               	movlw	low STR_7
  3267  002F00  0100               	movlb	0	; () banked
  3268  002F02  6FDB               	movwf	printf@fmt& (0+255),b
  3269  002F04  0E10               	movlw	high STR_7
  3270  002F06  6FDC               	movwf	(printf@fmt+1)& (0+255),b
  3271  002F08  0E00               	movlw	0
  3272  002F0A  6FDE               	movwf	(?_printf+3)& (0+255),b
  3273  002F0C  0E06               	movlw	6
  3274  002F0E  6FDD               	movwf	(?_printf+2)& (0+255),b
  3275  002F10  EC0A  F01A         	call	_printf	;wreg free
  3276                           
  3277                           ;actuators_main.c: 358:             for(int i=0;i<5;i++){
  3278  002F14  0E00               	movlw	0
  3279  002F16  0100               	movlb	0	; () banked
  3280  002F18  6FF0               	movwf	(stepper2_back@i+1)& (0+255),b
  3281  002F1A  0E00               	movlw	0
  3282  002F1C  6FEF               	movwf	stepper2_back@i& (0+255),b
  3283  002F1E                     l4910:
  3284                           
  3285                           ; BSR set to: 0
  3286                           ;actuators_main.c: 360:                 full_drive(direction, 2);
  3287  002F1E  0E00               	movlw	0
  3288  002F20  6FE6               	movwf	(full_drive@stepper_no+1)& (0+255),b
  3289  002F22  0E02               	movlw	2
  3290  002F24  6FE5               	movwf	full_drive@stepper_no& (0+255),b
  3291  002F26  51EC               	movf	stepper2_back@direction& (0+255),w,b
  3292  002F28  EC11  F00B         	call	_full_drive
  3293                           
  3294                           ;actuators_main.c: 362:             }
  3295  002F2C  0100               	movlb	0	; () banked
  3296  002F2E  4BEF               	infsnz	stepper2_back@i& (0+255),f,b
  3297  002F30  2BF0               	incf	(stepper2_back@i+1)& (0+255),f,b
  3298                           
  3299                           ; BSR set to: 0
  3300  002F32  BFF0               	btfsc	(stepper2_back@i+1)& (0+255),7,b
  3301  002F34  D7F4               	goto	l4910
  3302  002F36  51F0               	movf	(stepper2_back@i+1)& (0+255),w,b
  3303  002F38  E104               	bnz	u4930
  3304  002F3A  0E05               	movlw	5
  3305  002F3C  5DEF               	subwf	stepper2_back@i& (0+255),w,b
  3306  002F3E  A0D8               	btfss	status,0,c
  3307  002F40  D7EE               	goto	l4910
  3308  002F42                     u4930:
  3309                           
  3310                           ; BSR set to: 0
  3311                           ;actuators_main.c: 363:             printf("cnt is %d", count_stepper);
  3312  002F42  0EC8               	movlw	low STR_1
  3313  002F44  6FDB               	movwf	printf@fmt& (0+255),b
  3314  002F46  0E10               	movlw	high STR_1
  3315  002F48  6FDC               	movwf	(printf@fmt+1)& (0+255),b
  3316  002F4A  C0ED  F0DD         	movff	stepper2_back@count_stepper,?_printf+2
  3317  002F4E  C0EE  F0DE         	movff	stepper2_back@count_stepper+1,?_printf+3
  3318  002F52  EC0A  F01A         	call	_printf	;wreg free
  3319                           
  3320                           ;actuators_main.c: 364:             count_stepper++;
  3321  002F56  0100               	movlb	0	; () banked
  3322  002F58  4BED               	infsnz	stepper2_back@count_stepper& (0+255),f,b
  3323  002F5A  2BEE               	incf	(stepper2_back@count_stepper+1)& (0+255),f,b
  3324                           
  3325                           ; BSR set to: 0
  3326  002F5C  0012               	return		;funcret
  3327  002F5E                     __end_of_stepper2_back:
  3328                           	opt callstack 0
  3329                           
  3330 ;; *************** function _stepper2 *****************
  3331 ;; Defined at:
  3332 ;;		line 285 in file "actuators_main.c"
  3333 ;; Parameters:    Size  Location     Type
  3334 ;;  direction       1    wreg     unsigned char 
  3335 ;;  steps2_adj      2  105[BANK0 ] int 
  3336 ;; Auto vars:     Size  Location     Type
  3337 ;;  direction       1  118[BANK0 ] unsigned char 
  3338 ;;  i               2  114[BANK0 ] int 
  3339 ;;  i               2  112[BANK0 ] int 
  3340 ;;  count_steppe    2  116[BANK0 ] int 
  3341 ;; Return value:  Size  Location     Type
  3342 ;;                  1    wreg      void 
  3343 ;; Registers used:
  3344 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3345 ;; Tracked objects:
  3346 ;;		On entry : 0/0
  3347 ;;		On exit  : 0/0
  3348 ;;		Unchanged: 0/0
  3349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3350 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3351 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3352 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3353 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3354 ;;Total ram usage:       14 bytes
  3355 ;; Hardware stack levels used:    1
  3356 ;; Hardware stack levels required when called:   15
  3357 ;; This function calls:
  3358 ;;		_full_drive
  3359 ;;		_lcdInst
  3360 ;;		_printf
  3361 ;; This function is called by:
  3362 ;;		_actuators_main
  3363 ;; This function uses a non-reentrant model
  3364 ;;
  3365                           
  3366                           	psect	text10
  3367  002C82                     __ptext10:
  3368                           	opt callstack 0
  3369  002C82                     _stepper2:
  3370                           	opt callstack 14
  3371                           
  3372                           ; BSR set to: 0
  3373                           ;incstack = 0
  3374                           ;stepper2@direction stored from wreg
  3375  002C82  0100               	movlb	0	; () banked
  3376  002C84  6FF6               	movwf	stepper2@direction& (0+255),b
  3377                           
  3378                           ;actuators_main.c: 303:     int count_stepper = 0;
  3379  002C86  0E00               	movlw	0
  3380  002C88  0100               	movlb	0	; () banked
  3381  002C8A  6FF5               	movwf	(stepper2@count_stepper+1)& (0+255),b
  3382  002C8C  0E00               	movlw	0
  3383  002C8E  6FF4               	movwf	stepper2@count_stepper& (0+255),b
  3384                           
  3385                           ; BSR set to: 0
  3386                           ;actuators_main.c: 306:     if (direction == 0){
  3387                           
  3388                           ; BSR set to: 0
  3389                           ;actuators_main.c: 305:         if (count_stepper<1){
  3390  002C90  51F6               	movf	stepper2@direction& (0+255),w,b
  3391  002C92  A4D8               	btfss	status,2,c
  3392  002C94  D026               	goto	l4872
  3393                           
  3394                           ; BSR set to: 0
  3395                           ;actuators_main.c: 311:             for(int i=0;i<steps2_adj;i++){
  3396  002C96  0E00               	movlw	0
  3397  002C98  6FF1               	movwf	(stepper2@i+1)& (0+255),b
  3398  002C9A  0E00               	movlw	0
  3399  002C9C  6FF0               	movwf	stepper2@i& (0+255),b
  3400  002C9E  D00A               	goto	l4866
  3401  002CA0                     l4862:
  3402                           
  3403                           ; BSR set to: 0
  3404                           ;actuators_main.c: 313:                 full_drive(direction, 2);
  3405  002CA0  0E00               	movlw	0
  3406  002CA2  6FE6               	movwf	(full_drive@stepper_no+1)& (0+255),b
  3407  002CA4  0E02               	movlw	2
  3408  002CA6  6FE5               	movwf	full_drive@stepper_no& (0+255),b
  3409  002CA8  51F6               	movf	stepper2@direction& (0+255),w,b
  3410  002CAA  EC11  F00B         	call	_full_drive
  3411                           
  3412                           ;actuators_main.c: 315:             }
  3413  002CAE  0100               	movlb	0	; () banked
  3414  002CB0  4BF0               	infsnz	stepper2@i& (0+255),f,b
  3415  002CB2  2BF1               	incf	(stepper2@i+1)& (0+255),f,b
  3416  002CB4                     l4866:
  3417                           
  3418                           ; BSR set to: 0
  3419  002CB4  51E9               	movf	stepper2@steps2_adj& (0+255),w,b
  3420  002CB6  5DF0               	subwf	stepper2@i& (0+255),w,b
  3421  002CB8  51F1               	movf	(stepper2@i+1)& (0+255),w,b
  3422  002CBA  0A80               	xorlw	128
  3423  002CBC  6FEB               	movwf	??_stepper2& (0+255),b
  3424  002CBE  51EA               	movf	(stepper2@steps2_adj+1)& (0+255),w,b
  3425  002CC0  0A80               	xorlw	128
  3426  002CC2  59EB               	subwfb	??_stepper2& (0+255),w,b
  3427  002CC4  A0D8               	btfss	status,0,c
  3428  002CC6  D7EC               	goto	l4862
  3429                           
  3430                           ; BSR set to: 0
  3431                           ;actuators_main.c: 316:             printf("cnt is %d", count_stepper);
  3432  002CC8  0EC8               	movlw	low STR_1
  3433  002CCA  6FDB               	movwf	printf@fmt& (0+255),b
  3434  002CCC  0E10               	movlw	high STR_1
  3435  002CCE  6FDC               	movwf	(printf@fmt+1)& (0+255),b
  3436  002CD0  C0F4  F0DD         	movff	stepper2@count_stepper,?_printf+2
  3437  002CD4  C0F5  F0DE         	movff	stepper2@count_stepper+1,?_printf+3
  3438  002CD8  EC0A  F01A         	call	_printf	;wreg free
  3439                           
  3440                           ;actuators_main.c: 317:             count_stepper++;
  3441  002CDC  0100               	movlb	0	; () banked
  3442  002CDE  4BF4               	infsnz	stepper2@count_stepper& (0+255),f,b
  3443  002CE0  2BF5               	incf	(stepper2@count_stepper+1)& (0+255),f,b
  3444  002CE2                     l4872:
  3445                           
  3446                           ; BSR set to: 0
  3447                           ;actuators_main.c: 319:     if (direction == 1){
  3448  002CE2  05F6               	decf	stepper2@direction& (0+255),w,b
  3449  002CE4  A4D8               	btfss	status,2,c
  3450  002CE6  0012               	return	
  3451                           
  3452                           ; BSR set to: 0
  3453                           ;actuators_main.c: 320:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/40
      +                          00.0)));};
  3454  002CE8  0E01               	movlw	1
  3455  002CEA  EC51  F01A         	call	_lcdInst
  3456  002CEE  0E11               	movlw	17
  3457  002CF0  0100               	movlb	0	; () banked
  3458  002CF2  6FEB               	movwf	??_stepper2& (0+255),b
  3459  002CF4  0E3A               	movlw	58
  3460  002CF6                     u5747:
  3461  002CF6  2EE8               	decfsz	wreg,f,c
  3462  002CF8  D7FE               	bra	u5747
  3463  002CFA  2FEB               	decfsz	??_stepper2& (0+255),f,b
  3464  002CFC  D7FC               	bra	u5747
  3465  002CFE  F000               	nop	
  3466                           
  3467                           ;actuators_main.c: 321:                         printf("steppp %d", steps2_adj-(5));
  3468  002D00  0EBE               	movlw	low STR_5
  3469  002D02  0100               	movlb	0	; () banked
  3470  002D04  6FDB               	movwf	printf@fmt& (0+255),b
  3471  002D06  0E10               	movlw	high STR_5
  3472  002D08  6FDC               	movwf	(printf@fmt+1)& (0+255),b
  3473  002D0A  0EFB               	movlw	251
  3474  002D0C  25E9               	addwf	stepper2@steps2_adj& (0+255),w,b
  3475  002D0E  6FDD               	movwf	(?_printf+2)& (0+255),b
  3476  002D10  0EFF               	movlw	255
  3477  002D12  21EA               	addwfc	(stepper2@steps2_adj+1)& (0+255),w,b
  3478  002D14  6FDE               	movwf	(?_printf+3)& (0+255),b
  3479  002D16  EC0A  F01A         	call	_printf	;wreg free
  3480                           
  3481                           ;actuators_main.c: 323:                 for(int i=0;i<(steps2_adj-(5));i++){
  3482  002D1A  0E00               	movlw	0
  3483  002D1C  0100               	movlb	0	; () banked
  3484  002D1E  6FF3               	movwf	(stepper2@i_284+1)& (0+255),b
  3485  002D20  0E00               	movlw	0
  3486  002D22  6FF2               	movwf	stepper2@i_284& (0+255),b
  3487  002D24  D00A               	goto	l4886
  3488  002D26                     l4882:
  3489                           
  3490                           ; BSR set to: 0
  3491                           ;actuators_main.c: 325:                     full_drive(direction, 2);
  3492  002D26  0E00               	movlw	0
  3493  002D28  6FE6               	movwf	(full_drive@stepper_no+1)& (0+255),b
  3494  002D2A  0E02               	movlw	2
  3495  002D2C  6FE5               	movwf	full_drive@stepper_no& (0+255),b
  3496  002D2E  51F6               	movf	stepper2@direction& (0+255),w,b
  3497  002D30  EC11  F00B         	call	_full_drive
  3498                           
  3499                           ;actuators_main.c: 327:                 }
  3500  002D34  0100               	movlb	0	; () banked
  3501  002D36  4BF2               	infsnz	stepper2@i_284& (0+255),f,b
  3502  002D38  2BF3               	incf	(stepper2@i_284+1)& (0+255),f,b
  3503  002D3A                     l4886:
  3504                           
  3505                           ; BSR set to: 0
  3506  002D3A  0EFB               	movlw	251
  3507  002D3C  6FEB               	movwf	??_stepper2& (0+255),b
  3508  002D3E  0EFF               	movlw	255
  3509  002D40  6FEC               	movwf	(??_stepper2+1)& (0+255),b
  3510  002D42  C0E9  F0ED         	movff	stepper2@steps2_adj,??_stepper2+2
  3511  002D46  C0EA  F0EE         	movff	stepper2@steps2_adj+1,??_stepper2+3
  3512  002D4A  51EB               	movf	??_stepper2& (0+255),w,b
  3513  002D4C  27ED               	addwf	(??_stepper2+2)& (0+255),f,b
  3514  002D4E  51EC               	movf	(??_stepper2+1)& (0+255),w,b
  3515  002D50  23EE               	addwfc	(??_stepper2+3)& (0+255),f,b
  3516  002D52  51ED               	movf	(??_stepper2+2)& (0+255),w,b
  3517  002D54  5DF2               	subwf	stepper2@i_284& (0+255),w,b
  3518  002D56  51F3               	movf	(stepper2@i_284+1)& (0+255),w,b
  3519  002D58  0A80               	xorlw	128
  3520  002D5A  6FEF               	movwf	(??_stepper2+4)& (0+255),b
  3521  002D5C  51EE               	movf	(??_stepper2+3)& (0+255),w,b
  3522  002D5E  0A80               	xorlw	128
  3523  002D60  59EF               	subwfb	(??_stepper2+4)& (0+255),w,b
  3524  002D62  A0D8               	btfss	status,0,c
  3525  002D64  D7E0               	goto	l4882
  3526                           
  3527                           ; BSR set to: 0
  3528                           ;actuators_main.c: 328:                 count_stepper++;
  3529  002D66  4BF4               	infsnz	stepper2@count_stepper& (0+255),f,b
  3530  002D68  2BF5               	incf	(stepper2@count_stepper+1)& (0+255),f,b
  3531                           
  3532                           ; BSR set to: 0
  3533  002D6A  0012               	return		;funcret
  3534  002D6C                     __end_of_stepper2:
  3535                           	opt callstack 0
  3536                           
  3537 ;; *************** function _stepper *****************
  3538 ;; Defined at:
  3539 ;;		line 237 in file "actuators_main.c"
  3540 ;; Parameters:    Size  Location     Type
  3541 ;;  stack           2  105[BANK0 ] int 
  3542 ;; Auto vars:     Size  Location     Type
  3543 ;;  i               2  111[BANK0 ] int 
  3544 ;;  i               2  109[BANK0 ] int 
  3545 ;;  count_steppe    2  107[BANK0 ] int 
  3546 ;; Return value:  Size  Location     Type
  3547 ;;                  1    wreg      void 
  3548 ;; Registers used:
  3549 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3550 ;; Tracked objects:
  3551 ;;		On entry : 0/0
  3552 ;;		On exit  : 0/0
  3553 ;;		Unchanged: 0/0
  3554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3555 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3556 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3558 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3559 ;;Total ram usage:        8 bytes
  3560 ;; Hardware stack levels used:    1
  3561 ;; Hardware stack levels required when called:   15
  3562 ;; This function calls:
  3563 ;;		_full_drive
  3564 ;; This function is called by:
  3565 ;;		_actuators_main
  3566 ;; This function uses a non-reentrant model
  3567 ;;
  3568                           
  3569                           	psect	text11
  3570  003068                     __ptext11:
  3571                           	opt callstack 0
  3572  003068                     _stepper:
  3573                           	opt callstack 14
  3574                           
  3575                           ;actuators_main.c: 238:     int count_stepper = 0;
  3576                           
  3577                           ; BSR set to: 0
  3578                           ;incstack = 0
  3579  003068  0E00               	movlw	0
  3580  00306A  0100               	movlb	0	; () banked
  3581  00306C  6FEC               	movwf	(stepper@count_stepper+1)& (0+255),b
  3582  00306E  0E00               	movlw	0
  3583  003070  6FEB               	movwf	stepper@count_stepper& (0+255),b
  3584                           
  3585                           ; BSR set to: 0
  3586                           ;actuators_main.c: 247:             if (stack == 1){
  3587                           
  3588                           ; BSR set to: 0
  3589                           ;actuators_main.c: 241:         if (count_stepper<1){
  3590  003072  05E9               	decf	stepper@stack& (0+255),w,b
  3591  003074  11EA               	iorwf	(stepper@stack+1)& (0+255),w,b
  3592  003076  A4D8               	btfss	status,2,c
  3593  003078  D016               	goto	u4860
  3594                           
  3595                           ; BSR set to: 0
  3596                           ;actuators_main.c: 248:                 for(int i=0;i<14;i++){
  3597  00307A  0E00               	movlw	0
  3598  00307C  6FEE               	movwf	(stepper@i+1)& (0+255),b
  3599  00307E  0E00               	movlw	0
  3600  003080  6FED               	movwf	stepper@i& (0+255),b
  3601  003082                     l4832:
  3602                           
  3603                           ; BSR set to: 0
  3604                           ;actuators_main.c: 250:                     full_drive(0, 1);
  3605  003082  0E00               	movlw	0
  3606  003084  6FE6               	movwf	(full_drive@stepper_no+1)& (0+255),b
  3607  003086  0E01               	movlw	1
  3608  003088  6FE5               	movwf	full_drive@stepper_no& (0+255),b
  3609  00308A  0E00               	movlw	0
  3610  00308C  EC11  F00B         	call	_full_drive
  3611                           
  3612                           ;actuators_main.c: 252:                 }
  3613  003090  0100               	movlb	0	; () banked
  3614  003092  4BED               	infsnz	stepper@i& (0+255),f,b
  3615  003094  2BEE               	incf	(stepper@i+1)& (0+255),f,b
  3616                           
  3617                           ; BSR set to: 0
  3618  003096  BFEE               	btfsc	(stepper@i+1)& (0+255),7,b
  3619  003098  D7F4               	goto	l4832
  3620  00309A  51EE               	movf	(stepper@i+1)& (0+255),w,b
  3621  00309C  E104               	bnz	u4860
  3622  00309E  0E0E               	movlw	14
  3623  0030A0  5DED               	subwf	stepper@i& (0+255),w,b
  3624  0030A2  A0D8               	btfss	status,0,c
  3625  0030A4  D7EE               	goto	l4832
  3626  0030A6                     u4860:
  3627                           
  3628                           ; BSR set to: 0
  3629                           ;actuators_main.c: 254:             if (stack == 2){
  3630  0030A6  0E02               	movlw	2
  3631  0030A8  19E9               	xorwf	stepper@stack& (0+255),w,b
  3632  0030AA  11EA               	iorwf	(stepper@stack+1)& (0+255),w,b
  3633  0030AC  A4D8               	btfss	status,2,c
  3634  0030AE  D016               	goto	u4880
  3635                           
  3636                           ; BSR set to: 0
  3637                           ;actuators_main.c: 255:                 for(int i=0;i<14;i++){
  3638  0030B0  0E00               	movlw	0
  3639  0030B2  6FF0               	movwf	(stepper@i_276+1)& (0+255),b
  3640  0030B4  0E00               	movlw	0
  3641  0030B6  6FEF               	movwf	stepper@i_276& (0+255),b
  3642  0030B8                     l4846:
  3643                           
  3644                           ; BSR set to: 0
  3645                           ;actuators_main.c: 256:                     full_drive(0, 3);
  3646  0030B8  0E00               	movlw	0
  3647  0030BA  6FE6               	movwf	(full_drive@stepper_no+1)& (0+255),b
  3648  0030BC  0E03               	movlw	3
  3649  0030BE  6FE5               	movwf	full_drive@stepper_no& (0+255),b
  3650  0030C0  0E00               	movlw	0
  3651  0030C2  EC11  F00B         	call	_full_drive
  3652                           
  3653                           ;actuators_main.c: 259:                 }
  3654  0030C6  0100               	movlb	0	; () banked
  3655  0030C8  4BEF               	infsnz	stepper@i_276& (0+255),f,b
  3656  0030CA  2BF0               	incf	(stepper@i_276+1)& (0+255),f,b
  3657                           
  3658                           ; BSR set to: 0
  3659  0030CC  BFF0               	btfsc	(stepper@i_276+1)& (0+255),7,b
  3660  0030CE  D7F4               	goto	l4846
  3661  0030D0  51F0               	movf	(stepper@i_276+1)& (0+255),w,b
  3662  0030D2  E104               	bnz	u4880
  3663  0030D4  0E0E               	movlw	14
  3664  0030D6  5DEF               	subwf	stepper@i_276& (0+255),w,b
  3665  0030D8  A0D8               	btfss	status,0,c
  3666  0030DA  D7EE               	goto	l4846
  3667  0030DC                     u4880:
  3668                           
  3669                           ; BSR set to: 0
  3670                           ;actuators_main.c: 262:             count_stepper++;
  3671  0030DC  4BEB               	infsnz	stepper@count_stepper& (0+255),f,b
  3672  0030DE  2BEC               	incf	(stepper@count_stepper+1)& (0+255),f,b
  3673                           
  3674                           ; BSR set to: 0
  3675                           
  3676                           ;actuators_main.c: 263:         }
  3677  0030E0  0012               	return		;funcret
  3678  0030E2                     __end_of_stepper:
  3679                           	opt callstack 0
  3680                           
  3681 ;; *************** function _full_drive *****************
  3682 ;; Defined at:
  3683 ;;		line 382 in file "actuators_main.c"
  3684 ;; Parameters:    Size  Location     Type
  3685 ;;  direction       1    wreg     unsigned char 
  3686 ;;  stepper_no      2  101[BANK0 ] int 
  3687 ;; Auto vars:     Size  Location     Type
  3688 ;;  direction       1  104[BANK0 ] unsigned char 
  3689 ;; Return value:  Size  Location     Type
  3690 ;;                  1    wreg      void 
  3691 ;; Registers used:
  3692 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3693 ;; Tracked objects:
  3694 ;;		On entry : 0/0
  3695 ;;		On exit  : 0/0
  3696 ;;		Unchanged: 0/0
  3697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3698 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3699 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3700 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3701 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3702 ;;Total ram usage:        4 bytes
  3703 ;; Hardware stack levels used:    1
  3704 ;; Hardware stack levels required when called:   14
  3705 ;; This function calls:
  3706 ;;		_printf
  3707 ;; This function is called by:
  3708 ;;		_stepper
  3709 ;;		_stepper2
  3710 ;;		_stepper2_back
  3711 ;; This function uses a non-reentrant model
  3712 ;;
  3713                           
  3714                           	psect	text12
  3715  001622                     __ptext12:
  3716                           	opt callstack 0
  3717  001622                     _full_drive:
  3718                           	opt callstack 14
  3719                           
  3720                           ; BSR set to: 0
  3721                           ;incstack = 0
  3722                           ;full_drive@direction stored from wreg
  3723  001622  0100               	movlb	0	; () banked
  3724  001624  6FE8               	movwf	full_drive@direction& (0+255),b
  3725                           
  3726                           ;actuators_main.c: 383:     if (stepper_no == 1){
  3727  001626  0100               	movlb	0	; () banked
  3728  001628  05E5               	decf	full_drive@stepper_no& (0+255),w,b
  3729  00162A  11E6               	iorwf	(full_drive@stepper_no+1)& (0+255),w,b
  3730  00162C  A4D8               	btfss	status,2,c
  3731  00162E  D075               	goto	l4636
  3732                           
  3733                           ; BSR set to: 0
  3734                           ;actuators_main.c: 384:         if (direction == 1){
  3735  001630  05E8               	decf	full_drive@direction& (0+255),w,b
  3736  001632  A4D8               	btfss	status,2,c
  3737  001634  D037               	goto	l4620
  3738                           
  3739                           ; BSR set to: 0
  3740                           ;actuators_main.c: 385:             LATA = 0b00000011;
  3741  001636  0E03               	movlw	3
  3742  001638  6E89               	movwf	3977,c	;volatile
  3743                           
  3744                           ; BSR set to: 0
  3745                           ;actuators_main.c: 386:             _delay((unsigned long)((10)*(10000000/4000.0)));
  3746  00163A  0E21               	movlw	33
  3747  00163C  0100               	movlb	0	; () banked
  3748  00163E  6FE7               	movwf	??_full_drive& (0+255),b
  3749  001640  0E76               	movlw	118
  3750  001642                     u5757:
  3751  001642  2EE8               	decfsz	wreg,f,c
  3752  001644  D7FE               	bra	u5757
  3753  001646  2FE7               	decfsz	??_full_drive& (0+255),f,b
  3754  001648  D7FC               	bra	u5757
  3755  00164A  F000               	nop	
  3756                           
  3757                           ;actuators_main.c: 387:             LATA = 0b00000110;
  3758  00164C  0E06               	movlw	6
  3759  00164E  6E89               	movwf	3977,c	;volatile
  3760                           
  3761                           ;actuators_main.c: 388:             _delay((unsigned long)((10)*(10000000/4000.0)));
  3762  001650  0E21               	movlw	33
  3763  001652  0100               	movlb	0	; () banked
  3764  001654  6FE7               	movwf	??_full_drive& (0+255),b
  3765  001656  0E76               	movlw	118
  3766  001658                     u5767:
  3767  001658  2EE8               	decfsz	wreg,f,c
  3768  00165A  D7FE               	bra	u5767
  3769  00165C  2FE7               	decfsz	??_full_drive& (0+255),f,b
  3770  00165E  D7FC               	bra	u5767
  3771  001660  F000               	nop	
  3772                           
  3773                           ;actuators_main.c: 389:             LATA = 0b00001100;
  3774  001662  0E0C               	movlw	12
  3775  001664  6E89               	movwf	3977,c	;volatile
  3776                           
  3777                           ;actuators_main.c: 390:             _delay((unsigned long)((10)*(10000000/4000.0)));
  3778  001666  0E21               	movlw	33
  3779  001668  0100               	movlb	0	; () banked
  3780  00166A  6FE7               	movwf	??_full_drive& (0+255),b
  3781  00166C  0E76               	movlw	118
  3782  00166E                     u5777:
  3783  00166E  2EE8               	decfsz	wreg,f,c
  3784  001670  D7FE               	bra	u5777
  3785  001672  2FE7               	decfsz	??_full_drive& (0+255),f,b
  3786  001674  D7FC               	bra	u5777
  3787  001676  F000               	nop	
  3788                           
  3789                           ;actuators_main.c: 391:             LATA = 0b00001001;
  3790  001678  0E09               	movlw	9
  3791  00167A  6E89               	movwf	3977,c	;volatile
  3792                           
  3793                           ;actuators_main.c: 392:             _delay((unsigned long)((10)*(10000000/4000.0)));
  3794  00167C  0E21               	movlw	33
  3795  00167E  0100               	movlb	0	; () banked
  3796  001680  6FE7               	movwf	??_full_drive& (0+255),b
  3797  001682  0E76               	movlw	118
  3798  001684                     u5787:
  3799  001684  2EE8               	decfsz	wreg,f,c
  3800  001686  D7FE               	bra	u5787
  3801  001688  2FE7               	decfsz	??_full_drive& (0+255),f,b
  3802  00168A  D7FC               	bra	u5787
  3803  00168C  F000               	nop	
  3804                           
  3805                           ;actuators_main.c: 393:             LATA = 0b00000011;
  3806  00168E  0E03               	movlw	3
  3807  001690  6E89               	movwf	3977,c	;volatile
  3808                           
  3809                           ;actuators_main.c: 394:             _delay((unsigned long)((10)*(10000000/4000.0)));
  3810  001692  0E21               	movlw	33
  3811  001694  0100               	movlb	0	; () banked
  3812  001696  6FE7               	movwf	??_full_drive& (0+255),b
  3813  001698  0E76               	movlw	118
  3814  00169A                     u5797:
  3815  00169A  2EE8               	decfsz	wreg,f,c
  3816  00169C  D7FE               	bra	u5797
  3817  00169E  2FE7               	decfsz	??_full_drive& (0+255),f,b
  3818  0016A0  D7FC               	bra	u5797
  3819  0016A2  F000               	nop	
  3820  0016A4                     l4620:
  3821                           
  3822                           ;actuators_main.c: 396:         if (direction == 0){
  3823  0016A4  0100               	movlb	0	; () banked
  3824  0016A6  51E8               	movf	full_drive@direction& (0+255),w,b
  3825  0016A8  A4D8               	btfss	status,2,c
  3826  0016AA  D037               	goto	l4636
  3827                           
  3828                           ; BSR set to: 0
  3829                           ;actuators_main.c: 397:             LATA = 0b00001001;
  3830  0016AC  0E09               	movlw	9
  3831  0016AE  6E89               	movwf	3977,c	;volatile
  3832                           
  3833                           ; BSR set to: 0
  3834                           ;actuators_main.c: 398:             _delay((unsigned long)((10)*(10000000/4000.0)));
  3835  0016B0  0E21               	movlw	33
  3836  0016B2  0100               	movlb	0	; () banked
  3837  0016B4  6FE7               	movwf	??_full_drive& (0+255),b
  3838  0016B6  0E76               	movlw	118
  3839  0016B8                     u5807:
  3840  0016B8  2EE8               	decfsz	wreg,f,c
  3841  0016BA  D7FE               	bra	u5807
  3842  0016BC  2FE7               	decfsz	??_full_drive& (0+255),f,b
  3843  0016BE  D7FC               	bra	u5807
  3844  0016C0  F000               	nop	
  3845                           
  3846                           ;actuators_main.c: 399:             LATA = 0b00001100;
  3847  0016C2  0E0C               	movlw	12
  3848  0016C4  6E89               	movwf	3977,c	;volatile
  3849                           
  3850                           ;actuators_main.c: 400:             _delay((unsigned long)((10)*(10000000/4000.0)));
  3851  0016C6  0E21               	movlw	33
  3852  0016C8  0100               	movlb	0	; () banked
  3853  0016CA  6FE7               	movwf	??_full_drive& (0+255),b
  3854  0016CC  0E76               	movlw	118
  3855  0016CE                     u5817:
  3856  0016CE  2EE8               	decfsz	wreg,f,c
  3857  0016D0  D7FE               	bra	u5817
  3858  0016D2  2FE7               	decfsz	??_full_drive& (0+255),f,b
  3859  0016D4  D7FC               	bra	u5817
  3860  0016D6  F000               	nop	
  3861                           
  3862                           ;actuators_main.c: 401:             LATA = 0b00000110;
  3863  0016D8  0E06               	movlw	6
  3864  0016DA  6E89               	movwf	3977,c	;volatile
  3865                           
  3866                           ;actuators_main.c: 402:             _delay((unsigned long)((10)*(10000000/4000.0)));
  3867  0016DC  0E21               	movlw	33
  3868  0016DE  0100               	movlb	0	; () banked
  3869  0016E0  6FE7               	movwf	??_full_drive& (0+255),b
  3870  0016E2  0E76               	movlw	118
  3871  0016E4                     u5827:
  3872  0016E4  2EE8               	decfsz	wreg,f,c
  3873  0016E6  D7FE               	bra	u5827
  3874  0016E8  2FE7               	decfsz	??_full_drive& (0+255),f,b
  3875  0016EA  D7FC               	bra	u5827
  3876  0016EC  F000               	nop	
  3877                           
  3878                           ;actuators_main.c: 403:             LATA = 0b00000011;
  3879  0016EE  0E03               	movlw	3
  3880  0016F0  6E89               	movwf	3977,c	;volatile
  3881                           
  3882                           ;actuators_main.c: 404:             _delay((unsigned long)((10)*(10000000/4000.0)));
  3883  0016F2  0E21               	movlw	33
  3884  0016F4  0100               	movlb	0	; () banked
  3885  0016F6  6FE7               	movwf	??_full_drive& (0+255),b
  3886  0016F8  0E76               	movlw	118
  3887  0016FA                     u5837:
  3888  0016FA  2EE8               	decfsz	wreg,f,c
  3889  0016FC  D7FE               	bra	u5837
  3890  0016FE  2FE7               	decfsz	??_full_drive& (0+255),f,b
  3891  001700  D7FC               	bra	u5837
  3892  001702  F000               	nop	
  3893                           
  3894                           ;actuators_main.c: 405:             LATA = 0b00001001;
  3895  001704  0E09               	movlw	9
  3896  001706  6E89               	movwf	3977,c	;volatile
  3897                           
  3898                           ;actuators_main.c: 406:             _delay((unsigned long)((10)*(10000000/4000.0)));
  3899  001708  0E21               	movlw	33
  3900  00170A  0100               	movlb	0	; () banked
  3901  00170C  6FE7               	movwf	??_full_drive& (0+255),b
  3902  00170E  0E76               	movlw	118
  3903  001710                     u5847:
  3904  001710  2EE8               	decfsz	wreg,f,c
  3905  001712  D7FE               	bra	u5847
  3906  001714  2FE7               	decfsz	??_full_drive& (0+255),f,b
  3907  001716  D7FC               	bra	u5847
  3908  001718  F000               	nop	
  3909  00171A                     l4636:
  3910                           
  3911                           ;actuators_main.c: 409:     if (stepper_no == 2){
  3912  00171A  0E02               	movlw	2
  3913  00171C  0100               	movlb	0	; () banked
  3914  00171E  19E5               	xorwf	full_drive@stepper_no& (0+255),w,b
  3915  001720  11E6               	iorwf	(full_drive@stepper_no+1)& (0+255),w,b
  3916  001722  A4D8               	btfss	status,2,c
  3917  001724  D089               	goto	l4714
  3918                           
  3919                           ; BSR set to: 0
  3920                           ;actuators_main.c: 410:         if (direction == 1){
  3921  001726  05E8               	decf	full_drive@direction& (0+255),w,b
  3922  001728  A4D8               	btfss	status,2,c
  3923  00172A  D041               	goto	l4676
  3924                           
  3925                           ; BSR set to: 0
  3926                           ;actuators_main.c: 411:             LATCbits.LATC0 = 1;
  3927  00172C  808B               	bsf	3979,0,c	;volatile
  3928                           
  3929                           ;actuators_main.c: 412:             LATEbits.LATE0 = 1;
  3930  00172E  808D               	bsf	3981,0,c	;volatile
  3931                           
  3932                           ;actuators_main.c: 413:             LATEbits.LATE1 = 0;
  3933  001730  928D               	bcf	3981,1,c	;volatile
  3934                           
  3935                           ;actuators_main.c: 414:             LATEbits.LATE2 = 0;
  3936  001732  948D               	bcf	3981,2,c	;volatile
  3937                           
  3938                           ; BSR set to: 0
  3939                           ;actuators_main.c: 415:             _delay((unsigned long)((6)*(10000000/4000.0)));
  3940  001734  0E14               	movlw	20
  3941  001736  0100               	movlb	0	; () banked
  3942  001738  6FE7               	movwf	??_full_drive& (0+255),b
  3943  00173A  0E79               	movlw	121
  3944  00173C                     u5857:
  3945  00173C  2EE8               	decfsz	wreg,f,c
  3946  00173E  D7FE               	bra	u5857
  3947  001740  2FE7               	decfsz	??_full_drive& (0+255),f,b
  3948  001742  D7FC               	bra	u5857
  3949  001744  D000               	nop2	
  3950                           
  3951                           ;actuators_main.c: 416:             LATCbits.LATC0 = 0;
  3952  001746  908B               	bcf	3979,0,c	;volatile
  3953                           
  3954                           ;actuators_main.c: 417:             LATEbits.LATE0 = 1;
  3955  001748  808D               	bsf	3981,0,c	;volatile
  3956                           
  3957                           ;actuators_main.c: 418:             LATEbits.LATE1 = 1;
  3958  00174A  828D               	bsf	3981,1,c	;volatile
  3959                           
  3960                           ;actuators_main.c: 419:             LATEbits.LATE2 = 0;
  3961  00174C  948D               	bcf	3981,2,c	;volatile
  3962                           
  3963                           ;actuators_main.c: 420:             _delay((unsigned long)((6)*(10000000/4000.0)));
  3964  00174E  0E14               	movlw	20
  3965  001750  0100               	movlb	0	; () banked
  3966  001752  6FE7               	movwf	??_full_drive& (0+255),b
  3967  001754  0E79               	movlw	121
  3968  001756                     u5867:
  3969  001756  2EE8               	decfsz	wreg,f,c
  3970  001758  D7FE               	bra	u5867
  3971  00175A  2FE7               	decfsz	??_full_drive& (0+255),f,b
  3972  00175C  D7FC               	bra	u5867
  3973  00175E  D000               	nop2	
  3974                           
  3975                           ;actuators_main.c: 421:             LATCbits.LATC0 = 0;
  3976  001760  908B               	bcf	3979,0,c	;volatile
  3977                           
  3978                           ;actuators_main.c: 422:             LATEbits.LATE0 = 0;
  3979  001762  908D               	bcf	3981,0,c	;volatile
  3980                           
  3981                           ;actuators_main.c: 423:             LATEbits.LATE1 = 1;
  3982  001764  828D               	bsf	3981,1,c	;volatile
  3983                           
  3984                           ;actuators_main.c: 424:             LATEbits.LATE2 = 1;
  3985  001766  848D               	bsf	3981,2,c	;volatile
  3986                           
  3987                           ;actuators_main.c: 425:             _delay((unsigned long)((6)*(10000000/4000.0)));
  3988  001768  0E14               	movlw	20
  3989  00176A  0100               	movlb	0	; () banked
  3990  00176C  6FE7               	movwf	??_full_drive& (0+255),b
  3991  00176E  0E79               	movlw	121
  3992  001770                     u5877:
  3993  001770  2EE8               	decfsz	wreg,f,c
  3994  001772  D7FE               	bra	u5877
  3995  001774  2FE7               	decfsz	??_full_drive& (0+255),f,b
  3996  001776  D7FC               	bra	u5877
  3997  001778  D000               	nop2	
  3998                           
  3999                           ;actuators_main.c: 426:             LATCbits.LATC0 = 1;
  4000  00177A  808B               	bsf	3979,0,c	;volatile
  4001                           
  4002                           ;actuators_main.c: 427:             LATEbits.LATE0 = 0;
  4003  00177C  908D               	bcf	3981,0,c	;volatile
  4004                           
  4005                           ;actuators_main.c: 428:             LATEbits.LATE1 = 0;
  4006  00177E  928D               	bcf	3981,1,c	;volatile
  4007                           
  4008                           ;actuators_main.c: 429:             LATEbits.LATE2 = 1;
  4009  001780  848D               	bsf	3981,2,c	;volatile
  4010                           
  4011                           ;actuators_main.c: 430:             _delay((unsigned long)((6)*(10000000/4000.0)));
  4012  001782  0E14               	movlw	20
  4013  001784  0100               	movlb	0	; () banked
  4014  001786  6FE7               	movwf	??_full_drive& (0+255),b
  4015  001788  0E79               	movlw	121
  4016  00178A                     u5887:
  4017  00178A  2EE8               	decfsz	wreg,f,c
  4018  00178C  D7FE               	bra	u5887
  4019  00178E  2FE7               	decfsz	??_full_drive& (0+255),f,b
  4020  001790  D7FC               	bra	u5887
  4021  001792  D000               	nop2	
  4022                           
  4023                           ;actuators_main.c: 431:             LATCbits.LATC0 = 1;
  4024  001794  808B               	bsf	3979,0,c	;volatile
  4025                           
  4026                           ;actuators_main.c: 432:             LATEbits.LATE0 = 1;
  4027  001796  808D               	bsf	3981,0,c	;volatile
  4028                           
  4029                           ;actuators_main.c: 433:             LATEbits.LATE1 = 0;
  4030  001798  928D               	bcf	3981,1,c	;volatile
  4031                           
  4032                           ;actuators_main.c: 434:             LATEbits.LATE2 = 0;
  4033  00179A  948D               	bcf	3981,2,c	;volatile
  4034                           
  4035                           ;actuators_main.c: 435:             _delay((unsigned long)((6)*(10000000/4000.0)));
  4036  00179C  0E14               	movlw	20
  4037  00179E  0100               	movlb	0	; () banked
  4038  0017A0  6FE7               	movwf	??_full_drive& (0+255),b
  4039  0017A2  0E79               	movlw	121
  4040  0017A4                     u5897:
  4041  0017A4  2EE8               	decfsz	wreg,f,c
  4042  0017A6  D7FE               	bra	u5897
  4043  0017A8  2FE7               	decfsz	??_full_drive& (0+255),f,b
  4044  0017AA  D7FC               	bra	u5897
  4045  0017AC  D000               	nop2	
  4046  0017AE                     l4676:
  4047                           
  4048                           ;actuators_main.c: 437:         if (direction == 0){
  4049  0017AE  0100               	movlb	0	; () banked
  4050  0017B0  51E8               	movf	full_drive@direction& (0+255),w,b
  4051  0017B2  A4D8               	btfss	status,2,c
  4052  0017B4  D041               	goto	l4714
  4053                           
  4054                           ; BSR set to: 0
  4055                           ;actuators_main.c: 438:             LATCbits.LATC0 = 1;
  4056  0017B6  808B               	bsf	3979,0,c	;volatile
  4057                           
  4058                           ;actuators_main.c: 439:             LATEbits.LATE0 = 0;
  4059  0017B8  908D               	bcf	3981,0,c	;volatile
  4060                           
  4061                           ;actuators_main.c: 440:             LATEbits.LATE1 = 0;
  4062  0017BA  928D               	bcf	3981,1,c	;volatile
  4063                           
  4064                           ;actuators_main.c: 441:             LATEbits.LATE2 = 1;
  4065  0017BC  848D               	bsf	3981,2,c	;volatile
  4066                           
  4067                           ; BSR set to: 0
  4068                           ;actuators_main.c: 442:             _delay((unsigned long)((6)*(10000000/4000.0)));
  4069  0017BE  0E14               	movlw	20
  4070  0017C0  0100               	movlb	0	; () banked
  4071  0017C2  6FE7               	movwf	??_full_drive& (0+255),b
  4072  0017C4  0E79               	movlw	121
  4073  0017C6                     u5907:
  4074  0017C6  2EE8               	decfsz	wreg,f,c
  4075  0017C8  D7FE               	bra	u5907
  4076  0017CA  2FE7               	decfsz	??_full_drive& (0+255),f,b
  4077  0017CC  D7FC               	bra	u5907
  4078  0017CE  D000               	nop2	
  4079                           
  4080                           ;actuators_main.c: 443:             LATCbits.LATC0 = 0;
  4081  0017D0  908B               	bcf	3979,0,c	;volatile
  4082                           
  4083                           ;actuators_main.c: 444:             LATEbits.LATE0 = 0;
  4084  0017D2  908D               	bcf	3981,0,c	;volatile
  4085                           
  4086                           ;actuators_main.c: 445:             LATEbits.LATE1 = 1;
  4087  0017D4  828D               	bsf	3981,1,c	;volatile
  4088                           
  4089                           ;actuators_main.c: 446:             LATEbits.LATE2 = 1;
  4090  0017D6  848D               	bsf	3981,2,c	;volatile
  4091                           
  4092                           ;actuators_main.c: 447:             _delay((unsigned long)((6)*(10000000/4000.0)));
  4093  0017D8  0E14               	movlw	20
  4094  0017DA  0100               	movlb	0	; () banked
  4095  0017DC  6FE7               	movwf	??_full_drive& (0+255),b
  4096  0017DE  0E79               	movlw	121
  4097  0017E0                     u5917:
  4098  0017E0  2EE8               	decfsz	wreg,f,c
  4099  0017E2  D7FE               	bra	u5917
  4100  0017E4  2FE7               	decfsz	??_full_drive& (0+255),f,b
  4101  0017E6  D7FC               	bra	u5917
  4102  0017E8  D000               	nop2	
  4103                           
  4104                           ;actuators_main.c: 448:             LATCbits.LATC0 = 0;
  4105  0017EA  908B               	bcf	3979,0,c	;volatile
  4106                           
  4107                           ;actuators_main.c: 449:             LATEbits.LATE0 = 1;
  4108  0017EC  808D               	bsf	3981,0,c	;volatile
  4109                           
  4110                           ;actuators_main.c: 450:             LATEbits.LATE1 = 1;
  4111  0017EE  828D               	bsf	3981,1,c	;volatile
  4112                           
  4113                           ;actuators_main.c: 451:             LATEbits.LATE2 = 0;
  4114  0017F0  948D               	bcf	3981,2,c	;volatile
  4115                           
  4116                           ;actuators_main.c: 452:             _delay((unsigned long)((6)*(10000000/4000.0)));
  4117  0017F2  0E14               	movlw	20
  4118  0017F4  0100               	movlb	0	; () banked
  4119  0017F6  6FE7               	movwf	??_full_drive& (0+255),b
  4120  0017F8  0E79               	movlw	121
  4121  0017FA                     u5927:
  4122  0017FA  2EE8               	decfsz	wreg,f,c
  4123  0017FC  D7FE               	bra	u5927
  4124  0017FE  2FE7               	decfsz	??_full_drive& (0+255),f,b
  4125  001800  D7FC               	bra	u5927
  4126  001802  D000               	nop2	
  4127                           
  4128                           ;actuators_main.c: 453:             LATCbits.LATC0 = 1;
  4129  001804  808B               	bsf	3979,0,c	;volatile
  4130                           
  4131                           ;actuators_main.c: 454:             LATEbits.LATE0 = 1;
  4132  001806  808D               	bsf	3981,0,c	;volatile
  4133                           
  4134                           ;actuators_main.c: 455:             LATEbits.LATE1 = 0;
  4135  001808  928D               	bcf	3981,1,c	;volatile
  4136                           
  4137                           ;actuators_main.c: 456:             LATEbits.LATE2 = 0;
  4138  00180A  948D               	bcf	3981,2,c	;volatile
  4139                           
  4140                           ;actuators_main.c: 457:             _delay((unsigned long)((6)*(10000000/4000.0)));
  4141  00180C  0E14               	movlw	20
  4142  00180E  0100               	movlb	0	; () banked
  4143  001810  6FE7               	movwf	??_full_drive& (0+255),b
  4144  001812  0E79               	movlw	121
  4145  001814                     u5937:
  4146  001814  2EE8               	decfsz	wreg,f,c
  4147  001816  D7FE               	bra	u5937
  4148  001818  2FE7               	decfsz	??_full_drive& (0+255),f,b
  4149  00181A  D7FC               	bra	u5937
  4150  00181C  D000               	nop2	
  4151                           
  4152                           ;actuators_main.c: 458:             LATCbits.LATC0 = 1;
  4153  00181E  808B               	bsf	3979,0,c	;volatile
  4154                           
  4155                           ;actuators_main.c: 459:             LATEbits.LATE0 = 0;
  4156  001820  908D               	bcf	3981,0,c	;volatile
  4157                           
  4158                           ;actuators_main.c: 460:             LATEbits.LATE1 = 0;
  4159  001822  928D               	bcf	3981,1,c	;volatile
  4160                           
  4161                           ;actuators_main.c: 461:             LATEbits.LATE2 = 1;
  4162  001824  848D               	bsf	3981,2,c	;volatile
  4163                           
  4164                           ;actuators_main.c: 462:             _delay((unsigned long)((6)*(10000000/4000.0)));
  4165  001826  0E14               	movlw	20
  4166  001828  0100               	movlb	0	; () banked
  4167  00182A  6FE7               	movwf	??_full_drive& (0+255),b
  4168  00182C  0E79               	movlw	121
  4169  00182E                     u5947:
  4170  00182E  2EE8               	decfsz	wreg,f,c
  4171  001830  D7FE               	bra	u5947
  4172  001832  2FE7               	decfsz	??_full_drive& (0+255),f,b
  4173  001834  D7FC               	bra	u5947
  4174  001836  D000               	nop2	
  4175  001838                     l4714:
  4176                           
  4177                           ;actuators_main.c: 465:     if (stepper_no == 3){
  4178  001838  0E03               	movlw	3
  4179  00183A  0100               	movlb	0	; () banked
  4180  00183C  19E5               	xorwf	full_drive@stepper_no& (0+255),w,b
  4181  00183E  11E6               	iorwf	(full_drive@stepper_no+1)& (0+255),w,b
  4182  001840  A4D8               	btfss	status,2,c
  4183  001842  0012               	return	
  4184                           
  4185                           ; BSR set to: 0
  4186                           ;actuators_main.c: 466:         printf("what");
  4187  001844  0ED8               	movlw	low STR_9
  4188  001846  6FDB               	movwf	printf@fmt& (0+255),b
  4189  001848  0E10               	movlw	high STR_9
  4190  00184A  6FDC               	movwf	(printf@fmt+1)& (0+255),b
  4191  00184C  EC0A  F01A         	call	_printf	;wreg free
  4192                           
  4193                           ;actuators_main.c: 467:         if (direction == 0){
  4194  001850  0100               	movlb	0	; () banked
  4195  001852  51E8               	movf	full_drive@direction& (0+255),w,b
  4196  001854  A4D8               	btfss	status,2,c
  4197  001856  D041               	goto	l4756
  4198                           
  4199                           ; BSR set to: 0
  4200                           ;actuators_main.c: 468:             LATCbits.LATC5 = 1;
  4201  001858  8A8B               	bsf	3979,5,c	;volatile
  4202                           
  4203                           ;actuators_main.c: 469:             LATCbits.LATC6 = 0;
  4204  00185A  9C8B               	bcf	3979,6,c	;volatile
  4205                           
  4206                           ;actuators_main.c: 470:             LATCbits.LATC7 = 0;
  4207  00185C  9E8B               	bcf	3979,7,c	;volatile
  4208                           
  4209                           ;actuators_main.c: 471:             LATAbits.LATA5 = 1;
  4210  00185E  8A89               	bsf	3977,5,c	;volatile
  4211                           
  4212                           ; BSR set to: 0
  4213                           ;actuators_main.c: 472:             _delay((unsigned long)((10)*(10000000/4000.0)));
  4214  001860  0E21               	movlw	33
  4215  001862  0100               	movlb	0	; () banked
  4216  001864  6FE7               	movwf	??_full_drive& (0+255),b
  4217  001866  0E76               	movlw	118
  4218  001868                     u5957:
  4219  001868  2EE8               	decfsz	wreg,f,c
  4220  00186A  D7FE               	bra	u5957
  4221  00186C  2FE7               	decfsz	??_full_drive& (0+255),f,b
  4222  00186E  D7FC               	bra	u5957
  4223  001870  F000               	nop	
  4224                           
  4225                           ;actuators_main.c: 473:             LATCbits.LATC5 = 1;
  4226  001872  8A8B               	bsf	3979,5,c	;volatile
  4227                           
  4228                           ;actuators_main.c: 474:             LATCbits.LATC6 = 1;
  4229  001874  8C8B               	bsf	3979,6,c	;volatile
  4230                           
  4231                           ;actuators_main.c: 475:             LATCbits.LATC7 = 0;
  4232  001876  9E8B               	bcf	3979,7,c	;volatile
  4233                           
  4234                           ;actuators_main.c: 476:             LATAbits.LATA5 = 0;
  4235  001878  9A89               	bcf	3977,5,c	;volatile
  4236                           
  4237                           ;actuators_main.c: 477:             _delay((unsigned long)((10)*(10000000/4000.0)));
  4238  00187A  0E21               	movlw	33
  4239  00187C  0100               	movlb	0	; () banked
  4240  00187E  6FE7               	movwf	??_full_drive& (0+255),b
  4241  001880  0E76               	movlw	118
  4242  001882                     u5967:
  4243  001882  2EE8               	decfsz	wreg,f,c
  4244  001884  D7FE               	bra	u5967
  4245  001886  2FE7               	decfsz	??_full_drive& (0+255),f,b
  4246  001888  D7FC               	bra	u5967
  4247  00188A  F000               	nop	
  4248                           
  4249                           ;actuators_main.c: 478:             LATCbits.LATC5 = 0;
  4250  00188C  9A8B               	bcf	3979,5,c	;volatile
  4251                           
  4252                           ;actuators_main.c: 479:             LATCbits.LATC6 = 1;
  4253  00188E  8C8B               	bsf	3979,6,c	;volatile
  4254                           
  4255                           ;actuators_main.c: 480:             LATCbits.LATC7 = 1;
  4256  001890  8E8B               	bsf	3979,7,c	;volatile
  4257                           
  4258                           ;actuators_main.c: 481:             LATAbits.LATA5 = 0;
  4259  001892  9A89               	bcf	3977,5,c	;volatile
  4260                           
  4261                           ;actuators_main.c: 482:             _delay((unsigned long)((10)*(10000000/4000.0)));
  4262  001894  0E21               	movlw	33
  4263  001896  0100               	movlb	0	; () banked
  4264  001898  6FE7               	movwf	??_full_drive& (0+255),b
  4265  00189A  0E76               	movlw	118
  4266  00189C                     u5977:
  4267  00189C  2EE8               	decfsz	wreg,f,c
  4268  00189E  D7FE               	bra	u5977
  4269  0018A0  2FE7               	decfsz	??_full_drive& (0+255),f,b
  4270  0018A2  D7FC               	bra	u5977
  4271  0018A4  F000               	nop	
  4272                           
  4273                           ;actuators_main.c: 483:             LATCbits.LATC5 = 0;
  4274  0018A6  9A8B               	bcf	3979,5,c	;volatile
  4275                           
  4276                           ;actuators_main.c: 484:             LATCbits.LATC6 = 0;
  4277  0018A8  9C8B               	bcf	3979,6,c	;volatile
  4278                           
  4279                           ;actuators_main.c: 485:             LATCbits.LATC7 = 1;
  4280  0018AA  8E8B               	bsf	3979,7,c	;volatile
  4281                           
  4282                           ;actuators_main.c: 486:             LATAbits.LATA5 = 1;
  4283  0018AC  8A89               	bsf	3977,5,c	;volatile
  4284                           
  4285                           ;actuators_main.c: 487:             _delay((unsigned long)((10)*(10000000/4000.0)));
  4286  0018AE  0E21               	movlw	33
  4287  0018B0  0100               	movlb	0	; () banked
  4288  0018B2  6FE7               	movwf	??_full_drive& (0+255),b
  4289  0018B4  0E76               	movlw	118
  4290  0018B6                     u5987:
  4291  0018B6  2EE8               	decfsz	wreg,f,c
  4292  0018B8  D7FE               	bra	u5987
  4293  0018BA  2FE7               	decfsz	??_full_drive& (0+255),f,b
  4294  0018BC  D7FC               	bra	u5987
  4295  0018BE  F000               	nop	
  4296                           
  4297                           ;actuators_main.c: 488:             LATCbits.LATC5 = 1;
  4298  0018C0  8A8B               	bsf	3979,5,c	;volatile
  4299                           
  4300                           ;actuators_main.c: 489:             LATCbits.LATC6 = 0;
  4301  0018C2  9C8B               	bcf	3979,6,c	;volatile
  4302                           
  4303                           ;actuators_main.c: 490:             LATCbits.LATC7 = 0;
  4304  0018C4  9E8B               	bcf	3979,7,c	;volatile
  4305                           
  4306                           ;actuators_main.c: 491:             LATAbits.LATA5 = 1;
  4307  0018C6  8A89               	bsf	3977,5,c	;volatile
  4308                           
  4309                           ;actuators_main.c: 492:             _delay((unsigned long)((10)*(10000000/4000.0)));
  4310  0018C8  0E21               	movlw	33
  4311  0018CA  0100               	movlb	0	; () banked
  4312  0018CC  6FE7               	movwf	??_full_drive& (0+255),b
  4313  0018CE  0E76               	movlw	118
  4314  0018D0                     u5997:
  4315  0018D0  2EE8               	decfsz	wreg,f,c
  4316  0018D2  D7FE               	bra	u5997
  4317  0018D4  2FE7               	decfsz	??_full_drive& (0+255),f,b
  4318  0018D6  D7FC               	bra	u5997
  4319  0018D8  F000               	nop	
  4320  0018DA                     l4756:
  4321                           
  4322                           ;actuators_main.c: 494:         if (direction == 1){
  4323  0018DA  0100               	movlb	0	; () banked
  4324  0018DC  05E8               	decf	full_drive@direction& (0+255),w,b
  4325  0018DE  A4D8               	btfss	status,2,c
  4326  0018E0  0012               	return	
  4327                           
  4328                           ; BSR set to: 0
  4329                           ;actuators_main.c: 495:             LATCbits.LATC5 = 1;
  4330  0018E2  8A8B               	bsf	3979,5,c	;volatile
  4331                           
  4332                           ;actuators_main.c: 496:             LATCbits.LATC6 = 1;
  4333  0018E4  8C8B               	bsf	3979,6,c	;volatile
  4334                           
  4335                           ;actuators_main.c: 497:             LATCbits.LATC7 = 0;
  4336  0018E6  9E8B               	bcf	3979,7,c	;volatile
  4337                           
  4338                           ;actuators_main.c: 498:             LATAbits.LATA5 = 0;
  4339  0018E8  9A89               	bcf	3977,5,c	;volatile
  4340                           
  4341                           ; BSR set to: 0
  4342                           ;actuators_main.c: 499:             _delay((unsigned long)((10)*(10000000/4000.0)));
  4343  0018EA  0E21               	movlw	33
  4344  0018EC  0100               	movlb	0	; () banked
  4345  0018EE  6FE7               	movwf	??_full_drive& (0+255),b
  4346  0018F0  0E76               	movlw	118
  4347  0018F2                     u6007:
  4348  0018F2  2EE8               	decfsz	wreg,f,c
  4349  0018F4  D7FE               	bra	u6007
  4350  0018F6  2FE7               	decfsz	??_full_drive& (0+255),f,b
  4351  0018F8  D7FC               	bra	u6007
  4352  0018FA  F000               	nop	
  4353                           
  4354                           ;actuators_main.c: 500:             LATCbits.LATC5 = 0;
  4355  0018FC  9A8B               	bcf	3979,5,c	;volatile
  4356                           
  4357                           ;actuators_main.c: 501:             LATCbits.LATC6 = 1;
  4358  0018FE  8C8B               	bsf	3979,6,c	;volatile
  4359                           
  4360                           ;actuators_main.c: 502:             LATCbits.LATC7 = 1;
  4361  001900  8E8B               	bsf	3979,7,c	;volatile
  4362                           
  4363                           ;actuators_main.c: 503:             LATAbits.LATA5 = 0;
  4364  001902  9A89               	bcf	3977,5,c	;volatile
  4365                           
  4366                           ;actuators_main.c: 504:             _delay((unsigned long)((10)*(10000000/4000.0)));
  4367  001904  0E21               	movlw	33
  4368  001906  0100               	movlb	0	; () banked
  4369  001908  6FE7               	movwf	??_full_drive& (0+255),b
  4370  00190A  0E76               	movlw	118
  4371  00190C                     u6017:
  4372  00190C  2EE8               	decfsz	wreg,f,c
  4373  00190E  D7FE               	bra	u6017
  4374  001910  2FE7               	decfsz	??_full_drive& (0+255),f,b
  4375  001912  D7FC               	bra	u6017
  4376  001914  F000               	nop	
  4377                           
  4378                           ;actuators_main.c: 505:             LATCbits.LATC5 = 0;
  4379  001916  9A8B               	bcf	3979,5,c	;volatile
  4380                           
  4381                           ;actuators_main.c: 506:             LATCbits.LATC6 = 0;
  4382  001918  9C8B               	bcf	3979,6,c	;volatile
  4383                           
  4384                           ;actuators_main.c: 507:             LATCbits.LATC7 = 1;
  4385  00191A  8E8B               	bsf	3979,7,c	;volatile
  4386                           
  4387                           ;actuators_main.c: 508:             LATAbits.LATA5 = 1;
  4388  00191C  8A89               	bsf	3977,5,c	;volatile
  4389                           
  4390                           ;actuators_main.c: 509:             _delay((unsigned long)((10)*(10000000/4000.0)));
  4391  00191E  0E21               	movlw	33
  4392  001920  0100               	movlb	0	; () banked
  4393  001922  6FE7               	movwf	??_full_drive& (0+255),b
  4394  001924  0E76               	movlw	118
  4395  001926                     u6027:
  4396  001926  2EE8               	decfsz	wreg,f,c
  4397  001928  D7FE               	bra	u6027
  4398  00192A  2FE7               	decfsz	??_full_drive& (0+255),f,b
  4399  00192C  D7FC               	bra	u6027
  4400  00192E  F000               	nop	
  4401                           
  4402                           ;actuators_main.c: 510:             LATCbits.LATC5 = 1;
  4403  001930  8A8B               	bsf	3979,5,c	;volatile
  4404                           
  4405                           ;actuators_main.c: 511:             LATCbits.LATC6 = 0;
  4406  001932  9C8B               	bcf	3979,6,c	;volatile
  4407                           
  4408                           ;actuators_main.c: 512:             LATCbits.LATC7 = 0;
  4409  001934  9E8B               	bcf	3979,7,c	;volatile
  4410                           
  4411                           ;actuators_main.c: 513:             LATAbits.LATA5 = 1;
  4412  001936  8A89               	bsf	3977,5,c	;volatile
  4413                           
  4414                           ;actuators_main.c: 514:             _delay((unsigned long)((10)*(10000000/4000.0)));
  4415  001938  0E21               	movlw	33
  4416  00193A  0100               	movlb	0	; () banked
  4417  00193C  6FE7               	movwf	??_full_drive& (0+255),b
  4418  00193E  0E76               	movlw	118
  4419  001940                     u6037:
  4420  001940  2EE8               	decfsz	wreg,f,c
  4421  001942  D7FE               	bra	u6037
  4422  001944  2FE7               	decfsz	??_full_drive& (0+255),f,b
  4423  001946  D7FC               	bra	u6037
  4424  001948  F000               	nop	
  4425                           
  4426                           ;actuators_main.c: 515:             LATCbits.LATC5 = 1;
  4427  00194A  8A8B               	bsf	3979,5,c	;volatile
  4428                           
  4429                           ;actuators_main.c: 516:             LATCbits.LATC6 = 1;
  4430  00194C  8C8B               	bsf	3979,6,c	;volatile
  4431                           
  4432                           ;actuators_main.c: 517:             LATCbits.LATC7 = 0;
  4433  00194E  9E8B               	bcf	3979,7,c	;volatile
  4434                           
  4435                           ;actuators_main.c: 518:             LATAbits.LATA5 = 0;
  4436  001950  9A89               	bcf	3977,5,c	;volatile
  4437                           
  4438                           ;actuators_main.c: 519:             _delay((unsigned long)((10)*(10000000/4000.0)));
  4439  001952  0E21               	movlw	33
  4440  001954  0100               	movlb	0	; () banked
  4441  001956  6FE7               	movwf	??_full_drive& (0+255),b
  4442  001958  0E76               	movlw	118
  4443  00195A                     u6047:
  4444  00195A  2EE8               	decfsz	wreg,f,c
  4445  00195C  D7FE               	bra	u6047
  4446  00195E  2FE7               	decfsz	??_full_drive& (0+255),f,b
  4447  001960  D7FC               	bra	u6047
  4448  001962  F000               	nop	
  4449  001964  0012               	return		;funcret
  4450  001966                     __end_of_full_drive:
  4451                           	opt callstack 0
  4452                           
  4453 ;; *************** function _printf *****************
  4454 ;; Defined at:
  4455 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  4456 ;; Parameters:    Size  Location     Type
  4457 ;;  fmt             2   91[BANK0 ] PTR const unsigned char 
  4458 ;;		 -> STR_20(12), STR_19(11), STR_18(16), STR_17(10), 
  4459 ;;		 -> STR_16(17), STR_15(10), STR_14(16), STR_13(10), 
  4460 ;;		 -> STR_12(16), STR_11(10), STR_10(17), STR_9(5), 
  4461 ;;		 -> STR_8(10), STR_7(14), STR_6(6), STR_5(10), 
  4462 ;;		 -> STR_4(10), STR_3(11), STR_2(13), STR_1(10), 
  4463 ;; Auto vars:     Size  Location     Type
  4464 ;;  ap              2   99[BANK0 ] PTR void [1]
  4465 ;;		 -> ?_printf(2), 
  4466 ;;  ret             2    0        int 
  4467 ;; Return value:  Size  Location     Type
  4468 ;;                  2   91[BANK0 ] int 
  4469 ;; Registers used:
  4470 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4471 ;; Tracked objects:
  4472 ;;		On entry : 0/0
  4473 ;;		On exit  : 0/0
  4474 ;;		Unchanged: 0/0
  4475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4476 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4477 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4479 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4480 ;;Total ram usage:       10 bytes
  4481 ;; Hardware stack levels used:    1
  4482 ;; Hardware stack levels required when called:   13
  4483 ;; This function calls:
  4484 ;;		_vfprintf
  4485 ;; This function is called by:
  4486 ;;		_actuators_main
  4487 ;;		_stepper2
  4488 ;;		_stepper2_back
  4489 ;;		_full_drive
  4490 ;;		_print_echo
  4491 ;;		_number_deploy
  4492 ;;		_ultrasonic_main
  4493 ;; This function uses a non-reentrant model
  4494 ;;
  4495                           
  4496                           	psect	text13
  4497  003414                     __ptext13:
  4498                           	opt callstack 0
  4499  003414                     _printf:
  4500                           	opt callstack 16
  4501                           
  4502                           ;incstack = 0
  4503  003414  0EDD               	movlw	low (?_printf+2)
  4504  003416  0100               	movlb	0	; () banked
  4505  003418  6FE3               	movwf	printf@ap& (0+255),b
  4506  00341A  0E00               	movlw	high (?_printf+2)
  4507  00341C  6FE4               	movwf	(printf@ap+1)& (0+255),b
  4508                           
  4509                           ; BSR set to: 0
  4510  00341E  0E00               	movlw	0
  4511  003420  6FD3               	movwf	vfprintf@fp& (0+255),b
  4512  003422  0E00               	movlw	0
  4513  003424  6FD4               	movwf	(vfprintf@fp+1)& (0+255),b
  4514  003426  C0DB  F0D5         	movff	printf@fmt,vfprintf@fmt
  4515  00342A  C0DC  F0D6         	movff	printf@fmt+1,vfprintf@fmt+1
  4516  00342E  0EE3               	movlw	low printf@ap
  4517  003430  6FD7               	movwf	vfprintf@ap& (0+255),b
  4518  003432  0E00               	movlw	high printf@ap
  4519  003434  6FD8               	movwf	(vfprintf@ap+1)& (0+255),b
  4520  003436  ECE0  F018         	call	_vfprintf	;wreg free
  4521  00343A  0012               	return		;funcret
  4522  00343C                     __end_of_printf:
  4523                           	opt callstack 0
  4524                           
  4525 ;; *************** function _vfprintf *****************
  4526 ;; Defined at:
  4527 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4528 ;; Parameters:    Size  Location     Type
  4529 ;;  fp              2   83[BANK0 ] PTR struct _IO_FILE
  4530 ;;		 -> NULL(0), 
  4531 ;;  fmt             2   85[BANK0 ] PTR const unsigned char 
  4532 ;;		 -> STR_20(12), STR_19(11), STR_18(16), STR_17(10), 
  4533 ;;		 -> STR_16(17), STR_15(10), STR_14(16), STR_13(10), 
  4534 ;;		 -> STR_12(16), STR_11(10), STR_10(17), STR_9(5), 
  4535 ;;		 -> STR_8(10), STR_7(14), STR_6(6), STR_5(10), 
  4536 ;;		 -> STR_4(10), STR_3(11), STR_2(13), STR_1(10), 
  4537 ;;  ap              2   87[BANK0 ] PTR PTR void 
  4538 ;;		 -> printf@ap(2), 
  4539 ;; Auto vars:     Size  Location     Type
  4540 ;;  cfmt            2   89[BANK0 ] PTR unsigned char 
  4541 ;;		 -> STR_20(12), STR_19(11), STR_18(16), STR_17(10), 
  4542 ;;		 -> STR_16(17), STR_15(10), STR_14(16), STR_13(10), 
  4543 ;;		 -> STR_12(16), STR_11(10), STR_10(17), STR_9(5), 
  4544 ;;		 -> STR_8(10), STR_7(14), STR_6(6), STR_5(10), 
  4545 ;;		 -> STR_4(10), STR_3(11), STR_2(13), STR_1(10), 
  4546 ;; Return value:  Size  Location     Type
  4547 ;;                  2   83[BANK0 ] int 
  4548 ;; Registers used:
  4549 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4550 ;; Tracked objects:
  4551 ;;		On entry : 0/0
  4552 ;;		On exit  : 0/0
  4553 ;;		Unchanged: 0/0
  4554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4555 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4556 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4558 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4559 ;;Total ram usage:        8 bytes
  4560 ;; Hardware stack levels used:    1
  4561 ;; Hardware stack levels required when called:   12
  4562 ;; This function calls:
  4563 ;;		_vfpfcnvrt
  4564 ;; This function is called by:
  4565 ;;		_printf
  4566 ;; This function uses a non-reentrant model
  4567 ;;
  4568                           
  4569                           	psect	text14
  4570  0031C0                     __ptext14:
  4571                           	opt callstack 0
  4572  0031C0                     _vfprintf:
  4573                           	opt callstack 16
  4574                           
  4575                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  4576                           
  4577                           ;incstack = 0
  4578  0031C0  C0D5  F0D9         	movff	vfprintf@fmt,vfprintf@cfmt
  4579  0031C4  C0D6  F0DA         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4580                           
  4581                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  4582  0031C8  0E00               	movlw	0
  4583  0031CA  6E4C               	movwf	_nout+1,c
  4584  0031CC  0E00               	movlw	0
  4585  0031CE  6E4B               	movwf	_nout,c
  4586                           
  4587                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4588  0031D0  D014               	goto	l4562
  4589  0031D2                     l4560:
  4590                           
  4591                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  4592  0031D2  C0D3  F0C3         	movff	vfprintf@fp,vfpfcnvrt@fp
  4593  0031D6  C0D4  F0C4         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4594  0031DA  0ED9               	movlw	low vfprintf@cfmt
  4595  0031DC  0100               	movlb	0	; () banked
  4596  0031DE  6FC5               	movwf	vfpfcnvrt@fmt& (0+255),b
  4597  0031E0  0E00               	movlw	high vfprintf@cfmt
  4598  0031E2  6FC6               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  4599  0031E4  C0D7  F0C7         	movff	vfprintf@ap,vfpfcnvrt@ap
  4600  0031E8  C0D8  F0C8         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4601  0031EC  ECE0  F010         	call	_vfpfcnvrt	;wreg free
  4602  0031F0  0100               	movlb	0	; () banked
  4603  0031F2  51C3               	movf	?_vfpfcnvrt& (0+255),w,b
  4604  0031F4  264B               	addwf	_nout,f,c
  4605  0031F6  51C4               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  4606  0031F8  224C               	addwfc	_nout+1,f,c
  4607  0031FA                     l4562:
  4608                           
  4609                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4610  0031FA  C0D9  FFF6         	movff	vfprintf@cfmt,tblptrl
  4611  0031FE  C0DA  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4612  003202                     	if	0	;tblptru may be non-zero
  4613  003202                     	endif
  4614  003202                     	if	0	;tblptru may be non-zero
  4615  003202                     	endif
  4616  003202  0008               	tblrd		*
  4617  003204  50F5               	movf	tablat,w,c
  4618  003206  0900               	iorlw	0
  4619  003208  A4D8               	btfss	status,2,c
  4620  00320A  D7E3               	goto	l4560
  4621                           
  4622                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  4623  00320C  C04B  F0D3         	movff	_nout,?_vfprintf
  4624  003210  C04C  F0D4         	movff	_nout+1,?_vfprintf+1
  4625  003214  0012               	return		;funcret
  4626  003216                     __end_of_vfprintf:
  4627                           	opt callstack 0
  4628                           
  4629 ;; *************** function _vfpfcnvrt *****************
  4630 ;; Defined at:
  4631 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4632 ;; Parameters:    Size  Location     Type
  4633 ;;  fp              2   67[BANK0 ] PTR struct _IO_FILE
  4634 ;;		 -> NULL(0), 
  4635 ;;  fmt             2   69[BANK0 ] PTR PTR unsigned char 
  4636 ;;		 -> vfprintf@cfmt(2), 
  4637 ;;  ap              2   71[BANK0 ] PTR PTR void 
  4638 ;;		 -> printf@ap(2), 
  4639 ;; Auto vars:     Size  Location     Type
  4640 ;;  ll              8   75[BANK0 ] long long 
  4641 ;;  llu             8    0        unsigned long long 
  4642 ;;  f               4    0        unsigned long long 
  4643 ;;  vp              3    0        PTR void 
  4644 ;;  ct              3    0        unsigned char [3]
  4645 ;;  cp              3    0        PTR unsigned char 
  4646 ;;  i               2    0        int 
  4647 ;;  done            2    0        int 
  4648 ;;  c               1    0        unsigned char 
  4649 ;; Return value:  Size  Location     Type
  4650 ;;                  2   67[BANK0 ] int 
  4651 ;; Registers used:
  4652 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4653 ;; Tracked objects:
  4654 ;;		On entry : 0/0
  4655 ;;		On exit  : 0/0
  4656 ;;		Unchanged: 0/0
  4657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4658 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4659 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4660 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4661 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4662 ;;Total ram usage:       16 bytes
  4663 ;; Hardware stack levels used:    1
  4664 ;; Hardware stack levels required when called:   11
  4665 ;; This function calls:
  4666 ;;		_dtoa
  4667 ;;		_fputc
  4668 ;; This function is called by:
  4669 ;;		_vfprintf
  4670 ;; This function uses a non-reentrant model
  4671 ;;
  4672                           
  4673                           	psect	text15
  4674  0021C0                     __ptext15:
  4675                           	opt callstack 0
  4676  0021C0                     _vfpfcnvrt:
  4677                           	opt callstack 16
  4678                           
  4679                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  4680                           
  4681                           ;incstack = 0
  4682  0021C0  C0C5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4683  0021C4  C0C6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4684  0021C8  CFDE FFF6          	movff	postinc2,tblptrl
  4685  0021CC  CFDD FFF7          	movff	postdec2,tblptrh
  4686  0021D0                     	if	0	;tblptru may be non-zero
  4687  0021D0                     	endif
  4688  0021D0                     	if	0	;tblptru may be non-zero
  4689  0021D0                     	endif
  4690  0021D0  0008               	tblrd		*
  4691  0021D2  50F5               	movf	tablat,w,c
  4692  0021D4  0A25               	xorlw	37
  4693  0021D6  A4D8               	btfss	status,2,c
  4694  0021D8  D09D               	goto	l4548
  4695                           
  4696                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  4697  0021DA  C0C5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4698  0021DE  C0C6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4699  0021E2  2ADE               	incf	postinc2,f,c
  4700  0021E4  0E00               	movlw	0
  4701  0021E6  22DD               	addwfc	postdec2,f,c
  4702                           
  4703                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  4704  0021E8  0E00               	movlw	0
  4705  0021EA  6E4E               	movwf	_width+1,c
  4706  0021EC  0E00               	movlw	0
  4707  0021EE  6E4D               	movwf	_width,c
  4708  0021F0  C04D  F0FD         	movff	_width,_flags
  4709  0021F4  C04E  F0FE         	movff	_width+1,_flags+1
  4710                           
  4711                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  4712  0021F8  684F               	setf	_prec,c
  4713  0021FA  6850               	setf	_prec+1,c
  4714                           
  4715                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4716  0021FC  C0C5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4717  002200  C0C6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4718  002204  CFDE FFF6          	movff	postinc2,tblptrl
  4719  002208  CFDD FFF7          	movff	postdec2,tblptrh
  4720  00220C                     	if	0	;tblptru may be non-zero
  4721  00220C                     	endif
  4722  00220C                     	if	0	;tblptru may be non-zero
  4723  00220C                     	endif
  4724  00220C  0008               	tblrd		*
  4725  00220E  50F5               	movf	tablat,w,c
  4726  002210  0A64               	xorlw	100
  4727  002212  B4D8               	btfsc	status,2,c
  4728  002214  D00D               	goto	u4710
  4729  002216  C0C5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4730  00221A  C0C6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4731  00221E  CFDE FFF6          	movff	postinc2,tblptrl
  4732  002222  CFDD FFF7          	movff	postdec2,tblptrh
  4733  002226                     	if	0	;tblptru may be non-zero
  4734  002226                     	endif
  4735  002226                     	if	0	;tblptru may be non-zero
  4736  002226                     	endif
  4737  002226  0008               	tblrd		*
  4738  002228  50F5               	movf	tablat,w,c
  4739  00222A  0A69               	xorlw	105
  4740  00222C  A4D8               	btfss	status,2,c
  4741  00222E  D040               	goto	l4532
  4742  002230                     u4710:
  4743                           
  4744                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  4745  002230  C0C5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4746  002234  C0C6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4747  002238  2ADE               	incf	postinc2,f,c
  4748  00223A  0E00               	movlw	0
  4749  00223C  22DD               	addwfc	postdec2,f,c
  4750                           
  4751                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4752  00223E  C0C7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4753  002242  C0C8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4754  002246  CFDF F0C9          	movff	indf2,??_vfpfcnvrt
  4755  00224A  0E02               	movlw	2
  4756  00224C  26DE               	addwf	postinc2,f,c
  4757  00224E  CFDF F0CA          	movff	indf2,??_vfpfcnvrt+1
  4758  002252  0E00               	movlw	0
  4759  002254  22DD               	addwfc	postdec2,f,c
  4760  002256  C0C9  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4761  00225A  C0CA  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4762  00225E  CFDE F0CB          	movff	postinc2,vfpfcnvrt@ll
  4763  002262  CFDD F0CC          	movff	postdec2,vfpfcnvrt@ll+1
  4764  002266  0100               	movlb	0	; () banked
  4765  002268  0E00               	movlw	0
  4766  00226A  BFCC               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  4767  00226C  0EFF               	movlw	-1
  4768  00226E  6FCD               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4769  002270  6FCE               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4770  002272  6FCF               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4771  002274  6FD0               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4772  002276  6FD1               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4773  002278  6FD2               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4774                           
  4775                           ; BSR set to: 0
  4776                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  4777  00227A  C0C3  F09F         	movff	vfpfcnvrt@fp,dtoa@fp
  4778  00227E  C0C4  F0A0         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4779  002282  C0CB  F0A1         	movff	vfpfcnvrt@ll,dtoa@d
  4780  002286  C0CC  F0A2         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4781  00228A  C0CD  F0A3         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4782  00228E  C0CE  F0A4         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4783  002292  C0CF  F0A5         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4784  002296  C0D0  F0A6         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4785  00229A  C0D1  F0A7         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4786  00229E  C0D2  F0A8         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4787  0022A2  ECF7  F00D         	call	_dtoa	;wreg free
  4788  0022A6  C09F  F0C3         	movff	?_dtoa,?_vfpfcnvrt
  4789  0022AA  C0A0  F0C4         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4790  0022AE  0012               	return	
  4791  0022B0                     l4532:
  4792                           
  4793                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  4794  0022B0  C0C5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4795  0022B4  C0C6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4796  0022B8  CFDE FFF6          	movff	postinc2,tblptrl
  4797  0022BC  CFDD FFF7          	movff	postdec2,tblptrh
  4798  0022C0                     	if	0	;tblptru may be non-zero
  4799  0022C0                     	endif
  4800  0022C0                     	if	0	;tblptru may be non-zero
  4801  0022C0                     	endif
  4802  0022C0  0008               	tblrd		*
  4803  0022C2  50F5               	movf	tablat,w,c
  4804  0022C4  0A25               	xorlw	37
  4805  0022C6  A4D8               	btfss	status,2,c
  4806  0022C8  D018               	goto	l4542
  4807                           
  4808                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  4809  0022CA  C0C5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4810  0022CE  C0C6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4811  0022D2  2ADE               	incf	postinc2,f,c
  4812  0022D4  0E00               	movlw	0
  4813  0022D6  22DD               	addwfc	postdec2,f,c
  4814                           
  4815                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  4816  0022D8  0E00               	movlw	0
  4817  0022DA  0100               	movlb	0	; () banked
  4818  0022DC  6F85               	movwf	(fputc@c+1)& (0+255),b
  4819  0022DE  0E25               	movlw	37
  4820  0022E0  6F84               	movwf	fputc@c& (0+255),b
  4821  0022E2  C0C3  F086         	movff	vfpfcnvrt@fp,fputc@fp
  4822  0022E6  C0C4  F087         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4823  0022EA  ECA9  F018         	call	_fputc	;wreg free
  4824  0022EE                     l4538:
  4825                           
  4826                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  4827  0022EE  0E00               	movlw	0
  4828  0022F0  0100               	movlb	0	; () banked
  4829  0022F2  6FC4               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  4830  0022F4  0E01               	movlw	1
  4831  0022F6  6FC3               	movwf	?_vfpfcnvrt& (0+255),b
  4832  0022F8  0012               	return	
  4833  0022FA                     l4542:
  4834                           
  4835                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  4836  0022FA  C0C5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4837  0022FE  C0C6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4838  002302  2ADE               	incf	postinc2,f,c
  4839  002304  0E00               	movlw	0
  4840  002306  22DD               	addwfc	postdec2,f,c
  4841                           
  4842                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  4843  002308  0E00               	movlw	0
  4844  00230A  0100               	movlb	0	; () banked
  4845  00230C  6FC4               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  4846  00230E  0E00               	movlw	0
  4847  002310  6FC3               	movwf	?_vfpfcnvrt& (0+255),b
  4848  002312  0012               	return	
  4849  002314                     l4548:
  4850                           
  4851                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  4852  002314  C0C5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4853  002318  C0C6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4854  00231C  CFDE FFF6          	movff	postinc2,tblptrl
  4855  002320  CFDD FFF7          	movff	postdec2,tblptrh
  4856  002324                     	if	0	;tblptru may be non-zero
  4857  002324                     	endif
  4858  002324                     	if	0	;tblptru may be non-zero
  4859  002324                     	endif
  4860  002324  0008               	tblrd		*
  4861  002326  50F5               	movf	tablat,w,c
  4862  002328  0100               	movlb	0	; () banked
  4863  00232A  6F84               	movwf	fputc@c& (0+255),b
  4864  00232C  6B85               	clrf	(fputc@c+1)& (0+255),b
  4865  00232E  C0C3  F086         	movff	vfpfcnvrt@fp,fputc@fp
  4866  002332  C0C4  F087         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4867  002336  ECA9  F018         	call	_fputc	;wreg free
  4868                           
  4869                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  4870  00233A  C0C5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4871  00233E  C0C6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4872  002342  2ADE               	incf	postinc2,f,c
  4873  002344  0E00               	movlw	0
  4874  002346  22DD               	addwfc	postdec2,f,c
  4875  002348  D7D2               	goto	l4538
  4876  00234A                     __end_of_vfpfcnvrt:
  4877                           	opt callstack 0
  4878                           
  4879 ;; *************** function _dtoa *****************
  4880 ;; Defined at:
  4881 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4882 ;; Parameters:    Size  Location     Type
  4883 ;;  fp              2   31[BANK0 ] PTR struct _IO_FILE
  4884 ;;		 -> NULL(0), 
  4885 ;;  d               8   33[BANK0 ] long long 
  4886 ;; Auto vars:     Size  Location     Type
  4887 ;;  n               8   57[BANK0 ] long long 
  4888 ;;  i               2   65[BANK0 ] int 
  4889 ;;  s               2   55[BANK0 ] int 
  4890 ;;  w               2   53[BANK0 ] int 
  4891 ;;  p               2   51[BANK0 ] int 
  4892 ;; Return value:  Size  Location     Type
  4893 ;;                  2   31[BANK0 ] int 
  4894 ;; Registers used:
  4895 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4896 ;; Tracked objects:
  4897 ;;		On entry : 0/0
  4898 ;;		On exit  : 0/0
  4899 ;;		Unchanged: 0/0
  4900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4901 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4902 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4903 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4904 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4905 ;;Total ram usage:       36 bytes
  4906 ;; Hardware stack levels used:    1
  4907 ;; Hardware stack levels required when called:   10
  4908 ;; This function calls:
  4909 ;;		___aodiv
  4910 ;;		___aomod
  4911 ;;		_abs
  4912 ;;		_pad
  4913 ;; This function is called by:
  4914 ;;		_vfpfcnvrt
  4915 ;; This function uses a non-reentrant model
  4916 ;;
  4917                           
  4918                           	psect	text16
  4919  001BEE                     __ptext16:
  4920                           	opt callstack 0
  4921  001BEE                     _dtoa:
  4922                           	opt callstack 16
  4923                           
  4924                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  4925                           
  4926                           ;incstack = 0
  4927  001BEE  C0A1  F0B9         	movff	dtoa@d,dtoa@n
  4928  001BF2  C0A2  F0BA         	movff	dtoa@d+1,dtoa@n+1
  4929  001BF6  C0A3  F0BB         	movff	dtoa@d+2,dtoa@n+2
  4930  001BFA  C0A4  F0BC         	movff	dtoa@d+3,dtoa@n+3
  4931  001BFE  C0A5  F0BD         	movff	dtoa@d+4,dtoa@n+4
  4932  001C02  C0A6  F0BE         	movff	dtoa@d+5,dtoa@n+5
  4933  001C06  C0A7  F0BF         	movff	dtoa@d+6,dtoa@n+6
  4934  001C0A  C0A8  F0C0         	movff	dtoa@d+7,dtoa@n+7
  4935                           
  4936                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  4937  001C0E  0100               	movlb	0	; () banked
  4938  001C10  AFC0               	btfss	(dtoa@n+7)& (0+255),7,b
  4939  001C12  D002               	goto	u4540
  4940  001C14  0E01               	movlw	1
  4941  001C16  D001               	goto	u4550
  4942  001C18                     u4540:
  4943  001C18  0E00               	movlw	0
  4944  001C1A                     u4550:
  4945  001C1A  6FB7               	movwf	dtoa@s& (0+255),b
  4946  001C1C  6BB8               	clrf	(dtoa@s+1)& (0+255),b
  4947                           
  4948                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  4949  001C1E  51B7               	movf	dtoa@s& (0+255),w,b
  4950  001C20  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
  4951  001C22  B4D8               	btfsc	status,2,c
  4952  001C24  D010               	goto	l4458
  4953                           
  4954                           ; BSR set to: 0
  4955                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  4956  001C26  1FC0               	comf	(dtoa@n+7)& (0+255),f,b
  4957  001C28  1FBF               	comf	(dtoa@n+6)& (0+255),f,b
  4958  001C2A  1FBE               	comf	(dtoa@n+5)& (0+255),f,b
  4959  001C2C  1FBD               	comf	(dtoa@n+4)& (0+255),f,b
  4960  001C2E  1FBC               	comf	(dtoa@n+3)& (0+255),f,b
  4961  001C30  1FBB               	comf	(dtoa@n+2)& (0+255),f,b
  4962  001C32  1FBA               	comf	(dtoa@n+1)& (0+255),f,b
  4963  001C34  6DB9               	negf	dtoa@n& (0+255),b
  4964  001C36  0E00               	movlw	0
  4965  001C38  23BA               	addwfc	(dtoa@n+1)& (0+255),f,b
  4966  001C3A  23BB               	addwfc	(dtoa@n+2)& (0+255),f,b
  4967  001C3C  23BC               	addwfc	(dtoa@n+3)& (0+255),f,b
  4968  001C3E  23BD               	addwfc	(dtoa@n+4)& (0+255),f,b
  4969  001C40  23BE               	addwfc	(dtoa@n+5)& (0+255),f,b
  4970  001C42  23BF               	addwfc	(dtoa@n+6)& (0+255),f,b
  4971  001C44  23C0               	addwfc	(dtoa@n+7)& (0+255),f,b
  4972  001C46                     l4458:
  4973                           
  4974                           ; BSR set to: 0
  4975                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  4976  001C46  AE50               	btfss	_prec+1,7,c
  4977                           
  4978                           ; BSR set to: 0
  4979                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  4980  001C48  93FD               	bcf	_flags& (0+255),1,b
  4981                           
  4982                           ; BSR set to: 0
  4983                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  4984  001C4A  BE50               	btfsc	_prec+1,7,c
  4985  001C4C  D005               	goto	u4580
  4986  001C4E  5050               	movf	_prec+1,w,c
  4987  001C50  E108               	bnz	l458
  4988  001C52  044F               	decf	_prec,w,c
  4989  001C54  B0D8               	btfsc	status,0,c
  4990  001C56  D005               	goto	l458
  4991  001C58                     u4580:
  4992                           
  4993                           ; BSR set to: 0
  4994  001C58  0E00               	movlw	0
  4995  001C5A  6FB4               	movwf	(dtoa@p+1)& (0+255),b
  4996  001C5C  0E01               	movlw	1
  4997  001C5E  6FB3               	movwf	dtoa@p& (0+255),b
  4998  001C60  D004               	goto	l460
  4999  001C62                     l458:
  5000                           
  5001                           ; BSR set to: 0
  5002  001C62  C04F  F0B3         	movff	_prec,dtoa@p
  5003  001C66  C050  F0B4         	movff	_prec+1,dtoa@p+1
  5004  001C6A                     l460:
  5005                           
  5006                           ; BSR set to: 0
  5007                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  5008  001C6A  C04D  F0B5         	movff	_width,dtoa@w
  5009  001C6E  C04E  F0B6         	movff	_width+1,dtoa@w+1
  5010                           
  5011                           ; BSR set to: 0
  5012                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  5013  001C72  51B7               	movf	dtoa@s& (0+255),w,b
  5014  001C74  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
  5015  001C76  A4D8               	btfss	status,2,c
  5016  001C78  D002               	goto	u4600
  5017                           
  5018                           ; BSR set to: 0
  5019  001C7A  A5FD               	btfss	_flags& (0+255),2,b
  5020  001C7C  D003               	goto	l4472
  5021  001C7E                     u4600:
  5022                           
  5023                           ; BSR set to: 0
  5024                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  5025  001C7E  07B5               	decf	dtoa@w& (0+255),f,b
  5026  001C80  A0D8               	btfss	status,0,c
  5027  001C82  07B6               	decf	(dtoa@w+1)& (0+255),f,b
  5028  001C84                     l4472:
  5029                           
  5030                           ; BSR set to: 0
  5031                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  5032  001C84  0E00               	movlw	0
  5033  001C86  6FC2               	movwf	(dtoa@i+1)& (0+255),b
  5034  001C88  0E1F               	movlw	31
  5035  001C8A  6FC1               	movwf	dtoa@i& (0+255),b
  5036                           
  5037                           ; BSR set to: 0
  5038                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  5039  001C8C  0E00               	movlw	0
  5040  001C8E  0101               	movlb	1	; () banked
  5041  001C90  6F4F               	movwf	(_dbuf+31)& (0+255),b
  5042                           
  5043                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5044  001C92  D07D               	goto	l4486
  5045  001C94                     l4476:
  5046                           
  5047                           ; BSR set to: 0
  5048                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  5049  001C94  07C1               	decf	dtoa@i& (0+255),f,b
  5050  001C96  A0D8               	btfss	status,0,c
  5051  001C98  07C2               	decf	(dtoa@i+1)& (0+255),f,b
  5052                           
  5053                           ; BSR set to: 0
  5054                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  5055  001C9A  0E30               	movlw	low _dbuf
  5056  001C9C  25C1               	addwf	dtoa@i& (0+255),w,b
  5057  001C9E  6ED9               	movwf	fsr2l,c
  5058  001CA0  0E01               	movlw	high _dbuf
  5059  001CA2  21C2               	addwfc	(dtoa@i+1)& (0+255),w,b
  5060  001CA4  6EDA               	movwf	fsr2h,c
  5061  001CA6  C0B9  F080         	movff	dtoa@n,___aomod@dividend
  5062  001CAA  C0BA  F081         	movff	dtoa@n+1,___aomod@dividend+1
  5063  001CAE  C0BB  F082         	movff	dtoa@n+2,___aomod@dividend+2
  5064  001CB2  C0BC  F083         	movff	dtoa@n+3,___aomod@dividend+3
  5065  001CB6  C0BD  F084         	movff	dtoa@n+4,___aomod@dividend+4
  5066  001CBA  C0BE  F085         	movff	dtoa@n+5,___aomod@dividend+5
  5067  001CBE  C0BF  F086         	movff	dtoa@n+6,___aomod@dividend+6
  5068  001CC2  C0C0  F087         	movff	dtoa@n+7,___aomod@dividend+7
  5069  001CC6  0E0A               	movlw	10
  5070  001CC8  6F88               	movwf	___aomod@divisor& (0+255),b
  5071  001CCA  0E00               	movlw	0
  5072  001CCC  6F89               	movwf	(___aomod@divisor+1)& (0+255),b
  5073  001CCE  0E00               	movlw	0
  5074  001CD0  6F8A               	movwf	(___aomod@divisor+2)& (0+255),b
  5075  001CD2  0E00               	movlw	0
  5076  001CD4  6F8B               	movwf	(___aomod@divisor+3)& (0+255),b
  5077  001CD6  0E00               	movlw	0
  5078  001CD8  6F8C               	movwf	(___aomod@divisor+4)& (0+255),b
  5079  001CDA  0E00               	movlw	0
  5080  001CDC  6F8D               	movwf	(___aomod@divisor+5)& (0+255),b
  5081  001CDE  0E00               	movlw	0
  5082  001CE0  6F8E               	movwf	(___aomod@divisor+6)& (0+255),b
  5083  001CE2  0E00               	movlw	0
  5084  001CE4  6F8F               	movwf	(___aomod@divisor+7)& (0+255),b
  5085  001CE6  EC34  F014         	call	___aomod	;wreg free
  5086  001CEA  C080  F0A9         	movff	?___aomod,??_dtoa
  5087  001CEE  C081  F0AA         	movff	?___aomod+1,??_dtoa+1
  5088  001CF2  C082  F0AB         	movff	?___aomod+2,??_dtoa+2
  5089  001CF6  C083  F0AC         	movff	?___aomod+3,??_dtoa+3
  5090  001CFA  C084  F0AD         	movff	?___aomod+4,??_dtoa+4
  5091  001CFE  C085  F0AE         	movff	?___aomod+5,??_dtoa+5
  5092  001D02  C086  F0AF         	movff	?___aomod+6,??_dtoa+6
  5093  001D06  C087  F0B0         	movff	?___aomod+7,??_dtoa+7
  5094  001D0A  C0A9  F092         	movff	??_dtoa,abs@a
  5095  001D0E  C0AB  F093         	movff	??_dtoa+2,abs@a+1
  5096  001D12  EC7B  F019         	call	_abs	;wreg free
  5097  001D16  0100               	movlb	0	; () banked
  5098  001D18  5192               	movf	?_abs& (0+255),w,b
  5099  001D1A  0F30               	addlw	48
  5100  001D1C  6EDF               	movwf	indf2,c
  5101                           
  5102                           ; BSR set to: 0
  5103                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  5104  001D1E  07B3               	decf	dtoa@p& (0+255),f,b
  5105  001D20  A0D8               	btfss	status,0,c
  5106  001D22  07B4               	decf	(dtoa@p+1)& (0+255),f,b
  5107                           
  5108                           ; BSR set to: 0
  5109                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  5110  001D24  07B5               	decf	dtoa@w& (0+255),f,b
  5111  001D26  A0D8               	btfss	status,0,c
  5112  001D28  07B6               	decf	(dtoa@w+1)& (0+255),f,b
  5113                           
  5114                           ; BSR set to: 0
  5115                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  5116  001D2A  C0B9  F080         	movff	dtoa@n,___aodiv@dividend
  5117  001D2E  C0BA  F081         	movff	dtoa@n+1,___aodiv@dividend+1
  5118  001D32  C0BB  F082         	movff	dtoa@n+2,___aodiv@dividend+2
  5119  001D36  C0BC  F083         	movff	dtoa@n+3,___aodiv@dividend+3
  5120  001D3A  C0BD  F084         	movff	dtoa@n+4,___aodiv@dividend+4
  5121  001D3E  C0BE  F085         	movff	dtoa@n+5,___aodiv@dividend+5
  5122  001D42  C0BF  F086         	movff	dtoa@n+6,___aodiv@dividend+6
  5123  001D46  C0C0  F087         	movff	dtoa@n+7,___aodiv@dividend+7
  5124  001D4A  0E0A               	movlw	10
  5125  001D4C  6F88               	movwf	___aodiv@divisor& (0+255),b
  5126  001D4E  0E00               	movlw	0
  5127  001D50  6F89               	movwf	(___aodiv@divisor+1)& (0+255),b
  5128  001D52  0E00               	movlw	0
  5129  001D54  6F8A               	movwf	(___aodiv@divisor+2)& (0+255),b
  5130  001D56  0E00               	movlw	0
  5131  001D58  6F8B               	movwf	(___aodiv@divisor+3)& (0+255),b
  5132  001D5A  0E00               	movlw	0
  5133  001D5C  6F8C               	movwf	(___aodiv@divisor+4)& (0+255),b
  5134  001D5E  0E00               	movlw	0
  5135  001D60  6F8D               	movwf	(___aodiv@divisor+5)& (0+255),b
  5136  001D62  0E00               	movlw	0
  5137  001D64  6F8E               	movwf	(___aodiv@divisor+6)& (0+255),b
  5138  001D66  0E00               	movlw	0
  5139  001D68  6F8F               	movwf	(___aodiv@divisor+7)& (0+255),b
  5140  001D6A  EC4D  F012         	call	___aodiv	;wreg free
  5141  001D6E  C080  F0B9         	movff	?___aodiv,dtoa@n
  5142  001D72  C081  F0BA         	movff	?___aodiv+1,dtoa@n+1
  5143  001D76  C082  F0BB         	movff	?___aodiv+2,dtoa@n+2
  5144  001D7A  C083  F0BC         	movff	?___aodiv+3,dtoa@n+3
  5145  001D7E  C084  F0BD         	movff	?___aodiv+4,dtoa@n+4
  5146  001D82  C085  F0BE         	movff	?___aodiv+5,dtoa@n+5
  5147  001D86  C086  F0BF         	movff	?___aodiv+6,dtoa@n+6
  5148  001D8A  C087  F0C0         	movff	?___aodiv+7,dtoa@n+7
  5149  001D8E                     l4486:
  5150                           
  5151                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5152  001D8E  0100               	movlb	0	; () banked
  5153  001D90  BFC2               	btfsc	(dtoa@i+1)& (0+255),7,b
  5154  001D92  D01F               	goto	u4650
  5155  001D94  51C2               	movf	(dtoa@i+1)& (0+255),w,b
  5156  001D96  E103               	bnz	u4610
  5157  001D98  05C1               	decf	dtoa@i& (0+255),w,b
  5158  001D9A  A0D8               	btfss	status,0,c
  5159  001D9C  D01A               	goto	u4650
  5160  001D9E                     u4610:
  5161                           
  5162                           ; BSR set to: 0
  5163  001D9E  51B9               	movf	dtoa@n& (0+255),w,b
  5164  001DA0  11BA               	iorwf	(dtoa@n+1)& (0+255),w,b
  5165  001DA2  11BB               	iorwf	(dtoa@n+2)& (0+255),w,b
  5166  001DA4  11BC               	iorwf	(dtoa@n+3)& (0+255),w,b
  5167  001DA6  11BD               	iorwf	(dtoa@n+4)& (0+255),w,b
  5168  001DA8  11BE               	iorwf	(dtoa@n+5)& (0+255),w,b
  5169  001DAA  11BF               	iorwf	(dtoa@n+6)& (0+255),w,b
  5170  001DAC  11C0               	iorwf	(dtoa@n+7)& (0+255),w,b
  5171  001DAE  A4D8               	btfss	status,2,c
  5172  001DB0  D771               	goto	l4476
  5173                           
  5174                           ; BSR set to: 0
  5175  001DB2  BFB4               	btfsc	(dtoa@p+1)& (0+255),7,b
  5176  001DB4  D005               	goto	u4630
  5177  001DB6  51B4               	movf	(dtoa@p+1)& (0+255),w,b
  5178  001DB8  E102               	bnz	u4631
  5179  001DBA  05B3               	decf	dtoa@p& (0+255),w,b
  5180  001DBC  B0D8               	btfsc	status,0,c
  5181  001DBE                     u4631:
  5182  001DBE  D76A               	goto	l4476
  5183  001DC0                     u4630:
  5184                           
  5185                           ; BSR set to: 0
  5186  001DC0  BFB6               	btfsc	(dtoa@w+1)& (0+255),7,b
  5187  001DC2  D007               	goto	u4650
  5188  001DC4  51B6               	movf	(dtoa@w+1)& (0+255),w,b
  5189  001DC6  E103               	bnz	u4640
  5190  001DC8  05B5               	decf	dtoa@w& (0+255),w,b
  5191  001DCA  A0D8               	btfss	status,0,c
  5192  001DCC  D002               	goto	u4650
  5193  001DCE                     u4640:
  5194                           
  5195                           ; BSR set to: 0
  5196  001DCE  B3FD               	btfsc	_flags& (0+255),1,b
  5197  001DD0  D761               	goto	l4476
  5198  001DD2                     u4650:
  5199                           
  5200                           ; BSR set to: 0
  5201                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  5202  001DD2  51B7               	movf	dtoa@s& (0+255),w,b
  5203  001DD4  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
  5204  001DD6  A4D8               	btfss	status,2,c
  5205  001DD8  D002               	goto	u4670
  5206                           
  5207                           ; BSR set to: 0
  5208  001DDA  A5FD               	btfss	_flags& (0+255),2,b
  5209  001DDC  D017               	goto	l4510
  5210  001DDE                     u4670:
  5211                           
  5212                           ; BSR set to: 0
  5213                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  5214  001DDE  07C1               	decf	dtoa@i& (0+255),f,b
  5215  001DE0  A0D8               	btfss	status,0,c
  5216  001DE2  07C2               	decf	(dtoa@i+1)& (0+255),f,b
  5217                           
  5218                           ; BSR set to: 0
  5219                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  5220  001DE4  51B7               	movf	dtoa@s& (0+255),w,b
  5221  001DE6  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
  5222  001DE8  A4D8               	btfss	status,2,c
  5223  001DEA  D004               	goto	l4506
  5224                           
  5225                           ; BSR set to: 0
  5226  001DEC  0E00               	movlw	0
  5227  001DEE  6FB2               	movwf	(_dtoa$794+1)& (0+255),b
  5228  001DF0  0E2B               	movlw	43
  5229  001DF2  D003               	goto	L3
  5230  001DF4                     l4506:
  5231                           
  5232                           ; BSR set to: 0
  5233  001DF4  0E00               	movlw	0
  5234  001DF6  6FB2               	movwf	(_dtoa$794+1)& (0+255),b
  5235  001DF8  0E2D               	movlw	45
  5236  001DFA                     L3:
  5237  001DFA  6FB1               	movwf	_dtoa$794& (0+255),b
  5238                           
  5239                           ; BSR set to: 0
  5240  001DFC  0E30               	movlw	low _dbuf
  5241  001DFE  25C1               	addwf	dtoa@i& (0+255),w,b
  5242  001E00  6ED9               	movwf	fsr2l,c
  5243  001E02  0E01               	movlw	high _dbuf
  5244  001E04  21C2               	addwfc	(dtoa@i+1)& (0+255),w,b
  5245  001E06  6EDA               	movwf	fsr2h,c
  5246  001E08  C0B1  FFDF         	movff	_dtoa$794,indf2
  5247  001E0C                     l4510:
  5248                           
  5249                           ; BSR set to: 0
  5250                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  5251  001E0C  C09F  F094         	movff	dtoa@fp,pad@fp
  5252  001E10  C0A0  F095         	movff	dtoa@fp+1,pad@fp+1
  5253  001E14  0E30               	movlw	low _dbuf
  5254  001E16  25C1               	addwf	dtoa@i& (0+255),w,b
  5255  001E18  6F96               	movwf	pad@buf& (0+255),b
  5256  001E1A  0E01               	movlw	high _dbuf
  5257  001E1C  21C2               	addwfc	(dtoa@i+1)& (0+255),w,b
  5258  001E1E  6F97               	movwf	(pad@buf+1)& (0+255),b
  5259  001E20  C0B5  F098         	movff	dtoa@w,pad@p
  5260  001E24  C0B6  F099         	movff	dtoa@w+1,pad@p+1
  5261  001E28  EC13  F017         	call	_pad	;wreg free
  5262  001E2C  C094  F09F         	movff	?_pad,?_dtoa
  5263  001E30  C095  F0A0         	movff	?_pad+1,?_dtoa+1
  5264  001E34  0012               	return		;funcret
  5265  001E36                     __end_of_dtoa:
  5266                           	opt callstack 0
  5267                           
  5268 ;; *************** function _pad *****************
  5269 ;; Defined at:
  5270 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5271 ;; Parameters:    Size  Location     Type
  5272 ;;  fp              2   20[BANK0 ] PTR struct _IO_FILE
  5273 ;;		 -> NULL(0), 
  5274 ;;  buf             2   22[BANK0 ] PTR unsigned char 
  5275 ;;		 -> dbuf(32), 
  5276 ;;  p               2   24[BANK0 ] int 
  5277 ;; Auto vars:     Size  Location     Type
  5278 ;;  w               2   29[BANK0 ] int 
  5279 ;;  i               2   27[BANK0 ] int 
  5280 ;; Return value:  Size  Location     Type
  5281 ;;                  2   20[BANK0 ] int 
  5282 ;; Registers used:
  5283 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5284 ;; Tracked objects:
  5285 ;;		On entry : 0/0
  5286 ;;		On exit  : 0/0
  5287 ;;		Unchanged: 0/0
  5288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5289 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5290 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5291 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5292 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5293 ;;Total ram usage:       11 bytes
  5294 ;; Hardware stack levels used:    1
  5295 ;; Hardware stack levels required when called:    9
  5296 ;; This function calls:
  5297 ;;		_fputc
  5298 ;;		_fputs
  5299 ;;		_strlen
  5300 ;; This function is called by:
  5301 ;;		_dtoa
  5302 ;; This function uses a non-reentrant model
  5303 ;;
  5304                           
  5305                           	psect	text17
  5306  002E26                     __ptext17:
  5307                           	opt callstack 0
  5308  002E26                     _pad:
  5309                           	opt callstack 16
  5310                           
  5311                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  5312                           
  5313                           ;incstack = 0
  5314  002E26  0100               	movlb	0	; () banked
  5315  002E28  A1FD               	btfss	_flags& (0+255),0,b
  5316  002E2A  D00A               	goto	l4354
  5317                           
  5318                           ; BSR set to: 0
  5319                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  5320  002E2C  C096  F08D         	movff	pad@buf,fputs@s
  5321  002E30  C097  F08E         	movff	pad@buf+1,fputs@s+1
  5322  002E34  C094  F08F         	movff	pad@fp,fputs@fp
  5323  002E38  C095  F090         	movff	pad@fp+1,fputs@fp+1
  5324  002E3C  EC5D  F019         	call	_fputs	;wreg free
  5325  002E40                     l4354:
  5326                           
  5327                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  5328  002E40  0100               	movlb	0	; () banked
  5329  002E42  BF99               	btfsc	(pad@p+1)& (0+255),7,b
  5330  002E44  D005               	goto	l4358
  5331                           
  5332                           ; BSR set to: 0
  5333  002E46  C098  F09D         	movff	pad@p,pad@w
  5334  002E4A  C099  F09E         	movff	pad@p+1,pad@w+1
  5335  002E4E  D004               	goto	l447
  5336  002E50                     l4358:
  5337                           
  5338                           ; BSR set to: 0
  5339  002E50  0E00               	movlw	0
  5340  002E52  6F9E               	movwf	(pad@w+1)& (0+255),b
  5341  002E54  0E00               	movlw	0
  5342  002E56  6F9D               	movwf	pad@w& (0+255),b
  5343  002E58                     l447:
  5344                           
  5345                           ; BSR set to: 0
  5346                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  5347  002E58  0E00               	movlw	0
  5348  002E5A  6F9C               	movwf	(pad@i+1)& (0+255),b
  5349  002E5C  0E00               	movlw	0
  5350  002E5E  6F9B               	movwf	pad@i& (0+255),b
  5351                           
  5352                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5353  002E60  D00D               	goto	l4364
  5354  002E62                     l4360:
  5355                           
  5356                           ; BSR set to: 0
  5357                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  5358  002E62  0E00               	movlw	0
  5359  002E64  6F85               	movwf	(fputc@c+1)& (0+255),b
  5360  002E66  0E20               	movlw	32
  5361  002E68  6F84               	movwf	fputc@c& (0+255),b
  5362  002E6A  C094  F086         	movff	pad@fp,fputc@fp
  5363  002E6E  C095  F087         	movff	pad@fp+1,fputc@fp+1
  5364  002E72  ECA9  F018         	call	_fputc	;wreg free
  5365                           
  5366                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  5367  002E76  0100               	movlb	0	; () banked
  5368  002E78  4B9B               	infsnz	pad@i& (0+255),f,b
  5369  002E7A  2B9C               	incf	(pad@i+1)& (0+255),f,b
  5370  002E7C                     l4364:
  5371                           
  5372                           ; BSR set to: 0
  5373                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5374  002E7C  519D               	movf	pad@w& (0+255),w,b
  5375  002E7E  5D9B               	subwf	pad@i& (0+255),w,b
  5376  002E80  519C               	movf	(pad@i+1)& (0+255),w,b
  5377  002E82  0A80               	xorlw	128
  5378  002E84  6F9A               	movwf	??_pad& (0+255),b
  5379  002E86  519E               	movf	(pad@w+1)& (0+255),w,b
  5380  002E88  0A80               	xorlw	128
  5381  002E8A  599A               	subwfb	??_pad& (0+255),w,b
  5382  002E8C  A0D8               	btfss	status,0,c
  5383  002E8E  D7E9               	goto	l4360
  5384                           
  5385                           ; BSR set to: 0
  5386                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  5387  002E90  B1FD               	btfsc	_flags& (0+255),0,b
  5388  002E92  D00A               	goto	l4368
  5389                           
  5390                           ; BSR set to: 0
  5391                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  5392  002E94  C096  F08D         	movff	pad@buf,fputs@s
  5393  002E98  C097  F08E         	movff	pad@buf+1,fputs@s+1
  5394  002E9C  C094  F08F         	movff	pad@fp,fputs@fp
  5395  002EA0  C095  F090         	movff	pad@fp+1,fputs@fp+1
  5396  002EA4  EC5D  F019         	call	_fputs	;wreg free
  5397  002EA8                     l4368:
  5398                           
  5399                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  5400  002EA8  C096  F080         	movff	pad@buf,strlen@s
  5401  002EAC  C097  F081         	movff	pad@buf+1,strlen@s+1
  5402  002EB0  ECC6  F019         	call	_strlen	;wreg free
  5403  002EB4  0100               	movlb	0	; () banked
  5404  002EB6  519D               	movf	pad@w& (0+255),w,b
  5405  002EB8  2580               	addwf	?_strlen& (0+255),w,b
  5406  002EBA  6F94               	movwf	?_pad& (0+255),b
  5407  002EBC  519E               	movf	(pad@w+1)& (0+255),w,b
  5408  002EBE  2181               	addwfc	(?_strlen+1)& (0+255),w,b
  5409  002EC0  6F95               	movwf	(?_pad+1)& (0+255),b
  5410                           
  5411                           ; BSR set to: 0
  5412  002EC2  0012               	return		;funcret
  5413  002EC4                     __end_of_pad:
  5414                           	opt callstack 0
  5415                           
  5416 ;; *************** function _strlen *****************
  5417 ;; Defined at:
  5418 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  5419 ;; Parameters:    Size  Location     Type
  5420 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  5421 ;;		 -> dbuf(32), 
  5422 ;; Auto vars:     Size  Location     Type
  5423 ;;  a               2    2[BANK0 ] PTR const unsigned char 
  5424 ;;		 -> dbuf(32), 
  5425 ;; Return value:  Size  Location     Type
  5426 ;;                  2    0[BANK0 ] unsigned int 
  5427 ;; Registers used:
  5428 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5429 ;; Tracked objects:
  5430 ;;		On entry : 0/0
  5431 ;;		On exit  : 0/0
  5432 ;;		Unchanged: 0/0
  5433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5434 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5435 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5437 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5438 ;;Total ram usage:        4 bytes
  5439 ;; Hardware stack levels used:    1
  5440 ;; Hardware stack levels required when called:    3
  5441 ;; This function calls:
  5442 ;;		Nothing
  5443 ;; This function is called by:
  5444 ;;		_pad
  5445 ;; This function uses a non-reentrant model
  5446 ;;
  5447                           
  5448                           	psect	text18
  5449  00338C                     __ptext18:
  5450                           	opt callstack 0
  5451  00338C                     _strlen:
  5452                           	opt callstack 21
  5453                           
  5454                           ; BSR set to: 0
  5455                           ;incstack = 0
  5456  00338C  C080  F082         	movff	strlen@s,strlen@a
  5457  003390  C081  F083         	movff	strlen@s+1,strlen@a+1
  5458  003394  D003               	goto	l4340
  5459  003396                     l4338:
  5460  003396  0100               	movlb	0	; () banked
  5461  003398  4B80               	infsnz	strlen@s& (0+255),f,b
  5462  00339A  2B81               	incf	(strlen@s+1)& (0+255),f,b
  5463  00339C                     l4340:
  5464  00339C  C080  FFD9         	movff	strlen@s,fsr2l
  5465  0033A0  C081  FFDA         	movff	strlen@s+1,fsr2h
  5466  0033A4  50DF               	movf	indf2,w,c
  5467  0033A6  A4D8               	btfss	status,2,c
  5468  0033A8  D7F6               	goto	l4338
  5469  0033AA  0100               	movlb	0	; () banked
  5470  0033AC  5182               	movf	strlen@a& (0+255),w,b
  5471  0033AE  5D80               	subwf	strlen@s& (0+255),w,b
  5472  0033B0  6F80               	movwf	?_strlen& (0+255),b
  5473  0033B2  5183               	movf	(strlen@a+1)& (0+255),w,b
  5474  0033B4  5981               	subwfb	(strlen@s+1)& (0+255),w,b
  5475  0033B6  6F81               	movwf	(?_strlen+1)& (0+255),b
  5476                           
  5477                           ; BSR set to: 0
  5478  0033B8  0012               	return		;funcret
  5479  0033BA                     __end_of_strlen:
  5480                           	opt callstack 0
  5481                           
  5482 ;; *************** function _fputs *****************
  5483 ;; Defined at:
  5484 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  5485 ;; Parameters:    Size  Location     Type
  5486 ;;  s               2   13[BANK0 ] PTR const unsigned char 
  5487 ;;		 -> dbuf(32), 
  5488 ;;  fp              2   15[BANK0 ] PTR struct _IO_FILE
  5489 ;;		 -> NULL(0), 
  5490 ;; Auto vars:     Size  Location     Type
  5491 ;;  i               2   18[BANK0 ] int 
  5492 ;;  c               1   17[BANK0 ] unsigned char 
  5493 ;; Return value:  Size  Location     Type
  5494 ;;                  2   13[BANK0 ] int 
  5495 ;; Registers used:
  5496 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5497 ;; Tracked objects:
  5498 ;;		On entry : 0/0
  5499 ;;		On exit  : 0/0
  5500 ;;		Unchanged: 0/0
  5501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5502 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5503 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5505 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5506 ;;Total ram usage:        7 bytes
  5507 ;; Hardware stack levels used:    1
  5508 ;; Hardware stack levels required when called:    8
  5509 ;; This function calls:
  5510 ;;		_fputc
  5511 ;; This function is called by:
  5512 ;;		_pad
  5513 ;; This function uses a non-reentrant model
  5514 ;;
  5515                           
  5516                           	psect	text19
  5517  0032BA                     __ptext19:
  5518                           	opt callstack 0
  5519  0032BA                     _fputs:
  5520                           	opt callstack 16
  5521                           
  5522                           ; BSR set to: 0
  5523                           ;incstack = 0
  5524  0032BA  0E00               	movlw	0
  5525  0032BC  0100               	movlb	0	; () banked
  5526  0032BE  6F93               	movwf	(fputs@i+1)& (0+255),b
  5527  0032C0  0E00               	movlw	0
  5528  0032C2  6F92               	movwf	fputs@i& (0+255),b
  5529  0032C4  D00C               	goto	l4334
  5530  0032C6                     l4330:
  5531                           
  5532                           ; BSR set to: 0
  5533  0032C6  C091  F084         	movff	fputs@c,fputc@c
  5534  0032CA  6B85               	clrf	(fputc@c+1)& (0+255),b
  5535  0032CC  C08F  F086         	movff	fputs@fp,fputc@fp
  5536  0032D0  C090  F087         	movff	fputs@fp+1,fputc@fp+1
  5537  0032D4  ECA9  F018         	call	_fputc	;wreg free
  5538  0032D8  0100               	movlb	0	; () banked
  5539  0032DA  4B92               	infsnz	fputs@i& (0+255),f,b
  5540  0032DC  2B93               	incf	(fputs@i+1)& (0+255),f,b
  5541  0032DE                     l4334:
  5542                           
  5543                           ; BSR set to: 0
  5544  0032DE  5192               	movf	fputs@i& (0+255),w,b
  5545  0032E0  258D               	addwf	fputs@s& (0+255),w,b
  5546  0032E2  6ED9               	movwf	fsr2l,c
  5547  0032E4  5193               	movf	(fputs@i+1)& (0+255),w,b
  5548  0032E6  218E               	addwfc	(fputs@s+1)& (0+255),w,b
  5549  0032E8  6EDA               	movwf	fsr2h,c
  5550  0032EA  50DF               	movf	indf2,w,c
  5551  0032EC  6F91               	movwf	fputs@c& (0+255),b
  5552  0032EE  5191               	movf	fputs@c& (0+255),w,b
  5553  0032F0  B4D8               	btfsc	status,2,c
  5554  0032F2  0012               	return	
  5555  0032F4  D7E8               	goto	l4330
  5556  0032F6                     __end_of_fputs:
  5557                           	opt callstack 0
  5558                           
  5559 ;; *************** function _fputc *****************
  5560 ;; Defined at:
  5561 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  5562 ;; Parameters:    Size  Location     Type
  5563 ;;  c               2    4[BANK0 ] int 
  5564 ;;  fp              2    6[BANK0 ] PTR struct _IO_FILE
  5565 ;;		 -> NULL(0), 
  5566 ;; Auto vars:     Size  Location     Type
  5567 ;;		None
  5568 ;; Return value:  Size  Location     Type
  5569 ;;                  2    4[BANK0 ] int 
  5570 ;; Registers used:
  5571 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5572 ;; Tracked objects:
  5573 ;;		On entry : 0/0
  5574 ;;		On exit  : 0/0
  5575 ;;		Unchanged: 0/0
  5576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5577 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5579 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5580 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5581 ;;Total ram usage:        9 bytes
  5582 ;; Hardware stack levels used:    1
  5583 ;; Hardware stack levels required when called:    7
  5584 ;; This function calls:
  5585 ;;		_putch
  5586 ;; This function is called by:
  5587 ;;		_pad
  5588 ;;		_vfpfcnvrt
  5589 ;;		_fputs
  5590 ;; This function uses a non-reentrant model
  5591 ;;
  5592                           
  5593                           	psect	text20
  5594  003152                     __ptext20:
  5595                           	opt callstack 0
  5596  003152                     _fputc:
  5597                           	opt callstack 19
  5598                           
  5599                           ; BSR set to: 0
  5600                           ;incstack = 0
  5601  003152  0100               	movlb	0	; () banked
  5602  003154  5186               	movf	fputc@fp& (0+255),w,b
  5603  003156  1187               	iorwf	(fputc@fp+1)& (0+255),w,b
  5604  003158  B4D8               	btfsc	status,2,c
  5605  00315A  D004               	goto	u4310
  5606                           
  5607                           ; BSR set to: 0
  5608  00315C  5186               	movf	fputc@fp& (0+255),w,b
  5609  00315E  1187               	iorwf	(fputc@fp+1)& (0+255),w,b
  5610  003160  A4D8               	btfss	status,2,c
  5611  003162  D004               	goto	l4320
  5612  003164                     u4310:
  5613                           
  5614                           ; BSR set to: 0
  5615  003164  5184               	movf	fputc@c& (0+255),w,b
  5616  003166  EC49  F01A         	call	_putch
  5617  00316A  0012               	return	
  5618  00316C                     l4320:
  5619                           
  5620                           ; BSR set to: 0
  5621  00316C  EE20 F004          	lfsr	2,4
  5622  003170  5186               	movf	fputc@fp& (0+255),w,b
  5623  003172  26D9               	addwf	fsr2l,f,c
  5624  003174  5187               	movf	(fputc@fp+1)& (0+255),w,b
  5625  003176  22DA               	addwfc	fsr2h,f,c
  5626  003178  50DE               	movf	postinc2,w,c
  5627  00317A  10DE               	iorwf	postinc2,w,c
  5628  00317C  B4D8               	btfsc	status,2,c
  5629  00317E  D016               	goto	u4330
  5630                           
  5631                           ; BSR set to: 0
  5632  003180  EE20 F004          	lfsr	2,4
  5633  003184  5186               	movf	fputc@fp& (0+255),w,b
  5634  003186  26D9               	addwf	fsr2l,f,c
  5635  003188  5187               	movf	(fputc@fp+1)& (0+255),w,b
  5636  00318A  22DA               	addwfc	fsr2h,f,c
  5637  00318C  EE10 F002          	lfsr	1,2
  5638  003190  5186               	movf	fputc@fp& (0+255),w,b
  5639  003192  26E1               	addwf	fsr1l,f,c
  5640  003194  5187               	movf	(fputc@fp+1)& (0+255),w,b
  5641  003196  22E2               	addwfc	fsr1h,f,c
  5642  003198  50DE               	movf	postinc2,w,c
  5643  00319A  5CE6               	subwf	postinc1,w,c
  5644  00319C  50E6               	movf	postinc1,w,c
  5645  00319E  0A80               	xorlw	128
  5646  0031A0  6F8C               	movwf	(??_fputc+4)& (0+255),b
  5647  0031A2  50DE               	movf	postinc2,w,c
  5648  0031A4  0A80               	xorlw	128
  5649  0031A6  598C               	subwfb	(??_fputc+4)& (0+255),w,b
  5650  0031A8  B0D8               	btfsc	status,0,c
  5651  0031AA  0012               	return	
  5652  0031AC                     u4330:
  5653                           
  5654                           ; BSR set to: 0
  5655  0031AC  EE20 F002          	lfsr	2,2
  5656  0031B0  5186               	movf	fputc@fp& (0+255),w,b
  5657  0031B2  26D9               	addwf	fsr2l,f,c
  5658  0031B4  5187               	movf	(fputc@fp+1)& (0+255),w,b
  5659  0031B6  22DA               	addwfc	fsr2h,f,c
  5660  0031B8  2ADE               	incf	postinc2,f,c
  5661  0031BA  0E00               	movlw	0
  5662  0031BC  22DD               	addwfc	postdec2,f,c
  5663  0031BE  0012               	return		;funcret
  5664  0031C0                     __end_of_fputc:
  5665                           	opt callstack 0
  5666                           
  5667 ;; *************** function _putch *****************
  5668 ;; Defined at:
  5669 ;;		line 102 in file "lcd.c"
  5670 ;; Parameters:    Size  Location     Type
  5671 ;;  data            1    wreg     unsigned char 
  5672 ;; Auto vars:     Size  Location     Type
  5673 ;;  data            1    3[BANK0 ] unsigned char 
  5674 ;; Return value:  Size  Location     Type
  5675 ;;                  1    wreg      void 
  5676 ;; Registers used:
  5677 ;;		wreg, status,2, status,0, cstack
  5678 ;; Tracked objects:
  5679 ;;		On entry : 0/0
  5680 ;;		On exit  : 0/0
  5681 ;;		Unchanged: 0/0
  5682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5684 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5686 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5687 ;;Total ram usage:        1 bytes
  5688 ;; Hardware stack levels used:    1
  5689 ;; Hardware stack levels required when called:    6
  5690 ;; This function calls:
  5691 ;;		_send_byte
  5692 ;; This function is called by:
  5693 ;;		_fputc
  5694 ;; This function uses a non-reentrant model
  5695 ;;
  5696                           
  5697                           	psect	text21
  5698  003492                     __ptext21:
  5699                           	opt callstack 0
  5700  003492                     _putch:
  5701                           	opt callstack 19
  5702                           
  5703                           ;incstack = 0
  5704                           ;putch@data stored from wreg
  5705  003492  0100               	movlb	0	; () banked
  5706  003494  6F83               	movwf	putch@data& (0+255),b
  5707                           
  5708                           ;lcd.c: 103:     LATDbits.LATD2 = 1;
  5709  003496  848C               	bsf	3980,2,c	;volatile
  5710                           
  5711                           ;lcd.c: 104:     send_byte((unsigned char)data);
  5712  003498  0100               	movlb	0	; () banked
  5713  00349A  5183               	movf	putch@data& (0+255),w,b
  5714  00349C  EC3D  F01A         	call	_send_byte
  5715  0034A0  0012               	return		;funcret
  5716  0034A2                     __end_of_putch:
  5717                           	opt callstack 0
  5718                           
  5719 ;; *************** function _abs *****************
  5720 ;; Defined at:
  5721 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  5722 ;; Parameters:    Size  Location     Type
  5723 ;;  a               2   18[BANK0 ] int 
  5724 ;; Auto vars:     Size  Location     Type
  5725 ;;		None
  5726 ;; Return value:  Size  Location     Type
  5727 ;;                  2   18[BANK0 ] int 
  5728 ;; Registers used:
  5729 ;;		wreg, status,2, status,0
  5730 ;; Tracked objects:
  5731 ;;		On entry : 0/0
  5732 ;;		On exit  : 0/0
  5733 ;;		Unchanged: 0/0
  5734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5735 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5737 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5738 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5739 ;;Total ram usage:        4 bytes
  5740 ;; Hardware stack levels used:    1
  5741 ;; Hardware stack levels required when called:    3
  5742 ;; This function calls:
  5743 ;;		Nothing
  5744 ;; This function is called by:
  5745 ;;		_ultrasonic_main
  5746 ;;		_dtoa
  5747 ;; This function uses a non-reentrant model
  5748 ;;
  5749                           
  5750                           	psect	text22
  5751  0032F6                     __ptext22:
  5752                           	opt callstack 0
  5753  0032F6                     _abs:
  5754                           	opt callstack 22
  5755                           
  5756                           ;incstack = 0
  5757  0032F6  0100               	movlb	0	; () banked
  5758  0032F8  BF93               	btfsc	(abs@a+1)& (0+255),7,b
  5759  0032FA  D005               	goto	u4360
  5760  0032FC  5193               	movf	(abs@a+1)& (0+255),w,b
  5761  0032FE  E110               	bnz	l1170
  5762  003300  0592               	decf	abs@a& (0+255),w,b
  5763  003302  B0D8               	btfsc	status,0,c
  5764  003304  D00D               	goto	l1170
  5765  003306                     u4360:
  5766                           
  5767                           ; BSR set to: 0
  5768  003306  C092  F094         	movff	abs@a,??_abs
  5769  00330A  C093  F095         	movff	abs@a+1,??_abs+1
  5770  00330E  1F94               	comf	??_abs& (0+255),f,b
  5771  003310  1F95               	comf	(??_abs+1)& (0+255),f,b
  5772  003312  4B94               	infsnz	??_abs& (0+255),f,b
  5773  003314  2B95               	incf	(??_abs+1)& (0+255),f,b
  5774  003316  C094  F092         	movff	??_abs,?_abs
  5775  00331A  C095  F093         	movff	??_abs+1,?_abs+1
  5776  00331E  0012               	return	
  5777  003320                     l1170:
  5778                           
  5779                           ; BSR set to: 0
  5780  003320  C092  F092         	movff	abs@a,?_abs
  5781  003324  C093  F093         	movff	abs@a+1,?_abs+1
  5782                           
  5783                           ; BSR set to: 0
  5784  003328  0012               	return		;funcret
  5785  00332A                     __end_of_abs:
  5786                           	opt callstack 0
  5787                           
  5788 ;; *************** function ___aomod *****************
  5789 ;; Defined at:
  5790 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  5791 ;; Parameters:    Size  Location     Type
  5792 ;;  dividend        8    0[BANK0 ] long long 
  5793 ;;  divisor         8    8[BANK0 ] long long 
  5794 ;; Auto vars:     Size  Location     Type
  5795 ;;  sign            1   17[BANK0 ] unsigned char 
  5796 ;;  counter         1   16[BANK0 ] unsigned char 
  5797 ;; Return value:  Size  Location     Type
  5798 ;;                  8    0[BANK0 ] long long 
  5799 ;; Registers used:
  5800 ;;		wreg, status,2, status,0
  5801 ;; Tracked objects:
  5802 ;;		On entry : 0/0
  5803 ;;		On exit  : 0/0
  5804 ;;		Unchanged: 0/0
  5805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5806 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5807 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5809 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5810 ;;Total ram usage:       18 bytes
  5811 ;; Hardware stack levels used:    1
  5812 ;; Hardware stack levels required when called:    3
  5813 ;; This function calls:
  5814 ;;		Nothing
  5815 ;; This function is called by:
  5816 ;;		_dtoa
  5817 ;; This function uses a non-reentrant model
  5818 ;;
  5819                           
  5820                           	psect	text23
  5821  002868                     __ptext23:
  5822                           	opt callstack 0
  5823  002868                     ___aomod:
  5824                           	opt callstack 22
  5825                           
  5826                           ; BSR set to: 0
  5827                           ;incstack = 0
  5828  002868  0E00               	movlw	0
  5829  00286A  0100               	movlb	0	; () banked
  5830  00286C  6F91               	movwf	___aomod@sign& (0+255),b
  5831                           
  5832                           ; BSR set to: 0
  5833  00286E  AF87               	btfss	(___aomod@dividend+7)& (0+255),7,b
  5834  002870  D012               	goto	l4424
  5835                           
  5836                           ; BSR set to: 0
  5837  002872  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
  5838  002874  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
  5839  002876  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
  5840  002878  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
  5841  00287A  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
  5842  00287C  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
  5843  00287E  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
  5844  002880  6D80               	negf	___aomod@dividend& (0+255),b
  5845  002882  0E00               	movlw	0
  5846  002884  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  5847  002886  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  5848  002888  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  5849  00288A  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  5850  00288C  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  5851  00288E  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  5852  002890  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  5853                           
  5854                           ; BSR set to: 0
  5855  002892  0E01               	movlw	1
  5856  002894  6F91               	movwf	___aomod@sign& (0+255),b
  5857  002896                     l4424:
  5858                           
  5859                           ; BSR set to: 0
  5860  002896  AF8F               	btfss	(___aomod@divisor+7)& (0+255),7,b
  5861  002898  D010               	goto	l4428
  5862                           
  5863                           ; BSR set to: 0
  5864  00289A  1F8F               	comf	(___aomod@divisor+7)& (0+255),f,b
  5865  00289C  1F8E               	comf	(___aomod@divisor+6)& (0+255),f,b
  5866  00289E  1F8D               	comf	(___aomod@divisor+5)& (0+255),f,b
  5867  0028A0  1F8C               	comf	(___aomod@divisor+4)& (0+255),f,b
  5868  0028A2  1F8B               	comf	(___aomod@divisor+3)& (0+255),f,b
  5869  0028A4  1F8A               	comf	(___aomod@divisor+2)& (0+255),f,b
  5870  0028A6  1F89               	comf	(___aomod@divisor+1)& (0+255),f,b
  5871  0028A8  6D88               	negf	___aomod@divisor& (0+255),b
  5872  0028AA  0E00               	movlw	0
  5873  0028AC  2389               	addwfc	(___aomod@divisor+1)& (0+255),f,b
  5874  0028AE  238A               	addwfc	(___aomod@divisor+2)& (0+255),f,b
  5875  0028B0  238B               	addwfc	(___aomod@divisor+3)& (0+255),f,b
  5876  0028B2  238C               	addwfc	(___aomod@divisor+4)& (0+255),f,b
  5877  0028B4  238D               	addwfc	(___aomod@divisor+5)& (0+255),f,b
  5878  0028B6  238E               	addwfc	(___aomod@divisor+6)& (0+255),f,b
  5879  0028B8  238F               	addwfc	(___aomod@divisor+7)& (0+255),f,b
  5880  0028BA                     l4428:
  5881                           
  5882                           ; BSR set to: 0
  5883  0028BA  5188               	movf	___aomod@divisor& (0+255),w,b
  5884  0028BC  1189               	iorwf	(___aomod@divisor+1)& (0+255),w,b
  5885  0028BE  118A               	iorwf	(___aomod@divisor+2)& (0+255),w,b
  5886  0028C0  118B               	iorwf	(___aomod@divisor+3)& (0+255),w,b
  5887  0028C2  118C               	iorwf	(___aomod@divisor+4)& (0+255),w,b
  5888  0028C4  118D               	iorwf	(___aomod@divisor+5)& (0+255),w,b
  5889  0028C6  118E               	iorwf	(___aomod@divisor+6)& (0+255),w,b
  5890  0028C8  118F               	iorwf	(___aomod@divisor+7)& (0+255),w,b
  5891  0028CA  B4D8               	btfsc	status,2,c
  5892  0028CC  D03C               	goto	l4444
  5893                           
  5894                           ; BSR set to: 0
  5895  0028CE  0E01               	movlw	1
  5896  0028D0  6F90               	movwf	___aomod@counter& (0+255),b
  5897  0028D2  D00A               	goto	l4434
  5898  0028D4                     l4432:
  5899                           
  5900                           ; BSR set to: 0
  5901  0028D4  90D8               	bcf	status,0,c
  5902  0028D6  3788               	rlcf	___aomod@divisor& (0+255),f,b
  5903  0028D8  3789               	rlcf	(___aomod@divisor+1)& (0+255),f,b
  5904  0028DA  378A               	rlcf	(___aomod@divisor+2)& (0+255),f,b
  5905  0028DC  378B               	rlcf	(___aomod@divisor+3)& (0+255),f,b
  5906  0028DE  378C               	rlcf	(___aomod@divisor+4)& (0+255),f,b
  5907  0028E0  378D               	rlcf	(___aomod@divisor+5)& (0+255),f,b
  5908  0028E2  378E               	rlcf	(___aomod@divisor+6)& (0+255),f,b
  5909  0028E4  378F               	rlcf	(___aomod@divisor+7)& (0+255),f,b
  5910  0028E6  2B90               	incf	___aomod@counter& (0+255),f,b
  5911  0028E8                     l4434:
  5912                           
  5913                           ; BSR set to: 0
  5914  0028E8  AF8F               	btfss	(___aomod@divisor+7)& (0+255),7,b
  5915  0028EA  D7F4               	goto	l4432
  5916  0028EC                     u4510:
  5917                           
  5918                           ; BSR set to: 0
  5919  0028EC  5188               	movf	___aomod@divisor& (0+255),w,b
  5920  0028EE  5D80               	subwf	___aomod@dividend& (0+255),w,b
  5921  0028F0  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
  5922  0028F2  5981               	subwfb	(___aomod@dividend+1)& (0+255),w,b
  5923  0028F4  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
  5924  0028F6  5982               	subwfb	(___aomod@dividend+2)& (0+255),w,b
  5925  0028F8  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
  5926  0028FA  5983               	subwfb	(___aomod@dividend+3)& (0+255),w,b
  5927  0028FC  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
  5928  0028FE  5984               	subwfb	(___aomod@dividend+4)& (0+255),w,b
  5929  002900  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
  5930  002902  5985               	subwfb	(___aomod@dividend+5)& (0+255),w,b
  5931  002904  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
  5932  002906  5986               	subwfb	(___aomod@dividend+6)& (0+255),w,b
  5933  002908  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
  5934  00290A  5987               	subwfb	(___aomod@dividend+7)& (0+255),w,b
  5935  00290C  A0D8               	btfss	status,0,c
  5936  00290E  D010               	goto	l4440
  5937                           
  5938                           ; BSR set to: 0
  5939  002910  5188               	movf	___aomod@divisor& (0+255),w,b
  5940  002912  5F80               	subwf	___aomod@dividend& (0+255),f,b
  5941  002914  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
  5942  002916  5B81               	subwfb	(___aomod@dividend+1)& (0+255),f,b
  5943  002918  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
  5944  00291A  5B82               	subwfb	(___aomod@dividend+2)& (0+255),f,b
  5945  00291C  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
  5946  00291E  5B83               	subwfb	(___aomod@dividend+3)& (0+255),f,b
  5947  002920  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
  5948  002922  5B84               	subwfb	(___aomod@dividend+4)& (0+255),f,b
  5949  002924  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
  5950  002926  5B85               	subwfb	(___aomod@dividend+5)& (0+255),f,b
  5951  002928  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
  5952  00292A  5B86               	subwfb	(___aomod@dividend+6)& (0+255),f,b
  5953  00292C  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
  5954  00292E  5B87               	subwfb	(___aomod@dividend+7)& (0+255),f,b
  5955  002930                     l4440:
  5956                           
  5957                           ; BSR set to: 0
  5958  002930  90D8               	bcf	status,0,c
  5959  002932  338F               	rrcf	(___aomod@divisor+7)& (0+255),f,b
  5960  002934  338E               	rrcf	(___aomod@divisor+6)& (0+255),f,b
  5961  002936  338D               	rrcf	(___aomod@divisor+5)& (0+255),f,b
  5962  002938  338C               	rrcf	(___aomod@divisor+4)& (0+255),f,b
  5963  00293A  338B               	rrcf	(___aomod@divisor+3)& (0+255),f,b
  5964  00293C  338A               	rrcf	(___aomod@divisor+2)& (0+255),f,b
  5965  00293E  3389               	rrcf	(___aomod@divisor+1)& (0+255),f,b
  5966  002940  3388               	rrcf	___aomod@divisor& (0+255),f,b
  5967                           
  5968                           ; BSR set to: 0
  5969  002942  2F90               	decfsz	___aomod@counter& (0+255),f,b
  5970  002944  D7D3               	goto	u4510
  5971  002946                     l4444:
  5972                           
  5973                           ; BSR set to: 0
  5974  002946  5191               	movf	___aomod@sign& (0+255),w,b
  5975  002948  B4D8               	btfsc	status,2,c
  5976  00294A  D010               	goto	l4448
  5977                           
  5978                           ; BSR set to: 0
  5979  00294C  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
  5980  00294E  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
  5981  002950  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
  5982  002952  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
  5983  002954  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
  5984  002956  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
  5985  002958  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
  5986  00295A  6D80               	negf	___aomod@dividend& (0+255),b
  5987  00295C  0E00               	movlw	0
  5988  00295E  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  5989  002960  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  5990  002962  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  5991  002964  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  5992  002966  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  5993  002968  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  5994  00296A  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  5995  00296C                     l4448:
  5996                           
  5997                           ; BSR set to: 0
  5998  00296C  C080  F080         	movff	___aomod@dividend,?___aomod
  5999  002970  C081  F081         	movff	___aomod@dividend+1,?___aomod+1
  6000  002974  C082  F082         	movff	___aomod@dividend+2,?___aomod+2
  6001  002978  C083  F083         	movff	___aomod@dividend+3,?___aomod+3
  6002  00297C  C084  F084         	movff	___aomod@dividend+4,?___aomod+4
  6003  002980  C085  F085         	movff	___aomod@dividend+5,?___aomod+5
  6004  002984  C086  F086         	movff	___aomod@dividend+6,?___aomod+6
  6005  002988  C087  F087         	movff	___aomod@dividend+7,?___aomod+7
  6006                           
  6007                           ; BSR set to: 0
  6008  00298C  0012               	return		;funcret
  6009  00298E                     __end_of___aomod:
  6010                           	opt callstack 0
  6011                           
  6012 ;; *************** function ___aodiv *****************
  6013 ;; Defined at:
  6014 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  6015 ;; Parameters:    Size  Location     Type
  6016 ;;  dividend        8    0[BANK0 ] long long 
  6017 ;;  divisor         8    8[BANK0 ] long long 
  6018 ;; Auto vars:     Size  Location     Type
  6019 ;;  quotient        8   18[BANK0 ] long long 
  6020 ;;  sign            1   17[BANK0 ] unsigned char 
  6021 ;;  counter         1   16[BANK0 ] unsigned char 
  6022 ;; Return value:  Size  Location     Type
  6023 ;;                  8    0[BANK0 ] long long 
  6024 ;; Registers used:
  6025 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6026 ;; Tracked objects:
  6027 ;;		On entry : 0/0
  6028 ;;		On exit  : 0/0
  6029 ;;		Unchanged: 0/0
  6030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6031 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6032 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6034 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6035 ;;Total ram usage:       26 bytes
  6036 ;; Hardware stack levels used:    1
  6037 ;; Hardware stack levels required when called:    3
  6038 ;; This function calls:
  6039 ;;		Nothing
  6040 ;; This function is called by:
  6041 ;;		_dtoa
  6042 ;; This function uses a non-reentrant model
  6043 ;;
  6044                           
  6045                           	psect	text24
  6046  00249A                     __ptext24:
  6047                           	opt callstack 0
  6048  00249A                     ___aodiv:
  6049                           	opt callstack 22
  6050                           
  6051                           ; BSR set to: 0
  6052                           ;incstack = 0
  6053  00249A  0E00               	movlw	0
  6054  00249C  0100               	movlb	0	; () banked
  6055  00249E  6F91               	movwf	___aodiv@sign& (0+255),b
  6056                           
  6057                           ; BSR set to: 0
  6058  0024A0  AF8F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  6059  0024A2  D012               	goto	l4380
  6060                           
  6061                           ; BSR set to: 0
  6062  0024A4  1F8F               	comf	(___aodiv@divisor+7)& (0+255),f,b
  6063  0024A6  1F8E               	comf	(___aodiv@divisor+6)& (0+255),f,b
  6064  0024A8  1F8D               	comf	(___aodiv@divisor+5)& (0+255),f,b
  6065  0024AA  1F8C               	comf	(___aodiv@divisor+4)& (0+255),f,b
  6066  0024AC  1F8B               	comf	(___aodiv@divisor+3)& (0+255),f,b
  6067  0024AE  1F8A               	comf	(___aodiv@divisor+2)& (0+255),f,b
  6068  0024B0  1F89               	comf	(___aodiv@divisor+1)& (0+255),f,b
  6069  0024B2  6D88               	negf	___aodiv@divisor& (0+255),b
  6070  0024B4  0E00               	movlw	0
  6071  0024B6  2389               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
  6072  0024B8  238A               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
  6073  0024BA  238B               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
  6074  0024BC  238C               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
  6075  0024BE  238D               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
  6076  0024C0  238E               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
  6077  0024C2  238F               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
  6078                           
  6079                           ; BSR set to: 0
  6080  0024C4  0E01               	movlw	1
  6081  0024C6  6F91               	movwf	___aodiv@sign& (0+255),b
  6082  0024C8                     l4380:
  6083                           
  6084                           ; BSR set to: 0
  6085  0024C8  AF87               	btfss	(___aodiv@dividend+7)& (0+255),7,b
  6086  0024CA  D012               	goto	l4386
  6087                           
  6088                           ; BSR set to: 0
  6089  0024CC  1F87               	comf	(___aodiv@dividend+7)& (0+255),f,b
  6090  0024CE  1F86               	comf	(___aodiv@dividend+6)& (0+255),f,b
  6091  0024D0  1F85               	comf	(___aodiv@dividend+5)& (0+255),f,b
  6092  0024D2  1F84               	comf	(___aodiv@dividend+4)& (0+255),f,b
  6093  0024D4  1F83               	comf	(___aodiv@dividend+3)& (0+255),f,b
  6094  0024D6  1F82               	comf	(___aodiv@dividend+2)& (0+255),f,b
  6095  0024D8  1F81               	comf	(___aodiv@dividend+1)& (0+255),f,b
  6096  0024DA  6D80               	negf	___aodiv@dividend& (0+255),b
  6097  0024DC  0E00               	movlw	0
  6098  0024DE  2381               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
  6099  0024E0  2382               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
  6100  0024E2  2383               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
  6101  0024E4  2384               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
  6102  0024E6  2385               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
  6103  0024E8  2386               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
  6104  0024EA  2387               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
  6105                           
  6106                           ; BSR set to: 0
  6107  0024EC  0E01               	movlw	1
  6108  0024EE  1B91               	xorwf	___aodiv@sign& (0+255),f,b
  6109  0024F0                     l4386:
  6110                           
  6111                           ; BSR set to: 0
  6112  0024F0  EE20  F092         	lfsr	2,___aodiv@quotient
  6113  0024F4  0E07               	movlw	7
  6114  0024F6                     u4431:
  6115  0024F6  6ADE               	clrf	postinc2,c
  6116  0024F8  06E8               	decf	wreg,f,c
  6117  0024FA  E2FD               	bc	u4431
  6118                           
  6119                           ; BSR set to: 0
  6120  0024FC  5188               	movf	___aodiv@divisor& (0+255),w,b
  6121  0024FE  1189               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
  6122  002500  118A               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
  6123  002502  118B               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
  6124  002504  118C               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
  6125  002506  118D               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
  6126  002508  118E               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
  6127  00250A  118F               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
  6128  00250C  B4D8               	btfsc	status,2,c
  6129  00250E  D046               	goto	l4408
  6130                           
  6131                           ; BSR set to: 0
  6132  002510  0E01               	movlw	1
  6133  002512  6F90               	movwf	___aodiv@counter& (0+255),b
  6134  002514  D00A               	goto	l4394
  6135  002516                     l4392:
  6136                           
  6137                           ; BSR set to: 0
  6138  002516  90D8               	bcf	status,0,c
  6139  002518  3788               	rlcf	___aodiv@divisor& (0+255),f,b
  6140  00251A  3789               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
  6141  00251C  378A               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
  6142  00251E  378B               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
  6143  002520  378C               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
  6144  002522  378D               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
  6145  002524  378E               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
  6146  002526  378F               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
  6147  002528  2B90               	incf	___aodiv@counter& (0+255),f,b
  6148  00252A                     l4394:
  6149                           
  6150                           ; BSR set to: 0
  6151  00252A  AF8F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  6152  00252C  D7F4               	goto	l4392
  6153  00252E                     u4450:
  6154                           
  6155                           ; BSR set to: 0
  6156  00252E  90D8               	bcf	status,0,c
  6157  002530  3792               	rlcf	___aodiv@quotient& (0+255),f,b
  6158  002532  3793               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
  6159  002534  3794               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
  6160  002536  3795               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
  6161  002538  3796               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
  6162  00253A  3797               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
  6163  00253C  3798               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
  6164  00253E  3799               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
  6165                           
  6166                           ; BSR set to: 0
  6167  002540  5188               	movf	___aodiv@divisor& (0+255),w,b
  6168  002542  5D80               	subwf	___aodiv@dividend& (0+255),w,b
  6169  002544  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
  6170  002546  5981               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
  6171  002548  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  6172  00254A  5982               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
  6173  00254C  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  6174  00254E  5983               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
  6175  002550  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  6176  002552  5984               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
  6177  002554  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  6178  002556  5985               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
  6179  002558  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  6180  00255A  5986               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
  6181  00255C  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  6182  00255E  5987               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
  6183  002560  A0D8               	btfss	status,0,c
  6184  002562  D011               	goto	l4404
  6185                           
  6186                           ; BSR set to: 0
  6187  002564  5188               	movf	___aodiv@divisor& (0+255),w,b
  6188  002566  5F80               	subwf	___aodiv@dividend& (0+255),f,b
  6189  002568  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
  6190  00256A  5B81               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
  6191  00256C  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  6192  00256E  5B82               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
  6193  002570  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  6194  002572  5B83               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
  6195  002574  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  6196  002576  5B84               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
  6197  002578  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  6198  00257A  5B85               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
  6199  00257C  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  6200  00257E  5B86               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
  6201  002580  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  6202  002582  5B87               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
  6203                           
  6204                           ; BSR set to: 0
  6205  002584  8192               	bsf	___aodiv@quotient& (0+255),0,b
  6206  002586                     l4404:
  6207                           
  6208                           ; BSR set to: 0
  6209  002586  90D8               	bcf	status,0,c
  6210  002588  338F               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
  6211  00258A  338E               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
  6212  00258C  338D               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
  6213  00258E  338C               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
  6214  002590  338B               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
  6215  002592  338A               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
  6216  002594  3389               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
  6217  002596  3388               	rrcf	___aodiv@divisor& (0+255),f,b
  6218                           
  6219                           ; BSR set to: 0
  6220  002598  2F90               	decfsz	___aodiv@counter& (0+255),f,b
  6221  00259A  D7C9               	goto	u4450
  6222  00259C                     l4408:
  6223                           
  6224                           ; BSR set to: 0
  6225  00259C  5191               	movf	___aodiv@sign& (0+255),w,b
  6226  00259E  B4D8               	btfsc	status,2,c
  6227  0025A0  D010               	goto	l4412
  6228                           
  6229                           ; BSR set to: 0
  6230  0025A2  1F99               	comf	(___aodiv@quotient+7)& (0+255),f,b
  6231  0025A4  1F98               	comf	(___aodiv@quotient+6)& (0+255),f,b
  6232  0025A6  1F97               	comf	(___aodiv@quotient+5)& (0+255),f,b
  6233  0025A8  1F96               	comf	(___aodiv@quotient+4)& (0+255),f,b
  6234  0025AA  1F95               	comf	(___aodiv@quotient+3)& (0+255),f,b
  6235  0025AC  1F94               	comf	(___aodiv@quotient+2)& (0+255),f,b
  6236  0025AE  1F93               	comf	(___aodiv@quotient+1)& (0+255),f,b
  6237  0025B0  6D92               	negf	___aodiv@quotient& (0+255),b
  6238  0025B2  0E00               	movlw	0
  6239  0025B4  2393               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
  6240  0025B6  2394               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
  6241  0025B8  2395               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
  6242  0025BA  2396               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
  6243  0025BC  2397               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
  6244  0025BE  2398               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
  6245  0025C0  2399               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
  6246  0025C2                     l4412:
  6247                           
  6248                           ; BSR set to: 0
  6249  0025C2  C092  F080         	movff	___aodiv@quotient,?___aodiv
  6250  0025C6  C093  F081         	movff	___aodiv@quotient+1,?___aodiv+1
  6251  0025CA  C094  F082         	movff	___aodiv@quotient+2,?___aodiv+2
  6252  0025CE  C095  F083         	movff	___aodiv@quotient+3,?___aodiv+3
  6253  0025D2  C096  F084         	movff	___aodiv@quotient+4,?___aodiv+4
  6254  0025D6  C097  F085         	movff	___aodiv@quotient+5,?___aodiv+5
  6255  0025DA  C098  F086         	movff	___aodiv@quotient+6,?___aodiv+6
  6256  0025DE  C099  F087         	movff	___aodiv@quotient+7,?___aodiv+7
  6257                           
  6258                           ; BSR set to: 0
  6259  0025E2  0012               	return		;funcret
  6260  0025E4                     __end_of___aodiv:
  6261                           	opt callstack 0
  6262                           
  6263 ;; *************** function _servo *****************
  6264 ;; Defined at:
  6265 ;;		line 220 in file "actuators_main.c"
  6266 ;; Parameters:    Size  Location     Type
  6267 ;;		None
  6268 ;; Auto vars:     Size  Location     Type
  6269 ;;		None
  6270 ;; Return value:  Size  Location     Type
  6271 ;;                  1    wreg      void 
  6272 ;; Registers used:
  6273 ;;		wreg, status,2, status,0, cstack
  6274 ;; Tracked objects:
  6275 ;;		On entry : 0/0
  6276 ;;		On exit  : 0/0
  6277 ;;		Unchanged: 0/0
  6278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6281 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6282 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6283 ;;Total ram usage:        2 bytes
  6284 ;; Hardware stack levels used:    1
  6285 ;; Hardware stack levels required when called:    4
  6286 ;; This function calls:
  6287 ;;		_servoRotate0
  6288 ;;		_servoRotate180
  6289 ;; This function is called by:
  6290 ;;		_actuators_main
  6291 ;; This function uses a non-reentrant model
  6292 ;;
  6293                           
  6294                           	psect	text25
  6295  0033E8                     __ptext25:
  6296                           	opt callstack 0
  6297  0033E8                     _servo:
  6298                           	opt callstack 25
  6299                           
  6300                           ;actuators_main.c: 222:   TRISC = 0;
  6301                           
  6302                           ; BSR set to: 0
  6303                           ;incstack = 0
  6304  0033E8  0E00               	movlw	0
  6305  0033EA  6E94               	movwf	3988,c	;volatile
  6306                           
  6307                           ;actuators_main.c: 223:   {;actuators_main.c: 225:     servoRotate0();
  6308  0033EC  EC35  F019         	call	_servoRotate0	;wreg free
  6309                           
  6310                           ;actuators_main.c: 229:     servoRotate180();
  6311  0033F0  EC0B  F019         	call	_servoRotate180	;wreg free
  6312                           
  6313                           ;actuators_main.c: 231:     _delay((unsigned long)((500)*(10000000/4000.0)));
  6314  0033F4  0E07               	movlw	7
  6315  0033F6  0100               	movlb	0	; () banked
  6316  0033F8  6F84               	movwf	(??_servo+1)& (0+255),b
  6317  0033FA  0E58               	movlw	88
  6318  0033FC  6F83               	movwf	??_servo& (0+255),b
  6319  0033FE  0E59               	movlw	89
  6320  003400                     u6057:
  6321  003400  2EE8               	decfsz	wreg,f,c
  6322  003402  D7FE               	bra	u6057
  6323  003404  2F83               	decfsz	??_servo& (0+255),f,b
  6324  003406  D7FC               	bra	u6057
  6325  003408  2F84               	decfsz	(??_servo+1)& (0+255),f,b
  6326  00340A  D7FA               	bra	u6057
  6327  00340C  D000               	nop2	
  6328                           
  6329                           ;actuators_main.c: 232:     servoRotate0();
  6330  00340E  EC35  F019         	call	_servoRotate0	;wreg free
  6331  003412  0012               	return		;funcret
  6332  003414                     __end_of_servo:
  6333                           	opt callstack 0
  6334                           
  6335 ;; *************** function _servoRotate180 *****************
  6336 ;; Defined at:
  6337 ;;		line 194 in file "actuators_main.c"
  6338 ;; Parameters:    Size  Location     Type
  6339 ;;		None
  6340 ;; Auto vars:     Size  Location     Type
  6341 ;;  i               2    1[BANK0 ] unsigned int 
  6342 ;; Return value:  Size  Location     Type
  6343 ;;                  1    wreg      void 
  6344 ;; Registers used:
  6345 ;;		wreg, status,2, status,0
  6346 ;; Tracked objects:
  6347 ;;		On entry : 0/0
  6348 ;;		On exit  : 0/0
  6349 ;;		Unchanged: 0/0
  6350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6352 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6353 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6354 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6355 ;;Total ram usage:        3 bytes
  6356 ;; Hardware stack levels used:    1
  6357 ;; Hardware stack levels required when called:    3
  6358 ;; This function calls:
  6359 ;;		Nothing
  6360 ;; This function is called by:
  6361 ;;		_servo
  6362 ;; This function uses a non-reentrant model
  6363 ;;
  6364                           
  6365                           	psect	text26
  6366  003216                     __ptext26:
  6367                           	opt callstack 0
  6368  003216                     _servoRotate180:
  6369                           	opt callstack 25
  6370                           
  6371                           ;actuators_main.c: 196:   unsigned int i;;actuators_main.c: 198:     for(i=0;i<40;i++)
  6372                           
  6373                           ;incstack = 0
  6374  003216  0E00               	movlw	0
  6375  003218  0100               	movlb	0	; () banked
  6376  00321A  6F82               	movwf	(servoRotate180@i+1)& (0+255),b
  6377  00321C  0E00               	movlw	0
  6378  00321E  6F81               	movwf	servoRotate180@i& (0+255),b
  6379  003220                     l77:
  6380                           
  6381                           ; BSR set to: 0
  6382                           ;actuators_main.c: 199:         {;actuators_main.c: 200:           RC1 = 1;
  6383  003220  8282               	bsf	3970,1,c	;volatile
  6384                           
  6385                           ;actuators_main.c: 201:           RC2 = 1;
  6386  003222  8482               	bsf	3970,2,c	;volatile
  6387                           
  6388                           ; BSR set to: 0
  6389                           ;actuators_main.c: 202:           _delay((unsigned long)((450)*(10000000/4000000.0)));
  6390  003224  0EE1               	movlw	225
  6391  003226                     u6067:
  6392  003226  D000               	nop2	
  6393  003228  2EE8               	decfsz	wreg,f,c
  6394  00322A  D7FD               	bra	u6067
  6395                           
  6396                           ;actuators_main.c: 204:           RC2 =0;
  6397  00322C  9482               	bcf	3970,2,c	;volatile
  6398                           
  6399                           ;actuators_main.c: 205:           _delay((unsigned long)((2100)*(10000000/4000000.0)));
  6400  00322E  0E07               	movlw	7
  6401  003230  0100               	movlb	0	; () banked
  6402  003232  6F80               	movwf	??_servoRotate180& (0+255),b
  6403  003234  0ED0               	movlw	208
  6404  003236                     u6077:
  6405  003236  2EE8               	decfsz	wreg,f,c
  6406  003238  D7FE               	bra	u6077
  6407  00323A  2F80               	decfsz	??_servoRotate180& (0+255),f,b
  6408  00323C  D7FC               	bra	u6077
  6409  00323E  F000               	nop	
  6410                           
  6411                           ;actuators_main.c: 206:           RC1 = 0;
  6412  003240  9282               	bcf	3970,1,c	;volatile
  6413                           
  6414                           ;actuators_main.c: 207:           _delay((unsigned long)((13550)*(10000000/4000000.0)));
  6415  003242  0E2C               	movlw	44
  6416  003244  0100               	movlb	0	; () banked
  6417  003246  6F80               	movwf	??_servoRotate180& (0+255),b
  6418  003248  0EFD               	movlw	253
  6419  00324A                     u6087:
  6420  00324A  2EE8               	decfsz	wreg,f,c
  6421  00324C  D7FE               	bra	u6087
  6422  00324E  2F80               	decfsz	??_servoRotate180& (0+255),f,b
  6423  003250  D7FC               	bra	u6087
  6424  003252  F000               	nop	
  6425                           
  6426                           ;actuators_main.c: 208:         }
  6427  003254  0100               	movlb	0	; () banked
  6428  003256  4B81               	infsnz	servoRotate180@i& (0+255),f,b
  6429  003258  2B82               	incf	(servoRotate180@i+1)& (0+255),f,b
  6430  00325A  5182               	movf	(servoRotate180@i+1)& (0+255),w,b
  6431  00325C  E105               	bnz	u4750
  6432  00325E  0E28               	movlw	40
  6433  003260  5D81               	subwf	servoRotate180@i& (0+255),w,b
  6434  003262  B0D8               	btfsc	status,0,c
  6435  003264  0012               	return	
  6436  003266  D7DC               	goto	l77
  6437  003268                     u4750:
  6438                           
  6439                           ; BSR set to: 0
  6440  003268  0012               	return		;funcret
  6441  00326A                     __end_of_servoRotate180:
  6442                           	opt callstack 0
  6443                           
  6444 ;; *************** function _servoRotate0 *****************
  6445 ;; Defined at:
  6446 ;;		line 156 in file "actuators_main.c"
  6447 ;; Parameters:    Size  Location     Type
  6448 ;;		None
  6449 ;; Auto vars:     Size  Location     Type
  6450 ;;  i               2    1[BANK0 ] unsigned int 
  6451 ;; Return value:  Size  Location     Type
  6452 ;;                  1    wreg      void 
  6453 ;; Registers used:
  6454 ;;		wreg, status,2, status,0
  6455 ;; Tracked objects:
  6456 ;;		On entry : 0/0
  6457 ;;		On exit  : 0/0
  6458 ;;		Unchanged: 0/0
  6459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6461 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6462 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6463 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6464 ;;Total ram usage:        3 bytes
  6465 ;; Hardware stack levels used:    1
  6466 ;; Hardware stack levels required when called:    3
  6467 ;; This function calls:
  6468 ;;		Nothing
  6469 ;; This function is called by:
  6470 ;;		_servo
  6471 ;; This function uses a non-reentrant model
  6472 ;;
  6473                           
  6474                           	psect	text27
  6475  00326A                     __ptext27:
  6476                           	opt callstack 0
  6477  00326A                     _servoRotate0:
  6478                           	opt callstack 25
  6479                           
  6480                           ;actuators_main.c: 158:     unsigned int i;;actuators_main.c: 160:       for(i=0;i<40;i+
      +                          +)
  6481                           
  6482                           ; BSR set to: 0
  6483                           ;incstack = 0
  6484  00326A  0E00               	movlw	0
  6485  00326C  0100               	movlb	0	; () banked
  6486  00326E  6F82               	movwf	(servoRotate0@i+1)& (0+255),b
  6487  003270  0E00               	movlw	0
  6488  003272  6F81               	movwf	servoRotate0@i& (0+255),b
  6489  003274                     l72:
  6490                           
  6491                           ; BSR set to: 0
  6492                           ;actuators_main.c: 161:           {;actuators_main.c: 163:             RC1 = 1;
  6493  003274  8282               	bsf	3970,1,c	;volatile
  6494                           
  6495                           ;actuators_main.c: 164:             RC2 = 1;
  6496  003276  8482               	bsf	3970,2,c	;volatile
  6497                           
  6498                           ; BSR set to: 0
  6499                           ;actuators_main.c: 165:             _delay((unsigned long)((1100)*(10000000/4000000.0)))
      +                          ;
  6500  003278  0E04               	movlw	4
  6501  00327A  0100               	movlb	0	; () banked
  6502  00327C  6F80               	movwf	??_servoRotate0& (0+255),b
  6503  00327E  0E91               	movlw	145
  6504  003280                     u6097:
  6505  003280  2EE8               	decfsz	wreg,f,c
  6506  003282  D7FE               	bra	u6097
  6507  003284  2F80               	decfsz	??_servoRotate0& (0+255),f,b
  6508  003286  D7FC               	bra	u6097
  6509                           
  6510                           ;actuators_main.c: 166:             RC2 = 0;
  6511  003288  9482               	bcf	3970,2,c	;volatile
  6512                           
  6513                           ;actuators_main.c: 167:             _delay((unsigned long)((300)*(10000000/4000000.0)));
  6514  00328A  0EFA               	movlw	250
  6515  00328C                     u6107:
  6516  00328C  2EE8               	decfsz	wreg,f,c
  6517  00328E  D7FE               	bra	u6107
  6518                           
  6519                           ;actuators_main.c: 168:             RC1 = 0;
  6520  003290  9282               	bcf	3970,1,c	;volatile
  6521                           
  6522                           ;actuators_main.c: 172:             _delay((unsigned long)((18600)*(10000000/4000000.0))
      +                          );
  6523  003292  0E3D               	movlw	61
  6524  003294  0100               	movlb	0	; () banked
  6525  003296  6F80               	movwf	??_servoRotate0& (0+255),b
  6526  003298  0E62               	movlw	98
  6527  00329A                     u6117:
  6528  00329A  2EE8               	decfsz	wreg,f,c
  6529  00329C  D7FE               	bra	u6117
  6530  00329E  2F80               	decfsz	??_servoRotate0& (0+255),f,b
  6531  0032A0  D7FC               	bra	u6117
  6532  0032A2  F000               	nop	
  6533                           
  6534                           ;actuators_main.c: 182:           }
  6535  0032A4  0100               	movlb	0	; () banked
  6536  0032A6  4B81               	infsnz	servoRotate0@i& (0+255),f,b
  6537  0032A8  2B82               	incf	(servoRotate0@i+1)& (0+255),f,b
  6538  0032AA  5182               	movf	(servoRotate0@i+1)& (0+255),w,b
  6539  0032AC  E105               	bnz	u4740
  6540  0032AE  0E28               	movlw	40
  6541  0032B0  5D81               	subwf	servoRotate0@i& (0+255),w,b
  6542  0032B2  B0D8               	btfsc	status,0,c
  6543  0032B4  0012               	return	
  6544  0032B6  D7DE               	goto	l72
  6545  0032B8                     u4740:
  6546                           
  6547                           ; BSR set to: 0
  6548  0032B8  0012               	return		;funcret
  6549  0032BA                     __end_of_servoRotate0:
  6550                           	opt callstack 0
  6551                           
  6552 ;; *************** function _initLCD *****************
  6553 ;; Defined at:
  6554 ;;		line 69 in file "lcd.c"
  6555 ;; Parameters:    Size  Location     Type
  6556 ;;		None
  6557 ;; Auto vars:     Size  Location     Type
  6558 ;;		None
  6559 ;; Return value:  Size  Location     Type
  6560 ;;                  1    wreg      void 
  6561 ;; Registers used:
  6562 ;;		wreg, status,2, status,0, cstack
  6563 ;; Tracked objects:
  6564 ;;		On entry : 0/0
  6565 ;;		On exit  : 0/0
  6566 ;;		Unchanged: 0/0
  6567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6570 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6571 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6572 ;;Total ram usage:        1 bytes
  6573 ;; Hardware stack levels used:    1
  6574 ;; Hardware stack levels required when called:    7
  6575 ;; This function calls:
  6576 ;;		_lcdInst
  6577 ;;		_send_byte
  6578 ;;		_send_nibble
  6579 ;; This function is called by:
  6580 ;;		_actuators_main
  6581 ;;		_ultrasonic_main
  6582 ;; This function uses a non-reentrant model
  6583 ;;
  6584                           
  6585                           	psect	text28
  6586  0030E2                     __ptext28:
  6587                           	opt callstack 0
  6588  0030E2                     _initLCD:
  6589                           	opt callstack 22
  6590                           
  6591                           ;lcd.c: 70:     _delay((unsigned long)((15)*(10000000/4000.0)));
  6592                           
  6593                           ; BSR set to: 0
  6594                           ;incstack = 0
  6595  0030E2  0E31               	movlw	49
  6596  0030E4  0100               	movlb	0	; () banked
  6597  0030E6  6F84               	movwf	??_initLCD& (0+255),b
  6598  0030E8  0EB2               	movlw	178
  6599  0030EA                     u6127:
  6600  0030EA  2EE8               	decfsz	wreg,f,c
  6601  0030EC  D7FE               	bra	u6127
  6602  0030EE  2F84               	decfsz	??_initLCD& (0+255),f,b
  6603  0030F0  D7FC               	bra	u6127
  6604  0030F2  F000               	nop	
  6605                           
  6606                           ;lcd.c: 72:     LATDbits.LATD2 = 0;
  6607  0030F4  948C               	bcf	3980,2,c	;volatile
  6608                           
  6609                           ;lcd.c: 74:     send_nibble(0b0011);
  6610  0030F6  0E03               	movlw	3
  6611  0030F8  EC30  F01A         	call	_send_nibble
  6612                           
  6613                           ;lcd.c: 75:     _delay((unsigned long)((5)*(10000000/4000.0)));
  6614  0030FC  0E11               	movlw	17
  6615  0030FE  0100               	movlb	0	; () banked
  6616  003100  6F84               	movwf	??_initLCD& (0+255),b
  6617  003102  0E3A               	movlw	58
  6618  003104                     u6137:
  6619  003104  2EE8               	decfsz	wreg,f,c
  6620  003106  D7FE               	bra	u6137
  6621  003108  2F84               	decfsz	??_initLCD& (0+255),f,b
  6622  00310A  D7FC               	bra	u6137
  6623  00310C  F000               	nop	
  6624                           
  6625                           ;lcd.c: 76:     send_nibble(0b0011);
  6626  00310E  0E03               	movlw	3
  6627  003110  EC30  F01A         	call	_send_nibble
  6628                           
  6629                           ;lcd.c: 77:     _delay((unsigned long)((150)*(10000000/4000000.0)));
  6630  003114  0E7D               	movlw	125
  6631  003116                     u6147:
  6632  003116  2EE8               	decfsz	wreg,f,c
  6633  003118  D7FE               	bra	u6147
  6634                           
  6635                           ;lcd.c: 78:     send_byte(0b00110010);
  6636  00311A  0E32               	movlw	50
  6637  00311C  EC3D  F01A         	call	_send_byte
  6638                           
  6639                           ;lcd.c: 80:     send_byte(0b00101000);
  6640  003120  0E28               	movlw	40
  6641  003122  EC3D  F01A         	call	_send_byte
  6642                           
  6643                           ;lcd.c: 81:     send_byte(0b00001000);
  6644  003126  0E08               	movlw	8
  6645  003128  EC3D  F01A         	call	_send_byte
  6646                           
  6647                           ;lcd.c: 82:     send_byte(0b00000001);
  6648  00312C  0E01               	movlw	1
  6649  00312E  EC3D  F01A         	call	_send_byte
  6650                           
  6651                           ;lcd.c: 83:     _delay((unsigned long)((5)*(10000000/4000.0)));
  6652  003132  0E11               	movlw	17
  6653  003134  0100               	movlb	0	; () banked
  6654  003136  6F84               	movwf	??_initLCD& (0+255),b
  6655  003138  0E3A               	movlw	58
  6656  00313A                     u6157:
  6657  00313A  2EE8               	decfsz	wreg,f,c
  6658  00313C  D7FE               	bra	u6157
  6659  00313E  2F84               	decfsz	??_initLCD& (0+255),f,b
  6660  003140  D7FC               	bra	u6157
  6661  003142  F000               	nop	
  6662                           
  6663                           ;lcd.c: 84:     send_byte(0b00000110);
  6664  003144  0E06               	movlw	6
  6665  003146  EC3D  F01A         	call	_send_byte
  6666                           
  6667                           ;lcd.c: 87:     { lcdInst( (unsigned char)(8 | (1 << 2) | (1 << 1) | 1) );};
  6668  00314A  0E0F               	movlw	15
  6669  00314C  EC51  F01A         	call	_lcdInst
  6670  003150  0012               	return		;funcret
  6671  003152                     __end_of_initLCD:
  6672                           	opt callstack 0
  6673                           
  6674 ;; *************** function _lcdInst *****************
  6675 ;; Defined at:
  6676 ;;		line 64 in file "lcd.c"
  6677 ;; Parameters:    Size  Location     Type
  6678 ;;  data            1    wreg     unsigned char 
  6679 ;; Auto vars:     Size  Location     Type
  6680 ;;  data            1    3[BANK0 ] unsigned char 
  6681 ;; Return value:  Size  Location     Type
  6682 ;;                  1    wreg      void 
  6683 ;; Registers used:
  6684 ;;		wreg, status,2, status,0, cstack
  6685 ;; Tracked objects:
  6686 ;;		On entry : 0/0
  6687 ;;		On exit  : 0/0
  6688 ;;		Unchanged: 0/0
  6689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6691 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6693 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6694 ;;Total ram usage:        1 bytes
  6695 ;; Hardware stack levels used:    1
  6696 ;; Hardware stack levels required when called:    6
  6697 ;; This function calls:
  6698 ;;		_send_byte
  6699 ;; This function is called by:
  6700 ;;		_actuators_main
  6701 ;;		_stepper2
  6702 ;;		_stepper2_back
  6703 ;;		_print_echo
  6704 ;;		_number_deploy
  6705 ;;		_ultrasonic_main
  6706 ;;		_initLCD
  6707 ;;		_lcd_shift_cursor
  6708 ;;		_lcd_shift_display
  6709 ;; This function uses a non-reentrant model
  6710 ;;
  6711                           
  6712                           	psect	text29
  6713  0034A2                     __ptext29:
  6714                           	opt callstack 0
  6715  0034A2                     _lcdInst:
  6716                           	opt callstack 22
  6717                           
  6718                           ;incstack = 0
  6719                           ;lcdInst@data stored from wreg
  6720  0034A2  0100               	movlb	0	; () banked
  6721  0034A4  6F83               	movwf	lcdInst@data& (0+255),b
  6722                           
  6723                           ;lcd.c: 65:     LATDbits.LATD2 = 0;
  6724  0034A6  948C               	bcf	3980,2,c	;volatile
  6725                           
  6726                           ;lcd.c: 66:     send_byte(data);
  6727  0034A8  0100               	movlb	0	; () banked
  6728  0034AA  5183               	movf	lcdInst@data& (0+255),w,b
  6729  0034AC  EC3D  F01A         	call	_send_byte
  6730  0034B0  0012               	return		;funcret
  6731  0034B2                     __end_of_lcdInst:
  6732                           	opt callstack 0
  6733                           
  6734 ;; *************** function _send_byte *****************
  6735 ;; Defined at:
  6736 ;;		line 55 in file "lcd.c"
  6737 ;; Parameters:    Size  Location     Type
  6738 ;;  data            1    wreg     unsigned char 
  6739 ;; Auto vars:     Size  Location     Type
  6740 ;;  data            1    2[BANK0 ] unsigned char 
  6741 ;; Return value:  Size  Location     Type
  6742 ;;                  1    wreg      void 
  6743 ;; Registers used:
  6744 ;;		wreg, status,2, status,0, cstack
  6745 ;; Tracked objects:
  6746 ;;		On entry : 0/0
  6747 ;;		On exit  : 0/0
  6748 ;;		Unchanged: 0/0
  6749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6751 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6753 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6754 ;;Total ram usage:        1 bytes
  6755 ;; Hardware stack levels used:    1
  6756 ;; Hardware stack levels required when called:    5
  6757 ;; This function calls:
  6758 ;;		_send_nibble
  6759 ;; This function is called by:
  6760 ;;		_lcdInst
  6761 ;;		_initLCD
  6762 ;;		_putch
  6763 ;; This function uses a non-reentrant model
  6764 ;;
  6765                           
  6766                           	psect	text30
  6767  00347A                     __ptext30:
  6768                           	opt callstack 0
  6769  00347A                     _send_byte:
  6770                           	opt callstack 19
  6771                           
  6772                           ;incstack = 0
  6773                           ;send_byte@data stored from wreg
  6774  00347A  0100               	movlb	0	; () banked
  6775  00347C  6F82               	movwf	send_byte@data& (0+255),b
  6776                           
  6777                           ;lcd.c: 57:     send_nibble(data >> 4);
  6778  00347E  0100               	movlb	0	; () banked
  6779  003480  3982               	swapf	send_byte@data& (0+255),w,b
  6780  003482  0B0F               	andlw	15
  6781  003484  EC30  F01A         	call	_send_nibble
  6782                           
  6783                           ;lcd.c: 60:     send_nibble(data);
  6784  003488  0100               	movlb	0	; () banked
  6785  00348A  5182               	movf	send_byte@data& (0+255),w,b
  6786  00348C  EC30  F01A         	call	_send_nibble
  6787  003490  0012               	return		;funcret
  6788  003492                     __end_of_send_byte:
  6789                           	opt callstack 0
  6790                           
  6791 ;; *************** function _send_nibble *****************
  6792 ;; Defined at:
  6793 ;;		line 44 in file "lcd.c"
  6794 ;; Parameters:    Size  Location     Type
  6795 ;;  data            1    wreg     unsigned char 
  6796 ;; Auto vars:     Size  Location     Type
  6797 ;;  data            1    1[BANK0 ] unsigned char 
  6798 ;; Return value:  Size  Location     Type
  6799 ;;                  1    wreg      void 
  6800 ;; Registers used:
  6801 ;;		wreg, status,2, status,0, cstack
  6802 ;; Tracked objects:
  6803 ;;		On entry : 0/0
  6804 ;;		On exit  : 0/0
  6805 ;;		Unchanged: 0/0
  6806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6808 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6810 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6811 ;;Total ram usage:        1 bytes
  6812 ;; Hardware stack levels used:    1
  6813 ;; Hardware stack levels required when called:    4
  6814 ;; This function calls:
  6815 ;;		_pulse_e
  6816 ;; This function is called by:
  6817 ;;		_send_byte
  6818 ;;		_initLCD
  6819 ;; This function uses a non-reentrant model
  6820 ;;
  6821                           
  6822                           	psect	text31
  6823  003460                     __ptext31:
  6824                           	opt callstack 0
  6825  003460                     _send_nibble:
  6826                           	opt callstack 19
  6827                           
  6828                           ;incstack = 0
  6829                           ;send_nibble@data stored from wreg
  6830  003460  0100               	movlb	0	; () banked
  6831  003462  6F81               	movwf	send_nibble@data& (0+255),b
  6832                           
  6833                           ;lcd.c: 46:     LATD = (unsigned char)(LATD & 0x0F);
  6834  003464  508C               	movf	3980,w,c	;volatile
  6835  003466  0B0F               	andlw	15
  6836  003468  6E8C               	movwf	3980,c	;volatile
  6837                           
  6838                           ;lcd.c: 47:     LATD = (unsigned char)((data << 4) | LATD);
  6839  00346A  0100               	movlb	0	; () banked
  6840  00346C  3981               	swapf	send_nibble@data& (0+255),w,b
  6841  00346E  0BF0               	andlw	240
  6842  003470  108C               	iorwf	3980,w,c	;volatile
  6843  003472  6E8C               	movwf	3980,c	;volatile
  6844                           
  6845                           ; BSR set to: 0
  6846                           ;lcd.c: 48:     pulse_e();
  6847  003474  ECDD  F019         	call	_pulse_e	;wreg free
  6848  003478  0012               	return		;funcret
  6849  00347A                     __end_of_send_nibble:
  6850                           	opt callstack 0
  6851                           
  6852 ;; *************** function _pulse_e *****************
  6853 ;; Defined at:
  6854 ;;		line 28 in file "lcd.c"
  6855 ;; Parameters:    Size  Location     Type
  6856 ;;		None
  6857 ;; Auto vars:     Size  Location     Type
  6858 ;;  interruptSta    1    0[BANK0 ] unsigned char 
  6859 ;; Return value:  Size  Location     Type
  6860 ;;                  1    wreg      void 
  6861 ;; Registers used:
  6862 ;;		wreg
  6863 ;; Tracked objects:
  6864 ;;		On entry : 0/0
  6865 ;;		On exit  : 0/0
  6866 ;;		Unchanged: 0/0
  6867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6869 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6871 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6872 ;;Total ram usage:        1 bytes
  6873 ;; Hardware stack levels used:    1
  6874 ;; Hardware stack levels required when called:    3
  6875 ;; This function calls:
  6876 ;;		Nothing
  6877 ;; This function is called by:
  6878 ;;		_send_nibble
  6879 ;; This function uses a non-reentrant model
  6880 ;;
  6881                           
  6882                           	psect	text32
  6883  0033BA                     __ptext32:
  6884                           	opt callstack 0
  6885  0033BA                     _pulse_e:
  6886                           	opt callstack 19
  6887                           
  6888                           ;lcd.c: 29:     unsigned char interruptState = INTCONbits.GIE;
  6889                           
  6890                           ;incstack = 0
  6891  0033BA  0E00               	movlw	0
  6892  0033BC  BEF2               	btfsc	4082,7,c	;volatile
  6893  0033BE  0E01               	movlw	1
  6894  0033C0  0100               	movlb	0	; () banked
  6895  0033C2  6F80               	movwf	pulse_e@interruptState& (0+255),b
  6896                           
  6897                           ; BSR set to: 0
  6898                           ;lcd.c: 30:     (INTCONbits.GIE = 0);
  6899  0033C4  9EF2               	bcf	4082,7,c	;volatile
  6900                           
  6901                           ; BSR set to: 0
  6902                           ;lcd.c: 31:     LATDbits.LATD3 = 1;
  6903  0033C6  868C               	bsf	3980,3,c	;volatile
  6904                           
  6905                           ;lcd.c: 34:     _delay((unsigned long)((25)*(10000000/4000000.0)));
  6906  0033C8  0E14               	movlw	20
  6907  0033CA                     u6167:
  6908  0033CA  2EE8               	decfsz	wreg,f,c
  6909  0033CC  D7FE               	bra	u6167
  6910  0033CE  D000               	nop2	
  6911                           
  6912                           ;lcd.c: 35:     LATDbits.LATD3 = 0;
  6913  0033D0  968C               	bcf	3980,3,c	;volatile
  6914                           
  6915                           ;lcd.c: 36:     _delay((unsigned long)((100)*(10000000/4000000.0)));
  6916  0033D2  0E53               	movlw	83
  6917  0033D4                     u6177:
  6918  0033D4  2EE8               	decfsz	wreg,f,c
  6919  0033D6  D7FE               	bra	u6177
  6920  0033D8  F000               	nop	
  6921                           
  6922                           ;lcd.c: 37:     INTCONbits.GIE = interruptState;
  6923  0033DA  0100               	movlb	0	; () banked
  6924  0033DC  B180               	btfsc	pulse_e@interruptState& (0+255),0,b
  6925  0033DE  D002               	bra	u4295
  6926  0033E0  9EF2               	bcf	4082,7,c	;volatile
  6927  0033E2  D001               	bra	u4296
  6928  0033E4                     u4295:
  6929  0033E4  8EF2               	bsf	4082,7,c	;volatile
  6930  0033E6                     u4296:
  6931  0033E6  0012               	return		;funcret
  6932  0033E8                     __end_of_pulse_e:
  6933                           	opt callstack 0
  6934                           
  6935 ;; *************** function _ISR *****************
  6936 ;; Defined at:
  6937 ;;		line 6 in file "ultrasonic_main.c"
  6938 ;; Parameters:    Size  Location     Type
  6939 ;;		None
  6940 ;; Auto vars:     Size  Location     Type
  6941 ;;		None
  6942 ;; Return value:  Size  Location     Type
  6943 ;;                  1    wreg      void 
  6944 ;; Registers used:
  6945 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6946 ;; Tracked objects:
  6947 ;;		On entry : 0/0
  6948 ;;		On exit  : 0/0
  6949 ;;		Unchanged: 0/0
  6950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6953 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6954 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6955 ;;Total ram usage:        2 bytes
  6956 ;; Hardware stack levels used:    1
  6957 ;; Hardware stack levels required when called:    2
  6958 ;; This function calls:
  6959 ;;		_echo
  6960 ;; This function is called by:
  6961 ;;		Interrupt level 2
  6962 ;; This function uses a non-reentrant model
  6963 ;;
  6964                           
  6965                           	psect	intcode
  6966  000008                     __pintcode:
  6967                           	opt callstack 0
  6968  000008                     _ISR:
  6969                           	opt callstack 14
  6970                           
  6971                           ;incstack = 0
  6972  000008  8260               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6973  00000A  ED1E  F01A         	call	int_func,f	;refresh shadow registers
  6974                           
  6975                           	psect	intcode_body
  6976  00343C                     __pintcode_body:
  6977                           	opt callstack 14
  6978  00343C                     int_func:
  6979                           	opt callstack 14
  6980  00343C  0006               	pop		; remove dummy address from shadow register refresh
  6981  00343E  CFD9 F036          	movff	fsr2l,??_ISR
  6982  003442  CFDA F037          	movff	fsr2h,??_ISR+1
  6983                           
  6984                           ;ultrasonic_main.c: 7:  if(RBIF == 1){
  6985  003446  A0F2               	btfss	4082,0,c	;volatile
  6986  003448  D005               	goto	i2l243
  6987                           
  6988                           ;ultrasonic_main.c: 8:   RBIE = 0;
  6989  00344A  96F2               	bcf	4082,3,c	;volatile
  6990                           
  6991                           ;ultrasonic_main.c: 11:         echo();
  6992  00344C  EC6F  F008         	call	_echo	;wreg free
  6993                           
  6994                           ;ultrasonic_main.c: 13:         RBIF = 0;
  6995  003450  90F2               	bcf	4082,0,c	;volatile
  6996                           
  6997                           ;ultrasonic_main.c: 14:         RBIE = 1;
  6998  003452  86F2               	bsf	4082,3,c	;volatile
  6999  003454                     i2l243:
  7000  003454  C037  FFDA         	movff	??_ISR+1,fsr2h
  7001  003458  C036  FFD9         	movff	??_ISR,fsr2l
  7002  00345C  9260               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  7003  00345E  0011               	retfie		f
  7004  003460                     __end_of_ISR:
  7005                           	opt callstack 0
  7006                           
  7007 ;; *************** function _echo *****************
  7008 ;; Defined at:
  7009 ;;		line 20 in file "ultrasonic_main.c"
  7010 ;; Parameters:    Size  Location     Type
  7011 ;;		None
  7012 ;; Auto vars:     Size  Location     Type
  7013 ;;		None
  7014 ;; Return value:  Size  Location     Type
  7015 ;;                  1    wreg      void 
  7016 ;; Registers used:
  7017 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7018 ;; Tracked objects:
  7019 ;;		On entry : 0/0
  7020 ;;		On exit  : 0/0
  7021 ;;		Unchanged: 0/0
  7022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7025 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7026 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7027 ;;Total ram usage:        4 bytes
  7028 ;; Hardware stack levels used:    1
  7029 ;; Hardware stack levels required when called:    1
  7030 ;; This function calls:
  7031 ;;		___fldiv
  7032 ;;		___fltol
  7033 ;;		___xxtofl
  7034 ;;		i2___awdiv
  7035 ;; This function is called by:
  7036 ;;		_ISR
  7037 ;; This function uses a non-reentrant model
  7038 ;;
  7039                           
  7040                           	psect	text34
  7041  0010DE                     __ptext34:
  7042                           	opt callstack 0
  7043  0010DE                     _echo:
  7044                           	opt callstack 14
  7045                           
  7046                           ;ultrasonic_main.c: 21:     if (b==1){
  7047                           
  7048                           ;incstack = 0
  7049  0010DE  0455               	decf	_b,w,c
  7050  0010E0  1056               	iorwf	_b+1,w,c
  7051  0010E2  A4D8               	btfss	status,2,c
  7052  0010E4  D0A2               	goto	i2l4122
  7053                           
  7054                           ;ultrasonic_main.c: 22:         if (RB7 == 1){
  7055  0010E6  BE81               	btfsc	3969,7,c	;volatile
  7056                           
  7057                           ;ultrasonic_main.c: 23:             TMR1ON = 1;
  7058  0010E8  80CD               	bsf	4045,0,c	;volatile
  7059                           
  7060                           ;ultrasonic_main.c: 25:         if (RB7 == 0){
  7061                           
  7062                           ;ultrasonic_main.c: 24:         }
  7063  0010EA  BE81               	btfsc	3969,7,c	;volatile
  7064  0010EC  D037               	goto	i2l4098
  7065                           
  7066                           ;ultrasonic_main.c: 26:             TMR1ON = 0;
  7067  0010EE  90CD               	bcf	4045,0,c	;volatile
  7068                           
  7069                           ;ultrasonic_main.c: 27:             a[0] = (TMR1L | (TMR1H<<8))/58.82;
  7070  0010F0  0EAE               	movlw	174
  7071  0010F2  6E13               	movwf	___fldiv@a,c
  7072  0010F4  0E47               	movlw	71
  7073  0010F6  6E14               	movwf	___fldiv@a+1,c
  7074  0010F8  0E6B               	movlw	107
  7075  0010FA  6E15               	movwf	___fldiv@a+2,c
  7076  0010FC  0E42               	movlw	66
  7077  0010FE  6E16               	movwf	___fldiv@a+3,c
  7078  001100  50CF               	movf	4047,w,c	;volatile
  7079  001102  6E33               	movwf	(??_echo+1)& (0+255),c
  7080  001104  6A32               	clrf	??_echo& (0+255),c
  7081  001106  50CE               	movf	4046,w,c	;volatile
  7082  001108  6E34               	movwf	(??_echo+2)& (0+255),c
  7083  00110A  6A35               	clrf	(??_echo+3)& (0+255),c
  7084  00110C  5032               	movf	??_echo,w,c
  7085  00110E  1234               	iorwf	??_echo+2,f,c
  7086  001110  5033               	movf	??_echo+1,w,c
  7087  001112  1235               	iorwf	??_echo+3,f,c
  7088  001114  C034  F001         	movff	??_echo+2,___xxtofl@val
  7089  001118  C035  F002         	movff	??_echo+3,___xxtofl@val+1
  7090  00111C  0E00               	movlw	0
  7091  00111E  BE02               	btfsc	___xxtofl@val+1,7,c
  7092  001120  0EFF               	movlw	-1
  7093  001122  6E03               	movwf	___xxtofl@val+2,c
  7094  001124  6E04               	movwf	___xxtofl@val+3,c
  7095  001126  0E01               	movlw	1
  7096  001128  EC94  F013         	call	___xxtofl
  7097  00112C  C001  F00F         	movff	?___xxtofl,___fldiv@b
  7098  001130  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  7099  001134  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  7100  001138  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  7101  00113C  ECB3  F00C         	call	___fldiv	;wreg free
  7102  001140  C00F  F028         	movff	?___fldiv,___fltol@f1
  7103  001144  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
  7104  001148  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
  7105  00114C  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
  7106  001150  ECB6  F016         	call	___fltol	;wreg free
  7107  001154  C028  F058         	movff	?___fltol,_a
  7108  001158  C029  F059         	movff	?___fltol+1,_a+1
  7109  00115C                     i2l4098:
  7110                           
  7111                           ;ultrasonic_main.c: 31:         if (a[0]>=2 && a[0]<=200){
  7112  00115C  BE59               	btfsc	_a+1,7,c
  7113  00115E  D065               	goto	i2l4122
  7114  001160  5059               	movf	_a+1,w,c
  7115  001162  E104               	bnz	i2u385_40
  7116  001164  0E02               	movlw	2
  7117  001166  5C58               	subwf	_a,w,c
  7118  001168  A0D8               	btfss	status,0,c
  7119  00116A  D05F               	goto	i2l4122
  7120  00116C                     i2u385_40:
  7121  00116C  BE59               	btfsc	_a+1,7,c
  7122  00116E  D006               	goto	i2u386_40
  7123  001170  5059               	movf	_a+1,w,c
  7124  001172  E15B               	bnz	i2l4122
  7125  001174  0EC9               	movlw	201
  7126  001176  5C58               	subwf	_a,w,c
  7127  001178  B0D8               	btfsc	status,0,c
  7128  00117A  D057               	goto	i2l4122
  7129  00117C                     i2u386_40:
  7130                           
  7131                           ;ultrasonic_main.c: 32:             if ((~sumf[0])&&(dist_final[0][0]!=0)&&(dist_final[0
      +                          ][1]!=0)&&(dist_final[0][2]!=0)){
  7132  00117C  0447               	decf	_sumf,w,c
  7133  00117E  B4D8               	btfsc	status,2,c
  7134  001180  D01B               	goto	i2l4114
  7135  001182  0101               	movlb	1	; () banked
  7136  001184  5100               	movf	_dist_final& (0+255),w,b
  7137  001186  1101               	iorwf	(_dist_final+1)& (0+255),w,b
  7138  001188  B4D8               	btfsc	status,2,c
  7139  00118A  D016               	goto	i2l4114
  7140                           
  7141                           ; BSR set to: 1
  7142  00118C  5102               	movf	(_dist_final+2)& (0+255),w,b
  7143  00118E  1103               	iorwf	(_dist_final+3)& (0+255),w,b
  7144  001190  B4D8               	btfsc	status,2,c
  7145  001192  D012               	goto	i2l4114
  7146                           
  7147                           ; BSR set to: 1
  7148  001194  5104               	movf	(_dist_final+4)& (0+255),w,b
  7149  001196  1105               	iorwf	(_dist_final+5)& (0+255),w,b
  7150  001198  B4D8               	btfsc	status,2,c
  7151  00119A  D00E               	goto	i2l4114
  7152                           
  7153                           ; BSR set to: 1
  7154                           ;ultrasonic_main.c: 33:                 sum[0] = (dist_final[0][0]+dist_final[0][1]+dist
      +                          _final[0][2]);
  7155  00119C  5104               	movf	(_dist_final+4)& (0+255),w,b
  7156  00119E  2502               	addwf	(_dist_final+2)& (0+255),w,b
  7157  0011A0  6E32               	movwf	??_echo& (0+255),c
  7158  0011A2  5105               	movf	(_dist_final+5)& (0+255),w,b
  7159  0011A4  2103               	addwfc	(_dist_final+3)& (0+255),w,b
  7160  0011A6  6E33               	movwf	(??_echo+1)& (0+255),c
  7161  0011A8  5100               	movf	_dist_final& (0+255),w,b
  7162  0011AA  2432               	addwf	??_echo,w,c
  7163  0011AC  6E38               	movwf	_sum,c
  7164  0011AE  5101               	movf	(_dist_final+1)& (0+255),w,b
  7165  0011B0  2033               	addwfc	??_echo+1,w,c
  7166  0011B2  6E39               	movwf	_sum+1,c
  7167                           
  7168                           ; BSR set to: 1
  7169                           ;ultrasonic_main.c: 34:                 sumf[0] = 1;
  7170  0011B4  0E01               	movlw	1
  7171  0011B6  6E47               	movwf	_sumf,c
  7172  0011B8                     i2l4114:
  7173                           
  7174                           ;ultrasonic_main.c: 36:             if (sumf[0]){
  7175  0011B8  5047               	movf	_sumf,w,c
  7176  0011BA  B4D8               	btfsc	status,2,c
  7177  0011BC  D029               	goto	i2l4120
  7178                           
  7179                           ;ultrasonic_main.c: 37:                 sum[0] = sum[0] - dist_final[0][meas] + a[0];
  7180  0011BE  90D8               	bcf	status,0,c
  7181  0011C0  3453               	rlcf	_meas,w,c	;volatile
  7182  0011C2  6ED9               	movwf	fsr2l,c
  7183  0011C4  3454               	rlcf	_meas+1,w,c	;volatile
  7184  0011C6  6EDA               	movwf	fsr2h,c
  7185  0011C8  0E00               	movlw	low _dist_final
  7186  0011CA  26D9               	addwf	fsr2l,f,c
  7187  0011CC  0E01               	movlw	high _dist_final
  7188  0011CE  22DA               	addwfc	fsr2h,f,c
  7189  0011D0  CFDE F032          	movff	postinc2,??_echo
  7190  0011D4  CFDD F033          	movff	postdec2,??_echo+1
  7191  0011D8  C038  F034         	movff	_sum,??_echo+2
  7192  0011DC  C039  F035         	movff	_sum+1,??_echo+3
  7193  0011E0  5032               	movf	??_echo,w,c
  7194  0011E2  5E34               	subwf	??_echo+2,f,c
  7195  0011E4  5033               	movf	??_echo+1,w,c
  7196  0011E6  5A35               	subwfb	??_echo+3,f,c
  7197  0011E8  5058               	movf	_a,w,c
  7198  0011EA  2434               	addwf	??_echo+2,w,c
  7199  0011EC  6E38               	movwf	_sum,c
  7200  0011EE  5059               	movf	_a+1,w,c
  7201  0011F0  2035               	addwfc	??_echo+3,w,c
  7202  0011F2  6E39               	movwf	_sum+1,c
  7203                           
  7204                           ;ultrasonic_main.c: 38:                 dist_final[0][5] = (sum[0]/5);
  7205  0011F4  C038  F001         	movff	_sum,i2___awdiv@dividend
  7206  0011F8  C039  F002         	movff	_sum+1,i2___awdiv@dividend+1
  7207  0011FC  0E00               	movlw	0
  7208  0011FE  6E04               	movwf	i2___awdiv@divisor+1,c
  7209  001200  0E05               	movlw	5
  7210  001202  6E03               	movwf	i2___awdiv@divisor,c
  7211  001204  ECF2  F017         	call	i2___awdiv	;wreg free
  7212  001208  C001  F10A         	movff	?i2___awdiv,_dist_final+10
  7213  00120C  C002  F10B         	movff	?i2___awdiv+1,_dist_final+11
  7214  001210                     i2l4120:
  7215                           
  7216                           ;ultrasonic_main.c: 40:             dist_final[0][meas] = a[0];
  7217  001210  90D8               	bcf	status,0,c
  7218  001212  3453               	rlcf	_meas,w,c	;volatile
  7219  001214  6ED9               	movwf	fsr2l,c
  7220  001216  3454               	rlcf	_meas+1,w,c	;volatile
  7221  001218  6EDA               	movwf	fsr2h,c
  7222  00121A  0E00               	movlw	low _dist_final
  7223  00121C  26D9               	addwf	fsr2l,f,c
  7224  00121E  0E01               	movlw	high _dist_final
  7225  001220  22DA               	addwfc	fsr2h,f,c
  7226  001222  C058  FFDE         	movff	_a,postinc2
  7227  001226  C059  FFDD         	movff	_a+1,postdec2
  7228  00122A                     i2l4122:
  7229                           
  7230                           ;ultrasonic_main.c: 43:     if (b==2){
  7231  00122A  0E02               	movlw	2
  7232  00122C  1855               	xorwf	_b,w,c
  7233  00122E  1056               	iorwf	_b+1,w,c
  7234  001230  A4D8               	btfss	status,2,c
  7235  001232  D0A4               	goto	i2l4156
  7236                           
  7237                           ;ultrasonic_main.c: 44:         if (RB6 == 1){
  7238  001234  BC81               	btfsc	3969,6,c	;volatile
  7239                           
  7240                           ;ultrasonic_main.c: 45:             TMR1ON = 1;
  7241  001236  80CD               	bsf	4045,0,c	;volatile
  7242                           
  7243                           ;ultrasonic_main.c: 47:         if (RB6 == 0){
  7244                           
  7245                           ;ultrasonic_main.c: 46:         }
  7246  001238  BC81               	btfsc	3969,6,c	;volatile
  7247  00123A  D037               	goto	i2l4132
  7248                           
  7249                           ;ultrasonic_main.c: 48:             TMR1ON = 0;
  7250  00123C  90CD               	bcf	4045,0,c	;volatile
  7251                           
  7252                           ;ultrasonic_main.c: 49:             a[1] = (TMR1L | (TMR1H<<8))/58.82;
  7253  00123E  0EAE               	movlw	174
  7254  001240  6E13               	movwf	___fldiv@a,c
  7255  001242  0E47               	movlw	71
  7256  001244  6E14               	movwf	___fldiv@a+1,c
  7257  001246  0E6B               	movlw	107
  7258  001248  6E15               	movwf	___fldiv@a+2,c
  7259  00124A  0E42               	movlw	66
  7260  00124C  6E16               	movwf	___fldiv@a+3,c
  7261  00124E  50CF               	movf	4047,w,c	;volatile
  7262  001250  6E33               	movwf	(??_echo+1)& (0+255),c
  7263  001252  6A32               	clrf	??_echo& (0+255),c
  7264  001254  50CE               	movf	4046,w,c	;volatile
  7265  001256  6E34               	movwf	(??_echo+2)& (0+255),c
  7266  001258  6A35               	clrf	(??_echo+3)& (0+255),c
  7267  00125A  5032               	movf	??_echo,w,c
  7268  00125C  1234               	iorwf	??_echo+2,f,c
  7269  00125E  5033               	movf	??_echo+1,w,c
  7270  001260  1235               	iorwf	??_echo+3,f,c
  7271  001262  C034  F001         	movff	??_echo+2,___xxtofl@val
  7272  001266  C035  F002         	movff	??_echo+3,___xxtofl@val+1
  7273  00126A  0E00               	movlw	0
  7274  00126C  BE02               	btfsc	___xxtofl@val+1,7,c
  7275  00126E  0EFF               	movlw	-1
  7276  001270  6E03               	movwf	___xxtofl@val+2,c
  7277  001272  6E04               	movwf	___xxtofl@val+3,c
  7278  001274  0E01               	movlw	1
  7279  001276  EC94  F013         	call	___xxtofl
  7280  00127A  C001  F00F         	movff	?___xxtofl,___fldiv@b
  7281  00127E  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  7282  001282  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  7283  001286  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  7284  00128A  ECB3  F00C         	call	___fldiv	;wreg free
  7285  00128E  C00F  F028         	movff	?___fldiv,___fltol@f1
  7286  001292  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
  7287  001296  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
  7288  00129A  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
  7289  00129E  ECB6  F016         	call	___fltol	;wreg free
  7290  0012A2  C028  F05A         	movff	?___fltol,_a+2
  7291  0012A6  C029  F05B         	movff	?___fltol+1,_a+3
  7292  0012AA                     i2l4132:
  7293                           
  7294                           ;ultrasonic_main.c: 52:                 if (a[1]>=2 && a[1]<=200){
  7295  0012AA  BE5B               	btfsc	_a+3,7,c
  7296  0012AC  D067               	goto	i2l4156
  7297  0012AE  505B               	movf	_a+3,w,c
  7298  0012B0  E104               	bnz	i2u395_40
  7299  0012B2  0E02               	movlw	2
  7300  0012B4  5C5A               	subwf	_a+2,w,c
  7301  0012B6  A0D8               	btfss	status,0,c
  7302  0012B8  D061               	goto	i2l4156
  7303  0012BA                     i2u395_40:
  7304  0012BA  BE5B               	btfsc	_a+3,7,c
  7305  0012BC  D006               	goto	i2u396_40
  7306  0012BE  505B               	movf	_a+3,w,c
  7307  0012C0  E15D               	bnz	i2l4156
  7308  0012C2  0EC9               	movlw	201
  7309  0012C4  5C5A               	subwf	_a+2,w,c
  7310  0012C6  B0D8               	btfsc	status,0,c
  7311  0012C8  D059               	goto	i2l4156
  7312  0012CA                     i2u396_40:
  7313                           
  7314                           ;ultrasonic_main.c: 54:                 if ((~sumf[1])&&(dist_final[1][0]!=0)&&(dist_fin
      +                          al[1][1]!=0)&&(dist_final[1][2]!=0)){
  7315  0012CA  0448               	decf	_sumf+1,w,c
  7316  0012CC  B4D8               	btfsc	status,2,c
  7317  0012CE  D01B               	goto	i2l4148
  7318  0012D0  0101               	movlb	1	; () banked
  7319  0012D2  510C               	movf	(_dist_final+12)& (0+255),w,b
  7320  0012D4  110D               	iorwf	(_dist_final+13)& (0+255),w,b
  7321  0012D6  B4D8               	btfsc	status,2,c
  7322  0012D8  D016               	goto	i2l4148
  7323                           
  7324                           ; BSR set to: 1
  7325  0012DA  510E               	movf	(_dist_final+14)& (0+255),w,b
  7326  0012DC  110F               	iorwf	(_dist_final+15)& (0+255),w,b
  7327  0012DE  B4D8               	btfsc	status,2,c
  7328  0012E0  D012               	goto	i2l4148
  7329                           
  7330                           ; BSR set to: 1
  7331  0012E2  5110               	movf	(_dist_final+16)& (0+255),w,b
  7332  0012E4  1111               	iorwf	(_dist_final+17)& (0+255),w,b
  7333  0012E6  B4D8               	btfsc	status,2,c
  7334  0012E8  D00E               	goto	i2l4148
  7335                           
  7336                           ; BSR set to: 1
  7337                           ;ultrasonic_main.c: 55:             sum[1] = (dist_final[1][0]+dist_final[1][1]+dist_fin
      +                          al[1][2]);
  7338  0012EA  510E               	movf	(_dist_final+14)& (0+255),w,b
  7339  0012EC  250C               	addwf	(_dist_final+12)& (0+255),w,b
  7340  0012EE  6E32               	movwf	??_echo& (0+255),c
  7341  0012F0  510F               	movf	(_dist_final+15)& (0+255),w,b
  7342  0012F2  210D               	addwfc	(_dist_final+13)& (0+255),w,b
  7343  0012F4  6E33               	movwf	(??_echo+1)& (0+255),c
  7344  0012F6  5110               	movf	(_dist_final+16)& (0+255),w,b
  7345  0012F8  2432               	addwf	??_echo,w,c
  7346  0012FA  6E3A               	movwf	_sum+2,c
  7347  0012FC  5111               	movf	(_dist_final+17)& (0+255),w,b
  7348  0012FE  2033               	addwfc	??_echo+1,w,c
  7349  001300  6E3B               	movwf	_sum+3,c
  7350                           
  7351                           ; BSR set to: 1
  7352                           ;ultrasonic_main.c: 56:             sumf[1] = 1;
  7353  001302  0E01               	movlw	1
  7354  001304  6E48               	movwf	_sumf+1,c
  7355  001306                     i2l4148:
  7356                           
  7357                           ;ultrasonic_main.c: 58:         if (sumf[1]){
  7358  001306  5048               	movf	_sumf+1,w,c
  7359  001308  B4D8               	btfsc	status,2,c
  7360  00130A  D02B               	goto	i2l4154
  7361                           
  7362                           ;ultrasonic_main.c: 59:             sum[1] = sum[1] - dist_final[1][meas] + a[1];
  7363  00130C  90D8               	bcf	status,0,c
  7364  00130E  3453               	rlcf	_meas,w,c	;volatile
  7365  001310  6ED9               	movwf	fsr2l,c
  7366  001312  3454               	rlcf	_meas+1,w,c	;volatile
  7367  001314  6EDA               	movwf	fsr2h,c
  7368  001316  0E0C               	movlw	low (_dist_final+12)
  7369  001318  26D9               	addwf	fsr2l,f,c
  7370  00131A  0E01               	movlw	high (_dist_final+12)
  7371  00131C  22DA               	addwfc	fsr2h,f,c
  7372  00131E  CFDE F032          	movff	postinc2,??_echo
  7373  001322  CFDD F033          	movff	postdec2,??_echo+1
  7374  001326  EE20  F03A         	lfsr	2,_sum+2
  7375  00132A  CFDE F034          	movff	postinc2,??_echo+2
  7376  00132E  CFDD F035          	movff	postdec2,??_echo+3
  7377  001332  5032               	movf	??_echo,w,c
  7378  001334  5E34               	subwf	??_echo+2,f,c
  7379  001336  5033               	movf	??_echo+1,w,c
  7380  001338  5A35               	subwfb	??_echo+3,f,c
  7381  00133A  505A               	movf	_a+2,w,c
  7382  00133C  2434               	addwf	??_echo+2,w,c
  7383  00133E  6E3A               	movwf	_sum+2,c
  7384  001340  505B               	movf	_a+3,w,c
  7385  001342  2035               	addwfc	??_echo+3,w,c
  7386  001344  6E3B               	movwf	_sum+3,c
  7387                           
  7388                           ;ultrasonic_main.c: 60:             dist_final[1][5] = (sum[1]/5);
  7389  001346  C03A  F001         	movff	_sum+2,i2___awdiv@dividend
  7390  00134A  C03B  F002         	movff	_sum+3,i2___awdiv@dividend+1
  7391  00134E  0E00               	movlw	0
  7392  001350  6E04               	movwf	i2___awdiv@divisor+1,c
  7393  001352  0E05               	movlw	5
  7394  001354  6E03               	movwf	i2___awdiv@divisor,c
  7395  001356  ECF2  F017         	call	i2___awdiv	;wreg free
  7396  00135A  C001  F116         	movff	?i2___awdiv,_dist_final+22
  7397  00135E  C002  F117         	movff	?i2___awdiv+1,_dist_final+23
  7398  001362                     i2l4154:
  7399                           
  7400                           ;ultrasonic_main.c: 62:         dist_final[1][meas] = a[1];
  7401  001362  90D8               	bcf	status,0,c
  7402  001364  3453               	rlcf	_meas,w,c	;volatile
  7403  001366  6ED9               	movwf	fsr2l,c
  7404  001368  3454               	rlcf	_meas+1,w,c	;volatile
  7405  00136A  6EDA               	movwf	fsr2h,c
  7406  00136C  0E0C               	movlw	low (_dist_final+12)
  7407  00136E  26D9               	addwf	fsr2l,f,c
  7408  001370  0E01               	movlw	high (_dist_final+12)
  7409  001372  22DA               	addwfc	fsr2h,f,c
  7410  001374  C05A  FFDE         	movff	_a+2,postinc2
  7411  001378  C05B  FFDD         	movff	_a+3,postdec2
  7412  00137C                     i2l4156:
  7413                           
  7414                           ;ultrasonic_main.c: 65:     if (b==3){
  7415  00137C  0E03               	movlw	3
  7416  00137E  1855               	xorwf	_b,w,c
  7417  001380  1056               	iorwf	_b+1,w,c
  7418  001382  A4D8               	btfss	status,2,c
  7419  001384  D0A4               	goto	i2l4190
  7420                           
  7421                           ;ultrasonic_main.c: 66:         if (RB5 == 1){
  7422  001386  BA81               	btfsc	3969,5,c	;volatile
  7423                           
  7424                           ;ultrasonic_main.c: 67:             TMR1ON = 1;
  7425  001388  80CD               	bsf	4045,0,c	;volatile
  7426                           
  7427                           ;ultrasonic_main.c: 69:         if (RB5 == 0){
  7428                           
  7429                           ;ultrasonic_main.c: 68:         }
  7430  00138A  BA81               	btfsc	3969,5,c	;volatile
  7431  00138C  D037               	goto	i2l4166
  7432                           
  7433                           ;ultrasonic_main.c: 70:             TMR1ON = 0;
  7434  00138E  90CD               	bcf	4045,0,c	;volatile
  7435                           
  7436                           ;ultrasonic_main.c: 71:             a[2] = (TMR1L | (TMR1H<<8))/58.82;
  7437  001390  0EAE               	movlw	174
  7438  001392  6E13               	movwf	___fldiv@a,c
  7439  001394  0E47               	movlw	71
  7440  001396  6E14               	movwf	___fldiv@a+1,c
  7441  001398  0E6B               	movlw	107
  7442  00139A  6E15               	movwf	___fldiv@a+2,c
  7443  00139C  0E42               	movlw	66
  7444  00139E  6E16               	movwf	___fldiv@a+3,c
  7445  0013A0  50CF               	movf	4047,w,c	;volatile
  7446  0013A2  6E33               	movwf	(??_echo+1)& (0+255),c
  7447  0013A4  6A32               	clrf	??_echo& (0+255),c
  7448  0013A6  50CE               	movf	4046,w,c	;volatile
  7449  0013A8  6E34               	movwf	(??_echo+2)& (0+255),c
  7450  0013AA  6A35               	clrf	(??_echo+3)& (0+255),c
  7451  0013AC  5032               	movf	??_echo,w,c
  7452  0013AE  1234               	iorwf	??_echo+2,f,c
  7453  0013B0  5033               	movf	??_echo+1,w,c
  7454  0013B2  1235               	iorwf	??_echo+3,f,c
  7455  0013B4  C034  F001         	movff	??_echo+2,___xxtofl@val
  7456  0013B8  C035  F002         	movff	??_echo+3,___xxtofl@val+1
  7457  0013BC  0E00               	movlw	0
  7458  0013BE  BE02               	btfsc	___xxtofl@val+1,7,c
  7459  0013C0  0EFF               	movlw	-1
  7460  0013C2  6E03               	movwf	___xxtofl@val+2,c
  7461  0013C4  6E04               	movwf	___xxtofl@val+3,c
  7462  0013C6  0E01               	movlw	1
  7463  0013C8  EC94  F013         	call	___xxtofl
  7464  0013CC  C001  F00F         	movff	?___xxtofl,___fldiv@b
  7465  0013D0  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  7466  0013D4  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  7467  0013D8  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  7468  0013DC  ECB3  F00C         	call	___fldiv	;wreg free
  7469  0013E0  C00F  F028         	movff	?___fldiv,___fltol@f1
  7470  0013E4  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
  7471  0013E8  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
  7472  0013EC  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
  7473  0013F0  ECB6  F016         	call	___fltol	;wreg free
  7474  0013F4  C028  F05C         	movff	?___fltol,_a+4
  7475  0013F8  C029  F05D         	movff	?___fltol+1,_a+5
  7476  0013FC                     i2l4166:
  7477                           
  7478                           ;ultrasonic_main.c: 74:                 if (a[2]>=2 && a[2]<=200){
  7479  0013FC  BE5D               	btfsc	_a+5,7,c
  7480  0013FE  D067               	goto	i2l4190
  7481  001400  505D               	movf	_a+5,w,c
  7482  001402  E104               	bnz	i2u405_40
  7483  001404  0E02               	movlw	2
  7484  001406  5C5C               	subwf	_a+4,w,c
  7485  001408  A0D8               	btfss	status,0,c
  7486  00140A  D061               	goto	i2l4190
  7487  00140C                     i2u405_40:
  7488  00140C  BE5D               	btfsc	_a+5,7,c
  7489  00140E  D006               	goto	i2u406_40
  7490  001410  505D               	movf	_a+5,w,c
  7491  001412  E15D               	bnz	i2l4190
  7492  001414  0EC9               	movlw	201
  7493  001416  5C5C               	subwf	_a+4,w,c
  7494  001418  B0D8               	btfsc	status,0,c
  7495  00141A  D059               	goto	i2l4190
  7496  00141C                     i2u406_40:
  7497                           
  7498                           ;ultrasonic_main.c: 76:                 if ((~sumf[2])&&(dist_final[2][0]!=0)&&(dist_fin
      +                          al[2][1]!=0)&&(dist_final[2][2]!=0)){
  7499  00141C  0449               	decf	_sumf+2,w,c
  7500  00141E  B4D8               	btfsc	status,2,c
  7501  001420  D01B               	goto	i2l4182
  7502  001422  0101               	movlb	1	; () banked
  7503  001424  5118               	movf	(_dist_final+24)& (0+255),w,b
  7504  001426  1119               	iorwf	(_dist_final+25)& (0+255),w,b
  7505  001428  B4D8               	btfsc	status,2,c
  7506  00142A  D016               	goto	i2l4182
  7507                           
  7508                           ; BSR set to: 1
  7509  00142C  511A               	movf	(_dist_final+26)& (0+255),w,b
  7510  00142E  111B               	iorwf	(_dist_final+27)& (0+255),w,b
  7511  001430  B4D8               	btfsc	status,2,c
  7512  001432  D012               	goto	i2l4182
  7513                           
  7514                           ; BSR set to: 1
  7515  001434  511C               	movf	(_dist_final+28)& (0+255),w,b
  7516  001436  111D               	iorwf	(_dist_final+29)& (0+255),w,b
  7517  001438  B4D8               	btfsc	status,2,c
  7518  00143A  D00E               	goto	i2l4182
  7519                           
  7520                           ; BSR set to: 1
  7521                           ;ultrasonic_main.c: 77:             sum[2] = (dist_final[2][0]+dist_final[2][1]+dist_fin
      +                          al[2][2]);
  7522  00143C  511A               	movf	(_dist_final+26)& (0+255),w,b
  7523  00143E  2518               	addwf	(_dist_final+24)& (0+255),w,b
  7524  001440  6E32               	movwf	??_echo& (0+255),c
  7525  001442  511B               	movf	(_dist_final+27)& (0+255),w,b
  7526  001444  2119               	addwfc	(_dist_final+25)& (0+255),w,b
  7527  001446  6E33               	movwf	(??_echo+1)& (0+255),c
  7528  001448  511C               	movf	(_dist_final+28)& (0+255),w,b
  7529  00144A  2432               	addwf	??_echo,w,c
  7530  00144C  6E3C               	movwf	_sum+4,c
  7531  00144E  511D               	movf	(_dist_final+29)& (0+255),w,b
  7532  001450  2033               	addwfc	??_echo+1,w,c
  7533  001452  6E3D               	movwf	_sum+5,c
  7534                           
  7535                           ; BSR set to: 1
  7536                           ;ultrasonic_main.c: 78:             sumf[2] = 1;
  7537  001454  0E01               	movlw	1
  7538  001456  6E49               	movwf	_sumf+2,c
  7539  001458                     i2l4182:
  7540                           
  7541                           ;ultrasonic_main.c: 80:         if (sumf[2]){
  7542  001458  5049               	movf	_sumf+2,w,c
  7543  00145A  B4D8               	btfsc	status,2,c
  7544  00145C  D02B               	goto	i2l4188
  7545                           
  7546                           ;ultrasonic_main.c: 81:             sum[2] = sum[2] - dist_final[2][meas] + a[2];
  7547  00145E  90D8               	bcf	status,0,c
  7548  001460  3453               	rlcf	_meas,w,c	;volatile
  7549  001462  6ED9               	movwf	fsr2l,c
  7550  001464  3454               	rlcf	_meas+1,w,c	;volatile
  7551  001466  6EDA               	movwf	fsr2h,c
  7552  001468  0E18               	movlw	low (_dist_final+24)
  7553  00146A  26D9               	addwf	fsr2l,f,c
  7554  00146C  0E01               	movlw	high (_dist_final+24)
  7555  00146E  22DA               	addwfc	fsr2h,f,c
  7556  001470  CFDE F032          	movff	postinc2,??_echo
  7557  001474  CFDD F033          	movff	postdec2,??_echo+1
  7558  001478  EE20  F03C         	lfsr	2,_sum+4
  7559  00147C  CFDE F034          	movff	postinc2,??_echo+2
  7560  001480  CFDD F035          	movff	postdec2,??_echo+3
  7561  001484  5032               	movf	??_echo,w,c
  7562  001486  5E34               	subwf	??_echo+2,f,c
  7563  001488  5033               	movf	??_echo+1,w,c
  7564  00148A  5A35               	subwfb	??_echo+3,f,c
  7565  00148C  505C               	movf	_a+4,w,c
  7566  00148E  2434               	addwf	??_echo+2,w,c
  7567  001490  6E3C               	movwf	_sum+4,c
  7568  001492  505D               	movf	_a+5,w,c
  7569  001494  2035               	addwfc	??_echo+3,w,c
  7570  001496  6E3D               	movwf	_sum+5,c
  7571                           
  7572                           ;ultrasonic_main.c: 82:             dist_final[2][5] = (sum[2]/5);
  7573  001498  C03C  F001         	movff	_sum+4,i2___awdiv@dividend
  7574  00149C  C03D  F002         	movff	_sum+5,i2___awdiv@dividend+1
  7575  0014A0  0E00               	movlw	0
  7576  0014A2  6E04               	movwf	i2___awdiv@divisor+1,c
  7577  0014A4  0E05               	movlw	5
  7578  0014A6  6E03               	movwf	i2___awdiv@divisor,c
  7579  0014A8  ECF2  F017         	call	i2___awdiv	;wreg free
  7580  0014AC  C001  F122         	movff	?i2___awdiv,_dist_final+34
  7581  0014B0  C002  F123         	movff	?i2___awdiv+1,_dist_final+35
  7582  0014B4                     i2l4188:
  7583                           
  7584                           ;ultrasonic_main.c: 84:         dist_final[2][meas] = a[2];
  7585  0014B4  90D8               	bcf	status,0,c
  7586  0014B6  3453               	rlcf	_meas,w,c	;volatile
  7587  0014B8  6ED9               	movwf	fsr2l,c
  7588  0014BA  3454               	rlcf	_meas+1,w,c	;volatile
  7589  0014BC  6EDA               	movwf	fsr2h,c
  7590  0014BE  0E18               	movlw	low (_dist_final+24)
  7591  0014C0  26D9               	addwf	fsr2l,f,c
  7592  0014C2  0E01               	movlw	high (_dist_final+24)
  7593  0014C4  22DA               	addwfc	fsr2h,f,c
  7594  0014C6  C05C  FFDE         	movff	_a+4,postinc2
  7595  0014CA  C05D  FFDD         	movff	_a+5,postdec2
  7596  0014CE                     i2l4190:
  7597                           
  7598                           ;ultrasonic_main.c: 87:     if (b==4){
  7599  0014CE  0E04               	movlw	4
  7600  0014D0  1855               	xorwf	_b,w,c
  7601  0014D2  1056               	iorwf	_b+1,w,c
  7602  0014D4  A4D8               	btfss	status,2,c
  7603  0014D6  0012               	return	
  7604                           
  7605                           ;ultrasonic_main.c: 88:         if (RB4 == 1){
  7606  0014D8  B881               	btfsc	3969,4,c	;volatile
  7607                           
  7608                           ;ultrasonic_main.c: 89:             TMR1ON = 1;
  7609  0014DA  80CD               	bsf	4045,0,c	;volatile
  7610                           
  7611                           ;ultrasonic_main.c: 91:         if (RB4 == 0){
  7612                           
  7613                           ;ultrasonic_main.c: 90:         }
  7614  0014DC  B881               	btfsc	3969,4,c	;volatile
  7615  0014DE  D037               	goto	i2l4200
  7616                           
  7617                           ;ultrasonic_main.c: 92:             TMR1ON = 0;
  7618  0014E0  90CD               	bcf	4045,0,c	;volatile
  7619                           
  7620                           ;ultrasonic_main.c: 93:             a[3] = (TMR1L | (TMR1H<<8))/58.82;
  7621  0014E2  0EAE               	movlw	174
  7622  0014E4  6E13               	movwf	___fldiv@a,c
  7623  0014E6  0E47               	movlw	71
  7624  0014E8  6E14               	movwf	___fldiv@a+1,c
  7625  0014EA  0E6B               	movlw	107
  7626  0014EC  6E15               	movwf	___fldiv@a+2,c
  7627  0014EE  0E42               	movlw	66
  7628  0014F0  6E16               	movwf	___fldiv@a+3,c
  7629  0014F2  50CF               	movf	4047,w,c	;volatile
  7630  0014F4  6E33               	movwf	(??_echo+1)& (0+255),c
  7631  0014F6  6A32               	clrf	??_echo& (0+255),c
  7632  0014F8  50CE               	movf	4046,w,c	;volatile
  7633  0014FA  6E34               	movwf	(??_echo+2)& (0+255),c
  7634  0014FC  6A35               	clrf	(??_echo+3)& (0+255),c
  7635  0014FE  5032               	movf	??_echo,w,c
  7636  001500  1234               	iorwf	??_echo+2,f,c
  7637  001502  5033               	movf	??_echo+1,w,c
  7638  001504  1235               	iorwf	??_echo+3,f,c
  7639  001506  C034  F001         	movff	??_echo+2,___xxtofl@val
  7640  00150A  C035  F002         	movff	??_echo+3,___xxtofl@val+1
  7641  00150E  0E00               	movlw	0
  7642  001510  BE02               	btfsc	___xxtofl@val+1,7,c
  7643  001512  0EFF               	movlw	-1
  7644  001514  6E03               	movwf	___xxtofl@val+2,c
  7645  001516  6E04               	movwf	___xxtofl@val+3,c
  7646  001518  0E01               	movlw	1
  7647  00151A  EC94  F013         	call	___xxtofl
  7648  00151E  C001  F00F         	movff	?___xxtofl,___fldiv@b
  7649  001522  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  7650  001526  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  7651  00152A  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  7652  00152E  ECB3  F00C         	call	___fldiv	;wreg free
  7653  001532  C00F  F028         	movff	?___fldiv,___fltol@f1
  7654  001536  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
  7655  00153A  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
  7656  00153E  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
  7657  001542  ECB6  F016         	call	___fltol	;wreg free
  7658  001546  C028  F05E         	movff	?___fltol,_a+6
  7659  00154A  C029  F05F         	movff	?___fltol+1,_a+7
  7660  00154E                     i2l4200:
  7661                           
  7662                           ;ultrasonic_main.c: 96:                 if (a[3]>=2 && a[3]<=200){
  7663  00154E  BE5F               	btfsc	_a+7,7,c
  7664  001550  0012               	return	
  7665  001552  505F               	movf	_a+7,w,c
  7666  001554  E104               	bnz	i2u415_40
  7667  001556  0E02               	movlw	2
  7668  001558  5C5E               	subwf	_a+6,w,c
  7669  00155A  A0D8               	btfss	status,0,c
  7670  00155C  0012               	return	
  7671  00155E                     i2u415_40:
  7672  00155E  BE5F               	btfsc	_a+7,7,c
  7673  001560  D006               	goto	i2u416_40
  7674  001562  505F               	movf	_a+7,w,c
  7675  001564  E15D               	bnz	i2l270
  7676  001566  0EC9               	movlw	201
  7677  001568  5C5E               	subwf	_a+6,w,c
  7678  00156A  B0D8               	btfsc	status,0,c
  7679  00156C  0012               	return	
  7680  00156E                     i2u416_40:
  7681                           
  7682                           ;ultrasonic_main.c: 98:                 if ((~sumf[3])&&(dist_final[3][0]!=0)&&(dist_fin
      +                          al[3][1]!=0)&&(dist_final[3][2]!=0)){
  7683  00156E  044A               	decf	_sumf+3,w,c
  7684  001570  B4D8               	btfsc	status,2,c
  7685  001572  D01B               	goto	i2l4216
  7686  001574  0101               	movlb	1	; () banked
  7687  001576  5124               	movf	(_dist_final+36)& (0+255),w,b
  7688  001578  1125               	iorwf	(_dist_final+37)& (0+255),w,b
  7689  00157A  B4D8               	btfsc	status,2,c
  7690  00157C  D016               	goto	i2l4216
  7691                           
  7692                           ; BSR set to: 1
  7693  00157E  5126               	movf	(_dist_final+38)& (0+255),w,b
  7694  001580  1127               	iorwf	(_dist_final+39)& (0+255),w,b
  7695  001582  B4D8               	btfsc	status,2,c
  7696  001584  D012               	goto	i2l4216
  7697                           
  7698                           ; BSR set to: 1
  7699  001586  5128               	movf	(_dist_final+40)& (0+255),w,b
  7700  001588  1129               	iorwf	(_dist_final+41)& (0+255),w,b
  7701  00158A  B4D8               	btfsc	status,2,c
  7702  00158C  D00E               	goto	i2l4216
  7703                           
  7704                           ; BSR set to: 1
  7705                           ;ultrasonic_main.c: 99:             sum[3] = (dist_final[3][0]+dist_final[3][1]+dist_fin
      +                          al[3][2]);
  7706  00158E  5126               	movf	(_dist_final+38)& (0+255),w,b
  7707  001590  2524               	addwf	(_dist_final+36)& (0+255),w,b
  7708  001592  6E32               	movwf	??_echo& (0+255),c
  7709  001594  5127               	movf	(_dist_final+39)& (0+255),w,b
  7710  001596  2125               	addwfc	(_dist_final+37)& (0+255),w,b
  7711  001598  6E33               	movwf	(??_echo+1)& (0+255),c
  7712  00159A  5128               	movf	(_dist_final+40)& (0+255),w,b
  7713  00159C  2432               	addwf	??_echo,w,c
  7714  00159E  6E3E               	movwf	_sum+6,c
  7715  0015A0  5129               	movf	(_dist_final+41)& (0+255),w,b
  7716  0015A2  2033               	addwfc	??_echo+1,w,c
  7717  0015A4  6E3F               	movwf	_sum+7,c
  7718                           
  7719                           ; BSR set to: 1
  7720                           ;ultrasonic_main.c: 100:             sumf[3] = 1;
  7721  0015A6  0E01               	movlw	1
  7722  0015A8  6E4A               	movwf	_sumf+3,c
  7723  0015AA                     i2l4216:
  7724                           
  7725                           ;ultrasonic_main.c: 102:         if (sumf[3]){
  7726  0015AA  504A               	movf	_sumf+3,w,c
  7727  0015AC  B4D8               	btfsc	status,2,c
  7728  0015AE  D02B               	goto	i2l4222
  7729                           
  7730                           ;ultrasonic_main.c: 103:             sum[3] = sum[3] - dist_final[3][meas] + a[3];
  7731  0015B0  90D8               	bcf	status,0,c
  7732  0015B2  3453               	rlcf	_meas,w,c	;volatile
  7733  0015B4  6ED9               	movwf	fsr2l,c
  7734  0015B6  3454               	rlcf	_meas+1,w,c	;volatile
  7735  0015B8  6EDA               	movwf	fsr2h,c
  7736  0015BA  0E24               	movlw	low (_dist_final+36)
  7737  0015BC  26D9               	addwf	fsr2l,f,c
  7738  0015BE  0E01               	movlw	high (_dist_final+36)
  7739  0015C0  22DA               	addwfc	fsr2h,f,c
  7740  0015C2  CFDE F032          	movff	postinc2,??_echo
  7741  0015C6  CFDD F033          	movff	postdec2,??_echo+1
  7742  0015CA  EE20  F03E         	lfsr	2,_sum+6
  7743  0015CE  CFDE F034          	movff	postinc2,??_echo+2
  7744  0015D2  CFDD F035          	movff	postdec2,??_echo+3
  7745  0015D6  5032               	movf	??_echo,w,c
  7746  0015D8  5E34               	subwf	??_echo+2,f,c
  7747  0015DA  5033               	movf	??_echo+1,w,c
  7748  0015DC  5A35               	subwfb	??_echo+3,f,c
  7749  0015DE  505E               	movf	_a+6,w,c
  7750  0015E0  2434               	addwf	??_echo+2,w,c
  7751  0015E2  6E3E               	movwf	_sum+6,c
  7752  0015E4  505F               	movf	_a+7,w,c
  7753  0015E6  2035               	addwfc	??_echo+3,w,c
  7754  0015E8  6E3F               	movwf	_sum+7,c
  7755                           
  7756                           ;ultrasonic_main.c: 104:             dist_final[3][5] = (sum[3]/5);
  7757  0015EA  C03E  F001         	movff	_sum+6,i2___awdiv@dividend
  7758  0015EE  C03F  F002         	movff	_sum+7,i2___awdiv@dividend+1
  7759  0015F2  0E00               	movlw	0
  7760  0015F4  6E04               	movwf	i2___awdiv@divisor+1,c
  7761  0015F6  0E05               	movlw	5
  7762  0015F8  6E03               	movwf	i2___awdiv@divisor,c
  7763  0015FA  ECF2  F017         	call	i2___awdiv	;wreg free
  7764  0015FE  C001  F12E         	movff	?i2___awdiv,_dist_final+46
  7765  001602  C002  F12F         	movff	?i2___awdiv+1,_dist_final+47
  7766  001606                     i2l4222:
  7767                           
  7768                           ;ultrasonic_main.c: 106:         dist_final[3][meas] = a[3];
  7769  001606  90D8               	bcf	status,0,c
  7770  001608  3453               	rlcf	_meas,w,c	;volatile
  7771  00160A  6ED9               	movwf	fsr2l,c
  7772  00160C  3454               	rlcf	_meas+1,w,c	;volatile
  7773  00160E  6EDA               	movwf	fsr2h,c
  7774  001610  0E24               	movlw	low (_dist_final+36)
  7775  001612  26D9               	addwf	fsr2l,f,c
  7776  001614  0E01               	movlw	high (_dist_final+36)
  7777  001616  22DA               	addwfc	fsr2h,f,c
  7778  001618  C05E  FFDE         	movff	_a+6,postinc2
  7779  00161C  C05F  FFDD         	movff	_a+7,postdec2
  7780  001620                     i2l270:
  7781  001620  0012               	return		;funcret
  7782  001622                     __end_of_echo:
  7783                           	opt callstack 0
  7784                           
  7785 ;; *************** function i2___awdiv *****************
  7786 ;; Defined at:
  7787 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  7788 ;; Parameters:    Size  Location     Type
  7789 ;;  dividend        2    0[COMRAM] int 
  7790 ;;  divisor         2    2[COMRAM] int 
  7791 ;; Auto vars:     Size  Location     Type
  7792 ;;  __awdiv         2    6[COMRAM] int 
  7793 ;;  __awdiv         1    5[COMRAM] unsigned char 
  7794 ;;  __awdiv         1    4[COMRAM] unsigned char 
  7795 ;; Return value:  Size  Location     Type
  7796 ;;                  2    0[COMRAM] int 
  7797 ;; Registers used:
  7798 ;;		wreg, status,2, status,0
  7799 ;; Tracked objects:
  7800 ;;		On entry : 0/0
  7801 ;;		On exit  : 0/0
  7802 ;;		Unchanged: 0/0
  7803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7804 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7805 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7807 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7808 ;;Total ram usage:        8 bytes
  7809 ;; Hardware stack levels used:    1
  7810 ;; This function calls:
  7811 ;;		Nothing
  7812 ;; This function is called by:
  7813 ;;		_echo
  7814 ;; This function uses a non-reentrant model
  7815 ;;
  7816                           
  7817                           	psect	text35
  7818  002FE4                     __ptext35:
  7819                           	opt callstack 0
  7820  002FE4                     i2___awdiv:
  7821                           	opt callstack 14
  7822                           
  7823                           ;incstack = 0
  7824  002FE4  0E00               	movlw	0
  7825  002FE6  6E06               	movwf	i2___awdiv@sign,c
  7826  002FE8  AE04               	btfss	i2___awdiv@divisor+1,7,c
  7827  002FEA  D006               	goto	i2l3822
  7828  002FEC  6C03               	negf	i2___awdiv@divisor,c
  7829  002FEE  1E04               	comf	i2___awdiv@divisor+1,f,c
  7830  002FF0  B0D8               	btfsc	status,0,c
  7831  002FF2  2A04               	incf	i2___awdiv@divisor+1,f,c
  7832  002FF4  0E01               	movlw	1
  7833  002FF6  6E06               	movwf	i2___awdiv@sign,c
  7834  002FF8                     i2l3822:
  7835  002FF8  AE02               	btfss	i2___awdiv@dividend+1,7,c
  7836  002FFA  D006               	goto	i2l3828
  7837  002FFC  6C01               	negf	i2___awdiv@dividend,c
  7838  002FFE  1E02               	comf	i2___awdiv@dividend+1,f,c
  7839  003000  B0D8               	btfsc	status,0,c
  7840  003002  2A02               	incf	i2___awdiv@dividend+1,f,c
  7841  003004  0E01               	movlw	1
  7842  003006  1A06               	xorwf	i2___awdiv@sign,f,c
  7843  003008                     i2l3828:
  7844  003008  0E00               	movlw	0
  7845  00300A  6E08               	movwf	i2___awdiv@quotient+1,c
  7846  00300C  0E00               	movlw	0
  7847  00300E  6E07               	movwf	i2___awdiv@quotient,c
  7848  003010  5003               	movf	i2___awdiv@divisor,w,c
  7849  003012  1004               	iorwf	i2___awdiv@divisor+1,w,c
  7850  003014  B4D8               	btfsc	status,2,c
  7851  003016  D01C               	goto	i2l3850
  7852  003018  0E01               	movlw	1
  7853  00301A  6E05               	movwf	i2___awdiv@counter,c
  7854  00301C  D004               	goto	i2l3836
  7855  00301E                     i2l3834:
  7856  00301E  90D8               	bcf	status,0,c
  7857  003020  3603               	rlcf	i2___awdiv@divisor,f,c
  7858  003022  3604               	rlcf	i2___awdiv@divisor+1,f,c
  7859  003024  2A05               	incf	i2___awdiv@counter,f,c
  7860  003026                     i2l3836:
  7861  003026  AE04               	btfss	i2___awdiv@divisor+1,7,c
  7862  003028  D7FA               	goto	i2l3834
  7863  00302A                     i2u359_40:
  7864  00302A  90D8               	bcf	status,0,c
  7865  00302C  3607               	rlcf	i2___awdiv@quotient,f,c
  7866  00302E  3608               	rlcf	i2___awdiv@quotient+1,f,c
  7867  003030  5003               	movf	i2___awdiv@divisor,w,c
  7868  003032  5C01               	subwf	i2___awdiv@dividend,w,c
  7869  003034  5004               	movf	i2___awdiv@divisor+1,w,c
  7870  003036  5802               	subwfb	i2___awdiv@dividend+1,w,c
  7871  003038  A0D8               	btfss	status,0,c
  7872  00303A  D005               	goto	i2l3846
  7873  00303C  5003               	movf	i2___awdiv@divisor,w,c
  7874  00303E  5E01               	subwf	i2___awdiv@dividend,f,c
  7875  003040  5004               	movf	i2___awdiv@divisor+1,w,c
  7876  003042  5A02               	subwfb	i2___awdiv@dividend+1,f,c
  7877  003044  8007               	bsf	i2___awdiv@quotient,0,c
  7878  003046                     i2l3846:
  7879  003046  90D8               	bcf	status,0,c
  7880  003048  3204               	rrcf	i2___awdiv@divisor+1,f,c
  7881  00304A  3203               	rrcf	i2___awdiv@divisor,f,c
  7882  00304C  2E05               	decfsz	i2___awdiv@counter,f,c
  7883  00304E  D7ED               	goto	i2u359_40
  7884  003050                     i2l3850:
  7885  003050  5006               	movf	i2___awdiv@sign,w,c
  7886  003052  B4D8               	btfsc	status,2,c
  7887  003054  D004               	goto	i2l3854
  7888  003056  6C07               	negf	i2___awdiv@quotient,c
  7889  003058  1E08               	comf	i2___awdiv@quotient+1,f,c
  7890  00305A  B0D8               	btfsc	status,0,c
  7891  00305C  2A08               	incf	i2___awdiv@quotient+1,f,c
  7892  00305E                     i2l3854:
  7893  00305E  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
  7894  003062  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
  7895  003066  0012               	return		;funcret
  7896  003068                     __end_ofi2___awdiv:
  7897                           	opt callstack 0
  7898                           
  7899 ;; *************** function ___xxtofl *****************
  7900 ;; Defined at:
  7901 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  7902 ;; Parameters:    Size  Location     Type
  7903 ;;  sign            1    wreg     unsigned char 
  7904 ;;  val             4    0[COMRAM] long 
  7905 ;; Auto vars:     Size  Location     Type
  7906 ;;  sign            1    8[COMRAM] unsigned char 
  7907 ;;  arg             4   10[COMRAM] unsigned long 
  7908 ;;  exp             1    9[COMRAM] unsigned char 
  7909 ;; Return value:  Size  Location     Type
  7910 ;;                  4    0[COMRAM] unsigned char 
  7911 ;; Registers used:
  7912 ;;		wreg, status,2, status,0
  7913 ;; Tracked objects:
  7914 ;;		On entry : 0/0
  7915 ;;		On exit  : 0/0
  7916 ;;		Unchanged: 0/0
  7917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7918 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7919 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7920 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7921 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7922 ;;Total ram usage:       14 bytes
  7923 ;; Hardware stack levels used:    1
  7924 ;; This function calls:
  7925 ;;		Nothing
  7926 ;; This function is called by:
  7927 ;;		_echo
  7928 ;; This function uses a non-reentrant model
  7929 ;;
  7930                           
  7931                           	psect	text36
  7932  002728                     __ptext36:
  7933                           	opt callstack 0
  7934  002728                     ___xxtofl:
  7935                           	opt callstack 14
  7936                           
  7937                           ;incstack = 0
  7938                           ;___xxtofl@sign stored from wreg
  7939  002728  6E09               	movwf	___xxtofl@sign,c
  7940  00272A  5009               	movf	___xxtofl@sign,w,c
  7941  00272C  A4D8               	btfss	status,2,c
  7942  00272E  AE04               	btfss	___xxtofl@val+3,7,c
  7943  002730  D01A               	goto	i2l1150
  7944  002732  C001  F005         	movff	___xxtofl@val,??___xxtofl
  7945  002736  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  7946  00273A  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  7947  00273E  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  7948  002742  1E05               	comf	??___xxtofl,f,c
  7949  002744  1E06               	comf	??___xxtofl+1,f,c
  7950  002746  1E07               	comf	??___xxtofl+2,f,c
  7951  002748  1E08               	comf	??___xxtofl+3,f,c
  7952  00274A  2A05               	incf	??___xxtofl,f,c
  7953  00274C  0E00               	movlw	0
  7954  00274E  2206               	addwfc	??___xxtofl+1,f,c
  7955  002750  2207               	addwfc	??___xxtofl+2,f,c
  7956  002752  2208               	addwfc	??___xxtofl+3,f,c
  7957  002754  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  7958  002758  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  7959  00275C  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  7960  002760  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  7961  002764  D008               	goto	i2l3774
  7962  002766                     i2l1150:
  7963  002766  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  7964  00276A  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7965  00276E  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7966  002772  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7967  002776                     i2l3774:
  7968  002776  5001               	movf	___xxtofl@val,w,c
  7969  002778  1002               	iorwf	___xxtofl@val+1,w,c
  7970  00277A  1003               	iorwf	___xxtofl@val+2,w,c
  7971  00277C  1004               	iorwf	___xxtofl@val+3,w,c
  7972  00277E  A4D8               	btfss	status,2,c
  7973  002780  D009               	goto	i2l3780
  7974  002782  0E00               	movlw	0
  7975  002784  6E01               	movwf	?___xxtofl,c
  7976  002786  0E00               	movlw	0
  7977  002788  6E02               	movwf	?___xxtofl+1,c
  7978  00278A  0E00               	movlw	0
  7979  00278C  6E03               	movwf	?___xxtofl+2,c
  7980  00278E  0E00               	movlw	0
  7981  002790  6E04               	movwf	?___xxtofl+3,c
  7982  002792  0012               	return	
  7983  002794                     i2l3780:
  7984  002794  0E96               	movlw	150
  7985  002796  6E0A               	movwf	___xxtofl@exp,c
  7986  002798  D006               	goto	i2l3784
  7987  00279A                     i2l3782:
  7988  00279A  2A0A               	incf	___xxtofl@exp,f,c
  7989  00279C  90D8               	bcf	status,0,c
  7990  00279E  320E               	rrcf	___xxtofl@arg+3,f,c
  7991  0027A0  320D               	rrcf	___xxtofl@arg+2,f,c
  7992  0027A2  320C               	rrcf	___xxtofl@arg+1,f,c
  7993  0027A4  320B               	rrcf	___xxtofl@arg,f,c
  7994  0027A6                     i2l3784:
  7995  0027A6  0E00               	movlw	0
  7996  0027A8  140B               	andwf	___xxtofl@arg,w,c
  7997  0027AA  6E05               	movwf	??___xxtofl& (0+255),c
  7998  0027AC  0E00               	movlw	0
  7999  0027AE  140C               	andwf	___xxtofl@arg+1,w,c
  8000  0027B0  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  8001  0027B2  0E00               	movlw	0
  8002  0027B4  140D               	andwf	___xxtofl@arg+2,w,c
  8003  0027B6  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  8004  0027B8  0EFE               	movlw	254
  8005  0027BA  140E               	andwf	___xxtofl@arg+3,w,c
  8006  0027BC  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  8007  0027BE  5005               	movf	??___xxtofl,w,c
  8008  0027C0  1006               	iorwf	??___xxtofl+1,w,c
  8009  0027C2  1007               	iorwf	??___xxtofl+2,w,c
  8010  0027C4  1008               	iorwf	??___xxtofl+3,w,c
  8011  0027C6  B4D8               	btfsc	status,2,c
  8012  0027C8  D00D               	goto	i2l1157
  8013  0027CA  D7E7               	goto	i2l3782
  8014  0027CC                     i2l3786:
  8015  0027CC  2A0A               	incf	___xxtofl@exp,f,c
  8016  0027CE  0E01               	movlw	1
  8017  0027D0  260B               	addwf	___xxtofl@arg,f,c
  8018  0027D2  0E00               	movlw	0
  8019  0027D4  220C               	addwfc	___xxtofl@arg+1,f,c
  8020  0027D6  220D               	addwfc	___xxtofl@arg+2,f,c
  8021  0027D8  220E               	addwfc	___xxtofl@arg+3,f,c
  8022  0027DA  90D8               	bcf	status,0,c
  8023  0027DC  320E               	rrcf	___xxtofl@arg+3,f,c
  8024  0027DE  320D               	rrcf	___xxtofl@arg+2,f,c
  8025  0027E0  320C               	rrcf	___xxtofl@arg+1,f,c
  8026  0027E2  320B               	rrcf	___xxtofl@arg,f,c
  8027  0027E4                     i2l1157:
  8028  0027E4  0E00               	movlw	0
  8029  0027E6  140B               	andwf	___xxtofl@arg,w,c
  8030  0027E8  6E05               	movwf	??___xxtofl& (0+255),c
  8031  0027EA  0E00               	movlw	0
  8032  0027EC  140C               	andwf	___xxtofl@arg+1,w,c
  8033  0027EE  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  8034  0027F0  0E00               	movlw	0
  8035  0027F2  140D               	andwf	___xxtofl@arg+2,w,c
  8036  0027F4  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  8037  0027F6  0EFF               	movlw	255
  8038  0027F8  140E               	andwf	___xxtofl@arg+3,w,c
  8039  0027FA  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  8040  0027FC  5005               	movf	??___xxtofl,w,c
  8041  0027FE  1006               	iorwf	??___xxtofl+1,w,c
  8042  002800  1007               	iorwf	??___xxtofl+2,w,c
  8043  002802  1008               	iorwf	??___xxtofl+3,w,c
  8044  002804  B4D8               	btfsc	status,2,c
  8045  002806  D007               	goto	i2l3794
  8046  002808  D7E1               	goto	i2l3786
  8047  00280A                     i2l3792:
  8048  00280A  060A               	decf	___xxtofl@exp,f,c
  8049  00280C  90D8               	bcf	status,0,c
  8050  00280E  360B               	rlcf	___xxtofl@arg,f,c
  8051  002810  360C               	rlcf	___xxtofl@arg+1,f,c
  8052  002812  360D               	rlcf	___xxtofl@arg+2,f,c
  8053  002814  360E               	rlcf	___xxtofl@arg+3,f,c
  8054  002816                     i2l3794:
  8055  002816  BE0D               	btfsc	___xxtofl@arg+2,7,c
  8056  002818  D003               	goto	i2u352_40
  8057  00281A  0E02               	movlw	2
  8058  00281C  600A               	cpfslt	___xxtofl@exp,c
  8059  00281E  D7F5               	goto	i2l3792
  8060  002820                     i2u352_40:
  8061  002820  A00A               	btfss	___xxtofl@exp,0,c
  8062  002822  9E0D               	bcf	___xxtofl@arg+2,7,c
  8063  002824  90D8               	bcf	status,0,c
  8064  002826  320A               	rrcf	___xxtofl@exp,f,c
  8065  002828  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  8066  00282C  6A06               	clrf	(??___xxtofl+1)& (0+255),c
  8067  00282E  6A07               	clrf	(??___xxtofl+2)& (0+255),c
  8068  002830  6A08               	clrf	(??___xxtofl+3)& (0+255),c
  8069  002832  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  8070  002836  6A07               	clrf	??___xxtofl+2,c
  8071  002838  6A06               	clrf	??___xxtofl+1,c
  8072  00283A  6A05               	clrf	??___xxtofl,c
  8073  00283C  5005               	movf	??___xxtofl,w,c
  8074  00283E  120B               	iorwf	___xxtofl@arg,f,c
  8075  002840  5006               	movf	??___xxtofl+1,w,c
  8076  002842  120C               	iorwf	___xxtofl@arg+1,f,c
  8077  002844  5007               	movf	??___xxtofl+2,w,c
  8078  002846  120D               	iorwf	___xxtofl@arg+2,f,c
  8079  002848  5008               	movf	??___xxtofl+3,w,c
  8080  00284A  120E               	iorwf	___xxtofl@arg+3,f,c
  8081  00284C  5009               	movf	___xxtofl@sign,w,c
  8082  00284E  A4D8               	btfss	status,2,c
  8083  002850  AE04               	btfss	___xxtofl@val+3,7,c
  8084  002852  D001               	goto	i2l3810
  8085  002854  8E0E               	bsf	___xxtofl@arg+3,7,c
  8086  002856                     i2l3810:
  8087  002856  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  8088  00285A  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  8089  00285E  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  8090  002862  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  8091  002866  0012               	return		;funcret
  8092  002868                     __end_of___xxtofl:
  8093                           	opt callstack 0
  8094                           
  8095 ;; *************** function ___fltol *****************
  8096 ;; Defined at:
  8097 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  8098 ;; Parameters:    Size  Location     Type
  8099 ;;  f1              4   39[COMRAM] unsigned char 
  8100 ;; Auto vars:     Size  Location     Type
  8101 ;;  exp1            1   48[COMRAM] unsigned char 
  8102 ;;  sign1           1   47[COMRAM] unsigned char 
  8103 ;; Return value:  Size  Location     Type
  8104 ;;                  4   39[COMRAM] long 
  8105 ;; Registers used:
  8106 ;;		wreg, status,2, status,0
  8107 ;; Tracked objects:
  8108 ;;		On entry : 0/0
  8109 ;;		On exit  : 0/0
  8110 ;;		Unchanged: 0/0
  8111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8112 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8113 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8114 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8115 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8116 ;;Total ram usage:       10 bytes
  8117 ;; Hardware stack levels used:    1
  8118 ;; This function calls:
  8119 ;;		Nothing
  8120 ;; This function is called by:
  8121 ;;		_echo
  8122 ;; This function uses a non-reentrant model
  8123 ;;
  8124                           
  8125                           	psect	text37
  8126  002D6C                     __ptext37:
  8127                           	opt callstack 0
  8128  002D6C                     ___fltol:
  8129                           	opt callstack 14
  8130                           
  8131                           ;incstack = 0
  8132  002D6C  342A               	rlcf	___fltol@f1+2,w,c
  8133  002D6E  342B               	rlcf	___fltol@f1+3,w,c
  8134  002D70  6E31               	movwf	___fltol@exp1,c
  8135  002D72  5031               	movf	___fltol@exp1,w,c
  8136  002D74  A4D8               	btfss	status,2,c
  8137  002D76  D009               	goto	i2l3730
  8138  002D78                     i2u339_40:
  8139  002D78  0E00               	movlw	0
  8140  002D7A  6E28               	movwf	?___fltol,c
  8141  002D7C  0E00               	movlw	0
  8142  002D7E  6E29               	movwf	?___fltol+1,c
  8143  002D80  0E00               	movlw	0
  8144  002D82  6E2A               	movwf	?___fltol+2,c
  8145  002D84  0E00               	movlw	0
  8146  002D86  6E2B               	movwf	?___fltol+3,c
  8147  002D88  0012               	return	
  8148  002D8A                     i2l3730:
  8149  002D8A  C028  F02C         	movff	___fltol@f1,??___fltol
  8150  002D8E  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
  8151  002D92  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
  8152  002D96  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
  8153  002D9A  0E20               	movlw	32
  8154  002D9C  D005               	goto	i2u340_40
  8155  002D9E                     i2u340_45:
  8156  002D9E  90D8               	bcf	status,0,c
  8157  002DA0  322F               	rrcf	??___fltol+3,f,c
  8158  002DA2  322E               	rrcf	??___fltol+2,f,c
  8159  002DA4  322D               	rrcf	??___fltol+1,f,c
  8160  002DA6  322C               	rrcf	??___fltol,f,c
  8161  002DA8                     i2u340_40:
  8162  002DA8  2EE8               	decfsz	wreg,f,c
  8163  002DAA  D7F9               	goto	i2u340_45
  8164  002DAC  502C               	movf	??___fltol,w,c
  8165  002DAE  6E30               	movwf	___fltol@sign1,c
  8166  002DB0  8E2A               	bsf	___fltol@f1+2,7,c
  8167  002DB2  0EFF               	movlw	255
  8168  002DB4  1628               	andwf	___fltol@f1,f,c
  8169  002DB6  0EFF               	movlw	255
  8170  002DB8  1629               	andwf	___fltol@f1+1,f,c
  8171  002DBA  0EFF               	movlw	255
  8172  002DBC  162A               	andwf	___fltol@f1+2,f,c
  8173  002DBE  0E00               	movlw	0
  8174  002DC0  162B               	andwf	___fltol@f1+3,f,c
  8175  002DC2  0E96               	movlw	150
  8176  002DC4  5E31               	subwf	___fltol@exp1,f,c
  8177  002DC6  AE31               	btfss	___fltol@exp1,7,c
  8178  002DC8  D00D               	goto	i2l3750
  8179  002DCA  5031               	movf	___fltol@exp1,w,c
  8180  002DCC  0A80               	xorlw	128
  8181  002DCE  0F97               	addlw	151
  8182  002DD0  A0D8               	btfss	status,0,c
  8183  002DD2  D7D2               	goto	i2u339_40
  8184  002DD4                     i2l3746:
  8185  002DD4  90D8               	bcf	status,0,c
  8186  002DD6  322B               	rrcf	___fltol@f1+3,f,c
  8187  002DD8  322A               	rrcf	___fltol@f1+2,f,c
  8188  002DDA  3229               	rrcf	___fltol@f1+1,f,c
  8189  002DDC  3228               	rrcf	___fltol@f1,f,c
  8190  002DDE  3E31               	incfsz	___fltol@exp1,f,c
  8191  002DE0  D7F9               	goto	i2l3746
  8192  002DE2  D00D               	goto	i2u344_40
  8193  002DE4                     i2l3750:
  8194  002DE4  0E1F               	movlw	31
  8195  002DE6  6431               	cpfsgt	___fltol@exp1,c
  8196  002DE8  D007               	goto	i2l3758
  8197  002DEA  D7C6               	goto	i2u339_40
  8198  002DEC                     i2l3756:
  8199  002DEC  90D8               	bcf	status,0,c
  8200  002DEE  3628               	rlcf	___fltol@f1,f,c
  8201  002DF0  3629               	rlcf	___fltol@f1+1,f,c
  8202  002DF2  362A               	rlcf	___fltol@f1+2,f,c
  8203  002DF4  362B               	rlcf	___fltol@f1+3,f,c
  8204  002DF6  0631               	decf	___fltol@exp1,f,c
  8205  002DF8                     i2l3758:
  8206  002DF8  5031               	movf	___fltol@exp1,w,c
  8207  002DFA  A4D8               	btfss	status,2,c
  8208  002DFC  D7F7               	goto	i2l3756
  8209  002DFE                     i2u344_40:
  8210  002DFE  5030               	movf	___fltol@sign1,w,c
  8211  002E00  B4D8               	btfsc	status,2,c
  8212  002E02  D008               	goto	i2l3764
  8213  002E04  1E2B               	comf	___fltol@f1+3,f,c
  8214  002E06  1E2A               	comf	___fltol@f1+2,f,c
  8215  002E08  1E29               	comf	___fltol@f1+1,f,c
  8216  002E0A  6C28               	negf	___fltol@f1,c
  8217  002E0C  0E00               	movlw	0
  8218  002E0E  2229               	addwfc	___fltol@f1+1,f,c
  8219  002E10  222A               	addwfc	___fltol@f1+2,f,c
  8220  002E12  222B               	addwfc	___fltol@f1+3,f,c
  8221  002E14                     i2l3764:
  8222  002E14  C028  F028         	movff	___fltol@f1,?___fltol
  8223  002E18  C029  F029         	movff	___fltol@f1+1,?___fltol+1
  8224  002E1C  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
  8225  002E20  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
  8226  002E24  0012               	return		;funcret
  8227  002E26                     __end_of___fltol:
  8228                           	opt callstack 0
  8229                           
  8230 ;; *************** function ___fldiv *****************
  8231 ;; Defined at:
  8232 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
  8233 ;; Parameters:    Size  Location     Type
  8234 ;;  b               4   14[COMRAM] long 
  8235 ;;  a               4   18[COMRAM] long 
  8236 ;; Auto vars:     Size  Location     Type
  8237 ;;  grs             4   33[COMRAM] unsigned long 
  8238 ;;  rem             4   26[COMRAM] unsigned long 
  8239 ;;  new_exp         2   31[COMRAM] short 
  8240 ;;  aexp            1   38[COMRAM] unsigned char 
  8241 ;;  bexp            1   37[COMRAM] unsigned char 
  8242 ;;  sign            1   30[COMRAM] unsigned char 
  8243 ;; Return value:  Size  Location     Type
  8244 ;;                  4   14[COMRAM] unsigned char 
  8245 ;; Registers used:
  8246 ;;		wreg, status,2, status,0
  8247 ;; Tracked objects:
  8248 ;;		On entry : 0/0
  8249 ;;		On exit  : 0/0
  8250 ;;		Unchanged: 0/0
  8251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8252 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8253 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8254 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8255 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8256 ;;Total ram usage:       25 bytes
  8257 ;; Hardware stack levels used:    1
  8258 ;; This function calls:
  8259 ;;		Nothing
  8260 ;; This function is called by:
  8261 ;;		_echo
  8262 ;; This function uses a non-reentrant model
  8263 ;;
  8264                           
  8265                           	psect	text38
  8266  001966                     __ptext38:
  8267                           	opt callstack 0
  8268  001966                     ___fldiv:
  8269                           	opt callstack 14
  8270                           
  8271                           ;incstack = 0
  8272  001966  5012               	movf	___fldiv@b+3,w,c
  8273  001968  0B80               	andlw	128
  8274  00196A  6E1F               	movwf	___fldiv@sign,c
  8275  00196C  5012               	movf	___fldiv@b+3,w,c
  8276  00196E  2412               	addwf	___fldiv@b+3,w,c
  8277  001970  6E26               	movwf	___fldiv@bexp,c
  8278  001972  BE11               	btfsc	___fldiv@b+2,7,c
  8279  001974  8026               	bsf	___fldiv@bexp,0,c
  8280  001976  5026               	movf	___fldiv@bexp,w,c
  8281  001978  B4D8               	btfsc	status,2,c
  8282  00197A  D00D               	goto	i2l3558
  8283  00197C  2826               	incf	___fldiv@bexp,w,c
  8284  00197E  A4D8               	btfss	status,2,c
  8285  001980  D008               	goto	i2l3554
  8286  001982  0E00               	movlw	0
  8287  001984  6E0F               	movwf	___fldiv@b,c
  8288  001986  0E00               	movlw	0
  8289  001988  6E10               	movwf	___fldiv@b+1,c
  8290  00198A  0E00               	movlw	0
  8291  00198C  6E11               	movwf	___fldiv@b+2,c
  8292  00198E  0E00               	movlw	0
  8293  001990  6E12               	movwf	___fldiv@b+3,c
  8294  001992                     i2l3554:
  8295  001992  8E11               	bsf	___fldiv@b+2,7,c
  8296  001994  D006               	goto	L4
  8297  001996                     i2l3558:
  8298  001996  0E00               	movlw	0
  8299  001998  6E0F               	movwf	___fldiv@b,c
  8300  00199A  0E00               	movlw	0
  8301  00199C  6E10               	movwf	___fldiv@b+1,c
  8302  00199E  0E00               	movlw	0
  8303  0019A0  6E11               	movwf	___fldiv@b+2,c
  8304  0019A2                     L4:
  8305  0019A2  0E00               	movlw	0
  8306  0019A4  6E12               	movwf	___fldiv@b+3,c
  8307  0019A6  5016               	movf	___fldiv@a+3,w,c
  8308  0019A8  0B80               	andlw	128
  8309  0019AA  1A1F               	xorwf	___fldiv@sign,f,c
  8310  0019AC  5016               	movf	___fldiv@a+3,w,c
  8311  0019AE  2416               	addwf	___fldiv@a+3,w,c
  8312  0019B0  6E27               	movwf	___fldiv@aexp,c
  8313  0019B2  BE15               	btfsc	___fldiv@a+2,7,c
  8314  0019B4  8027               	bsf	___fldiv@aexp,0,c
  8315  0019B6  5027               	movf	___fldiv@aexp,w,c
  8316  0019B8  B4D8               	btfsc	status,2,c
  8317  0019BA  D00D               	goto	i2l3578
  8318  0019BC  2827               	incf	___fldiv@aexp,w,c
  8319  0019BE  A4D8               	btfss	status,2,c
  8320  0019C0  D008               	goto	i2l3574
  8321  0019C2  0E00               	movlw	0
  8322  0019C4  6E13               	movwf	___fldiv@a,c
  8323  0019C6  0E00               	movlw	0
  8324  0019C8  6E14               	movwf	___fldiv@a+1,c
  8325  0019CA  0E00               	movlw	0
  8326  0019CC  6E15               	movwf	___fldiv@a+2,c
  8327  0019CE  0E00               	movlw	0
  8328  0019D0  6E16               	movwf	___fldiv@a+3,c
  8329  0019D2                     i2l3574:
  8330  0019D2  8E15               	bsf	___fldiv@a+2,7,c
  8331  0019D4  D006               	goto	L5
  8332  0019D6                     i2l3578:
  8333  0019D6  0E00               	movlw	0
  8334  0019D8  6E13               	movwf	___fldiv@a,c
  8335  0019DA  0E00               	movlw	0
  8336  0019DC  6E14               	movwf	___fldiv@a+1,c
  8337  0019DE  0E00               	movlw	0
  8338  0019E0  6E15               	movwf	___fldiv@a+2,c
  8339  0019E2                     L5:
  8340  0019E2  0E00               	movlw	0
  8341  0019E4  6E16               	movwf	___fldiv@a+3,c
  8342  0019E6  5013               	movf	___fldiv@a,w,c
  8343  0019E8  1014               	iorwf	___fldiv@a+1,w,c
  8344  0019EA  1015               	iorwf	___fldiv@a+2,w,c
  8345  0019EC  1016               	iorwf	___fldiv@a+3,w,c
  8346  0019EE  A4D8               	btfss	status,2,c
  8347  0019F0  D017               	goto	i2l3592
  8348  0019F2  0E00               	movlw	0
  8349  0019F4  6E0F               	movwf	___fldiv@b,c
  8350  0019F6  0E00               	movlw	0
  8351  0019F8  6E10               	movwf	___fldiv@b+1,c
  8352  0019FA  0E00               	movlw	0
  8353  0019FC  6E11               	movwf	___fldiv@b+2,c
  8354  0019FE  0E00               	movlw	0
  8355  001A00  6E12               	movwf	___fldiv@b+3,c
  8356  001A02  0E80               	movlw	128
  8357  001A04  1211               	iorwf	___fldiv@b+2,f,c
  8358  001A06  0E7F               	movlw	127
  8359  001A08  1212               	iorwf	___fldiv@b+3,f,c
  8360  001A0A                     i2l3586:
  8361  001A0A  501F               	movf	___fldiv@sign,w,c
  8362  001A0C  1212               	iorwf	___fldiv@b+3,f,c
  8363  001A0E  C00F  F00F         	movff	___fldiv@b,?___fldiv
  8364  001A12  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  8365  001A16  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  8366  001A1A  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  8367  001A1E  0012               	return	
  8368  001A20                     i2l3592:
  8369  001A20  5026               	movf	___fldiv@bexp,w,c
  8370  001A22  A4D8               	btfss	status,2,c
  8371  001A24  D009               	goto	i2l3600
  8372  001A26  0E00               	movlw	0
  8373  001A28  6E0F               	movwf	?___fldiv,c
  8374  001A2A  0E00               	movlw	0
  8375  001A2C  6E10               	movwf	?___fldiv+1,c
  8376  001A2E  0E00               	movlw	0
  8377  001A30  6E11               	movwf	?___fldiv+2,c
  8378  001A32  0E00               	movlw	0
  8379  001A34  6E12               	movwf	?___fldiv+3,c
  8380  001A36  0012               	return	
  8381  001A38                     i2l3600:
  8382  001A38  5027               	movf	___fldiv@aexp,w,c
  8383  001A3A  C026  F017         	movff	___fldiv@bexp,??___fldiv
  8384  001A3E  6A18               	clrf	(??___fldiv+1)& (0+255),c
  8385  001A40  5E17               	subwf	??___fldiv,f,c
  8386  001A42  0E00               	movlw	0
  8387  001A44  5A18               	subwfb	??___fldiv+1,f,c
  8388  001A46  0E7F               	movlw	127
  8389  001A48  2417               	addwf	??___fldiv,w,c
  8390  001A4A  6E20               	movwf	___fldiv@new_exp,c
  8391  001A4C  0E00               	movlw	0
  8392  001A4E  2018               	addwfc	??___fldiv+1,w,c
  8393  001A50  6E21               	movwf	___fldiv@new_exp+1,c
  8394  001A52  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  8395  001A56  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  8396  001A5A  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  8397  001A5E  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  8398  001A62  0E00               	movlw	0
  8399  001A64  6E0F               	movwf	___fldiv@b,c
  8400  001A66  0E00               	movlw	0
  8401  001A68  6E10               	movwf	___fldiv@b+1,c
  8402  001A6A  0E00               	movlw	0
  8403  001A6C  6E11               	movwf	___fldiv@b+2,c
  8404  001A6E  0E00               	movlw	0
  8405  001A70  6E12               	movwf	___fldiv@b+3,c
  8406  001A72  0E00               	movlw	0
  8407  001A74  6E22               	movwf	___fldiv@grs,c
  8408  001A76  0E00               	movlw	0
  8409  001A78  6E23               	movwf	___fldiv@grs+1,c
  8410  001A7A  0E00               	movlw	0
  8411  001A7C  6E24               	movwf	___fldiv@grs+2,c
  8412  001A7E  0E00               	movlw	0
  8413  001A80  6E25               	movwf	___fldiv@grs+3,c
  8414  001A82  0E00               	movlw	0
  8415  001A84  6E27               	movwf	___fldiv@aexp,c
  8416  001A86  D028               	goto	i2l1079
  8417  001A88                     i2l3610:
  8418  001A88  5027               	movf	___fldiv@aexp,w,c
  8419  001A8A  B4D8               	btfsc	status,2,c
  8420  001A8C  D011               	goto	i2l3618
  8421  001A8E  90D8               	bcf	status,0,c
  8422  001A90  361B               	rlcf	___fldiv@rem,f,c
  8423  001A92  361C               	rlcf	___fldiv@rem+1,f,c
  8424  001A94  361D               	rlcf	___fldiv@rem+2,f,c
  8425  001A96  361E               	rlcf	___fldiv@rem+3,f,c
  8426  001A98  90D8               	bcf	status,0,c
  8427  001A9A  360F               	rlcf	___fldiv@b,f,c
  8428  001A9C  3610               	rlcf	___fldiv@b+1,f,c
  8429  001A9E  3611               	rlcf	___fldiv@b+2,f,c
  8430  001AA0  3612               	rlcf	___fldiv@b+3,f,c
  8431  001AA2  BE25               	btfsc	___fldiv@grs+3,7,c
  8432  001AA4  800F               	bsf	___fldiv@b,0,c
  8433  001AA6  90D8               	bcf	status,0,c
  8434  001AA8  3622               	rlcf	___fldiv@grs,f,c
  8435  001AAA  3623               	rlcf	___fldiv@grs+1,f,c
  8436  001AAC  3624               	rlcf	___fldiv@grs+2,f,c
  8437  001AAE  3625               	rlcf	___fldiv@grs+3,f,c
  8438  001AB0                     i2l3618:
  8439  001AB0  5013               	movf	___fldiv@a,w,c
  8440  001AB2  5C1B               	subwf	___fldiv@rem,w,c
  8441  001AB4  5014               	movf	___fldiv@a+1,w,c
  8442  001AB6  581C               	subwfb	___fldiv@rem+1,w,c
  8443  001AB8  5015               	movf	___fldiv@a+2,w,c
  8444  001ABA  581D               	subwfb	___fldiv@rem+2,w,c
  8445  001ABC  5016               	movf	___fldiv@a+3,w,c
  8446  001ABE  581E               	subwfb	___fldiv@rem+3,w,c
  8447  001AC0  A0D8               	btfss	status,0,c
  8448  001AC2  D009               	goto	i2l3624
  8449  001AC4  8C25               	bsf	___fldiv@grs+3,6,c
  8450  001AC6  5013               	movf	___fldiv@a,w,c
  8451  001AC8  5E1B               	subwf	___fldiv@rem,f,c
  8452  001ACA  5014               	movf	___fldiv@a+1,w,c
  8453  001ACC  5A1C               	subwfb	___fldiv@rem+1,f,c
  8454  001ACE  5015               	movf	___fldiv@a+2,w,c
  8455  001AD0  5A1D               	subwfb	___fldiv@rem+2,f,c
  8456  001AD2  5016               	movf	___fldiv@a+3,w,c
  8457  001AD4  5A1E               	subwfb	___fldiv@rem+3,f,c
  8458  001AD6                     i2l3624:
  8459  001AD6  2A27               	incf	___fldiv@aexp,f,c
  8460  001AD8                     i2l1079:
  8461  001AD8  0E19               	movlw	25
  8462  001ADA  6427               	cpfsgt	___fldiv@aexp,c
  8463  001ADC  D7D5               	goto	i2l3610
  8464  001ADE  501B               	movf	___fldiv@rem,w,c
  8465  001AE0  101C               	iorwf	___fldiv@rem+1,w,c
  8466  001AE2  101D               	iorwf	___fldiv@rem+2,w,c
  8467  001AE4  101E               	iorwf	___fldiv@rem+3,w,c
  8468  001AE6  B4D8               	btfsc	status,2,c
  8469  001AE8  D011               	goto	i2l3636
  8470  001AEA  8022               	bsf	___fldiv@grs,0,c
  8471  001AEC  D00F               	goto	i2l3636
  8472  001AEE                     i2l3630:
  8473  001AEE  90D8               	bcf	status,0,c
  8474  001AF0  360F               	rlcf	___fldiv@b,f,c
  8475  001AF2  3610               	rlcf	___fldiv@b+1,f,c
  8476  001AF4  3611               	rlcf	___fldiv@b+2,f,c
  8477  001AF6  3612               	rlcf	___fldiv@b+3,f,c
  8478  001AF8  BE25               	btfsc	___fldiv@grs+3,7,c
  8479  001AFA  800F               	bsf	___fldiv@b,0,c
  8480  001AFC  90D8               	bcf	status,0,c
  8481  001AFE  3622               	rlcf	___fldiv@grs,f,c
  8482  001B00  3623               	rlcf	___fldiv@grs+1,f,c
  8483  001B02  3624               	rlcf	___fldiv@grs+2,f,c
  8484  001B04  3625               	rlcf	___fldiv@grs+3,f,c
  8485  001B06  0620               	decf	___fldiv@new_exp,f,c
  8486  001B08  A0D8               	btfss	status,0,c
  8487  001B0A  0621               	decf	___fldiv@new_exp+1,f,c
  8488  001B0C                     i2l3636:
  8489  001B0C  AE11               	btfss	___fldiv@b+2,7,c
  8490  001B0E  D7EF               	goto	i2l3630
  8491  001B10  0E00               	movlw	0
  8492  001B12  6E27               	movwf	___fldiv@aexp,c
  8493  001B14  AE25               	btfss	___fldiv@grs+3,7,c
  8494  001B16  D017               	goto	i2l1090
  8495  001B18  0EFF               	movlw	255
  8496  001B1A  1422               	andwf	___fldiv@grs,w,c
  8497  001B1C  6E17               	movwf	??___fldiv& (0+255),c
  8498  001B1E  0EFF               	movlw	255
  8499  001B20  1423               	andwf	___fldiv@grs+1,w,c
  8500  001B22  6E18               	movwf	(??___fldiv+1)& (0+255),c
  8501  001B24  0EFF               	movlw	255
  8502  001B26  1424               	andwf	___fldiv@grs+2,w,c
  8503  001B28  6E19               	movwf	(??___fldiv+2)& (0+255),c
  8504  001B2A  0E7F               	movlw	127
  8505  001B2C  1425               	andwf	___fldiv@grs+3,w,c
  8506  001B2E  6E1A               	movwf	(??___fldiv+3)& (0+255),c
  8507  001B30  5017               	movf	??___fldiv,w,c
  8508  001B32  1018               	iorwf	??___fldiv+1,w,c
  8509  001B34  1019               	iorwf	??___fldiv+2,w,c
  8510  001B36  101A               	iorwf	??___fldiv+3,w,c
  8511  001B38  B4D8               	btfsc	status,2,c
  8512  001B3A  D003               	goto	i2l1091
  8513  001B3C                     i2u326_40:
  8514  001B3C  0E01               	movlw	1
  8515  001B3E  6E27               	movwf	___fldiv@aexp,c
  8516  001B40  D002               	goto	i2l1090
  8517  001B42                     i2l1091:
  8518  001B42  B00F               	btfsc	___fldiv@b,0,c
  8519  001B44  D7FB               	goto	i2u326_40
  8520  001B46                     i2l1090:
  8521  001B46  5027               	movf	___fldiv@aexp,w,c
  8522  001B48  B4D8               	btfsc	status,2,c
  8523  001B4A  D01F               	goto	i2l3656
  8524  001B4C  0E01               	movlw	1
  8525  001B4E  260F               	addwf	___fldiv@b,f,c
  8526  001B50  0E00               	movlw	0
  8527  001B52  2210               	addwfc	___fldiv@b+1,f,c
  8528  001B54  2211               	addwfc	___fldiv@b+2,f,c
  8529  001B56  2212               	addwfc	___fldiv@b+3,f,c
  8530  001B58  A012               	btfss	___fldiv@b+3,0,c
  8531  001B5A  D017               	goto	i2l3656
  8532  001B5C  C00F  F017         	movff	___fldiv@b,??___fldiv
  8533  001B60  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  8534  001B64  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  8535  001B68  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  8536  001B6C  341A               	rlcf	??___fldiv+3,w,c
  8537  001B6E  321A               	rrcf	??___fldiv+3,f,c
  8538  001B70  3219               	rrcf	??___fldiv+2,f,c
  8539  001B72  3218               	rrcf	??___fldiv+1,f,c
  8540  001B74  3217               	rrcf	??___fldiv,f,c
  8541  001B76  C017  F00F         	movff	??___fldiv,___fldiv@b
  8542  001B7A  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  8543  001B7E  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  8544  001B82  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  8545  001B86  4A20               	infsnz	___fldiv@new_exp,f,c
  8546  001B88  2A21               	incf	___fldiv@new_exp+1,f,c
  8547  001B8A                     i2l3656:
  8548  001B8A  BE21               	btfsc	___fldiv@new_exp+1,7,c
  8549  001B8C  D010               	goto	i2l3660
  8550  001B8E  5021               	movf	___fldiv@new_exp+1,w,c
  8551  001B90  E103               	bnz	i2u330_40
  8552  001B92  2820               	incf	___fldiv@new_exp,w,c
  8553  001B94  A0D8               	btfss	status,0,c
  8554  001B96  D00B               	goto	i2l3660
  8555  001B98                     i2u330_40:
  8556  001B98  0E00               	movlw	0
  8557  001B9A  6E21               	movwf	___fldiv@new_exp+1,c
  8558  001B9C  6820               	setf	___fldiv@new_exp,c
  8559  001B9E  0E00               	movlw	0
  8560  001BA0  6E0F               	movwf	___fldiv@b,c
  8561  001BA2  0E00               	movlw	0
  8562  001BA4  6E10               	movwf	___fldiv@b+1,c
  8563  001BA6  0E00               	movlw	0
  8564  001BA8  6E11               	movwf	___fldiv@b+2,c
  8565  001BAA  0E00               	movlw	0
  8566  001BAC  6E12               	movwf	___fldiv@b+3,c
  8567  001BAE                     i2l3660:
  8568  001BAE  BE21               	btfsc	___fldiv@new_exp+1,7,c
  8569  001BB0  D005               	goto	i2u331_40
  8570  001BB2  5021               	movf	___fldiv@new_exp+1,w,c
  8571  001BB4  E111               	bnz	i2l3664
  8572  001BB6  0420               	decf	___fldiv@new_exp,w,c
  8573  001BB8  B0D8               	btfsc	status,0,c
  8574  001BBA  D00E               	goto	i2l3664
  8575  001BBC                     i2u331_40:
  8576  001BBC  0E00               	movlw	0
  8577  001BBE  6E21               	movwf	___fldiv@new_exp+1,c
  8578  001BC0  0E00               	movlw	0
  8579  001BC2  6E20               	movwf	___fldiv@new_exp,c
  8580  001BC4  0E00               	movlw	0
  8581  001BC6  6E0F               	movwf	___fldiv@b,c
  8582  001BC8  0E00               	movlw	0
  8583  001BCA  6E10               	movwf	___fldiv@b+1,c
  8584  001BCC  0E00               	movlw	0
  8585  001BCE  6E11               	movwf	___fldiv@b+2,c
  8586  001BD0  0E00               	movlw	0
  8587  001BD2  6E12               	movwf	___fldiv@b+3,c
  8588  001BD4  0E00               	movlw	0
  8589  001BD6  6E1F               	movwf	___fldiv@sign,c
  8590  001BD8                     i2l3664:
  8591  001BD8  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  8592  001BDC  A026               	btfss	___fldiv@bexp,0,c
  8593  001BDE  D002               	goto	i2l3670
  8594  001BE0  8E11               	bsf	___fldiv@b+2,7,c
  8595  001BE2  D001               	goto	i2l3672
  8596  001BE4                     i2l3670:
  8597  001BE4  9E11               	bcf	___fldiv@b+2,7,c
  8598  001BE6                     i2l3672:
  8599  001BE6  90D8               	bcf	status,0,c
  8600  001BE8  3026               	rrcf	___fldiv@bexp,w,c
  8601  001BEA  6E12               	movwf	___fldiv@b+3,c
  8602  001BEC  D70E               	goto	i2l3586
  8603  001BEE                     __end_of___fldiv:
  8604                           	opt callstack 0
  8605                           
  8606                           	psect	rparam
  8607  0000                     
  8608                           	psect	temp
  8609  000060                     btemp:
  8610                           	opt callstack 0
  8611  000060                     	ds	1
  8612  0000                     int$flags	set	btemp
  8613  0000                     wtemp8	set	btemp+1
  8614  0000                     ttemp5	set	btemp+1
  8615  0000                     ttemp6	set	btemp+4
  8616  0000                     ttemp7	set	btemp+8
  8617                           tosu	equ	0xFFF
  8618                           tosh	equ	0xFFE
  8619                           tosl	equ	0xFFD
  8620                           stkptr	equ	0xFFC
  8621                           pclatu	equ	0xFFB
  8622                           pclath	equ	0xFFA
  8623                           pcl	equ	0xFF9
  8624                           tblptru	equ	0xFF8
  8625                           tblptrh	equ	0xFF7
  8626                           tblptrl	equ	0xFF6
  8627                           tablat	equ	0xFF5
  8628                           prodh	equ	0xFF4
  8629                           prodl	equ	0xFF3
  8630                           indf0	equ	0xFEF
  8631                           postinc0	equ	0xFEE
  8632                           postdec0	equ	0xFED
  8633                           preinc0	equ	0xFEC
  8634                           plusw0	equ	0xFEB
  8635                           fsr0h	equ	0xFEA
  8636                           fsr0l	equ	0xFE9
  8637                           wreg	equ	0xFE8
  8638                           indf1	equ	0xFE7
  8639                           postinc1	equ	0xFE6
  8640                           postdec1	equ	0xFE5
  8641                           preinc1	equ	0xFE4
  8642                           plusw1	equ	0xFE3
  8643                           fsr1h	equ	0xFE2
  8644                           fsr1l	equ	0xFE1
  8645                           bsr	equ	0xFE0
  8646                           indf2	equ	0xFDF
  8647                           postinc2	equ	0xFDE
  8648                           postdec2	equ	0xFDD
  8649                           preinc2	equ	0xFDC
  8650                           plusw2	equ	0xFDB
  8651                           fsr2h	equ	0xFDA
  8652                           fsr2l	equ	0xFD9
  8653                           status	equ	0xFD8


Data Sizes:
    Strings     214
    Constant    6
    Data        0
    BSS         122
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     55      95
    BANK0           128    125     127
    BANK1           256     16      96
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_20(CODE[12]), STR_19(CODE[11]), STR_18(CODE[16]), STR_17(CODE[10]), 
		 -> STR_16(CODE[17]), STR_15(CODE[10]), STR_14(CODE[16]), STR_13(CODE[10]), 
		 -> STR_12(CODE[16]), STR_11(CODE[10]), STR_10(CODE[17]), STR_9(CODE[5]), 
		 -> STR_8(CODE[10]), STR_7(CODE[14]), STR_6(CODE[6]), STR_5(CODE[10]), 
		 -> STR_4(CODE[10]), STR_3(CODE[11]), STR_2(CODE[13]), STR_1(CODE[10]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1255_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_20(CODE[12]), STR_19(CODE[11]), STR_18(CODE[16]), STR_17(CODE[10]), 
		 -> STR_16(CODE[17]), STR_15(CODE[10]), STR_14(CODE[16]), STR_13(CODE[10]), 
		 -> STR_12(CODE[16]), STR_11(CODE[10]), STR_10(CODE[17]), STR_9(CODE[5]), 
		 -> STR_8(CODE[10]), STR_7(CODE[14]), STR_6(CODE[6]), STR_5(CODE[10]), 
		 -> STR_4(CODE[10]), STR_3(CODE[11]), STR_2(CODE[13]), STR_1(CODE[10]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 17
		 -> STR_20(CODE[12]), STR_19(CODE[11]), STR_18(CODE[16]), STR_17(CODE[10]), 
		 -> STR_16(CODE[17]), STR_15(CODE[10]), STR_14(CODE[16]), STR_13(CODE[10]), 
		 -> STR_12(CODE[16]), STR_11(CODE[10]), STR_10(CODE[17]), STR_9(CODE[5]), 
		 -> STR_8(CODE[10]), STR_7(CODE[14]), STR_6(CODE[6]), STR_5(CODE[10]), 
		 -> STR_4(CODE[10]), STR_3(CODE[11]), STR_2(CODE[13]), STR_1(CODE[10]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    min@array	PTR int  size(2) Largest target is 8
		 -> a(COMRAM[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_echo
    _echo->___fltol
    ___fltol->___fldiv
    ___fldiv->___xxtofl

Critical Paths under _main in BANK0

    _main->_actuators_main
    _ultrasonic_main->_print_echo
    _print_echo->_printf
    _number_deploy->_printf
    _actuators_main->_stepper2
    _stepper2_back->_full_drive
    _stepper2->_full_drive
    _stepper->_full_drive
    _full_drive->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_send_byte
    _abs->___aomod
    _servo->_servoRotate0
    _servo->_servoRotate180
    _initLCD->_lcdInst
    _lcdInst->_send_byte
    _send_byte->_send_nibble
    _send_nibble->_pulse_e

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_actuators_main

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0   99991
                                              2 BANK1     14    14      0
                     _actuators_main
                      _number_deploy
                    _ultrasonic_main
 ---------------------------------------------------------------------------------
 (1) _ultrasonic_main                                     13    11      2   22093
                                            102 BANK0     13    11      2
                                _abs
                            _initLCD
                            _lcdInst
                                _min
                         _print_echo
                             _printf
                               _trig
 ---------------------------------------------------------------------------------
 (2) _trig                                                 2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _print_echo                                           1     1      0   10255
                                            101 BANK0      1     1      0
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _min                                                 11     7      4     688
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 (1) _number_deploy                                       11     7      4   12082
                                            101 BANK0     11     7      4
                            ___awdiv
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1245
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _actuators_main                                       8     4      4   65436
                                            119 BANK0      6     2      4
                                              0 BANK1      2     2      0
                            _initLCD
                            _lcdInst
                             _printf
                              _servo
                            _stepper
                           _stepper2
                      _stepper2_back
                        _system_init
 ---------------------------------------------------------------------------------
 (2) _system_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _stepper2_back                                        8     6      2   21338
                                            105 BANK0      8     6      2
                         _full_drive
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _stepper2                                            14    12      2   21623
                                            105 BANK0     14    12      2
                         _full_drive
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _stepper                                              8     6      2   11151
                                            105 BANK0      8     6      2
                         _full_drive
 ---------------------------------------------------------------------------------
 (3) _full_drive                                           4     2      2   10826
                                            101 BANK0      4     2      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              10     4      6   10097
                                             91 BANK0     10     4      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    8216
                                             83 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           42    36      6    7743
                                             67 BANK0     16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    5903
                                             31 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3547
                                             20 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1602
                                             13 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1102
                                              4 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0     158
                                              3 BANK0      1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     273
                                             18 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              0 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (2) _servo                                                2     2      0     136
                                              3 BANK0      2     2      0
                       _servoRotate0
                     _servoRotate180
 ---------------------------------------------------------------------------------
 (3) _servoRotate180                                       3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _servoRotate0                                         3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _initLCD                                              1     1      0     350
                                              4 BANK0      1     1      0
                            _lcdInst
                          _send_byte
                        _send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcdInst                                              1     1      0     158
                                              3 BANK0      1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (7) _send_byte                                            1     1      0     127
                                              2 BANK0      1     1      0
                        _send_nibble
 ---------------------------------------------------------------------------------
 (8) _send_nibble                                          1     1      0      65
                                              1 BANK0      1     1      0
                            _pulse_e
 ---------------------------------------------------------------------------------
 (9) _pulse_e                                              1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _ISR                                                 2     2      0    3522
                                             53 COMRAM     2     2      0
                               _echo
 ---------------------------------------------------------------------------------
 (16) _echo                                                4     4      0    3522
                                             49 COMRAM     4     4      0
                            ___fldiv
                            ___fltol
                           ___xxtofl
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (17) i2___awdiv                                           8     4      4     508
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (17) ___xxtofl                                           14    10      4     626
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (17) ___fltol                                            10     6      4     533
                                             39 COMRAM    10     6      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (17) ___fldiv                                            25    17      8    1855
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _actuators_main
     _initLCD
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _send_byte
         _send_nibble
           _pulse_e
       _send_nibble
         _pulse_e
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
     _servo
       _servoRotate0
       _servoRotate180
     _stepper
       _full_drive
         _printf
           _vfprintf
             _vfpfcnvrt
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
     _stepper2
       _full_drive
         _printf
           _vfprintf
             _vfpfcnvrt
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
     _stepper2_back
       _full_drive
         _printf
           _vfprintf
             _vfpfcnvrt
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
     _system_init
   _number_deploy
     ___awdiv
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
   _ultrasonic_main
     _abs
       ___aomod (ARG)
     _initLCD
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _send_byte
         _send_nibble
           _pulse_e
       _send_nibble
         _pulse_e
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _min
     _print_echo
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
     _trig

 _ISR (ROOT)
   _echo
     ___fldiv
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     i2___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     10      60       7       37.5%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     7D      7F       5       99.2%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     37      5F       1       75.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     13E      34        0.0%
DATA                 0      0     13E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Apr 06 00:31:54 2019

               ___fldiv@aexp 0027                 ___fldiv@bexp 0026                            _a 0058  
                          _b 0055                 ___fldiv@sign 001F                           l72 3274  
                         l77 3220                  __CFG_CPD$ON 000000                 ___awdiv@sign 0085  
                __CFG_BORV$3 000000              ??_number_deploy 00E9            stepper2@direction 00F6  
              servoRotate0@i 0081                 __CFG_CP0$OFF 000000                 __CFG_CP1$OFF 000000  
               __CFG_CP2$OFF 000000                 __CFG_CP3$OFF 000000                  __CFG_OSC$HS 000000  
        __end_of_system_init 335C              _ultrasonic_main 25E4                          l163 2A90  
                        l460 1C6A                          l447 2E58                          l458 1C62  
                        _GIE 007F97                 __CFG_CPB$OFF 000000                          _RB2 007C0A  
                        _RC1 007C11                          _RB3 007C0B                          _RC2 007C12  
                        _RB4 007C0C                          _RD0 007C18                          _RB5 007C0D  
                        _RD1 007C19                          _RB6 007C0E                          _RB7 007C0F  
                        _ISR 0008       __size_of_stepper2_back 009A                          _abs 32F6  
                        _pad 2E26                          _min 2B96                          _sum 0038  
             stepper2_back@i 00EF                          wreg 000FE8                 __CFG_LVP$OFF 000000  
                       ?_ISR 0001                 ___fltol@exp1 0031                 __CFG_WDT$OFF 000000  
                       ?_abs 0092                         l1170 3320                         l5100 2FCC  
                       l5020 1F76                         l5012 1F32                         l5004 1EFE  
                       l4320 316C                         l5200 2490                         l5104 2FDA  
                       l4330 32C6                         l5122 23A4                         l4412 25C2  
                       l4404 2586                         l4340 339C                         l5060 2C60  
                       l5036 1FEE                         l5028 1FAA                         l4334 32DE  
                       l4510 1E0C                         l5310 2104                         l5062 2C64  
                       l4408 259C                         l4440 2930                         l4432 28D4  
                       l4424 2896                         l4360 2E62                         l5072 2F74  
                       l5048 2BB2                         l5232 2624                         l4434 28E8  
                       l4338 3396                         l4354 2E40                         l4506 1DF4  
                       l5322 214E                         l5250 264E                         l5234 262C  
                       l4380 24C8                         l4444 2946                         l4428 28BA  
                       l4364 2E7C                         l4532 22B0                         l4620 16A4  
                       l5084 2F9A                         l5308 20FC                         l4358 2E50  
                       l4542 22FA                         l5086 2FA2                         l5078 2F84  
                       l5270 26E2                         l5238 263C                         ?_pad 0094  
                       l4392 2516                         l4448 296C                         l4368 2EA8  
                       l4472 1C84                         l4560 31D2                         l5096 2FC2  
                       l5336 21AC                         l5360 2A20                         l4394 252A  
                       l4386 24F0                         l4458 1C46                         l4538 22EE  
                       l4562 31FA                         l4714 1838                         l5290 2076  
                       l5354 2A02                         l4476 1C94                         l4548 2314  
                       l4636 171A                         l5284 2040                         l5268 26CA  
                       l5372 2A78                         l4486 1D8E                         l4910 2F1E  
                       l5294 20A4                         l5366 2A5A                         l4832 3082  
                       l5298 20B4                         l4756 18DA                         l4676 17AE  
                       ?_min 0080                         l4846 30B8                         l4862 2CA0  
                       l4872 2CE2                         l4936 2AA8                         l4882 2D26  
                       l4866 2CB4                         l4948 2AE2                         l4886 2D3A  
                       l4990 1E8C                         l4958 2B16                         l4968 2B4A  
                       l4978 2B7E                         l4996 1EBA                         STR_1 10C8  
                       STR_2 1067                         STR_3 108B                         STR_4 10C8  
                       STR_5 10BE                         STR_6 10D2                         STR_7 1059  
                       STR_8 10C8                         STR_9 10D8                         _LATA 000F89  
                       _LATB 000F8A                         _LATC 000F8B                         _LATD 000F8C  
                       _LATE 000F8D                         u5000 1E5E                         u5010 1E6E  
                       u5100 1F86                         u5020 1E9C                         u4310 3164  
                       u5110 1F96                         u5030 1EAC                         u5200 2C46  
                       u5120 1FBA                         u5040 1ECA                         u4330 31AC  
                       u5130 1FCA                         u5050 1EDA                         u5140 1FFE  
                       u5060 1F0E                         u4510 28EC                         u5150 200E  
                       u5070 1F1E                         u5310 2664                         u4431 24F6  
                       u6007 18F2                         u4360 3306                         u4600 1C7E  
                       u5400 20F4                         u5080 1F42                         u5320 26C0  
                       u6017 190C                         u4450 252E                         u4610 1D9E  
                       u5250 2FA6                         u5090 1F52                         u6107 328C  
                       u6027 1926                         u4540 1C18                         u5420 211A  
                       u5340 206E                         u5500 2A48                         u6117 329A  
                       u6037 1940                         u4630 1DC0                         u4550 1C1A  
                       u4710 2230                         u5430 212A                         u5350 209C  
                       u5190 2C20                         u4295 33E4                         u6127 30EA  
                       u4631 1DBE                         u6047 195A                         _RBIE 007F93  
                       u4296 33E6                         u4640 1DCE                         u5440 213A  
                       _RBIF 007F90                         u6137 3104                         u6057 3400  
                       u4650 1DD2                         u5450 214A                         u5370 20C4  
                       u6147 3116                         u6067 3226                         u4740 32B8  
                       u4580 1C58                         u5460 21A2                         u5380 20D4  
                       u6157 313A                         u6077 3236                         u4750 3268  
                       u4670 1DDE                         u5470 21BE                         u5390 20E4  
                       u6167 33CA                         u6087 324A                         u5607 2AF2  
                       u5480 29F0                         u6177 33D4                         u6097 3280  
                       u5617 2B08                         u4930 2F42                         u5707 23F8  
                       u5627 2B26                         u5547 29B0                         u4860 30A6  
                       u4940 2AA6                         u5717 2422                         u5637 2B3C  
                       u5557 260C                         u5807 16B8                         u5727 245A  
                       u5647 2B5A                         u5567 268E                         u4880 30DC  
                       u5817 16CE                         u5737 2EE0                         u5657 2B70  
                       u5577 26FE                         u5907 17C6                         u5827 16E4  
                       u5747 2CF6                         u5667 1E44                         u5587 2ABE  
                       u5917 17E0                         u5837 16FA                         u5757 1642  
                       u5677 2168                         u5597 2AD4                         u4990 2B94  
                       u5927 17FA                         u5847 1710                         u5767 1658  
                       u5687 236A                         u5937 1814                         u5857 173C  
                       u5777 166E                         u5697 2396                         u5947 182E  
                       u5867 1756                         u5787 1684                         u5957 1868  
                       u5877 1770                         u5797 169A                         u5967 1882  
                       u5887 178A                         u5977 189C                         u5897 17A4  
                       u5987 18B6                         u5997 18D0                  main@t_count 015E  
                       abs@a 0092                         _echo 10DE                         _dbuf 0130  
                       _main 298E                         _dtoa 1BEE                         _meas 0053  
                       _prec 004F                         _time 0040                         _nout 004B  
                       pad@i 009B                         pad@p 0098                         fsr1h 000FE2  
                       fsr2h 000FDA                         indf2 000FDF                         fsr1l 000FE1  
                       pad@w 009D                         fsr2l 000FD9                         _trig 2A94  
                       _sumf 0047                         btemp 0060                         min@i 0089  
                       start 000E      __size_of_actuators_main 0150                __CFG_IESO$OFF 000000  
            ___fldiv@new_exp 0020              servoRotate180@i 0081                __CFG_MCLRE$ON 000000  
               ___param_bank 000000                        ??_ISR 0036                        ??_abs 0094  
                      ??_pad 009A                        ??_min 0084        actuators_main@act_cnt 0150  
                      ?_echo 0001                ___fltol@sign1 0030              __end_of___aodiv 25E4  
                      ?_main 0001                        ?_dtoa 009F              __end_of___aomod 298E  
            __end_of___fldiv 1BEE              __end_of___awdiv 2FE4                        STR_10 1007  
                      STR_11 1096                        STR_20 1074                        STR_12 1039  
                      STR_13 10A0                        STR_14 1049                        STR_15 10AA  
                      STR_16 1018                        STR_17 10B4                        STR_18 1029  
                      STR_19 1080              __end_of___fltol 2E26                        ?_trig 0001  
            ___awdiv@divisor 0082                        _T1CON 000FCD                        i2l243 3454  
                      i2l270 1620              ___awdiv@counter 0084                 vfpfcnvrt@fmt 00C5  
                      _TMR1H 000FCF                        _TMR1L 000FCE                        _TRISA 000F92  
                      _TRISB 000F93                        _TRISC 000F94                        _TRISD 000F95  
                      _TRISE 000F96                __CFG_PWRT$OFF 000000                __CFG_WRT0$OFF 000000  
              __CFG_WRT1$OFF 000000                __CFG_WRT2$OFF 000000                __CFG_WRT3$OFF 000000  
            __end_of_lcdInst 34B2               __CFG_EBTR0$OFF 000000               __CFG_FCMEN$OFF 000000  
             __CFG_EBTR1$OFF 000000               __CFG_EBTR2$OFF 000000               __CFG_EBTR3$OFF 000000  
              __CFG_WRTB$OFF 000000                __CFG_WRTC$OFF 000000                __CFG_WRTD$OFF 000000  
            __end_of_initLCD 3152               __CFG_EBTRB$OFF 000000                        _echoo 0057  
                      _flags 00FD                        _fputc 3152                        _fputs 32BA  
                      _servo 33E8                        pad@fp 0094                        _width 004D  
                      _putch 3492                        main@i 0154                        dtoa@d 00A1  
                      dtoa@i 00C1                        dtoa@n 00B9                        dtoa@p 00B3  
                      dtoa@s 00B7                        dtoa@w 00B5                        tablat 000FF5  
            send_nibble@data 0081                        plusw2 000FDB              __end_of_pulse_e 33E8  
                      ttemp5 0061                        ttemp6 0064                        ttemp7 0068  
                      status 000FD8              __end_of_stepper 30E2                        wtemp8 0061  
              _stepper2_back 2EC4             ??_servoRotate180 0080           __size_ofi2___awdiv 0084  
             __CFG_PBADEN$ON 000000              __initialization 335C                 __end_of_echo 1622  
                _system_init 332A                 __end_of_main 2A94                 __end_of_dtoa 1E36  
    __end_of_ultrasonic_main 2728                 __end_of_trig 2B96                       ??_echo 0032  
                     ??_main 0152                       ??_dtoa 00A9                       ??_trig 0080  
              __activetblptr 000001         number_deploy@t_count 00EE         number_deploy@tires_t 00EA  
                     _ADCON1 000FC1                 ?_send_nibble 0001                       ?_fputc 0084  
                     ?_fputs 008D             ___awdiv@dividend 0080                       ?_servo 0001  
                     ?_putch 0001           stepper2@steps2_adj 00E9                       i2l1150 2766  
                     i2l1090 1B46                       i2l1091 1B42                       i2l1157 27E4  
                     i2l1079 1AD8                       i2l4200 154E                       i2l4120 1210  
                     i2l4114 11B8                       i2l4122 122A                       i2l4132 12AA  
                     i2l4222 1606                       i2l3600 1A38                       i2l4216 15AA  
                     i2l3610 1A88                       i2l4154 1362                       i2l4148 1306  
                     i2l4156 137C                       i2l3630 1AEE                       i2l4182 1458  
                     i2l4166 13FC                       i2l4190 14CE                       i2l3624 1AD6  
                     i2l3618 1AB0                       i2l3554 1992                       i2l3730 2D8A  
                     i2l3810 2856                       i2l4098 115C                       i2l3660 1BAE  
                     i2l3636 1B0C                       i2l4188 14B4                       i2l3670 1BE4  
                     i2l3574 19D2                       i2l3558 1996                       i2l3750 2DE4  
                     i2l3822 2FF8                       i2l3672 1BE6                       i2l3664 1BD8  
                     i2l3656 1B8A                       i2l3592 1A20                       i2l3586 1A0A  
                     i2l3578 19D6                       i2l3746 2DD4                       i2l3834 301E  
                     i2l3850 3050                       i2l3764 2E14                       i2l3756 2DEC  
                     i2l3780 2794                       i2l3836 3026                       i2l3828 3008  
                     i2l3758 2DF8                       i2l3782 279A                       i2l3774 2776  
                     i2l3854 305E                       i2l3846 3046                       i2l3792 280A  
                     i2l3784 27A6                       i2l3794 2816                       i2l3786 27CC  
                     _TMR1ON 007E68               ?_stepper2_back 00E9                       _SSPADD 000FC8  
                     _SSPBUF 000FC9             __end_of___xxtofl 2868  number_deploy@poles_detected 00E7  
             __CFG_XINST$OFF 000000                 vfprintf@cfmt 00D9                    ??___aodiv 0090  
                  ??___aomod 0090                    ??___fldiv 0017                    ??___awdiv 0084  
                  ??___fltol 002C                       clear_0 3362                       clear_1 3374  
           ___awdiv@quotient 0086                    ??_lcdInst 0083                       _printf 3414  
                     pad@buf 0096                       dtoa@fp 009F                       _strlen 338C  
             i2___awdiv@sign 0006                    ??_initLCD 0084                       fputc@c 0084  
                     fputs@c 0091                       fputs@i 0092                       fputs@s 008D  
          __end_ofi2___awdiv 3068                 __mediumconst 0000                       tblptrh 000FF7  
                     tblptrl 000FF6                       tblptru 000FF8             __end_of_vfprintf 3216  
                  ??_pulse_e 0080             __end_of_stepper2 2D6C                    ??_stepper 00EB  
           ultrasonic_main@i 00EF                 ___xxtofl@arg 000B        pulse_e@interruptState 0080  
               ___xxtofl@exp 000A                 ___xxtofl@val 0001                   __accesstop 0080  
    __end_of__initialization 337A               _actuators_main 234A                ___rparam_used 000001  
                 ___fltol@f1 0028                 stepper@i_276 00EF          full_drive@direction 00E8  
             __pcstackCOMRAM 0001                 stepper@stack 00E9             ?_ultrasonic_main 00E6  
              __end_of_fputc 31C0                __end_of_fputs 32F6                __end_of_servo 3414  
              __end_of_putch 34A2        number_deploy@avg_dist 00E5                      ??_fputc 0088  
                    ??_fputs 0091                      ??_servo 0083                      ??_putch 0083  
            ??_stepper2_back 00EB                   __pbssBANK0 00FD                   __pbssBANK1 0100  
     __end_of_actuators_main 249A   ultrasonic_main@min_us_dist 00F1           __size_of_send_byte 0018  
                    ?_printf 00DB       stepper2_back@direction 00EC                      ?_strlen 0080  
      __end_of_number_deploy 21C0                    ?___xxtofl 0001           __size_of_vfpfcnvrt 018A  
                 _dist_final 0100                      _SSPCON1 000FC6                      _SSPCON2 000FC5  
                    _SSPSTAT 000FC7         __size_of_send_nibble 001A              ?_actuators_main 00F7  
                    __Hparam 0000                      __Lparam 0000                 ?_system_init 0001  
                    ___aodiv 249A                      ___aomod 2868                      ___fldiv 1966  
                    ___awdiv 2F5E                      ___fltol 2D6C                    ?_vfprintf 00D3  
               __psmallconst 1000                    ?_stepper2 00E9              __CFG_STVREN$OFF 000000  
                    __pcinit 335C                   _full_drive 1622                      __ramtop 1000  
                    _lcdInst 34A2                      __ptext0 298E                      __ptext1 25E4  
                    __ptext2 2A94                      __ptext3 1E36                      __ptext4 2B96  
                    __ptext5 2024                      __ptext6 2F5E                      __ptext7 234A  
                    __ptext8 332A                      __ptext9 2EC4              __size_of_printf 0028  
            __size_of_strlen 002E                      _initLCD 30E2                 __size_of_ISR 3458  
               __size_of_abs 0034                 __size_of_pad 009E                 __size_of_min 00EC  
                 ??___xxtofl 0005                      _pulse_e 33BA                      _stepper 3068  
             __pintcode_body 343C         end_of_initialization 337A                      min@size 0082  
      __end_of_LCD_SIZE_HORZ 1004            __end_of_send_byte 3492        __end_of_LCD_SIZE_VERT 1003  
                    fputc@fp 0086                      int_func 343C                      fputs@fp 008F  
          __end_of_vfpfcnvrt 234A                ?_servoRotate0 0001               main@steps2_adj 0158  
                    postdec2 000FDD                      postinc0 000FEE                      postinc1 000FE6  
                    postinc2 000FDE                   ??_vfprintf 00D9                   ??_stepper2 00EB  
                    strlen@a 0082                      strlen@s 0080                   _print_echo 1E36  
              stepper2@i_284 00F2                ___xxtofl@sign 0009                    _TRISBbits 000F93  
                  _TRISCbits 000F94                  ___fldiv@grs 0022                  ___fldiv@rem 001B  
                  i2___awdiv 2FE4  ultrasonic_main@step2_offset 00EB                send_byte@data 0082  
         i2___awdiv@dividend 0001               ??_servoRotate0 0080  number_deploy@tires_detected 00EC  
                vfpfcnvrt@ap 00C7                  vfpfcnvrt@fp 00C3                  vfpfcnvrt@ll 00CB  
                ?_full_drive 00E5      __size_of_servoRotate180 0054               __end_of_printf 343C  
             __end_of_strlen 33BA          start_initialization 335C                   min@minimum 0087  
         i2___awdiv@quotient 0007                  __end_of_ISR 3460                  __end_of_abs 332A  
                __end_of_pad 2EC4                  __end_of_min 2C82        stepper2@count_stepper 00F4  
                 ?i2___awdiv 0001               _poles_detected 0051                  vfprintf@fmt 00D5  
           __CFG_LPT1OSC$OFF 000000         __size_of_system_init 0032                     ??_printf 00E1  
                   ??_strlen 0082                  ?_print_echo 0001                    ___fldiv@a 0013  
                  ___fldiv@b 000F     __size_of_ultrasonic_main 0144                  __pbssCOMRAM 0038  
              __pcstackBANK0 0080                __pcstackBANK1 0150             ___aodiv@dividend 0080  
           ??_actuators_main 00FB            __size_of___xxtofl 0140        __end_of_stepper2_back 2F5E  
        __size_of_full_drive 0344            __CFG_CCP2MX$PORTC 000000                    __pintcode 0008  
                   ?___aodiv 0080                     ?___aomod 0080                     ?___fldiv 000F  
                   ?___awdiv 0080             ___aodiv@quotient 0092                     ?___fltol 0028  
                   ?_lcdInst 0001            __size_of_vfprintf 0056            __size_of_stepper2 00EA  
       full_drive@stepper_no 00E5                     ?_initLCD 0001                  __smallconst 1000  
       __end_of_servoRotate0 32BA                ??_send_nibble 0081                     ?_pulse_e 0001  
                ??i2___awdiv 0005                     ?_stepper 00E9               __size_of_fputc 006E  
             __size_of_fputs 003C               __size_of_servo 002C               __size_of_putch 0010  
                   _LATAbits 000F89                     _LATBbits 000F8A                     _LATCbits 000F8B  
                   _LATDbits 000F8C                     _LATEbits 000F8D                    _send_byte 347A  
        __size_of_print_echo 01EE       __size_of_number_deploy 019C               _LCD_LINE1_ADDR 1001  
             _LCD_LINE2_ADDR 1006               _LCD_LINE3_ADDR 1005               _LCD_LINE4_ADDR 1004  
                   i2u330_40 1B98                     i2u331_40 1BBC                     i2u340_40 2DA8  
                   i2u340_45 2D9E                     i2u405_40 140C                     i2u326_40 1B3C  
                   i2u406_40 141C                     i2u415_40 155E                     i2u344_40 2DFE  
                   i2u352_40 2820                     i2u416_40 156E                     i2u339_40 2D78  
                   i2u359_40 302A                     i2u385_40 116C                     i2u386_40 117C  
                   i2u395_40 12BA                     i2u396_40 12CA             __CFG_WDTPS$32768 000000  
 stepper2_back@count_stepper 00ED               _servoRotate180 3216                    _vfpfcnvrt 21C0  
                  main@i_331 0156                    main@t_dep 015A            i2___awdiv@divisor 0003  
                  main@stack 015C            i2___awdiv@counter 0005          actuators_main@stack 00F7  
          ??_ultrasonic_main 00E8       __end_of_LCD_LINE1_ADDR 1002       __end_of_LCD_LINE2_ADDR 1007  
     __end_of_LCD_LINE3_ADDR 1006       __end_of_LCD_LINE4_ADDR 1005          __end_of_send_nibble 347A  
                 ?_send_byte 0001                     __Hrparam 0000                   vfprintf@ap 00D7  
                   __Lrparam 0000                   vfprintf@fp 00D3                 __Lsmallconst 1000  
         __CFG_BOREN$SBORDIS 000000       __end_of_servoRotate180 326A             __size_of___aodiv 014A  
           __size_of___aomod 0126             __size_of___fldiv 0288             __size_of___awdiv 0086  
           __size_of___fltol 00BA                 ??_full_drive 00E7                   ?_vfpfcnvrt 00C3  
            ___aodiv@divisor 0088              ___aodiv@counter 0090             __size_of_lcdInst 0010  
   actuators_main@steps2_adj 00F9                _number_deploy 2024             __size_of_initLCD 0070  
                   ___xxtofl 2728                     _dtoa$794 00B1                     __ptext10 2C82  
                   __ptext11 3068                     __ptext20 3152                     __ptext12 1622  
                   __ptext21 3492                     __ptext13 3414                     __ptext30 347A  
                   __ptext22 32F6                     __ptext14 31C0                     __ptext31 3460  
                   __ptext23 2868                     __ptext15 21C0                     __ptext32 33BA  
                   __ptext24 249A                     __ptext16 1BEE                     __ptext25 33E8  
                   __ptext17 2E26                     __ptext34 10DE                     __ptext26 3216  
                   __ptext18 338C                     __ptext35 2FE4                     __ptext27 326A  
                   __ptext19 32BA                     __ptext36 2728                     __ptext28 30E2  
                   __ptext37 2D6C                     __ptext29 34A2                     __ptext38 1966  
           __size_of_pulse_e 002E             __size_of_stepper 007A                __size_of_echo 0544  
              __size_of_main 0106                __size_of_dtoa 0248      stepper2_back@steps2_adj 00E9  
              __size_of_trig 0102           __end_of_full_drive 1966              ?_servoRotate180 0001  
                   int$flags 0060                     _vfprintf 31C0                     _stepper2 2C82  
                  printf@fmt 00DB             ___aomod@dividend 0080        __size_of_servoRotate0 0050  
                   min@array 0080                 ??_print_echo 00E5               ?_number_deploy 00E5  
                  putch@data 0083                   _INTCONbits 000FF2                    stepper2@i 00F0  
                _send_nibble 3460                     intlevel2 0000                _LCD_SIZE_HORZ 1003  
              _LCD_SIZE_VERT 1002                  ??_send_byte 0082           __end_of_print_echo 2024  
              ??_system_init 0080                 _servoRotate0 326A                     printf@ap 00E3  
            ___aomod@divisor 0088                  ??_vfpfcnvrt 00C9                  lcdInst@data 0083  
            ___aomod@counter 0090                     stepper@i 00ED    ultrasonic_main@steps2_adj 00ED  
                _SSPCON1bits 000FC6                  _SSPCON2bits 000FC5                 ___aodiv@sign 0091  
               ___aomod@sign 0091         stepper@count_stepper 00EB  
