

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Apr 04 00:06:26 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,inline
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1,inline
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    54  0000                     
    55                           ; Version 2.05
    56                           ; Generated 20/12/2018 GMT
    57                           ; 
    58                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18F4620 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     
    90                           	psect	smallconst
    91  001000                     __psmallconst:
    92                           	opt callstack 0
    93  001000  00                 	db	0
    94  001001                     _LCD_LINE4_ADDR:
    95                           	opt callstack 0
    96  001001  50                 	db	80
    97  001002                     __end_of_LCD_LINE4_ADDR:
    98                           	opt callstack 0
    99  001002                     _LCD_LINE3_ADDR:
   100                           	opt callstack 0
   101  001002  10                 	db	16
   102  001003                     __end_of_LCD_LINE3_ADDR:
   103                           	opt callstack 0
   104  001003                     _LCD_LINE1_ADDR:
   105                           	opt callstack 0
   106  001003  00                 	db	0
   107  001004                     __end_of_LCD_LINE1_ADDR:
   108                           	opt callstack 0
   109  001004                     _LCD_SIZE_VERT:
   110                           	opt callstack 0
   111  001004  04                 	db	4
   112  001005                     __end_of_LCD_SIZE_VERT:
   113                           	opt callstack 0
   114  001005                     _LCD_SIZE_HORZ:
   115                           	opt callstack 0
   116  001005  10                 	db	16
   117  001006                     __end_of_LCD_SIZE_HORZ:
   118                           	opt callstack 0
   119  001006                     _LCD_LINE2_ADDR:
   120                           	opt callstack 0
   121  001006  40                 	db	64
   122  001007                     __end_of_LCD_LINE2_ADDR:
   123                           	opt callstack 0
   124  0000                     _SSPBUF	set	4041
   125  0000                     _SSPCON2bits	set	4037
   126  0000                     _SSPCON1	set	4038
   127  0000                     _SSPADD	set	4040
   128  0000                     _TRISCbits	set	3988
   129  0000                     _SSPCON1bits	set	4038
   130  0000                     _SSPCON2	set	4037
   131  0000                     _SSPSTAT	set	4039
   132  0000                     _LATDbits	set	3980
   133  0000                     _INTCONbits	set	4082
   134  0000                     _TMR0L	set	4054
   135  0000                     _TMR0H	set	4055
   136  0000                     _T0CONbits	set	4053
   137  0000                     _LATD	set	3980
   138  0000                     _TRISD	set	3989
   139  0000                     _LATAbits	set	3977
   140  0000                     _LATEbits	set	3981
   141  0000                     _LATCbits	set	3979
   142  0000                     _LATE	set	3981
   143  0000                     _TRISE	set	3990
   144  0000                     _LATC	set	3979
   145  0000                     _TRISC	set	3988
   146  0000                     _LATA	set	3977
   147  0000                     _TRISA	set	3986
   148  0000                     _LATB	set	3978
   149  0000                     _TRISB	set	3987
   150  001007                     STR_2:
   151  001007  73                 	db	115	;'s'
   152  001008  74                 	db	116	;'t'
   153  001009  65                 	db	101	;'e'
   154  00100A  70                 	db	112	;'p'
   155  00100B  73                 	db	115	;'s'
   156  00100C  20                 	db	32
   157  00100D  64                 	db	100	;'d'
   158  00100E  6F                 	db	111	;'o'
   159  00100F  6E                 	db	110	;'n'
   160  001010  65                 	db	101	;'e'
   161  001011  00                 	db	0
   162  001012                     STR_3:
   163  001012  63                 	db	99	;'c'
   164  001013  6E                 	db	110	;'n'
   165  001014  74                 	db	116	;'t'
   166  001015  20                 	db	32
   167  001016  69                 	db	105	;'i'
   168  001017  73                 	db	115	;'s'
   169  001018  20                 	db	32
   170  001019  25                 	db	37
   171  00101A  64                 	db	100	;'d'
   172  00101B  00                 	db	0
   173  00101C                     STR_1:
   174  00101C  73                 	db	115	;'s'
   175  00101D  74                 	db	116	;'t'
   176  00101E  65                 	db	101	;'e'
   177  00101F  70                 	db	112	;'p'
   178  001020  31                 	db	49	;'1'
   179  001021  00                 	db	0
   180  001022                     STR_5:
   181  001022  74                 	db	116	;'t'
   182  001023  69                 	db	105	;'i'
   183  001024  6D                 	db	109	;'m'
   184  001025  65                 	db	101	;'e'
   185  001026  00                 	db	0
   186  001027                     STR_4:
   187  001027  77                 	db	119	;'w'
   188  001028  68                 	db	104	;'h'
   189  001029  61                 	db	97	;'a'
   190  00102A  74                 	db	116	;'t'
   191  00102B  00                 	db	0
   192  0000                     
   193                           ; #config settings
   194  00102C  00                 	db	0	; dummy byte at the end
   195  0000                     
   196                           	psect	cinit
   197  0025A6                     __pcinit:
   198                           	opt callstack 0
   199  0025A6                     start_initialization:
   200                           	opt callstack 0
   201  0025A6                     __initialization:
   202                           	opt callstack 0
   203                           
   204                           ; Clear objects allocated to BANK1 (32 bytes)
   205  0025A6  EE01  F000         	lfsr	0,__pbssBANK1
   206  0025AA  0E20               	movlw	32
   207  0025AC                     clear_0:
   208  0025AC  6AEE               	clrf	postinc0,c
   209  0025AE  06E8               	decf	wreg,f,c
   210  0025B0  E1FD               	bnz	clear_0
   211                           
   212                           ; Clear objects allocated to BANK0 (12 bytes)
   213  0025B2  EE00  F0EB         	lfsr	0,__pbssBANK0
   214  0025B6  0E0C               	movlw	12
   215  0025B8                     clear_1:
   216  0025B8  6AEE               	clrf	postinc0,c
   217  0025BA  06E8               	decf	wreg,f,c
   218  0025BC  E1FD               	bnz	clear_1
   219                           
   220                           ; Clear objects allocated to COMRAM (11 bytes)
   221  0025BE  EE00  F06D         	lfsr	0,__pbssCOMRAM
   222  0025C2  0E0B               	movlw	11
   223  0025C4                     clear_2:
   224  0025C4  6AEE               	clrf	postinc0,c
   225  0025C6  06E8               	decf	wreg,f,c
   226  0025C8  E1FD               	bnz	clear_2
   227  0025CA                     end_of_initialization:
   228                           	opt callstack 0
   229  0025CA                     __end_of__initialization:
   230                           	opt callstack 0
   231  0025CA  9078               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   232  0025CC  9278               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   233  0025CE  0E00               	movlw	low (__Lsmallconst shr (0+16))
   234  0025D0  6EF8               	movwf	tblptru,c
   235  0025D2  0E10               	movlw	high __Lsmallconst
   236  0025D4  6EF7               	movwf	tblptrh,c
   237  0025D6  0100               	movlb	0
   238  0025D8  EFF3  F00F         	goto	_main	;jump to C main() function
   239                           
   240                           	psect	bssCOMRAM
   241  00006D                     __pbssCOMRAM:
   242                           	opt callstack 0
   243  00006D                     _time:
   244                           	opt callstack 0
   245  00006D                     	ds	7
   246  000074                     _cnt:
   247                           	opt callstack 0
   248  000074                     	ds	2
   249  000076                     _stepper_no:
   250                           	opt callstack 0
   251  000076                     	ds	2
   252                           
   253                           	psect	bssBANK0
   254  0000EB                     __pbssBANK0:
   255                           	opt callstack 0
   256  0000EB                     _nout:
   257                           	opt callstack 0
   258  0000EB                     	ds	2
   259  0000ED                     _width:
   260                           	opt callstack 0
   261  0000ED                     	ds	2
   262  0000EF                     _prec:
   263                           	opt callstack 0
   264  0000EF                     	ds	2
   265  0000F1                     _flags:
   266                           	opt callstack 0
   267  0000F1                     	ds	2
   268  0000F3                     _count:
   269                           	opt callstack 0
   270  0000F3                     	ds	2
   271  0000F5                     _timer_count:
   272                           	opt callstack 0
   273  0000F5                     	ds	2
   274                           
   275                           	psect	bssBANK1
   276  000100                     __pbssBANK1:
   277                           	opt callstack 0
   278  000100                     _dbuf:
   279                           	opt callstack 0
   280  000100                     	ds	32
   281                           
   282                           	psect	cstackBANK0
   283  000080                     __pcstackBANK0:
   284                           	opt callstack 0
   285  000080                     ?_strlen:
   286                           	opt callstack 0
   287  000080                     ?___aodiv:
   288                           	opt callstack 0
   289  000080                     ?___aomod:
   290                           	opt callstack 0
   291  000080                     pulse_e@interruptState:
   292                           	opt callstack 0
   293  000080                     strlen@s:
   294                           	opt callstack 0
   295  000080                     ___aodiv@dividend:
   296                           	opt callstack 0
   297  000080                     ___aomod@dividend:
   298                           	opt callstack 0
   299                           
   300                           ; 8 bytes @ 0x0
   301  000080                     	ds	1
   302  000081                     send_nibble@data:
   303                           	opt callstack 0
   304                           
   305                           ; 1 bytes @ 0x1
   306  000081                     	ds	1
   307  000082                     send_byte@data:
   308                           	opt callstack 0
   309  000082                     strlen@a:
   310                           	opt callstack 0
   311                           
   312                           ; 2 bytes @ 0x2
   313  000082                     	ds	1
   314  000083                     lcdInst@data:
   315                           	opt callstack 0
   316  000083                     putch@data:
   317                           	opt callstack 0
   318                           
   319                           ; 1 bytes @ 0x3
   320  000083                     	ds	1
   321  000084                     ??_initLCD:
   322  000084                     fputc@c:
   323                           	opt callstack 0
   324                           
   325                           ; 2 bytes @ 0x4
   326  000084                     	ds	2
   327  000086                     fputc@fp:
   328                           	opt callstack 0
   329                           
   330                           ; 2 bytes @ 0x6
   331  000086                     	ds	2
   332  000088                     ??_fputc:
   333  000088                     ___aodiv@divisor:
   334                           	opt callstack 0
   335  000088                     ___aomod@divisor:
   336                           	opt callstack 0
   337                           
   338                           ; 8 bytes @ 0x8
   339  000088                     	ds	5
   340  00008D                     fputs@s:
   341                           	opt callstack 0
   342                           
   343                           ; 2 bytes @ 0xD
   344  00008D                     	ds	2
   345  00008F                     fputs@fp:
   346                           	opt callstack 0
   347                           
   348                           ; 2 bytes @ 0xF
   349  00008F                     	ds	1
   350  000090                     ___aodiv@counter:
   351                           	opt callstack 0
   352  000090                     ___aomod@counter:
   353                           	opt callstack 0
   354                           
   355                           ; 1 bytes @ 0x10
   356  000090                     	ds	1
   357  000091                     ___aodiv@sign:
   358                           	opt callstack 0
   359  000091                     ___aomod@sign:
   360                           	opt callstack 0
   361  000091                     fputs@c:
   362                           	opt callstack 0
   363                           
   364                           ; 1 bytes @ 0x11
   365  000091                     	ds	1
   366  000092                     ?_abs:
   367                           	opt callstack 0
   368  000092                     abs@a:
   369                           	opt callstack 0
   370  000092                     fputs@i:
   371                           	opt callstack 0
   372  000092                     ___aodiv@quotient:
   373                           	opt callstack 0
   374                           
   375                           ; 8 bytes @ 0x12
   376  000092                     	ds	2
   377  000094                     ??_abs:
   378  000094                     ?_pad:
   379                           	opt callstack 0
   380  000094                     pad@fp:
   381                           	opt callstack 0
   382                           
   383                           ; 2 bytes @ 0x14
   384  000094                     	ds	2
   385  000096                     pad@buf:
   386                           	opt callstack 0
   387                           
   388                           ; 2 bytes @ 0x16
   389  000096                     	ds	2
   390  000098                     pad@p:
   391                           	opt callstack 0
   392                           
   393                           ; 2 bytes @ 0x18
   394  000098                     	ds	2
   395  00009A                     ??_pad:
   396                           
   397                           ; 1 bytes @ 0x1A
   398  00009A                     	ds	1
   399  00009B                     pad@i:
   400                           	opt callstack 0
   401                           
   402                           ; 2 bytes @ 0x1B
   403  00009B                     	ds	2
   404  00009D                     pad@w:
   405                           	opt callstack 0
   406                           
   407                           ; 2 bytes @ 0x1D
   408  00009D                     	ds	2
   409  00009F                     ?_dtoa:
   410                           	opt callstack 0
   411  00009F                     dtoa@fp:
   412                           	opt callstack 0
   413                           
   414                           ; 2 bytes @ 0x1F
   415  00009F                     	ds	2
   416  0000A1                     dtoa@d:
   417                           	opt callstack 0
   418                           
   419                           ; 8 bytes @ 0x21
   420  0000A1                     	ds	8
   421  0000A9                     ??_dtoa:
   422                           
   423                           ; 1 bytes @ 0x29
   424  0000A9                     	ds	8
   425  0000B1                     _dtoa$629:
   426                           	opt callstack 0
   427                           
   428                           ; 2 bytes @ 0x31
   429  0000B1                     	ds	2
   430  0000B3                     dtoa@p:
   431                           	opt callstack 0
   432                           
   433                           ; 2 bytes @ 0x33
   434  0000B3                     	ds	2
   435  0000B5                     dtoa@w:
   436                           	opt callstack 0
   437                           
   438                           ; 2 bytes @ 0x35
   439  0000B5                     	ds	2
   440  0000B7                     dtoa@s:
   441                           	opt callstack 0
   442                           
   443                           ; 2 bytes @ 0x37
   444  0000B7                     	ds	2
   445  0000B9                     dtoa@n:
   446                           	opt callstack 0
   447                           
   448                           ; 8 bytes @ 0x39
   449  0000B9                     	ds	8
   450  0000C1                     dtoa@i:
   451                           	opt callstack 0
   452                           
   453                           ; 2 bytes @ 0x41
   454  0000C1                     	ds	2
   455  0000C3                     ?_vfpfcnvrt:
   456                           	opt callstack 0
   457  0000C3                     vfpfcnvrt@fp:
   458                           	opt callstack 0
   459                           
   460                           ; 2 bytes @ 0x43
   461  0000C3                     	ds	2
   462  0000C5                     vfpfcnvrt@fmt:
   463                           	opt callstack 0
   464                           
   465                           ; 2 bytes @ 0x45
   466  0000C5                     	ds	2
   467  0000C7                     vfpfcnvrt@ap:
   468                           	opt callstack 0
   469                           
   470                           ; 2 bytes @ 0x47
   471  0000C7                     	ds	2
   472  0000C9                     ??_vfpfcnvrt:
   473                           
   474                           ; 1 bytes @ 0x49
   475  0000C9                     	ds	2
   476  0000CB                     vfpfcnvrt@ll:
   477                           	opt callstack 0
   478                           
   479                           ; 8 bytes @ 0x4B
   480  0000CB                     	ds	8
   481  0000D3                     ?_vfprintf:
   482                           	opt callstack 0
   483  0000D3                     vfprintf@fp:
   484                           	opt callstack 0
   485                           
   486                           ; 2 bytes @ 0x53
   487  0000D3                     	ds	2
   488  0000D5                     vfprintf@fmt:
   489                           	opt callstack 0
   490                           
   491                           ; 2 bytes @ 0x55
   492  0000D5                     	ds	2
   493  0000D7                     vfprintf@ap:
   494                           	opt callstack 0
   495                           
   496                           ; 2 bytes @ 0x57
   497  0000D7                     	ds	2
   498  0000D9                     vfprintf@cfmt:
   499                           	opt callstack 0
   500                           
   501                           ; 2 bytes @ 0x59
   502  0000D9                     	ds	2
   503  0000DB                     ?_printf:
   504                           	opt callstack 0
   505  0000DB                     printf@fmt:
   506                           	opt callstack 0
   507                           
   508                           ; 2 bytes @ 0x5B
   509  0000DB                     	ds	4
   510  0000DF                     
   511                           ; 1 bytes @ 0x5F
   512  0000DF                     	ds	2
   513  0000E1                     printf@ap:
   514                           	opt callstack 0
   515                           
   516                           ; 2 bytes @ 0x61
   517  0000E1                     	ds	2
   518  0000E3                     full_drive@stepper_no:
   519                           	opt callstack 0
   520                           
   521                           ; 2 bytes @ 0x63
   522  0000E3                     	ds	2
   523  0000E5                     ??_full_drive:
   524                           
   525                           ; 1 bytes @ 0x65
   526  0000E5                     	ds	1
   527  0000E6                     full_drive@direction:
   528                           	opt callstack 0
   529                           
   530                           ; 1 bytes @ 0x66
   531  0000E6                     	ds	1
   532  0000E7                     ??_main:
   533                           
   534                           ; 1 bytes @ 0x67
   535  0000E7                     	ds	2
   536  0000E9                     main@i:
   537                           	opt callstack 0
   538                           
   539                           ; 2 bytes @ 0x69
   540  0000E9                     	ds	2
   541                           
   542                           	psect	cstackCOMRAM
   543  000001                     __pcstackCOMRAM:
   544                           	opt callstack 0
   545  000001                     ?___awdiv:
   546                           	opt callstack 0
   547  000001                     ?i2_strlen:
   548                           	opt callstack 0
   549  000001                     ?i2___aodiv:
   550                           	opt callstack 0
   551  000001                     ?i2___aomod:
   552                           	opt callstack 0
   553  000001                     i2pulse_e@interruptState:
   554                           	opt callstack 0
   555  000001                     ___awdiv@dividend:
   556                           	opt callstack 0
   557  000001                     i2strlen@s:
   558                           	opt callstack 0
   559  000001                     i2___aodiv@dividend:
   560                           	opt callstack 0
   561  000001                     i2___aomod@dividend:
   562                           	opt callstack 0
   563                           
   564                           ; 8 bytes @ 0x0
   565  000001                     	ds	1
   566  000002                     i2send_nibble@data:
   567                           	opt callstack 0
   568                           
   569                           ; 1 bytes @ 0x1
   570  000002                     	ds	1
   571  000003                     i2send_byte@data:
   572                           	opt callstack 0
   573  000003                     ___awdiv@divisor:
   574                           	opt callstack 0
   575  000003                     i2strlen@a:
   576                           	opt callstack 0
   577                           
   578                           ; 2 bytes @ 0x2
   579  000003                     	ds	1
   580  000004                     i2lcdInst@data:
   581                           	opt callstack 0
   582  000004                     i2putch@data:
   583                           	opt callstack 0
   584                           
   585                           ; 1 bytes @ 0x3
   586  000004                     	ds	1
   587  000005                     ___awdiv@counter:
   588                           	opt callstack 0
   589  000005                     i2fputc@c:
   590                           	opt callstack 0
   591                           
   592                           ; 2 bytes @ 0x4
   593  000005                     	ds	1
   594  000006                     ___awdiv@sign:
   595                           	opt callstack 0
   596                           
   597                           ; 1 bytes @ 0x5
   598  000006                     	ds	1
   599  000007                     ___awdiv@quotient:
   600                           	opt callstack 0
   601  000007                     i2fputc@fp:
   602                           	opt callstack 0
   603                           
   604                           ; 2 bytes @ 0x6
   605  000007                     	ds	2
   606  000009                     ??i2_fputc:
   607  000009                     i2___aodiv@divisor:
   608                           	opt callstack 0
   609  000009                     i2___aomod@divisor:
   610                           	opt callstack 0
   611                           
   612                           ; 8 bytes @ 0x8
   613  000009                     	ds	5
   614  00000E                     i2fputs@s:
   615                           	opt callstack 0
   616                           
   617                           ; 2 bytes @ 0xD
   618  00000E                     	ds	2
   619  000010                     i2fputs@fp:
   620                           	opt callstack 0
   621                           
   622                           ; 2 bytes @ 0xF
   623  000010                     	ds	1
   624  000011                     i2___aodiv@counter:
   625                           	opt callstack 0
   626  000011                     i2___aomod@counter:
   627                           	opt callstack 0
   628                           
   629                           ; 1 bytes @ 0x10
   630  000011                     	ds	1
   631  000012                     i2___aodiv@sign:
   632                           	opt callstack 0
   633  000012                     i2___aomod@sign:
   634                           	opt callstack 0
   635  000012                     i2fputs@c:
   636                           	opt callstack 0
   637                           
   638                           ; 1 bytes @ 0x11
   639  000012                     	ds	1
   640  000013                     ?i2_abs:
   641                           	opt callstack 0
   642  000013                     i2abs@a:
   643                           	opt callstack 0
   644  000013                     i2fputs@i:
   645                           	opt callstack 0
   646  000013                     i2___aodiv@quotient:
   647                           	opt callstack 0
   648                           
   649                           ; 8 bytes @ 0x12
   650  000013                     	ds	2
   651  000015                     ??i2_abs:
   652  000015                     ?i2_pad:
   653                           	opt callstack 0
   654  000015                     i2pad@fp:
   655                           	opt callstack 0
   656                           
   657                           ; 2 bytes @ 0x14
   658  000015                     	ds	2
   659  000017                     i2pad@buf:
   660                           	opt callstack 0
   661                           
   662                           ; 2 bytes @ 0x16
   663  000017                     	ds	2
   664  000019                     i2pad@p:
   665                           	opt callstack 0
   666                           
   667                           ; 2 bytes @ 0x18
   668  000019                     	ds	2
   669  00001B                     ??i2_pad:
   670                           
   671                           ; 1 bytes @ 0x1A
   672  00001B                     	ds	1
   673  00001C                     i2pad@i:
   674                           	opt callstack 0
   675                           
   676                           ; 2 bytes @ 0x1B
   677  00001C                     	ds	2
   678  00001E                     i2pad@w:
   679                           	opt callstack 0
   680                           
   681                           ; 2 bytes @ 0x1D
   682  00001E                     	ds	2
   683  000020                     ?i2_dtoa:
   684                           	opt callstack 0
   685  000020                     i2dtoa@fp:
   686                           	opt callstack 0
   687                           
   688                           ; 2 bytes @ 0x1F
   689  000020                     	ds	2
   690  000022                     i2dtoa@d:
   691                           	opt callstack 0
   692                           
   693                           ; 8 bytes @ 0x21
   694  000022                     	ds	8
   695  00002A                     ??i2_dtoa:
   696                           
   697                           ; 1 bytes @ 0x29
   698  00002A                     	ds	8
   699  000032                     i2_dtoa$629:
   700                           	opt callstack 0
   701                           
   702                           ; 2 bytes @ 0x31
   703  000032                     	ds	2
   704  000034                     i2dtoa@p:
   705                           	opt callstack 0
   706                           
   707                           ; 2 bytes @ 0x33
   708  000034                     	ds	2
   709  000036                     i2dtoa@w:
   710                           	opt callstack 0
   711                           
   712                           ; 2 bytes @ 0x35
   713  000036                     	ds	2
   714  000038                     i2dtoa@s:
   715                           	opt callstack 0
   716                           
   717                           ; 2 bytes @ 0x37
   718  000038                     	ds	2
   719  00003A                     i2dtoa@n:
   720                           	opt callstack 0
   721                           
   722                           ; 8 bytes @ 0x39
   723  00003A                     	ds	8
   724  000042                     i2dtoa@i:
   725                           	opt callstack 0
   726                           
   727                           ; 2 bytes @ 0x41
   728  000042                     	ds	2
   729  000044                     ?i2_vfpfcnvrt:
   730                           	opt callstack 0
   731  000044                     i2vfpfcnvrt@fp:
   732                           	opt callstack 0
   733                           
   734                           ; 2 bytes @ 0x43
   735  000044                     	ds	2
   736  000046                     i2vfpfcnvrt@fmt:
   737                           	opt callstack 0
   738                           
   739                           ; 2 bytes @ 0x45
   740  000046                     	ds	2
   741  000048                     i2vfpfcnvrt@ap:
   742                           	opt callstack 0
   743                           
   744                           ; 2 bytes @ 0x47
   745  000048                     	ds	2
   746  00004A                     ??i2_vfpfcnvrt:
   747                           
   748                           ; 1 bytes @ 0x49
   749  00004A                     	ds	2
   750  00004C                     i2vfpfcnvrt@ll:
   751                           	opt callstack 0
   752                           
   753                           ; 8 bytes @ 0x4B
   754  00004C                     	ds	8
   755  000054                     ?i2_vfprintf:
   756                           	opt callstack 0
   757  000054                     i2vfprintf@fp:
   758                           	opt callstack 0
   759                           
   760                           ; 2 bytes @ 0x53
   761  000054                     	ds	2
   762  000056                     i2vfprintf@fmt:
   763                           	opt callstack 0
   764                           
   765                           ; 2 bytes @ 0x55
   766  000056                     	ds	2
   767  000058                     i2vfprintf@ap:
   768                           	opt callstack 0
   769                           
   770                           ; 2 bytes @ 0x57
   771  000058                     	ds	2
   772  00005A                     i2vfprintf@cfmt:
   773                           	opt callstack 0
   774                           
   775                           ; 2 bytes @ 0x59
   776  00005A                     	ds	2
   777  00005C                     ?i2_printf:
   778                           	opt callstack 0
   779  00005C                     i2printf@fmt:
   780                           	opt callstack 0
   781                           
   782                           ; 2 bytes @ 0x5B
   783  00005C                     	ds	4
   784  000060                     i2printf@ret:
   785                           	opt callstack 0
   786                           
   787                           ; 2 bytes @ 0x5F
   788  000060                     	ds	2
   789  000062                     i2printf@ap:
   790                           	opt callstack 0
   791                           
   792                           ; 2 bytes @ 0x61
   793  000062                     	ds	2
   794  000064                     ??_SW_ISR:
   795                           
   796                           ; 1 bytes @ 0x63
   797  000064                     	ds	9
   798                           
   799 ;;
   800 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   801 ;;
   802 ;; *************** function _main *****************
   803 ;; Defined at:
   804 ;;		line 54 in file "main.c"
   805 ;; Parameters:    Size  Location     Type
   806 ;;		None
   807 ;; Auto vars:     Size  Location     Type
   808 ;;  i               2  105[BANK0 ] int 
   809 ;; Return value:  Size  Location     Type
   810 ;;                  1    wreg      void 
   811 ;; Registers used:
   812 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   813 ;; Tracked objects:
   814 ;;		On entry : 0/0
   815 ;;		On exit  : 0/0
   816 ;;		Unchanged: 0/0
   817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   819 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   820 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   821 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   822 ;;Total ram usage:        4 bytes
   823 ;; Hardware stack levels required when called:   24
   824 ;; This function calls:
   825 ;;		_full_drive
   826 ;;		_initLCD
   827 ;;		_lcdInst
   828 ;;		_printf
   829 ;;		_system_init
   830 ;; This function is called by:
   831 ;;		Startup code after reset
   832 ;; This function uses a non-reentrant model
   833 ;;
   834                           
   835                           	psect	text0
   836  001FE6                     __ptext0:
   837                           	opt callstack 0
   838  001FE6                     _main:
   839                           	opt callstack 7
   840                           
   841                           ;main.c: 55:     system_init();
   842                           
   843                           ;incstack = 0
   844  001FE6  ECA4  F013         	call	_system_init	;wreg free
   845                           
   846                           ;main.c: 56:     initLCD();
   847  001FEA  EC9E  F011         	call	_initLCD	;wreg free
   848  001FEE                     l2801:
   849                           
   850                           ;main.c: 67:         if (count<1){
   851  001FEE  0100               	movlb	0	; () banked
   852  001FF0  BFF4               	btfsc	(_count+1)& (0+255),7,b
   853  001FF2  D005               	goto	u2200
   854  001FF4  51F4               	movf	(_count+1)& (0+255),w,b
   855  001FF6  E144               	bnz	l2827
   856  001FF8  05F3               	decf	_count& (0+255),w,b
   857  001FFA  B0D8               	btfsc	status,0,c
   858  001FFC  D041               	goto	l2827
   859  001FFE                     u2200:
   860                           
   861                           ; BSR set to: 0
   862                           ;main.c: 68:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)))
      +                          ;};
   863  001FFE  0E01               	movlw	1
   864  002000  ECE2  F013         	call	_lcdInst
   865  002004  0E11               	movlw	17
   866  002006  0100               	movlb	0	; () banked
   867  002008  6FE7               	movwf	??_main& (0+255),b
   868  00200A  0E3A               	movlw	58
   869  00200C                     u2257:
   870  00200C  2EE8               	decfsz	wreg,f,c
   871  00200E  D7FE               	bra	u2257
   872  002010  2FE7               	decfsz	??_main& (0+255),f,b
   873  002012  D7FC               	bra	u2257
   874  002014  F000               	nop	
   875                           
   876                           ;main.c: 69:             printf("step1");
   877  002016  0E1C               	movlw	low STR_1
   878  002018  0100               	movlb	0	; () banked
   879  00201A  6FDB               	movwf	printf@fmt& (0+255),b
   880  00201C  0E10               	movlw	high STR_1
   881  00201E  6FDC               	movwf	(printf@fmt+1)& (0+255),b
   882  002020  EC90  F013         	call	_printf	;wreg free
   883                           
   884                           ;main.c: 70:             { lcdInst(0x80 | LCD_LINE2_ADDR);};
   885  002024  0E06               	movlw	low _LCD_LINE2_ADDR
   886  002026  6EF6               	movwf	tblptrl,c
   887  002028                     	if	0	;There is only one active tblptr byte
   888  002028                     	endif
   889  002028                     	if	0	;There are less than 3 active tblptr bytes
   890  002028                     	endif
   891  002028  0008               	tblrd		*
   892  00202A  50F5               	movf	tablat,w,c
   893  00202C  0980               	iorlw	128
   894  00202E  ECE2  F013         	call	_lcdInst
   895                           
   896                           ;main.c: 71:             for(int i=0;i<(7);i++){
   897  002032  0E00               	movlw	0
   898  002034  0100               	movlb	0	; () banked
   899  002036  6FEA               	movwf	(main@i+1)& (0+255),b
   900  002038  0E00               	movlw	0
   901  00203A  6FE9               	movwf	main@i& (0+255),b
   902  00203C                     l2817:
   903                           
   904                           ; BSR set to: 0
   905                           ;main.c: 72:                 full_drive(0, 2);
   906  00203C  0E00               	movlw	0
   907  00203E  6FE4               	movwf	(full_drive@stepper_no+1)& (0+255),b
   908  002040  0E02               	movlw	2
   909  002042  6FE3               	movwf	full_drive@stepper_no& (0+255),b
   910  002044  0E00               	movlw	0
   911  002046  EC17  F008         	call	_full_drive
   912                           
   913                           ;main.c: 75:             }
   914  00204A  0100               	movlb	0	; () banked
   915  00204C  4BE9               	infsnz	main@i& (0+255),f,b
   916  00204E  2BEA               	incf	(main@i+1)& (0+255),f,b
   917                           
   918                           ; BSR set to: 0
   919  002050  BFEA               	btfsc	(main@i+1)& (0+255),7,b
   920  002052  D7F4               	goto	l2817
   921  002054  51EA               	movf	(main@i+1)& (0+255),w,b
   922  002056  E104               	bnz	u2210
   923  002058  0E07               	movlw	7
   924  00205A  5DE9               	subwf	main@i& (0+255),w,b
   925  00205C  A0D8               	btfss	status,0,c
   926  00205E  D7EE               	goto	l2817
   927  002060                     u2210:
   928                           
   929                           ; BSR set to: 0
   930                           ;main.c: 81:             count++;
   931  002060  4BF3               	infsnz	_count& (0+255),f,b
   932  002062  2BF4               	incf	(_count+1)& (0+255),f,b
   933                           
   934                           ; BSR set to: 0
   935                           ;main.c: 82:                 _delay((unsigned long)((3000)*(10000000/4000.0)));
   936  002064  0E27               	movlw	39
   937  002066  0100               	movlb	0	; () banked
   938  002068  6FE8               	movwf	(??_main+1)& (0+255),b
   939  00206A  0E0D               	movlw	13
   940  00206C  6FE7               	movwf	??_main& (0+255),b
   941  00206E  0E26               	movlw	38
   942  002070                     u2267:
   943  002070  2EE8               	decfsz	wreg,f,c
   944  002072  D7FE               	bra	u2267
   945  002074  2FE7               	decfsz	??_main& (0+255),f,b
   946  002076  D7FC               	bra	u2267
   947  002078  2FE8               	decfsz	(??_main+1)& (0+255),f,b
   948  00207A  D7FA               	bra	u2267
   949  00207C  F000               	nop	
   950                           
   951                           ;main.c: 84:         }
   952  00207E  D7B7               	goto	l2801
   953  002080                     l2827:
   954                           
   955                           ; BSR set to: 0
   956                           ;main.c: 96:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)))
      +                          ;};
   957  002080  0E01               	movlw	1
   958  002082  ECE2  F013         	call	_lcdInst
   959  002086  0E11               	movlw	17
   960  002088  0100               	movlb	0	; () banked
   961  00208A  6FE7               	movwf	??_main& (0+255),b
   962  00208C  0E3A               	movlw	58
   963  00208E                     u2277:
   964  00208E  2EE8               	decfsz	wreg,f,c
   965  002090  D7FE               	bra	u2277
   966  002092  2FE7               	decfsz	??_main& (0+255),f,b
   967  002094  D7FC               	bra	u2277
   968  002096  F000               	nop	
   969                           
   970                           ;main.c: 97:             printf("steps done");
   971  002098  0E07               	movlw	low STR_2
   972  00209A  0100               	movlb	0	; () banked
   973  00209C  6FDB               	movwf	printf@fmt& (0+255),b
   974  00209E  0E10               	movlw	high STR_2
   975  0020A0  6FDC               	movwf	(printf@fmt+1)& (0+255),b
   976  0020A2  EC90  F013         	call	_printf	;wreg free
   977                           
   978                           ;main.c: 98:             { lcdInst(0x80 | LCD_LINE2_ADDR);};
   979  0020A6  0E06               	movlw	low _LCD_LINE2_ADDR
   980  0020A8  6EF6               	movwf	tblptrl,c
   981  0020AA                     	if	0	;There is only one active tblptr byte
   982  0020AA                     	endif
   983  0020AA                     	if	0	;There are less than 3 active tblptr bytes
   984  0020AA                     	endif
   985  0020AA  0008               	tblrd		*
   986  0020AC  50F5               	movf	tablat,w,c
   987  0020AE  0980               	iorlw	128
   988  0020B0  ECE2  F013         	call	_lcdInst
   989                           
   990                           ;main.c: 99:             printf("cnt is %d", count);
   991  0020B4  0E12               	movlw	low STR_3
   992  0020B6  0100               	movlb	0	; () banked
   993  0020B8  6FDB               	movwf	printf@fmt& (0+255),b
   994  0020BA  0E10               	movlw	high STR_3
   995  0020BC  6FDC               	movwf	(printf@fmt+1)& (0+255),b
   996  0020BE  C0F3  F0DD         	movff	_count,?_printf+2
   997  0020C2  C0F4  F0DE         	movff	_count+1,?_printf+3
   998  0020C6  EC90  F013         	call	_printf	;wreg free
   999                           
  1000                           ;main.c: 100:             break;
  1001  0020CA  EF07  F000         	goto	start
  1002  0020CE                     __end_of_main:
  1003                           	opt callstack 0
  1004                           
  1005 ;; *************** function _system_init *****************
  1006 ;; Defined at:
  1007 ;;		line 119 in file "main.c"
  1008 ;; Parameters:    Size  Location     Type
  1009 ;;		None
  1010 ;; Auto vars:     Size  Location     Type
  1011 ;;		None
  1012 ;; Return value:  Size  Location     Type
  1013 ;;                  1    wreg      void 
  1014 ;; Registers used:
  1015 ;;		wreg, status,2
  1016 ;; Tracked objects:
  1017 ;;		On entry : 0/0
  1018 ;;		On exit  : 0/0
  1019 ;;		Unchanged: 0/0
  1020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1025 ;;Total ram usage:        0 bytes
  1026 ;; Hardware stack levels used:    1
  1027 ;; Hardware stack levels required when called:   12
  1028 ;; This function calls:
  1029 ;;		Nothing
  1030 ;; This function is called by:
  1031 ;;		_main
  1032 ;; This function uses a non-reentrant model
  1033 ;;
  1034                           
  1035                           	psect	text1
  1036  002748                     __ptext1:
  1037                           	opt callstack 0
  1038  002748                     _system_init:
  1039                           	opt callstack 18
  1040                           
  1041                           ;main.c: 121:     TRISB = 0x00;
  1042                           
  1043                           ;incstack = 0
  1044  002748  0E00               	movlw	0
  1045  00274A  6E93               	movwf	3987,c	;volatile
  1046                           
  1047                           ;main.c: 123:     LATB = 0x00;
  1048  00274C  0E00               	movlw	0
  1049  00274E  6E8A               	movwf	3978,c	;volatile
  1050                           
  1051                           ;main.c: 124:     TRISA = 0x00;
  1052  002750  0E00               	movlw	0
  1053  002752  6E92               	movwf	3986,c	;volatile
  1054                           
  1055                           ;main.c: 125:     LATA = 0x00;
  1056  002754  0E00               	movlw	0
  1057  002756  6E89               	movwf	3977,c	;volatile
  1058                           
  1059                           ;main.c: 126:     TRISC = 0x00;
  1060  002758  0E00               	movlw	0
  1061  00275A  6E94               	movwf	3988,c	;volatile
  1062                           
  1063                           ;main.c: 127:     LATC = 0x00;
  1064  00275C  0E00               	movlw	0
  1065  00275E  6E8B               	movwf	3979,c	;volatile
  1066                           
  1067                           ;main.c: 128:     TRISE = 0x00;
  1068  002760  0E00               	movlw	0
  1069  002762  6E96               	movwf	3990,c	;volatile
  1070                           
  1071                           ;main.c: 129:     LATE = 0x00;
  1072  002764  0E00               	movlw	0
  1073  002766  6E8D               	movwf	3981,c	;volatile
  1074  002768  0012               	return		;funcret
  1075  00276A                     __end_of_system_init:
  1076                           	opt callstack 0
  1077                           
  1078 ;; *************** function _initLCD *****************
  1079 ;; Defined at:
  1080 ;;		line 69 in file "lcd.c"
  1081 ;; Parameters:    Size  Location     Type
  1082 ;;		None
  1083 ;; Auto vars:     Size  Location     Type
  1084 ;;		None
  1085 ;; Return value:  Size  Location     Type
  1086 ;;                  1    wreg      void 
  1087 ;; Registers used:
  1088 ;;		wreg, status,2, status,0, cstack
  1089 ;; Tracked objects:
  1090 ;;		On entry : 0/0
  1091 ;;		On exit  : 0/0
  1092 ;;		Unchanged: 0/0
  1093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1096 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1097 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1098 ;;Total ram usage:        1 bytes
  1099 ;; Hardware stack levels used:    1
  1100 ;; Hardware stack levels required when called:   16
  1101 ;; This function calls:
  1102 ;;		_lcdInst
  1103 ;;		_send_byte
  1104 ;;		_send_nibble
  1105 ;; This function is called by:
  1106 ;;		_main
  1107 ;;		_timer_main
  1108 ;; This function uses a non-reentrant model
  1109 ;;
  1110                           
  1111                           	psect	text2
  1112  00233C                     __ptext2:
  1113                           	opt callstack 0
  1114  00233C                     _initLCD:
  1115                           	opt callstack 14
  1116                           
  1117                           ;lcd.c: 70:     _delay((unsigned long)((15)*(10000000/4000.0)));
  1118                           
  1119                           ;incstack = 0
  1120  00233C  0E31               	movlw	49
  1121  00233E  0100               	movlb	0	; () banked
  1122  002340  6F84               	movwf	??_initLCD& (0+255),b
  1123  002342  0EB2               	movlw	178
  1124  002344                     u2287:
  1125  002344  2EE8               	decfsz	wreg,f,c
  1126  002346  D7FE               	bra	u2287
  1127  002348  2F84               	decfsz	??_initLCD& (0+255),f,b
  1128  00234A  D7FC               	bra	u2287
  1129  00234C  F000               	nop	
  1130                           
  1131                           ;lcd.c: 72:     LATDbits.LATD2 = 0;
  1132  00234E  948C               	bcf	3980,2,c	;volatile
  1133                           
  1134                           ;lcd.c: 74:     send_nibble(0b0011);
  1135  002350  0E03               	movlw	3
  1136  002352  ECB5  F013         	call	_send_nibble
  1137                           
  1138                           ;lcd.c: 75:     _delay((unsigned long)((5)*(10000000/4000.0)));
  1139  002356  0E11               	movlw	17
  1140  002358  0100               	movlb	0	; () banked
  1141  00235A  6F84               	movwf	??_initLCD& (0+255),b
  1142  00235C  0E3A               	movlw	58
  1143  00235E                     u2297:
  1144  00235E  2EE8               	decfsz	wreg,f,c
  1145  002360  D7FE               	bra	u2297
  1146  002362  2F84               	decfsz	??_initLCD& (0+255),f,b
  1147  002364  D7FC               	bra	u2297
  1148  002366  F000               	nop	
  1149                           
  1150                           ;lcd.c: 76:     send_nibble(0b0011);
  1151  002368  0E03               	movlw	3
  1152  00236A  ECB5  F013         	call	_send_nibble
  1153                           
  1154                           ;lcd.c: 77:     _delay((unsigned long)((150)*(10000000/4000000.0)));
  1155  00236E  0E7D               	movlw	125
  1156  002370                     u2307:
  1157  002370  2EE8               	decfsz	wreg,f,c
  1158  002372  D7FE               	bra	u2307
  1159                           
  1160                           ;lcd.c: 78:     send_byte(0b00110010);
  1161  002374  0E32               	movlw	50
  1162  002376  ECC2  F013         	call	_send_byte
  1163                           
  1164                           ;lcd.c: 80:     send_byte(0b00101000);
  1165  00237A  0E28               	movlw	40
  1166  00237C  ECC2  F013         	call	_send_byte
  1167                           
  1168                           ;lcd.c: 81:     send_byte(0b00001000);
  1169  002380  0E08               	movlw	8
  1170  002382  ECC2  F013         	call	_send_byte
  1171                           
  1172                           ;lcd.c: 82:     send_byte(0b00000001);
  1173  002386  0E01               	movlw	1
  1174  002388  ECC2  F013         	call	_send_byte
  1175                           
  1176                           ;lcd.c: 83:     _delay((unsigned long)((5)*(10000000/4000.0)));
  1177  00238C  0E11               	movlw	17
  1178  00238E  0100               	movlb	0	; () banked
  1179  002390  6F84               	movwf	??_initLCD& (0+255),b
  1180  002392  0E3A               	movlw	58
  1181  002394                     u2317:
  1182  002394  2EE8               	decfsz	wreg,f,c
  1183  002396  D7FE               	bra	u2317
  1184  002398  2F84               	decfsz	??_initLCD& (0+255),f,b
  1185  00239A  D7FC               	bra	u2317
  1186  00239C  F000               	nop	
  1187                           
  1188                           ;lcd.c: 84:     send_byte(0b00000110);
  1189  00239E  0E06               	movlw	6
  1190  0023A0  ECC2  F013         	call	_send_byte
  1191                           
  1192                           ;lcd.c: 87:     { lcdInst( (unsigned char)(8 | (1 << 2) | (1 << 1) | 1) );};
  1193  0023A4  0E0F               	movlw	15
  1194  0023A6  ECE2  F013         	call	_lcdInst
  1195  0023AA  0012               	return		;funcret
  1196  0023AC                     __end_of_initLCD:
  1197                           	opt callstack 0
  1198                           
  1199 ;; *************** function _lcdInst *****************
  1200 ;; Defined at:
  1201 ;;		line 64 in file "lcd.c"
  1202 ;; Parameters:    Size  Location     Type
  1203 ;;  data            1    wreg     unsigned char 
  1204 ;; Auto vars:     Size  Location     Type
  1205 ;;  data            1    3[BANK0 ] unsigned char 
  1206 ;; Return value:  Size  Location     Type
  1207 ;;                  1    wreg      void 
  1208 ;; Registers used:
  1209 ;;		wreg, status,2, status,0, cstack
  1210 ;; Tracked objects:
  1211 ;;		On entry : 0/0
  1212 ;;		On exit  : 0/0
  1213 ;;		Unchanged: 0/0
  1214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1216 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1218 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1219 ;;Total ram usage:        1 bytes
  1220 ;; Hardware stack levels used:    1
  1221 ;; Hardware stack levels required when called:   15
  1222 ;; This function calls:
  1223 ;;		_send_byte
  1224 ;; This function is called by:
  1225 ;;		_main
  1226 ;;		_initLCD
  1227 ;;		_lcd_shift_cursor
  1228 ;;		_lcd_shift_display
  1229 ;; This function uses a non-reentrant model
  1230 ;;
  1231                           
  1232                           	psect	text3
  1233  0027C4                     __ptext3:
  1234                           	opt callstack 0
  1235  0027C4                     _lcdInst:
  1236                           	opt callstack 15
  1237                           
  1238                           ;incstack = 0
  1239                           ;lcdInst@data stored from wreg
  1240  0027C4  0100               	movlb	0	; () banked
  1241  0027C6  6F83               	movwf	lcdInst@data& (0+255),b
  1242                           
  1243                           ;lcd.c: 65:     LATDbits.LATD2 = 0;
  1244  0027C8  948C               	bcf	3980,2,c	;volatile
  1245                           
  1246                           ;lcd.c: 66:     send_byte(data);
  1247  0027CA  0100               	movlb	0	; () banked
  1248  0027CC  5183               	movf	lcdInst@data& (0+255),w,b
  1249  0027CE  ECC2  F013         	call	_send_byte
  1250  0027D2  0012               	return		;funcret
  1251  0027D4                     __end_of_lcdInst:
  1252                           	opt callstack 0
  1253                           
  1254 ;; *************** function _full_drive *****************
  1255 ;; Defined at:
  1256 ;;		line 136 in file "main.c"
  1257 ;; Parameters:    Size  Location     Type
  1258 ;;  direction       1    wreg     unsigned char 
  1259 ;;  stepper_no      2   99[BANK0 ] int 
  1260 ;; Auto vars:     Size  Location     Type
  1261 ;;  direction       1  102[BANK0 ] unsigned char 
  1262 ;; Return value:  Size  Location     Type
  1263 ;;                  1    wreg      void 
  1264 ;; Registers used:
  1265 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1266 ;; Tracked objects:
  1267 ;;		On entry : 0/0
  1268 ;;		On exit  : 0/0
  1269 ;;		Unchanged: 0/0
  1270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1271 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1272 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1273 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1274 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1275 ;;Total ram usage:        4 bytes
  1276 ;; Hardware stack levels used:    1
  1277 ;; Hardware stack levels required when called:   23
  1278 ;; This function calls:
  1279 ;;		_printf
  1280 ;; This function is called by:
  1281 ;;		_main
  1282 ;; This function uses a non-reentrant model
  1283 ;;
  1284                           
  1285                           	psect	text4
  1286  00102E                     __ptext4:
  1287                           	opt callstack 0
  1288  00102E                     _full_drive:
  1289                           	opt callstack 7
  1290                           
  1291                           ;incstack = 0
  1292                           ;full_drive@direction stored from wreg
  1293  00102E  0100               	movlb	0	; () banked
  1294  001030  6FE6               	movwf	full_drive@direction& (0+255),b
  1295                           
  1296                           ;main.c: 137:     if (stepper_no == 1){
  1297  001032  0100               	movlb	0	; () banked
  1298  001034  05E3               	decf	full_drive@stepper_no& (0+255),w,b
  1299  001036  11E4               	iorwf	(full_drive@stepper_no+1)& (0+255),w,b
  1300  001038  A4D8               	btfss	status,2,c
  1301  00103A  D075               	goto	l2567
  1302                           
  1303                           ; BSR set to: 0
  1304                           ;main.c: 138:         if (direction == 1){
  1305  00103C  05E6               	decf	full_drive@direction& (0+255),w,b
  1306  00103E  A4D8               	btfss	status,2,c
  1307  001040  D037               	goto	l2551
  1308                           
  1309                           ; BSR set to: 0
  1310                           ;main.c: 139:             LATA = 0b00000011;
  1311  001042  0E03               	movlw	3
  1312  001044  6E89               	movwf	3977,c	;volatile
  1313                           
  1314                           ; BSR set to: 0
  1315                           ;main.c: 140:             _delay((unsigned long)((6)*(10000000/4000.0)));
  1316  001046  0E14               	movlw	20
  1317  001048  0100               	movlb	0	; () banked
  1318  00104A  6FE5               	movwf	??_full_drive& (0+255),b
  1319  00104C  0E79               	movlw	121
  1320  00104E                     u2327:
  1321  00104E  2EE8               	decfsz	wreg,f,c
  1322  001050  D7FE               	bra	u2327
  1323  001052  2FE5               	decfsz	??_full_drive& (0+255),f,b
  1324  001054  D7FC               	bra	u2327
  1325  001056  D000               	nop2	
  1326                           
  1327                           ;main.c: 141:             LATA = 0b00000110;
  1328  001058  0E06               	movlw	6
  1329  00105A  6E89               	movwf	3977,c	;volatile
  1330                           
  1331                           ;main.c: 142:             _delay((unsigned long)((6)*(10000000/4000.0)));
  1332  00105C  0E14               	movlw	20
  1333  00105E  0100               	movlb	0	; () banked
  1334  001060  6FE5               	movwf	??_full_drive& (0+255),b
  1335  001062  0E79               	movlw	121
  1336  001064                     u2337:
  1337  001064  2EE8               	decfsz	wreg,f,c
  1338  001066  D7FE               	bra	u2337
  1339  001068  2FE5               	decfsz	??_full_drive& (0+255),f,b
  1340  00106A  D7FC               	bra	u2337
  1341  00106C  D000               	nop2	
  1342                           
  1343                           ;main.c: 143:             LATA = 0b00001100;
  1344  00106E  0E0C               	movlw	12
  1345  001070  6E89               	movwf	3977,c	;volatile
  1346                           
  1347                           ;main.c: 144:             _delay((unsigned long)((6)*(10000000/4000.0)));
  1348  001072  0E14               	movlw	20
  1349  001074  0100               	movlb	0	; () banked
  1350  001076  6FE5               	movwf	??_full_drive& (0+255),b
  1351  001078  0E79               	movlw	121
  1352  00107A                     u2347:
  1353  00107A  2EE8               	decfsz	wreg,f,c
  1354  00107C  D7FE               	bra	u2347
  1355  00107E  2FE5               	decfsz	??_full_drive& (0+255),f,b
  1356  001080  D7FC               	bra	u2347
  1357  001082  D000               	nop2	
  1358                           
  1359                           ;main.c: 145:             LATA = 0b00001001;
  1360  001084  0E09               	movlw	9
  1361  001086  6E89               	movwf	3977,c	;volatile
  1362                           
  1363                           ;main.c: 146:             _delay((unsigned long)((6)*(10000000/4000.0)));
  1364  001088  0E14               	movlw	20
  1365  00108A  0100               	movlb	0	; () banked
  1366  00108C  6FE5               	movwf	??_full_drive& (0+255),b
  1367  00108E  0E79               	movlw	121
  1368  001090                     u2357:
  1369  001090  2EE8               	decfsz	wreg,f,c
  1370  001092  D7FE               	bra	u2357
  1371  001094  2FE5               	decfsz	??_full_drive& (0+255),f,b
  1372  001096  D7FC               	bra	u2357
  1373  001098  D000               	nop2	
  1374                           
  1375                           ;main.c: 147:             LATA = 0b00000011;
  1376  00109A  0E03               	movlw	3
  1377  00109C  6E89               	movwf	3977,c	;volatile
  1378                           
  1379                           ;main.c: 148:             _delay((unsigned long)((6)*(10000000/4000.0)));
  1380  00109E  0E14               	movlw	20
  1381  0010A0  0100               	movlb	0	; () banked
  1382  0010A2  6FE5               	movwf	??_full_drive& (0+255),b
  1383  0010A4  0E79               	movlw	121
  1384  0010A6                     u2367:
  1385  0010A6  2EE8               	decfsz	wreg,f,c
  1386  0010A8  D7FE               	bra	u2367
  1387  0010AA  2FE5               	decfsz	??_full_drive& (0+255),f,b
  1388  0010AC  D7FC               	bra	u2367
  1389  0010AE  D000               	nop2	
  1390  0010B0                     l2551:
  1391                           
  1392                           ;main.c: 150:         if (direction == 0){
  1393  0010B0  0100               	movlb	0	; () banked
  1394  0010B2  51E6               	movf	full_drive@direction& (0+255),w,b
  1395  0010B4  A4D8               	btfss	status,2,c
  1396  0010B6  D037               	goto	l2567
  1397                           
  1398                           ; BSR set to: 0
  1399                           ;main.c: 151:             LATA = 0b00001001;
  1400  0010B8  0E09               	movlw	9
  1401  0010BA  6E89               	movwf	3977,c	;volatile
  1402                           
  1403                           ; BSR set to: 0
  1404                           ;main.c: 152:             _delay((unsigned long)((6)*(10000000/4000.0)));
  1405  0010BC  0E14               	movlw	20
  1406  0010BE  0100               	movlb	0	; () banked
  1407  0010C0  6FE5               	movwf	??_full_drive& (0+255),b
  1408  0010C2  0E79               	movlw	121
  1409  0010C4                     u2377:
  1410  0010C4  2EE8               	decfsz	wreg,f,c
  1411  0010C6  D7FE               	bra	u2377
  1412  0010C8  2FE5               	decfsz	??_full_drive& (0+255),f,b
  1413  0010CA  D7FC               	bra	u2377
  1414  0010CC  D000               	nop2	
  1415                           
  1416                           ;main.c: 153:             LATA = 0b00001100;
  1417  0010CE  0E0C               	movlw	12
  1418  0010D0  6E89               	movwf	3977,c	;volatile
  1419                           
  1420                           ;main.c: 154:             _delay((unsigned long)((6)*(10000000/4000.0)));
  1421  0010D2  0E14               	movlw	20
  1422  0010D4  0100               	movlb	0	; () banked
  1423  0010D6  6FE5               	movwf	??_full_drive& (0+255),b
  1424  0010D8  0E79               	movlw	121
  1425  0010DA                     u2387:
  1426  0010DA  2EE8               	decfsz	wreg,f,c
  1427  0010DC  D7FE               	bra	u2387
  1428  0010DE  2FE5               	decfsz	??_full_drive& (0+255),f,b
  1429  0010E0  D7FC               	bra	u2387
  1430  0010E2  D000               	nop2	
  1431                           
  1432                           ;main.c: 155:             LATA = 0b00000110;
  1433  0010E4  0E06               	movlw	6
  1434  0010E6  6E89               	movwf	3977,c	;volatile
  1435                           
  1436                           ;main.c: 156:             _delay((unsigned long)((6)*(10000000/4000.0)));
  1437  0010E8  0E14               	movlw	20
  1438  0010EA  0100               	movlb	0	; () banked
  1439  0010EC  6FE5               	movwf	??_full_drive& (0+255),b
  1440  0010EE  0E79               	movlw	121
  1441  0010F0                     u2397:
  1442  0010F0  2EE8               	decfsz	wreg,f,c
  1443  0010F2  D7FE               	bra	u2397
  1444  0010F4  2FE5               	decfsz	??_full_drive& (0+255),f,b
  1445  0010F6  D7FC               	bra	u2397
  1446  0010F8  D000               	nop2	
  1447                           
  1448                           ;main.c: 157:             LATA = 0b00000011;
  1449  0010FA  0E03               	movlw	3
  1450  0010FC  6E89               	movwf	3977,c	;volatile
  1451                           
  1452                           ;main.c: 158:             _delay((unsigned long)((6)*(10000000/4000.0)));
  1453  0010FE  0E14               	movlw	20
  1454  001100  0100               	movlb	0	; () banked
  1455  001102  6FE5               	movwf	??_full_drive& (0+255),b
  1456  001104  0E79               	movlw	121
  1457  001106                     u2407:
  1458  001106  2EE8               	decfsz	wreg,f,c
  1459  001108  D7FE               	bra	u2407
  1460  00110A  2FE5               	decfsz	??_full_drive& (0+255),f,b
  1461  00110C  D7FC               	bra	u2407
  1462  00110E  D000               	nop2	
  1463                           
  1464                           ;main.c: 159:             LATA = 0b00001001;
  1465  001110  0E09               	movlw	9
  1466  001112  6E89               	movwf	3977,c	;volatile
  1467                           
  1468                           ;main.c: 160:             _delay((unsigned long)((6)*(10000000/4000.0)));
  1469  001114  0E14               	movlw	20
  1470  001116  0100               	movlb	0	; () banked
  1471  001118  6FE5               	movwf	??_full_drive& (0+255),b
  1472  00111A  0E79               	movlw	121
  1473  00111C                     u2417:
  1474  00111C  2EE8               	decfsz	wreg,f,c
  1475  00111E  D7FE               	bra	u2417
  1476  001120  2FE5               	decfsz	??_full_drive& (0+255),f,b
  1477  001122  D7FC               	bra	u2417
  1478  001124  D000               	nop2	
  1479  001126                     l2567:
  1480                           
  1481                           ;main.c: 163:     if (stepper_no == 2){
  1482  001126  0E02               	movlw	2
  1483  001128  0100               	movlb	0	; () banked
  1484  00112A  19E3               	xorwf	full_drive@stepper_no& (0+255),w,b
  1485  00112C  11E4               	iorwf	(full_drive@stepper_no+1)& (0+255),w,b
  1486  00112E  A4D8               	btfss	status,2,c
  1487  001130  D089               	goto	l2645
  1488                           
  1489                           ; BSR set to: 0
  1490                           ;main.c: 164:         if (direction == 1){
  1491  001132  05E6               	decf	full_drive@direction& (0+255),w,b
  1492  001134  A4D8               	btfss	status,2,c
  1493  001136  D041               	goto	l2607
  1494                           
  1495                           ; BSR set to: 0
  1496                           ;main.c: 165:             LATCbits.LATC0 = 1;
  1497  001138  808B               	bsf	3979,0,c	;volatile
  1498                           
  1499                           ;main.c: 166:             LATEbits.LATE0 = 1;
  1500  00113A  808D               	bsf	3981,0,c	;volatile
  1501                           
  1502                           ;main.c: 167:             LATEbits.LATE1 = 0;
  1503  00113C  928D               	bcf	3981,1,c	;volatile
  1504                           
  1505                           ;main.c: 168:             LATEbits.LATE2 = 0;
  1506  00113E  948D               	bcf	3981,2,c	;volatile
  1507                           
  1508                           ; BSR set to: 0
  1509                           ;main.c: 169:             _delay((unsigned long)((6)*(10000000/4000.0)));
  1510  001140  0E14               	movlw	20
  1511  001142  0100               	movlb	0	; () banked
  1512  001144  6FE5               	movwf	??_full_drive& (0+255),b
  1513  001146  0E79               	movlw	121
  1514  001148                     u2427:
  1515  001148  2EE8               	decfsz	wreg,f,c
  1516  00114A  D7FE               	bra	u2427
  1517  00114C  2FE5               	decfsz	??_full_drive& (0+255),f,b
  1518  00114E  D7FC               	bra	u2427
  1519  001150  D000               	nop2	
  1520                           
  1521                           ;main.c: 170:             LATCbits.LATC0 = 0;
  1522  001152  908B               	bcf	3979,0,c	;volatile
  1523                           
  1524                           ;main.c: 171:             LATEbits.LATE0 = 1;
  1525  001154  808D               	bsf	3981,0,c	;volatile
  1526                           
  1527                           ;main.c: 172:             LATEbits.LATE1 = 1;
  1528  001156  828D               	bsf	3981,1,c	;volatile
  1529                           
  1530                           ;main.c: 173:             LATEbits.LATE2 = 0;
  1531  001158  948D               	bcf	3981,2,c	;volatile
  1532                           
  1533                           ;main.c: 174:             _delay((unsigned long)((6)*(10000000/4000.0)));
  1534  00115A  0E14               	movlw	20
  1535  00115C  0100               	movlb	0	; () banked
  1536  00115E  6FE5               	movwf	??_full_drive& (0+255),b
  1537  001160  0E79               	movlw	121
  1538  001162                     u2437:
  1539  001162  2EE8               	decfsz	wreg,f,c
  1540  001164  D7FE               	bra	u2437
  1541  001166  2FE5               	decfsz	??_full_drive& (0+255),f,b
  1542  001168  D7FC               	bra	u2437
  1543  00116A  D000               	nop2	
  1544                           
  1545                           ;main.c: 175:             LATCbits.LATC0 = 0;
  1546  00116C  908B               	bcf	3979,0,c	;volatile
  1547                           
  1548                           ;main.c: 176:             LATEbits.LATE0 = 0;
  1549  00116E  908D               	bcf	3981,0,c	;volatile
  1550                           
  1551                           ;main.c: 177:             LATEbits.LATE1 = 1;
  1552  001170  828D               	bsf	3981,1,c	;volatile
  1553                           
  1554                           ;main.c: 178:             LATEbits.LATE2 = 1;
  1555  001172  848D               	bsf	3981,2,c	;volatile
  1556                           
  1557                           ;main.c: 179:             _delay((unsigned long)((6)*(10000000/4000.0)));
  1558  001174  0E14               	movlw	20
  1559  001176  0100               	movlb	0	; () banked
  1560  001178  6FE5               	movwf	??_full_drive& (0+255),b
  1561  00117A  0E79               	movlw	121
  1562  00117C                     u2447:
  1563  00117C  2EE8               	decfsz	wreg,f,c
  1564  00117E  D7FE               	bra	u2447
  1565  001180  2FE5               	decfsz	??_full_drive& (0+255),f,b
  1566  001182  D7FC               	bra	u2447
  1567  001184  D000               	nop2	
  1568                           
  1569                           ;main.c: 180:             LATCbits.LATC0 = 1;
  1570  001186  808B               	bsf	3979,0,c	;volatile
  1571                           
  1572                           ;main.c: 181:             LATEbits.LATE0 = 0;
  1573  001188  908D               	bcf	3981,0,c	;volatile
  1574                           
  1575                           ;main.c: 182:             LATEbits.LATE1 = 0;
  1576  00118A  928D               	bcf	3981,1,c	;volatile
  1577                           
  1578                           ;main.c: 183:             LATEbits.LATE2 = 1;
  1579  00118C  848D               	bsf	3981,2,c	;volatile
  1580                           
  1581                           ;main.c: 184:             _delay((unsigned long)((6)*(10000000/4000.0)));
  1582  00118E  0E14               	movlw	20
  1583  001190  0100               	movlb	0	; () banked
  1584  001192  6FE5               	movwf	??_full_drive& (0+255),b
  1585  001194  0E79               	movlw	121
  1586  001196                     u2457:
  1587  001196  2EE8               	decfsz	wreg,f,c
  1588  001198  D7FE               	bra	u2457
  1589  00119A  2FE5               	decfsz	??_full_drive& (0+255),f,b
  1590  00119C  D7FC               	bra	u2457
  1591  00119E  D000               	nop2	
  1592                           
  1593                           ;main.c: 185:             LATCbits.LATC0 = 1;
  1594  0011A0  808B               	bsf	3979,0,c	;volatile
  1595                           
  1596                           ;main.c: 186:             LATEbits.LATE0 = 1;
  1597  0011A2  808D               	bsf	3981,0,c	;volatile
  1598                           
  1599                           ;main.c: 187:             LATEbits.LATE1 = 0;
  1600  0011A4  928D               	bcf	3981,1,c	;volatile
  1601                           
  1602                           ;main.c: 188:             LATEbits.LATE2 = 0;
  1603  0011A6  948D               	bcf	3981,2,c	;volatile
  1604                           
  1605                           ;main.c: 189:             _delay((unsigned long)((6)*(10000000/4000.0)));
  1606  0011A8  0E14               	movlw	20
  1607  0011AA  0100               	movlb	0	; () banked
  1608  0011AC  6FE5               	movwf	??_full_drive& (0+255),b
  1609  0011AE  0E79               	movlw	121
  1610  0011B0                     u2467:
  1611  0011B0  2EE8               	decfsz	wreg,f,c
  1612  0011B2  D7FE               	bra	u2467
  1613  0011B4  2FE5               	decfsz	??_full_drive& (0+255),f,b
  1614  0011B6  D7FC               	bra	u2467
  1615  0011B8  D000               	nop2	
  1616  0011BA                     l2607:
  1617                           
  1618                           ;main.c: 191:         if (direction == 0){
  1619  0011BA  0100               	movlb	0	; () banked
  1620  0011BC  51E6               	movf	full_drive@direction& (0+255),w,b
  1621  0011BE  A4D8               	btfss	status,2,c
  1622  0011C0  D041               	goto	l2645
  1623                           
  1624                           ; BSR set to: 0
  1625                           ;main.c: 192:             LATCbits.LATC0 = 1;
  1626  0011C2  808B               	bsf	3979,0,c	;volatile
  1627                           
  1628                           ;main.c: 193:             LATEbits.LATE0 = 0;
  1629  0011C4  908D               	bcf	3981,0,c	;volatile
  1630                           
  1631                           ;main.c: 194:             LATEbits.LATE1 = 0;
  1632  0011C6  928D               	bcf	3981,1,c	;volatile
  1633                           
  1634                           ;main.c: 195:             LATEbits.LATE2 = 1;
  1635  0011C8  848D               	bsf	3981,2,c	;volatile
  1636                           
  1637                           ; BSR set to: 0
  1638                           ;main.c: 196:             _delay((unsigned long)((6)*(10000000/4000.0)));
  1639  0011CA  0E14               	movlw	20
  1640  0011CC  0100               	movlb	0	; () banked
  1641  0011CE  6FE5               	movwf	??_full_drive& (0+255),b
  1642  0011D0  0E79               	movlw	121
  1643  0011D2                     u2477:
  1644  0011D2  2EE8               	decfsz	wreg,f,c
  1645  0011D4  D7FE               	bra	u2477
  1646  0011D6  2FE5               	decfsz	??_full_drive& (0+255),f,b
  1647  0011D8  D7FC               	bra	u2477
  1648  0011DA  D000               	nop2	
  1649                           
  1650                           ;main.c: 197:             LATCbits.LATC0 = 0;
  1651  0011DC  908B               	bcf	3979,0,c	;volatile
  1652                           
  1653                           ;main.c: 198:             LATEbits.LATE0 = 0;
  1654  0011DE  908D               	bcf	3981,0,c	;volatile
  1655                           
  1656                           ;main.c: 199:             LATEbits.LATE1 = 1;
  1657  0011E0  828D               	bsf	3981,1,c	;volatile
  1658                           
  1659                           ;main.c: 200:             LATEbits.LATE2 = 1;
  1660  0011E2  848D               	bsf	3981,2,c	;volatile
  1661                           
  1662                           ;main.c: 201:             _delay((unsigned long)((6)*(10000000/4000.0)));
  1663  0011E4  0E14               	movlw	20
  1664  0011E6  0100               	movlb	0	; () banked
  1665  0011E8  6FE5               	movwf	??_full_drive& (0+255),b
  1666  0011EA  0E79               	movlw	121
  1667  0011EC                     u2487:
  1668  0011EC  2EE8               	decfsz	wreg,f,c
  1669  0011EE  D7FE               	bra	u2487
  1670  0011F0  2FE5               	decfsz	??_full_drive& (0+255),f,b
  1671  0011F2  D7FC               	bra	u2487
  1672  0011F4  D000               	nop2	
  1673                           
  1674                           ;main.c: 202:             LATCbits.LATC0 = 0;
  1675  0011F6  908B               	bcf	3979,0,c	;volatile
  1676                           
  1677                           ;main.c: 203:             LATEbits.LATE0 = 1;
  1678  0011F8  808D               	bsf	3981,0,c	;volatile
  1679                           
  1680                           ;main.c: 204:             LATEbits.LATE1 = 1;
  1681  0011FA  828D               	bsf	3981,1,c	;volatile
  1682                           
  1683                           ;main.c: 205:             LATEbits.LATE2 = 0;
  1684  0011FC  948D               	bcf	3981,2,c	;volatile
  1685                           
  1686                           ;main.c: 206:             _delay((unsigned long)((6)*(10000000/4000.0)));
  1687  0011FE  0E14               	movlw	20
  1688  001200  0100               	movlb	0	; () banked
  1689  001202  6FE5               	movwf	??_full_drive& (0+255),b
  1690  001204  0E79               	movlw	121
  1691  001206                     u2497:
  1692  001206  2EE8               	decfsz	wreg,f,c
  1693  001208  D7FE               	bra	u2497
  1694  00120A  2FE5               	decfsz	??_full_drive& (0+255),f,b
  1695  00120C  D7FC               	bra	u2497
  1696  00120E  D000               	nop2	
  1697                           
  1698                           ;main.c: 207:             LATCbits.LATC0 = 1;
  1699  001210  808B               	bsf	3979,0,c	;volatile
  1700                           
  1701                           ;main.c: 208:             LATEbits.LATE0 = 1;
  1702  001212  808D               	bsf	3981,0,c	;volatile
  1703                           
  1704                           ;main.c: 209:             LATEbits.LATE1 = 0;
  1705  001214  928D               	bcf	3981,1,c	;volatile
  1706                           
  1707                           ;main.c: 210:             LATEbits.LATE2 = 0;
  1708  001216  948D               	bcf	3981,2,c	;volatile
  1709                           
  1710                           ;main.c: 211:             _delay((unsigned long)((6)*(10000000/4000.0)));
  1711  001218  0E14               	movlw	20
  1712  00121A  0100               	movlb	0	; () banked
  1713  00121C  6FE5               	movwf	??_full_drive& (0+255),b
  1714  00121E  0E79               	movlw	121
  1715  001220                     u2507:
  1716  001220  2EE8               	decfsz	wreg,f,c
  1717  001222  D7FE               	bra	u2507
  1718  001224  2FE5               	decfsz	??_full_drive& (0+255),f,b
  1719  001226  D7FC               	bra	u2507
  1720  001228  D000               	nop2	
  1721                           
  1722                           ;main.c: 212:             LATCbits.LATC0 = 1;
  1723  00122A  808B               	bsf	3979,0,c	;volatile
  1724                           
  1725                           ;main.c: 213:             LATEbits.LATE0 = 0;
  1726  00122C  908D               	bcf	3981,0,c	;volatile
  1727                           
  1728                           ;main.c: 214:             LATEbits.LATE1 = 0;
  1729  00122E  928D               	bcf	3981,1,c	;volatile
  1730                           
  1731                           ;main.c: 215:             LATEbits.LATE2 = 1;
  1732  001230  848D               	bsf	3981,2,c	;volatile
  1733                           
  1734                           ;main.c: 216:             _delay((unsigned long)((6)*(10000000/4000.0)));
  1735  001232  0E14               	movlw	20
  1736  001234  0100               	movlb	0	; () banked
  1737  001236  6FE5               	movwf	??_full_drive& (0+255),b
  1738  001238  0E79               	movlw	121
  1739  00123A                     u2517:
  1740  00123A  2EE8               	decfsz	wreg,f,c
  1741  00123C  D7FE               	bra	u2517
  1742  00123E  2FE5               	decfsz	??_full_drive& (0+255),f,b
  1743  001240  D7FC               	bra	u2517
  1744  001242  D000               	nop2	
  1745  001244                     l2645:
  1746                           
  1747                           ;main.c: 219:     if (stepper_no == 3){
  1748  001244  0E03               	movlw	3
  1749  001246  0100               	movlb	0	; () banked
  1750  001248  19E3               	xorwf	full_drive@stepper_no& (0+255),w,b
  1751  00124A  11E4               	iorwf	(full_drive@stepper_no+1)& (0+255),w,b
  1752  00124C  A4D8               	btfss	status,2,c
  1753  00124E  0012               	return	
  1754                           
  1755                           ; BSR set to: 0
  1756                           ;main.c: 220:         printf("what");
  1757  001250  0E27               	movlw	low STR_4
  1758  001252  6FDB               	movwf	printf@fmt& (0+255),b
  1759  001254  0E10               	movlw	high STR_4
  1760  001256  6FDC               	movwf	(printf@fmt+1)& (0+255),b
  1761  001258  EC90  F013         	call	_printf	;wreg free
  1762                           
  1763                           ;main.c: 221:         if (direction == 0){
  1764  00125C  0100               	movlb	0	; () banked
  1765  00125E  51E6               	movf	full_drive@direction& (0+255),w,b
  1766  001260  A4D8               	btfss	status,2,c
  1767  001262  D041               	goto	l2687
  1768                           
  1769                           ; BSR set to: 0
  1770                           ;main.c: 222:             LATCbits.LATC5 = 1;
  1771  001264  8A8B               	bsf	3979,5,c	;volatile
  1772                           
  1773                           ;main.c: 223:             LATCbits.LATC6 = 0;
  1774  001266  9C8B               	bcf	3979,6,c	;volatile
  1775                           
  1776                           ;main.c: 224:             LATCbits.LATC7 = 0;
  1777  001268  9E8B               	bcf	3979,7,c	;volatile
  1778                           
  1779                           ;main.c: 225:             LATAbits.LATA5 = 1;
  1780  00126A  8A89               	bsf	3977,5,c	;volatile
  1781                           
  1782                           ; BSR set to: 0
  1783                           ;main.c: 226:             _delay((unsigned long)((6)*(10000000/4000.0)));
  1784  00126C  0E14               	movlw	20
  1785  00126E  0100               	movlb	0	; () banked
  1786  001270  6FE5               	movwf	??_full_drive& (0+255),b
  1787  001272  0E79               	movlw	121
  1788  001274                     u2527:
  1789  001274  2EE8               	decfsz	wreg,f,c
  1790  001276  D7FE               	bra	u2527
  1791  001278  2FE5               	decfsz	??_full_drive& (0+255),f,b
  1792  00127A  D7FC               	bra	u2527
  1793  00127C  D000               	nop2	
  1794                           
  1795                           ;main.c: 227:             LATCbits.LATC5 = 0;
  1796  00127E  9A8B               	bcf	3979,5,c	;volatile
  1797                           
  1798                           ;main.c: 228:             LATCbits.LATC6 = 0;
  1799  001280  9C8B               	bcf	3979,6,c	;volatile
  1800                           
  1801                           ;main.c: 229:             LATCbits.LATC7 = 1;
  1802  001282  8E8B               	bsf	3979,7,c	;volatile
  1803                           
  1804                           ;main.c: 230:             LATAbits.LATA5 = 1;
  1805  001284  8A89               	bsf	3977,5,c	;volatile
  1806                           
  1807                           ;main.c: 231:             _delay((unsigned long)((6)*(10000000/4000.0)));
  1808  001286  0E14               	movlw	20
  1809  001288  0100               	movlb	0	; () banked
  1810  00128A  6FE5               	movwf	??_full_drive& (0+255),b
  1811  00128C  0E79               	movlw	121
  1812  00128E                     u2537:
  1813  00128E  2EE8               	decfsz	wreg,f,c
  1814  001290  D7FE               	bra	u2537
  1815  001292  2FE5               	decfsz	??_full_drive& (0+255),f,b
  1816  001294  D7FC               	bra	u2537
  1817  001296  D000               	nop2	
  1818                           
  1819                           ;main.c: 232:             LATCbits.LATC5 = 0;
  1820  001298  9A8B               	bcf	3979,5,c	;volatile
  1821                           
  1822                           ;main.c: 233:             LATCbits.LATC6 = 1;
  1823  00129A  8C8B               	bsf	3979,6,c	;volatile
  1824                           
  1825                           ;main.c: 234:             LATCbits.LATC7 = 1;
  1826  00129C  8E8B               	bsf	3979,7,c	;volatile
  1827                           
  1828                           ;main.c: 235:             LATAbits.LATA5 = 0;
  1829  00129E  9A89               	bcf	3977,5,c	;volatile
  1830                           
  1831                           ;main.c: 236:             _delay((unsigned long)((6)*(10000000/4000.0)));
  1832  0012A0  0E14               	movlw	20
  1833  0012A2  0100               	movlb	0	; () banked
  1834  0012A4  6FE5               	movwf	??_full_drive& (0+255),b
  1835  0012A6  0E79               	movlw	121
  1836  0012A8                     u2547:
  1837  0012A8  2EE8               	decfsz	wreg,f,c
  1838  0012AA  D7FE               	bra	u2547
  1839  0012AC  2FE5               	decfsz	??_full_drive& (0+255),f,b
  1840  0012AE  D7FC               	bra	u2547
  1841  0012B0  D000               	nop2	
  1842                           
  1843                           ;main.c: 237:             LATCbits.LATC5 = 1;
  1844  0012B2  8A8B               	bsf	3979,5,c	;volatile
  1845                           
  1846                           ;main.c: 238:             LATCbits.LATC6 = 1;
  1847  0012B4  8C8B               	bsf	3979,6,c	;volatile
  1848                           
  1849                           ;main.c: 239:             LATCbits.LATC7 = 0;
  1850  0012B6  9E8B               	bcf	3979,7,c	;volatile
  1851                           
  1852                           ;main.c: 240:             LATAbits.LATA5 = 0;
  1853  0012B8  9A89               	bcf	3977,5,c	;volatile
  1854                           
  1855                           ;main.c: 241:             _delay((unsigned long)((6)*(10000000/4000.0)));
  1856  0012BA  0E14               	movlw	20
  1857  0012BC  0100               	movlb	0	; () banked
  1858  0012BE  6FE5               	movwf	??_full_drive& (0+255),b
  1859  0012C0  0E79               	movlw	121
  1860  0012C2                     u2557:
  1861  0012C2  2EE8               	decfsz	wreg,f,c
  1862  0012C4  D7FE               	bra	u2557
  1863  0012C6  2FE5               	decfsz	??_full_drive& (0+255),f,b
  1864  0012C8  D7FC               	bra	u2557
  1865  0012CA  D000               	nop2	
  1866                           
  1867                           ;main.c: 242:             LATCbits.LATC5 = 1;
  1868  0012CC  8A8B               	bsf	3979,5,c	;volatile
  1869                           
  1870                           ;main.c: 243:             LATCbits.LATC6 = 0;
  1871  0012CE  9C8B               	bcf	3979,6,c	;volatile
  1872                           
  1873                           ;main.c: 244:             LATCbits.LATC7 = 0;
  1874  0012D0  9E8B               	bcf	3979,7,c	;volatile
  1875                           
  1876                           ;main.c: 245:             LATAbits.LATA5 = 1;
  1877  0012D2  8A89               	bsf	3977,5,c	;volatile
  1878                           
  1879                           ;main.c: 246:             _delay((unsigned long)((6)*(10000000/4000.0)));
  1880  0012D4  0E14               	movlw	20
  1881  0012D6  0100               	movlb	0	; () banked
  1882  0012D8  6FE5               	movwf	??_full_drive& (0+255),b
  1883  0012DA  0E79               	movlw	121
  1884  0012DC                     u2567:
  1885  0012DC  2EE8               	decfsz	wreg,f,c
  1886  0012DE  D7FE               	bra	u2567
  1887  0012E0  2FE5               	decfsz	??_full_drive& (0+255),f,b
  1888  0012E2  D7FC               	bra	u2567
  1889  0012E4  D000               	nop2	
  1890  0012E6                     l2687:
  1891                           
  1892                           ;main.c: 248:         if (direction == 1){
  1893  0012E6  0100               	movlb	0	; () banked
  1894  0012E8  05E6               	decf	full_drive@direction& (0+255),w,b
  1895  0012EA  A4D8               	btfss	status,2,c
  1896  0012EC  0012               	return	
  1897                           
  1898                           ; BSR set to: 0
  1899                           ;main.c: 249:                 LATCbits.LATC5 = 1;
  1900  0012EE  8A8B               	bsf	3979,5,c	;volatile
  1901                           
  1902                           ;main.c: 250:                 LATCbits.LATC6 = 1;
  1903  0012F0  8C8B               	bsf	3979,6,c	;volatile
  1904                           
  1905                           ;main.c: 251:                 LATCbits.LATC7 = 0;
  1906  0012F2  9E8B               	bcf	3979,7,c	;volatile
  1907                           
  1908                           ;main.c: 252:                 LATAbits.LATA5 = 0;
  1909  0012F4  9A89               	bcf	3977,5,c	;volatile
  1910                           
  1911                           ; BSR set to: 0
  1912                           ;main.c: 253:                 _delay((unsigned long)((6)*(10000000/4000.0)));
  1913  0012F6  0E14               	movlw	20
  1914  0012F8  0100               	movlb	0	; () banked
  1915  0012FA  6FE5               	movwf	??_full_drive& (0+255),b
  1916  0012FC  0E79               	movlw	121
  1917  0012FE                     u2577:
  1918  0012FE  2EE8               	decfsz	wreg,f,c
  1919  001300  D7FE               	bra	u2577
  1920  001302  2FE5               	decfsz	??_full_drive& (0+255),f,b
  1921  001304  D7FC               	bra	u2577
  1922  001306  D000               	nop2	
  1923                           
  1924                           ;main.c: 254:                 LATCbits.LATC5 = 0;
  1925  001308  9A8B               	bcf	3979,5,c	;volatile
  1926                           
  1927                           ;main.c: 255:                 LATCbits.LATC6 = 1;
  1928  00130A  8C8B               	bsf	3979,6,c	;volatile
  1929                           
  1930                           ;main.c: 256:                 LATCbits.LATC7 = 1;
  1931  00130C  8E8B               	bsf	3979,7,c	;volatile
  1932                           
  1933                           ;main.c: 257:                 LATAbits.LATA5 = 0;
  1934  00130E  9A89               	bcf	3977,5,c	;volatile
  1935                           
  1936                           ;main.c: 258:                 _delay((unsigned long)((6)*(10000000/4000.0)));
  1937  001310  0E14               	movlw	20
  1938  001312  0100               	movlb	0	; () banked
  1939  001314  6FE5               	movwf	??_full_drive& (0+255),b
  1940  001316  0E79               	movlw	121
  1941  001318                     u2587:
  1942  001318  2EE8               	decfsz	wreg,f,c
  1943  00131A  D7FE               	bra	u2587
  1944  00131C  2FE5               	decfsz	??_full_drive& (0+255),f,b
  1945  00131E  D7FC               	bra	u2587
  1946  001320  D000               	nop2	
  1947                           
  1948                           ;main.c: 259:                 LATCbits.LATC5 = 0;
  1949  001322  9A8B               	bcf	3979,5,c	;volatile
  1950                           
  1951                           ;main.c: 260:                 LATCbits.LATC6 = 0;
  1952  001324  9C8B               	bcf	3979,6,c	;volatile
  1953                           
  1954                           ;main.c: 261:                 LATCbits.LATC7 = 1;
  1955  001326  8E8B               	bsf	3979,7,c	;volatile
  1956                           
  1957                           ;main.c: 262:                 LATAbits.LATA5 = 1;
  1958  001328  8A89               	bsf	3977,5,c	;volatile
  1959                           
  1960                           ;main.c: 263:                 _delay((unsigned long)((6)*(10000000/4000.0)));
  1961  00132A  0E14               	movlw	20
  1962  00132C  0100               	movlb	0	; () banked
  1963  00132E  6FE5               	movwf	??_full_drive& (0+255),b
  1964  001330  0E79               	movlw	121
  1965  001332                     u2597:
  1966  001332  2EE8               	decfsz	wreg,f,c
  1967  001334  D7FE               	bra	u2597
  1968  001336  2FE5               	decfsz	??_full_drive& (0+255),f,b
  1969  001338  D7FC               	bra	u2597
  1970  00133A  D000               	nop2	
  1971                           
  1972                           ;main.c: 264:                 LATCbits.LATC5 = 1;
  1973  00133C  8A8B               	bsf	3979,5,c	;volatile
  1974                           
  1975                           ;main.c: 265:                 LATCbits.LATC6 = 0;
  1976  00133E  9C8B               	bcf	3979,6,c	;volatile
  1977                           
  1978                           ;main.c: 266:                 LATCbits.LATC7 = 0;
  1979  001340  9E8B               	bcf	3979,7,c	;volatile
  1980                           
  1981                           ;main.c: 267:                 LATAbits.LATA5 = 1;
  1982  001342  8A89               	bsf	3977,5,c	;volatile
  1983                           
  1984                           ;main.c: 268:                 _delay((unsigned long)((6)*(10000000/4000.0)));
  1985  001344  0E14               	movlw	20
  1986  001346  0100               	movlb	0	; () banked
  1987  001348  6FE5               	movwf	??_full_drive& (0+255),b
  1988  00134A  0E79               	movlw	121
  1989  00134C                     u2607:
  1990  00134C  2EE8               	decfsz	wreg,f,c
  1991  00134E  D7FE               	bra	u2607
  1992  001350  2FE5               	decfsz	??_full_drive& (0+255),f,b
  1993  001352  D7FC               	bra	u2607
  1994  001354  D000               	nop2	
  1995                           
  1996                           ;main.c: 269:                 LATCbits.LATC5 = 1;
  1997  001356  8A8B               	bsf	3979,5,c	;volatile
  1998                           
  1999                           ;main.c: 270:                 LATCbits.LATC6 = 1;
  2000  001358  8C8B               	bsf	3979,6,c	;volatile
  2001                           
  2002                           ;main.c: 271:                 LATCbits.LATC7 = 0;
  2003  00135A  9E8B               	bcf	3979,7,c	;volatile
  2004                           
  2005                           ;main.c: 272:                 LATAbits.LATA5 = 0;
  2006  00135C  9A89               	bcf	3977,5,c	;volatile
  2007                           
  2008                           ;main.c: 273:                 _delay((unsigned long)((6)*(10000000/4000.0)));
  2009  00135E  0E14               	movlw	20
  2010  001360  0100               	movlb	0	; () banked
  2011  001362  6FE5               	movwf	??_full_drive& (0+255),b
  2012  001364  0E79               	movlw	121
  2013  001366                     u2617:
  2014  001366  2EE8               	decfsz	wreg,f,c
  2015  001368  D7FE               	bra	u2617
  2016  00136A  2FE5               	decfsz	??_full_drive& (0+255),f,b
  2017  00136C  D7FC               	bra	u2617
  2018  00136E  D000               	nop2	
  2019  001370  0012               	return		;funcret
  2020  001372                     __end_of_full_drive:
  2021                           	opt callstack 0
  2022                           
  2023 ;; *************** function _printf *****************
  2024 ;; Defined at:
  2025 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  2026 ;; Parameters:    Size  Location     Type
  2027 ;;  fmt             2   91[BANK0 ] PTR const unsigned char 
  2028 ;;		 -> STR_6(3), STR_5(5), STR_4(5), STR_3(10), 
  2029 ;;		 -> STR_2(11), STR_1(6), 
  2030 ;; Auto vars:     Size  Location     Type
  2031 ;;  ap              2   97[BANK0 ] PTR void [1]
  2032 ;;		 -> ?_printf(2), 
  2033 ;;  ret             2    0        int 
  2034 ;; Return value:  Size  Location     Type
  2035 ;;                  2   91[BANK0 ] int 
  2036 ;; Registers used:
  2037 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2038 ;; Tracked objects:
  2039 ;;		On entry : 0/0
  2040 ;;		On exit  : 0/0
  2041 ;;		Unchanged: 0/0
  2042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2043 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2044 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2046 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2047 ;;Total ram usage:        8 bytes
  2048 ;; Hardware stack levels used:    1
  2049 ;; Hardware stack levels required when called:   22
  2050 ;; This function calls:
  2051 ;;		_vfprintf
  2052 ;; This function is called by:
  2053 ;;		_main
  2054 ;;		_full_drive
  2055 ;; This function uses a non-reentrant model
  2056 ;;
  2057                           
  2058                           	psect	text5
  2059  002720                     __ptext5:
  2060                           	opt callstack 0
  2061  002720                     _printf:
  2062                           	opt callstack 8
  2063                           
  2064                           ;incstack = 0
  2065  002720  0EDD               	movlw	low (?_printf+2)
  2066  002722  0100               	movlb	0	; () banked
  2067  002724  6FE1               	movwf	printf@ap& (0+255),b
  2068  002726  0E00               	movlw	high (?_printf+2)
  2069  002728  6FE2               	movwf	(printf@ap+1)& (0+255),b
  2070                           
  2071                           ; BSR set to: 0
  2072  00272A  0E00               	movlw	0
  2073  00272C  6FD3               	movwf	vfprintf@fp& (0+255),b
  2074  00272E  0E00               	movlw	0
  2075  002730  6FD4               	movwf	(vfprintf@fp+1)& (0+255),b
  2076  002732  C0DB  F0D5         	movff	printf@fmt,vfprintf@fmt
  2077  002736  C0DC  F0D6         	movff	printf@fmt+1,vfprintf@fmt+1
  2078  00273A  0EE1               	movlw	low printf@ap
  2079  00273C  6FD7               	movwf	vfprintf@ap& (0+255),b
  2080  00273E  0E00               	movlw	high printf@ap
  2081  002740  6FD8               	movwf	(vfprintf@ap+1)& (0+255),b
  2082  002742  EC43  F012         	call	_vfprintf	;wreg free
  2083  002746  0012               	return		;funcret
  2084  002748                     __end_of_printf:
  2085                           	opt callstack 0
  2086                           
  2087 ;; *************** function _vfprintf *****************
  2088 ;; Defined at:
  2089 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2090 ;; Parameters:    Size  Location     Type
  2091 ;;  fp              2   83[BANK0 ] PTR struct _IO_FILE
  2092 ;;		 -> NULL(0), 
  2093 ;;  fmt             2   85[BANK0 ] PTR const unsigned char 
  2094 ;;		 -> STR_6(3), STR_5(5), STR_4(5), STR_3(10), 
  2095 ;;		 -> STR_2(11), STR_1(6), 
  2096 ;;  ap              2   87[BANK0 ] PTR PTR void 
  2097 ;;		 -> printf@ap(2), 
  2098 ;; Auto vars:     Size  Location     Type
  2099 ;;  cfmt            2   89[BANK0 ] PTR unsigned char 
  2100 ;;		 -> STR_6(3), STR_5(5), STR_4(5), STR_3(10), 
  2101 ;;		 -> STR_2(11), STR_1(6), 
  2102 ;; Return value:  Size  Location     Type
  2103 ;;                  2   83[BANK0 ] int 
  2104 ;; Registers used:
  2105 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2106 ;; Tracked objects:
  2107 ;;		On entry : 0/0
  2108 ;;		On exit  : 0/0
  2109 ;;		Unchanged: 0/0
  2110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2111 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2112 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2114 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2115 ;;Total ram usage:        8 bytes
  2116 ;; Hardware stack levels used:    1
  2117 ;; Hardware stack levels required when called:   21
  2118 ;; This function calls:
  2119 ;;		_vfpfcnvrt
  2120 ;; This function is called by:
  2121 ;;		_printf
  2122 ;; This function uses a non-reentrant model
  2123 ;;
  2124                           
  2125                           	psect	text6
  2126  002486                     __ptext6:
  2127                           	opt callstack 0
  2128  002486                     _vfprintf:
  2129                           	opt callstack 8
  2130                           
  2131                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  2132                           
  2133                           ;incstack = 0
  2134  002486  C0D5  F0D9         	movff	vfprintf@fmt,vfprintf@cfmt
  2135  00248A  C0D6  F0DA         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2136                           
  2137                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  2138  00248E  0E00               	movlw	0
  2139  002490  0100               	movlb	0	; () banked
  2140  002492  6FEC               	movwf	(_nout+1)& (0+255),b
  2141  002494  0E00               	movlw	0
  2142  002496  6FEB               	movwf	_nout& (0+255),b
  2143                           
  2144                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2145  002498  D013               	goto	l2449
  2146  00249A                     l2447:
  2147                           
  2148                           ; BSR set to: 0
  2149                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  2150  00249A  C0D3  F0C3         	movff	vfprintf@fp,vfpfcnvrt@fp
  2151  00249E  C0D4  F0C4         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2152  0024A2  0ED9               	movlw	low vfprintf@cfmt
  2153  0024A4  6FC5               	movwf	vfpfcnvrt@fmt& (0+255),b
  2154  0024A6  0E00               	movlw	high vfprintf@cfmt
  2155  0024A8  6FC6               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2156  0024AA  C0D7  F0C7         	movff	vfprintf@ap,vfpfcnvrt@ap
  2157  0024AE  C0D8  F0C8         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2158  0024B2  EC01  F00C         	call	_vfpfcnvrt	;wreg free
  2159  0024B6  0100               	movlb	0	; () banked
  2160  0024B8  51C3               	movf	?_vfpfcnvrt& (0+255),w,b
  2161  0024BA  27EB               	addwf	_nout& (0+255),f,b
  2162  0024BC  51C4               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2163  0024BE  23EC               	addwfc	(_nout+1)& (0+255),f,b
  2164  0024C0                     l2449:
  2165                           
  2166                           ; BSR set to: 0
  2167                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2168  0024C0  C0D9  FFF6         	movff	vfprintf@cfmt,tblptrl
  2169  0024C4  C0DA  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2170  0024C8                     	if	0	;tblptru may be non-zero
  2171  0024C8                     	endif
  2172  0024C8                     	if	0	;tblptru may be non-zero
  2173  0024C8                     	endif
  2174  0024C8  0008               	tblrd		*
  2175  0024CA  50F5               	movf	tablat,w,c
  2176  0024CC  0900               	iorlw	0
  2177  0024CE  A4D8               	btfss	status,2,c
  2178  0024D0  D7E4               	goto	l2447
  2179                           
  2180                           ; BSR set to: 0
  2181                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  2182  0024D2  C0EB  F0D3         	movff	_nout,?_vfprintf
  2183  0024D6  C0EC  F0D4         	movff	_nout+1,?_vfprintf+1
  2184                           
  2185                           ; BSR set to: 0
  2186  0024DA  0012               	return		;funcret
  2187  0024DC                     __end_of_vfprintf:
  2188                           	opt callstack 0
  2189                           
  2190 ;; *************** function _vfpfcnvrt *****************
  2191 ;; Defined at:
  2192 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2193 ;; Parameters:    Size  Location     Type
  2194 ;;  fp              2   67[BANK0 ] PTR struct _IO_FILE
  2195 ;;		 -> NULL(0), 
  2196 ;;  fmt             2   69[BANK0 ] PTR PTR unsigned char 
  2197 ;;		 -> vfprintf@cfmt(2), 
  2198 ;;  ap              2   71[BANK0 ] PTR PTR void 
  2199 ;;		 -> printf@ap(2), 
  2200 ;; Auto vars:     Size  Location     Type
  2201 ;;  ll              8   75[BANK0 ] long long 
  2202 ;;  llu             8    0        unsigned long long 
  2203 ;;  f               4    0        unsigned long long 
  2204 ;;  vp              3    0        PTR void 
  2205 ;;  ct              3    0        unsigned char [3]
  2206 ;;  cp              3    0        PTR unsigned char 
  2207 ;;  i               2    0        int 
  2208 ;;  done            2    0        int 
  2209 ;;  c               1    0        unsigned char 
  2210 ;; Return value:  Size  Location     Type
  2211 ;;                  2   67[BANK0 ] int 
  2212 ;; Registers used:
  2213 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2214 ;; Tracked objects:
  2215 ;;		On entry : 0/0
  2216 ;;		On exit  : 0/0
  2217 ;;		Unchanged: 0/0
  2218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2219 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2220 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2221 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2222 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2223 ;;Total ram usage:       16 bytes
  2224 ;; Hardware stack levels used:    1
  2225 ;; Hardware stack levels required when called:   20
  2226 ;; This function calls:
  2227 ;;		_dtoa
  2228 ;;		_fputc
  2229 ;; This function is called by:
  2230 ;;		_vfprintf
  2231 ;; This function uses a non-reentrant model
  2232 ;;
  2233                           
  2234                           	psect	text7
  2235  001802                     __ptext7:
  2236                           	opt callstack 0
  2237  001802                     _vfpfcnvrt:
  2238                           	opt callstack 8
  2239                           
  2240                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  2241                           
  2242                           ; BSR set to: 0
  2243                           ;incstack = 0
  2244  001802  C0C5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2245  001806  C0C6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2246  00180A  CFDE FFF6          	movff	postinc2,tblptrl
  2247  00180E  CFDD FFF7          	movff	postdec2,tblptrh
  2248  001812                     	if	0	;tblptru may be non-zero
  2249  001812                     	endif
  2250  001812                     	if	0	;tblptru may be non-zero
  2251  001812                     	endif
  2252  001812  0008               	tblrd		*
  2253  001814  50F5               	movf	tablat,w,c
  2254  001816  0A25               	xorlw	37
  2255  001818  A4D8               	btfss	status,2,c
  2256  00181A  D09B               	goto	l2373
  2257                           
  2258                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  2259  00181C  C0C5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2260  001820  C0C6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2261  001824  2ADE               	incf	postinc2,f,c
  2262  001826  0E00               	movlw	0
  2263  001828  22DD               	addwfc	postdec2,f,c
  2264                           
  2265                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  2266  00182A  0E00               	movlw	0
  2267  00182C  0100               	movlb	0	; () banked
  2268  00182E  6FEE               	movwf	(_width+1)& (0+255),b
  2269  001830  0E00               	movlw	0
  2270  001832  6FED               	movwf	_width& (0+255),b
  2271  001834  C0ED  F0F1         	movff	_width,_flags
  2272  001838  C0EE  F0F2         	movff	_width+1,_flags+1
  2273                           
  2274                           ; BSR set to: 0
  2275                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  2276  00183C  69EF               	setf	_prec& (0+255),b
  2277  00183E  69F0               	setf	(_prec+1)& (0+255),b
  2278                           
  2279                           ; BSR set to: 0
  2280                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2281  001840  C0C5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2282  001844  C0C6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2283  001848  CFDE FFF6          	movff	postinc2,tblptrl
  2284  00184C  CFDD FFF7          	movff	postdec2,tblptrh
  2285  001850                     	if	0	;tblptru may be non-zero
  2286  001850                     	endif
  2287  001850                     	if	0	;tblptru may be non-zero
  2288  001850                     	endif
  2289  001850  0008               	tblrd		*
  2290  001852  50F5               	movf	tablat,w,c
  2291  001854  0A64               	xorlw	100
  2292  001856  B4D8               	btfsc	status,2,c
  2293  001858  D00D               	goto	u1820
  2294                           
  2295                           ; BSR set to: 0
  2296  00185A  C0C5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2297  00185E  C0C6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2298  001862  CFDE FFF6          	movff	postinc2,tblptrl
  2299  001866  CFDD FFF7          	movff	postdec2,tblptrh
  2300  00186A                     	if	0	;tblptru may be non-zero
  2301  00186A                     	endif
  2302  00186A                     	if	0	;tblptru may be non-zero
  2303  00186A                     	endif
  2304  00186A  0008               	tblrd		*
  2305  00186C  50F5               	movf	tablat,w,c
  2306  00186E  0A69               	xorlw	105
  2307  001870  A4D8               	btfss	status,2,c
  2308  001872  D03F               	goto	l2357
  2309  001874                     u1820:
  2310                           
  2311                           ; BSR set to: 0
  2312                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  2313  001874  C0C5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2314  001878  C0C6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2315  00187C  2ADE               	incf	postinc2,f,c
  2316  00187E  0E00               	movlw	0
  2317  001880  22DD               	addwfc	postdec2,f,c
  2318                           
  2319                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2320  001882  C0C7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2321  001886  C0C8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2322  00188A  CFDF F0C9          	movff	indf2,??_vfpfcnvrt
  2323  00188E  0E02               	movlw	2
  2324  001890  26DE               	addwf	postinc2,f,c
  2325  001892  CFDF F0CA          	movff	indf2,??_vfpfcnvrt+1
  2326  001896  0E00               	movlw	0
  2327  001898  22DD               	addwfc	postdec2,f,c
  2328  00189A  C0C9  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2329  00189E  C0CA  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2330  0018A2  CFDE F0CB          	movff	postinc2,vfpfcnvrt@ll
  2331  0018A6  CFDD F0CC          	movff	postdec2,vfpfcnvrt@ll+1
  2332  0018AA  0E00               	movlw	0
  2333  0018AC  BFCC               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2334  0018AE  0EFF               	movlw	-1
  2335  0018B0  6FCD               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2336  0018B2  6FCE               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2337  0018B4  6FCF               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2338  0018B6  6FD0               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2339  0018B8  6FD1               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2340  0018BA  6FD2               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2341                           
  2342                           ; BSR set to: 0
  2343                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  2344  0018BC  C0C3  F09F         	movff	vfpfcnvrt@fp,dtoa@fp
  2345  0018C0  C0C4  F0A0         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2346  0018C4  C0CB  F0A1         	movff	vfpfcnvrt@ll,dtoa@d
  2347  0018C8  C0CC  F0A2         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2348  0018CC  C0CD  F0A3         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2349  0018D0  C0CE  F0A4         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2350  0018D4  C0CF  F0A5         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2351  0018D8  C0D0  F0A6         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2352  0018DC  C0D1  F0A7         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2353  0018E0  C0D2  F0A8         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2354  0018E4  ECB9  F009         	call	_dtoa	;wreg free
  2355  0018E8  C09F  F0C3         	movff	?_dtoa,?_vfpfcnvrt
  2356  0018EC  C0A0  F0C4         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2357  0018F0  0012               	return	
  2358  0018F2                     l2357:
  2359                           
  2360                           ; BSR set to: 0
  2361                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  2362  0018F2  C0C5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2363  0018F6  C0C6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2364  0018FA  CFDE FFF6          	movff	postinc2,tblptrl
  2365  0018FE  CFDD FFF7          	movff	postdec2,tblptrh
  2366  001902                     	if	0	;tblptru may be non-zero
  2367  001902                     	endif
  2368  001902                     	if	0	;tblptru may be non-zero
  2369  001902                     	endif
  2370  001902  0008               	tblrd		*
  2371  001904  50F5               	movf	tablat,w,c
  2372  001906  0A25               	xorlw	37
  2373  001908  A4D8               	btfss	status,2,c
  2374  00190A  D017               	goto	l2367
  2375                           
  2376                           ; BSR set to: 0
  2377                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  2378  00190C  C0C5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2379  001910  C0C6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2380  001914  2ADE               	incf	postinc2,f,c
  2381  001916  0E00               	movlw	0
  2382  001918  22DD               	addwfc	postdec2,f,c
  2383                           
  2384                           ; BSR set to: 0
  2385                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  2386  00191A  0E00               	movlw	0
  2387  00191C  6F85               	movwf	(fputc@c+1)& (0+255),b
  2388  00191E  0E25               	movlw	37
  2389  001920  6F84               	movwf	fputc@c& (0+255),b
  2390  001922  C0C3  F086         	movff	vfpfcnvrt@fp,fputc@fp
  2391  001926  C0C4  F087         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2392  00192A  ECD6  F011         	call	_fputc	;wreg free
  2393  00192E                     l2363:
  2394                           
  2395                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  2396  00192E  0E00               	movlw	0
  2397  001930  0100               	movlb	0	; () banked
  2398  001932  6FC4               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2399  001934  0E01               	movlw	1
  2400  001936  6FC3               	movwf	?_vfpfcnvrt& (0+255),b
  2401  001938  0012               	return	
  2402  00193A                     l2367:
  2403                           
  2404                           ; BSR set to: 0
  2405                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  2406  00193A  C0C5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2407  00193E  C0C6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2408  001942  2ADE               	incf	postinc2,f,c
  2409  001944  0E00               	movlw	0
  2410  001946  22DD               	addwfc	postdec2,f,c
  2411                           
  2412                           ; BSR set to: 0
  2413                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  2414  001948  0E00               	movlw	0
  2415  00194A  6FC4               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2416  00194C  0E00               	movlw	0
  2417  00194E  6FC3               	movwf	?_vfpfcnvrt& (0+255),b
  2418  001950  0012               	return	
  2419  001952                     l2373:
  2420                           
  2421                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  2422  001952  C0C5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2423  001956  C0C6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2424  00195A  CFDE FFF6          	movff	postinc2,tblptrl
  2425  00195E  CFDD FFF7          	movff	postdec2,tblptrh
  2426  001962                     	if	0	;tblptru may be non-zero
  2427  001962                     	endif
  2428  001962                     	if	0	;tblptru may be non-zero
  2429  001962                     	endif
  2430  001962  0008               	tblrd		*
  2431  001964  50F5               	movf	tablat,w,c
  2432  001966  0100               	movlb	0	; () banked
  2433  001968  6F84               	movwf	fputc@c& (0+255),b
  2434  00196A  6B85               	clrf	(fputc@c+1)& (0+255),b
  2435  00196C  C0C3  F086         	movff	vfpfcnvrt@fp,fputc@fp
  2436  001970  C0C4  F087         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2437  001974  ECD6  F011         	call	_fputc	;wreg free
  2438                           
  2439                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  2440  001978  C0C5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2441  00197C  C0C6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2442  001980  2ADE               	incf	postinc2,f,c
  2443  001982  0E00               	movlw	0
  2444  001984  22DD               	addwfc	postdec2,f,c
  2445  001986  D7D3               	goto	l2363
  2446  001988                     __end_of_vfpfcnvrt:
  2447                           	opt callstack 0
  2448                           
  2449 ;; *************** function _dtoa *****************
  2450 ;; Defined at:
  2451 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2452 ;; Parameters:    Size  Location     Type
  2453 ;;  fp              2   31[BANK0 ] PTR struct _IO_FILE
  2454 ;;		 -> NULL(0), 
  2455 ;;  d               8   33[BANK0 ] long long 
  2456 ;; Auto vars:     Size  Location     Type
  2457 ;;  n               8   57[BANK0 ] long long 
  2458 ;;  i               2   65[BANK0 ] int 
  2459 ;;  s               2   55[BANK0 ] int 
  2460 ;;  w               2   53[BANK0 ] int 
  2461 ;;  p               2   51[BANK0 ] int 
  2462 ;; Return value:  Size  Location     Type
  2463 ;;                  2   31[BANK0 ] int 
  2464 ;; Registers used:
  2465 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2466 ;; Tracked objects:
  2467 ;;		On entry : 0/0
  2468 ;;		On exit  : 0/0
  2469 ;;		Unchanged: 0/0
  2470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2471 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2472 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2473 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2474 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2475 ;;Total ram usage:       36 bytes
  2476 ;; Hardware stack levels used:    1
  2477 ;; Hardware stack levels required when called:   19
  2478 ;; This function calls:
  2479 ;;		___aodiv
  2480 ;;		___aomod
  2481 ;;		_abs
  2482 ;;		_pad
  2483 ;; This function is called by:
  2484 ;;		_vfpfcnvrt
  2485 ;; This function uses a non-reentrant model
  2486 ;;
  2487                           
  2488                           	psect	text8
  2489  001372                     __ptext8:
  2490                           	opt callstack 0
  2491  001372                     _dtoa:
  2492                           	opt callstack 8
  2493                           
  2494                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  2495                           
  2496                           ;incstack = 0
  2497  001372  C0A1  F0B9         	movff	dtoa@d,dtoa@n
  2498  001376  C0A2  F0BA         	movff	dtoa@d+1,dtoa@n+1
  2499  00137A  C0A3  F0BB         	movff	dtoa@d+2,dtoa@n+2
  2500  00137E  C0A4  F0BC         	movff	dtoa@d+3,dtoa@n+3
  2501  001382  C0A5  F0BD         	movff	dtoa@d+4,dtoa@n+4
  2502  001386  C0A6  F0BE         	movff	dtoa@d+5,dtoa@n+5
  2503  00138A  C0A7  F0BF         	movff	dtoa@d+6,dtoa@n+6
  2504  00138E  C0A8  F0C0         	movff	dtoa@d+7,dtoa@n+7
  2505                           
  2506                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  2507  001392  0100               	movlb	0	; () banked
  2508  001394  AFC0               	btfss	(dtoa@n+7)& (0+255),7,b
  2509  001396  D002               	goto	u1470
  2510  001398  0E01               	movlw	1
  2511  00139A  D001               	goto	u1480
  2512  00139C                     u1470:
  2513  00139C  0E00               	movlw	0
  2514  00139E                     u1480:
  2515  00139E  6FB7               	movwf	dtoa@s& (0+255),b
  2516  0013A0  6BB8               	clrf	(dtoa@s+1)& (0+255),b
  2517                           
  2518                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  2519  0013A2  51B7               	movf	dtoa@s& (0+255),w,b
  2520  0013A4  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
  2521  0013A6  B4D8               	btfsc	status,2,c
  2522  0013A8  D010               	goto	l2177
  2523                           
  2524                           ; BSR set to: 0
  2525                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  2526  0013AA  1FC0               	comf	(dtoa@n+7)& (0+255),f,b
  2527  0013AC  1FBF               	comf	(dtoa@n+6)& (0+255),f,b
  2528  0013AE  1FBE               	comf	(dtoa@n+5)& (0+255),f,b
  2529  0013B0  1FBD               	comf	(dtoa@n+4)& (0+255),f,b
  2530  0013B2  1FBC               	comf	(dtoa@n+3)& (0+255),f,b
  2531  0013B4  1FBB               	comf	(dtoa@n+2)& (0+255),f,b
  2532  0013B6  1FBA               	comf	(dtoa@n+1)& (0+255),f,b
  2533  0013B8  6DB9               	negf	dtoa@n& (0+255),b
  2534  0013BA  0E00               	movlw	0
  2535  0013BC  23BA               	addwfc	(dtoa@n+1)& (0+255),f,b
  2536  0013BE  23BB               	addwfc	(dtoa@n+2)& (0+255),f,b
  2537  0013C0  23BC               	addwfc	(dtoa@n+3)& (0+255),f,b
  2538  0013C2  23BD               	addwfc	(dtoa@n+4)& (0+255),f,b
  2539  0013C4  23BE               	addwfc	(dtoa@n+5)& (0+255),f,b
  2540  0013C6  23BF               	addwfc	(dtoa@n+6)& (0+255),f,b
  2541  0013C8  23C0               	addwfc	(dtoa@n+7)& (0+255),f,b
  2542  0013CA                     l2177:
  2543                           
  2544                           ; BSR set to: 0
  2545                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  2546  0013CA  AFF0               	btfss	(_prec+1)& (0+255),7,b
  2547                           
  2548                           ; BSR set to: 0
  2549                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  2550  0013CC  93F1               	bcf	_flags& (0+255),1,b
  2551                           
  2552                           ; BSR set to: 0
  2553                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  2554  0013CE  BFF0               	btfsc	(_prec+1)& (0+255),7,b
  2555  0013D0  D005               	goto	u1510
  2556  0013D2  51F0               	movf	(_prec+1)& (0+255),w,b
  2557  0013D4  E108               	bnz	l239
  2558  0013D6  05EF               	decf	_prec& (0+255),w,b
  2559  0013D8  B0D8               	btfsc	status,0,c
  2560  0013DA  D005               	goto	l239
  2561  0013DC                     u1510:
  2562                           
  2563                           ; BSR set to: 0
  2564  0013DC  0E00               	movlw	0
  2565  0013DE  6FB4               	movwf	(dtoa@p+1)& (0+255),b
  2566  0013E0  0E01               	movlw	1
  2567  0013E2  6FB3               	movwf	dtoa@p& (0+255),b
  2568  0013E4  D004               	goto	l241
  2569  0013E6                     l239:
  2570                           
  2571                           ; BSR set to: 0
  2572  0013E6  C0EF  F0B3         	movff	_prec,dtoa@p
  2573  0013EA  C0F0  F0B4         	movff	_prec+1,dtoa@p+1
  2574  0013EE                     l241:
  2575                           
  2576                           ; BSR set to: 0
  2577                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  2578  0013EE  C0ED  F0B5         	movff	_width,dtoa@w
  2579  0013F2  C0EE  F0B6         	movff	_width+1,dtoa@w+1
  2580                           
  2581                           ; BSR set to: 0
  2582                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  2583  0013F6  51B7               	movf	dtoa@s& (0+255),w,b
  2584  0013F8  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
  2585  0013FA  A4D8               	btfss	status,2,c
  2586  0013FC  D002               	goto	u1530
  2587                           
  2588                           ; BSR set to: 0
  2589  0013FE  A5F1               	btfss	_flags& (0+255),2,b
  2590  001400  D003               	goto	l2191
  2591  001402                     u1530:
  2592                           
  2593                           ; BSR set to: 0
  2594                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  2595  001402  07B5               	decf	dtoa@w& (0+255),f,b
  2596  001404  A0D8               	btfss	status,0,c
  2597  001406  07B6               	decf	(dtoa@w+1)& (0+255),f,b
  2598  001408                     l2191:
  2599                           
  2600                           ; BSR set to: 0
  2601                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  2602  001408  0E00               	movlw	0
  2603  00140A  6FC2               	movwf	(dtoa@i+1)& (0+255),b
  2604  00140C  0E1F               	movlw	31
  2605  00140E  6FC1               	movwf	dtoa@i& (0+255),b
  2606                           
  2607                           ; BSR set to: 0
  2608                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  2609  001410  0E00               	movlw	0
  2610  001412  0101               	movlb	1	; () banked
  2611  001414  6F1F               	movwf	(_dbuf+31)& (0+255),b
  2612                           
  2613                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2614  001416  D07D               	goto	l2205
  2615  001418                     l2195:
  2616                           
  2617                           ; BSR set to: 0
  2618                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  2619  001418  07C1               	decf	dtoa@i& (0+255),f,b
  2620  00141A  A0D8               	btfss	status,0,c
  2621  00141C  07C2               	decf	(dtoa@i+1)& (0+255),f,b
  2622                           
  2623                           ; BSR set to: 0
  2624                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  2625  00141E  0E00               	movlw	low _dbuf
  2626  001420  25C1               	addwf	dtoa@i& (0+255),w,b
  2627  001422  6ED9               	movwf	fsr2l,c
  2628  001424  0E01               	movlw	high _dbuf
  2629  001426  21C2               	addwfc	(dtoa@i+1)& (0+255),w,b
  2630  001428  6EDA               	movwf	fsr2h,c
  2631  00142A  C0B9  F080         	movff	dtoa@n,___aomod@dividend
  2632  00142E  C0BA  F081         	movff	dtoa@n+1,___aomod@dividend+1
  2633  001432  C0BB  F082         	movff	dtoa@n+2,___aomod@dividend+2
  2634  001436  C0BC  F083         	movff	dtoa@n+3,___aomod@dividend+3
  2635  00143A  C0BD  F084         	movff	dtoa@n+4,___aomod@dividend+4
  2636  00143E  C0BE  F085         	movff	dtoa@n+5,___aomod@dividend+5
  2637  001442  C0BF  F086         	movff	dtoa@n+6,___aomod@dividend+6
  2638  001446  C0C0  F087         	movff	dtoa@n+7,___aomod@dividend+7
  2639  00144A  0E0A               	movlw	10
  2640  00144C  6F88               	movwf	___aomod@divisor& (0+255),b
  2641  00144E  0E00               	movlw	0
  2642  001450  6F89               	movwf	(___aomod@divisor+1)& (0+255),b
  2643  001452  0E00               	movlw	0
  2644  001454  6F8A               	movwf	(___aomod@divisor+2)& (0+255),b
  2645  001456  0E00               	movlw	0
  2646  001458  6F8B               	movwf	(___aomod@divisor+3)& (0+255),b
  2647  00145A  0E00               	movlw	0
  2648  00145C  6F8C               	movwf	(___aomod@divisor+4)& (0+255),b
  2649  00145E  0E00               	movlw	0
  2650  001460  6F8D               	movwf	(___aomod@divisor+5)& (0+255),b
  2651  001462  0E00               	movlw	0
  2652  001464  6F8E               	movwf	(___aomod@divisor+6)& (0+255),b
  2653  001466  0E00               	movlw	0
  2654  001468  6F8F               	movwf	(___aomod@divisor+7)& (0+255),b
  2655  00146A  ECCE  F00E         	call	___aomod	;wreg free
  2656  00146E  C080  F0A9         	movff	?___aomod,??_dtoa
  2657  001472  C081  F0AA         	movff	?___aomod+1,??_dtoa+1
  2658  001476  C082  F0AB         	movff	?___aomod+2,??_dtoa+2
  2659  00147A  C083  F0AC         	movff	?___aomod+3,??_dtoa+3
  2660  00147E  C084  F0AD         	movff	?___aomod+4,??_dtoa+4
  2661  001482  C085  F0AE         	movff	?___aomod+5,??_dtoa+5
  2662  001486  C086  F0AF         	movff	?___aomod+6,??_dtoa+6
  2663  00148A  C087  F0B0         	movff	?___aomod+7,??_dtoa+7
  2664  00148E  C0A9  F092         	movff	??_dtoa,abs@a
  2665  001492  C0AB  F093         	movff	??_dtoa+2,abs@a+1
  2666  001496  ECEE  F012         	call	_abs	;wreg free
  2667  00149A  0100               	movlb	0	; () banked
  2668  00149C  5192               	movf	?_abs& (0+255),w,b
  2669  00149E  0F30               	addlw	48
  2670  0014A0  6EDF               	movwf	indf2,c
  2671                           
  2672                           ; BSR set to: 0
  2673                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  2674  0014A2  07B3               	decf	dtoa@p& (0+255),f,b
  2675  0014A4  A0D8               	btfss	status,0,c
  2676  0014A6  07B4               	decf	(dtoa@p+1)& (0+255),f,b
  2677                           
  2678                           ; BSR set to: 0
  2679                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  2680  0014A8  07B5               	decf	dtoa@w& (0+255),f,b
  2681  0014AA  A0D8               	btfss	status,0,c
  2682  0014AC  07B6               	decf	(dtoa@w+1)& (0+255),f,b
  2683                           
  2684                           ; BSR set to: 0
  2685                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  2686  0014AE  C0B9  F080         	movff	dtoa@n,___aodiv@dividend
  2687  0014B2  C0BA  F081         	movff	dtoa@n+1,___aodiv@dividend+1
  2688  0014B6  C0BB  F082         	movff	dtoa@n+2,___aodiv@dividend+2
  2689  0014BA  C0BC  F083         	movff	dtoa@n+3,___aodiv@dividend+3
  2690  0014BE  C0BD  F084         	movff	dtoa@n+4,___aodiv@dividend+4
  2691  0014C2  C0BE  F085         	movff	dtoa@n+5,___aodiv@dividend+5
  2692  0014C6  C0BF  F086         	movff	dtoa@n+6,___aodiv@dividend+6
  2693  0014CA  C0C0  F087         	movff	dtoa@n+7,___aodiv@dividend+7
  2694  0014CE  0E0A               	movlw	10
  2695  0014D0  6F88               	movwf	___aodiv@divisor& (0+255),b
  2696  0014D2  0E00               	movlw	0
  2697  0014D4  6F89               	movwf	(___aodiv@divisor+1)& (0+255),b
  2698  0014D6  0E00               	movlw	0
  2699  0014D8  6F8A               	movwf	(___aodiv@divisor+2)& (0+255),b
  2700  0014DA  0E00               	movlw	0
  2701  0014DC  6F8B               	movwf	(___aodiv@divisor+3)& (0+255),b
  2702  0014DE  0E00               	movlw	0
  2703  0014E0  6F8C               	movwf	(___aodiv@divisor+4)& (0+255),b
  2704  0014E2  0E00               	movlw	0
  2705  0014E4  6F8D               	movwf	(___aodiv@divisor+5)& (0+255),b
  2706  0014E6  0E00               	movlw	0
  2707  0014E8  6F8E               	movwf	(___aodiv@divisor+6)& (0+255),b
  2708  0014EA  0E00               	movlw	0
  2709  0014EC  6F8F               	movwf	(___aodiv@divisor+7)& (0+255),b
  2710  0014EE  EC85  F00D         	call	___aodiv	;wreg free
  2711  0014F2  C080  F0B9         	movff	?___aodiv,dtoa@n
  2712  0014F6  C081  F0BA         	movff	?___aodiv+1,dtoa@n+1
  2713  0014FA  C082  F0BB         	movff	?___aodiv+2,dtoa@n+2
  2714  0014FE  C083  F0BC         	movff	?___aodiv+3,dtoa@n+3
  2715  001502  C084  F0BD         	movff	?___aodiv+4,dtoa@n+4
  2716  001506  C085  F0BE         	movff	?___aodiv+5,dtoa@n+5
  2717  00150A  C086  F0BF         	movff	?___aodiv+6,dtoa@n+6
  2718  00150E  C087  F0C0         	movff	?___aodiv+7,dtoa@n+7
  2719  001512                     l2205:
  2720                           
  2721                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2722  001512  0100               	movlb	0	; () banked
  2723  001514  BFC2               	btfsc	(dtoa@i+1)& (0+255),7,b
  2724  001516  D01F               	goto	u1580
  2725  001518  51C2               	movf	(dtoa@i+1)& (0+255),w,b
  2726  00151A  E103               	bnz	u1540
  2727  00151C  05C1               	decf	dtoa@i& (0+255),w,b
  2728  00151E  A0D8               	btfss	status,0,c
  2729  001520  D01A               	goto	u1580
  2730  001522                     u1540:
  2731                           
  2732                           ; BSR set to: 0
  2733  001522  51B9               	movf	dtoa@n& (0+255),w,b
  2734  001524  11BA               	iorwf	(dtoa@n+1)& (0+255),w,b
  2735  001526  11BB               	iorwf	(dtoa@n+2)& (0+255),w,b
  2736  001528  11BC               	iorwf	(dtoa@n+3)& (0+255),w,b
  2737  00152A  11BD               	iorwf	(dtoa@n+4)& (0+255),w,b
  2738  00152C  11BE               	iorwf	(dtoa@n+5)& (0+255),w,b
  2739  00152E  11BF               	iorwf	(dtoa@n+6)& (0+255),w,b
  2740  001530  11C0               	iorwf	(dtoa@n+7)& (0+255),w,b
  2741  001532  A4D8               	btfss	status,2,c
  2742  001534  D771               	goto	l2195
  2743                           
  2744                           ; BSR set to: 0
  2745  001536  BFB4               	btfsc	(dtoa@p+1)& (0+255),7,b
  2746  001538  D005               	goto	u1560
  2747  00153A  51B4               	movf	(dtoa@p+1)& (0+255),w,b
  2748  00153C  E102               	bnz	u1561
  2749  00153E  05B3               	decf	dtoa@p& (0+255),w,b
  2750  001540  B0D8               	btfsc	status,0,c
  2751  001542                     u1561:
  2752  001542  D76A               	goto	l2195
  2753  001544                     u1560:
  2754                           
  2755                           ; BSR set to: 0
  2756  001544  BFB6               	btfsc	(dtoa@w+1)& (0+255),7,b
  2757  001546  D007               	goto	u1580
  2758  001548  51B6               	movf	(dtoa@w+1)& (0+255),w,b
  2759  00154A  E103               	bnz	u1570
  2760  00154C  05B5               	decf	dtoa@w& (0+255),w,b
  2761  00154E  A0D8               	btfss	status,0,c
  2762  001550  D002               	goto	u1580
  2763  001552                     u1570:
  2764                           
  2765                           ; BSR set to: 0
  2766  001552  B3F1               	btfsc	_flags& (0+255),1,b
  2767  001554  D761               	goto	l2195
  2768  001556                     u1580:
  2769                           
  2770                           ; BSR set to: 0
  2771                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  2772  001556  51B7               	movf	dtoa@s& (0+255),w,b
  2773  001558  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
  2774  00155A  A4D8               	btfss	status,2,c
  2775  00155C  D002               	goto	u1600
  2776                           
  2777                           ; BSR set to: 0
  2778  00155E  A5F1               	btfss	_flags& (0+255),2,b
  2779  001560  D017               	goto	l2229
  2780  001562                     u1600:
  2781                           
  2782                           ; BSR set to: 0
  2783                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  2784  001562  07C1               	decf	dtoa@i& (0+255),f,b
  2785  001564  A0D8               	btfss	status,0,c
  2786  001566  07C2               	decf	(dtoa@i+1)& (0+255),f,b
  2787                           
  2788                           ; BSR set to: 0
  2789                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  2790  001568  51B7               	movf	dtoa@s& (0+255),w,b
  2791  00156A  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
  2792  00156C  A4D8               	btfss	status,2,c
  2793  00156E  D004               	goto	l2225
  2794                           
  2795                           ; BSR set to: 0
  2796  001570  0E00               	movlw	0
  2797  001572  6FB2               	movwf	(_dtoa$629+1)& (0+255),b
  2798  001574  0E2B               	movlw	43
  2799  001576  D003               	goto	L1
  2800  001578                     l2225:
  2801                           
  2802                           ; BSR set to: 0
  2803  001578  0E00               	movlw	0
  2804  00157A  6FB2               	movwf	(_dtoa$629+1)& (0+255),b
  2805  00157C  0E2D               	movlw	45
  2806  00157E                     L1:
  2807  00157E  6FB1               	movwf	_dtoa$629& (0+255),b
  2808                           
  2809                           ; BSR set to: 0
  2810  001580  0E00               	movlw	low _dbuf
  2811  001582  25C1               	addwf	dtoa@i& (0+255),w,b
  2812  001584  6ED9               	movwf	fsr2l,c
  2813  001586  0E01               	movlw	high _dbuf
  2814  001588  21C2               	addwfc	(dtoa@i+1)& (0+255),w,b
  2815  00158A  6EDA               	movwf	fsr2h,c
  2816  00158C  C0B1  FFDF         	movff	_dtoa$629,indf2
  2817  001590                     l2229:
  2818                           
  2819                           ; BSR set to: 0
  2820                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  2821  001590  C09F  F094         	movff	dtoa@fp,pad@fp
  2822  001594  C0A0  F095         	movff	dtoa@fp+1,pad@fp+1
  2823  001598  0E00               	movlw	low _dbuf
  2824  00159A  25C1               	addwf	dtoa@i& (0+255),w,b
  2825  00159C  6F96               	movwf	pad@buf& (0+255),b
  2826  00159E  0E01               	movlw	high _dbuf
  2827  0015A0  21C2               	addwfc	(dtoa@i+1)& (0+255),w,b
  2828  0015A2  6F97               	movwf	(pad@buf+1)& (0+255),b
  2829  0015A4  C0B5  F098         	movff	dtoa@w,pad@p
  2830  0015A8  C0B6  F099         	movff	dtoa@w+1,pad@p+1
  2831  0015AC  ECC0  F010         	call	_pad	;wreg free
  2832  0015B0  C094  F09F         	movff	?_pad,?_dtoa
  2833  0015B4  C095  F0A0         	movff	?_pad+1,?_dtoa+1
  2834  0015B8  0012               	return		;funcret
  2835  0015BA                     __end_of_dtoa:
  2836                           	opt callstack 0
  2837                           
  2838 ;; *************** function _pad *****************
  2839 ;; Defined at:
  2840 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2841 ;; Parameters:    Size  Location     Type
  2842 ;;  fp              2   20[BANK0 ] PTR struct _IO_FILE
  2843 ;;		 -> NULL(0), 
  2844 ;;  buf             2   22[BANK0 ] PTR unsigned char 
  2845 ;;		 -> dbuf(32), 
  2846 ;;  p               2   24[BANK0 ] int 
  2847 ;; Auto vars:     Size  Location     Type
  2848 ;;  w               2   29[BANK0 ] int 
  2849 ;;  i               2   27[BANK0 ] int 
  2850 ;; Return value:  Size  Location     Type
  2851 ;;                  2   20[BANK0 ] int 
  2852 ;; Registers used:
  2853 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2854 ;; Tracked objects:
  2855 ;;		On entry : 0/0
  2856 ;;		On exit  : 0/0
  2857 ;;		Unchanged: 0/0
  2858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2859 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2860 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2861 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2862 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2863 ;;Total ram usage:       11 bytes
  2864 ;; Hardware stack levels used:    1
  2865 ;; Hardware stack levels required when called:   18
  2866 ;; This function calls:
  2867 ;;		_fputc
  2868 ;;		_fputs
  2869 ;;		_strlen
  2870 ;; This function is called by:
  2871 ;;		_dtoa
  2872 ;; This function uses a non-reentrant model
  2873 ;;
  2874                           
  2875                           	psect	text9
  2876  002180                     __ptext9:
  2877                           	opt callstack 0
  2878  002180                     _pad:
  2879                           	opt callstack 8
  2880                           
  2881                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  2882                           
  2883                           ;incstack = 0
  2884  002180  0100               	movlb	0	; () banked
  2885  002182  A1F1               	btfss	_flags& (0+255),0,b
  2886  002184  D00A               	goto	l2051
  2887                           
  2888                           ; BSR set to: 0
  2889                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  2890  002186  C096  F08D         	movff	pad@buf,fputs@s
  2891  00218A  C097  F08E         	movff	pad@buf+1,fputs@s+1
  2892  00218E  C094  F08F         	movff	pad@fp,fputs@fp
  2893  002192  C095  F090         	movff	pad@fp+1,fputs@fp+1
  2894  002196  EC99  F012         	call	_fputs	;wreg free
  2895  00219A                     l2051:
  2896                           
  2897                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  2898  00219A  0100               	movlb	0	; () banked
  2899  00219C  BF99               	btfsc	(pad@p+1)& (0+255),7,b
  2900  00219E  D005               	goto	l2055
  2901                           
  2902                           ; BSR set to: 0
  2903  0021A0  C098  F09D         	movff	pad@p,pad@w
  2904  0021A4  C099  F09E         	movff	pad@p+1,pad@w+1
  2905  0021A8  D004               	goto	l228
  2906  0021AA                     l2055:
  2907                           
  2908                           ; BSR set to: 0
  2909  0021AA  0E00               	movlw	0
  2910  0021AC  6F9E               	movwf	(pad@w+1)& (0+255),b
  2911  0021AE  0E00               	movlw	0
  2912  0021B0  6F9D               	movwf	pad@w& (0+255),b
  2913  0021B2                     l228:
  2914                           
  2915                           ; BSR set to: 0
  2916                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  2917  0021B2  0E00               	movlw	0
  2918  0021B4  6F9C               	movwf	(pad@i+1)& (0+255),b
  2919  0021B6  0E00               	movlw	0
  2920  0021B8  6F9B               	movwf	pad@i& (0+255),b
  2921                           
  2922                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2923  0021BA  D00D               	goto	l2061
  2924  0021BC                     l2057:
  2925                           
  2926                           ; BSR set to: 0
  2927                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  2928  0021BC  0E00               	movlw	0
  2929  0021BE  6F85               	movwf	(fputc@c+1)& (0+255),b
  2930  0021C0  0E20               	movlw	32
  2931  0021C2  6F84               	movwf	fputc@c& (0+255),b
  2932  0021C4  C094  F086         	movff	pad@fp,fputc@fp
  2933  0021C8  C095  F087         	movff	pad@fp+1,fputc@fp+1
  2934  0021CC  ECD6  F011         	call	_fputc	;wreg free
  2935                           
  2936                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  2937  0021D0  0100               	movlb	0	; () banked
  2938  0021D2  4B9B               	infsnz	pad@i& (0+255),f,b
  2939  0021D4  2B9C               	incf	(pad@i+1)& (0+255),f,b
  2940  0021D6                     l2061:
  2941                           
  2942                           ; BSR set to: 0
  2943                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2944  0021D6  519D               	movf	pad@w& (0+255),w,b
  2945  0021D8  5D9B               	subwf	pad@i& (0+255),w,b
  2946  0021DA  519C               	movf	(pad@i+1)& (0+255),w,b
  2947  0021DC  0A80               	xorlw	128
  2948  0021DE  6F9A               	movwf	??_pad& (0+255),b
  2949  0021E0  519E               	movf	(pad@w+1)& (0+255),w,b
  2950  0021E2  0A80               	xorlw	128
  2951  0021E4  599A               	subwfb	??_pad& (0+255),w,b
  2952  0021E6  A0D8               	btfss	status,0,c
  2953  0021E8  D7E9               	goto	l2057
  2954                           
  2955                           ; BSR set to: 0
  2956                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  2957  0021EA  B1F1               	btfsc	_flags& (0+255),0,b
  2958  0021EC  D00A               	goto	l2065
  2959                           
  2960                           ; BSR set to: 0
  2961                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  2962  0021EE  C096  F08D         	movff	pad@buf,fputs@s
  2963  0021F2  C097  F08E         	movff	pad@buf+1,fputs@s+1
  2964  0021F6  C094  F08F         	movff	pad@fp,fputs@fp
  2965  0021FA  C095  F090         	movff	pad@fp+1,fputs@fp+1
  2966  0021FE  EC99  F012         	call	_fputs	;wreg free
  2967  002202                     l2065:
  2968                           
  2969                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  2970  002202  C096  F080         	movff	pad@buf,strlen@s
  2971  002206  C097  F081         	movff	pad@buf+1,strlen@s+1
  2972  00220A  EC21  F013         	call	_strlen	;wreg free
  2973  00220E  0100               	movlb	0	; () banked
  2974  002210  519D               	movf	pad@w& (0+255),w,b
  2975  002212  2580               	addwf	?_strlen& (0+255),w,b
  2976  002214  6F94               	movwf	?_pad& (0+255),b
  2977  002216  519E               	movf	(pad@w+1)& (0+255),w,b
  2978  002218  2181               	addwfc	(?_strlen+1)& (0+255),w,b
  2979  00221A  6F95               	movwf	(?_pad+1)& (0+255),b
  2980                           
  2981                           ; BSR set to: 0
  2982  00221C  0012               	return		;funcret
  2983  00221E                     __end_of_pad:
  2984                           	opt callstack 0
  2985                           
  2986 ;; *************** function _strlen *****************
  2987 ;; Defined at:
  2988 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  2989 ;; Parameters:    Size  Location     Type
  2990 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  2991 ;;		 -> dbuf(32), 
  2992 ;; Auto vars:     Size  Location     Type
  2993 ;;  a               2    2[BANK0 ] PTR const unsigned char 
  2994 ;;		 -> dbuf(32), 
  2995 ;; Return value:  Size  Location     Type
  2996 ;;                  2    0[BANK0 ] unsigned int 
  2997 ;; Registers used:
  2998 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2999 ;; Tracked objects:
  3000 ;;		On entry : 0/0
  3001 ;;		On exit  : 0/0
  3002 ;;		Unchanged: 0/0
  3003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3004 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3005 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3007 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3008 ;;Total ram usage:        4 bytes
  3009 ;; Hardware stack levels used:    1
  3010 ;; Hardware stack levels required when called:   12
  3011 ;; This function calls:
  3012 ;;		Nothing
  3013 ;; This function is called by:
  3014 ;;		_pad
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017                           
  3018                           	psect	text10
  3019  002642                     __ptext10:
  3020                           	opt callstack 0
  3021  002642                     _strlen:
  3022                           	opt callstack 13
  3023                           
  3024                           ; BSR set to: 0
  3025                           ;incstack = 0
  3026  002642  C080  F082         	movff	strlen@s,strlen@a
  3027  002646  C081  F083         	movff	strlen@s+1,strlen@a+1
  3028  00264A  D003               	goto	l2027
  3029  00264C                     l2025:
  3030  00264C  0100               	movlb	0	; () banked
  3031  00264E  4B80               	infsnz	strlen@s& (0+255),f,b
  3032  002650  2B81               	incf	(strlen@s+1)& (0+255),f,b
  3033  002652                     l2027:
  3034  002652  C080  FFD9         	movff	strlen@s,fsr2l
  3035  002656  C081  FFDA         	movff	strlen@s+1,fsr2h
  3036  00265A  50DF               	movf	indf2,w,c
  3037  00265C  A4D8               	btfss	status,2,c
  3038  00265E  D7F6               	goto	l2025
  3039  002660  0100               	movlb	0	; () banked
  3040  002662  5182               	movf	strlen@a& (0+255),w,b
  3041  002664  5D80               	subwf	strlen@s& (0+255),w,b
  3042  002666  6F80               	movwf	?_strlen& (0+255),b
  3043  002668  5183               	movf	(strlen@a+1)& (0+255),w,b
  3044  00266A  5981               	subwfb	(strlen@s+1)& (0+255),w,b
  3045  00266C  6F81               	movwf	(?_strlen+1)& (0+255),b
  3046                           
  3047                           ; BSR set to: 0
  3048  00266E  0012               	return		;funcret
  3049  002670                     __end_of_strlen:
  3050                           	opt callstack 0
  3051                           
  3052 ;; *************** function _fputs *****************
  3053 ;; Defined at:
  3054 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  3055 ;; Parameters:    Size  Location     Type
  3056 ;;  s               2   13[BANK0 ] PTR const unsigned char 
  3057 ;;		 -> dbuf(32), 
  3058 ;;  fp              2   15[BANK0 ] PTR struct _IO_FILE
  3059 ;;		 -> NULL(0), 
  3060 ;; Auto vars:     Size  Location     Type
  3061 ;;  i               2   18[BANK0 ] int 
  3062 ;;  c               1   17[BANK0 ] unsigned char 
  3063 ;; Return value:  Size  Location     Type
  3064 ;;                  2   13[BANK0 ] int 
  3065 ;; Registers used:
  3066 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3067 ;; Tracked objects:
  3068 ;;		On entry : 0/0
  3069 ;;		On exit  : 0/0
  3070 ;;		Unchanged: 0/0
  3071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3072 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3073 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3075 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3076 ;;Total ram usage:        7 bytes
  3077 ;; Hardware stack levels used:    1
  3078 ;; Hardware stack levels required when called:   17
  3079 ;; This function calls:
  3080 ;;		_fputc
  3081 ;; This function is called by:
  3082 ;;		_pad
  3083 ;; This function uses a non-reentrant model
  3084 ;;
  3085                           
  3086                           	psect	text11
  3087  002532                     __ptext11:
  3088                           	opt callstack 0
  3089  002532                     _fputs:
  3090                           	opt callstack 8
  3091                           
  3092                           ; BSR set to: 0
  3093                           ;incstack = 0
  3094  002532  0E00               	movlw	0
  3095  002534  0100               	movlb	0	; () banked
  3096  002536  6F93               	movwf	(fputs@i+1)& (0+255),b
  3097  002538  0E00               	movlw	0
  3098  00253A  6F92               	movwf	fputs@i& (0+255),b
  3099  00253C  D00C               	goto	l2021
  3100  00253E                     l2017:
  3101                           
  3102                           ; BSR set to: 0
  3103  00253E  C091  F084         	movff	fputs@c,fputc@c
  3104  002542  6B85               	clrf	(fputc@c+1)& (0+255),b
  3105  002544  C08F  F086         	movff	fputs@fp,fputc@fp
  3106  002548  C090  F087         	movff	fputs@fp+1,fputc@fp+1
  3107  00254C  ECD6  F011         	call	_fputc	;wreg free
  3108  002550  0100               	movlb	0	; () banked
  3109  002552  4B92               	infsnz	fputs@i& (0+255),f,b
  3110  002554  2B93               	incf	(fputs@i+1)& (0+255),f,b
  3111  002556                     l2021:
  3112                           
  3113                           ; BSR set to: 0
  3114  002556  5192               	movf	fputs@i& (0+255),w,b
  3115  002558  258D               	addwf	fputs@s& (0+255),w,b
  3116  00255A  6ED9               	movwf	fsr2l,c
  3117  00255C  5193               	movf	(fputs@i+1)& (0+255),w,b
  3118  00255E  218E               	addwfc	(fputs@s+1)& (0+255),w,b
  3119  002560  6EDA               	movwf	fsr2h,c
  3120  002562  50DF               	movf	indf2,w,c
  3121  002564  6F91               	movwf	fputs@c& (0+255),b
  3122  002566  5191               	movf	fputs@c& (0+255),w,b
  3123  002568  B4D8               	btfsc	status,2,c
  3124  00256A  0012               	return	
  3125  00256C  D7E8               	goto	l2017
  3126  00256E                     __end_of_fputs:
  3127                           	opt callstack 0
  3128                           
  3129 ;; *************** function _fputc *****************
  3130 ;; Defined at:
  3131 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  3132 ;; Parameters:    Size  Location     Type
  3133 ;;  c               2    4[BANK0 ] int 
  3134 ;;  fp              2    6[BANK0 ] PTR struct _IO_FILE
  3135 ;;		 -> NULL(0), 
  3136 ;; Auto vars:     Size  Location     Type
  3137 ;;		None
  3138 ;; Return value:  Size  Location     Type
  3139 ;;                  2    4[BANK0 ] int 
  3140 ;; Registers used:
  3141 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3142 ;; Tracked objects:
  3143 ;;		On entry : 0/0
  3144 ;;		On exit  : 0/0
  3145 ;;		Unchanged: 0/0
  3146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3147 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3149 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3150 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3151 ;;Total ram usage:        9 bytes
  3152 ;; Hardware stack levels used:    1
  3153 ;; Hardware stack levels required when called:   16
  3154 ;; This function calls:
  3155 ;;		_putch
  3156 ;; This function is called by:
  3157 ;;		_pad
  3158 ;;		_vfpfcnvrt
  3159 ;;		_fputs
  3160 ;; This function uses a non-reentrant model
  3161 ;;
  3162                           
  3163                           	psect	text12
  3164  0023AC                     __ptext12:
  3165                           	opt callstack 0
  3166  0023AC                     _fputc:
  3167                           	opt callstack 11
  3168                           
  3169                           ; BSR set to: 0
  3170                           ;incstack = 0
  3171  0023AC  0100               	movlb	0	; () banked
  3172  0023AE  5186               	movf	fputc@fp& (0+255),w,b
  3173  0023B0  1187               	iorwf	(fputc@fp+1)& (0+255),w,b
  3174  0023B2  B4D8               	btfsc	status,2,c
  3175  0023B4  D004               	goto	u1180
  3176                           
  3177                           ; BSR set to: 0
  3178  0023B6  5186               	movf	fputc@fp& (0+255),w,b
  3179  0023B8  1187               	iorwf	(fputc@fp+1)& (0+255),w,b
  3180  0023BA  A4D8               	btfss	status,2,c
  3181  0023BC  D004               	goto	l2003
  3182  0023BE                     u1180:
  3183                           
  3184                           ; BSR set to: 0
  3185  0023BE  5184               	movf	fputc@c& (0+255),w,b
  3186  0023C0  ECEA  F013         	call	_putch
  3187  0023C4  0012               	return	
  3188  0023C6                     l2003:
  3189                           
  3190                           ; BSR set to: 0
  3191  0023C6  EE20 F004          	lfsr	2,4
  3192  0023CA  5186               	movf	fputc@fp& (0+255),w,b
  3193  0023CC  26D9               	addwf	fsr2l,f,c
  3194  0023CE  5187               	movf	(fputc@fp+1)& (0+255),w,b
  3195  0023D0  22DA               	addwfc	fsr2h,f,c
  3196  0023D2  50DE               	movf	postinc2,w,c
  3197  0023D4  10DE               	iorwf	postinc2,w,c
  3198  0023D6  B4D8               	btfsc	status,2,c
  3199  0023D8  D016               	goto	u1200
  3200                           
  3201                           ; BSR set to: 0
  3202  0023DA  EE20 F004          	lfsr	2,4
  3203  0023DE  5186               	movf	fputc@fp& (0+255),w,b
  3204  0023E0  26D9               	addwf	fsr2l,f,c
  3205  0023E2  5187               	movf	(fputc@fp+1)& (0+255),w,b
  3206  0023E4  22DA               	addwfc	fsr2h,f,c
  3207  0023E6  EE10 F002          	lfsr	1,2
  3208  0023EA  5186               	movf	fputc@fp& (0+255),w,b
  3209  0023EC  26E1               	addwf	fsr1l,f,c
  3210  0023EE  5187               	movf	(fputc@fp+1)& (0+255),w,b
  3211  0023F0  22E2               	addwfc	fsr1h,f,c
  3212  0023F2  50DE               	movf	postinc2,w,c
  3213  0023F4  5CE6               	subwf	postinc1,w,c
  3214  0023F6  50E6               	movf	postinc1,w,c
  3215  0023F8  0A80               	xorlw	128
  3216  0023FA  6F8C               	movwf	(??_fputc+4)& (0+255),b
  3217  0023FC  50DE               	movf	postinc2,w,c
  3218  0023FE  0A80               	xorlw	128
  3219  002400  598C               	subwfb	(??_fputc+4)& (0+255),w,b
  3220  002402  B0D8               	btfsc	status,0,c
  3221  002404  0012               	return	
  3222  002406                     u1200:
  3223                           
  3224                           ; BSR set to: 0
  3225  002406  EE20 F002          	lfsr	2,2
  3226  00240A  5186               	movf	fputc@fp& (0+255),w,b
  3227  00240C  26D9               	addwf	fsr2l,f,c
  3228  00240E  5187               	movf	(fputc@fp+1)& (0+255),w,b
  3229  002410  22DA               	addwfc	fsr2h,f,c
  3230  002412  2ADE               	incf	postinc2,f,c
  3231  002414  0E00               	movlw	0
  3232  002416  22DD               	addwfc	postdec2,f,c
  3233  002418  0012               	return		;funcret
  3234  00241A                     __end_of_fputc:
  3235                           	opt callstack 0
  3236                           
  3237 ;; *************** function _putch *****************
  3238 ;; Defined at:
  3239 ;;		line 102 in file "lcd.c"
  3240 ;; Parameters:    Size  Location     Type
  3241 ;;  data            1    wreg     unsigned char 
  3242 ;; Auto vars:     Size  Location     Type
  3243 ;;  data            1    3[BANK0 ] unsigned char 
  3244 ;; Return value:  Size  Location     Type
  3245 ;;                  1    wreg      void 
  3246 ;; Registers used:
  3247 ;;		wreg, status,2, status,0, cstack
  3248 ;; Tracked objects:
  3249 ;;		On entry : 0/0
  3250 ;;		On exit  : 0/0
  3251 ;;		Unchanged: 0/0
  3252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3254 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3256 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3257 ;;Total ram usage:        1 bytes
  3258 ;; Hardware stack levels used:    1
  3259 ;; Hardware stack levels required when called:   15
  3260 ;; This function calls:
  3261 ;;		_send_byte
  3262 ;; This function is called by:
  3263 ;;		_fputc
  3264 ;; This function uses a non-reentrant model
  3265 ;;
  3266                           
  3267                           	psect	text13
  3268  0027D4                     __ptext13:
  3269                           	opt callstack 0
  3270  0027D4                     _putch:
  3271                           	opt callstack 11
  3272                           
  3273                           ;incstack = 0
  3274                           ;putch@data stored from wreg
  3275  0027D4  0100               	movlb	0	; () banked
  3276  0027D6  6F83               	movwf	putch@data& (0+255),b
  3277                           
  3278                           ;lcd.c: 103:     LATDbits.LATD2 = 1;
  3279  0027D8  848C               	bsf	3980,2,c	;volatile
  3280                           
  3281                           ;lcd.c: 104:     send_byte((unsigned char)data);
  3282  0027DA  0100               	movlb	0	; () banked
  3283  0027DC  5183               	movf	putch@data& (0+255),w,b
  3284  0027DE  ECC2  F013         	call	_send_byte
  3285  0027E2  0012               	return		;funcret
  3286  0027E4                     __end_of_putch:
  3287                           	opt callstack 0
  3288                           
  3289 ;; *************** function _send_byte *****************
  3290 ;; Defined at:
  3291 ;;		line 55 in file "lcd.c"
  3292 ;; Parameters:    Size  Location     Type
  3293 ;;  data            1    wreg     unsigned char 
  3294 ;; Auto vars:     Size  Location     Type
  3295 ;;  data            1    2[BANK0 ] unsigned char 
  3296 ;; Return value:  Size  Location     Type
  3297 ;;                  1    wreg      void 
  3298 ;; Registers used:
  3299 ;;		wreg, status,2, status,0, cstack
  3300 ;; Tracked objects:
  3301 ;;		On entry : 0/0
  3302 ;;		On exit  : 0/0
  3303 ;;		Unchanged: 0/0
  3304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3306 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3308 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3309 ;;Total ram usage:        1 bytes
  3310 ;; Hardware stack levels used:    1
  3311 ;; Hardware stack levels required when called:   14
  3312 ;; This function calls:
  3313 ;;		_send_nibble
  3314 ;; This function is called by:
  3315 ;;		_lcdInst
  3316 ;;		_initLCD
  3317 ;;		_putch
  3318 ;; This function uses a non-reentrant model
  3319 ;;
  3320                           
  3321                           	psect	text14
  3322  002784                     __ptext14:
  3323                           	opt callstack 0
  3324  002784                     _send_byte:
  3325                           	opt callstack 11
  3326                           
  3327                           ;incstack = 0
  3328                           ;send_byte@data stored from wreg
  3329  002784  0100               	movlb	0	; () banked
  3330  002786  6F82               	movwf	send_byte@data& (0+255),b
  3331                           
  3332                           ;lcd.c: 57:     send_nibble(data >> 4);
  3333  002788  0100               	movlb	0	; () banked
  3334  00278A  3982               	swapf	send_byte@data& (0+255),w,b
  3335  00278C  0B0F               	andlw	15
  3336  00278E  ECB5  F013         	call	_send_nibble
  3337                           
  3338                           ;lcd.c: 60:     send_nibble(data);
  3339  002792  0100               	movlb	0	; () banked
  3340  002794  5182               	movf	send_byte@data& (0+255),w,b
  3341  002796  ECB5  F013         	call	_send_nibble
  3342  00279A  0012               	return		;funcret
  3343  00279C                     __end_of_send_byte:
  3344                           	opt callstack 0
  3345                           
  3346 ;; *************** function _send_nibble *****************
  3347 ;; Defined at:
  3348 ;;		line 44 in file "lcd.c"
  3349 ;; Parameters:    Size  Location     Type
  3350 ;;  data            1    wreg     unsigned char 
  3351 ;; Auto vars:     Size  Location     Type
  3352 ;;  data            1    1[BANK0 ] unsigned char 
  3353 ;; Return value:  Size  Location     Type
  3354 ;;                  1    wreg      void 
  3355 ;; Registers used:
  3356 ;;		wreg, status,2, status,0, cstack
  3357 ;; Tracked objects:
  3358 ;;		On entry : 0/0
  3359 ;;		On exit  : 0/0
  3360 ;;		Unchanged: 0/0
  3361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3363 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3365 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3366 ;;Total ram usage:        1 bytes
  3367 ;; Hardware stack levels used:    1
  3368 ;; Hardware stack levels required when called:   13
  3369 ;; This function calls:
  3370 ;;		_pulse_e
  3371 ;; This function is called by:
  3372 ;;		_send_byte
  3373 ;;		_initLCD
  3374 ;; This function uses a non-reentrant model
  3375 ;;
  3376                           
  3377                           	psect	text15
  3378  00276A                     __ptext15:
  3379                           	opt callstack 0
  3380  00276A                     _send_nibble:
  3381                           	opt callstack 11
  3382                           
  3383                           ;incstack = 0
  3384                           ;send_nibble@data stored from wreg
  3385  00276A  0100               	movlb	0	; () banked
  3386  00276C  6F81               	movwf	send_nibble@data& (0+255),b
  3387                           
  3388                           ;lcd.c: 46:     LATD = (unsigned char)(LATD & 0x0F);
  3389  00276E  508C               	movf	3980,w,c	;volatile
  3390  002770  0B0F               	andlw	15
  3391  002772  6E8C               	movwf	3980,c	;volatile
  3392                           
  3393                           ;lcd.c: 47:     LATD = (unsigned char)((data << 4) | LATD);
  3394  002774  0100               	movlb	0	; () banked
  3395  002776  3981               	swapf	send_nibble@data& (0+255),w,b
  3396  002778  0BF0               	andlw	240
  3397  00277A  108C               	iorwf	3980,w,c	;volatile
  3398  00277C  6E8C               	movwf	3980,c	;volatile
  3399                           
  3400                           ; BSR set to: 0
  3401                           ;lcd.c: 48:     pulse_e();
  3402  00277E  EC38  F013         	call	_pulse_e	;wreg free
  3403  002782  0012               	return		;funcret
  3404  002784                     __end_of_send_nibble:
  3405                           	opt callstack 0
  3406                           
  3407 ;; *************** function _pulse_e *****************
  3408 ;; Defined at:
  3409 ;;		line 28 in file "lcd.c"
  3410 ;; Parameters:    Size  Location     Type
  3411 ;;		None
  3412 ;; Auto vars:     Size  Location     Type
  3413 ;;  interruptSta    1    0[BANK0 ] unsigned char 
  3414 ;; Return value:  Size  Location     Type
  3415 ;;                  1    wreg      void 
  3416 ;; Registers used:
  3417 ;;		wreg
  3418 ;; Tracked objects:
  3419 ;;		On entry : 0/0
  3420 ;;		On exit  : 0/0
  3421 ;;		Unchanged: 0/0
  3422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3424 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3426 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3427 ;;Total ram usage:        1 bytes
  3428 ;; Hardware stack levels used:    1
  3429 ;; Hardware stack levels required when called:   12
  3430 ;; This function calls:
  3431 ;;		Nothing
  3432 ;; This function is called by:
  3433 ;;		_send_nibble
  3434 ;; This function uses a non-reentrant model
  3435 ;;
  3436                           
  3437                           	psect	text16
  3438  002670                     __ptext16:
  3439                           	opt callstack 0
  3440  002670                     _pulse_e:
  3441                           	opt callstack 11
  3442                           
  3443                           ;lcd.c: 29:     unsigned char interruptState = INTCONbits.GIE;
  3444                           
  3445                           ;incstack = 0
  3446  002670  0E00               	movlw	0
  3447  002672  BEF2               	btfsc	4082,7,c	;volatile
  3448  002674  0E01               	movlw	1
  3449  002676  0100               	movlb	0	; () banked
  3450  002678  6F80               	movwf	pulse_e@interruptState& (0+255),b
  3451                           
  3452                           ; BSR set to: 0
  3453                           ;lcd.c: 30:     (INTCONbits.GIE = 0);
  3454  00267A  9EF2               	bcf	4082,7,c	;volatile
  3455                           
  3456                           ; BSR set to: 0
  3457                           ;lcd.c: 31:     LATDbits.LATD3 = 1;
  3458  00267C  868C               	bsf	3980,3,c	;volatile
  3459                           
  3460                           ;lcd.c: 34:     _delay((unsigned long)((25)*(10000000/4000000.0)));
  3461  00267E  0E14               	movlw	20
  3462  002680                     u2627:
  3463  002680  2EE8               	decfsz	wreg,f,c
  3464  002682  D7FE               	bra	u2627
  3465  002684  D000               	nop2	
  3466                           
  3467                           ;lcd.c: 35:     LATDbits.LATD3 = 0;
  3468  002686  968C               	bcf	3980,3,c	;volatile
  3469                           
  3470                           ;lcd.c: 36:     _delay((unsigned long)((100)*(10000000/4000000.0)));
  3471  002688  0E53               	movlw	83
  3472  00268A                     u2637:
  3473  00268A  2EE8               	decfsz	wreg,f,c
  3474  00268C  D7FE               	bra	u2637
  3475  00268E  F000               	nop	
  3476                           
  3477                           ;lcd.c: 37:     INTCONbits.GIE = interruptState;
  3478  002690  0100               	movlb	0	; () banked
  3479  002692  B180               	btfsc	pulse_e@interruptState& (0+255),0,b
  3480  002694  D002               	bra	u1155
  3481  002696  9EF2               	bcf	4082,7,c	;volatile
  3482  002698  D001               	bra	u1156
  3483  00269A                     u1155:
  3484  00269A  8EF2               	bsf	4082,7,c	;volatile
  3485  00269C                     u1156:
  3486  00269C  0012               	return		;funcret
  3487  00269E                     __end_of_pulse_e:
  3488                           	opt callstack 0
  3489                           
  3490 ;; *************** function _abs *****************
  3491 ;; Defined at:
  3492 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  3493 ;; Parameters:    Size  Location     Type
  3494 ;;  a               2   18[BANK0 ] int 
  3495 ;; Auto vars:     Size  Location     Type
  3496 ;;		None
  3497 ;; Return value:  Size  Location     Type
  3498 ;;                  2   18[BANK0 ] int 
  3499 ;; Registers used:
  3500 ;;		wreg, status,2, status,0
  3501 ;; Tracked objects:
  3502 ;;		On entry : 0/0
  3503 ;;		On exit  : 0/0
  3504 ;;		Unchanged: 0/0
  3505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3506 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3508 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3509 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3510 ;;Total ram usage:        4 bytes
  3511 ;; Hardware stack levels used:    1
  3512 ;; Hardware stack levels required when called:   12
  3513 ;; This function calls:
  3514 ;;		Nothing
  3515 ;; This function is called by:
  3516 ;;		_dtoa
  3517 ;; This function uses a non-reentrant model
  3518 ;;
  3519                           
  3520                           	psect	text17
  3521  0025DC                     __ptext17:
  3522                           	opt callstack 0
  3523  0025DC                     _abs:
  3524                           	opt callstack 14
  3525                           
  3526                           ;incstack = 0
  3527  0025DC  0100               	movlb	0	; () banked
  3528  0025DE  BF93               	btfsc	(abs@a+1)& (0+255),7,b
  3529  0025E0  D005               	goto	u1310
  3530  0025E2  5193               	movf	(abs@a+1)& (0+255),w,b
  3531  0025E4  E110               	bnz	l951
  3532  0025E6  0592               	decf	abs@a& (0+255),w,b
  3533  0025E8  B0D8               	btfsc	status,0,c
  3534  0025EA  D00D               	goto	l951
  3535  0025EC                     u1310:
  3536                           
  3537                           ; BSR set to: 0
  3538  0025EC  C092  F094         	movff	abs@a,??_abs
  3539  0025F0  C093  F095         	movff	abs@a+1,??_abs+1
  3540  0025F4  1F94               	comf	??_abs& (0+255),f,b
  3541  0025F6  1F95               	comf	(??_abs+1)& (0+255),f,b
  3542  0025F8  4B94               	infsnz	??_abs& (0+255),f,b
  3543  0025FA  2B95               	incf	(??_abs+1)& (0+255),f,b
  3544  0025FC  C094  F092         	movff	??_abs,?_abs
  3545  002600  C095  F093         	movff	??_abs+1,?_abs+1
  3546  002604  0012               	return	
  3547  002606                     l951:
  3548                           
  3549                           ; BSR set to: 0
  3550  002606  C092  F092         	movff	abs@a,?_abs
  3551  00260A  C093  F093         	movff	abs@a+1,?_abs+1
  3552                           
  3553                           ; BSR set to: 0
  3554  00260E  0012               	return		;funcret
  3555  002610                     __end_of_abs:
  3556                           	opt callstack 0
  3557                           
  3558 ;; *************** function ___aomod *****************
  3559 ;; Defined at:
  3560 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  3561 ;; Parameters:    Size  Location     Type
  3562 ;;  dividend        8    0[BANK0 ] long long 
  3563 ;;  divisor         8    8[BANK0 ] long long 
  3564 ;; Auto vars:     Size  Location     Type
  3565 ;;  sign            1   17[BANK0 ] unsigned char 
  3566 ;;  counter         1   16[BANK0 ] unsigned char 
  3567 ;; Return value:  Size  Location     Type
  3568 ;;                  8    0[BANK0 ] long long 
  3569 ;; Registers used:
  3570 ;;		wreg, status,2, status,0
  3571 ;; Tracked objects:
  3572 ;;		On entry : 0/0
  3573 ;;		On exit  : 0/0
  3574 ;;		Unchanged: 0/0
  3575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3576 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3577 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3579 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3580 ;;Total ram usage:       18 bytes
  3581 ;; Hardware stack levels used:    1
  3582 ;; Hardware stack levels required when called:   12
  3583 ;; This function calls:
  3584 ;;		Nothing
  3585 ;; This function is called by:
  3586 ;;		_dtoa
  3587 ;; This function uses a non-reentrant model
  3588 ;;
  3589                           
  3590                           	psect	text18
  3591  001D9C                     __ptext18:
  3592                           	opt callstack 0
  3593  001D9C                     ___aomod:
  3594                           	opt callstack 14
  3595                           
  3596                           ; BSR set to: 0
  3597                           ;incstack = 0
  3598  001D9C  0E00               	movlw	0
  3599  001D9E  0100               	movlb	0	; () banked
  3600  001DA0  6F91               	movwf	___aomod@sign& (0+255),b
  3601                           
  3602                           ; BSR set to: 0
  3603  001DA2  AF87               	btfss	(___aomod@dividend+7)& (0+255),7,b
  3604  001DA4  D012               	goto	l2125
  3605                           
  3606                           ; BSR set to: 0
  3607  001DA6  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
  3608  001DA8  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
  3609  001DAA  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
  3610  001DAC  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
  3611  001DAE  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
  3612  001DB0  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
  3613  001DB2  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
  3614  001DB4  6D80               	negf	___aomod@dividend& (0+255),b
  3615  001DB6  0E00               	movlw	0
  3616  001DB8  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  3617  001DBA  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  3618  001DBC  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  3619  001DBE  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  3620  001DC0  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  3621  001DC2  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  3622  001DC4  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  3623                           
  3624                           ; BSR set to: 0
  3625  001DC6  0E01               	movlw	1
  3626  001DC8  6F91               	movwf	___aomod@sign& (0+255),b
  3627  001DCA                     l2125:
  3628                           
  3629                           ; BSR set to: 0
  3630  001DCA  AF8F               	btfss	(___aomod@divisor+7)& (0+255),7,b
  3631  001DCC  D010               	goto	l2129
  3632                           
  3633                           ; BSR set to: 0
  3634  001DCE  1F8F               	comf	(___aomod@divisor+7)& (0+255),f,b
  3635  001DD0  1F8E               	comf	(___aomod@divisor+6)& (0+255),f,b
  3636  001DD2  1F8D               	comf	(___aomod@divisor+5)& (0+255),f,b
  3637  001DD4  1F8C               	comf	(___aomod@divisor+4)& (0+255),f,b
  3638  001DD6  1F8B               	comf	(___aomod@divisor+3)& (0+255),f,b
  3639  001DD8  1F8A               	comf	(___aomod@divisor+2)& (0+255),f,b
  3640  001DDA  1F89               	comf	(___aomod@divisor+1)& (0+255),f,b
  3641  001DDC  6D88               	negf	___aomod@divisor& (0+255),b
  3642  001DDE  0E00               	movlw	0
  3643  001DE0  2389               	addwfc	(___aomod@divisor+1)& (0+255),f,b
  3644  001DE2  238A               	addwfc	(___aomod@divisor+2)& (0+255),f,b
  3645  001DE4  238B               	addwfc	(___aomod@divisor+3)& (0+255),f,b
  3646  001DE6  238C               	addwfc	(___aomod@divisor+4)& (0+255),f,b
  3647  001DE8  238D               	addwfc	(___aomod@divisor+5)& (0+255),f,b
  3648  001DEA  238E               	addwfc	(___aomod@divisor+6)& (0+255),f,b
  3649  001DEC  238F               	addwfc	(___aomod@divisor+7)& (0+255),f,b
  3650  001DEE                     l2129:
  3651                           
  3652                           ; BSR set to: 0
  3653  001DEE  5188               	movf	___aomod@divisor& (0+255),w,b
  3654  001DF0  1189               	iorwf	(___aomod@divisor+1)& (0+255),w,b
  3655  001DF2  118A               	iorwf	(___aomod@divisor+2)& (0+255),w,b
  3656  001DF4  118B               	iorwf	(___aomod@divisor+3)& (0+255),w,b
  3657  001DF6  118C               	iorwf	(___aomod@divisor+4)& (0+255),w,b
  3658  001DF8  118D               	iorwf	(___aomod@divisor+5)& (0+255),w,b
  3659  001DFA  118E               	iorwf	(___aomod@divisor+6)& (0+255),w,b
  3660  001DFC  118F               	iorwf	(___aomod@divisor+7)& (0+255),w,b
  3661  001DFE  B4D8               	btfsc	status,2,c
  3662  001E00  D03C               	goto	l2145
  3663                           
  3664                           ; BSR set to: 0
  3665  001E02  0E01               	movlw	1
  3666  001E04  6F90               	movwf	___aomod@counter& (0+255),b
  3667  001E06  D00A               	goto	l2135
  3668  001E08                     l2133:
  3669                           
  3670                           ; BSR set to: 0
  3671  001E08  90D8               	bcf	status,0,c
  3672  001E0A  3788               	rlcf	___aomod@divisor& (0+255),f,b
  3673  001E0C  3789               	rlcf	(___aomod@divisor+1)& (0+255),f,b
  3674  001E0E  378A               	rlcf	(___aomod@divisor+2)& (0+255),f,b
  3675  001E10  378B               	rlcf	(___aomod@divisor+3)& (0+255),f,b
  3676  001E12  378C               	rlcf	(___aomod@divisor+4)& (0+255),f,b
  3677  001E14  378D               	rlcf	(___aomod@divisor+5)& (0+255),f,b
  3678  001E16  378E               	rlcf	(___aomod@divisor+6)& (0+255),f,b
  3679  001E18  378F               	rlcf	(___aomod@divisor+7)& (0+255),f,b
  3680  001E1A  2B90               	incf	___aomod@counter& (0+255),f,b
  3681  001E1C                     l2135:
  3682                           
  3683                           ; BSR set to: 0
  3684  001E1C  AF8F               	btfss	(___aomod@divisor+7)& (0+255),7,b
  3685  001E1E  D7F4               	goto	l2133
  3686  001E20                     u1420:
  3687                           
  3688                           ; BSR set to: 0
  3689  001E20  5188               	movf	___aomod@divisor& (0+255),w,b
  3690  001E22  5D80               	subwf	___aomod@dividend& (0+255),w,b
  3691  001E24  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
  3692  001E26  5981               	subwfb	(___aomod@dividend+1)& (0+255),w,b
  3693  001E28  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
  3694  001E2A  5982               	subwfb	(___aomod@dividend+2)& (0+255),w,b
  3695  001E2C  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
  3696  001E2E  5983               	subwfb	(___aomod@dividend+3)& (0+255),w,b
  3697  001E30  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
  3698  001E32  5984               	subwfb	(___aomod@dividend+4)& (0+255),w,b
  3699  001E34  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
  3700  001E36  5985               	subwfb	(___aomod@dividend+5)& (0+255),w,b
  3701  001E38  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
  3702  001E3A  5986               	subwfb	(___aomod@dividend+6)& (0+255),w,b
  3703  001E3C  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
  3704  001E3E  5987               	subwfb	(___aomod@dividend+7)& (0+255),w,b
  3705  001E40  A0D8               	btfss	status,0,c
  3706  001E42  D010               	goto	l2141
  3707                           
  3708                           ; BSR set to: 0
  3709  001E44  5188               	movf	___aomod@divisor& (0+255),w,b
  3710  001E46  5F80               	subwf	___aomod@dividend& (0+255),f,b
  3711  001E48  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
  3712  001E4A  5B81               	subwfb	(___aomod@dividend+1)& (0+255),f,b
  3713  001E4C  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
  3714  001E4E  5B82               	subwfb	(___aomod@dividend+2)& (0+255),f,b
  3715  001E50  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
  3716  001E52  5B83               	subwfb	(___aomod@dividend+3)& (0+255),f,b
  3717  001E54  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
  3718  001E56  5B84               	subwfb	(___aomod@dividend+4)& (0+255),f,b
  3719  001E58  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
  3720  001E5A  5B85               	subwfb	(___aomod@dividend+5)& (0+255),f,b
  3721  001E5C  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
  3722  001E5E  5B86               	subwfb	(___aomod@dividend+6)& (0+255),f,b
  3723  001E60  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
  3724  001E62  5B87               	subwfb	(___aomod@dividend+7)& (0+255),f,b
  3725  001E64                     l2141:
  3726                           
  3727                           ; BSR set to: 0
  3728  001E64  90D8               	bcf	status,0,c
  3729  001E66  338F               	rrcf	(___aomod@divisor+7)& (0+255),f,b
  3730  001E68  338E               	rrcf	(___aomod@divisor+6)& (0+255),f,b
  3731  001E6A  338D               	rrcf	(___aomod@divisor+5)& (0+255),f,b
  3732  001E6C  338C               	rrcf	(___aomod@divisor+4)& (0+255),f,b
  3733  001E6E  338B               	rrcf	(___aomod@divisor+3)& (0+255),f,b
  3734  001E70  338A               	rrcf	(___aomod@divisor+2)& (0+255),f,b
  3735  001E72  3389               	rrcf	(___aomod@divisor+1)& (0+255),f,b
  3736  001E74  3388               	rrcf	___aomod@divisor& (0+255),f,b
  3737                           
  3738                           ; BSR set to: 0
  3739  001E76  2F90               	decfsz	___aomod@counter& (0+255),f,b
  3740  001E78  D7D3               	goto	u1420
  3741  001E7A                     l2145:
  3742                           
  3743                           ; BSR set to: 0
  3744  001E7A  5191               	movf	___aomod@sign& (0+255),w,b
  3745  001E7C  B4D8               	btfsc	status,2,c
  3746  001E7E  D010               	goto	l2149
  3747                           
  3748                           ; BSR set to: 0
  3749  001E80  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
  3750  001E82  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
  3751  001E84  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
  3752  001E86  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
  3753  001E88  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
  3754  001E8A  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
  3755  001E8C  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
  3756  001E8E  6D80               	negf	___aomod@dividend& (0+255),b
  3757  001E90  0E00               	movlw	0
  3758  001E92  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  3759  001E94  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  3760  001E96  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  3761  001E98  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  3762  001E9A  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  3763  001E9C  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  3764  001E9E  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  3765  001EA0                     l2149:
  3766                           
  3767                           ; BSR set to: 0
  3768  001EA0  C080  F080         	movff	___aomod@dividend,?___aomod
  3769  001EA4  C081  F081         	movff	___aomod@dividend+1,?___aomod+1
  3770  001EA8  C082  F082         	movff	___aomod@dividend+2,?___aomod+2
  3771  001EAC  C083  F083         	movff	___aomod@dividend+3,?___aomod+3
  3772  001EB0  C084  F084         	movff	___aomod@dividend+4,?___aomod+4
  3773  001EB4  C085  F085         	movff	___aomod@dividend+5,?___aomod+5
  3774  001EB8  C086  F086         	movff	___aomod@dividend+6,?___aomod+6
  3775  001EBC  C087  F087         	movff	___aomod@dividend+7,?___aomod+7
  3776                           
  3777                           ; BSR set to: 0
  3778  001EC0  0012               	return		;funcret
  3779  001EC2                     __end_of___aomod:
  3780                           	opt callstack 0
  3781                           
  3782 ;; *************** function ___aodiv *****************
  3783 ;; Defined at:
  3784 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  3785 ;; Parameters:    Size  Location     Type
  3786 ;;  dividend        8    0[BANK0 ] long long 
  3787 ;;  divisor         8    8[BANK0 ] long long 
  3788 ;; Auto vars:     Size  Location     Type
  3789 ;;  quotient        8   18[BANK0 ] long long 
  3790 ;;  sign            1   17[BANK0 ] unsigned char 
  3791 ;;  counter         1   16[BANK0 ] unsigned char 
  3792 ;; Return value:  Size  Location     Type
  3793 ;;                  8    0[BANK0 ] long long 
  3794 ;; Registers used:
  3795 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3796 ;; Tracked objects:
  3797 ;;		On entry : 0/0
  3798 ;;		On exit  : 0/0
  3799 ;;		Unchanged: 0/0
  3800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3801 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3802 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3804 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3805 ;;Total ram usage:       26 bytes
  3806 ;; Hardware stack levels used:    1
  3807 ;; Hardware stack levels required when called:   12
  3808 ;; This function calls:
  3809 ;;		Nothing
  3810 ;; This function is called by:
  3811 ;;		_dtoa
  3812 ;; This function uses a non-reentrant model
  3813 ;;
  3814                           
  3815                           	psect	text19
  3816  001B0A                     __ptext19:
  3817                           	opt callstack 0
  3818  001B0A                     ___aodiv:
  3819                           	opt callstack 14
  3820                           
  3821                           ; BSR set to: 0
  3822                           ;incstack = 0
  3823  001B0A  0E00               	movlw	0
  3824  001B0C  0100               	movlb	0	; () banked
  3825  001B0E  6F91               	movwf	___aodiv@sign& (0+255),b
  3826                           
  3827                           ; BSR set to: 0
  3828  001B10  AF8F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  3829  001B12  D012               	goto	l2081
  3830                           
  3831                           ; BSR set to: 0
  3832  001B14  1F8F               	comf	(___aodiv@divisor+7)& (0+255),f,b
  3833  001B16  1F8E               	comf	(___aodiv@divisor+6)& (0+255),f,b
  3834  001B18  1F8D               	comf	(___aodiv@divisor+5)& (0+255),f,b
  3835  001B1A  1F8C               	comf	(___aodiv@divisor+4)& (0+255),f,b
  3836  001B1C  1F8B               	comf	(___aodiv@divisor+3)& (0+255),f,b
  3837  001B1E  1F8A               	comf	(___aodiv@divisor+2)& (0+255),f,b
  3838  001B20  1F89               	comf	(___aodiv@divisor+1)& (0+255),f,b
  3839  001B22  6D88               	negf	___aodiv@divisor& (0+255),b
  3840  001B24  0E00               	movlw	0
  3841  001B26  2389               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
  3842  001B28  238A               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
  3843  001B2A  238B               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
  3844  001B2C  238C               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
  3845  001B2E  238D               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
  3846  001B30  238E               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
  3847  001B32  238F               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
  3848                           
  3849                           ; BSR set to: 0
  3850  001B34  0E01               	movlw	1
  3851  001B36  6F91               	movwf	___aodiv@sign& (0+255),b
  3852  001B38                     l2081:
  3853                           
  3854                           ; BSR set to: 0
  3855  001B38  AF87               	btfss	(___aodiv@dividend+7)& (0+255),7,b
  3856  001B3A  D012               	goto	l2087
  3857                           
  3858                           ; BSR set to: 0
  3859  001B3C  1F87               	comf	(___aodiv@dividend+7)& (0+255),f,b
  3860  001B3E  1F86               	comf	(___aodiv@dividend+6)& (0+255),f,b
  3861  001B40  1F85               	comf	(___aodiv@dividend+5)& (0+255),f,b
  3862  001B42  1F84               	comf	(___aodiv@dividend+4)& (0+255),f,b
  3863  001B44  1F83               	comf	(___aodiv@dividend+3)& (0+255),f,b
  3864  001B46  1F82               	comf	(___aodiv@dividend+2)& (0+255),f,b
  3865  001B48  1F81               	comf	(___aodiv@dividend+1)& (0+255),f,b
  3866  001B4A  6D80               	negf	___aodiv@dividend& (0+255),b
  3867  001B4C  0E00               	movlw	0
  3868  001B4E  2381               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
  3869  001B50  2382               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
  3870  001B52  2383               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
  3871  001B54  2384               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
  3872  001B56  2385               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
  3873  001B58  2386               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
  3874  001B5A  2387               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
  3875                           
  3876                           ; BSR set to: 0
  3877  001B5C  0E01               	movlw	1
  3878  001B5E  1B91               	xorwf	___aodiv@sign& (0+255),f,b
  3879  001B60                     l2087:
  3880                           
  3881                           ; BSR set to: 0
  3882  001B60  EE20  F092         	lfsr	2,___aodiv@quotient
  3883  001B64  0E07               	movlw	7
  3884  001B66                     u1341:
  3885  001B66  6ADE               	clrf	postinc2,c
  3886  001B68  06E8               	decf	wreg,f,c
  3887  001B6A  E2FD               	bc	u1341
  3888                           
  3889                           ; BSR set to: 0
  3890  001B6C  5188               	movf	___aodiv@divisor& (0+255),w,b
  3891  001B6E  1189               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
  3892  001B70  118A               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
  3893  001B72  118B               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
  3894  001B74  118C               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
  3895  001B76  118D               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
  3896  001B78  118E               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
  3897  001B7A  118F               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
  3898  001B7C  B4D8               	btfsc	status,2,c
  3899  001B7E  D046               	goto	l2109
  3900                           
  3901                           ; BSR set to: 0
  3902  001B80  0E01               	movlw	1
  3903  001B82  6F90               	movwf	___aodiv@counter& (0+255),b
  3904  001B84  D00A               	goto	l2095
  3905  001B86                     l2093:
  3906                           
  3907                           ; BSR set to: 0
  3908  001B86  90D8               	bcf	status,0,c
  3909  001B88  3788               	rlcf	___aodiv@divisor& (0+255),f,b
  3910  001B8A  3789               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
  3911  001B8C  378A               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
  3912  001B8E  378B               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
  3913  001B90  378C               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
  3914  001B92  378D               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
  3915  001B94  378E               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
  3916  001B96  378F               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
  3917  001B98  2B90               	incf	___aodiv@counter& (0+255),f,b
  3918  001B9A                     l2095:
  3919                           
  3920                           ; BSR set to: 0
  3921  001B9A  AF8F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  3922  001B9C  D7F4               	goto	l2093
  3923  001B9E                     u1360:
  3924                           
  3925                           ; BSR set to: 0
  3926  001B9E  90D8               	bcf	status,0,c
  3927  001BA0  3792               	rlcf	___aodiv@quotient& (0+255),f,b
  3928  001BA2  3793               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
  3929  001BA4  3794               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
  3930  001BA6  3795               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
  3931  001BA8  3796               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
  3932  001BAA  3797               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
  3933  001BAC  3798               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
  3934  001BAE  3799               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
  3935                           
  3936                           ; BSR set to: 0
  3937  001BB0  5188               	movf	___aodiv@divisor& (0+255),w,b
  3938  001BB2  5D80               	subwf	___aodiv@dividend& (0+255),w,b
  3939  001BB4  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
  3940  001BB6  5981               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
  3941  001BB8  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  3942  001BBA  5982               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
  3943  001BBC  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  3944  001BBE  5983               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
  3945  001BC0  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  3946  001BC2  5984               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
  3947  001BC4  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  3948  001BC6  5985               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
  3949  001BC8  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  3950  001BCA  5986               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
  3951  001BCC  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  3952  001BCE  5987               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
  3953  001BD0  A0D8               	btfss	status,0,c
  3954  001BD2  D011               	goto	l2105
  3955                           
  3956                           ; BSR set to: 0
  3957  001BD4  5188               	movf	___aodiv@divisor& (0+255),w,b
  3958  001BD6  5F80               	subwf	___aodiv@dividend& (0+255),f,b
  3959  001BD8  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
  3960  001BDA  5B81               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
  3961  001BDC  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  3962  001BDE  5B82               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
  3963  001BE0  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  3964  001BE2  5B83               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
  3965  001BE4  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  3966  001BE6  5B84               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
  3967  001BE8  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  3968  001BEA  5B85               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
  3969  001BEC  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  3970  001BEE  5B86               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
  3971  001BF0  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  3972  001BF2  5B87               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
  3973                           
  3974                           ; BSR set to: 0
  3975  001BF4  8192               	bsf	___aodiv@quotient& (0+255),0,b
  3976  001BF6                     l2105:
  3977                           
  3978                           ; BSR set to: 0
  3979  001BF6  90D8               	bcf	status,0,c
  3980  001BF8  338F               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
  3981  001BFA  338E               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
  3982  001BFC  338D               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
  3983  001BFE  338C               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
  3984  001C00  338B               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
  3985  001C02  338A               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
  3986  001C04  3389               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
  3987  001C06  3388               	rrcf	___aodiv@divisor& (0+255),f,b
  3988                           
  3989                           ; BSR set to: 0
  3990  001C08  2F90               	decfsz	___aodiv@counter& (0+255),f,b
  3991  001C0A  D7C9               	goto	u1360
  3992  001C0C                     l2109:
  3993                           
  3994                           ; BSR set to: 0
  3995  001C0C  5191               	movf	___aodiv@sign& (0+255),w,b
  3996  001C0E  B4D8               	btfsc	status,2,c
  3997  001C10  D010               	goto	l2113
  3998                           
  3999                           ; BSR set to: 0
  4000  001C12  1F99               	comf	(___aodiv@quotient+7)& (0+255),f,b
  4001  001C14  1F98               	comf	(___aodiv@quotient+6)& (0+255),f,b
  4002  001C16  1F97               	comf	(___aodiv@quotient+5)& (0+255),f,b
  4003  001C18  1F96               	comf	(___aodiv@quotient+4)& (0+255),f,b
  4004  001C1A  1F95               	comf	(___aodiv@quotient+3)& (0+255),f,b
  4005  001C1C  1F94               	comf	(___aodiv@quotient+2)& (0+255),f,b
  4006  001C1E  1F93               	comf	(___aodiv@quotient+1)& (0+255),f,b
  4007  001C20  6D92               	negf	___aodiv@quotient& (0+255),b
  4008  001C22  0E00               	movlw	0
  4009  001C24  2393               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
  4010  001C26  2394               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
  4011  001C28  2395               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
  4012  001C2A  2396               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
  4013  001C2C  2397               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
  4014  001C2E  2398               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
  4015  001C30  2399               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
  4016  001C32                     l2113:
  4017                           
  4018                           ; BSR set to: 0
  4019  001C32  C092  F080         	movff	___aodiv@quotient,?___aodiv
  4020  001C36  C093  F081         	movff	___aodiv@quotient+1,?___aodiv+1
  4021  001C3A  C094  F082         	movff	___aodiv@quotient+2,?___aodiv+2
  4022  001C3E  C095  F083         	movff	___aodiv@quotient+3,?___aodiv+3
  4023  001C42  C096  F084         	movff	___aodiv@quotient+4,?___aodiv+4
  4024  001C46  C097  F085         	movff	___aodiv@quotient+5,?___aodiv+5
  4025  001C4A  C098  F086         	movff	___aodiv@quotient+6,?___aodiv+6
  4026  001C4E  C099  F087         	movff	___aodiv@quotient+7,?___aodiv+7
  4027                           
  4028                           ; BSR set to: 0
  4029  001C52  0012               	return		;funcret
  4030  001C54                     __end_of___aodiv:
  4031                           	opt callstack 0
  4032                           
  4033 ;; *************** function _SW_ISR *****************
  4034 ;; Defined at:
  4035 ;;		line 41 in file "timer.c"
  4036 ;; Parameters:    Size  Location     Type
  4037 ;;		None
  4038 ;; Auto vars:     Size  Location     Type
  4039 ;;		None
  4040 ;; Return value:  Size  Location     Type
  4041 ;;                  1    wreg      void 
  4042 ;; Registers used:
  4043 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4044 ;; Tracked objects:
  4045 ;;		On entry : 0/0
  4046 ;;		On exit  : 0/0
  4047 ;;		Unchanged: 0/0
  4048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4051 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4052 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4053 ;;Total ram usage:        9 bytes
  4054 ;; Hardware stack levels used:    1
  4055 ;; Hardware stack levels required when called:   11
  4056 ;; This function calls:
  4057 ;;		___awdiv
  4058 ;;		i2_lcdInst
  4059 ;;		i2_printf
  4060 ;; This function is called by:
  4061 ;;		Interrupt level 2
  4062 ;; This function uses a non-reentrant model
  4063 ;;
  4064                           
  4065                           	psect	intcode
  4066  000008                     __pintcode:
  4067                           	opt callstack 0
  4068  000008                     _SW_ISR:
  4069                           	opt callstack 7
  4070                           
  4071                           ; BSR set to: 0
  4072                           ;incstack = 0
  4073  000008  8278               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4074  00000A  ED67  F010         	call	int_func,f	;refresh shadow registers
  4075                           
  4076                           	psect	intcode_body
  4077  0020CE                     __pintcode_body:
  4078                           	opt callstack 7
  4079  0020CE                     int_func:
  4080                           	opt callstack 7
  4081  0020CE  0006               	pop		; remove dummy address from shadow register refresh
  4082  0020D0  CFE1 F065          	movff	fsr1l,??_SW_ISR+1
  4083  0020D4  CFE2 F066          	movff	fsr1h,??_SW_ISR+2
  4084  0020D8  CFD9 F067          	movff	fsr2l,??_SW_ISR+3
  4085  0020DC  CFDA F068          	movff	fsr2h,??_SW_ISR+4
  4086  0020E0  CFF6 F069          	movff	tblptrl,??_SW_ISR+5
  4087  0020E4  CFF7 F06A          	movff	tblptrh,??_SW_ISR+6
  4088  0020E8  CFF8 F06B          	movff	tblptru,??_SW_ISR+7
  4089  0020EC  CFF5 F06C          	movff	tablat,??_SW_ISR+8
  4090                           
  4091                           ;timer.c: 42:     INTCONbits.TMR0IF = 0;
  4092  0020F0  94F2               	bcf	4082,2,c	;volatile
  4093                           
  4094                           ;timer.c: 43:     TMR0H = (65536ul - (((10000000 / (4ul))/(64ul))/2ul)) >> 8;
  4095  0020F2  0EB3               	movlw	179
  4096  0020F4  6ED7               	movwf	4055,c	;volatile
  4097                           
  4098                           ;timer.c: 44:     TMR0L = (65536ul - (((10000000 / (4ul))/(64ul))/2ul));
  4099  0020F6  0EB5               	movlw	181
  4100  0020F8  6ED6               	movwf	4054,c	;volatile
  4101                           
  4102                           ;timer.c: 45:     cnt++;
  4103  0020FA  4A74               	infsnz	_cnt,f,c
  4104  0020FC  2A75               	incf	_cnt+1,f,c
  4105                           
  4106                           ;timer.c: 46:     LATDbits.LATD7 ^= 1u;
  4107  0020FE  7E8C               	btg	3980,7,c	;volatile
  4108                           
  4109                           ;timer.c: 47:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  4110  002100  0E01               	movlw	1
  4111  002102  ECF8  F013         	call	i2_lcdInst
  4112  002106  0E11               	movlw	17
  4113  002108  6E64               	movwf	??_SW_ISR& (0+255),c
  4114  00210A  0E3A               	movlw	58
  4115  00210C                     i2u264_47:
  4116  00210C  2EE8               	decfsz	wreg,f,c
  4117  00210E  D7FE               	bra	i2u264_47
  4118  002110  2E64               	decfsz	??_SW_ISR& (0+255),f,c
  4119  002112  D7FC               	bra	i2u264_47
  4120  002114  D000               	nop2	
  4121                           
  4122                           ;timer.c: 48:     printf("time");
  4123  002116  0E22               	movlw	low STR_5
  4124  002118  6E5C               	movwf	i2printf@fmt,c
  4125  00211A  0E10               	movlw	high STR_5
  4126  00211C  6E5D               	movwf	i2printf@fmt+1,c
  4127  00211E  EC4F  F013         	call	i2_printf	;wreg free
  4128                           
  4129                           ;timer.c: 49:     { lcdInst(0x80 | LCD_LINE2_ADDR);};
  4130  002122  0E06               	movlw	low _LCD_LINE2_ADDR
  4131  002124  6EF6               	movwf	tblptrl,c
  4132  002126                     	if	0	;There is only one active tblptr byte
  4133  002126                     	endif
  4134  002126                     	if	0	;There are less than 3 active tblptr bytes
  4135  002126                     	endif
  4136  002126  0008               	tblrd		*
  4137  002128  50F5               	movf	tablat,w,c
  4138  00212A  0980               	iorlw	128
  4139  00212C  ECF8  F013         	call	i2_lcdInst
  4140                           
  4141                           ;timer.c: 50:     if (cnt%2 == 0){
  4142  002130  B074               	btfsc	_cnt,0,c
  4143  002132  D014               	goto	i2l113
  4144                           
  4145                           ;timer.c: 51:         printf("%d",cnt/2);
  4146  002134  0E19               	movlw	low (STR_3+7)
  4147  002136  6E5C               	movwf	i2printf@fmt,c
  4148  002138  0E10               	movlw	high (STR_3+7)
  4149  00213A  6E5D               	movwf	i2printf@fmt+1,c
  4150  00213C  C074  F001         	movff	_cnt,___awdiv@dividend
  4151  002140  C075  F002         	movff	_cnt+1,___awdiv@dividend+1
  4152  002144  0E00               	movlw	0
  4153  002146  6E04               	movwf	___awdiv@divisor+1,c
  4154  002148  0E02               	movlw	2
  4155  00214A  6E03               	movwf	___awdiv@divisor,c
  4156  00214C  EC5C  F011         	call	___awdiv	;wreg free
  4157  002150  C001  F05E         	movff	?___awdiv,?i2_printf+2
  4158  002154  C002  F05F         	movff	?___awdiv+1,?i2_printf+3
  4159  002158  EC4F  F013         	call	i2_printf	;wreg free
  4160  00215C                     i2l113:
  4161  00215C  C06C  FFF5         	movff	??_SW_ISR+8,tablat
  4162  002160  C06B  FFF8         	movff	??_SW_ISR+7,tblptru
  4163  002164  C06A  FFF7         	movff	??_SW_ISR+6,tblptrh
  4164  002168  C069  FFF6         	movff	??_SW_ISR+5,tblptrl
  4165  00216C  C068  FFDA         	movff	??_SW_ISR+4,fsr2h
  4166  002170  C067  FFD9         	movff	??_SW_ISR+3,fsr2l
  4167  002174  C066  FFE2         	movff	??_SW_ISR+2,fsr1h
  4168  002178  C065  FFE1         	movff	??_SW_ISR+1,fsr1l
  4169  00217C  9278               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4170  00217E  0011               	retfie		f
  4171  002180                     __end_of_SW_ISR:
  4172                           	opt callstack 0
  4173                           
  4174 ;; *************** function i2_printf *****************
  4175 ;; Defined at:
  4176 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  4177 ;; Parameters:    Size  Location     Type
  4178 ;;  fmt             2   91[COMRAM] PTR const unsigned char 
  4179 ;;		 -> STR_6(3), STR_5(5), STR_4(5), STR_3(10), 
  4180 ;;		 -> STR_2(11), STR_1(6), 
  4181 ;; Auto vars:     Size  Location     Type
  4182 ;;  printf          2   97[COMRAM] PTR void [1]
  4183 ;;		 -> ?i2_printf(2), ?_printf(2), 
  4184 ;;  printf          2   95[COMRAM] int 
  4185 ;; Return value:  Size  Location     Type
  4186 ;;                  2   91[COMRAM] int 
  4187 ;; Registers used:
  4188 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4189 ;; Tracked objects:
  4190 ;;		On entry : 0/0
  4191 ;;		On exit  : 0/0
  4192 ;;		Unchanged: 0/0
  4193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4194 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4195 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4197 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4198 ;;Total ram usage:        8 bytes
  4199 ;; Hardware stack levels used:    1
  4200 ;; Hardware stack levels required when called:   10
  4201 ;; This function calls:
  4202 ;;		i2_vfprintf
  4203 ;; This function is called by:
  4204 ;;		_SW_ISR
  4205 ;; This function uses a non-reentrant model
  4206 ;;
  4207                           
  4208                           	psect	text21
  4209  00269E                     __ptext21:
  4210                           	opt callstack 0
  4211  00269E                     i2_printf:
  4212                           	opt callstack 7
  4213                           
  4214                           ;incstack = 0
  4215  00269E  0E5E               	movlw	low (?i2_printf+2)
  4216  0026A0  6E62               	movwf	i2printf@ap,c
  4217  0026A2  0E00               	movlw	high (?i2_printf+2)
  4218  0026A4  6E63               	movwf	i2printf@ap+1,c
  4219  0026A6  0E00               	movlw	0
  4220  0026A8  6E54               	movwf	i2vfprintf@fp,c
  4221  0026AA  0E00               	movlw	0
  4222  0026AC  6E55               	movwf	i2vfprintf@fp+1,c
  4223  0026AE  C05C  F056         	movff	i2printf@fmt,i2vfprintf@fmt
  4224  0026B2  C05D  F057         	movff	i2printf@fmt+1,i2vfprintf@fmt+1
  4225  0026B6  0E62               	movlw	low i2printf@ap
  4226  0026B8  6E58               	movwf	i2vfprintf@ap,c
  4227  0026BA  0E00               	movlw	high i2printf@ap
  4228  0026BC  6E59               	movwf	i2vfprintf@ap+1,c
  4229  0026BE  EC6E  F012         	call	i2_vfprintf	;wreg free
  4230  0026C2  C054  F060         	movff	?i2_vfprintf,i2printf@ret
  4231  0026C6  C055  F061         	movff	?i2_vfprintf+1,i2printf@ret+1
  4232  0026CA  0012               	return		;funcret
  4233  0026CC                     __end_ofi2_printf:
  4234                           	opt callstack 0
  4235                           
  4236 ;; *************** function i2_vfprintf *****************
  4237 ;; Defined at:
  4238 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4239 ;; Parameters:    Size  Location     Type
  4240 ;;  fp              2   83[COMRAM] PTR struct _IO_FILE
  4241 ;;		 -> NULL(0), 
  4242 ;;  fmt             2   85[COMRAM] PTR const unsigned char 
  4243 ;;		 -> STR_6(3), STR_5(5), STR_4(5), STR_3(10), 
  4244 ;;		 -> STR_2(11), STR_1(6), 
  4245 ;;  ap              2   87[COMRAM] PTR PTR void 
  4246 ;;		 -> i2printf@ap(2), printf@ap(2), 
  4247 ;; Auto vars:     Size  Location     Type
  4248 ;;  vfprintf        2   89[COMRAM] PTR unsigned char 
  4249 ;;		 -> STR_6(3), STR_5(5), STR_4(5), STR_3(10), 
  4250 ;;		 -> STR_2(11), STR_1(6), 
  4251 ;; Return value:  Size  Location     Type
  4252 ;;                  2   83[COMRAM] int 
  4253 ;; Registers used:
  4254 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4255 ;; Tracked objects:
  4256 ;;		On entry : 0/0
  4257 ;;		On exit  : 0/0
  4258 ;;		Unchanged: 0/0
  4259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4260 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4261 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4263 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4264 ;;Total ram usage:        8 bytes
  4265 ;; Hardware stack levels used:    1
  4266 ;; Hardware stack levels required when called:    9
  4267 ;; This function calls:
  4268 ;;		i2_vfpfcnvrt
  4269 ;; This function is called by:
  4270 ;;		i2_printf
  4271 ;; This function uses a non-reentrant model
  4272 ;;
  4273                           
  4274                           	psect	text22
  4275  0024DC                     __ptext22:
  4276                           	opt callstack 0
  4277  0024DC                     i2_vfprintf:
  4278                           	opt callstack 7
  4279                           
  4280                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  4281                           
  4282                           ;incstack = 0
  4283  0024DC  C056  F05A         	movff	i2vfprintf@fmt,i2vfprintf@cfmt
  4284  0024E0  C057  F05B         	movff	i2vfprintf@fmt+1,i2vfprintf@cfmt+1
  4285                           
  4286                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  4287  0024E4  0E00               	movlw	0
  4288  0024E6  0100               	movlb	0	; () banked
  4289  0024E8  6FEC               	movwf	(_nout+1)& (0+255),b
  4290  0024EA  0E00               	movlw	0
  4291  0024EC  6FEB               	movwf	_nout& (0+255),b
  4292                           
  4293                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4294  0024EE  D013               	goto	i2l2509
  4295  0024F0                     i2l2507:
  4296                           
  4297                           ; BSR set to: 0
  4298                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  4299  0024F0  C054  F044         	movff	i2vfprintf@fp,i2vfpfcnvrt@fp
  4300  0024F4  C055  F045         	movff	i2vfprintf@fp+1,i2vfpfcnvrt@fp+1
  4301  0024F8  0E5A               	movlw	low i2vfprintf@cfmt
  4302  0024FA  6E46               	movwf	i2vfpfcnvrt@fmt,c
  4303  0024FC  0E00               	movlw	high i2vfprintf@cfmt
  4304  0024FE  6E47               	movwf	i2vfpfcnvrt@fmt+1,c
  4305  002500  C058  F048         	movff	i2vfprintf@ap,i2vfpfcnvrt@ap
  4306  002504  C059  F049         	movff	i2vfprintf@ap+1,i2vfpfcnvrt@ap+1
  4307  002508  ECC4  F00C         	call	i2_vfpfcnvrt	;wreg free
  4308  00250C  5044               	movf	?i2_vfpfcnvrt,w,c
  4309  00250E  0100               	movlb	0	; () banked
  4310  002510  27EB               	addwf	_nout& (0+255),f,b
  4311  002512  5045               	movf	?i2_vfpfcnvrt+1,w,c
  4312  002514  23EC               	addwfc	(_nout+1)& (0+255),f,b
  4313  002516                     i2l2509:
  4314                           
  4315                           ; BSR set to: 0
  4316                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4317  002516  C05A  FFF6         	movff	i2vfprintf@cfmt,tblptrl
  4318  00251A  C05B  FFF7         	movff	i2vfprintf@cfmt+1,tblptrh
  4319  00251E                     	if	0	;tblptru may be non-zero
  4320  00251E                     	endif
  4321  00251E                     	if	0	;tblptru may be non-zero
  4322  00251E                     	endif
  4323  00251E  0008               	tblrd		*
  4324  002520  50F5               	movf	tablat,w,c
  4325  002522  0900               	iorlw	0
  4326  002524  A4D8               	btfss	status,2,c
  4327  002526  D7E4               	goto	i2l2507
  4328                           
  4329                           ; BSR set to: 0
  4330                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  4331  002528  C0EB  F054         	movff	_nout,?i2_vfprintf
  4332  00252C  C0EC  F055         	movff	_nout+1,?i2_vfprintf+1
  4333                           
  4334                           ; BSR set to: 0
  4335  002530  0012               	return		;funcret
  4336  002532                     __end_ofi2_vfprintf:
  4337                           	opt callstack 0
  4338                           
  4339 ;; *************** function i2_vfpfcnvrt *****************
  4340 ;; Defined at:
  4341 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4342 ;; Parameters:    Size  Location     Type
  4343 ;;  fp              2   67[COMRAM] PTR struct _IO_FILE
  4344 ;;		 -> NULL(0), 
  4345 ;;  fmt             2   69[COMRAM] PTR PTR unsigned char 
  4346 ;;		 -> i2vfprintf@cfmt(2), vfprintf@cfmt(2), 
  4347 ;;  ap              2   71[COMRAM] PTR PTR void 
  4348 ;;		 -> i2printf@ap(2), printf@ap(2), 
  4349 ;; Auto vars:     Size  Location     Type
  4350 ;;  vfpfcnvrt       8   75[COMRAM] long long 
  4351 ;;  vfpfcnvrt       8    0        unsigned long long 
  4352 ;;  vfpfcnvrt       4    0        unsigned long long 
  4353 ;;  vfpfcnvrt       3    0        PTR void 
  4354 ;;  vfpfcnvrt       3    0        unsigned char [3]
  4355 ;;  vfpfcnvrt       3    0        PTR unsigned char 
  4356 ;;  vfpfcnvrt       2    0        int 
  4357 ;;  vfpfcnvrt       2    0        int 
  4358 ;;  vfpfcnvrt       1    0        unsigned char 
  4359 ;; Return value:  Size  Location     Type
  4360 ;;                  2   67[COMRAM] int 
  4361 ;; Registers used:
  4362 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4363 ;; Tracked objects:
  4364 ;;		On entry : 0/0
  4365 ;;		On exit  : 0/0
  4366 ;;		Unchanged: 0/0
  4367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4368 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4369 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4370 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4371 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4372 ;;Total ram usage:       16 bytes
  4373 ;; Hardware stack levels used:    1
  4374 ;; Hardware stack levels required when called:    8
  4375 ;; This function calls:
  4376 ;;		i2_dtoa
  4377 ;;		i2_fputc
  4378 ;; This function is called by:
  4379 ;;		i2_vfprintf
  4380 ;; This function uses a non-reentrant model
  4381 ;;
  4382                           
  4383                           	psect	text23
  4384  001988                     __ptext23:
  4385                           	opt callstack 0
  4386  001988                     i2_vfpfcnvrt:
  4387                           	opt callstack 7
  4388                           
  4389                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  4390                           
  4391                           ; BSR set to: 0
  4392                           ;incstack = 0
  4393  001988  C046  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4394  00198C  C047  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4395  001990  CFDE FFF6          	movff	postinc2,tblptrl
  4396  001994  CFDD FFF7          	movff	postdec2,tblptrh
  4397  001998                     	if	0	;tblptru may be non-zero
  4398  001998                     	endif
  4399  001998                     	if	0	;tblptru may be non-zero
  4400  001998                     	endif
  4401  001998  0008               	tblrd		*
  4402  00199A  50F5               	movf	tablat,w,c
  4403  00199C  0A25               	xorlw	37
  4404  00199E  A4D8               	btfss	status,2,c
  4405  0019A0  D09A               	goto	i2l2485
  4406                           
  4407                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  4408  0019A2  C046  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4409  0019A6  C047  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4410  0019AA  2ADE               	incf	postinc2,f,c
  4411  0019AC  0E00               	movlw	0
  4412  0019AE  22DD               	addwfc	postdec2,f,c
  4413                           
  4414                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  4415  0019B0  0E00               	movlw	0
  4416  0019B2  0100               	movlb	0	; () banked
  4417  0019B4  6FEE               	movwf	(_width+1)& (0+255),b
  4418  0019B6  0E00               	movlw	0
  4419  0019B8  6FED               	movwf	_width& (0+255),b
  4420  0019BA  C0ED  F0F1         	movff	_width,_flags
  4421  0019BE  C0EE  F0F2         	movff	_width+1,_flags+1
  4422                           
  4423                           ; BSR set to: 0
  4424                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  4425  0019C2  69EF               	setf	_prec& (0+255),b
  4426  0019C4  69F0               	setf	(_prec+1)& (0+255),b
  4427                           
  4428                           ; BSR set to: 0
  4429                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4430  0019C6  C046  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4431  0019CA  C047  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4432  0019CE  CFDE FFF6          	movff	postinc2,tblptrl
  4433  0019D2  CFDD FFF7          	movff	postdec2,tblptrh
  4434  0019D6                     	if	0	;tblptru may be non-zero
  4435  0019D6                     	endif
  4436  0019D6                     	if	0	;tblptru may be non-zero
  4437  0019D6                     	endif
  4438  0019D6  0008               	tblrd		*
  4439  0019D8  50F5               	movf	tablat,w,c
  4440  0019DA  0A64               	xorlw	100
  4441  0019DC  B4D8               	btfsc	status,2,c
  4442  0019DE  D00D               	goto	i2u202_40
  4443                           
  4444                           ; BSR set to: 0
  4445  0019E0  C046  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4446  0019E4  C047  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4447  0019E8  CFDE FFF6          	movff	postinc2,tblptrl
  4448  0019EC  CFDD FFF7          	movff	postdec2,tblptrh
  4449  0019F0                     	if	0	;tblptru may be non-zero
  4450  0019F0                     	endif
  4451  0019F0                     	if	0	;tblptru may be non-zero
  4452  0019F0                     	endif
  4453  0019F0  0008               	tblrd		*
  4454  0019F2  50F5               	movf	tablat,w,c
  4455  0019F4  0A69               	xorlw	105
  4456  0019F6  A4D8               	btfss	status,2,c
  4457  0019F8  D03F               	goto	i2l2469
  4458  0019FA                     i2u202_40:
  4459                           
  4460                           ; BSR set to: 0
  4461                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  4462  0019FA  C046  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4463  0019FE  C047  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4464  001A02  2ADE               	incf	postinc2,f,c
  4465  001A04  0E00               	movlw	0
  4466  001A06  22DD               	addwfc	postdec2,f,c
  4467                           
  4468                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4469  001A08  C048  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
  4470  001A0C  C049  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
  4471  001A10  CFDF F04A          	movff	indf2,??i2_vfpfcnvrt
  4472  001A14  0E02               	movlw	2
  4473  001A16  26DE               	addwf	postinc2,f,c
  4474  001A18  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt+1
  4475  001A1C  0E00               	movlw	0
  4476  001A1E  22DD               	addwfc	postdec2,f,c
  4477  001A20  C04A  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
  4478  001A24  C04B  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
  4479  001A28  CFDE F04C          	movff	postinc2,i2vfpfcnvrt@ll
  4480  001A2C  CFDD F04D          	movff	postdec2,i2vfpfcnvrt@ll+1
  4481  001A30  0E00               	movlw	0
  4482  001A32  BE4D               	btfsc	i2vfpfcnvrt@ll+1,7,c
  4483  001A34  0EFF               	movlw	-1
  4484  001A36  6E4E               	movwf	i2vfpfcnvrt@ll+2,c
  4485  001A38  6E4F               	movwf	i2vfpfcnvrt@ll+3,c
  4486  001A3A  6E50               	movwf	i2vfpfcnvrt@ll+4,c
  4487  001A3C  6E51               	movwf	i2vfpfcnvrt@ll+5,c
  4488  001A3E  6E52               	movwf	i2vfpfcnvrt@ll+6,c
  4489  001A40  6E53               	movwf	i2vfpfcnvrt@ll+7,c
  4490                           
  4491                           ; BSR set to: 0
  4492                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  4493  001A42  C044  F020         	movff	i2vfpfcnvrt@fp,i2dtoa@fp
  4494  001A46  C045  F021         	movff	i2vfpfcnvrt@fp+1,i2dtoa@fp+1
  4495  001A4A  C04C  F022         	movff	i2vfpfcnvrt@ll,i2dtoa@d
  4496  001A4E  C04D  F023         	movff	i2vfpfcnvrt@ll+1,i2dtoa@d+1
  4497  001A52  C04E  F024         	movff	i2vfpfcnvrt@ll+2,i2dtoa@d+2
  4498  001A56  C04F  F025         	movff	i2vfpfcnvrt@ll+3,i2dtoa@d+3
  4499  001A5A  C050  F026         	movff	i2vfpfcnvrt@ll+4,i2dtoa@d+4
  4500  001A5E  C051  F027         	movff	i2vfpfcnvrt@ll+5,i2dtoa@d+5
  4501  001A62  C052  F028         	movff	i2vfpfcnvrt@ll+6,i2dtoa@d+6
  4502  001A66  C053  F029         	movff	i2vfpfcnvrt@ll+7,i2dtoa@d+7
  4503  001A6A  ECDD  F00A         	call	i2_dtoa	;wreg free
  4504  001A6E  C020  F044         	movff	?i2_dtoa,?i2_vfpfcnvrt
  4505  001A72  C021  F045         	movff	?i2_dtoa+1,?i2_vfpfcnvrt+1
  4506  001A76  0012               	return	
  4507  001A78                     i2l2469:
  4508                           
  4509                           ; BSR set to: 0
  4510                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  4511  001A78  C046  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4512  001A7C  C047  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4513  001A80  CFDE FFF6          	movff	postinc2,tblptrl
  4514  001A84  CFDD FFF7          	movff	postdec2,tblptrh
  4515  001A88                     	if	0	;tblptru may be non-zero
  4516  001A88                     	endif
  4517  001A88                     	if	0	;tblptru may be non-zero
  4518  001A88                     	endif
  4519  001A88  0008               	tblrd		*
  4520  001A8A  50F5               	movf	tablat,w,c
  4521  001A8C  0A25               	xorlw	37
  4522  001A8E  A4D8               	btfss	status,2,c
  4523  001A90  D016               	goto	i2l2479
  4524                           
  4525                           ; BSR set to: 0
  4526                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  4527  001A92  C046  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4528  001A96  C047  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4529  001A9A  2ADE               	incf	postinc2,f,c
  4530  001A9C  0E00               	movlw	0
  4531  001A9E  22DD               	addwfc	postdec2,f,c
  4532                           
  4533                           ; BSR set to: 0
  4534                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  4535  001AA0  0E00               	movlw	0
  4536  001AA2  6E06               	movwf	i2fputc@c+1,c
  4537  001AA4  0E25               	movlw	37
  4538  001AA6  6E05               	movwf	i2fputc@c,c
  4539  001AA8  C044  F007         	movff	i2vfpfcnvrt@fp,i2fputc@fp
  4540  001AAC  C045  F008         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
  4541  001AB0  EC0D  F012         	call	i2_fputc	;wreg free
  4542  001AB4                     i2l2475:
  4543                           
  4544                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  4545  001AB4  0E00               	movlw	0
  4546  001AB6  6E45               	movwf	?i2_vfpfcnvrt+1,c
  4547  001AB8  0E01               	movlw	1
  4548  001ABA  6E44               	movwf	?i2_vfpfcnvrt,c
  4549  001ABC  0012               	return	
  4550  001ABE                     i2l2479:
  4551                           
  4552                           ; BSR set to: 0
  4553                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  4554  001ABE  C046  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4555  001AC2  C047  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4556  001AC6  2ADE               	incf	postinc2,f,c
  4557  001AC8  0E00               	movlw	0
  4558  001ACA  22DD               	addwfc	postdec2,f,c
  4559                           
  4560                           ; BSR set to: 0
  4561                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  4562  001ACC  0E00               	movlw	0
  4563  001ACE  6E45               	movwf	?i2_vfpfcnvrt+1,c
  4564  001AD0  0E00               	movlw	0
  4565  001AD2  6E44               	movwf	?i2_vfpfcnvrt,c
  4566  001AD4  0012               	return	
  4567  001AD6                     i2l2485:
  4568                           
  4569                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  4570  001AD6  C046  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4571  001ADA  C047  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4572  001ADE  CFDE FFF6          	movff	postinc2,tblptrl
  4573  001AE2  CFDD FFF7          	movff	postdec2,tblptrh
  4574  001AE6                     	if	0	;tblptru may be non-zero
  4575  001AE6                     	endif
  4576  001AE6                     	if	0	;tblptru may be non-zero
  4577  001AE6                     	endif
  4578  001AE6  0008               	tblrd		*
  4579  001AE8  50F5               	movf	tablat,w,c
  4580  001AEA  6E05               	movwf	i2fputc@c,c
  4581  001AEC  6A06               	clrf	i2fputc@c+1,c
  4582  001AEE  C044  F007         	movff	i2vfpfcnvrt@fp,i2fputc@fp
  4583  001AF2  C045  F008         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
  4584  001AF6  EC0D  F012         	call	i2_fputc	;wreg free
  4585                           
  4586                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  4587  001AFA  C046  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4588  001AFE  C047  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4589  001B02  2ADE               	incf	postinc2,f,c
  4590  001B04  0E00               	movlw	0
  4591  001B06  22DD               	addwfc	postdec2,f,c
  4592  001B08  D7D5               	goto	i2l2475
  4593  001B0A                     __end_ofi2_vfpfcnvrt:
  4594                           	opt callstack 0
  4595                           
  4596 ;; *************** function i2_dtoa *****************
  4597 ;; Defined at:
  4598 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4599 ;; Parameters:    Size  Location     Type
  4600 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  4601 ;;		 -> NULL(0), 
  4602 ;;  d               8   33[COMRAM] long long 
  4603 ;; Auto vars:     Size  Location     Type
  4604 ;;  dtoa            8   57[COMRAM] long long 
  4605 ;;  dtoa            2   65[COMRAM] int 
  4606 ;;  dtoa            2   55[COMRAM] int 
  4607 ;;  dtoa            2   53[COMRAM] int 
  4608 ;;  dtoa            2   51[COMRAM] int 
  4609 ;; Return value:  Size  Location     Type
  4610 ;;                  2   31[COMRAM] int 
  4611 ;; Registers used:
  4612 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4613 ;; Tracked objects:
  4614 ;;		On entry : 0/0
  4615 ;;		On exit  : 0/0
  4616 ;;		Unchanged: 0/0
  4617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4618 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4619 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4620 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4621 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4622 ;;Total ram usage:       36 bytes
  4623 ;; Hardware stack levels used:    1
  4624 ;; Hardware stack levels required when called:    7
  4625 ;; This function calls:
  4626 ;;		i2___aodiv
  4627 ;;		i2___aomod
  4628 ;;		i2_abs
  4629 ;;		i2_pad
  4630 ;; This function is called by:
  4631 ;;		i2_vfpfcnvrt
  4632 ;; This function uses a non-reentrant model
  4633 ;;
  4634                           
  4635                           	psect	text24
  4636  0015BA                     __ptext24:
  4637                           	opt callstack 0
  4638  0015BA                     i2_dtoa:
  4639                           	opt callstack 7
  4640                           
  4641                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  4642                           
  4643                           ;incstack = 0
  4644  0015BA  C022  F03A         	movff	i2dtoa@d,i2dtoa@n
  4645  0015BE  C023  F03B         	movff	i2dtoa@d+1,i2dtoa@n+1
  4646  0015C2  C024  F03C         	movff	i2dtoa@d+2,i2dtoa@n+2
  4647  0015C6  C025  F03D         	movff	i2dtoa@d+3,i2dtoa@n+3
  4648  0015CA  C026  F03E         	movff	i2dtoa@d+4,i2dtoa@n+4
  4649  0015CE  C027  F03F         	movff	i2dtoa@d+5,i2dtoa@n+5
  4650  0015D2  C028  F040         	movff	i2dtoa@d+6,i2dtoa@n+6
  4651  0015D6  C029  F041         	movff	i2dtoa@d+7,i2dtoa@n+7
  4652                           
  4653                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  4654  0015DA  AE41               	btfss	i2dtoa@n+7,7,c
  4655  0015DC  D002               	goto	i2u184_40
  4656  0015DE  0E01               	movlw	1
  4657  0015E0  D001               	goto	i2u185_40
  4658  0015E2                     i2u184_40:
  4659  0015E2  0E00               	movlw	0
  4660  0015E4                     i2u185_40:
  4661  0015E4  6E38               	movwf	i2dtoa@s,c
  4662  0015E6  6A39               	clrf	i2dtoa@s+1,c
  4663                           
  4664                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  4665  0015E8  5038               	movf	i2dtoa@s,w,c
  4666  0015EA  1039               	iorwf	i2dtoa@s+1,w,c
  4667  0015EC  B4D8               	btfsc	status,2,c
  4668  0015EE  D010               	goto	i2l2387
  4669                           
  4670                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  4671  0015F0  1E41               	comf	i2dtoa@n+7,f,c
  4672  0015F2  1E40               	comf	i2dtoa@n+6,f,c
  4673  0015F4  1E3F               	comf	i2dtoa@n+5,f,c
  4674  0015F6  1E3E               	comf	i2dtoa@n+4,f,c
  4675  0015F8  1E3D               	comf	i2dtoa@n+3,f,c
  4676  0015FA  1E3C               	comf	i2dtoa@n+2,f,c
  4677  0015FC  1E3B               	comf	i2dtoa@n+1,f,c
  4678  0015FE  6C3A               	negf	i2dtoa@n,c
  4679  001600  0E00               	movlw	0
  4680  001602  223B               	addwfc	i2dtoa@n+1,f,c
  4681  001604  223C               	addwfc	i2dtoa@n+2,f,c
  4682  001606  223D               	addwfc	i2dtoa@n+3,f,c
  4683  001608  223E               	addwfc	i2dtoa@n+4,f,c
  4684  00160A  223F               	addwfc	i2dtoa@n+5,f,c
  4685  00160C  2240               	addwfc	i2dtoa@n+6,f,c
  4686  00160E  2241               	addwfc	i2dtoa@n+7,f,c
  4687  001610                     i2l2387:
  4688                           
  4689                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  4690  001610  0100               	movlb	0	; () banked
  4691  001612  AFF0               	btfss	(_prec+1)& (0+255),7,b
  4692                           
  4693                           ; BSR set to: 0
  4694                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  4695  001614  93F1               	bcf	_flags& (0+255),1,b
  4696                           
  4697                           ; BSR set to: 0
  4698                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  4699  001616  BFF0               	btfsc	(_prec+1)& (0+255),7,b
  4700  001618  D005               	goto	i2u188_40
  4701  00161A  51F0               	movf	(_prec+1)& (0+255),w,b
  4702  00161C  E108               	bnz	i2l239
  4703  00161E  05EF               	decf	_prec& (0+255),w,b
  4704  001620  B0D8               	btfsc	status,0,c
  4705  001622  D005               	goto	i2l239
  4706  001624                     i2u188_40:
  4707                           
  4708                           ; BSR set to: 0
  4709  001624  0E00               	movlw	0
  4710  001626  6E35               	movwf	i2dtoa@p+1,c
  4711  001628  0E01               	movlw	1
  4712  00162A  6E34               	movwf	i2dtoa@p,c
  4713  00162C  D004               	goto	i2l241
  4714  00162E                     i2l239:
  4715                           
  4716                           ; BSR set to: 0
  4717  00162E  C0EF  F034         	movff	_prec,i2dtoa@p
  4718  001632  C0F0  F035         	movff	_prec+1,i2dtoa@p+1
  4719  001636                     i2l241:
  4720                           
  4721                           ; BSR set to: 0
  4722                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  4723  001636  C0ED  F036         	movff	_width,i2dtoa@w
  4724  00163A  C0EE  F037         	movff	_width+1,i2dtoa@w+1
  4725                           
  4726                           ; BSR set to: 0
  4727                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  4728  00163E  5038               	movf	i2dtoa@s,w,c
  4729  001640  1039               	iorwf	i2dtoa@s+1,w,c
  4730  001642  A4D8               	btfss	status,2,c
  4731  001644  D002               	goto	i2u190_40
  4732                           
  4733                           ; BSR set to: 0
  4734  001646  A5F1               	btfss	_flags& (0+255),2,b
  4735  001648  D003               	goto	i2l2401
  4736  00164A                     i2u190_40:
  4737                           
  4738                           ; BSR set to: 0
  4739                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  4740  00164A  0636               	decf	i2dtoa@w,f,c
  4741  00164C  A0D8               	btfss	status,0,c
  4742  00164E  0637               	decf	i2dtoa@w+1,f,c
  4743  001650                     i2l2401:
  4744                           
  4745                           ; BSR set to: 0
  4746                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  4747  001650  0E00               	movlw	0
  4748  001652  6E43               	movwf	i2dtoa@i+1,c
  4749  001654  0E1F               	movlw	31
  4750  001656  6E42               	movwf	i2dtoa@i,c
  4751                           
  4752                           ; BSR set to: 0
  4753                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  4754  001658  0E00               	movlw	0
  4755  00165A  0101               	movlb	1	; () banked
  4756  00165C  6F1F               	movwf	(_dbuf+31)& (0+255),b
  4757                           
  4758                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4759  00165E  D07C               	goto	i2l2415
  4760  001660                     i2l2405:
  4761                           
  4762                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  4763  001660  0642               	decf	i2dtoa@i,f,c
  4764  001662  A0D8               	btfss	status,0,c
  4765  001664  0643               	decf	i2dtoa@i+1,f,c
  4766                           
  4767                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  4768  001666  0E00               	movlw	low _dbuf
  4769  001668  2442               	addwf	i2dtoa@i,w,c
  4770  00166A  6ED9               	movwf	fsr2l,c
  4771  00166C  0E01               	movlw	high _dbuf
  4772  00166E  2043               	addwfc	i2dtoa@i+1,w,c
  4773  001670  6EDA               	movwf	fsr2h,c
  4774  001672  C03A  F001         	movff	i2dtoa@n,i2___aomod@dividend
  4775  001676  C03B  F002         	movff	i2dtoa@n+1,i2___aomod@dividend+1
  4776  00167A  C03C  F003         	movff	i2dtoa@n+2,i2___aomod@dividend+2
  4777  00167E  C03D  F004         	movff	i2dtoa@n+3,i2___aomod@dividend+3
  4778  001682  C03E  F005         	movff	i2dtoa@n+4,i2___aomod@dividend+4
  4779  001686  C03F  F006         	movff	i2dtoa@n+5,i2___aomod@dividend+5
  4780  00168A  C040  F007         	movff	i2dtoa@n+6,i2___aomod@dividend+6
  4781  00168E  C041  F008         	movff	i2dtoa@n+7,i2___aomod@dividend+7
  4782  001692  0E0A               	movlw	10
  4783  001694  6E09               	movwf	i2___aomod@divisor,c
  4784  001696  0E00               	movlw	0
  4785  001698  6E0A               	movwf	i2___aomod@divisor+1,c
  4786  00169A  0E00               	movlw	0
  4787  00169C  6E0B               	movwf	i2___aomod@divisor+2,c
  4788  00169E  0E00               	movlw	0
  4789  0016A0  6E0C               	movwf	i2___aomod@divisor+3,c
  4790  0016A2  0E00               	movlw	0
  4791  0016A4  6E0D               	movwf	i2___aomod@divisor+4,c
  4792  0016A6  0E00               	movlw	0
  4793  0016A8  6E0E               	movwf	i2___aomod@divisor+5,c
  4794  0016AA  0E00               	movlw	0
  4795  0016AC  6E0F               	movwf	i2___aomod@divisor+6,c
  4796  0016AE  0E00               	movlw	0
  4797  0016B0  6E10               	movwf	i2___aomod@divisor+7,c
  4798  0016B2  EC61  F00F         	call	i2___aomod	;wreg free
  4799  0016B6  C001  F02A         	movff	?i2___aomod,??i2_dtoa
  4800  0016BA  C002  F02B         	movff	?i2___aomod+1,??i2_dtoa+1
  4801  0016BE  C003  F02C         	movff	?i2___aomod+2,??i2_dtoa+2
  4802  0016C2  C004  F02D         	movff	?i2___aomod+3,??i2_dtoa+3
  4803  0016C6  C005  F02E         	movff	?i2___aomod+4,??i2_dtoa+4
  4804  0016CA  C006  F02F         	movff	?i2___aomod+5,??i2_dtoa+5
  4805  0016CE  C007  F030         	movff	?i2___aomod+6,??i2_dtoa+6
  4806  0016D2  C008  F031         	movff	?i2___aomod+7,??i2_dtoa+7
  4807  0016D6  C02A  F013         	movff	??i2_dtoa,i2abs@a
  4808  0016DA  C02C  F014         	movff	??i2_dtoa+2,i2abs@a+1
  4809  0016DE  EC08  F013         	call	i2_abs	;wreg free
  4810  0016E2  5013               	movf	?i2_abs,w,c
  4811  0016E4  0F30               	addlw	48
  4812  0016E6  6EDF               	movwf	indf2,c
  4813                           
  4814                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  4815  0016E8  0634               	decf	i2dtoa@p,f,c
  4816  0016EA  A0D8               	btfss	status,0,c
  4817  0016EC  0635               	decf	i2dtoa@p+1,f,c
  4818                           
  4819                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  4820  0016EE  0636               	decf	i2dtoa@w,f,c
  4821  0016F0  A0D8               	btfss	status,0,c
  4822  0016F2  0637               	decf	i2dtoa@w+1,f,c
  4823                           
  4824                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  4825  0016F4  C03A  F001         	movff	i2dtoa@n,i2___aodiv@dividend
  4826  0016F8  C03B  F002         	movff	i2dtoa@n+1,i2___aodiv@dividend+1
  4827  0016FC  C03C  F003         	movff	i2dtoa@n+2,i2___aodiv@dividend+2
  4828  001700  C03D  F004         	movff	i2dtoa@n+3,i2___aodiv@dividend+3
  4829  001704  C03E  F005         	movff	i2dtoa@n+4,i2___aodiv@dividend+4
  4830  001708  C03F  F006         	movff	i2dtoa@n+5,i2___aodiv@dividend+5
  4831  00170C  C040  F007         	movff	i2dtoa@n+6,i2___aodiv@dividend+6
  4832  001710  C041  F008         	movff	i2dtoa@n+7,i2___aodiv@dividend+7
  4833  001714  0E0A               	movlw	10
  4834  001716  6E09               	movwf	i2___aodiv@divisor,c
  4835  001718  0E00               	movlw	0
  4836  00171A  6E0A               	movwf	i2___aodiv@divisor+1,c
  4837  00171C  0E00               	movlw	0
  4838  00171E  6E0B               	movwf	i2___aodiv@divisor+2,c
  4839  001720  0E00               	movlw	0
  4840  001722  6E0C               	movwf	i2___aodiv@divisor+3,c
  4841  001724  0E00               	movlw	0
  4842  001726  6E0D               	movwf	i2___aodiv@divisor+4,c
  4843  001728  0E00               	movlw	0
  4844  00172A  6E0E               	movwf	i2___aodiv@divisor+5,c
  4845  00172C  0E00               	movlw	0
  4846  00172E  6E0F               	movwf	i2___aodiv@divisor+6,c
  4847  001730  0E00               	movlw	0
  4848  001732  6E10               	movwf	i2___aodiv@divisor+7,c
  4849  001734  EC2A  F00E         	call	i2___aodiv	;wreg free
  4850  001738  C001  F03A         	movff	?i2___aodiv,i2dtoa@n
  4851  00173C  C002  F03B         	movff	?i2___aodiv+1,i2dtoa@n+1
  4852  001740  C003  F03C         	movff	?i2___aodiv+2,i2dtoa@n+2
  4853  001744  C004  F03D         	movff	?i2___aodiv+3,i2dtoa@n+3
  4854  001748  C005  F03E         	movff	?i2___aodiv+4,i2dtoa@n+4
  4855  00174C  C006  F03F         	movff	?i2___aodiv+5,i2dtoa@n+5
  4856  001750  C007  F040         	movff	?i2___aodiv+6,i2dtoa@n+6
  4857  001754  C008  F041         	movff	?i2___aodiv+7,i2dtoa@n+7
  4858  001758                     i2l2415:
  4859                           
  4860                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4861  001758  BE43               	btfsc	i2dtoa@i+1,7,c
  4862  00175A  D020               	goto	i2u195_40
  4863  00175C  5043               	movf	i2dtoa@i+1,w,c
  4864  00175E  E103               	bnz	i2u191_40
  4865  001760  0442               	decf	i2dtoa@i,w,c
  4866  001762  A0D8               	btfss	status,0,c
  4867  001764  D01B               	goto	i2u195_40
  4868  001766                     i2u191_40:
  4869  001766  503A               	movf	i2dtoa@n,w,c
  4870  001768  103B               	iorwf	i2dtoa@n+1,w,c
  4871  00176A  103C               	iorwf	i2dtoa@n+2,w,c
  4872  00176C  103D               	iorwf	i2dtoa@n+3,w,c
  4873  00176E  103E               	iorwf	i2dtoa@n+4,w,c
  4874  001770  103F               	iorwf	i2dtoa@n+5,w,c
  4875  001772  1040               	iorwf	i2dtoa@n+6,w,c
  4876  001774  1041               	iorwf	i2dtoa@n+7,w,c
  4877  001776  A4D8               	btfss	status,2,c
  4878  001778  D773               	goto	i2l2405
  4879  00177A  BE35               	btfsc	i2dtoa@p+1,7,c
  4880  00177C  D005               	goto	i2u193_40
  4881  00177E  5035               	movf	i2dtoa@p+1,w,c
  4882  001780  E102               	bnz	i2u193_41
  4883  001782  0434               	decf	i2dtoa@p,w,c
  4884  001784  B0D8               	btfsc	status,0,c
  4885  001786                     i2u193_41:
  4886  001786  D76C               	goto	i2l2405
  4887  001788                     i2u193_40:
  4888  001788  BE37               	btfsc	i2dtoa@w+1,7,c
  4889  00178A  D008               	goto	i2u195_40
  4890  00178C  5037               	movf	i2dtoa@w+1,w,c
  4891  00178E  E103               	bnz	i2u194_40
  4892  001790  0436               	decf	i2dtoa@w,w,c
  4893  001792  A0D8               	btfss	status,0,c
  4894  001794  D003               	goto	i2u195_40
  4895  001796                     i2u194_40:
  4896  001796  0100               	movlb	0	; () banked
  4897  001798  B3F1               	btfsc	_flags& (0+255),1,b
  4898  00179A  D762               	goto	i2l2405
  4899  00179C                     i2u195_40:
  4900                           
  4901                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  4902  00179C  5038               	movf	i2dtoa@s,w,c
  4903  00179E  1039               	iorwf	i2dtoa@s+1,w,c
  4904  0017A0  A4D8               	btfss	status,2,c
  4905  0017A2  D003               	goto	i2u197_40
  4906  0017A4  0100               	movlb	0	; () banked
  4907  0017A6  A5F1               	btfss	_flags& (0+255),2,b
  4908  0017A8  D017               	goto	i2l2439
  4909  0017AA                     i2u197_40:
  4910                           
  4911                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  4912  0017AA  0642               	decf	i2dtoa@i,f,c
  4913  0017AC  A0D8               	btfss	status,0,c
  4914  0017AE  0643               	decf	i2dtoa@i+1,f,c
  4915                           
  4916                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  4917  0017B0  5038               	movf	i2dtoa@s,w,c
  4918  0017B2  1039               	iorwf	i2dtoa@s+1,w,c
  4919  0017B4  A4D8               	btfss	status,2,c
  4920  0017B6  D004               	goto	i2l2435
  4921  0017B8  0E00               	movlw	0
  4922  0017BA  6E33               	movwf	i2_dtoa$629+1,c
  4923  0017BC  0E2B               	movlw	43
  4924  0017BE  D003               	goto	L2
  4925  0017C0                     i2l2435:
  4926  0017C0  0E00               	movlw	0
  4927  0017C2  6E33               	movwf	i2_dtoa$629+1,c
  4928  0017C4  0E2D               	movlw	45
  4929  0017C6                     L2:
  4930  0017C6  6E32               	movwf	i2_dtoa$629,c
  4931  0017C8  0E00               	movlw	low _dbuf
  4932  0017CA  2442               	addwf	i2dtoa@i,w,c
  4933  0017CC  6ED9               	movwf	fsr2l,c
  4934  0017CE  0E01               	movlw	high _dbuf
  4935  0017D0  2043               	addwfc	i2dtoa@i+1,w,c
  4936  0017D2  6EDA               	movwf	fsr2h,c
  4937  0017D4  C032  FFDF         	movff	i2_dtoa$629,indf2
  4938  0017D8                     i2l2439:
  4939                           
  4940                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  4941  0017D8  C020  F015         	movff	i2dtoa@fp,i2pad@fp
  4942  0017DC  C021  F016         	movff	i2dtoa@fp+1,i2pad@fp+1
  4943  0017E0  0E00               	movlw	low _dbuf
  4944  0017E2  2442               	addwf	i2dtoa@i,w,c
  4945  0017E4  6E17               	movwf	i2pad@buf,c
  4946  0017E6  0E01               	movlw	high _dbuf
  4947  0017E8  2043               	addwfc	i2dtoa@i+1,w,c
  4948  0017EA  6E18               	movwf	i2pad@buf+1,c
  4949  0017EC  C036  F019         	movff	i2dtoa@w,i2pad@p
  4950  0017F0  C037  F01A         	movff	i2dtoa@w+1,i2pad@p+1
  4951  0017F4  EC0F  F011         	call	i2_pad	;wreg free
  4952  0017F8  C015  F020         	movff	?i2_pad,?i2_dtoa
  4953  0017FC  C016  F021         	movff	?i2_pad+1,?i2_dtoa+1
  4954  001800  0012               	return		;funcret
  4955  001802                     __end_ofi2_dtoa:
  4956                           	opt callstack 0
  4957                           
  4958 ;; *************** function i2_pad *****************
  4959 ;; Defined at:
  4960 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4961 ;; Parameters:    Size  Location     Type
  4962 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  4963 ;;		 -> NULL(0), 
  4964 ;;  buf             2   22[COMRAM] PTR unsigned char 
  4965 ;;		 -> dbuf(32), 
  4966 ;;  p               2   24[COMRAM] int 
  4967 ;; Auto vars:     Size  Location     Type
  4968 ;;  pad             2   29[COMRAM] int 
  4969 ;;  pad             2   27[COMRAM] int 
  4970 ;; Return value:  Size  Location     Type
  4971 ;;                  2   20[COMRAM] int 
  4972 ;; Registers used:
  4973 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4974 ;; Tracked objects:
  4975 ;;		On entry : 0/0
  4976 ;;		On exit  : 0/0
  4977 ;;		Unchanged: 0/0
  4978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4979 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4980 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4981 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4982 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4983 ;;Total ram usage:       11 bytes
  4984 ;; Hardware stack levels used:    1
  4985 ;; Hardware stack levels required when called:    6
  4986 ;; This function calls:
  4987 ;;		i2_fputc
  4988 ;;		i2_fputs
  4989 ;;		i2_strlen
  4990 ;; This function is called by:
  4991 ;;		i2_dtoa
  4992 ;; This function uses a non-reentrant model
  4993 ;;
  4994                           
  4995                           	psect	text25
  4996  00221E                     __ptext25:
  4997                           	opt callstack 0
  4998  00221E                     i2_pad:
  4999                           	opt callstack 7
  5000                           
  5001                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  5002                           
  5003                           ;incstack = 0
  5004  00221E  0100               	movlb	0	; () banked
  5005  002220  A1F1               	btfss	_flags& (0+255),0,b
  5006  002222  D00A               	goto	i2l2237
  5007                           
  5008                           ; BSR set to: 0
  5009                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  5010  002224  C017  F00E         	movff	i2pad@buf,i2fputs@s
  5011  002228  C018  F00F         	movff	i2pad@buf+1,i2fputs@s+1
  5012  00222C  C015  F010         	movff	i2pad@fp,i2fputs@fp
  5013  002230  C016  F011         	movff	i2pad@fp+1,i2fputs@fp+1
  5014  002234  ECB7  F012         	call	i2_fputs	;wreg free
  5015  002238                     i2l2237:
  5016                           
  5017                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  5018  002238  BE1A               	btfsc	i2pad@p+1,7,c
  5019  00223A  D005               	goto	i2l2241
  5020  00223C  C019  F01E         	movff	i2pad@p,i2pad@w
  5021  002240  C01A  F01F         	movff	i2pad@p+1,i2pad@w+1
  5022  002244  D004               	goto	i2l228
  5023  002246                     i2l2241:
  5024  002246  0E00               	movlw	0
  5025  002248  6E1F               	movwf	i2pad@w+1,c
  5026  00224A  0E00               	movlw	0
  5027  00224C  6E1E               	movwf	i2pad@w,c
  5028  00224E                     i2l228:
  5029                           
  5030                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  5031  00224E  0E00               	movlw	0
  5032  002250  6E1D               	movwf	i2pad@i+1,c
  5033  002252  0E00               	movlw	0
  5034  002254  6E1C               	movwf	i2pad@i,c
  5035                           
  5036                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5037  002256  D00C               	goto	i2l2247
  5038  002258                     i2l2243:
  5039                           
  5040                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  5041  002258  0E00               	movlw	0
  5042  00225A  6E06               	movwf	i2fputc@c+1,c
  5043  00225C  0E20               	movlw	32
  5044  00225E  6E05               	movwf	i2fputc@c,c
  5045  002260  C015  F007         	movff	i2pad@fp,i2fputc@fp
  5046  002264  C016  F008         	movff	i2pad@fp+1,i2fputc@fp+1
  5047  002268  EC0D  F012         	call	i2_fputc	;wreg free
  5048                           
  5049                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  5050  00226C  4A1C               	infsnz	i2pad@i,f,c
  5051  00226E  2A1D               	incf	i2pad@i+1,f,c
  5052  002270                     i2l2247:
  5053                           
  5054                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5055  002270  501E               	movf	i2pad@w,w,c
  5056  002272  5C1C               	subwf	i2pad@i,w,c
  5057  002274  501D               	movf	i2pad@i+1,w,c
  5058  002276  0A80               	xorlw	128
  5059  002278  6E1B               	movwf	??i2_pad& (0+255),c
  5060  00227A  501F               	movf	i2pad@w+1,w,c
  5061  00227C  0A80               	xorlw	128
  5062  00227E  581B               	subwfb	??i2_pad& (0+255),w,c
  5063  002280  A0D8               	btfss	status,0,c
  5064  002282  D7EA               	goto	i2l2243
  5065                           
  5066                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  5067  002284  0100               	movlb	0	; () banked
  5068  002286  B1F1               	btfsc	_flags& (0+255),0,b
  5069  002288  D00A               	goto	i2l2251
  5070                           
  5071                           ; BSR set to: 0
  5072                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  5073  00228A  C017  F00E         	movff	i2pad@buf,i2fputs@s
  5074  00228E  C018  F00F         	movff	i2pad@buf+1,i2fputs@s+1
  5075  002292  C015  F010         	movff	i2pad@fp,i2fputs@fp
  5076  002296  C016  F011         	movff	i2pad@fp+1,i2fputs@fp+1
  5077  00229A  ECB7  F012         	call	i2_fputs	;wreg free
  5078  00229E                     i2l2251:
  5079                           
  5080                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  5081  00229E  C017  F001         	movff	i2pad@buf,i2strlen@s
  5082  0022A2  C018  F002         	movff	i2pad@buf+1,i2strlen@s+1
  5083  0022A6  EC66  F013         	call	i2_strlen	;wreg free
  5084  0022AA  501E               	movf	i2pad@w,w,c
  5085  0022AC  2401               	addwf	?i2_strlen,w,c
  5086  0022AE  6E15               	movwf	?i2_pad,c
  5087  0022B0  501F               	movf	i2pad@w+1,w,c
  5088  0022B2  2002               	addwfc	?i2_strlen+1,w,c
  5089  0022B4  6E16               	movwf	?i2_pad+1,c
  5090  0022B6  0012               	return		;funcret
  5091  0022B8                     __end_ofi2_pad:
  5092                           	opt callstack 0
  5093                           
  5094 ;; *************** function i2_strlen *****************
  5095 ;; Defined at:
  5096 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  5097 ;; Parameters:    Size  Location     Type
  5098 ;;  s               2    0[COMRAM] PTR const unsigned char 
  5099 ;;		 -> dbuf(32), 
  5100 ;; Auto vars:     Size  Location     Type
  5101 ;;  strlen          2    2[COMRAM] PTR const unsigned char 
  5102 ;;		 -> dbuf(32), 
  5103 ;; Return value:  Size  Location     Type
  5104 ;;                  2    0[COMRAM] unsigned int 
  5105 ;; Registers used:
  5106 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5107 ;; Tracked objects:
  5108 ;;		On entry : 0/0
  5109 ;;		On exit  : 0/0
  5110 ;;		Unchanged: 0/0
  5111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5112 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5113 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5115 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5116 ;;Total ram usage:        4 bytes
  5117 ;; Hardware stack levels used:    1
  5118 ;; This function calls:
  5119 ;;		Nothing
  5120 ;; This function is called by:
  5121 ;;		i2_pad
  5122 ;; This function uses a non-reentrant model
  5123 ;;
  5124                           
  5125                           	psect	text26
  5126  0026CC                     __ptext26:
  5127                           	opt callstack 0
  5128  0026CC                     i2_strlen:
  5129                           	opt callstack 12
  5130                           
  5131                           ;incstack = 0
  5132  0026CC  C001  F003         	movff	i2strlen@s,i2strlen@a
  5133  0026D0  C002  F004         	movff	i2strlen@s+1,i2strlen@a+1
  5134  0026D4  D002               	goto	i2l2165
  5135  0026D6                     i2l2163:
  5136  0026D6  4A01               	infsnz	i2strlen@s,f,c
  5137  0026D8  2A02               	incf	i2strlen@s+1,f,c
  5138  0026DA                     i2l2165:
  5139  0026DA  C001  FFD9         	movff	i2strlen@s,fsr2l
  5140  0026DE  C002  FFDA         	movff	i2strlen@s+1,fsr2h
  5141  0026E2  50DF               	movf	indf2,w,c
  5142  0026E4  A4D8               	btfss	status,2,c
  5143  0026E6  D7F7               	goto	i2l2163
  5144  0026E8  5003               	movf	i2strlen@a,w,c
  5145  0026EA  5C01               	subwf	i2strlen@s,w,c
  5146  0026EC  6E01               	movwf	?i2_strlen,c
  5147  0026EE  5004               	movf	i2strlen@a+1,w,c
  5148  0026F0  5802               	subwfb	i2strlen@s+1,w,c
  5149  0026F2  6E02               	movwf	?i2_strlen+1,c
  5150  0026F4  0012               	return		;funcret
  5151  0026F6                     __end_ofi2_strlen:
  5152                           	opt callstack 0
  5153                           
  5154 ;; *************** function i2_fputs *****************
  5155 ;; Defined at:
  5156 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  5157 ;; Parameters:    Size  Location     Type
  5158 ;;  s               2   13[COMRAM] PTR const unsigned char 
  5159 ;;		 -> dbuf(32), 
  5160 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  5161 ;;		 -> NULL(0), 
  5162 ;; Auto vars:     Size  Location     Type
  5163 ;;  fputs           2   18[COMRAM] int 
  5164 ;;  fputs           1   17[COMRAM] unsigned char 
  5165 ;; Return value:  Size  Location     Type
  5166 ;;                  2   13[COMRAM] int 
  5167 ;; Registers used:
  5168 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5169 ;; Tracked objects:
  5170 ;;		On entry : 0/0
  5171 ;;		On exit  : 0/0
  5172 ;;		Unchanged: 0/0
  5173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5174 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5175 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5177 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5178 ;;Total ram usage:        7 bytes
  5179 ;; Hardware stack levels used:    1
  5180 ;; Hardware stack levels required when called:    5
  5181 ;; This function calls:
  5182 ;;		i2_fputc
  5183 ;; This function is called by:
  5184 ;;		i2_pad
  5185 ;; This function uses a non-reentrant model
  5186 ;;
  5187                           
  5188                           	psect	text27
  5189  00256E                     __ptext27:
  5190                           	opt callstack 0
  5191  00256E                     i2_fputs:
  5192                           	opt callstack 7
  5193                           
  5194                           ;incstack = 0
  5195  00256E  0E00               	movlw	0
  5196  002570  6E14               	movwf	i2fputs@i+1,c
  5197  002572  0E00               	movlw	0
  5198  002574  6E13               	movwf	i2fputs@i,c
  5199  002576  D00B               	goto	i2l2159
  5200  002578                     i2l2155:
  5201  002578  C012  F005         	movff	i2fputs@c,i2fputc@c
  5202  00257C  6A06               	clrf	i2fputc@c+1,c
  5203  00257E  C010  F007         	movff	i2fputs@fp,i2fputc@fp
  5204  002582  C011  F008         	movff	i2fputs@fp+1,i2fputc@fp+1
  5205  002586  EC0D  F012         	call	i2_fputc	;wreg free
  5206  00258A  4A13               	infsnz	i2fputs@i,f,c
  5207  00258C  2A14               	incf	i2fputs@i+1,f,c
  5208  00258E                     i2l2159:
  5209  00258E  5013               	movf	i2fputs@i,w,c
  5210  002590  240E               	addwf	i2fputs@s,w,c
  5211  002592  6ED9               	movwf	fsr2l,c
  5212  002594  5014               	movf	i2fputs@i+1,w,c
  5213  002596  200F               	addwfc	i2fputs@s+1,w,c
  5214  002598  6EDA               	movwf	fsr2h,c
  5215  00259A  50DF               	movf	indf2,w,c
  5216  00259C  6E12               	movwf	i2fputs@c,c
  5217  00259E  5012               	movf	i2fputs@c,w,c
  5218  0025A0  B4D8               	btfsc	status,2,c
  5219  0025A2  0012               	return	
  5220  0025A4  D7E9               	goto	i2l2155
  5221  0025A6                     __end_ofi2_fputs:
  5222                           	opt callstack 0
  5223                           
  5224 ;; *************** function i2_fputc *****************
  5225 ;; Defined at:
  5226 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  5227 ;; Parameters:    Size  Location     Type
  5228 ;;  c               2    4[COMRAM] int 
  5229 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  5230 ;;		 -> NULL(0), 
  5231 ;; Auto vars:     Size  Location     Type
  5232 ;;		None
  5233 ;; Return value:  Size  Location     Type
  5234 ;;                  2    4[COMRAM] int 
  5235 ;; Registers used:
  5236 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5237 ;; Tracked objects:
  5238 ;;		On entry : 0/0
  5239 ;;		On exit  : 0/0
  5240 ;;		Unchanged: 0/0
  5241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5242 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5244 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5245 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5246 ;;Total ram usage:        9 bytes
  5247 ;; Hardware stack levels used:    1
  5248 ;; Hardware stack levels required when called:    4
  5249 ;; This function calls:
  5250 ;;		i2_putch
  5251 ;; This function is called by:
  5252 ;;		i2_pad
  5253 ;;		i2_vfpfcnvrt
  5254 ;;		i2_fputs
  5255 ;; This function uses a non-reentrant model
  5256 ;;
  5257                           
  5258                           	psect	text28
  5259  00241A                     __ptext28:
  5260                           	opt callstack 0
  5261  00241A                     i2_fputc:
  5262                           	opt callstack 10
  5263                           
  5264                           ;incstack = 0
  5265  00241A  5007               	movf	i2fputc@fp,w,c
  5266  00241C  1008               	iorwf	i2fputc@fp+1,w,c
  5267  00241E  B4D8               	btfsc	status,2,c
  5268  002420  D004               	goto	i2u124_40
  5269  002422  5007               	movf	i2fputc@fp,w,c
  5270  002424  1008               	iorwf	i2fputc@fp+1,w,c
  5271  002426  A4D8               	btfss	status,2,c
  5272  002428  D004               	goto	i2l2039
  5273  00242A                     i2u124_40:
  5274  00242A  5005               	movf	i2fputc@c,w,c
  5275  00242C  ECF2  F013         	call	i2_putch
  5276  002430  0012               	return	
  5277  002432                     i2l2039:
  5278  002432  EE20 F004          	lfsr	2,4
  5279  002436  5007               	movf	i2fputc@fp,w,c
  5280  002438  26D9               	addwf	fsr2l,f,c
  5281  00243A  5008               	movf	i2fputc@fp+1,w,c
  5282  00243C  22DA               	addwfc	fsr2h,f,c
  5283  00243E  50DE               	movf	postinc2,w,c
  5284  002440  10DE               	iorwf	postinc2,w,c
  5285  002442  B4D8               	btfsc	status,2,c
  5286  002444  D016               	goto	i2u126_40
  5287  002446  EE20 F004          	lfsr	2,4
  5288  00244A  5007               	movf	i2fputc@fp,w,c
  5289  00244C  26D9               	addwf	fsr2l,f,c
  5290  00244E  5008               	movf	i2fputc@fp+1,w,c
  5291  002450  22DA               	addwfc	fsr2h,f,c
  5292  002452  EE10 F002          	lfsr	1,2
  5293  002456  5007               	movf	i2fputc@fp,w,c
  5294  002458  26E1               	addwf	fsr1l,f,c
  5295  00245A  5008               	movf	i2fputc@fp+1,w,c
  5296  00245C  22E2               	addwfc	fsr1h,f,c
  5297  00245E  50DE               	movf	postinc2,w,c
  5298  002460  5CE6               	subwf	postinc1,w,c
  5299  002462  50E6               	movf	postinc1,w,c
  5300  002464  0A80               	xorlw	128
  5301  002466  6E0D               	movwf	(??i2_fputc+4)& (0+255),c
  5302  002468  50DE               	movf	postinc2,w,c
  5303  00246A  0A80               	xorlw	128
  5304  00246C  580D               	subwfb	(??i2_fputc+4)& (0+255),w,c
  5305  00246E  B0D8               	btfsc	status,0,c
  5306  002470  0012               	return	
  5307  002472                     i2u126_40:
  5308  002472  EE20 F002          	lfsr	2,2
  5309  002476  5007               	movf	i2fputc@fp,w,c
  5310  002478  26D9               	addwf	fsr2l,f,c
  5311  00247A  5008               	movf	i2fputc@fp+1,w,c
  5312  00247C  22DA               	addwfc	fsr2h,f,c
  5313  00247E  2ADE               	incf	postinc2,f,c
  5314  002480  0E00               	movlw	0
  5315  002482  22DD               	addwfc	postdec2,f,c
  5316  002484  0012               	return		;funcret
  5317  002486                     __end_ofi2_fputc:
  5318                           	opt callstack 0
  5319                           
  5320 ;; *************** function i2_putch *****************
  5321 ;; Defined at:
  5322 ;;		line 102 in file "lcd.c"
  5323 ;; Parameters:    Size  Location     Type
  5324 ;;  data            1    wreg     unsigned char 
  5325 ;; Auto vars:     Size  Location     Type
  5326 ;;  data            1    3[COMRAM] unsigned char 
  5327 ;; Return value:  Size  Location     Type
  5328 ;;                  1    wreg      void 
  5329 ;; Registers used:
  5330 ;;		wreg, status,2, status,0, cstack
  5331 ;; Tracked objects:
  5332 ;;		On entry : 0/0
  5333 ;;		On exit  : 0/0
  5334 ;;		Unchanged: 0/0
  5335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5337 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5339 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5340 ;;Total ram usage:        1 bytes
  5341 ;; Hardware stack levels used:    1
  5342 ;; Hardware stack levels required when called:    3
  5343 ;; This function calls:
  5344 ;;		i2_send_byte
  5345 ;; This function is called by:
  5346 ;;		i2_fputc
  5347 ;; This function uses a non-reentrant model
  5348 ;;
  5349                           
  5350                           	psect	text29
  5351  0027E4                     __ptext29:
  5352                           	opt callstack 0
  5353  0027E4                     i2_putch:
  5354                           	opt callstack 10
  5355                           
  5356                           ;incstack = 0
  5357                           ;i2putch@data stored from wreg
  5358  0027E4  6E04               	movwf	i2putch@data,c
  5359                           
  5360                           ;lcd.c: 103:     LATDbits.LATD2 = 1;
  5361  0027E6  848C               	bsf	3980,2,c	;volatile
  5362                           
  5363                           ;lcd.c: 104:     send_byte((unsigned char)data);
  5364  0027E8  5004               	movf	i2putch@data,w,c
  5365  0027EA  ECD9  F013         	call	i2_send_byte
  5366  0027EE  0012               	return		;funcret
  5367  0027F0                     __end_ofi2_putch:
  5368                           	opt callstack 0
  5369                           
  5370 ;; *************** function i2_abs *****************
  5371 ;; Defined at:
  5372 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  5373 ;; Parameters:    Size  Location     Type
  5374 ;;  a               2   18[COMRAM] int 
  5375 ;; Auto vars:     Size  Location     Type
  5376 ;;		None
  5377 ;; Return value:  Size  Location     Type
  5378 ;;                  2   18[COMRAM] int 
  5379 ;; Registers used:
  5380 ;;		wreg, status,2, status,0
  5381 ;; Tracked objects:
  5382 ;;		On entry : 0/0
  5383 ;;		On exit  : 0/0
  5384 ;;		Unchanged: 0/0
  5385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5386 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5388 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5389 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5390 ;;Total ram usage:        4 bytes
  5391 ;; Hardware stack levels used:    1
  5392 ;; This function calls:
  5393 ;;		Nothing
  5394 ;; This function is called by:
  5395 ;;		i2_dtoa
  5396 ;; This function uses a non-reentrant model
  5397 ;;
  5398                           
  5399                           	psect	text30
  5400  002610                     __ptext30:
  5401                           	opt callstack 0
  5402  002610                     i2_abs:
  5403                           	opt callstack 13
  5404                           
  5405                           ;incstack = 0
  5406  002610  BE14               	btfsc	i2abs@a+1,7,c
  5407  002612  D005               	goto	i2u179_40
  5408  002614  5014               	movf	i2abs@a+1,w,c
  5409  002616  E110               	bnz	i2l951
  5410  002618  0413               	decf	i2abs@a,w,c
  5411  00261A  B0D8               	btfsc	status,0,c
  5412  00261C  D00D               	goto	i2l951
  5413  00261E                     i2u179_40:
  5414  00261E  C013  F015         	movff	i2abs@a,??i2_abs
  5415  002622  C014  F016         	movff	i2abs@a+1,??i2_abs+1
  5416  002626  1E15               	comf	??i2_abs,f,c
  5417  002628  1E16               	comf	??i2_abs+1,f,c
  5418  00262A  4A15               	infsnz	??i2_abs,f,c
  5419  00262C  2A16               	incf	??i2_abs+1,f,c
  5420  00262E  C015  F013         	movff	??i2_abs,?i2_abs
  5421  002632  C016  F014         	movff	??i2_abs+1,?i2_abs+1
  5422  002636  0012               	return	
  5423  002638                     i2l951:
  5424  002638  C013  F013         	movff	i2abs@a,?i2_abs
  5425  00263C  C014  F014         	movff	i2abs@a+1,?i2_abs+1
  5426  002640  0012               	return		;funcret
  5427  002642                     __end_ofi2_abs:
  5428                           	opt callstack 0
  5429                           
  5430 ;; *************** function i2___aomod *****************
  5431 ;; Defined at:
  5432 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  5433 ;; Parameters:    Size  Location     Type
  5434 ;;  dividend        8    0[COMRAM] long long 
  5435 ;;  divisor         8    8[COMRAM] long long 
  5436 ;; Auto vars:     Size  Location     Type
  5437 ;;  __aomod         1   17[COMRAM] unsigned char 
  5438 ;;  __aomod         1   16[COMRAM] unsigned char 
  5439 ;; Return value:  Size  Location     Type
  5440 ;;                  8    0[COMRAM] long long 
  5441 ;; Registers used:
  5442 ;;		wreg, status,2, status,0
  5443 ;; Tracked objects:
  5444 ;;		On entry : 0/0
  5445 ;;		On exit  : 0/0
  5446 ;;		Unchanged: 0/0
  5447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5448 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5449 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5451 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5452 ;;Total ram usage:       18 bytes
  5453 ;; Hardware stack levels used:    1
  5454 ;; This function calls:
  5455 ;;		Nothing
  5456 ;; This function is called by:
  5457 ;;		i2_dtoa
  5458 ;; This function uses a non-reentrant model
  5459 ;;
  5460                           
  5461                           	psect	text31
  5462  001EC2                     __ptext31:
  5463                           	opt callstack 0
  5464  001EC2                     i2___aomod:
  5465                           	opt callstack 13
  5466                           
  5467                           ;incstack = 0
  5468  001EC2  0E00               	movlw	0
  5469  001EC4  6E12               	movwf	i2___aomod@sign,c
  5470  001EC6  AE08               	btfss	i2___aomod@dividend+7,7,c
  5471  001EC8  D012               	goto	i2l2307
  5472  001ECA  1E08               	comf	i2___aomod@dividend+7,f,c
  5473  001ECC  1E07               	comf	i2___aomod@dividend+6,f,c
  5474  001ECE  1E06               	comf	i2___aomod@dividend+5,f,c
  5475  001ED0  1E05               	comf	i2___aomod@dividend+4,f,c
  5476  001ED2  1E04               	comf	i2___aomod@dividend+3,f,c
  5477  001ED4  1E03               	comf	i2___aomod@dividend+2,f,c
  5478  001ED6  1E02               	comf	i2___aomod@dividend+1,f,c
  5479  001ED8  6C01               	negf	i2___aomod@dividend,c
  5480  001EDA  0E00               	movlw	0
  5481  001EDC  2202               	addwfc	i2___aomod@dividend+1,f,c
  5482  001EDE  2203               	addwfc	i2___aomod@dividend+2,f,c
  5483  001EE0  2204               	addwfc	i2___aomod@dividend+3,f,c
  5484  001EE2  2205               	addwfc	i2___aomod@dividend+4,f,c
  5485  001EE4  2206               	addwfc	i2___aomod@dividend+5,f,c
  5486  001EE6  2207               	addwfc	i2___aomod@dividend+6,f,c
  5487  001EE8  2208               	addwfc	i2___aomod@dividend+7,f,c
  5488  001EEA  0E01               	movlw	1
  5489  001EEC  6E12               	movwf	i2___aomod@sign,c
  5490  001EEE                     i2l2307:
  5491  001EEE  AE10               	btfss	i2___aomod@divisor+7,7,c
  5492  001EF0  D010               	goto	i2l2311
  5493  001EF2  1E10               	comf	i2___aomod@divisor+7,f,c
  5494  001EF4  1E0F               	comf	i2___aomod@divisor+6,f,c
  5495  001EF6  1E0E               	comf	i2___aomod@divisor+5,f,c
  5496  001EF8  1E0D               	comf	i2___aomod@divisor+4,f,c
  5497  001EFA  1E0C               	comf	i2___aomod@divisor+3,f,c
  5498  001EFC  1E0B               	comf	i2___aomod@divisor+2,f,c
  5499  001EFE  1E0A               	comf	i2___aomod@divisor+1,f,c
  5500  001F00  6C09               	negf	i2___aomod@divisor,c
  5501  001F02  0E00               	movlw	0
  5502  001F04  220A               	addwfc	i2___aomod@divisor+1,f,c
  5503  001F06  220B               	addwfc	i2___aomod@divisor+2,f,c
  5504  001F08  220C               	addwfc	i2___aomod@divisor+3,f,c
  5505  001F0A  220D               	addwfc	i2___aomod@divisor+4,f,c
  5506  001F0C  220E               	addwfc	i2___aomod@divisor+5,f,c
  5507  001F0E  220F               	addwfc	i2___aomod@divisor+6,f,c
  5508  001F10  2210               	addwfc	i2___aomod@divisor+7,f,c
  5509  001F12                     i2l2311:
  5510  001F12  5009               	movf	i2___aomod@divisor,w,c
  5511  001F14  100A               	iorwf	i2___aomod@divisor+1,w,c
  5512  001F16  100B               	iorwf	i2___aomod@divisor+2,w,c
  5513  001F18  100C               	iorwf	i2___aomod@divisor+3,w,c
  5514  001F1A  100D               	iorwf	i2___aomod@divisor+4,w,c
  5515  001F1C  100E               	iorwf	i2___aomod@divisor+5,w,c
  5516  001F1E  100F               	iorwf	i2___aomod@divisor+6,w,c
  5517  001F20  1010               	iorwf	i2___aomod@divisor+7,w,c
  5518  001F22  B4D8               	btfsc	status,2,c
  5519  001F24  D03C               	goto	i2l2327
  5520  001F26  0E01               	movlw	1
  5521  001F28  6E11               	movwf	i2___aomod@counter,c
  5522  001F2A  D00A               	goto	i2l2317
  5523  001F2C                     i2l2315:
  5524  001F2C  90D8               	bcf	status,0,c
  5525  001F2E  3609               	rlcf	i2___aomod@divisor,f,c
  5526  001F30  360A               	rlcf	i2___aomod@divisor+1,f,c
  5527  001F32  360B               	rlcf	i2___aomod@divisor+2,f,c
  5528  001F34  360C               	rlcf	i2___aomod@divisor+3,f,c
  5529  001F36  360D               	rlcf	i2___aomod@divisor+4,f,c
  5530  001F38  360E               	rlcf	i2___aomod@divisor+5,f,c
  5531  001F3A  360F               	rlcf	i2___aomod@divisor+6,f,c
  5532  001F3C  3610               	rlcf	i2___aomod@divisor+7,f,c
  5533  001F3E  2A11               	incf	i2___aomod@counter,f,c
  5534  001F40                     i2l2317:
  5535  001F40  AE10               	btfss	i2___aomod@divisor+7,7,c
  5536  001F42  D7F4               	goto	i2l2315
  5537  001F44                     i2u176_40:
  5538  001F44  5009               	movf	i2___aomod@divisor,w,c
  5539  001F46  5C01               	subwf	i2___aomod@dividend,w,c
  5540  001F48  500A               	movf	i2___aomod@divisor+1,w,c
  5541  001F4A  5802               	subwfb	i2___aomod@dividend+1,w,c
  5542  001F4C  500B               	movf	i2___aomod@divisor+2,w,c
  5543  001F4E  5803               	subwfb	i2___aomod@dividend+2,w,c
  5544  001F50  500C               	movf	i2___aomod@divisor+3,w,c
  5545  001F52  5804               	subwfb	i2___aomod@dividend+3,w,c
  5546  001F54  500D               	movf	i2___aomod@divisor+4,w,c
  5547  001F56  5805               	subwfb	i2___aomod@dividend+4,w,c
  5548  001F58  500E               	movf	i2___aomod@divisor+5,w,c
  5549  001F5A  5806               	subwfb	i2___aomod@dividend+5,w,c
  5550  001F5C  500F               	movf	i2___aomod@divisor+6,w,c
  5551  001F5E  5807               	subwfb	i2___aomod@dividend+6,w,c
  5552  001F60  5010               	movf	i2___aomod@divisor+7,w,c
  5553  001F62  5808               	subwfb	i2___aomod@dividend+7,w,c
  5554  001F64  A0D8               	btfss	status,0,c
  5555  001F66  D010               	goto	i2l2323
  5556  001F68  5009               	movf	i2___aomod@divisor,w,c
  5557  001F6A  5E01               	subwf	i2___aomod@dividend,f,c
  5558  001F6C  500A               	movf	i2___aomod@divisor+1,w,c
  5559  001F6E  5A02               	subwfb	i2___aomod@dividend+1,f,c
  5560  001F70  500B               	movf	i2___aomod@divisor+2,w,c
  5561  001F72  5A03               	subwfb	i2___aomod@dividend+2,f,c
  5562  001F74  500C               	movf	i2___aomod@divisor+3,w,c
  5563  001F76  5A04               	subwfb	i2___aomod@dividend+3,f,c
  5564  001F78  500D               	movf	i2___aomod@divisor+4,w,c
  5565  001F7A  5A05               	subwfb	i2___aomod@dividend+4,f,c
  5566  001F7C  500E               	movf	i2___aomod@divisor+5,w,c
  5567  001F7E  5A06               	subwfb	i2___aomod@dividend+5,f,c
  5568  001F80  500F               	movf	i2___aomod@divisor+6,w,c
  5569  001F82  5A07               	subwfb	i2___aomod@dividend+6,f,c
  5570  001F84  5010               	movf	i2___aomod@divisor+7,w,c
  5571  001F86  5A08               	subwfb	i2___aomod@dividend+7,f,c
  5572  001F88                     i2l2323:
  5573  001F88  90D8               	bcf	status,0,c
  5574  001F8A  3210               	rrcf	i2___aomod@divisor+7,f,c
  5575  001F8C  320F               	rrcf	i2___aomod@divisor+6,f,c
  5576  001F8E  320E               	rrcf	i2___aomod@divisor+5,f,c
  5577  001F90  320D               	rrcf	i2___aomod@divisor+4,f,c
  5578  001F92  320C               	rrcf	i2___aomod@divisor+3,f,c
  5579  001F94  320B               	rrcf	i2___aomod@divisor+2,f,c
  5580  001F96  320A               	rrcf	i2___aomod@divisor+1,f,c
  5581  001F98  3209               	rrcf	i2___aomod@divisor,f,c
  5582  001F9A  2E11               	decfsz	i2___aomod@counter,f,c
  5583  001F9C  D7D3               	goto	i2u176_40
  5584  001F9E                     i2l2327:
  5585  001F9E  5012               	movf	i2___aomod@sign,w,c
  5586  001FA0  B4D8               	btfsc	status,2,c
  5587  001FA2  D010               	goto	i2l2331
  5588  001FA4  1E08               	comf	i2___aomod@dividend+7,f,c
  5589  001FA6  1E07               	comf	i2___aomod@dividend+6,f,c
  5590  001FA8  1E06               	comf	i2___aomod@dividend+5,f,c
  5591  001FAA  1E05               	comf	i2___aomod@dividend+4,f,c
  5592  001FAC  1E04               	comf	i2___aomod@dividend+3,f,c
  5593  001FAE  1E03               	comf	i2___aomod@dividend+2,f,c
  5594  001FB0  1E02               	comf	i2___aomod@dividend+1,f,c
  5595  001FB2  6C01               	negf	i2___aomod@dividend,c
  5596  001FB4  0E00               	movlw	0
  5597  001FB6  2202               	addwfc	i2___aomod@dividend+1,f,c
  5598  001FB8  2203               	addwfc	i2___aomod@dividend+2,f,c
  5599  001FBA  2204               	addwfc	i2___aomod@dividend+3,f,c
  5600  001FBC  2205               	addwfc	i2___aomod@dividend+4,f,c
  5601  001FBE  2206               	addwfc	i2___aomod@dividend+5,f,c
  5602  001FC0  2207               	addwfc	i2___aomod@dividend+6,f,c
  5603  001FC2  2208               	addwfc	i2___aomod@dividend+7,f,c
  5604  001FC4                     i2l2331:
  5605  001FC4  C001  F001         	movff	i2___aomod@dividend,?i2___aomod
  5606  001FC8  C002  F002         	movff	i2___aomod@dividend+1,?i2___aomod+1
  5607  001FCC  C003  F003         	movff	i2___aomod@dividend+2,?i2___aomod+2
  5608  001FD0  C004  F004         	movff	i2___aomod@dividend+3,?i2___aomod+3
  5609  001FD4  C005  F005         	movff	i2___aomod@dividend+4,?i2___aomod+4
  5610  001FD8  C006  F006         	movff	i2___aomod@dividend+5,?i2___aomod+5
  5611  001FDC  C007  F007         	movff	i2___aomod@dividend+6,?i2___aomod+6
  5612  001FE0  C008  F008         	movff	i2___aomod@dividend+7,?i2___aomod+7
  5613  001FE4  0012               	return		;funcret
  5614  001FE6                     __end_ofi2___aomod:
  5615                           	opt callstack 0
  5616                           
  5617 ;; *************** function i2___aodiv *****************
  5618 ;; Defined at:
  5619 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  5620 ;; Parameters:    Size  Location     Type
  5621 ;;  dividend        8    0[COMRAM] long long 
  5622 ;;  divisor         8    8[COMRAM] long long 
  5623 ;; Auto vars:     Size  Location     Type
  5624 ;;  __aodiv         8   18[COMRAM] long long 
  5625 ;;  __aodiv         1   17[COMRAM] unsigned char 
  5626 ;;  __aodiv         1   16[COMRAM] unsigned char 
  5627 ;; Return value:  Size  Location     Type
  5628 ;;                  8    0[COMRAM] long long 
  5629 ;; Registers used:
  5630 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5631 ;; Tracked objects:
  5632 ;;		On entry : 0/0
  5633 ;;		On exit  : 0/0
  5634 ;;		Unchanged: 0/0
  5635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5636 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5637 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5639 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5640 ;;Total ram usage:       26 bytes
  5641 ;; Hardware stack levels used:    1
  5642 ;; This function calls:
  5643 ;;		Nothing
  5644 ;; This function is called by:
  5645 ;;		i2_dtoa
  5646 ;; This function uses a non-reentrant model
  5647 ;;
  5648                           
  5649                           	psect	text32
  5650  001C54                     __ptext32:
  5651                           	opt callstack 0
  5652  001C54                     i2___aodiv:
  5653                           	opt callstack 13
  5654                           
  5655                           ;incstack = 0
  5656  001C54  0E00               	movlw	0
  5657  001C56  6E12               	movwf	i2___aodiv@sign,c
  5658  001C58  AE10               	btfss	i2___aodiv@divisor+7,7,c
  5659  001C5A  D012               	goto	i2l2263
  5660  001C5C  1E10               	comf	i2___aodiv@divisor+7,f,c
  5661  001C5E  1E0F               	comf	i2___aodiv@divisor+6,f,c
  5662  001C60  1E0E               	comf	i2___aodiv@divisor+5,f,c
  5663  001C62  1E0D               	comf	i2___aodiv@divisor+4,f,c
  5664  001C64  1E0C               	comf	i2___aodiv@divisor+3,f,c
  5665  001C66  1E0B               	comf	i2___aodiv@divisor+2,f,c
  5666  001C68  1E0A               	comf	i2___aodiv@divisor+1,f,c
  5667  001C6A  6C09               	negf	i2___aodiv@divisor,c
  5668  001C6C  0E00               	movlw	0
  5669  001C6E  220A               	addwfc	i2___aodiv@divisor+1,f,c
  5670  001C70  220B               	addwfc	i2___aodiv@divisor+2,f,c
  5671  001C72  220C               	addwfc	i2___aodiv@divisor+3,f,c
  5672  001C74  220D               	addwfc	i2___aodiv@divisor+4,f,c
  5673  001C76  220E               	addwfc	i2___aodiv@divisor+5,f,c
  5674  001C78  220F               	addwfc	i2___aodiv@divisor+6,f,c
  5675  001C7A  2210               	addwfc	i2___aodiv@divisor+7,f,c
  5676  001C7C  0E01               	movlw	1
  5677  001C7E  6E12               	movwf	i2___aodiv@sign,c
  5678  001C80                     i2l2263:
  5679  001C80  AE08               	btfss	i2___aodiv@dividend+7,7,c
  5680  001C82  D012               	goto	i2l2269
  5681  001C84  1E08               	comf	i2___aodiv@dividend+7,f,c
  5682  001C86  1E07               	comf	i2___aodiv@dividend+6,f,c
  5683  001C88  1E06               	comf	i2___aodiv@dividend+5,f,c
  5684  001C8A  1E05               	comf	i2___aodiv@dividend+4,f,c
  5685  001C8C  1E04               	comf	i2___aodiv@dividend+3,f,c
  5686  001C8E  1E03               	comf	i2___aodiv@dividend+2,f,c
  5687  001C90  1E02               	comf	i2___aodiv@dividend+1,f,c
  5688  001C92  6C01               	negf	i2___aodiv@dividend,c
  5689  001C94  0E00               	movlw	0
  5690  001C96  2202               	addwfc	i2___aodiv@dividend+1,f,c
  5691  001C98  2203               	addwfc	i2___aodiv@dividend+2,f,c
  5692  001C9A  2204               	addwfc	i2___aodiv@dividend+3,f,c
  5693  001C9C  2205               	addwfc	i2___aodiv@dividend+4,f,c
  5694  001C9E  2206               	addwfc	i2___aodiv@dividend+5,f,c
  5695  001CA0  2207               	addwfc	i2___aodiv@dividend+6,f,c
  5696  001CA2  2208               	addwfc	i2___aodiv@dividend+7,f,c
  5697  001CA4  0E01               	movlw	1
  5698  001CA6  1A12               	xorwf	i2___aodiv@sign,f,c
  5699  001CA8                     i2l2269:
  5700  001CA8  EE20  F013         	lfsr	2,i2___aodiv@quotient
  5701  001CAC  0E07               	movlw	7
  5702  001CAE                     i2u168_41:
  5703  001CAE  6ADE               	clrf	postinc2,c
  5704  001CB0  06E8               	decf	wreg,f,c
  5705  001CB2  E2FD               	bc	i2u168_41
  5706  001CB4  5009               	movf	i2___aodiv@divisor,w,c
  5707  001CB6  100A               	iorwf	i2___aodiv@divisor+1,w,c
  5708  001CB8  100B               	iorwf	i2___aodiv@divisor+2,w,c
  5709  001CBA  100C               	iorwf	i2___aodiv@divisor+3,w,c
  5710  001CBC  100D               	iorwf	i2___aodiv@divisor+4,w,c
  5711  001CBE  100E               	iorwf	i2___aodiv@divisor+5,w,c
  5712  001CC0  100F               	iorwf	i2___aodiv@divisor+6,w,c
  5713  001CC2  1010               	iorwf	i2___aodiv@divisor+7,w,c
  5714  001CC4  B4D8               	btfsc	status,2,c
  5715  001CC6  D046               	goto	i2l2291
  5716  001CC8  0E01               	movlw	1
  5717  001CCA  6E11               	movwf	i2___aodiv@counter,c
  5718  001CCC  D00A               	goto	i2l2277
  5719  001CCE                     i2l2275:
  5720  001CCE  90D8               	bcf	status,0,c
  5721  001CD0  3609               	rlcf	i2___aodiv@divisor,f,c
  5722  001CD2  360A               	rlcf	i2___aodiv@divisor+1,f,c
  5723  001CD4  360B               	rlcf	i2___aodiv@divisor+2,f,c
  5724  001CD6  360C               	rlcf	i2___aodiv@divisor+3,f,c
  5725  001CD8  360D               	rlcf	i2___aodiv@divisor+4,f,c
  5726  001CDA  360E               	rlcf	i2___aodiv@divisor+5,f,c
  5727  001CDC  360F               	rlcf	i2___aodiv@divisor+6,f,c
  5728  001CDE  3610               	rlcf	i2___aodiv@divisor+7,f,c
  5729  001CE0  2A11               	incf	i2___aodiv@counter,f,c
  5730  001CE2                     i2l2277:
  5731  001CE2  AE10               	btfss	i2___aodiv@divisor+7,7,c
  5732  001CE4  D7F4               	goto	i2l2275
  5733  001CE6                     i2u170_40:
  5734  001CE6  90D8               	bcf	status,0,c
  5735  001CE8  3613               	rlcf	i2___aodiv@quotient,f,c
  5736  001CEA  3614               	rlcf	i2___aodiv@quotient+1,f,c
  5737  001CEC  3615               	rlcf	i2___aodiv@quotient+2,f,c
  5738  001CEE  3616               	rlcf	i2___aodiv@quotient+3,f,c
  5739  001CF0  3617               	rlcf	i2___aodiv@quotient+4,f,c
  5740  001CF2  3618               	rlcf	i2___aodiv@quotient+5,f,c
  5741  001CF4  3619               	rlcf	i2___aodiv@quotient+6,f,c
  5742  001CF6  361A               	rlcf	i2___aodiv@quotient+7,f,c
  5743  001CF8  5009               	movf	i2___aodiv@divisor,w,c
  5744  001CFA  5C01               	subwf	i2___aodiv@dividend,w,c
  5745  001CFC  500A               	movf	i2___aodiv@divisor+1,w,c
  5746  001CFE  5802               	subwfb	i2___aodiv@dividend+1,w,c
  5747  001D00  500B               	movf	i2___aodiv@divisor+2,w,c
  5748  001D02  5803               	subwfb	i2___aodiv@dividend+2,w,c
  5749  001D04  500C               	movf	i2___aodiv@divisor+3,w,c
  5750  001D06  5804               	subwfb	i2___aodiv@dividend+3,w,c
  5751  001D08  500D               	movf	i2___aodiv@divisor+4,w,c
  5752  001D0A  5805               	subwfb	i2___aodiv@dividend+4,w,c
  5753  001D0C  500E               	movf	i2___aodiv@divisor+5,w,c
  5754  001D0E  5806               	subwfb	i2___aodiv@dividend+5,w,c
  5755  001D10  500F               	movf	i2___aodiv@divisor+6,w,c
  5756  001D12  5807               	subwfb	i2___aodiv@dividend+6,w,c
  5757  001D14  5010               	movf	i2___aodiv@divisor+7,w,c
  5758  001D16  5808               	subwfb	i2___aodiv@dividend+7,w,c
  5759  001D18  A0D8               	btfss	status,0,c
  5760  001D1A  D011               	goto	i2l2287
  5761  001D1C  5009               	movf	i2___aodiv@divisor,w,c
  5762  001D1E  5E01               	subwf	i2___aodiv@dividend,f,c
  5763  001D20  500A               	movf	i2___aodiv@divisor+1,w,c
  5764  001D22  5A02               	subwfb	i2___aodiv@dividend+1,f,c
  5765  001D24  500B               	movf	i2___aodiv@divisor+2,w,c
  5766  001D26  5A03               	subwfb	i2___aodiv@dividend+2,f,c
  5767  001D28  500C               	movf	i2___aodiv@divisor+3,w,c
  5768  001D2A  5A04               	subwfb	i2___aodiv@dividend+3,f,c
  5769  001D2C  500D               	movf	i2___aodiv@divisor+4,w,c
  5770  001D2E  5A05               	subwfb	i2___aodiv@dividend+4,f,c
  5771  001D30  500E               	movf	i2___aodiv@divisor+5,w,c
  5772  001D32  5A06               	subwfb	i2___aodiv@dividend+5,f,c
  5773  001D34  500F               	movf	i2___aodiv@divisor+6,w,c
  5774  001D36  5A07               	subwfb	i2___aodiv@dividend+6,f,c
  5775  001D38  5010               	movf	i2___aodiv@divisor+7,w,c
  5776  001D3A  5A08               	subwfb	i2___aodiv@dividend+7,f,c
  5777  001D3C  8013               	bsf	i2___aodiv@quotient,0,c
  5778  001D3E                     i2l2287:
  5779  001D3E  90D8               	bcf	status,0,c
  5780  001D40  3210               	rrcf	i2___aodiv@divisor+7,f,c
  5781  001D42  320F               	rrcf	i2___aodiv@divisor+6,f,c
  5782  001D44  320E               	rrcf	i2___aodiv@divisor+5,f,c
  5783  001D46  320D               	rrcf	i2___aodiv@divisor+4,f,c
  5784  001D48  320C               	rrcf	i2___aodiv@divisor+3,f,c
  5785  001D4A  320B               	rrcf	i2___aodiv@divisor+2,f,c
  5786  001D4C  320A               	rrcf	i2___aodiv@divisor+1,f,c
  5787  001D4E  3209               	rrcf	i2___aodiv@divisor,f,c
  5788  001D50  2E11               	decfsz	i2___aodiv@counter,f,c
  5789  001D52  D7C9               	goto	i2u170_40
  5790  001D54                     i2l2291:
  5791  001D54  5012               	movf	i2___aodiv@sign,w,c
  5792  001D56  B4D8               	btfsc	status,2,c
  5793  001D58  D010               	goto	i2l2295
  5794  001D5A  1E1A               	comf	i2___aodiv@quotient+7,f,c
  5795  001D5C  1E19               	comf	i2___aodiv@quotient+6,f,c
  5796  001D5E  1E18               	comf	i2___aodiv@quotient+5,f,c
  5797  001D60  1E17               	comf	i2___aodiv@quotient+4,f,c
  5798  001D62  1E16               	comf	i2___aodiv@quotient+3,f,c
  5799  001D64  1E15               	comf	i2___aodiv@quotient+2,f,c
  5800  001D66  1E14               	comf	i2___aodiv@quotient+1,f,c
  5801  001D68  6C13               	negf	i2___aodiv@quotient,c
  5802  001D6A  0E00               	movlw	0
  5803  001D6C  2214               	addwfc	i2___aodiv@quotient+1,f,c
  5804  001D6E  2215               	addwfc	i2___aodiv@quotient+2,f,c
  5805  001D70  2216               	addwfc	i2___aodiv@quotient+3,f,c
  5806  001D72  2217               	addwfc	i2___aodiv@quotient+4,f,c
  5807  001D74  2218               	addwfc	i2___aodiv@quotient+5,f,c
  5808  001D76  2219               	addwfc	i2___aodiv@quotient+6,f,c
  5809  001D78  221A               	addwfc	i2___aodiv@quotient+7,f,c
  5810  001D7A                     i2l2295:
  5811  001D7A  C013  F001         	movff	i2___aodiv@quotient,?i2___aodiv
  5812  001D7E  C014  F002         	movff	i2___aodiv@quotient+1,?i2___aodiv+1
  5813  001D82  C015  F003         	movff	i2___aodiv@quotient+2,?i2___aodiv+2
  5814  001D86  C016  F004         	movff	i2___aodiv@quotient+3,?i2___aodiv+3
  5815  001D8A  C017  F005         	movff	i2___aodiv@quotient+4,?i2___aodiv+4
  5816  001D8E  C018  F006         	movff	i2___aodiv@quotient+5,?i2___aodiv+5
  5817  001D92  C019  F007         	movff	i2___aodiv@quotient+6,?i2___aodiv+6
  5818  001D96  C01A  F008         	movff	i2___aodiv@quotient+7,?i2___aodiv+7
  5819  001D9A  0012               	return		;funcret
  5820  001D9C                     __end_ofi2___aodiv:
  5821                           	opt callstack 0
  5822                           
  5823 ;; *************** function i2_lcdInst *****************
  5824 ;; Defined at:
  5825 ;;		line 64 in file "lcd.c"
  5826 ;; Parameters:    Size  Location     Type
  5827 ;;  data            1    wreg     unsigned char 
  5828 ;; Auto vars:     Size  Location     Type
  5829 ;;  data            1    3[COMRAM] unsigned char 
  5830 ;; Return value:  Size  Location     Type
  5831 ;;                  1    wreg      void 
  5832 ;; Registers used:
  5833 ;;		wreg, status,2, status,0, cstack
  5834 ;; Tracked objects:
  5835 ;;		On entry : 0/0
  5836 ;;		On exit  : 0/0
  5837 ;;		Unchanged: 0/0
  5838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5840 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5842 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5843 ;;Total ram usage:        1 bytes
  5844 ;; Hardware stack levels used:    1
  5845 ;; Hardware stack levels required when called:    3
  5846 ;; This function calls:
  5847 ;;		i2_send_byte
  5848 ;; This function is called by:
  5849 ;;		_SW_ISR
  5850 ;; This function uses a non-reentrant model
  5851 ;;
  5852                           
  5853                           	psect	text33
  5854  0027F0                     __ptext33:
  5855                           	opt callstack 0
  5856  0027F0                     i2_lcdInst:
  5857                           	opt callstack 14
  5858                           
  5859                           ;incstack = 0
  5860                           ;i2lcdInst@data stored from wreg
  5861  0027F0  6E04               	movwf	i2lcdInst@data,c
  5862                           
  5863                           ;lcd.c: 65:     LATDbits.LATD2 = 0;
  5864  0027F2  948C               	bcf	3980,2,c	;volatile
  5865                           
  5866                           ;lcd.c: 66:     send_byte(data);
  5867  0027F4  5004               	movf	i2lcdInst@data,w,c
  5868  0027F6  ECD9  F013         	call	i2_send_byte
  5869  0027FA  0012               	return		;funcret
  5870  0027FC                     __end_ofi2_lcdInst:
  5871                           	opt callstack 0
  5872                           
  5873 ;; *************** function i2_send_byte *****************
  5874 ;; Defined at:
  5875 ;;		line 55 in file "lcd.c"
  5876 ;; Parameters:    Size  Location     Type
  5877 ;;  data            1    wreg     unsigned char 
  5878 ;; Auto vars:     Size  Location     Type
  5879 ;;  data            1    2[COMRAM] unsigned char 
  5880 ;; Return value:  Size  Location     Type
  5881 ;;                  1    wreg      void 
  5882 ;; Registers used:
  5883 ;;		wreg, status,2, status,0, cstack
  5884 ;; Tracked objects:
  5885 ;;		On entry : 0/0
  5886 ;;		On exit  : 0/0
  5887 ;;		Unchanged: 0/0
  5888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5890 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5892 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5893 ;;Total ram usage:        1 bytes
  5894 ;; Hardware stack levels used:    1
  5895 ;; Hardware stack levels required when called:    2
  5896 ;; This function calls:
  5897 ;;		i2_send_nibble
  5898 ;; This function is called by:
  5899 ;;		i2_lcdInst
  5900 ;;		i2_putch
  5901 ;; This function uses a non-reentrant model
  5902 ;;
  5903                           
  5904                           	psect	text34
  5905  0027B2                     __ptext34:
  5906                           	opt callstack 0
  5907  0027B2                     i2_send_byte:
  5908                           	opt callstack 10
  5909                           
  5910                           ;incstack = 0
  5911                           ;i2send_byte@data stored from wreg
  5912  0027B2  6E03               	movwf	i2send_byte@data,c
  5913                           
  5914                           ;lcd.c: 57:     send_nibble(data >> 4);
  5915  0027B4  3803               	swapf	i2send_byte@data,w,c
  5916  0027B6  0B0F               	andlw	15
  5917  0027B8  ECCE  F013         	call	i2_send_nibble
  5918                           
  5919                           ;lcd.c: 60:     send_nibble(data);
  5920  0027BC  5003               	movf	i2send_byte@data,w,c
  5921  0027BE  ECCE  F013         	call	i2_send_nibble
  5922  0027C2  0012               	return		;funcret
  5923  0027C4                     __end_ofi2_send_byte:
  5924                           	opt callstack 0
  5925                           
  5926 ;; *************** function i2_send_nibble *****************
  5927 ;; Defined at:
  5928 ;;		line 44 in file "lcd.c"
  5929 ;; Parameters:    Size  Location     Type
  5930 ;;  data            1    wreg     unsigned char 
  5931 ;; Auto vars:     Size  Location     Type
  5932 ;;  data            1    1[COMRAM] unsigned char 
  5933 ;; Return value:  Size  Location     Type
  5934 ;;                  1    wreg      void 
  5935 ;; Registers used:
  5936 ;;		wreg, status,2, status,0, cstack
  5937 ;; Tracked objects:
  5938 ;;		On entry : 0/0
  5939 ;;		On exit  : 0/0
  5940 ;;		Unchanged: 0/0
  5941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5943 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5945 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5946 ;;Total ram usage:        1 bytes
  5947 ;; Hardware stack levels used:    1
  5948 ;; Hardware stack levels required when called:    1
  5949 ;; This function calls:
  5950 ;;		i2_pulse_e
  5951 ;; This function is called by:
  5952 ;;		i2_send_byte
  5953 ;; This function uses a non-reentrant model
  5954 ;;
  5955                           
  5956                           	psect	text35
  5957  00279C                     __ptext35:
  5958                           	opt callstack 0
  5959  00279C                     i2_send_nibble:
  5960                           	opt callstack 10
  5961                           
  5962                           ;incstack = 0
  5963                           ;i2send_nibble@data stored from wreg
  5964  00279C  6E02               	movwf	i2send_nibble@data,c
  5965                           
  5966                           ;lcd.c: 46:     LATD = (unsigned char)(LATD & 0x0F);
  5967  00279E  508C               	movf	3980,w,c	;volatile
  5968  0027A0  0B0F               	andlw	15
  5969  0027A2  6E8C               	movwf	3980,c	;volatile
  5970                           
  5971                           ;lcd.c: 47:     LATD = (unsigned char)((data << 4) | LATD);
  5972  0027A4  3802               	swapf	i2send_nibble@data,w,c
  5973  0027A6  0BF0               	andlw	240
  5974  0027A8  108C               	iorwf	3980,w,c	;volatile
  5975  0027AA  6E8C               	movwf	3980,c	;volatile
  5976                           
  5977                           ;lcd.c: 48:     pulse_e();
  5978  0027AC  EC7B  F013         	call	i2_pulse_e	;wreg free
  5979  0027B0  0012               	return		;funcret
  5980  0027B2                     __end_ofi2_send_nibble:
  5981                           	opt callstack 0
  5982                           
  5983 ;; *************** function i2_pulse_e *****************
  5984 ;; Defined at:
  5985 ;;		line 28 in file "lcd.c"
  5986 ;; Parameters:    Size  Location     Type
  5987 ;;		None
  5988 ;; Auto vars:     Size  Location     Type
  5989 ;;  pulse_e         1    0[COMRAM] unsigned char 
  5990 ;; Return value:  Size  Location     Type
  5991 ;;                  1    wreg      void 
  5992 ;; Registers used:
  5993 ;;		wreg
  5994 ;; Tracked objects:
  5995 ;;		On entry : 0/0
  5996 ;;		On exit  : 0/0
  5997 ;;		Unchanged: 0/0
  5998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6000 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6002 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6003 ;;Total ram usage:        1 bytes
  6004 ;; Hardware stack levels used:    1
  6005 ;; This function calls:
  6006 ;;		Nothing
  6007 ;; This function is called by:
  6008 ;;		i2_send_nibble
  6009 ;; This function uses a non-reentrant model
  6010 ;;
  6011                           
  6012                           	psect	text36
  6013  0026F6                     __ptext36:
  6014                           	opt callstack 0
  6015  0026F6                     i2_pulse_e:
  6016                           	opt callstack 10
  6017                           
  6018                           ;lcd.c: 29:     unsigned char interruptState = INTCONbits.GIE;
  6019                           
  6020                           ;incstack = 0
  6021  0026F6  0E00               	movlw	0
  6022  0026F8  BEF2               	btfsc	4082,7,c	;volatile
  6023  0026FA  0E01               	movlw	1
  6024  0026FC  6E01               	movwf	i2pulse_e@interruptState,c
  6025                           
  6026                           ;lcd.c: 30:     (INTCONbits.GIE = 0);
  6027  0026FE  9EF2               	bcf	4082,7,c	;volatile
  6028                           
  6029                           ;lcd.c: 31:     LATDbits.LATD3 = 1;
  6030  002700  868C               	bsf	3980,3,c	;volatile
  6031                           
  6032                           ;lcd.c: 34:     _delay((unsigned long)((25)*(10000000/4000000.0)));
  6033  002702  0E14               	movlw	20
  6034  002704                     i2u265_47:
  6035  002704  2EE8               	decfsz	wreg,f,c
  6036  002706  D7FE               	bra	i2u265_47
  6037  002708  D000               	nop2	
  6038                           
  6039                           ;lcd.c: 35:     LATDbits.LATD3 = 0;
  6040  00270A  968C               	bcf	3980,3,c	;volatile
  6041                           
  6042                           ;lcd.c: 36:     _delay((unsigned long)((100)*(10000000/4000000.0)));
  6043  00270C  0E53               	movlw	83
  6044  00270E                     i2u266_47:
  6045  00270E  2EE8               	decfsz	wreg,f,c
  6046  002710  D7FE               	bra	i2u266_47
  6047  002712  F000               	nop	
  6048                           
  6049                           ;lcd.c: 37:     INTCONbits.GIE = interruptState;
  6050  002714  B001               	btfsc	i2pulse_e@interruptState,0,c
  6051  002716  D002               	bra	i2u116_45
  6052  002718  9EF2               	bcf	4082,7,c	;volatile
  6053  00271A  D001               	bra	i2u116_46
  6054  00271C                     i2u116_45:
  6055  00271C  8EF2               	bsf	4082,7,c	;volatile
  6056  00271E                     i2u116_46:
  6057  00271E  0012               	return		;funcret
  6058  002720                     __end_ofi2_pulse_e:
  6059                           	opt callstack 0
  6060                           
  6061 ;; *************** function ___awdiv *****************
  6062 ;; Defined at:
  6063 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  6064 ;; Parameters:    Size  Location     Type
  6065 ;;  dividend        2    0[COMRAM] int 
  6066 ;;  divisor         2    2[COMRAM] int 
  6067 ;; Auto vars:     Size  Location     Type
  6068 ;;  quotient        2    6[COMRAM] int 
  6069 ;;  sign            1    5[COMRAM] unsigned char 
  6070 ;;  counter         1    4[COMRAM] unsigned char 
  6071 ;; Return value:  Size  Location     Type
  6072 ;;                  2    0[COMRAM] int 
  6073 ;; Registers used:
  6074 ;;		wreg, status,2, status,0
  6075 ;; Tracked objects:
  6076 ;;		On entry : 0/0
  6077 ;;		On exit  : 0/0
  6078 ;;		Unchanged: 0/0
  6079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6080 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6081 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6083 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6084 ;;Total ram usage:        8 bytes
  6085 ;; Hardware stack levels used:    1
  6086 ;; This function calls:
  6087 ;;		Nothing
  6088 ;; This function is called by:
  6089 ;;		_SW_ISR
  6090 ;; This function uses a non-reentrant model
  6091 ;;
  6092                           
  6093                           	psect	text37
  6094  0022B8                     __ptext37:
  6095                           	opt callstack 0
  6096  0022B8                     ___awdiv:
  6097                           	opt callstack 17
  6098                           
  6099                           ;incstack = 0
  6100  0022B8  0E00               	movlw	0
  6101  0022BA  6E06               	movwf	___awdiv@sign,c
  6102  0022BC  AE04               	btfss	___awdiv@divisor+1,7,c
  6103  0022BE  D006               	goto	i2l2751
  6104  0022C0  6C03               	negf	___awdiv@divisor,c
  6105  0022C2  1E04               	comf	___awdiv@divisor+1,f,c
  6106  0022C4  B0D8               	btfsc	status,0,c
  6107  0022C6  2A04               	incf	___awdiv@divisor+1,f,c
  6108  0022C8  0E01               	movlw	1
  6109  0022CA  6E06               	movwf	___awdiv@sign,c
  6110  0022CC                     i2l2751:
  6111  0022CC  AE02               	btfss	___awdiv@dividend+1,7,c
  6112  0022CE  D006               	goto	i2l2757
  6113  0022D0  6C01               	negf	___awdiv@dividend,c
  6114  0022D2  1E02               	comf	___awdiv@dividend+1,f,c
  6115  0022D4  B0D8               	btfsc	status,0,c
  6116  0022D6  2A02               	incf	___awdiv@dividend+1,f,c
  6117  0022D8  0E01               	movlw	1
  6118  0022DA  1A06               	xorwf	___awdiv@sign,f,c
  6119  0022DC                     i2l2757:
  6120  0022DC  0E00               	movlw	0
  6121  0022DE  6E08               	movwf	___awdiv@quotient+1,c
  6122  0022E0  0E00               	movlw	0
  6123  0022E2  6E07               	movwf	___awdiv@quotient,c
  6124  0022E4  5003               	movf	___awdiv@divisor,w,c
  6125  0022E6  1004               	iorwf	___awdiv@divisor+1,w,c
  6126  0022E8  B4D8               	btfsc	status,2,c
  6127  0022EA  D01C               	goto	i2l2779
  6128  0022EC  0E01               	movlw	1
  6129  0022EE  6E05               	movwf	___awdiv@counter,c
  6130  0022F0  D004               	goto	i2l2765
  6131  0022F2                     i2l2763:
  6132  0022F2  90D8               	bcf	status,0,c
  6133  0022F4  3603               	rlcf	___awdiv@divisor,f,c
  6134  0022F6  3604               	rlcf	___awdiv@divisor+1,f,c
  6135  0022F8  2A05               	incf	___awdiv@counter,f,c
  6136  0022FA                     i2l2765:
  6137  0022FA  AE04               	btfss	___awdiv@divisor+1,7,c
  6138  0022FC  D7FA               	goto	i2l2763
  6139  0022FE                     i2u217_40:
  6140  0022FE  90D8               	bcf	status,0,c
  6141  002300  3607               	rlcf	___awdiv@quotient,f,c
  6142  002302  3608               	rlcf	___awdiv@quotient+1,f,c
  6143  002304  5003               	movf	___awdiv@divisor,w,c
  6144  002306  5C01               	subwf	___awdiv@dividend,w,c
  6145  002308  5004               	movf	___awdiv@divisor+1,w,c
  6146  00230A  5802               	subwfb	___awdiv@dividend+1,w,c
  6147  00230C  A0D8               	btfss	status,0,c
  6148  00230E  D005               	goto	i2l2775
  6149  002310  5003               	movf	___awdiv@divisor,w,c
  6150  002312  5E01               	subwf	___awdiv@dividend,f,c
  6151  002314  5004               	movf	___awdiv@divisor+1,w,c
  6152  002316  5A02               	subwfb	___awdiv@dividend+1,f,c
  6153  002318  8007               	bsf	___awdiv@quotient,0,c
  6154  00231A                     i2l2775:
  6155  00231A  90D8               	bcf	status,0,c
  6156  00231C  3204               	rrcf	___awdiv@divisor+1,f,c
  6157  00231E  3203               	rrcf	___awdiv@divisor,f,c
  6158  002320  2E05               	decfsz	___awdiv@counter,f,c
  6159  002322  D7ED               	goto	i2u217_40
  6160  002324                     i2l2779:
  6161  002324  5006               	movf	___awdiv@sign,w,c
  6162  002326  B4D8               	btfsc	status,2,c
  6163  002328  D004               	goto	i2l2783
  6164  00232A  6C07               	negf	___awdiv@quotient,c
  6165  00232C  1E08               	comf	___awdiv@quotient+1,f,c
  6166  00232E  B0D8               	btfsc	status,0,c
  6167  002330  2A08               	incf	___awdiv@quotient+1,f,c
  6168  002332                     i2l2783:
  6169  002332  C007  F001         	movff	___awdiv@quotient,?___awdiv
  6170  002336  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  6171  00233A  0012               	return		;funcret
  6172  00233C                     __end_of___awdiv:
  6173                           	opt callstack 0
  6174                           
  6175                           	psect	rparam
  6176  0000                     
  6177                           	psect	temp
  6178  000078                     btemp:
  6179                           	opt callstack 0
  6180  000078                     	ds	1
  6181  0000                     int$flags	set	btemp
  6182  0000                     wtemp8	set	btemp+1
  6183  0000                     ttemp5	set	btemp+1
  6184  0000                     ttemp6	set	btemp+4
  6185  0000                     ttemp7	set	btemp+8
  6186                           tosu	equ	0xFFF
  6187                           tosh	equ	0xFFE
  6188                           tosl	equ	0xFFD
  6189                           stkptr	equ	0xFFC
  6190                           pclatu	equ	0xFFB
  6191                           pclath	equ	0xFFA
  6192                           pcl	equ	0xFF9
  6193                           tblptru	equ	0xFF8
  6194                           tblptrh	equ	0xFF7
  6195                           tblptrl	equ	0xFF6
  6196                           tablat	equ	0xFF5
  6197                           prodh	equ	0xFF4
  6198                           prodl	equ	0xFF3
  6199                           indf0	equ	0xFEF
  6200                           postinc0	equ	0xFEE
  6201                           postdec0	equ	0xFED
  6202                           preinc0	equ	0xFEC
  6203                           plusw0	equ	0xFEB
  6204                           fsr0h	equ	0xFEA
  6205                           fsr0l	equ	0xFE9
  6206                           wreg	equ	0xFE8
  6207                           indf1	equ	0xFE7
  6208                           postinc1	equ	0xFE6
  6209                           postdec1	equ	0xFE5
  6210                           preinc1	equ	0xFE4
  6211                           plusw1	equ	0xFE3
  6212                           fsr1h	equ	0xFE2
  6213                           fsr1l	equ	0xFE1
  6214                           bsr	equ	0xFE0
  6215                           indf2	equ	0xFDF
  6216                           postinc2	equ	0xFDE
  6217                           postdec2	equ	0xFDD
  6218                           preinc2	equ	0xFDC
  6219                           plusw2	equ	0xFDB
  6220                           fsr2h	equ	0xFDA
  6221                           fsr2l	equ	0xFD9
  6222                           status	equ	0xFD8


Data Sizes:
    Strings     37
    Constant    6
    Data        0
    BSS         55
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    108     119
    BANK0           128    107     119
    BANK1           256      0      32
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_6(CODE[3]), STR_5(CODE[5]), STR_4(CODE[5]), STR_3(CODE[10]), 
		 -> STR_2(CODE[11]), STR_1(CODE[6]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1090_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_6(CODE[3]), STR_5(CODE[5]), STR_4(CODE[5]), STR_3(CODE[10]), 
		 -> STR_2(CODE[11]), STR_1(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 11
		 -> STR_6(CODE[3]), STR_5(CODE[5]), STR_4(CODE[5]), STR_3(CODE[10]), 
		 -> STR_2(CODE[11]), STR_1(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _SW_ISR in COMRAM

    _SW_ISR->i2_printf
    i2_printf->i2_vfprintf
    i2_vfprintf->i2_vfpfcnvrt
    i2_vfpfcnvrt->i2_dtoa
    i2_dtoa->i2_pad
    i2_pad->i2_fputs
    i2_fputs->i2_fputc
    i2_fputc->i2_putch
    i2_putch->i2_send_byte
    i2_abs->i2___aomod
    i2_lcdInst->i2_send_byte
    i2_send_byte->i2_send_nibble
    i2_send_nibble->i2_pulse_e

Critical Paths under _main in BANK0

    _main->_full_drive
    _initLCD->_lcdInst
    _lcdInst->_send_byte
    _full_drive->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_send_byte
    _send_byte->_send_nibble
    _send_nibble->_pulse_e
    _abs->___aomod

Critical Paths under _SW_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _SW_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SW_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SW_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SW_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SW_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _SW_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _SW_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SW_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SW_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SW_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SW_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SW_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _SW_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _SW_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _SW_ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   14106
                                            103 BANK0      4     4      0
                         _full_drive
                            _initLCD
                            _lcdInst
                             _printf
                        _system_init
 ---------------------------------------------------------------------------------
 (1) _system_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     245
                                              4 BANK0      1     1      0
                            _lcdInst
                          _send_byte
                        _send_nibble
 ---------------------------------------------------------------------------------
 (1) _lcdInst                                              1     1      0     111
                                              3 BANK0      1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (1) _full_drive                                           4     2      2    6989
                                             99 BANK0      4     2      2
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    6715
                                             91 BANK0      8     4      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6255
                                             83 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    5886
                                             67 BANK0     16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4448
                                             31 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2799
                                             20 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1280
                                             13 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     879
                                              4 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0     111
                                              3 BANK0      1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (6) _send_byte                                            1     1      0      89
                                              2 BANK0      1     1      0
                        _send_nibble
 ---------------------------------------------------------------------------------
 (7) _send_nibble                                          1     1      0      45
                                              1 BANK0      1     1      0
                            _pulse_e
 ---------------------------------------------------------------------------------
 (8) _pulse_e                                              1     1      0      23
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _SW_ISR                                              9     9      0    4659
                                             99 COMRAM     9     9      0
                            ___awdiv
                          i2_lcdInst
                           i2_printf
 ---------------------------------------------------------------------------------
 (14) i2_printf                                            8     4      4    4096
                                             91 COMRAM     8     4      4
                            ___awdiv (ARG)
                         i2_vfprintf
 ---------------------------------------------------------------------------------
 (15) i2_vfprintf                                          8     2      6    3990
                                             83 COMRAM     8     2      6
                        i2_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (16) i2_vfpfcnvrt                                        42    36      6    3786
                                             67 COMRAM    16    10      6
                             i2_dtoa
                            i2_fputc
 ---------------------------------------------------------------------------------
 (17) i2_dtoa                                             36    26     10    2898
                                             31 COMRAM    36    26     10
                          i2___aodiv
                          i2___aomod
                              i2_abs
                              i2_pad
 ---------------------------------------------------------------------------------
 (18) i2_pad                                              11     5      6    1599
                                             20 COMRAM    11     5      6
                            i2_fputc
                            i2_fputs
                           i2_strlen
 ---------------------------------------------------------------------------------
 (19) i2_strlen                                            4     2      2     116
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (19) i2_fputs                                             7     3      4     680
                                             13 COMRAM     7     3      4
                            i2_fputc
 ---------------------------------------------------------------------------------
 (17) i2_fputc                                             9     5      4     479
                                              4 COMRAM     9     5      4
                            i2_putch
 ---------------------------------------------------------------------------------
 (18) i2_putch                                             1     1      0     111
                                              3 COMRAM     1     1      0
                        i2_send_byte
 ---------------------------------------------------------------------------------
 (18) i2_abs                                               4     2      2      92
                                             18 COMRAM     4     2      2
                          i2___aomod (ARG)
 ---------------------------------------------------------------------------------
 (18) i2___aomod                                          18     2     16     348
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (18) i2___aodiv                                          26    10     16     352
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (14) i2_lcdInst                                           1     1      0     111
                                              3 COMRAM     1     1      0
                        i2_send_byte
 ---------------------------------------------------------------------------------
 (19) i2_send_byte                                         1     1      0      89
                                              2 COMRAM     1     1      0
                      i2_send_nibble
 ---------------------------------------------------------------------------------
 (20) i2_send_nibble                                       1     1      0      45
                                              1 COMRAM     1     1      0
                          i2_pulse_e
 ---------------------------------------------------------------------------------
 (21) i2_pulse_e                                           1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (14) ___awdiv                                             8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 21
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _full_drive
     _printf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
   _initLCD
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _send_byte
       _send_nibble
         _pulse_e
     _send_nibble
       _pulse_e
   _lcdInst
     _send_byte
       _send_nibble
         _pulse_e
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _fputc
           _putch
             _send_byte
               _send_nibble
                 _pulse_e
   _system_init

 _SW_ISR (ROOT)
   ___awdiv
   i2_lcdInst
     i2_send_byte
       i2_send_nibble
         i2_pulse_e
   i2_printf
     ___awdiv (ARG)
     i2_vfprintf (ARG)
       i2_vfpfcnvrt
         i2_dtoa
           i2___aodiv
           i2___aomod
           i2_abs
             i2___aomod (ARG)
           i2_pad
             i2_fputc
               i2_putch
                 i2_send_byte
                   i2_send_nibble
                     i2_pulse_e
             i2_fputs
               i2_fputc
                 i2_putch
                   i2_send_byte
                     i2_send_nibble
                       i2_pulse_e
             i2_strlen
         i2_fputc
           i2_putch
             i2_send_byte
               i2_send_nibble
                 i2_pulse_e

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      20       7       12.5%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     6B      77       5       93.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     6C      77       1       94.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     10E      34        0.0%
DATA                 0      0     10E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Apr 04 00:06:26 2019

    __end_ofi2_send_byte 27C4              __CFG_CPD$ON 000000             ___awdiv@sign 0006  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000              __CFG_OSC$HS 000000  
    __end_of_system_init 276A                      l241 13EE                      l228 21B2  
                    l239 13E6                      l951 2606             __CFG_CPB$OFF 000000  
     i2___aodiv@quotient 0013                      _abs 25DC                      _cnt 0074  
                    _pad 2180                      wreg 000FE8      __end_ofi2_vfpfcnvrt 1B0A  
             i2_dtoa$629 0032             __CFG_LVP$OFF 000000    __end_ofi2_send_nibble 27B2  
           __CFG_WDT$OFF 000000                     l2003 23C6                     ?_abs 0092  
                   l2021 2556                     l2113 1C32                     l2105 1BF6  
                   l2017 253E                     l2025 264C                     l2027 2652  
                   l2051 219A                     l2109 1C0C                     l2141 1E64  
                   l2133 1E08                     l2125 1DCA                     l2061 21D6  
                   l2205 1512                     l2135 1E1C                     l2055 21AA  
                   l2081 1B38                     l2145 1E7A                     l2129 1DEE  
                   l2065 2202                     l2057 21BC                     l2225 1578  
                   l2093 1B86                     l2149 1EA0                     l2229 1590  
                   l2095 1B9A                     l2087 1B60                     l2191 1408  
                   l2177 13CA                     l2195 1418                     l2363 192E  
                   l2357 18F2                     l2373 1952                     l2367 193A  
                   l2447 249A                     l2607 11BA                     l2551 10B0  
                   l2449 24C0                     l2801 1FEE                     l2645 1244  
                   l2567 1126                     l2817 203C                     l2827 2080  
                   ?_pad 0094                     l2687 12E6                     STR_1 101C  
                   STR_2 1007                     STR_3 1012                     STR_4 1027  
                   STR_5 1022                     STR_6 1019                     u1200 2406  
                   u1310 25EC                     u2200 1FFE                     u2210 2060  
                   u1155 269A                     u1420 1E20                     u1156 269C  
                   u1180 23BE                     u1341 1B66                     _LATA 000F89  
                   u1510 13DC                     _LATB 000F8A                     _LATC 000F8B  
                   u1360 1B9E                     u1600 1562                     _LATD 000F8C  
                   _LATE 000F8D                     u1530 1402                     u2307 2370  
                   u1540 1522                     u2317 2394                     u1470 139C  
                   u2407 1106                     u2327 104E                     u1560 1544  
                   u1480 139E                     u1561 1542                     u2417 111C  
                   u2337 1064                     u2257 200C                     u1570 1552  
                   u2507 1220                     u2427 1148                     u2347 107A  
                   u2267 2070                     u1580 1556                     u1820 1874  
                   u2517 123A                     u2437 1162                     u2357 1090  
                   u2277 208E                     u2607 134C                     u2527 1274  
                   u2447 117C                     u2367 10A6                     u2287 2344  
                   u2617 1366                     u2537 128E                     u2457 1196  
                   u2377 10C4                     u2297 235E                     u2627 2680  
                   u2547 12A8                     u2467 11B0                     u2387 10DA  
                   u2637 268A                     u2557 12C2                     u2477 11D2  
                   u2397 10F0                     u2567 12DC                     u2487 11EC  
                   u2577 12FE                     u2497 1206                     u2587 1318  
                   u2597 1332                     abs@a 0092                     _dbuf 0100  
                   _main 1FE6                     _dtoa 1372                     _prec 00EF  
                   _time 006D                     _nout 00EB                     pad@i 009B  
                   pad@p 0098                     fsr1h 000FE2                     fsr2h 000FDA  
                   indf2 000FDF                     fsr1l 000FE1                     pad@w 009D  
                   fsr2l 000FD9                     btemp 0078                     start 000E  
          __CFG_IESO$OFF 000000          __end_ofi2_fputc 2486          __end_ofi2_fputs 25A6  
        __end_ofi2_putch 27F0            __CFG_MCLRE$ON 000000             ___param_bank 000000  
                  ??_abs 0094                    ??_pad 009A               i2_vfprintf 24DC  
        __end_of___aodiv 1C54                    ?_main 0001                    ?_dtoa 009F  
        __end_of___aomod 1EC2          __end_of___awdiv 233C          ___awdiv@divisor 0003  
                  i2l113 215C                    i2l241 1636                    i2l228 224E  
                  i2l239 162E                    i2l951 2638          ___awdiv@counter 0005  
           vfpfcnvrt@fmt 00C5                    _TMR0H 000FD7                    _TMR0L 000FD6  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95                    _TRISE 000F96                    i2_abs 2610  
                  i2_pad 221E            __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
        __end_of_lcdInst 27D4           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
        __end_of_initLCD 23AC           __CFG_EBTRB$OFF 000000                    _flags 00F1  
                  _count 00F3                    _fputc 23AC                    _fputs 2532  
                  pad@fp 0094                    _width 00ED                    _putch 27D4  
                  main@i 00E9                    dtoa@d 00A1                    dtoa@i 00C1  
                  dtoa@n 00B9                    dtoa@p 00B3                    dtoa@s 00B7  
                  dtoa@w 00B5                    tablat 000FF5          send_nibble@data 0081  
        __end_of_pulse_e 269E                    ttemp5 0079                    ttemp6 007C  
                  ttemp7 0080                    status 000FD8                    wtemp8 0079  
     __size_ofi2___aodiv 0148       __size_ofi2___aomod 0124           __CFG_PBADEN$ON 000000  
            i2_send_byte 27B2         __end_ofi2_printf 26CC         __end_ofi2_strlen 26F6  
        __initialization 25A6              _system_init 2748       __size_ofi2_lcdInst 000C  
           __end_of_main 20CE             __end_of_dtoa 15BA               i2printf@ap 0062  
            i2_vfpfcnvrt 1988            i2vfpfcnvrt@ap 0048            i2vfpfcnvrt@fp 0044  
          i2vfpfcnvrt@ll 004C                   ??_main 00E7                   ??_dtoa 00A9  
          __activetblptr 000001       __size_ofi2_pulse_e 002A                   ?i2_abs 0013  
                 ?i2_pad 0015             ?_send_nibble 0001                   ?_fputc 0084  
                 ?_fputs 008D         ___awdiv@dividend 0001                   ?_putch 0001  
                 i2l2311 1F12                   i2l2039 2432                   i2l2241 2246  
                 i2l2401 1650                   i2l2331 1FC4                   i2l2323 1F88  
                 i2l2315 1F2C                   i2l2307 1EEE                   i2l2155 2578  
                 i2l2163 26D6                   i2l2251 229E                   i2l2243 2258  
                 i2l2317 1F40                   i2l2165 26DA                   i2l2237 2238  
                 i2l2405 1660                   i2l2263 1C80                   i2l2327 1F9E  
                 i2l2159 258E                   i2l2247 2270                   i2l2415 1758  
                 i2l2275 1CCE                   i2l2291 1D54                   i2l2435 17C0  
                 i2l2507 24F0                   i2l2277 1CE2                   i2l2269 1CA8  
                 i2l2509 2516                   i2l2295 1D7A                   i2l2287 1D3E  
                 i2l2439 17D8                   i2l2387 1610                   i2l2475 1AB4  
                 i2l2469 1A78                   i2l2485 1AD6                   i2l2751 22CC  
                 i2l2479 1ABE                   i2l2763 22F2                   i2l2765 22FA  
                 i2l2757 22DC                   i2l2783 2332                   i2l2775 231A  
                 i2l2779 2324                ??i2_fputc 0009                ??i2_fputs 0012  
              ??i2_putch 0004                   _SSPADD 000FC8                   _SSPBUF 000FC9  
         i2___aodiv@sign 0012                   i2abs@a 0013                   i2_dtoa 15BA  
                 _SW_ISR 0008                   i2pad@i 001C                   i2pad@p 0019  
                 i2pad@w 001E           __CFG_XINST$OFF 000000             vfprintf@cfmt 00D9  
         i2___aomod@sign 0012                ??___aodiv 0090            i2vfprintf@fmt 0056  
              ??___aomod 0090                ??___awdiv 0005           __CFG_STVREN$ON 000000  
            ?i2_vfprintf 0054                   clear_0 25AC                   clear_1 25B8  
                 clear_2 25C4         ___awdiv@quotient 0007                ??_lcdInst 0083  
                 _printf 2720                   pad@buf 0096                   dtoa@fp 009F  
                 _strlen 2642                ??_initLCD 0084                   fputc@c 0084  
                 fputs@c 0091                   fputs@i 0092        __end_ofi2___aodiv 1D9C  
                 fputs@s 008D        __end_ofi2___aomod 1FE6             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
     i2___aomod@dividend 0001         __end_of_vfprintf 24DC                ??_pulse_e 0080  
      __end_ofi2_lcdInst 27FC    pulse_e@interruptState 0080               __accesstop 0080  
__end_of__initialization 25CA            ___rparam_used 000001        __end_ofi2_pulse_e 2720  
    full_drive@direction 00E6            __end_ofi2_abs 2642            __end_ofi2_pad 22B8  
         __pcstackCOMRAM 0001            __end_of_fputc 241A            __end_of_fputs 256E  
          __end_of_putch 27E4              i2printf@fmt 005C              i2printf@ret 0060  
            i2putch@data 0004                  ??i2_abs 0015                  ??i2_pad 001B  
         i2vfpfcnvrt@fmt 0046                ?i2_printf 005C                ?i2_strlen 0001  
                ??_fputc 0088                  ??_fputs 0091                  ??_putch 0083  
             __pbssBANK0 00EB               __pbssBANK1 0100      __size_ofi2_vfprintf 0056  
                ?i2_dtoa 0020                  ?_SW_ISR 0001       __size_of_send_byte 0018  
                ?_printf 00DB                  ?_strlen 0080       __size_of_vfpfcnvrt 0186  
             ??i2_printf 0060               ??i2_strlen 0003                  _SSPCON1 000FC6  
                _SSPCON2 000FC5                  _SSPSTAT 000FC7                  i2_fputc 241A  
                i2_fputs 256E     __size_of_send_nibble 001A                  i2pad@fp 0015  
                i2_putch 27E4                  i2dtoa@d 0022                  i2dtoa@i 0042  
                i2dtoa@n 003A                  i2dtoa@p 0034                  i2dtoa@s 0038  
                i2dtoa@w 0036          __size_ofi2_dtoa 0248          __size_of_SW_ISR 2178  
           ?i2_send_byte 0001                  __Hparam 0000                  __Lparam 0000  
           ?_system_init 0001                  ___aodiv 1B0A                  ___aomod 1D9C  
                ___awdiv 22B8                ?_vfprintf 00D3           i2vfprintf@cfmt 005A  
           __psmallconst 1000   __size_ofi2_send_nibble 0016             ?i2_vfpfcnvrt 0044  
                __pcinit 25A6               _full_drive 102E                  __ramtop 1000  
                _lcdInst 27C4                  __ptext0 1FE6                  __ptext1 2748  
                __ptext2 233C                  __ptext3 27C4                  __ptext4 102E  
                __ptext5 2720                  __ptext6 2486                  __ptext7 1802  
                __ptext8 1372                  __ptext9 2180          __size_of_printf 0028  
              _T0CONbits 000FD5          __size_of_strlen 002E                  _initLCD 233C  
           __size_of_abs 0034             __size_of_pad 009E                  _pulse_e 2670  
i2pulse_e@interruptState 0001           __pintcode_body 20CE     end_of_initialization 25CA  
  __end_of_LCD_SIZE_HORZ 1006        __end_of_send_byte 279C    __end_of_LCD_SIZE_VERT 1005  
                fputc@fp 0086                  int_func 20CE                  fputs@fp 008F  
      __end_of_vfpfcnvrt 1988                  postdec2 000FDD                  postinc0 000FEE  
                postinc1 000FE6                  postinc2 000FDE             ??i2_vfprintf 005A  
             ??_vfprintf 00D9                  strlen@a 0082                  strlen@s 0080  
      i2___aodiv@divisor 0009        i2___aodiv@counter 0011                _TRISCbits 000F94  
              i2___aodiv 1C54                i2___aomod 1EC2            i2_send_nibble 279C  
              i2_lcdInst 27F0               _stepper_no 0076       __end_ofi2_vfprintf 2532  
          send_byte@data 0082           __end_ofi2_dtoa 1802           __end_of_SW_ISR 2180  
              i2_pulse_e 26F6              vfpfcnvrt@ap 00C7              vfpfcnvrt@fp 00C3  
            vfpfcnvrt@ll 00CB              ?_full_drive 00E3                i2fputc@fp 0007  
          i2lcdInst@data 0004                i2fputs@fp 0010           __end_of_printf 2748  
         __end_of_strlen 2670      start_initialization 25A6              __end_of_abs 2610  
            __end_of_pad 221E               ?i2___aodiv 0001               ?i2___aomod 0001  
         ?i2_send_nibble 0001        __size_ofi2_printf 002E        __size_ofi2_strlen 002A  
              i2strlen@a 0003                i2strlen@s 0001               ?i2_lcdInst 0001  
               ??i2_dtoa 002A                 ??_SW_ISR 0064              vfprintf@fmt 00D5  
           i2vfprintf@ap 0058             i2vfprintf@fp 0054     __size_ofi2_send_byte 0012  
             ?i2_pulse_e 0001         __CFG_LPT1OSC$OFF 000000     __size_of_system_init 0022  
               ??_printf 00DF        i2___aomod@divisor 0009                 ??_strlen 0082  
      i2___aomod@counter 0011     __size_ofi2_vfpfcnvrt 0182              __pbssCOMRAM 006D  
          __pcstackBANK0 0080         ___aodiv@dividend 0080                 ?i2_fputc 0005  
               ?i2_fputs 000E                 ?i2_putch 0001      __size_of_full_drive 0344  
      __CFG_CCP2MX$PORTC 000000                __pintcode 0008                 ?___aodiv 0080  
               ?___aomod 0080                 ?___awdiv 0001         ___aodiv@quotient 0092  
               ?_lcdInst 0001        __size_of_vfprintf 0056     full_drive@stepper_no 00E3  
               ?_initLCD 0001              __smallconst 1000           __size_ofi2_abs 0032  
         __size_ofi2_pad 009A          ??i2_send_nibble 0002            ??_send_nibble 0081  
               ?_pulse_e 0001              ??i2___aodiv 0011              ??i2___aomod 0011  
         __size_of_fputc 006E           __size_of_fputs 003C           __size_of_putch 0010  
            ??i2_lcdInst 0004                 _LATAbits 000F89                 _LATCbits 000F8B  
               _LATDbits 000F8C                 _LATEbits 000F8D                _send_byte 2784  
         _LCD_LINE1_ADDR 1003           _LCD_LINE2_ADDR 1006           _LCD_LINE3_ADDR 1002  
         _LCD_LINE4_ADDR 1001                 i2u202_40 19FA                 i2u124_40 242A  
               i2u116_45 271C                 i2u116_46 271E                 i2u126_40 2472  
               i2u217_40 22FE                 i2u170_40 1CE6                 i2u190_40 164A  
               i2u191_40 1766                 i2u176_40 1F44                 i2u184_40 15E2  
               i2u168_41 1CAE                 i2u264_47 210C                 i2u193_40 1788  
               i2u185_40 15E4                 i2u193_41 1786                 i2u265_47 2704  
               i2u194_40 1796                 i2u266_47 270E                 i2u179_40 261E  
               i2u195_40 179C                 i2u188_40 1624                 i2u197_40 17AA  
       __CFG_WDTPS$32768 000000              ??i2_pulse_e 0001                _vfpfcnvrt 1802  
               i2_printf 269E                 i2pad@buf 0017                 i2dtoa@fp 0020  
               i2_strlen 26CC                 i2fputc@c 0005                 i2fputs@c 0012  
               i2fputs@i 0013                 i2fputs@s 000E         __size_ofi2_fputc 006C  
 __end_of_LCD_LINE1_ADDR 1004         __size_ofi2_fputs 0038   __end_of_LCD_LINE2_ADDR 1007  
 __end_of_LCD_LINE3_ADDR 1003   __end_of_LCD_LINE4_ADDR 1002         __size_ofi2_putch 000C  
    __end_of_send_nibble 2784        i2send_nibble@data 0002               ?_send_byte 0001  
               __Hrparam 0000               vfprintf@ap 00D7                 __Lrparam 0000  
             vfprintf@fp 00D3             __Lsmallconst 1000       __CFG_BOREN$SBORDIS 000000  
       __size_of___aodiv 014A         __size_of___aomod 0126         __size_of___awdiv 0084  
           ??_full_drive 00E5               ?_vfpfcnvrt 00C3          ___aodiv@divisor 0088  
        ___aodiv@counter 0090         __size_of_lcdInst 0010         __size_of_initLCD 0070  
               _dtoa$629 00B1                 __ptext10 2642                 __ptext11 2532  
               __ptext12 23AC                 __ptext21 269E                 __ptext13 27D4  
               __ptext30 2610                 __ptext22 24DC                 __ptext14 2784  
               __ptext31 1EC2                 __ptext23 1988                 __ptext15 276A  
               __ptext32 1C54                 __ptext24 15BA                 __ptext16 2670  
               __ptext33 27F0                 __ptext25 221E                 __ptext17 25DC  
               __ptext34 27B2                 __ptext26 26CC                 __ptext18 1D9C  
               __ptext35 279C                 __ptext27 256E                 __ptext19 1B0A  
               __ptext36 26F6                 __ptext28 241A                 __ptext37 22B8  
               __ptext29 27E4         __size_of_pulse_e 002E            __size_of_main 00E8  
          __size_of_dtoa 0248       __end_of_full_drive 1372                 int$flags 0078  
               _vfprintf 2486                printf@fmt 00DB         ___aomod@dividend 0080  
              putch@data 0083               _INTCONbits 000FF2              _send_nibble 276A  
               intlevel2 0000            _LCD_SIZE_HORZ 1005            _LCD_SIZE_VERT 1004  
          ??i2_send_byte 0003              ??_send_byte 0082            ??_system_init 0080  
               printf@ap 00E1          i2send_byte@data 0003          ___aomod@divisor 0088  
          ??i2_vfpfcnvrt 004A              ??_vfpfcnvrt 00C9              lcdInst@data 0083  
        ___aomod@counter 0090              _SSPCON1bits 000FC6              _SSPCON2bits 000FC5  
            _timer_count 00F5             ___aodiv@sign 0091       i2___aodiv@dividend 0001  
           ___aomod@sign 0091  
